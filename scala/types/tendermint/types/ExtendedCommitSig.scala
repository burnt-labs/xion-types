// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.types

/** ExtendedCommitSig retains all the same fields as CommitSig but adds vote
  * extension-related fields. We use two signatures to ensure backwards compatibility.
  * That is the digest of the original signature is still the same in prior versions
  *
  * @param extension
  *   Vote extension data
  * @param extensionSignature
  *   Vote extension signature
  */
@SerialVersionUID(0L)
final case class ExtendedCommitSig(
    blockIdFlag: tendermint.types.BlockIDFlag = tendermint.types.BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN,
    validatorAddress: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    signature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    extension: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    extensionSignature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ExtendedCommitSig] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = blockIdFlag.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = validatorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      if (timestamp.isDefined) {
        val __value = timestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = signature
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, __value)
        }
      };
      
      {
        val __value = extension
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, __value)
        }
      };
      
      {
        val __value = extensionSignature
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = blockIdFlag.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = validatorAddress
        if (!__v.isEmpty) {
          _output__.writeBytes(2, __v)
        }
      };
      timestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = signature
        if (!__v.isEmpty) {
          _output__.writeBytes(4, __v)
        }
      };
      {
        val __v = extension
        if (!__v.isEmpty) {
          _output__.writeBytes(5, __v)
        }
      };
      {
        val __v = extensionSignature
        if (!__v.isEmpty) {
          _output__.writeBytes(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withBlockIdFlag(__v: tendermint.types.BlockIDFlag): ExtendedCommitSig = copy(blockIdFlag = __v)
    def withValidatorAddress(__v: _root_.com.google.protobuf.ByteString): ExtendedCommitSig = copy(validatorAddress = __v)
    def getTimestamp: com.google.protobuf.timestamp.Timestamp = timestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearTimestamp: ExtendedCommitSig = copy(timestamp = _root_.scala.None)
    def withTimestamp(__v: com.google.protobuf.timestamp.Timestamp): ExtendedCommitSig = copy(timestamp = Option(__v))
    def withSignature(__v: _root_.com.google.protobuf.ByteString): ExtendedCommitSig = copy(signature = __v)
    def withExtension(__v: _root_.com.google.protobuf.ByteString): ExtendedCommitSig = copy(extension = __v)
    def withExtensionSignature(__v: _root_.com.google.protobuf.ByteString): ExtendedCommitSig = copy(extensionSignature = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = blockIdFlag.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = validatorAddress
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => timestamp.orNull
        case 4 => {
          val __t = signature
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 5 => {
          val __t = extension
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 6 => {
          val __t = extensionSignature
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(blockIdFlag.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PByteString(validatorAddress)
        case 3 => timestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PByteString(signature)
        case 5 => _root_.scalapb.descriptors.PByteString(extension)
        case 6 => _root_.scalapb.descriptors.PByteString(extensionSignature)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.types.ExtendedCommitSig.type = tendermint.types.ExtendedCommitSig
    // @@protoc_insertion_point(GeneratedMessage[tendermint.types.ExtendedCommitSig])
}

object ExtendedCommitSig extends scalapb.GeneratedMessageCompanion[tendermint.types.ExtendedCommitSig] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.types.ExtendedCommitSig] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.types.ExtendedCommitSig = {
    var __blockIdFlag: tendermint.types.BlockIDFlag = tendermint.types.BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN
    var __validatorAddress: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __signature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __extension: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __extensionSignature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __blockIdFlag = tendermint.types.BlockIDFlag.fromValue(_input__.readEnum())
        case 18 =>
          __validatorAddress = _input__.readBytes()
        case 26 =>
          __timestamp = _root_.scala.Option(__timestamp.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __signature = _input__.readBytes()
        case 42 =>
          __extension = _input__.readBytes()
        case 50 =>
          __extensionSignature = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.types.ExtendedCommitSig(
        blockIdFlag = __blockIdFlag,
        validatorAddress = __validatorAddress,
        timestamp = __timestamp,
        signature = __signature,
        extension = __extension,
        extensionSignature = __extensionSignature,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.types.ExtendedCommitSig] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.types.ExtendedCommitSig(
        blockIdFlag = tendermint.types.BlockIDFlag.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(tendermint.types.BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN.scalaValueDescriptor).number),
        validatorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        timestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        signature = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        extension = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        extensionSignature = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.types.TypesProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.types.TypesProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => tendermint.types.BlockIDFlag
    }
  }
  lazy val defaultInstance = tendermint.types.ExtendedCommitSig(
    blockIdFlag = tendermint.types.BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN,
    validatorAddress = _root_.com.google.protobuf.ByteString.EMPTY,
    timestamp = _root_.scala.None,
    signature = _root_.com.google.protobuf.ByteString.EMPTY,
    extension = _root_.com.google.protobuf.ByteString.EMPTY,
    extensionSignature = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class ExtendedCommitSigLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.ExtendedCommitSig]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.types.ExtendedCommitSig](_l) {
    def blockIdFlag: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.BlockIDFlag] = field(_.blockIdFlag)((c_, f_) => c_.copy(blockIdFlag = f_))
    def validatorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.validatorAddress)((c_, f_) => c_.copy(validatorAddress = f_))
    def timestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTimestamp)((c_, f_) => c_.copy(timestamp = _root_.scala.Option(f_)))
    def optionalTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def signature: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
    def extension: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.extension)((c_, f_) => c_.copy(extension = f_))
    def extensionSignature: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.extensionSignature)((c_, f_) => c_.copy(extensionSignature = f_))
  }
  final val BLOCK_ID_FLAG_FIELD_NUMBER = 1
  final val VALIDATOR_ADDRESS_FIELD_NUMBER = 2
  final val TIMESTAMP_FIELD_NUMBER = 3
  final val SIGNATURE_FIELD_NUMBER = 4
  final val EXTENSION_FIELD_NUMBER = 5
  final val EXTENSION_SIGNATURE_FIELD_NUMBER = 6
  def of(
    blockIdFlag: tendermint.types.BlockIDFlag,
    validatorAddress: _root_.com.google.protobuf.ByteString,
    timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    signature: _root_.com.google.protobuf.ByteString,
    extension: _root_.com.google.protobuf.ByteString,
    extensionSignature: _root_.com.google.protobuf.ByteString
  ): _root_.tendermint.types.ExtendedCommitSig = _root_.tendermint.types.ExtendedCommitSig(
    blockIdFlag,
    validatorAddress,
    timestamp,
    signature,
    extension,
    extensionSignature
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.types.ExtendedCommitSig])
}
