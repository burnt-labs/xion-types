// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.types

object TypesProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.GogoProto,
    com.google.protobuf.timestamp.TimestampProto,
    tendermint.crypto.ProofProto,
    tendermint.version.TypesProto,
    tendermint.types.ValidatorProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      tendermint.types.PartSetHeader,
      tendermint.types.Part,
      tendermint.types.BlockID,
      tendermint.types.Header,
      tendermint.types.Data,
      tendermint.types.Vote,
      tendermint.types.Commit,
      tendermint.types.CommitSig,
      tendermint.types.ExtendedCommit,
      tendermint.types.ExtendedCommitSig,
      tendermint.types.Proposal,
      tendermint.types.SignedHeader,
      tendermint.types.LightBlock,
      tendermint.types.BlockMeta,
      tendermint.types.TxProof
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Chx0ZW5kZXJtaW50L3R5cGVzL3R5cGVzLnByb3RvEhB0ZW5kZXJtaW50LnR5cGVzGhRnb2dvcHJvdG8vZ29nby5wcm90bxofZ
  29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoddGVuZGVybWludC9jcnlwdG8vcHJvb2YucHJvdG8aHnRlbmRlcm1pbnQvd
  mVyc2lvbi90eXBlcy5wcm90bxogdGVuZGVybWludC90eXBlcy92YWxpZGF0b3IucHJvdG8iUAoNUGFydFNldEhlYWRlchIgCgV0b
  3RhbBgBIAEoDUIK4j8HEgV0b3RhbFIFdG90YWwSHQoEaGFzaBgCIAEoDEIJ4j8GEgRoYXNoUgRoYXNoIooBCgRQYXJ0EiAKBWluZ
  GV4GAEgASgNQgriPwcSBWluZGV4UgVpbmRleBIgCgVieXRlcxgCIAEoDEIK4j8HEgVieXRlc1IFYnl0ZXMSPgoFcHJvb2YYAyABK
  AsyGC50ZW5kZXJtaW50LmNyeXB0by5Qcm9vZkIO4j8HEgVwcm9vZsjeHwBSBXByb29mIokBCgdCbG9ja0lEEh0KBGhhc2gYASABK
  AxCCeI/BhIEaGFzaFIEaGFzaBJfCg9wYXJ0X3NldF9oZWFkZXIYAiABKAsyHy50ZW5kZXJtaW50LnR5cGVzLlBhcnRTZXRIZWFkZ
  XJCFuI/DxINcGFydFNldEhlYWRlcsjeHwBSDXBhcnRTZXRIZWFkZXIi1wYKBkhlYWRlchJJCgd2ZXJzaW9uGAEgASgLMh0udGVuZ
  GVybWludC52ZXJzaW9uLkNvbnNlbnN1c0IQ4j8JEgd2ZXJzaW9uyN4fAFIHdmVyc2lvbhIyCghjaGFpbl9pZBgCIAEoCUIX4j8JE
  gdjaGFpbklk4t4fB0NoYWluSURSB2NoYWluSWQSIwoGaGVpZ2h0GAMgASgDQgviPwgSBmhlaWdodFIGaGVpZ2h0EkEKBHRpbWUYB
  CABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQhHiPwYSBHRpbWXI3h8AkN8fAVIEdGltZRJTCg1sYXN0X2Jsb2NrX2lkG
  AUgASgLMhkudGVuZGVybWludC50eXBlcy5CbG9ja0lEQhTiPw0SC2xhc3RCbG9ja0lkyN4fAFILbGFzdEJsb2NrSWQSPQoQbGFzd
  F9jb21taXRfaGFzaBgGIAEoDEIT4j8QEg5sYXN0Q29tbWl0SGFzaFIObGFzdENvbW1pdEhhc2gSKgoJZGF0YV9oYXNoGAcgASgMQ
  g3iPwoSCGRhdGFIYXNoUghkYXRhSGFzaBI8Cg92YWxpZGF0b3JzX2hhc2gYCCABKAxCE+I/EBIOdmFsaWRhdG9yc0hhc2hSDnZhb
  GlkYXRvcnNIYXNoEkkKFG5leHRfdmFsaWRhdG9yc19oYXNoGAkgASgMQhfiPxQSEm5leHRWYWxpZGF0b3JzSGFzaFISbmV4dFZhb
  GlkYXRvcnNIYXNoEjkKDmNvbnNlbnN1c19oYXNoGAogASgMQhLiPw8SDWNvbnNlbnN1c0hhc2hSDWNvbnNlbnN1c0hhc2gSJwoIY
  XBwX2hhc2gYCyABKAxCDOI/CRIHYXBwSGFzaFIHYXBwSGFzaBJAChFsYXN0X3Jlc3VsdHNfaGFzaBgMIAEoDEIU4j8REg9sYXN0U
  mVzdWx0c0hhc2hSD2xhc3RSZXN1bHRzSGFzaBI2Cg1ldmlkZW5jZV9oYXNoGA0gASgMQhHiPw4SDGV2aWRlbmNlSGFzaFIMZXZpZ
  GVuY2VIYXNoEj8KEHByb3Bvc2VyX2FkZHJlc3MYDiABKAxCFOI/ERIPcHJvcG9zZXJBZGRyZXNzUg9wcm9wb3NlckFkZHJlc3MiI
  goERGF0YRIaCgN0eHMYASADKAxCCOI/BRIDdHhzUgN0eHMi2gQKBFZvdGUSPgoEdHlwZRgBIAEoDjIfLnRlbmRlcm1pbnQudHlwZ
  XMuU2lnbmVkTXNnVHlwZUIJ4j8GEgR0eXBlUgR0eXBlEiMKBmhlaWdodBgCIAEoA0IL4j8IEgZoZWlnaHRSBmhlaWdodBIgCgVyb
  3VuZBgDIAEoBUIK4j8HEgVyb3VuZFIFcm91bmQSUQoIYmxvY2tfaWQYBCABKAsyGS50ZW5kZXJtaW50LnR5cGVzLkJsb2NrSURCG
  +I/CRIHYmxvY2tJZMjeHwDi3h8HQmxvY2tJRFIHYmxvY2tJZBJQCgl0aW1lc3RhbXAYBSABKAsyGi5nb29nbGUucHJvdG9idWYuV
  GltZXN0YW1wQhbiPwsSCXRpbWVzdGFtcMjeHwCQ3x8BUgl0aW1lc3RhbXASQgoRdmFsaWRhdG9yX2FkZHJlc3MYBiABKAxCFeI/E
  hIQdmFsaWRhdG9yQWRkcmVzc1IQdmFsaWRhdG9yQWRkcmVzcxI8Cg92YWxpZGF0b3JfaW5kZXgYByABKAVCE+I/EBIOdmFsaWRhd
  G9ySW5kZXhSDnZhbGlkYXRvckluZGV4EiwKCXNpZ25hdHVyZRgIIAEoDEIO4j8LEglzaWduYXR1cmVSCXNpZ25hdHVyZRIsCglle
  HRlbnNpb24YCSABKAxCDuI/CxIJZXh0ZW5zaW9uUglleHRlbnNpb24SSAoTZXh0ZW5zaW9uX3NpZ25hdHVyZRgKIAEoDEIX4j8UE
  hJleHRlbnNpb25TaWduYXR1cmVSEmV4dGVuc2lvblNpZ25hdHVyZSL0AQoGQ29tbWl0EiMKBmhlaWdodBgBIAEoA0IL4j8IEgZoZ
  WlnaHRSBmhlaWdodBIgCgVyb3VuZBgCIAEoBUIK4j8HEgVyb3VuZFIFcm91bmQSUQoIYmxvY2tfaWQYAyABKAsyGS50ZW5kZXJta
  W50LnR5cGVzLkJsb2NrSURCG+I/CRIHYmxvY2tJZMjeHwDi3h8HQmxvY2tJRFIHYmxvY2tJZBJQCgpzaWduYXR1cmVzGAQgAygLM
  hsudGVuZGVybWludC50eXBlcy5Db21taXRTaWdCE+I/DBIKc2lnbmF0dXJlc8jeHwBSCnNpZ25hdHVyZXMipAIKCUNvbW1pdFNpZ
  xJTCg1ibG9ja19pZF9mbGFnGAEgASgOMh0udGVuZGVybWludC50eXBlcy5CbG9ja0lERmxhZ0IQ4j8NEgtibG9ja0lkRmxhZ1ILY
  mxvY2tJZEZsYWcSQgoRdmFsaWRhdG9yX2FkZHJlc3MYAiABKAxCFeI/EhIQdmFsaWRhdG9yQWRkcmVzc1IQdmFsaWRhdG9yQWRkc
  mVzcxJQCgl0aW1lc3RhbXAYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQhbiPwsSCXRpbWVzdGFtcMjeHwCQ3x8BU
  gl0aW1lc3RhbXASLAoJc2lnbmF0dXJlGAQgASgMQg7iPwsSCXNpZ25hdHVyZVIJc2lnbmF0dXJlIp0CCg5FeHRlbmRlZENvbW1pd
  BIjCgZoZWlnaHQYASABKANCC+I/CBIGaGVpZ2h0UgZoZWlnaHQSIAoFcm91bmQYAiABKAVCCuI/BxIFcm91bmRSBXJvdW5kElEKC
  GJsb2NrX2lkGAMgASgLMhkudGVuZGVybWludC50eXBlcy5CbG9ja0lEQhviPwkSB2Jsb2NrSWTI3h8A4t4fB0Jsb2NrSURSB2Jsb
  2NrSWQScQoTZXh0ZW5kZWRfc2lnbmF0dXJlcxgEIAMoCzIjLnRlbmRlcm1pbnQudHlwZXMuRXh0ZW5kZWRDb21taXRTaWdCG+I/F
  BISZXh0ZW5kZWRTaWduYXR1cmVzyN4fAFISZXh0ZW5kZWRTaWduYXR1cmVzIqQDChFFeHRlbmRlZENvbW1pdFNpZxJTCg1ibG9ja
  19pZF9mbGFnGAEgASgOMh0udGVuZGVybWludC50eXBlcy5CbG9ja0lERmxhZ0IQ4j8NEgtibG9ja0lkRmxhZ1ILYmxvY2tJZEZsY
  WcSQgoRdmFsaWRhdG9yX2FkZHJlc3MYAiABKAxCFeI/EhIQdmFsaWRhdG9yQWRkcmVzc1IQdmFsaWRhdG9yQWRkcmVzcxJQCgl0a
  W1lc3RhbXAYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQhbiPwsSCXRpbWVzdGFtcMjeHwCQ3x8BUgl0aW1lc3Rhb
  XASLAoJc2lnbmF0dXJlGAQgASgMQg7iPwsSCXNpZ25hdHVyZVIJc2lnbmF0dXJlEiwKCWV4dGVuc2lvbhgFIAEoDEIO4j8LEglle
  HRlbnNpb25SCWV4dGVuc2lvbhJIChNleHRlbnNpb25fc2lnbmF0dXJlGAYgASgMQhfiPxQSEmV4dGVuc2lvblNpZ25hdHVyZVISZ
  Xh0ZW5zaW9uU2lnbmF0dXJlIpADCghQcm9wb3NhbBI+CgR0eXBlGAEgASgOMh8udGVuZGVybWludC50eXBlcy5TaWduZWRNc2dUe
  XBlQgniPwYSBHR5cGVSBHR5cGUSIwoGaGVpZ2h0GAIgASgDQgviPwgSBmhlaWdodFIGaGVpZ2h0EiAKBXJvdW5kGAMgASgFQgriP
  wcSBXJvdW5kUgVyb3VuZBIqCglwb2xfcm91bmQYBCABKAVCDeI/ChIIcG9sUm91bmRSCHBvbFJvdW5kElEKCGJsb2NrX2lkGAUgA
  SgLMhkudGVuZGVybWludC50eXBlcy5CbG9ja0lEQhviPwkSB2Jsb2NrSWTI3h8A4t4fB0Jsb2NrSURSB2Jsb2NrSWQSUAoJdGltZ
  XN0YW1wGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIW4j8LEgl0aW1lc3RhbXDI3h8AkN8fAVIJdGltZXN0YW1wE
  iwKCXNpZ25hdHVyZRgHIAEoDEIO4j8LEglzaWduYXR1cmVSCXNpZ25hdHVyZSKMAQoMU2lnbmVkSGVhZGVyEj0KBmhlYWRlchgBI
  AEoCzIYLnRlbmRlcm1pbnQudHlwZXMuSGVhZGVyQgviPwgSBmhlYWRlclIGaGVhZGVyEj0KBmNvbW1pdBgCIAEoCzIYLnRlbmRlc
  m1pbnQudHlwZXMuQ29tbWl0QgviPwgSBmNvbW1pdFIGY29tbWl0IrwBCgpMaWdodEJsb2NrElYKDXNpZ25lZF9oZWFkZXIYASABK
  AsyHi50ZW5kZXJtaW50LnR5cGVzLlNpZ25lZEhlYWRlckIR4j8OEgxzaWduZWRIZWFkZXJSDHNpZ25lZEhlYWRlchJWCg12YWxpZ
  GF0b3Jfc2V0GAIgASgLMh4udGVuZGVybWludC50eXBlcy5WYWxpZGF0b3JTZXRCEeI/DhIMdmFsaWRhdG9yU2V0Ugx2YWxpZGF0b
  3JTZXQi9gEKCUJsb2NrTWV0YRJRCghibG9ja19pZBgBIAEoCzIZLnRlbmRlcm1pbnQudHlwZXMuQmxvY2tJREIb4j8JEgdibG9ja
  0lkyN4fAOLeHwdCbG9ja0lEUgdibG9ja0lkEi0KCmJsb2NrX3NpemUYAiABKANCDuI/CxIJYmxvY2tTaXplUglibG9ja1NpemUSQ
  QoGaGVhZGVyGAMgASgLMhgudGVuZGVybWludC50eXBlcy5IZWFkZXJCD+I/CBIGaGVhZGVyyN4fAFIGaGVhZGVyEiQKB251bV90e
  HMYBCABKANCC+I/CBIGbnVtVHhzUgZudW1UeHMikAEKB1R4UHJvb2YSKgoJcm9vdF9oYXNoGAEgASgMQg3iPwoSCHJvb3RIYXNoU
  ghyb290SGFzaBIdCgRkYXRhGAIgASgMQgniPwYSBGRhdGFSBGRhdGESOgoFcHJvb2YYAyABKAsyGC50ZW5kZXJtaW50LmNyeXB0b
  y5Qcm9vZkIK4j8HEgVwcm9vZlIFcHJvb2YqygIKDVNpZ25lZE1zZ1R5cGUSSAoXU0lHTkVEX01TR19UWVBFX1VOS05PV04QABor4
  j8ZEhdTSUdORURfTVNHX1RZUEVfVU5LTk9XToqdIAtVbmtub3duVHlwZRJIChdTSUdORURfTVNHX1RZUEVfUFJFVk9URRABGiviP
  xkSF1NJR05FRF9NU0dfVFlQRV9QUkVWT1RFip0gC1ByZXZvdGVUeXBlEk4KGVNJR05FRF9NU0dfVFlQRV9QUkVDT01NSVQQAhov4
  j8bEhlTSUdORURfTVNHX1RZUEVfUFJFQ09NTUlUip0gDVByZWNvbW1pdFR5cGUSSwoYU0lHTkVEX01TR19UWVBFX1BST1BPU0FME
  CAaLeI/GhIYU0lHTkVEX01TR19UWVBFX1BST1BPU0FMip0gDFByb3Bvc2FsVHlwZRoIiKMeAKikHgFCNVozZ2l0aHViLmNvbS9jb
  21ldGJmdC9jb21ldGJmdC9wcm90by90ZW5kZXJtaW50L3R5cGVzYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.GogoProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      tendermint.crypto.ProofProto.javaDescriptor,
      tendermint.version.TypesProto.javaDescriptor,
      tendermint.types.ValidatorProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}