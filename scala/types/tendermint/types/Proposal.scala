// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.types

@SerialVersionUID(0L)
final case class Proposal(
    `type`: tendermint.types.SignedMsgType = tendermint.types.SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN,
    height: _root_.scala.Long = 0L,
    round: _root_.scala.Int = 0,
    polRound: _root_.scala.Int = 0,
    blockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None,
    timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    signature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Proposal] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = `type`.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      
      {
        val __value = round
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
        }
      };
      
      {
        val __value = polRound
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      if (blockId.isDefined) {
        val __value = blockId.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (timestamp.isDefined) {
        val __value = timestamp.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = signature
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = `type`.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      {
        val __v = round
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      {
        val __v = polRound
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      blockId.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      timestamp.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = signature
        if (!__v.isEmpty) {
          _output__.writeBytes(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withType(__v: tendermint.types.SignedMsgType): Proposal = copy(`type` = __v)
    def withHeight(__v: _root_.scala.Long): Proposal = copy(height = __v)
    def withRound(__v: _root_.scala.Int): Proposal = copy(round = __v)
    def withPolRound(__v: _root_.scala.Int): Proposal = copy(polRound = __v)
    def getBlockId: tendermint.types.BlockID = blockId.getOrElse(tendermint.types.BlockID.defaultInstance)
    def clearBlockId: Proposal = copy(blockId = _root_.scala.None)
    def withBlockId(__v: tendermint.types.BlockID): Proposal = copy(blockId = Option(__v))
    def getTimestamp: com.google.protobuf.timestamp.Timestamp = timestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearTimestamp: Proposal = copy(timestamp = _root_.scala.None)
    def withTimestamp(__v: com.google.protobuf.timestamp.Timestamp): Proposal = copy(timestamp = Option(__v))
    def withSignature(__v: _root_.com.google.protobuf.ByteString): Proposal = copy(signature = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = round
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = polRound
          if (__t != 0) __t else null
        }
        case 5 => blockId.orNull
        case 6 => timestamp.orNull
        case 7 => {
          val __t = signature
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PLong(height)
        case 3 => _root_.scalapb.descriptors.PInt(round)
        case 4 => _root_.scalapb.descriptors.PInt(polRound)
        case 5 => blockId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => timestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => _root_.scalapb.descriptors.PByteString(signature)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.types.Proposal.type = tendermint.types.Proposal
    // @@protoc_insertion_point(GeneratedMessage[tendermint.types.Proposal])
}

object Proposal extends scalapb.GeneratedMessageCompanion[tendermint.types.Proposal] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.types.Proposal] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.types.Proposal = {
    var __type: tendermint.types.SignedMsgType = tendermint.types.SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN
    var __height: _root_.scala.Long = 0L
    var __round: _root_.scala.Int = 0
    var __polRound: _root_.scala.Int = 0
    var __blockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None
    var __timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __signature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __type = tendermint.types.SignedMsgType.fromValue(_input__.readEnum())
        case 16 =>
          __height = _input__.readInt64()
        case 24 =>
          __round = _input__.readInt32()
        case 32 =>
          __polRound = _input__.readInt32()
        case 42 =>
          __blockId = _root_.scala.Option(__blockId.fold(_root_.scalapb.LiteParser.readMessage[tendermint.types.BlockID](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __timestamp = _root_.scala.Option(__timestamp.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __signature = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.types.Proposal(
        `type` = __type,
        height = __height,
        round = __round,
        polRound = __polRound,
        blockId = __blockId,
        timestamp = __timestamp,
        signature = __signature,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.types.Proposal] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.types.Proposal(
        `type` = tendermint.types.SignedMsgType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(tendermint.types.SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN.scalaValueDescriptor).number),
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        round = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        polRound = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        blockId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[tendermint.types.BlockID]]),
        timestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        signature = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.types.TypesProto.javaDescriptor.getMessageTypes().get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.types.TypesProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 5 => __out = tendermint.types.BlockID
      case 6 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => tendermint.types.SignedMsgType
    }
  }
  lazy val defaultInstance = tendermint.types.Proposal(
    `type` = tendermint.types.SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN,
    height = 0L,
    round = 0,
    polRound = 0,
    blockId = _root_.scala.None,
    timestamp = _root_.scala.None,
    signature = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class ProposalLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.Proposal]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.types.Proposal](_l) {
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.SignedMsgType] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def round: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.round)((c_, f_) => c_.copy(round = f_))
    def polRound: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.polRound)((c_, f_) => c_.copy(polRound = f_))
    def blockId: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.BlockID] = field(_.getBlockId)((c_, f_) => c_.copy(blockId = _root_.scala.Option(f_)))
    def optionalBlockId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.types.BlockID]] = field(_.blockId)((c_, f_) => c_.copy(blockId = f_))
    def timestamp: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTimestamp)((c_, f_) => c_.copy(timestamp = _root_.scala.Option(f_)))
    def optionalTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def signature: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
  }
  final val TYPE_FIELD_NUMBER = 1
  final val HEIGHT_FIELD_NUMBER = 2
  final val ROUND_FIELD_NUMBER = 3
  final val POL_ROUND_FIELD_NUMBER = 4
  final val BLOCK_ID_FIELD_NUMBER = 5
  final val TIMESTAMP_FIELD_NUMBER = 6
  final val SIGNATURE_FIELD_NUMBER = 7
  def of(
    `type`: tendermint.types.SignedMsgType,
    height: _root_.scala.Long,
    round: _root_.scala.Int,
    polRound: _root_.scala.Int,
    blockId: _root_.scala.Option[tendermint.types.BlockID],
    timestamp: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    signature: _root_.com.google.protobuf.ByteString
  ): _root_.tendermint.types.Proposal = _root_.tendermint.types.Proposal(
    `type`,
    height,
    round,
    polRound,
    blockId,
    timestamp,
    signature
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.types.Proposal])
}
