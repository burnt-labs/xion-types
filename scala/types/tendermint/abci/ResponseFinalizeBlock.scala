// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.abci

/** @param events
  *   set of block events emmitted as part of executing the block
  * @param txResults
  *   the result of executing each transaction including the events
  *   the particular transction emitted. This should match the order
  *   of the transactions delivered in the block itself
  * @param validatorUpdates
  *   a list of updates to the validator set. These will reflect the validator set at current height + 2.
  * @param consensusParamUpdates
  *   updates to the consensus params, if any.
  * @param appHash
  *   app_hash is the hash of the applications' state which is used to confirm that execution of the transactions was
  *   deterministic. It is up to the application to decide which algorithm to use.
  */
@SerialVersionUID(0L)
final case class ResponseFinalizeBlock(
    events: _root_.scala.Seq[tendermint.abci.Event] = _root_.scala.Seq.empty,
    txResults: _root_.scala.Seq[tendermint.abci.ExecTxResult] = _root_.scala.Seq.empty,
    validatorUpdates: _root_.scala.Seq[tendermint.abci.ValidatorUpdate] = _root_.scala.Seq.empty,
    consensusParamUpdates: _root_.scala.Option[tendermint.types.ConsensusParams] = _root_.scala.None,
    appHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ResponseFinalizeBlock] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      events.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      txResults.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      validatorUpdates.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (consensusParamUpdates.isDefined) {
        val __value = consensusParamUpdates.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = appHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      events.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      txResults.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      validatorUpdates.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      consensusParamUpdates.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = appHash
        if (!__v.isEmpty) {
          _output__.writeBytes(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearEvents = copy(events = _root_.scala.Seq.empty)
    def addEvents(__vs: tendermint.abci.Event *): ResponseFinalizeBlock = addAllEvents(__vs)
    def addAllEvents(__vs: Iterable[tendermint.abci.Event]): ResponseFinalizeBlock = copy(events = events ++ __vs)
    def withEvents(__v: _root_.scala.Seq[tendermint.abci.Event]): ResponseFinalizeBlock = copy(events = __v)
    def clearTxResults = copy(txResults = _root_.scala.Seq.empty)
    def addTxResults(__vs: tendermint.abci.ExecTxResult *): ResponseFinalizeBlock = addAllTxResults(__vs)
    def addAllTxResults(__vs: Iterable[tendermint.abci.ExecTxResult]): ResponseFinalizeBlock = copy(txResults = txResults ++ __vs)
    def withTxResults(__v: _root_.scala.Seq[tendermint.abci.ExecTxResult]): ResponseFinalizeBlock = copy(txResults = __v)
    def clearValidatorUpdates = copy(validatorUpdates = _root_.scala.Seq.empty)
    def addValidatorUpdates(__vs: tendermint.abci.ValidatorUpdate *): ResponseFinalizeBlock = addAllValidatorUpdates(__vs)
    def addAllValidatorUpdates(__vs: Iterable[tendermint.abci.ValidatorUpdate]): ResponseFinalizeBlock = copy(validatorUpdates = validatorUpdates ++ __vs)
    def withValidatorUpdates(__v: _root_.scala.Seq[tendermint.abci.ValidatorUpdate]): ResponseFinalizeBlock = copy(validatorUpdates = __v)
    def getConsensusParamUpdates: tendermint.types.ConsensusParams = consensusParamUpdates.getOrElse(tendermint.types.ConsensusParams.defaultInstance)
    def clearConsensusParamUpdates: ResponseFinalizeBlock = copy(consensusParamUpdates = _root_.scala.None)
    def withConsensusParamUpdates(__v: tendermint.types.ConsensusParams): ResponseFinalizeBlock = copy(consensusParamUpdates = Option(__v))
    def withAppHash(__v: _root_.com.google.protobuf.ByteString): ResponseFinalizeBlock = copy(appHash = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => events
        case 2 => txResults
        case 3 => validatorUpdates
        case 4 => consensusParamUpdates.orNull
        case 5 => {
          val __t = appHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(events.iterator.map(_.toPMessage).toVector)
        case 2 => _root_.scalapb.descriptors.PRepeated(txResults.iterator.map(_.toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(validatorUpdates.iterator.map(_.toPMessage).toVector)
        case 4 => consensusParamUpdates.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PByteString(appHash)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.abci.ResponseFinalizeBlock.type = tendermint.abci.ResponseFinalizeBlock
    // @@protoc_insertion_point(GeneratedMessage[tendermint.abci.ResponseFinalizeBlock])
}

object ResponseFinalizeBlock extends scalapb.GeneratedMessageCompanion[tendermint.abci.ResponseFinalizeBlock] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.abci.ResponseFinalizeBlock] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.abci.ResponseFinalizeBlock = {
    val __events: _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.Event] = new _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.Event]
    val __txResults: _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.ExecTxResult] = new _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.ExecTxResult]
    val __validatorUpdates: _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.ValidatorUpdate] = new _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.ValidatorUpdate]
    var __consensusParamUpdates: _root_.scala.Option[tendermint.types.ConsensusParams] = _root_.scala.None
    var __appHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __events += _root_.scalapb.LiteParser.readMessage[tendermint.abci.Event](_input__)
        case 18 =>
          __txResults += _root_.scalapb.LiteParser.readMessage[tendermint.abci.ExecTxResult](_input__)
        case 26 =>
          __validatorUpdates += _root_.scalapb.LiteParser.readMessage[tendermint.abci.ValidatorUpdate](_input__)
        case 34 =>
          __consensusParamUpdates = _root_.scala.Option(__consensusParamUpdates.fold(_root_.scalapb.LiteParser.readMessage[tendermint.types.ConsensusParams](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __appHash = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.abci.ResponseFinalizeBlock(
        events = __events.result(),
        txResults = __txResults.result(),
        validatorUpdates = __validatorUpdates.result(),
        consensusParamUpdates = __consensusParamUpdates,
        appHash = __appHash,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.abci.ResponseFinalizeBlock] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.abci.ResponseFinalizeBlock(
        events = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[tendermint.abci.Event]]).getOrElse(_root_.scala.Seq.empty),
        txResults = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[tendermint.abci.ExecTxResult]]).getOrElse(_root_.scala.Seq.empty),
        validatorUpdates = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[tendermint.abci.ValidatorUpdate]]).getOrElse(_root_.scala.Seq.empty),
        consensusParamUpdates = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[tendermint.types.ConsensusParams]]),
        appHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.abci.TypesProto.javaDescriptor.getMessageTypes().get(34)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.abci.TypesProto.scalaDescriptor.messages(34)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = tendermint.abci.Event
      case 2 => __out = tendermint.abci.ExecTxResult
      case 3 => __out = tendermint.abci.ValidatorUpdate
      case 4 => __out = tendermint.types.ConsensusParams
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = tendermint.abci.ResponseFinalizeBlock(
    events = _root_.scala.Seq.empty,
    txResults = _root_.scala.Seq.empty,
    validatorUpdates = _root_.scala.Seq.empty,
    consensusParamUpdates = _root_.scala.None,
    appHash = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class ResponseFinalizeBlockLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.ResponseFinalizeBlock]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.abci.ResponseFinalizeBlock](_l) {
    def events: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[tendermint.abci.Event]] = field(_.events)((c_, f_) => c_.copy(events = f_))
    def txResults: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[tendermint.abci.ExecTxResult]] = field(_.txResults)((c_, f_) => c_.copy(txResults = f_))
    def validatorUpdates: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[tendermint.abci.ValidatorUpdate]] = field(_.validatorUpdates)((c_, f_) => c_.copy(validatorUpdates = f_))
    def consensusParamUpdates: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.ConsensusParams] = field(_.getConsensusParamUpdates)((c_, f_) => c_.copy(consensusParamUpdates = _root_.scala.Option(f_)))
    def optionalConsensusParamUpdates: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.types.ConsensusParams]] = field(_.consensusParamUpdates)((c_, f_) => c_.copy(consensusParamUpdates = f_))
    def appHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.appHash)((c_, f_) => c_.copy(appHash = f_))
  }
  final val EVENTS_FIELD_NUMBER = 1
  final val TX_RESULTS_FIELD_NUMBER = 2
  final val VALIDATOR_UPDATES_FIELD_NUMBER = 3
  final val CONSENSUS_PARAM_UPDATES_FIELD_NUMBER = 4
  final val APP_HASH_FIELD_NUMBER = 5
  def of(
    events: _root_.scala.Seq[tendermint.abci.Event],
    txResults: _root_.scala.Seq[tendermint.abci.ExecTxResult],
    validatorUpdates: _root_.scala.Seq[tendermint.abci.ValidatorUpdate],
    consensusParamUpdates: _root_.scala.Option[tendermint.types.ConsensusParams],
    appHash: _root_.com.google.protobuf.ByteString
  ): _root_.tendermint.abci.ResponseFinalizeBlock = _root_.tendermint.abci.ResponseFinalizeBlock(
    events,
    txResults,
    validatorUpdates,
    consensusParamUpdates,
    appHash
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.abci.ResponseFinalizeBlock])
}
