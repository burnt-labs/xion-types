// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.abci

/** @param log
  *   bytes data = 2; // use "value" instead.
  *   nondeterministic
  * @param info
  *   nondeterministic
  */
@SerialVersionUID(0L)
final case class ResponseQuery(
    code: _root_.scala.Int = 0,
    log: _root_.scala.Predef.String = "",
    info: _root_.scala.Predef.String = "",
    index: _root_.scala.Long = 0L,
    key: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    value: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    proofOps: _root_.scala.Option[tendermint.crypto.ProofOps] = _root_.scala.None,
    height: _root_.scala.Long = 0L,
    codespace: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ResponseQuery] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = code
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
        }
      };
      
      {
        val __value = log
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = info
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = index
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, __value)
        }
      };
      
      {
        val __value = key
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(6, __value)
        }
      };
      
      {
        val __value = value
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(7, __value)
        }
      };
      if (proofOps.isDefined) {
        val __value = proofOps.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(9, __value)
        }
      };
      
      {
        val __value = codespace
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = code
        if (__v != 0) {
          _output__.writeUInt32(1, __v)
        }
      };
      {
        val __v = log
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = info
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = index
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      {
        val __v = key
        if (!__v.isEmpty) {
          _output__.writeBytes(6, __v)
        }
      };
      {
        val __v = value
        if (!__v.isEmpty) {
          _output__.writeBytes(7, __v)
        }
      };
      proofOps.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeInt64(9, __v)
        }
      };
      {
        val __v = codespace
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withCode(__v: _root_.scala.Int): ResponseQuery = copy(code = __v)
    def withLog(__v: _root_.scala.Predef.String): ResponseQuery = copy(log = __v)
    def withInfo(__v: _root_.scala.Predef.String): ResponseQuery = copy(info = __v)
    def withIndex(__v: _root_.scala.Long): ResponseQuery = copy(index = __v)
    def withKey(__v: _root_.com.google.protobuf.ByteString): ResponseQuery = copy(key = __v)
    def withValue(__v: _root_.com.google.protobuf.ByteString): ResponseQuery = copy(value = __v)
    def getProofOps: tendermint.crypto.ProofOps = proofOps.getOrElse(tendermint.crypto.ProofOps.defaultInstance)
    def clearProofOps: ResponseQuery = copy(proofOps = _root_.scala.None)
    def withProofOps(__v: tendermint.crypto.ProofOps): ResponseQuery = copy(proofOps = Option(__v))
    def withHeight(__v: _root_.scala.Long): ResponseQuery = copy(height = __v)
    def withCodespace(__v: _root_.scala.Predef.String): ResponseQuery = copy(codespace = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = code
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = log
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = info
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = index
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = key
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 7 => {
          val __t = value
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 8 => proofOps.orNull
        case 9 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 10 => {
          val __t = codespace
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(code)
        case 3 => _root_.scalapb.descriptors.PString(log)
        case 4 => _root_.scalapb.descriptors.PString(info)
        case 5 => _root_.scalapb.descriptors.PLong(index)
        case 6 => _root_.scalapb.descriptors.PByteString(key)
        case 7 => _root_.scalapb.descriptors.PByteString(value)
        case 8 => proofOps.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => _root_.scalapb.descriptors.PLong(height)
        case 10 => _root_.scalapb.descriptors.PString(codespace)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.abci.ResponseQuery.type = tendermint.abci.ResponseQuery
    // @@protoc_insertion_point(GeneratedMessage[tendermint.abci.ResponseQuery])
}

object ResponseQuery extends scalapb.GeneratedMessageCompanion[tendermint.abci.ResponseQuery] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.abci.ResponseQuery] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.abci.ResponseQuery = {
    var __code: _root_.scala.Int = 0
    var __log: _root_.scala.Predef.String = ""
    var __info: _root_.scala.Predef.String = ""
    var __index: _root_.scala.Long = 0L
    var __key: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __value: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __proofOps: _root_.scala.Option[tendermint.crypto.ProofOps] = _root_.scala.None
    var __height: _root_.scala.Long = 0L
    var __codespace: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __code = _input__.readUInt32()
        case 26 =>
          __log = _input__.readStringRequireUtf8()
        case 34 =>
          __info = _input__.readStringRequireUtf8()
        case 40 =>
          __index = _input__.readInt64()
        case 50 =>
          __key = _input__.readBytes()
        case 58 =>
          __value = _input__.readBytes()
        case 66 =>
          __proofOps = _root_.scala.Option(__proofOps.fold(_root_.scalapb.LiteParser.readMessage[tendermint.crypto.ProofOps](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 72 =>
          __height = _input__.readInt64()
        case 82 =>
          __codespace = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.abci.ResponseQuery(
        code = __code,
        log = __log,
        info = __info,
        index = __index,
        key = __key,
        value = __value,
        proofOps = __proofOps,
        height = __height,
        codespace = __codespace,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.abci.ResponseQuery] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.abci.ResponseQuery(
        code = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        log = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        info = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        index = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        proofOps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[tendermint.crypto.ProofOps]]),
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        codespace = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.abci.TypesProto.javaDescriptor.getMessageTypes().get(23)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.abci.TypesProto.scalaDescriptor.messages(23)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 8 => __out = tendermint.crypto.ProofOps
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = tendermint.abci.ResponseQuery(
    code = 0,
    log = "",
    info = "",
    index = 0L,
    key = _root_.com.google.protobuf.ByteString.EMPTY,
    value = _root_.com.google.protobuf.ByteString.EMPTY,
    proofOps = _root_.scala.None,
    height = 0L,
    codespace = ""
  )
  implicit class ResponseQueryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.ResponseQuery]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.abci.ResponseQuery](_l) {
    def code: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.code)((c_, f_) => c_.copy(code = f_))
    def log: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.log)((c_, f_) => c_.copy(log = f_))
    def info: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.info)((c_, f_) => c_.copy(info = f_))
    def index: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.index)((c_, f_) => c_.copy(index = f_))
    def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.key)((c_, f_) => c_.copy(key = f_))
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.value)((c_, f_) => c_.copy(value = f_))
    def proofOps: _root_.scalapb.lenses.Lens[UpperPB, tendermint.crypto.ProofOps] = field(_.getProofOps)((c_, f_) => c_.copy(proofOps = _root_.scala.Option(f_)))
    def optionalProofOps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.crypto.ProofOps]] = field(_.proofOps)((c_, f_) => c_.copy(proofOps = f_))
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def codespace: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.codespace)((c_, f_) => c_.copy(codespace = f_))
  }
  final val CODE_FIELD_NUMBER = 1
  final val LOG_FIELD_NUMBER = 3
  final val INFO_FIELD_NUMBER = 4
  final val INDEX_FIELD_NUMBER = 5
  final val KEY_FIELD_NUMBER = 6
  final val VALUE_FIELD_NUMBER = 7
  final val PROOF_OPS_FIELD_NUMBER = 8
  final val HEIGHT_FIELD_NUMBER = 9
  final val CODESPACE_FIELD_NUMBER = 10
  def of(
    code: _root_.scala.Int,
    log: _root_.scala.Predef.String,
    info: _root_.scala.Predef.String,
    index: _root_.scala.Long,
    key: _root_.com.google.protobuf.ByteString,
    value: _root_.com.google.protobuf.ByteString,
    proofOps: _root_.scala.Option[tendermint.crypto.ProofOps],
    height: _root_.scala.Long,
    codespace: _root_.scala.Predef.String
  ): _root_.tendermint.abci.ResponseQuery = _root_.tendermint.abci.ResponseQuery(
    code,
    log,
    info,
    index,
    key,
    value,
    proofOps,
    height,
    codespace
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.abci.ResponseQuery])
}
