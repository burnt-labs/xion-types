// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.abci

@SerialVersionUID(0L)
final case class RequestQuery(
    data: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    path: _root_.scala.Predef.String = "",
    height: _root_.scala.Long = 0L,
    prove: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RequestQuery] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = data
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      
      {
        val __value = path
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = prove
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = data
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      {
        val __v = path
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = prove
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withData(__v: _root_.com.google.protobuf.ByteString): RequestQuery = copy(data = __v)
    def withPath(__v: _root_.scala.Predef.String): RequestQuery = copy(path = __v)
    def withHeight(__v: _root_.scala.Long): RequestQuery = copy(height = __v)
    def withProve(__v: _root_.scala.Boolean): RequestQuery = copy(prove = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = data
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = path
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = prove
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(data)
        case 2 => _root_.scalapb.descriptors.PString(path)
        case 3 => _root_.scalapb.descriptors.PLong(height)
        case 4 => _root_.scalapb.descriptors.PBoolean(prove)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.abci.RequestQuery.type = tendermint.abci.RequestQuery
    // @@protoc_insertion_point(GeneratedMessage[tendermint.abci.RequestQuery])
}

object RequestQuery extends scalapb.GeneratedMessageCompanion[tendermint.abci.RequestQuery] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.abci.RequestQuery] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.abci.RequestQuery = {
    var __data: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __path: _root_.scala.Predef.String = ""
    var __height: _root_.scala.Long = 0L
    var __prove: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __data = _input__.readBytes()
        case 18 =>
          __path = _input__.readStringRequireUtf8()
        case 24 =>
          __height = _input__.readInt64()
        case 32 =>
          __prove = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.abci.RequestQuery(
        data = __data,
        path = __path,
        height = __height,
        prove = __prove,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.abci.RequestQuery] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.abci.RequestQuery(
        data = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        path = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        prove = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.abci.TypesProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.abci.TypesProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = tendermint.abci.RequestQuery(
    data = _root_.com.google.protobuf.ByteString.EMPTY,
    path = "",
    height = 0L,
    prove = false
  )
  implicit class RequestQueryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.RequestQuery]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.abci.RequestQuery](_l) {
    def data: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.data)((c_, f_) => c_.copy(data = f_))
    def path: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.path)((c_, f_) => c_.copy(path = f_))
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def prove: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.prove)((c_, f_) => c_.copy(prove = f_))
  }
  final val DATA_FIELD_NUMBER = 1
  final val PATH_FIELD_NUMBER = 2
  final val HEIGHT_FIELD_NUMBER = 3
  final val PROVE_FIELD_NUMBER = 4
  def of(
    data: _root_.com.google.protobuf.ByteString,
    path: _root_.scala.Predef.String,
    height: _root_.scala.Long,
    prove: _root_.scala.Boolean
  ): _root_.tendermint.abci.RequestQuery = _root_.tendermint.abci.RequestQuery(
    data,
    path,
    height,
    prove
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.abci.RequestQuery])
}
