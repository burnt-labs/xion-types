// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.abci

@SerialVersionUID(0L)
final case class ResponseOfferSnapshot(
    result: tendermint.abci.ResponseOfferSnapshot.Result = tendermint.abci.ResponseOfferSnapshot.Result.UNKNOWN,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ResponseOfferSnapshot] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = result.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = result.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withResult(__v: tendermint.abci.ResponseOfferSnapshot.Result): ResponseOfferSnapshot = copy(result = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = result.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(result.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.abci.ResponseOfferSnapshot.type = tendermint.abci.ResponseOfferSnapshot
    // @@protoc_insertion_point(GeneratedMessage[tendermint.abci.ResponseOfferSnapshot])
}

object ResponseOfferSnapshot extends scalapb.GeneratedMessageCompanion[tendermint.abci.ResponseOfferSnapshot] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.abci.ResponseOfferSnapshot] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.abci.ResponseOfferSnapshot = {
    var __result: tendermint.abci.ResponseOfferSnapshot.Result = tendermint.abci.ResponseOfferSnapshot.Result.UNKNOWN
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __result = tendermint.abci.ResponseOfferSnapshot.Result.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.abci.ResponseOfferSnapshot(
        result = __result,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.abci.ResponseOfferSnapshot] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.abci.ResponseOfferSnapshot(
        result = tendermint.abci.ResponseOfferSnapshot.Result.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(tendermint.abci.ResponseOfferSnapshot.Result.UNKNOWN.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.abci.TypesProto.javaDescriptor.getMessageTypes().get(27)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.abci.TypesProto.scalaDescriptor.messages(27)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => tendermint.abci.ResponseOfferSnapshot.Result
    }
  }
  lazy val defaultInstance = tendermint.abci.ResponseOfferSnapshot(
    result = tendermint.abci.ResponseOfferSnapshot.Result.UNKNOWN
  )
  sealed abstract class Result(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = tendermint.abci.ResponseOfferSnapshot.Result
    type RecognizedType = tendermint.abci.ResponseOfferSnapshot.Result.Recognized
    def isUnknown: _root_.scala.Boolean = false
    def isAccept: _root_.scala.Boolean = false
    def isAbort: _root_.scala.Boolean = false
    def isReject: _root_.scala.Boolean = false
    def isRejectFormat: _root_.scala.Boolean = false
    def isRejectSender: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Result] = tendermint.abci.ResponseOfferSnapshot.Result
    final def asRecognized: _root_.scala.Option[tendermint.abci.ResponseOfferSnapshot.Result.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[tendermint.abci.ResponseOfferSnapshot.Result.Recognized])
  }
  
  object Result extends _root_.scalapb.GeneratedEnumCompanion[Result] {
    sealed trait Recognized extends Result
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Result] = this
    
    /** Unknown result, abort all snapshot restoration
      */
    @SerialVersionUID(0L)
    case object UNKNOWN extends Result(0) with Result.Recognized {
      val index = 0
      val name = "UNKNOWN"
      override def isUnknown: _root_.scala.Boolean = true
    }
    
    /** Snapshot accepted, apply chunks
      */
    @SerialVersionUID(0L)
    case object ACCEPT extends Result(1) with Result.Recognized {
      val index = 1
      val name = "ACCEPT"
      override def isAccept: _root_.scala.Boolean = true
    }
    
    /** Abort all snapshot restoration
      */
    @SerialVersionUID(0L)
    case object ABORT extends Result(2) with Result.Recognized {
      val index = 2
      val name = "ABORT"
      override def isAbort: _root_.scala.Boolean = true
    }
    
    /** Reject this specific snapshot, try others
      */
    @SerialVersionUID(0L)
    case object REJECT extends Result(3) with Result.Recognized {
      val index = 3
      val name = "REJECT"
      override def isReject: _root_.scala.Boolean = true
    }
    
    /** Reject all snapshots of this format, try others
      */
    @SerialVersionUID(0L)
    case object REJECT_FORMAT extends Result(4) with Result.Recognized {
      val index = 4
      val name = "REJECT_FORMAT"
      override def isRejectFormat: _root_.scala.Boolean = true
    }
    
    /** Reject all snapshots from the sender(s), try others
      */
    @SerialVersionUID(0L)
    case object REJECT_SENDER extends Result(5) with Result.Recognized {
      val index = 5
      val name = "REJECT_SENDER"
      override def isRejectSender: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Result(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(UNKNOWN, ACCEPT, ABORT, REJECT, REJECT_FORMAT, REJECT_SENDER)
    def fromValue(__value: _root_.scala.Int): Result = __value match {
      case 0 => UNKNOWN
      case 1 => ACCEPT
      case 2 => ABORT
      case 3 => REJECT
      case 4 => REJECT_FORMAT
      case 5 => REJECT_SENDER
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = tendermint.abci.ResponseOfferSnapshot.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = tendermint.abci.ResponseOfferSnapshot.scalaDescriptor.enums(0)
  }
  implicit class ResponseOfferSnapshotLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.ResponseOfferSnapshot]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.abci.ResponseOfferSnapshot](_l) {
    def result: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.ResponseOfferSnapshot.Result] = field(_.result)((c_, f_) => c_.copy(result = f_))
  }
  final val RESULT_FIELD_NUMBER = 1
  def of(
    result: tendermint.abci.ResponseOfferSnapshot.Result
  ): _root_.tendermint.abci.ResponseOfferSnapshot = _root_.tendermint.abci.ResponseOfferSnapshot(
    result
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.abci.ResponseOfferSnapshot])
}
