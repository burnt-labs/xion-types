// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.abci

/** @param validator
  *   The offending validator
  * @param height
  *   The height when the offense occurred
  * @param time
  *   The corresponding time where the offense occurred
  * @param totalVotingPower
  *   Total voting power of the validator set in case the ABCI application does
  *   not store historical validators.
  *   https://github.com/tendermint/tendermint/issues/4581
  */
@SerialVersionUID(0L)
final case class Misbehavior(
    `type`: tendermint.abci.MisbehaviorType = tendermint.abci.MisbehaviorType.UNKNOWN,
    validator: _root_.scala.Option[tendermint.abci.Validator] = _root_.scala.None,
    height: _root_.scala.Long = 0L,
    time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    totalVotingPower: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Misbehavior] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = `type`.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      if (validator.isDefined) {
        val __value = validator.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      if (time.isDefined) {
        val __value = time.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = totalVotingPower
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = `type`.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      validator.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      time.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = totalVotingPower
        if (__v != 0L) {
          _output__.writeInt64(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withType(__v: tendermint.abci.MisbehaviorType): Misbehavior = copy(`type` = __v)
    def getValidator: tendermint.abci.Validator = validator.getOrElse(tendermint.abci.Validator.defaultInstance)
    def clearValidator: Misbehavior = copy(validator = _root_.scala.None)
    def withValidator(__v: tendermint.abci.Validator): Misbehavior = copy(validator = Option(__v))
    def withHeight(__v: _root_.scala.Long): Misbehavior = copy(height = __v)
    def getTime: com.google.protobuf.timestamp.Timestamp = time.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearTime: Misbehavior = copy(time = _root_.scala.None)
    def withTime(__v: com.google.protobuf.timestamp.Timestamp): Misbehavior = copy(time = Option(__v))
    def withTotalVotingPower(__v: _root_.scala.Long): Misbehavior = copy(totalVotingPower = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => validator.orNull
        case 3 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 4 => time.orNull
        case 5 => {
          val __t = totalVotingPower
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
        case 2 => validator.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PLong(height)
        case 4 => time.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PLong(totalVotingPower)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.abci.Misbehavior.type = tendermint.abci.Misbehavior
    // @@protoc_insertion_point(GeneratedMessage[tendermint.abci.Misbehavior])
}

object Misbehavior extends scalapb.GeneratedMessageCompanion[tendermint.abci.Misbehavior] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.abci.Misbehavior] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.abci.Misbehavior = {
    var __type: tendermint.abci.MisbehaviorType = tendermint.abci.MisbehaviorType.UNKNOWN
    var __validator: _root_.scala.Option[tendermint.abci.Validator] = _root_.scala.None
    var __height: _root_.scala.Long = 0L
    var __time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __totalVotingPower: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __type = tendermint.abci.MisbehaviorType.fromValue(_input__.readEnum())
        case 18 =>
          __validator = _root_.scala.Option(__validator.fold(_root_.scalapb.LiteParser.readMessage[tendermint.abci.Validator](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __height = _input__.readInt64()
        case 34 =>
          __time = _root_.scala.Option(__time.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 40 =>
          __totalVotingPower = _input__.readInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.abci.Misbehavior(
        `type` = __type,
        validator = __validator,
        height = __height,
        time = __time,
        totalVotingPower = __totalVotingPower,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.abci.Misbehavior] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.abci.Misbehavior(
        `type` = tendermint.abci.MisbehaviorType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(tendermint.abci.MisbehaviorType.UNKNOWN.scalaValueDescriptor).number),
        validator = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[tendermint.abci.Validator]]),
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        time = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        totalVotingPower = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.abci.TypesProto.javaDescriptor.getMessageTypes().get(45)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.abci.TypesProto.scalaDescriptor.messages(45)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = tendermint.abci.Validator
      case 4 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => tendermint.abci.MisbehaviorType
    }
  }
  lazy val defaultInstance = tendermint.abci.Misbehavior(
    `type` = tendermint.abci.MisbehaviorType.UNKNOWN,
    validator = _root_.scala.None,
    height = 0L,
    time = _root_.scala.None,
    totalVotingPower = 0L
  )
  implicit class MisbehaviorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.Misbehavior]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.abci.Misbehavior](_l) {
    def `type`: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.MisbehaviorType] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def validator: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.Validator] = field(_.getValidator)((c_, f_) => c_.copy(validator = _root_.scala.Option(f_)))
    def optionalValidator: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.abci.Validator]] = field(_.validator)((c_, f_) => c_.copy(validator = f_))
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def time: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTime)((c_, f_) => c_.copy(time = _root_.scala.Option(f_)))
    def optionalTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.time)((c_, f_) => c_.copy(time = f_))
    def totalVotingPower: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.totalVotingPower)((c_, f_) => c_.copy(totalVotingPower = f_))
  }
  final val TYPE_FIELD_NUMBER = 1
  final val VALIDATOR_FIELD_NUMBER = 2
  final val HEIGHT_FIELD_NUMBER = 3
  final val TIME_FIELD_NUMBER = 4
  final val TOTAL_VOTING_POWER_FIELD_NUMBER = 5
  def of(
    `type`: tendermint.abci.MisbehaviorType,
    validator: _root_.scala.Option[tendermint.abci.Validator],
    height: _root_.scala.Long,
    time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    totalVotingPower: _root_.scala.Long
  ): _root_.tendermint.abci.Misbehavior = _root_.tendermint.abci.Misbehavior(
    `type`,
    validator,
    height,
    time,
    totalVotingPower
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.abci.Misbehavior])
}
