// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.abci

/** Extends a vote with application-injected data
  *
  * @param hash
  *   the hash of the block that this vote may be referring to
  * @param height
  *   the height of the extended vote
  * @param time
  *   info of the block that this vote may be referring to
  * @param proposerAddress
  *   address of the public key of the original proposer of the block.
  */
@SerialVersionUID(0L)
final case class RequestExtendVote(
    hash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    height: _root_.scala.Long = 0L,
    time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    txs: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
    proposedLastCommit: _root_.scala.Option[tendermint.abci.CommitInfo] = _root_.scala.None,
    misbehavior: _root_.scala.Seq[tendermint.abci.Misbehavior] = _root_.scala.Seq.empty,
    nextValidatorsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    proposerAddress: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RequestExtendVote] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = hash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(2, __value)
        }
      };
      if (time.isDefined) {
        val __value = time.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      txs.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, __value)
      }
      if (proposedLastCommit.isDefined) {
        val __value = proposedLastCommit.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      misbehavior.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = nextValidatorsHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(7, __value)
        }
      };
      
      {
        val __value = proposerAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = hash
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeInt64(2, __v)
        }
      };
      time.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      txs.foreach { __v =>
        val __m = __v
        _output__.writeBytes(4, __m)
      };
      proposedLastCommit.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      misbehavior.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = nextValidatorsHash
        if (!__v.isEmpty) {
          _output__.writeBytes(7, __v)
        }
      };
      {
        val __v = proposerAddress
        if (!__v.isEmpty) {
          _output__.writeBytes(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withHash(__v: _root_.com.google.protobuf.ByteString): RequestExtendVote = copy(hash = __v)
    def withHeight(__v: _root_.scala.Long): RequestExtendVote = copy(height = __v)
    def getTime: com.google.protobuf.timestamp.Timestamp = time.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearTime: RequestExtendVote = copy(time = _root_.scala.None)
    def withTime(__v: com.google.protobuf.timestamp.Timestamp): RequestExtendVote = copy(time = Option(__v))
    def clearTxs = copy(txs = _root_.scala.Seq.empty)
    def addTxs(__vs: _root_.com.google.protobuf.ByteString *): RequestExtendVote = addAllTxs(__vs)
    def addAllTxs(__vs: Iterable[_root_.com.google.protobuf.ByteString]): RequestExtendVote = copy(txs = txs ++ __vs)
    def withTxs(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): RequestExtendVote = copy(txs = __v)
    def getProposedLastCommit: tendermint.abci.CommitInfo = proposedLastCommit.getOrElse(tendermint.abci.CommitInfo.defaultInstance)
    def clearProposedLastCommit: RequestExtendVote = copy(proposedLastCommit = _root_.scala.None)
    def withProposedLastCommit(__v: tendermint.abci.CommitInfo): RequestExtendVote = copy(proposedLastCommit = Option(__v))
    def clearMisbehavior = copy(misbehavior = _root_.scala.Seq.empty)
    def addMisbehavior(__vs: tendermint.abci.Misbehavior *): RequestExtendVote = addAllMisbehavior(__vs)
    def addAllMisbehavior(__vs: Iterable[tendermint.abci.Misbehavior]): RequestExtendVote = copy(misbehavior = misbehavior ++ __vs)
    def withMisbehavior(__v: _root_.scala.Seq[tendermint.abci.Misbehavior]): RequestExtendVote = copy(misbehavior = __v)
    def withNextValidatorsHash(__v: _root_.com.google.protobuf.ByteString): RequestExtendVote = copy(nextValidatorsHash = __v)
    def withProposerAddress(__v: _root_.com.google.protobuf.ByteString): RequestExtendVote = copy(proposerAddress = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = hash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 3 => time.orNull
        case 4 => txs
        case 5 => proposedLastCommit.orNull
        case 6 => misbehavior
        case 7 => {
          val __t = nextValidatorsHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 8 => {
          val __t = proposerAddress
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(hash)
        case 2 => _root_.scalapb.descriptors.PLong(height)
        case 3 => time.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PRepeated(txs.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
        case 5 => proposedLastCommit.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => _root_.scalapb.descriptors.PRepeated(misbehavior.iterator.map(_.toPMessage).toVector)
        case 7 => _root_.scalapb.descriptors.PByteString(nextValidatorsHash)
        case 8 => _root_.scalapb.descriptors.PByteString(proposerAddress)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.abci.RequestExtendVote.type = tendermint.abci.RequestExtendVote
    // @@protoc_insertion_point(GeneratedMessage[tendermint.abci.RequestExtendVote])
}

object RequestExtendVote extends scalapb.GeneratedMessageCompanion[tendermint.abci.RequestExtendVote] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.abci.RequestExtendVote] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.abci.RequestExtendVote = {
    var __hash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __height: _root_.scala.Long = 0L
    var __time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    val __txs: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
    var __proposedLastCommit: _root_.scala.Option[tendermint.abci.CommitInfo] = _root_.scala.None
    val __misbehavior: _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.Misbehavior] = new _root_.scala.collection.immutable.VectorBuilder[tendermint.abci.Misbehavior]
    var __nextValidatorsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __proposerAddress: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __hash = _input__.readBytes()
        case 16 =>
          __height = _input__.readInt64()
        case 26 =>
          __time = _root_.scala.Option(__time.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __txs += _input__.readBytes()
        case 42 =>
          __proposedLastCommit = _root_.scala.Option(__proposedLastCommit.fold(_root_.scalapb.LiteParser.readMessage[tendermint.abci.CommitInfo](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __misbehavior += _root_.scalapb.LiteParser.readMessage[tendermint.abci.Misbehavior](_input__)
        case 58 =>
          __nextValidatorsHash = _input__.readBytes()
        case 66 =>
          __proposerAddress = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.abci.RequestExtendVote(
        hash = __hash,
        height = __height,
        time = __time,
        txs = __txs.result(),
        proposedLastCommit = __proposedLastCommit,
        misbehavior = __misbehavior.result(),
        nextValidatorsHash = __nextValidatorsHash,
        proposerAddress = __proposerAddress,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.abci.RequestExtendVote] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.abci.RequestExtendVote(
        hash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        time = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        txs = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty),
        proposedLastCommit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[tendermint.abci.CommitInfo]]),
        misbehavior = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[tendermint.abci.Misbehavior]]).getOrElse(_root_.scala.Seq.empty),
        nextValidatorsHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        proposerAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.abci.TypesProto.javaDescriptor.getMessageTypes().get(14)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.abci.TypesProto.scalaDescriptor.messages(14)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = com.google.protobuf.timestamp.Timestamp
      case 5 => __out = tendermint.abci.CommitInfo
      case 6 => __out = tendermint.abci.Misbehavior
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = tendermint.abci.RequestExtendVote(
    hash = _root_.com.google.protobuf.ByteString.EMPTY,
    height = 0L,
    time = _root_.scala.None,
    txs = _root_.scala.Seq.empty,
    proposedLastCommit = _root_.scala.None,
    misbehavior = _root_.scala.Seq.empty,
    nextValidatorsHash = _root_.com.google.protobuf.ByteString.EMPTY,
    proposerAddress = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class RequestExtendVoteLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.RequestExtendVote]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.abci.RequestExtendVote](_l) {
    def hash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.hash)((c_, f_) => c_.copy(hash = f_))
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def time: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTime)((c_, f_) => c_.copy(time = _root_.scala.Option(f_)))
    def optionalTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.time)((c_, f_) => c_.copy(time = f_))
    def txs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.txs)((c_, f_) => c_.copy(txs = f_))
    def proposedLastCommit: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.CommitInfo] = field(_.getProposedLastCommit)((c_, f_) => c_.copy(proposedLastCommit = _root_.scala.Option(f_)))
    def optionalProposedLastCommit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.abci.CommitInfo]] = field(_.proposedLastCommit)((c_, f_) => c_.copy(proposedLastCommit = f_))
    def misbehavior: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[tendermint.abci.Misbehavior]] = field(_.misbehavior)((c_, f_) => c_.copy(misbehavior = f_))
    def nextValidatorsHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.nextValidatorsHash)((c_, f_) => c_.copy(nextValidatorsHash = f_))
    def proposerAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.proposerAddress)((c_, f_) => c_.copy(proposerAddress = f_))
  }
  final val HASH_FIELD_NUMBER = 1
  final val HEIGHT_FIELD_NUMBER = 2
  final val TIME_FIELD_NUMBER = 3
  final val TXS_FIELD_NUMBER = 4
  final val PROPOSED_LAST_COMMIT_FIELD_NUMBER = 5
  final val MISBEHAVIOR_FIELD_NUMBER = 6
  final val NEXT_VALIDATORS_HASH_FIELD_NUMBER = 7
  final val PROPOSER_ADDRESS_FIELD_NUMBER = 8
  def of(
    hash: _root_.com.google.protobuf.ByteString,
    height: _root_.scala.Long,
    time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    txs: _root_.scala.Seq[_root_.com.google.protobuf.ByteString],
    proposedLastCommit: _root_.scala.Option[tendermint.abci.CommitInfo],
    misbehavior: _root_.scala.Seq[tendermint.abci.Misbehavior],
    nextValidatorsHash: _root_.com.google.protobuf.ByteString,
    proposerAddress: _root_.com.google.protobuf.ByteString
  ): _root_.tendermint.abci.RequestExtendVote = _root_.tendermint.abci.RequestExtendVote(
    hash,
    height,
    time,
    txs,
    proposedLastCommit,
    misbehavior,
    nextValidatorsHash,
    proposerAddress
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.abci.RequestExtendVote])
}
