// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.abci

/** loads a snapshot chunk
  */
@SerialVersionUID(0L)
final case class RequestLoadSnapshotChunk(
    height: _root_.scala.Long = 0L,
    format: _root_.scala.Int = 0,
    chunk: _root_.scala.Int = 0,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[RequestLoadSnapshotChunk] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = format
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(2, __value)
        }
      };
      
      {
        val __value = chunk
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = format
        if (__v != 0) {
          _output__.writeUInt32(2, __v)
        }
      };
      {
        val __v = chunk
        if (__v != 0) {
          _output__.writeUInt32(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withHeight(__v: _root_.scala.Long): RequestLoadSnapshotChunk = copy(height = __v)
    def withFormat(__v: _root_.scala.Int): RequestLoadSnapshotChunk = copy(format = __v)
    def withChunk(__v: _root_.scala.Int): RequestLoadSnapshotChunk = copy(chunk = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = format
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = chunk
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(height)
        case 2 => _root_.scalapb.descriptors.PInt(format)
        case 3 => _root_.scalapb.descriptors.PInt(chunk)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.abci.RequestLoadSnapshotChunk.type = tendermint.abci.RequestLoadSnapshotChunk
    // @@protoc_insertion_point(GeneratedMessage[tendermint.abci.RequestLoadSnapshotChunk])
}

object RequestLoadSnapshotChunk extends scalapb.GeneratedMessageCompanion[tendermint.abci.RequestLoadSnapshotChunk] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.abci.RequestLoadSnapshotChunk] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.abci.RequestLoadSnapshotChunk = {
    var __height: _root_.scala.Long = 0L
    var __format: _root_.scala.Int = 0
    var __chunk: _root_.scala.Int = 0
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __height = _input__.readUInt64()
        case 16 =>
          __format = _input__.readUInt32()
        case 24 =>
          __chunk = _input__.readUInt32()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.abci.RequestLoadSnapshotChunk(
        height = __height,
        format = __format,
        chunk = __chunk,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.abci.RequestLoadSnapshotChunk] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.abci.RequestLoadSnapshotChunk(
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        format = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        chunk = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.abci.TypesProto.javaDescriptor.getMessageTypes().get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.abci.TypesProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = tendermint.abci.RequestLoadSnapshotChunk(
    height = 0L,
    format = 0,
    chunk = 0
  )
  implicit class RequestLoadSnapshotChunkLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.RequestLoadSnapshotChunk]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.abci.RequestLoadSnapshotChunk](_l) {
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def format: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.format)((c_, f_) => c_.copy(format = f_))
    def chunk: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.chunk)((c_, f_) => c_.copy(chunk = f_))
  }
  final val HEIGHT_FIELD_NUMBER = 1
  final val FORMAT_FIELD_NUMBER = 2
  final val CHUNK_FIELD_NUMBER = 3
  def of(
    height: _root_.scala.Long,
    format: _root_.scala.Int,
    chunk: _root_.scala.Int
  ): _root_.tendermint.abci.RequestLoadSnapshotChunk = _root_.tendermint.abci.RequestLoadSnapshotChunk(
    height,
    format,
    chunk
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.abci.RequestLoadSnapshotChunk])
}
