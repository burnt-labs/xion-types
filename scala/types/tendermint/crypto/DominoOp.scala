// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package tendermint.crypto

@SerialVersionUID(0L)
final case class DominoOp(
    key: _root_.scala.Predef.String = "",
    input: _root_.scala.Predef.String = "",
    output: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DominoOp] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = key
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = input
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = output
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = key
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = input
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = output
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withKey(__v: _root_.scala.Predef.String): DominoOp = copy(key = __v)
    def withInput(__v: _root_.scala.Predef.String): DominoOp = copy(input = __v)
    def withOutput(__v: _root_.scala.Predef.String): DominoOp = copy(output = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = key
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = input
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = output
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(key)
        case 2 => _root_.scalapb.descriptors.PString(input)
        case 3 => _root_.scalapb.descriptors.PString(output)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: tendermint.crypto.DominoOp.type = tendermint.crypto.DominoOp
    // @@protoc_insertion_point(GeneratedMessage[tendermint.crypto.DominoOp])
}

object DominoOp extends scalapb.GeneratedMessageCompanion[tendermint.crypto.DominoOp] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[tendermint.crypto.DominoOp] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): tendermint.crypto.DominoOp = {
    var __key: _root_.scala.Predef.String = ""
    var __input: _root_.scala.Predef.String = ""
    var __output: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __key = _input__.readStringRequireUtf8()
        case 18 =>
          __input = _input__.readStringRequireUtf8()
        case 26 =>
          __output = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    tendermint.crypto.DominoOp(
        key = __key,
        input = __input,
        output = __output,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[tendermint.crypto.DominoOp] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      tendermint.crypto.DominoOp(
        key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        input = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        output = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = tendermint.crypto.ProofProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = tendermint.crypto.ProofProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = tendermint.crypto.DominoOp(
    key = "",
    input = "",
    output = ""
  )
  implicit class DominoOpLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, tendermint.crypto.DominoOp]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, tendermint.crypto.DominoOp](_l) {
    def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
    def input: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.input)((c_, f_) => c_.copy(input = f_))
    def output: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.output)((c_, f_) => c_.copy(output = f_))
  }
  final val KEY_FIELD_NUMBER = 1
  final val INPUT_FIELD_NUMBER = 2
  final val OUTPUT_FIELD_NUMBER = 3
  def of(
    key: _root_.scala.Predef.String,
    input: _root_.scala.Predef.String,
    output: _root_.scala.Predef.String
  ): _root_.tendermint.crypto.DominoOp = _root_.tendermint.crypto.DominoOp(
    key,
    input,
    output
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[tendermint.crypto.DominoOp])
}
