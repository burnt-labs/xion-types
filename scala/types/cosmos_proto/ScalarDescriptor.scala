// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos_proto

/** ScalarDescriptor describes an scalar type to be used with
  * the scalar field option and declared by declare_scalar.
  * Scalars extend simple protobuf built-in types with additional
  * syntax and semantics, for instance to represent big integers.
  * Scalars should ideally define an encoding such that there is only one
  * valid syntactical representation for a given semantic meaning,
  * i.e. the encoding should be deterministic.
  *
  * @param name
  *   name is the name of the scalar. It should be a short-name (without
  *   a period) such that the fully qualified name of the scalar will be
  *   package.name, ex. for the package a.b and scalar named C, the
  *   fully-qualified name will be a.b.C.
  * @param description
  *   description is a human-readable description of the scalar and its
  *   encoding format. For instance a big integer or decimal scalar should
  *   specify precisely the expected encoding format.
  * @param fieldType
  *   field_type is the type of field with which this scalar can be used.
  *   Scalars can be used with one and only one type of field so that
  *   encoding standards and simple and clear. Currently only string and
  *   bytes fields are supported for scalars.
  */
@SerialVersionUID(0L)
final case class ScalarDescriptor(
    name: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    fieldType: _root_.scala.Seq[cosmos_proto.ScalarType] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ScalarDescriptor] {
    private[this] def fieldTypeSerializedSize = {
      if (__fieldTypeSerializedSizeField == 0) __fieldTypeSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        fieldType.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag(__i.value))
        __s
      }
      __fieldTypeSerializedSizeField
    }
    @transient private[this] var __fieldTypeSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      if (fieldType.nonEmpty) {
        val __localsize = fieldTypeSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      if (fieldType.nonEmpty) {
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(fieldTypeSerializedSize)
        fieldType.foreach((_output__.writeEnumNoTag _).compose((_: cosmos_proto.ScalarType).value))
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): ScalarDescriptor = copy(name = __v)
    def withDescription(__v: _root_.scala.Predef.String): ScalarDescriptor = copy(description = __v)
    def clearFieldType = copy(fieldType = _root_.scala.Seq.empty)
    def addFieldType(__vs: cosmos_proto.ScalarType *): ScalarDescriptor = addAllFieldType(__vs)
    def addAllFieldType(__vs: Iterable[cosmos_proto.ScalarType]): ScalarDescriptor = copy(fieldType = fieldType ++ __vs)
    def withFieldType(__v: _root_.scala.Seq[cosmos_proto.ScalarType]): ScalarDescriptor = copy(fieldType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 3 => fieldType.iterator.map(_.javaValueDescriptor).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PString(description)
        case 3 => _root_.scalapb.descriptors.PRepeated(fieldType.iterator.map(__e => _root_.scalapb.descriptors.PEnum(__e.scalaValueDescriptor)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos_proto.ScalarDescriptor.type = cosmos_proto.ScalarDescriptor
    // @@protoc_insertion_point(GeneratedMessage[cosmos_proto.ScalarDescriptor])
}

object ScalarDescriptor extends scalapb.GeneratedMessageCompanion[cosmos_proto.ScalarDescriptor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos_proto.ScalarDescriptor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos_proto.ScalarDescriptor = {
    var __name: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    val __fieldType: _root_.scala.collection.immutable.VectorBuilder[cosmos_proto.ScalarType] = new _root_.scala.collection.immutable.VectorBuilder[cosmos_proto.ScalarType]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 18 =>
          __description = _input__.readStringRequireUtf8()
        case 24 =>
          __fieldType += cosmos_proto.ScalarType.fromValue(_input__.readEnum())
        case 26 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __fieldType += cosmos_proto.ScalarType.fromValue(_input__.readEnum())
          }
          _input__.popLimit(oldLimit)
        }
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos_proto.ScalarDescriptor(
        name = __name,
        description = __description,
        fieldType = __fieldType.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos_proto.ScalarDescriptor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos_proto.ScalarDescriptor(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        fieldType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scalapb.descriptors.EnumValueDescriptor]]).getOrElse(_root_.scala.Seq.empty).iterator.map(__e => cosmos_proto.ScalarType.fromValue(__e.number)).toSeq
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos_proto.CosmosProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos_proto.CosmosProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => cosmos_proto.ScalarType
    }
  }
  lazy val defaultInstance = cosmos_proto.ScalarDescriptor(
    name = "",
    description = "",
    fieldType = _root_.scala.Seq.empty
  )
  implicit class ScalarDescriptorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos_proto.ScalarDescriptor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos_proto.ScalarDescriptor](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def fieldType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos_proto.ScalarType]] = field(_.fieldType)((c_, f_) => c_.copy(fieldType = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val DESCRIPTION_FIELD_NUMBER = 2
  final val FIELD_TYPE_FIELD_NUMBER = 3
  def of(
    name: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    fieldType: _root_.scala.Seq[cosmos_proto.ScalarType]
  ): _root_.cosmos_proto.ScalarDescriptor = _root_.cosmos_proto.ScalarDescriptor(
    name,
    description,
    fieldType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos_proto.ScalarDescriptor])
}
