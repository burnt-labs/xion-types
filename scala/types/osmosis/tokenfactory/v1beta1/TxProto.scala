// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package osmosis.tokenfactory.v1beta1

object TxProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.GogoProto,
    cosmos.base.v1beta1.CoinProto,
    cosmos.bank.v1beta1.BankProto,
    osmosis.tokenfactory.v1beta1.ParamsProto,
    cosmos.msg.v1.MsgProto,
    cosmos_proto.CosmosProto,
    amino.AminoProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      osmosis.tokenfactory.v1beta1.MsgCreateDenom,
      osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse,
      osmosis.tokenfactory.v1beta1.MsgMint,
      osmosis.tokenfactory.v1beta1.MsgMintResponse,
      osmosis.tokenfactory.v1beta1.MsgBurn,
      osmosis.tokenfactory.v1beta1.MsgBurnResponse,
      osmosis.tokenfactory.v1beta1.MsgChangeAdmin,
      osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse,
      osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata,
      osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse,
      osmosis.tokenfactory.v1beta1.MsgForceTransfer,
      osmosis.tokenfactory.v1beta1.MsgForceTransferResponse,
      osmosis.tokenfactory.v1beta1.MsgUpdateParams,
      osmosis.tokenfactory.v1beta1.MsgUpdateParamsResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CiVvc21vc2lzL3Rva2VuZmFjdG9yeS92MWJldGExL3R4LnByb3RvEhxvc21vc2lzLnRva2VuZmFjdG9yeS52MWJldGExGhRnb
  2dvcHJvdG8vZ29nby5wcm90bxoeY29zbW9zL2Jhc2UvdjFiZXRhMS9jb2luLnByb3RvGh5jb3Ntb3MvYmFuay92MWJldGExL2Jhb
  msucHJvdG8aKW9zbW9zaXMvdG9rZW5mYWN0b3J5L3YxYmV0YTEvcGFyYW1zLnByb3RvGhdjb3Ntb3MvbXNnL3YxL21zZy5wcm90b
  xoZY29zbW9zX3Byb3RvL2Nvc21vcy5wcm90bxoRYW1pbm8vYW1pbm8ucHJvdG8itwEKDk1zZ0NyZWF0ZURlbm9tEjQKBnNlbmRlc
  hgBIAEoCUIc4j8IEgZzZW5kZXLy3h8NeWFtbDoic2VuZGVyIlIGc2VuZGVyEjwKCHN1YmRlbm9tGAIgASgJQiDiPwoSCHN1YmRlb
  m9t8t4fD3lhbWw6InN1YmRlbm9tIlIIc3ViZGVub206MYLnsCoGc2VuZGVyiuewKiFvc21vc2lzL3Rva2VuZmFjdG9yeS9jcmVhd
  GUtZGVub20ibgoWTXNnQ3JlYXRlRGVub21SZXNwb25zZRJUCg9uZXdfdG9rZW5fZGVub20YASABKAlCLOI/DxINbmV3VG9rZW5EZ
  W5vbfLeHxZ5YW1sOiJuZXdfdG9rZW5fZGVub20iUg1uZXdUb2tlbkRlbm9tIqgCCgdNc2dNaW50EjQKBnNlbmRlchgBIAEoCUIc4
  j8IEgZzZW5kZXLy3h8NeWFtbDoic2VuZGVyIlIGc2VuZGVyEmMKBmFtb3VudBgCIAEoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ
  29pbkIw4j8IEgZhbW91bnTI3h8A8t4fDXlhbWw6ImFtb3VudCKa57AqC2xlZ2FjeV9jb2luUgZhbW91bnQSVwoNbWludFRvQWRkc
  mVzcxgDIAEoCUIx4j8PEg1taW50VG9BZGRyZXNz8t4fFnlhbWw6Im1pbnRfdG9fYWRkcmVzcyKo57AqAVINbWludFRvQWRkcmVzc
  zopguewKgZzZW5kZXKK57AqGW9zbW9zaXMvdG9rZW5mYWN0b3J5L21pbnQiEQoPTXNnTWludFJlc3BvbnNlIrACCgdNc2dCdXJuE
  jQKBnNlbmRlchgBIAEoCUIc4j8IEgZzZW5kZXLy3h8NeWFtbDoic2VuZGVyIlIGc2VuZGVyEmMKBmFtb3VudBgCIAEoCzIZLmNvc
  21vcy5iYXNlLnYxYmV0YTEuQ29pbkIw4j8IEgZhbW91bnTI3h8A8t4fDXlhbWw6ImFtb3VudCKa57AqC2xlZ2FjeV9jb2luUgZhb
  W91bnQSXwoPYnVybkZyb21BZGRyZXNzGAMgASgJQjXiPxESD2J1cm5Gcm9tQWRkcmVzc/LeHxh5YW1sOiJidXJuX2Zyb21fYWRkc
  mVzcyKo57AqAVIPYnVybkZyb21BZGRyZXNzOimC57AqBnNlbmRlcornsCoZb3Ntb3Npcy90b2tlbmZhY3RvcnkvYnVybiIRCg9Nc
  2dCdXJuUmVzcG9uc2Ui6wEKDk1zZ0NoYW5nZUFkbWluEjQKBnNlbmRlchgBIAEoCUIc4j8IEgZzZW5kZXLy3h8NeWFtbDoic2VuZ
  GVyIlIGc2VuZGVyEjAKBWRlbm9tGAIgASgJQhriPwcSBWRlbm9t8t4fDHlhbWw6ImRlbm9tIlIFZGVub20SPgoJbmV3X2FkbWluG
  AMgASgJQiHiPwoSCG5ld0FkbWlu8t4fEHlhbWw6Im5ld19hZG1pbiJSCG5ld0FkbWluOjGC57AqBnNlbmRlcornsCohb3Ntb3Npc
  y90b2tlbmZhY3RvcnkvY2hhbmdlLWFkbWluIhgKFk1zZ0NoYW5nZUFkbWluUmVzcG9uc2Ui5QEKE01zZ1NldERlbm9tTWV0YWRhd
  GESNAoGc2VuZGVyGAEgASgJQhziPwgSBnNlbmRlcvLeHw15YW1sOiJzZW5kZXIiUgZzZW5kZXISXwoIbWV0YWRhdGEYAiABKAsyH
  S5jb3Ntb3MuYmFuay52MWJldGExLk1ldGFkYXRhQiTiPwoSCG1ldGFkYXRhyN4fAPLeHw95YW1sOiJtZXRhZGF0YSJSCG1ldGFkY
  XRhOjeC57AqBnNlbmRlcornsConb3Ntb3Npcy90b2tlbmZhY3Rvcnkvc2V0LWRlbm9tLW1ldGFkYXRhIh0KG01zZ1NldERlbm9tT
  WV0YWRhdGFSZXNwb25zZSKyAwoQTXNnRm9yY2VUcmFuc2ZlchI0CgZzZW5kZXIYASABKAlCHOI/CBIGc2VuZGVy8t4fDXlhbWw6I
  nNlbmRlciJSBnNlbmRlchJjCgZhbW91bnQYAiABKAsyGS5jb3Ntb3MuYmFzZS52MWJldGExLkNvaW5CMOI/CBIGYW1vdW50yN4fA
  PLeHw15YW1sOiJhbW91bnQimuewKgtsZWdhY3lfY29pblIGYW1vdW50EmoKE3RyYW5zZmVyRnJvbUFkZHJlc3MYAyABKAlCOOI/F
  RITdHJhbnNmZXJGcm9tQWRkcmVzc/LeHxx5YW1sOiJ0cmFuc2Zlcl9mcm9tX2FkZHJlc3MiUhN0cmFuc2ZlckZyb21BZGRyZXNzE
  mIKEXRyYW5zZmVyVG9BZGRyZXNzGAQgASgJQjTiPxMSEXRyYW5zZmVyVG9BZGRyZXNz8t4fGnlhbWw6InRyYW5zZmVyX3RvX2FkZ
  HJlc3MiUhF0cmFuc2ZlclRvQWRkcmVzczozguewKgZzZW5kZXKK57AqI29zbW9zaXMvdG9rZW5mYWN0b3J5L2ZvcmNlLXRyYW5zZ
  mVyIhoKGE1zZ0ZvcmNlVHJhbnNmZXJSZXNwb25zZSLdAQoPTXNnVXBkYXRlUGFyYW1zEkQKCWF1dGhvcml0eRgBIAEoCUIm4j8LE
  glhdXRob3JpdHnStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSCWF1dGhvcml0eRJNCgZwYXJhbXMYAiABKAsyJC5vc21vc2lzLnRva
  2VuZmFjdG9yeS52MWJldGExLlBhcmFtc0IP4j8IEgZwYXJhbXPI3h8AUgZwYXJhbXM6NYLnsCoJYXV0aG9yaXR5iuewKiJvc21vc
  2lzL3Rva2VuZmFjdG9yeS91cGRhdGUtcGFyYW1zIhkKF01zZ1VwZGF0ZVBhcmFtc1Jlc3BvbnNlMqAGCgNNc2cScQoLQ3JlYXRlR
  GVub20SLC5vc21vc2lzLnRva2VuZmFjdG9yeS52MWJldGExLk1zZ0NyZWF0ZURlbm9tGjQub3Ntb3Npcy50b2tlbmZhY3Rvcnkud
  jFiZXRhMS5Nc2dDcmVhdGVEZW5vbVJlc3BvbnNlElwKBE1pbnQSJS5vc21vc2lzLnRva2VuZmFjdG9yeS52MWJldGExLk1zZ01pb
  nQaLS5vc21vc2lzLnRva2VuZmFjdG9yeS52MWJldGExLk1zZ01pbnRSZXNwb25zZRJcCgRCdXJuEiUub3Ntb3Npcy50b2tlbmZhY
  3RvcnkudjFiZXRhMS5Nc2dCdXJuGi0ub3Ntb3Npcy50b2tlbmZhY3RvcnkudjFiZXRhMS5Nc2dCdXJuUmVzcG9uc2UScQoLQ2hhb
  mdlQWRtaW4SLC5vc21vc2lzLnRva2VuZmFjdG9yeS52MWJldGExLk1zZ0NoYW5nZUFkbWluGjQub3Ntb3Npcy50b2tlbmZhY3Rvc
  nkudjFiZXRhMS5Nc2dDaGFuZ2VBZG1pblJlc3BvbnNlEoABChBTZXREZW5vbU1ldGFkYXRhEjEub3Ntb3Npcy50b2tlbmZhY3Rvc
  nkudjFiZXRhMS5Nc2dTZXREZW5vbU1ldGFkYXRhGjkub3Ntb3Npcy50b2tlbmZhY3RvcnkudjFiZXRhMS5Nc2dTZXREZW5vbU1ld
  GFkYXRhUmVzcG9uc2USdwoNRm9yY2VUcmFuc2ZlchIuLm9zbW9zaXMudG9rZW5mYWN0b3J5LnYxYmV0YTEuTXNnRm9yY2VUcmFuc
  2Zlcho2Lm9zbW9zaXMudG9rZW5mYWN0b3J5LnYxYmV0YTEuTXNnRm9yY2VUcmFuc2ZlclJlc3BvbnNlEnQKDFVwZGF0ZVBhcmFtc
  xItLm9zbW9zaXMudG9rZW5mYWN0b3J5LnYxYmV0YTEuTXNnVXBkYXRlUGFyYW1zGjUub3Ntb3Npcy50b2tlbmZhY3RvcnkudjFiZ
  XRhMS5Nc2dVcGRhdGVQYXJhbXNSZXNwb25zZRoFgOewKgFCQ1pBZ2l0aHViLmNvbS9zdHJhbmdlbG92ZS12ZW50dXJlcy90b2tlb
  mZhY3RvcnkveC90b2tlbmZhY3RvcnkvdHlwZXNiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.GogoProto.javaDescriptor,
      cosmos.base.v1beta1.CoinProto.javaDescriptor,
      cosmos.bank.v1beta1.BankProto.javaDescriptor,
      osmosis.tokenfactory.v1beta1.ParamsProto.javaDescriptor,
      cosmos.msg.v1.MsgProto.javaDescriptor,
      cosmos_proto.CosmosProto.javaDescriptor,
      amino.AminoProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}