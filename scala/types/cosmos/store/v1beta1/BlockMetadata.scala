// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.store.v1beta1

/** BlockMetadata contains all the abci event data of a block
  * the file streamer dump them into files together with the state changes.
  *
  * @param responseFinalizeBlock
  *   TODO: should we renumber this?
  */
@SerialVersionUID(0L)
final case class BlockMetadata(
    responseCommit: _root_.scala.Option[tendermint.abci.ResponseCommit] = _root_.scala.None,
    requestFinalizeBlock: _root_.scala.Option[tendermint.abci.RequestFinalizeBlock] = _root_.scala.None,
    responseFinalizeBlock: _root_.scala.Option[tendermint.abci.ResponseFinalizeBlock] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[BlockMetadata] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (responseCommit.isDefined) {
        val __value = responseCommit.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (requestFinalizeBlock.isDefined) {
        val __value = requestFinalizeBlock.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (responseFinalizeBlock.isDefined) {
        val __value = responseFinalizeBlock.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      responseCommit.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      requestFinalizeBlock.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      responseFinalizeBlock.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getResponseCommit: tendermint.abci.ResponseCommit = responseCommit.getOrElse(tendermint.abci.ResponseCommit.defaultInstance)
    def clearResponseCommit: BlockMetadata = copy(responseCommit = _root_.scala.None)
    def withResponseCommit(__v: tendermint.abci.ResponseCommit): BlockMetadata = copy(responseCommit = Option(__v))
    def getRequestFinalizeBlock: tendermint.abci.RequestFinalizeBlock = requestFinalizeBlock.getOrElse(tendermint.abci.RequestFinalizeBlock.defaultInstance)
    def clearRequestFinalizeBlock: BlockMetadata = copy(requestFinalizeBlock = _root_.scala.None)
    def withRequestFinalizeBlock(__v: tendermint.abci.RequestFinalizeBlock): BlockMetadata = copy(requestFinalizeBlock = Option(__v))
    def getResponseFinalizeBlock: tendermint.abci.ResponseFinalizeBlock = responseFinalizeBlock.getOrElse(tendermint.abci.ResponseFinalizeBlock.defaultInstance)
    def clearResponseFinalizeBlock: BlockMetadata = copy(responseFinalizeBlock = _root_.scala.None)
    def withResponseFinalizeBlock(__v: tendermint.abci.ResponseFinalizeBlock): BlockMetadata = copy(responseFinalizeBlock = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 6 => responseCommit.orNull
        case 7 => requestFinalizeBlock.orNull
        case 8 => responseFinalizeBlock.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 6 => responseCommit.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => requestFinalizeBlock.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => responseFinalizeBlock.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.store.v1beta1.BlockMetadata.type = cosmos.store.v1beta1.BlockMetadata
    // @@protoc_insertion_point(GeneratedMessage[cosmos.store.v1beta1.BlockMetadata])
}

object BlockMetadata extends scalapb.GeneratedMessageCompanion[cosmos.store.v1beta1.BlockMetadata] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.store.v1beta1.BlockMetadata] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.store.v1beta1.BlockMetadata = {
    var __responseCommit: _root_.scala.Option[tendermint.abci.ResponseCommit] = _root_.scala.None
    var __requestFinalizeBlock: _root_.scala.Option[tendermint.abci.RequestFinalizeBlock] = _root_.scala.None
    var __responseFinalizeBlock: _root_.scala.Option[tendermint.abci.ResponseFinalizeBlock] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 50 =>
          __responseCommit = _root_.scala.Option(__responseCommit.fold(_root_.scalapb.LiteParser.readMessage[tendermint.abci.ResponseCommit](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __requestFinalizeBlock = _root_.scala.Option(__requestFinalizeBlock.fold(_root_.scalapb.LiteParser.readMessage[tendermint.abci.RequestFinalizeBlock](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __responseFinalizeBlock = _root_.scala.Option(__responseFinalizeBlock.fold(_root_.scalapb.LiteParser.readMessage[tendermint.abci.ResponseFinalizeBlock](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.store.v1beta1.BlockMetadata(
        responseCommit = __responseCommit,
        requestFinalizeBlock = __requestFinalizeBlock,
        responseFinalizeBlock = __responseFinalizeBlock,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.store.v1beta1.BlockMetadata] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.store.v1beta1.BlockMetadata(
        responseCommit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[tendermint.abci.ResponseCommit]]),
        requestFinalizeBlock = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[tendermint.abci.RequestFinalizeBlock]]),
        responseFinalizeBlock = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[tendermint.abci.ResponseFinalizeBlock]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.store.v1beta1.ListeningProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.store.v1beta1.ListeningProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = tendermint.abci.ResponseCommit
      case 7 => __out = tendermint.abci.RequestFinalizeBlock
      case 8 => __out = tendermint.abci.ResponseFinalizeBlock
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.store.v1beta1.BlockMetadata(
    responseCommit = _root_.scala.None,
    requestFinalizeBlock = _root_.scala.None,
    responseFinalizeBlock = _root_.scala.None
  )
  implicit class BlockMetadataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.store.v1beta1.BlockMetadata]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.store.v1beta1.BlockMetadata](_l) {
    def responseCommit: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.ResponseCommit] = field(_.getResponseCommit)((c_, f_) => c_.copy(responseCommit = _root_.scala.Option(f_)))
    def optionalResponseCommit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.abci.ResponseCommit]] = field(_.responseCommit)((c_, f_) => c_.copy(responseCommit = f_))
    def requestFinalizeBlock: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.RequestFinalizeBlock] = field(_.getRequestFinalizeBlock)((c_, f_) => c_.copy(requestFinalizeBlock = _root_.scala.Option(f_)))
    def optionalRequestFinalizeBlock: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.abci.RequestFinalizeBlock]] = field(_.requestFinalizeBlock)((c_, f_) => c_.copy(requestFinalizeBlock = f_))
    def responseFinalizeBlock: _root_.scalapb.lenses.Lens[UpperPB, tendermint.abci.ResponseFinalizeBlock] = field(_.getResponseFinalizeBlock)((c_, f_) => c_.copy(responseFinalizeBlock = _root_.scala.Option(f_)))
    def optionalResponseFinalizeBlock: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.abci.ResponseFinalizeBlock]] = field(_.responseFinalizeBlock)((c_, f_) => c_.copy(responseFinalizeBlock = f_))
  }
  final val RESPONSE_COMMIT_FIELD_NUMBER = 6
  final val REQUEST_FINALIZE_BLOCK_FIELD_NUMBER = 7
  final val RESPONSE_FINALIZE_BLOCK_FIELD_NUMBER = 8
  def of(
    responseCommit: _root_.scala.Option[tendermint.abci.ResponseCommit],
    requestFinalizeBlock: _root_.scala.Option[tendermint.abci.RequestFinalizeBlock],
    responseFinalizeBlock: _root_.scala.Option[tendermint.abci.ResponseFinalizeBlock]
  ): _root_.cosmos.store.v1beta1.BlockMetadata = _root_.cosmos.store.v1beta1.BlockMetadata(
    responseCommit,
    requestFinalizeBlock,
    responseFinalizeBlock
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.store.v1beta1.BlockMetadata])
}
