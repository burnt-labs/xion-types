// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.store.snapshots.v1

/** SnapshotItem is an item contained in a rootmulti.Store snapshot.
  */
@SerialVersionUID(0L)
final case class SnapshotItem(
    item: cosmos.store.snapshots.v1.SnapshotItem.Item = cosmos.store.snapshots.v1.SnapshotItem.Item.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SnapshotItem] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (item.store.isDefined) {
        val __value = item.store.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (item.iavl.isDefined) {
        val __value = item.iavl.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (item.extension.isDefined) {
        val __value = item.extension.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (item.extensionPayload.isDefined) {
        val __value = item.extensionPayload.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      item.store.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      item.iavl.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      item.extension.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      item.extensionPayload.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getStore: cosmos.store.snapshots.v1.SnapshotStoreItem = item.store.getOrElse(cosmos.store.snapshots.v1.SnapshotStoreItem.defaultInstance)
    def withStore(__v: cosmos.store.snapshots.v1.SnapshotStoreItem): SnapshotItem = copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.Store(__v))
    def getIavl: cosmos.store.snapshots.v1.SnapshotIAVLItem = item.iavl.getOrElse(cosmos.store.snapshots.v1.SnapshotIAVLItem.defaultInstance)
    def withIavl(__v: cosmos.store.snapshots.v1.SnapshotIAVLItem): SnapshotItem = copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.Iavl(__v))
    def getExtension: cosmos.store.snapshots.v1.SnapshotExtensionMeta = item.extension.getOrElse(cosmos.store.snapshots.v1.SnapshotExtensionMeta.defaultInstance)
    def withExtension(__v: cosmos.store.snapshots.v1.SnapshotExtensionMeta): SnapshotItem = copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.Extension(__v))
    def getExtensionPayload: cosmos.store.snapshots.v1.SnapshotExtensionPayload = item.extensionPayload.getOrElse(cosmos.store.snapshots.v1.SnapshotExtensionPayload.defaultInstance)
    def withExtensionPayload(__v: cosmos.store.snapshots.v1.SnapshotExtensionPayload): SnapshotItem = copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.ExtensionPayload(__v))
    def clearItem: SnapshotItem = copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.Empty)
    def withItem(__v: cosmos.store.snapshots.v1.SnapshotItem.Item): SnapshotItem = copy(item = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => item.store.orNull
        case 2 => item.iavl.orNull
        case 3 => item.extension.orNull
        case 4 => item.extensionPayload.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => item.store.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => item.iavl.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => item.extension.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => item.extensionPayload.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.store.snapshots.v1.SnapshotItem.type = cosmos.store.snapshots.v1.SnapshotItem
    // @@protoc_insertion_point(GeneratedMessage[cosmos.store.snapshots.v1.SnapshotItem])
}

object SnapshotItem extends scalapb.GeneratedMessageCompanion[cosmos.store.snapshots.v1.SnapshotItem] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.store.snapshots.v1.SnapshotItem] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.store.snapshots.v1.SnapshotItem = {
    var __item: cosmos.store.snapshots.v1.SnapshotItem.Item = cosmos.store.snapshots.v1.SnapshotItem.Item.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __item = cosmos.store.snapshots.v1.SnapshotItem.Item.Store(__item.store.fold(_root_.scalapb.LiteParser.readMessage[cosmos.store.snapshots.v1.SnapshotStoreItem](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __item = cosmos.store.snapshots.v1.SnapshotItem.Item.Iavl(__item.iavl.fold(_root_.scalapb.LiteParser.readMessage[cosmos.store.snapshots.v1.SnapshotIAVLItem](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __item = cosmos.store.snapshots.v1.SnapshotItem.Item.Extension(__item.extension.fold(_root_.scalapb.LiteParser.readMessage[cosmos.store.snapshots.v1.SnapshotExtensionMeta](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __item = cosmos.store.snapshots.v1.SnapshotItem.Item.ExtensionPayload(__item.extensionPayload.fold(_root_.scalapb.LiteParser.readMessage[cosmos.store.snapshots.v1.SnapshotExtensionPayload](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.store.snapshots.v1.SnapshotItem(
        item = __item,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.store.snapshots.v1.SnapshotItem] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.store.snapshots.v1.SnapshotItem(
        item = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[cosmos.store.snapshots.v1.SnapshotStoreItem]]).map(cosmos.store.snapshots.v1.SnapshotItem.Item.Store(_))
            .orElse[cosmos.store.snapshots.v1.SnapshotItem.Item](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[cosmos.store.snapshots.v1.SnapshotIAVLItem]]).map(cosmos.store.snapshots.v1.SnapshotItem.Item.Iavl(_)))
            .orElse[cosmos.store.snapshots.v1.SnapshotItem.Item](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[cosmos.store.snapshots.v1.SnapshotExtensionMeta]]).map(cosmos.store.snapshots.v1.SnapshotItem.Item.Extension(_)))
            .orElse[cosmos.store.snapshots.v1.SnapshotItem.Item](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[cosmos.store.snapshots.v1.SnapshotExtensionPayload]]).map(cosmos.store.snapshots.v1.SnapshotItem.Item.ExtensionPayload(_)))
            .getOrElse(cosmos.store.snapshots.v1.SnapshotItem.Item.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.store.snapshots.v1.SnapshotProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.store.snapshots.v1.SnapshotProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.store.snapshots.v1.SnapshotStoreItem
      case 2 => __out = cosmos.store.snapshots.v1.SnapshotIAVLItem
      case 3 => __out = cosmos.store.snapshots.v1.SnapshotExtensionMeta
      case 4 => __out = cosmos.store.snapshots.v1.SnapshotExtensionPayload
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.store.snapshots.v1.SnapshotItem(
    item = cosmos.store.snapshots.v1.SnapshotItem.Item.Empty
  )
  sealed trait Item extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isStore: _root_.scala.Boolean = false
    def isIavl: _root_.scala.Boolean = false
    def isExtension: _root_.scala.Boolean = false
    def isExtensionPayload: _root_.scala.Boolean = false
    def store: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotStoreItem] = _root_.scala.None
    def iavl: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotIAVLItem] = _root_.scala.None
    def extension: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotExtensionMeta] = _root_.scala.None
    def extensionPayload: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotExtensionPayload] = _root_.scala.None
  }
  object Item {
    @SerialVersionUID(0L)
    case object Empty extends cosmos.store.snapshots.v1.SnapshotItem.Item {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Store(value: cosmos.store.snapshots.v1.SnapshotStoreItem) extends cosmos.store.snapshots.v1.SnapshotItem.Item {
      type ValueType = cosmos.store.snapshots.v1.SnapshotStoreItem
      override def isStore: _root_.scala.Boolean = true
      override def store: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotStoreItem] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class Iavl(value: cosmos.store.snapshots.v1.SnapshotIAVLItem) extends cosmos.store.snapshots.v1.SnapshotItem.Item {
      type ValueType = cosmos.store.snapshots.v1.SnapshotIAVLItem
      override def isIavl: _root_.scala.Boolean = true
      override def iavl: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotIAVLItem] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class Extension(value: cosmos.store.snapshots.v1.SnapshotExtensionMeta) extends cosmos.store.snapshots.v1.SnapshotItem.Item {
      type ValueType = cosmos.store.snapshots.v1.SnapshotExtensionMeta
      override def isExtension: _root_.scala.Boolean = true
      override def extension: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotExtensionMeta] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class ExtensionPayload(value: cosmos.store.snapshots.v1.SnapshotExtensionPayload) extends cosmos.store.snapshots.v1.SnapshotItem.Item {
      type ValueType = cosmos.store.snapshots.v1.SnapshotExtensionPayload
      override def isExtensionPayload: _root_.scala.Boolean = true
      override def extensionPayload: _root_.scala.Option[cosmos.store.snapshots.v1.SnapshotExtensionPayload] = Some(value)
      override def number: _root_.scala.Int = 4
    }
  }
  implicit class SnapshotItemLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.store.snapshots.v1.SnapshotItem]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.store.snapshots.v1.SnapshotItem](_l) {
    def store: _root_.scalapb.lenses.Lens[UpperPB, cosmos.store.snapshots.v1.SnapshotStoreItem] = field(_.getStore)((c_, f_) => c_.copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.Store(f_)))
    def iavl: _root_.scalapb.lenses.Lens[UpperPB, cosmos.store.snapshots.v1.SnapshotIAVLItem] = field(_.getIavl)((c_, f_) => c_.copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.Iavl(f_)))
    def extension: _root_.scalapb.lenses.Lens[UpperPB, cosmos.store.snapshots.v1.SnapshotExtensionMeta] = field(_.getExtension)((c_, f_) => c_.copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.Extension(f_)))
    def extensionPayload: _root_.scalapb.lenses.Lens[UpperPB, cosmos.store.snapshots.v1.SnapshotExtensionPayload] = field(_.getExtensionPayload)((c_, f_) => c_.copy(item = cosmos.store.snapshots.v1.SnapshotItem.Item.ExtensionPayload(f_)))
    def item: _root_.scalapb.lenses.Lens[UpperPB, cosmos.store.snapshots.v1.SnapshotItem.Item] = field(_.item)((c_, f_) => c_.copy(item = f_))
  }
  final val STORE_FIELD_NUMBER = 1
  final val IAVL_FIELD_NUMBER = 2
  final val EXTENSION_FIELD_NUMBER = 3
  final val EXTENSION_PAYLOAD_FIELD_NUMBER = 4
  def of(
    item: cosmos.store.snapshots.v1.SnapshotItem.Item
  ): _root_.cosmos.store.snapshots.v1.SnapshotItem = _root_.cosmos.store.snapshots.v1.SnapshotItem(
    item
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.store.snapshots.v1.SnapshotItem])
}
