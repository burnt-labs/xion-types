// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.vesting.v1beta1

/** MsgCreateVestingAccount defines a message that enables creating a vesting
  * account.
  *
  * @param startTime
  *   start of vesting as unix time (in seconds).
  */
@SerialVersionUID(0L)
final case class MsgCreatePeriodicVestingAccount(
    fromAddress: _root_.scala.Predef.String = "",
    toAddress: _root_.scala.Predef.String = "",
    startTime: _root_.scala.Long = 0L,
    vestingPeriods: _root_.scala.Seq[cosmos.vesting.v1beta1.Period] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgCreatePeriodicVestingAccount] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = fromAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = toAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = startTime
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      vestingPeriods.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = fromAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = toAddress
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = startTime
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      vestingPeriods.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withFromAddress(__v: _root_.scala.Predef.String): MsgCreatePeriodicVestingAccount = copy(fromAddress = __v)
    def withToAddress(__v: _root_.scala.Predef.String): MsgCreatePeriodicVestingAccount = copy(toAddress = __v)
    def withStartTime(__v: _root_.scala.Long): MsgCreatePeriodicVestingAccount = copy(startTime = __v)
    def clearVestingPeriods = copy(vestingPeriods = _root_.scala.Seq.empty)
    def addVestingPeriods(__vs: cosmos.vesting.v1beta1.Period *): MsgCreatePeriodicVestingAccount = addAllVestingPeriods(__vs)
    def addAllVestingPeriods(__vs: Iterable[cosmos.vesting.v1beta1.Period]): MsgCreatePeriodicVestingAccount = copy(vestingPeriods = vestingPeriods ++ __vs)
    def withVestingPeriods(__v: _root_.scala.Seq[cosmos.vesting.v1beta1.Period]): MsgCreatePeriodicVestingAccount = copy(vestingPeriods = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = fromAddress
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = toAddress
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = startTime
          if (__t != 0L) __t else null
        }
        case 4 => vestingPeriods
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(fromAddress)
        case 2 => _root_.scalapb.descriptors.PString(toAddress)
        case 3 => _root_.scalapb.descriptors.PLong(startTime)
        case 4 => _root_.scalapb.descriptors.PRepeated(vestingPeriods.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.type = cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount
    // @@protoc_insertion_point(GeneratedMessage[cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount])
}

object MsgCreatePeriodicVestingAccount extends scalapb.GeneratedMessageCompanion[cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount = {
    var __fromAddress: _root_.scala.Predef.String = ""
    var __toAddress: _root_.scala.Predef.String = ""
    var __startTime: _root_.scala.Long = 0L
    val __vestingPeriods: _root_.scala.collection.immutable.VectorBuilder[cosmos.vesting.v1beta1.Period] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.vesting.v1beta1.Period]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __fromAddress = _input__.readStringRequireUtf8()
        case 18 =>
          __toAddress = _input__.readStringRequireUtf8()
        case 24 =>
          __startTime = _input__.readInt64()
        case 34 =>
          __vestingPeriods += _root_.scalapb.LiteParser.readMessage[cosmos.vesting.v1beta1.Period](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount(
        fromAddress = __fromAddress,
        toAddress = __toAddress,
        startTime = __startTime,
        vestingPeriods = __vestingPeriods.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount(
        fromAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        toAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        startTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        vestingPeriods = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[cosmos.vesting.v1beta1.Period]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.vesting.v1beta1.TxProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.vesting.v1beta1.TxProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = cosmos.vesting.v1beta1.Period
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount(
    fromAddress = "",
    toAddress = "",
    startTime = 0L,
    vestingPeriods = _root_.scala.Seq.empty
  )
  implicit class MsgCreatePeriodicVestingAccountLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount](_l) {
    def fromAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fromAddress)((c_, f_) => c_.copy(fromAddress = f_))
    def toAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.toAddress)((c_, f_) => c_.copy(toAddress = f_))
    def startTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.startTime)((c_, f_) => c_.copy(startTime = f_))
    def vestingPeriods: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.vesting.v1beta1.Period]] = field(_.vestingPeriods)((c_, f_) => c_.copy(vestingPeriods = f_))
  }
  final val FROM_ADDRESS_FIELD_NUMBER = 1
  final val TO_ADDRESS_FIELD_NUMBER = 2
  final val START_TIME_FIELD_NUMBER = 3
  final val VESTING_PERIODS_FIELD_NUMBER = 4
  def of(
    fromAddress: _root_.scala.Predef.String,
    toAddress: _root_.scala.Predef.String,
    startTime: _root_.scala.Long,
    vestingPeriods: _root_.scala.Seq[cosmos.vesting.v1beta1.Period]
  ): _root_.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount = _root_.cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount(
    fromAddress,
    toAddress,
    startTime,
    vestingPeriods
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount])
}
