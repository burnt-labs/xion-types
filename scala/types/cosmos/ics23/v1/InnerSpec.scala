// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.ics23.v1

/**
  * InnerSpec contains all store-specific structure info to determine if two proofs from a
  * given store are neighbors.
  *
  * This enables:
  *
  * isLeftMost(spec: InnerSpec, op: InnerOp)
  * isRightMost(spec: InnerSpec, op: InnerOp)
  * isLeftNeighbor(spec: InnerSpec, left: InnerOp, right: InnerOp)
  *
  * @param childOrder
  *   Child order is the ordering of the children node, must count from 0
  *   iavl tree is [0, 1] (left then right)
  *   merk is [0, 2, 1] (left, right, here)
  * @param emptyChild
  *   empty child is the prehash image that is used when one child is nil (eg. 20 bytes of 0)
  * @param hash
  *   hash is the algorithm that must be used for each InnerOp
  */
@SerialVersionUID(0L)
final case class InnerSpec(
    childOrder: _root_.scala.Seq[_root_.scala.Int] = _root_.scala.Seq.empty,
    childSize: _root_.scala.Int = 0,
    minPrefixLength: _root_.scala.Int = 0,
    maxPrefixLength: _root_.scala.Int = 0,
    emptyChild: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    hash: cosmos.ics23.v1.HashOp = cosmos.ics23.v1.HashOp.NO_HASH,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[InnerSpec] {
    private[this] def childOrderSerializedSize = {
      if (__childOrderSerializedSizeField == 0) __childOrderSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        childOrder.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(__i))
        __s
      }
      __childOrderSerializedSizeField
    }
    @transient private[this] var __childOrderSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (childOrder.nonEmpty) {
        val __localsize = childOrderSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      
      {
        val __value = childSize
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
        }
      };
      
      {
        val __value = minPrefixLength
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
        }
      };
      
      {
        val __value = maxPrefixLength
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, __value)
        }
      };
      
      {
        val __value = emptyChild
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, __value)
        }
      };
      
      {
        val __value = hash.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      if (childOrder.nonEmpty) {
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(childOrderSerializedSize)
        childOrder.foreach(_output__.writeInt32NoTag)
      };
      {
        val __v = childSize
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = minPrefixLength
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      {
        val __v = maxPrefixLength
        if (__v != 0) {
          _output__.writeInt32(4, __v)
        }
      };
      {
        val __v = emptyChild
        if (!__v.isEmpty) {
          _output__.writeBytes(5, __v)
        }
      };
      {
        val __v = hash.value
        if (__v != 0) {
          _output__.writeEnum(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearChildOrder = copy(childOrder = _root_.scala.Seq.empty)
    def addChildOrder(__vs: _root_.scala.Int *): InnerSpec = addAllChildOrder(__vs)
    def addAllChildOrder(__vs: Iterable[_root_.scala.Int]): InnerSpec = copy(childOrder = childOrder ++ __vs)
    def withChildOrder(__v: _root_.scala.Seq[_root_.scala.Int]): InnerSpec = copy(childOrder = __v)
    def withChildSize(__v: _root_.scala.Int): InnerSpec = copy(childSize = __v)
    def withMinPrefixLength(__v: _root_.scala.Int): InnerSpec = copy(minPrefixLength = __v)
    def withMaxPrefixLength(__v: _root_.scala.Int): InnerSpec = copy(maxPrefixLength = __v)
    def withEmptyChild(__v: _root_.com.google.protobuf.ByteString): InnerSpec = copy(emptyChild = __v)
    def withHash(__v: cosmos.ics23.v1.HashOp): InnerSpec = copy(hash = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => childOrder
        case 2 => {
          val __t = childSize
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = minPrefixLength
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = maxPrefixLength
          if (__t != 0) __t else null
        }
        case 5 => {
          val __t = emptyChild
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 6 => {
          val __t = hash.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(childOrder.iterator.map(_root_.scalapb.descriptors.PInt(_)).toVector)
        case 2 => _root_.scalapb.descriptors.PInt(childSize)
        case 3 => _root_.scalapb.descriptors.PInt(minPrefixLength)
        case 4 => _root_.scalapb.descriptors.PInt(maxPrefixLength)
        case 5 => _root_.scalapb.descriptors.PByteString(emptyChild)
        case 6 => _root_.scalapb.descriptors.PEnum(hash.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.ics23.v1.InnerSpec.type = cosmos.ics23.v1.InnerSpec
    // @@protoc_insertion_point(GeneratedMessage[cosmos.ics23.v1.InnerSpec])
}

object InnerSpec extends scalapb.GeneratedMessageCompanion[cosmos.ics23.v1.InnerSpec] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.ics23.v1.InnerSpec] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.ics23.v1.InnerSpec = {
    val __childOrder: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Int] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Int]
    var __childSize: _root_.scala.Int = 0
    var __minPrefixLength: _root_.scala.Int = 0
    var __maxPrefixLength: _root_.scala.Int = 0
    var __emptyChild: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __hash: cosmos.ics23.v1.HashOp = cosmos.ics23.v1.HashOp.NO_HASH
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __childOrder += _input__.readInt32()
        case 10 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __childOrder += _input__.readInt32()
          }
          _input__.popLimit(oldLimit)
        }
        case 16 =>
          __childSize = _input__.readInt32()
        case 24 =>
          __minPrefixLength = _input__.readInt32()
        case 32 =>
          __maxPrefixLength = _input__.readInt32()
        case 42 =>
          __emptyChild = _input__.readBytes()
        case 48 =>
          __hash = cosmos.ics23.v1.HashOp.fromValue(_input__.readEnum())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.ics23.v1.InnerSpec(
        childOrder = __childOrder.result(),
        childSize = __childSize,
        minPrefixLength = __minPrefixLength,
        maxPrefixLength = __maxPrefixLength,
        emptyChild = __emptyChild,
        hash = __hash,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.ics23.v1.InnerSpec] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.ics23.v1.InnerSpec(
        childOrder = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Int]]).getOrElse(_root_.scala.Seq.empty),
        childSize = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        minPrefixLength = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        maxPrefixLength = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        emptyChild = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        hash = cosmos.ics23.v1.HashOp.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.ics23.v1.HashOp.NO_HASH.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.ics23.v1.ProofsProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.ics23.v1.ProofsProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => cosmos.ics23.v1.HashOp
    }
  }
  lazy val defaultInstance = cosmos.ics23.v1.InnerSpec(
    childOrder = _root_.scala.Seq.empty,
    childSize = 0,
    minPrefixLength = 0,
    maxPrefixLength = 0,
    emptyChild = _root_.com.google.protobuf.ByteString.EMPTY,
    hash = cosmos.ics23.v1.HashOp.NO_HASH
  )
  implicit class InnerSpecLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.ics23.v1.InnerSpec]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.ics23.v1.InnerSpec](_l) {
    def childOrder: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Int]] = field(_.childOrder)((c_, f_) => c_.copy(childOrder = f_))
    def childSize: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.childSize)((c_, f_) => c_.copy(childSize = f_))
    def minPrefixLength: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.minPrefixLength)((c_, f_) => c_.copy(minPrefixLength = f_))
    def maxPrefixLength: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.maxPrefixLength)((c_, f_) => c_.copy(maxPrefixLength = f_))
    def emptyChild: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.emptyChild)((c_, f_) => c_.copy(emptyChild = f_))
    def hash: _root_.scalapb.lenses.Lens[UpperPB, cosmos.ics23.v1.HashOp] = field(_.hash)((c_, f_) => c_.copy(hash = f_))
  }
  final val CHILD_ORDER_FIELD_NUMBER = 1
  final val CHILD_SIZE_FIELD_NUMBER = 2
  final val MIN_PREFIX_LENGTH_FIELD_NUMBER = 3
  final val MAX_PREFIX_LENGTH_FIELD_NUMBER = 4
  final val EMPTY_CHILD_FIELD_NUMBER = 5
  final val HASH_FIELD_NUMBER = 6
  def of(
    childOrder: _root_.scala.Seq[_root_.scala.Int],
    childSize: _root_.scala.Int,
    minPrefixLength: _root_.scala.Int,
    maxPrefixLength: _root_.scala.Int,
    emptyChild: _root_.com.google.protobuf.ByteString,
    hash: cosmos.ics23.v1.HashOp
  ): _root_.cosmos.ics23.v1.InnerSpec = _root_.cosmos.ics23.v1.InnerSpec(
    childOrder,
    childSize,
    minPrefixLength,
    maxPrefixLength,
    emptyChild,
    hash
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.ics23.v1.InnerSpec])
}
