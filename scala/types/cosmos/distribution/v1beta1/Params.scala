// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.distribution.v1beta1

/** Params defines the set of params for the distribution module.
  *
  * @param baseProposerReward
  *   Deprecated: The base_proposer_reward field is deprecated and is no longer used
  *   in the x/distribution module's reward mechanism.
  * @param bonusProposerReward
  *   Deprecated: The bonus_proposer_reward field is deprecated and is no longer used
  *   in the x/distribution module's reward mechanism.
  */
@SerialVersionUID(0L)
final case class Params(
    communityTax: _root_.scala.Predef.String = "",
    @scala.deprecated(message="Marked as deprecated in proto file", "") baseProposerReward: _root_.scala.Predef.String = "",
    @scala.deprecated(message="Marked as deprecated in proto file", "") bonusProposerReward: _root_.scala.Predef.String = "",
    withdrawAddrEnabled: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Params] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = communityTax
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = baseProposerReward
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = bonusProposerReward
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = withdrawAddrEnabled
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = communityTax
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = baseProposerReward
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = bonusProposerReward
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = withdrawAddrEnabled
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withCommunityTax(__v: _root_.scala.Predef.String): Params = copy(communityTax = __v)
    def withBaseProposerReward(__v: _root_.scala.Predef.String): Params = copy(baseProposerReward = __v)
    def withBonusProposerReward(__v: _root_.scala.Predef.String): Params = copy(bonusProposerReward = __v)
    def withWithdrawAddrEnabled(__v: _root_.scala.Boolean): Params = copy(withdrawAddrEnabled = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = communityTax
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = baseProposerReward
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = bonusProposerReward
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = withdrawAddrEnabled
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(communityTax)
        case 2 => _root_.scalapb.descriptors.PString(baseProposerReward)
        case 3 => _root_.scalapb.descriptors.PString(bonusProposerReward)
        case 4 => _root_.scalapb.descriptors.PBoolean(withdrawAddrEnabled)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.distribution.v1beta1.Params.type = cosmos.distribution.v1beta1.Params
    // @@protoc_insertion_point(GeneratedMessage[cosmos.distribution.v1beta1.Params])
}

object Params extends scalapb.GeneratedMessageCompanion[cosmos.distribution.v1beta1.Params] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.distribution.v1beta1.Params] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.distribution.v1beta1.Params = {
    var __communityTax: _root_.scala.Predef.String = ""
    var __baseProposerReward: _root_.scala.Predef.String = ""
    var __bonusProposerReward: _root_.scala.Predef.String = ""
    var __withdrawAddrEnabled: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __communityTax = _input__.readStringRequireUtf8()
        case 18 =>
          __baseProposerReward = _input__.readStringRequireUtf8()
        case 26 =>
          __bonusProposerReward = _input__.readStringRequireUtf8()
        case 32 =>
          __withdrawAddrEnabled = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.distribution.v1beta1.Params(
        communityTax = __communityTax,
        baseProposerReward = __baseProposerReward,
        bonusProposerReward = __bonusProposerReward,
        withdrawAddrEnabled = __withdrawAddrEnabled,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.distribution.v1beta1.Params] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.distribution.v1beta1.Params(
        communityTax = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        baseProposerReward = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        bonusProposerReward = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        withdrawAddrEnabled = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.distribution.v1beta1.DistributionProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.distribution.v1beta1.DistributionProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.distribution.v1beta1.Params(
    communityTax = "",
    baseProposerReward = "",
    bonusProposerReward = "",
    withdrawAddrEnabled = false
  )
  implicit class ParamsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.distribution.v1beta1.Params]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.distribution.v1beta1.Params](_l) {
    def communityTax: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.communityTax)((c_, f_) => c_.copy(communityTax = f_))
    def baseProposerReward: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.baseProposerReward)((c_, f_) => c_.copy(baseProposerReward = f_))
    def bonusProposerReward: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.bonusProposerReward)((c_, f_) => c_.copy(bonusProposerReward = f_))
    def withdrawAddrEnabled: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.withdrawAddrEnabled)((c_, f_) => c_.copy(withdrawAddrEnabled = f_))
  }
  final val COMMUNITY_TAX_FIELD_NUMBER = 1
  final val BASE_PROPOSER_REWARD_FIELD_NUMBER = 2
  final val BONUS_PROPOSER_REWARD_FIELD_NUMBER = 3
  final val WITHDRAW_ADDR_ENABLED_FIELD_NUMBER = 4
  def of(
    communityTax: _root_.scala.Predef.String,
    baseProposerReward: _root_.scala.Predef.String,
    bonusProposerReward: _root_.scala.Predef.String,
    withdrawAddrEnabled: _root_.scala.Boolean
  ): _root_.cosmos.distribution.v1beta1.Params = _root_.cosmos.distribution.v1beta1.Params(
    communityTax,
    baseProposerReward,
    bonusProposerReward,
    withdrawAddrEnabled
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.distribution.v1beta1.Params])
}
