// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.distribution.v1beta1

/** ValidatorHistoricalRewardsRecord is used for import / export via genesis
  * json.
  *
  * @param validatorAddress
  *   validator_address is the address of the validator.
  * @param period
  *   period defines the period the historical rewards apply to.
  * @param rewards
  *   rewards defines the historical rewards of a validator.
  */
@SerialVersionUID(0L)
final case class ValidatorHistoricalRewardsRecord(
    validatorAddress: _root_.scala.Predef.String = "",
    period: _root_.scala.Long = 0L,
    rewards: _root_.scala.Option[cosmos.distribution.v1beta1.ValidatorHistoricalRewards] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ValidatorHistoricalRewardsRecord] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = validatorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = period
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
        }
      };
      if (rewards.isDefined) {
        val __value = rewards.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = validatorAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = period
        if (__v != 0L) {
          _output__.writeUInt64(2, __v)
        }
      };
      rewards.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withValidatorAddress(__v: _root_.scala.Predef.String): ValidatorHistoricalRewardsRecord = copy(validatorAddress = __v)
    def withPeriod(__v: _root_.scala.Long): ValidatorHistoricalRewardsRecord = copy(period = __v)
    def getRewards: cosmos.distribution.v1beta1.ValidatorHistoricalRewards = rewards.getOrElse(cosmos.distribution.v1beta1.ValidatorHistoricalRewards.defaultInstance)
    def clearRewards: ValidatorHistoricalRewardsRecord = copy(rewards = _root_.scala.None)
    def withRewards(__v: cosmos.distribution.v1beta1.ValidatorHistoricalRewards): ValidatorHistoricalRewardsRecord = copy(rewards = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = validatorAddress
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = period
          if (__t != 0L) __t else null
        }
        case 3 => rewards.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(validatorAddress)
        case 2 => _root_.scalapb.descriptors.PLong(period)
        case 3 => rewards.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord.type = cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord
    // @@protoc_insertion_point(GeneratedMessage[cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord])
}

object ValidatorHistoricalRewardsRecord extends scalapb.GeneratedMessageCompanion[cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord = {
    var __validatorAddress: _root_.scala.Predef.String = ""
    var __period: _root_.scala.Long = 0L
    var __rewards: _root_.scala.Option[cosmos.distribution.v1beta1.ValidatorHistoricalRewards] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __validatorAddress = _input__.readStringRequireUtf8()
        case 16 =>
          __period = _input__.readUInt64()
        case 26 =>
          __rewards = _root_.scala.Option(__rewards.fold(_root_.scalapb.LiteParser.readMessage[cosmos.distribution.v1beta1.ValidatorHistoricalRewards](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord(
        validatorAddress = __validatorAddress,
        period = __period,
        rewards = __rewards,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord(
        validatorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        period = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        rewards = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[cosmos.distribution.v1beta1.ValidatorHistoricalRewards]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.distribution.v1beta1.GenesisProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.distribution.v1beta1.GenesisProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = cosmos.distribution.v1beta1.ValidatorHistoricalRewards
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord(
    validatorAddress = "",
    period = 0L,
    rewards = _root_.scala.None
  )
  implicit class ValidatorHistoricalRewardsRecordLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord](_l) {
    def validatorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.validatorAddress)((c_, f_) => c_.copy(validatorAddress = f_))
    def period: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.period)((c_, f_) => c_.copy(period = f_))
    def rewards: _root_.scalapb.lenses.Lens[UpperPB, cosmos.distribution.v1beta1.ValidatorHistoricalRewards] = field(_.getRewards)((c_, f_) => c_.copy(rewards = _root_.scala.Option(f_)))
    def optionalRewards: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.distribution.v1beta1.ValidatorHistoricalRewards]] = field(_.rewards)((c_, f_) => c_.copy(rewards = f_))
  }
  final val VALIDATOR_ADDRESS_FIELD_NUMBER = 1
  final val PERIOD_FIELD_NUMBER = 2
  final val REWARDS_FIELD_NUMBER = 3
  def of(
    validatorAddress: _root_.scala.Predef.String,
    period: _root_.scala.Long,
    rewards: _root_.scala.Option[cosmos.distribution.v1beta1.ValidatorHistoricalRewards]
  ): _root_.cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord = _root_.cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord(
    validatorAddress,
    period,
    rewards
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.distribution.v1beta1.ValidatorHistoricalRewardsRecord])
}
