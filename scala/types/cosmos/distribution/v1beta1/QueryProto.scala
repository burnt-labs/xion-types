// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.distribution.v1beta1

object QueryProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    cosmos.base.query.v1beta1.PaginationProto,
    com.google.protobuf.GogoProto,
    com.google.api.AnnotationsProto,
    cosmos.base.v1beta1.CoinProto,
    cosmos.distribution.v1beta1.DistributionProto,
    cosmos_proto.CosmosProto,
    amino.AminoProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      cosmos.distribution.v1beta1.QueryParamsRequest,
      cosmos.distribution.v1beta1.QueryParamsResponse,
      cosmos.distribution.v1beta1.QueryValidatorDistributionInfoRequest,
      cosmos.distribution.v1beta1.QueryValidatorDistributionInfoResponse,
      cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest,
      cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse,
      cosmos.distribution.v1beta1.QueryValidatorCommissionRequest,
      cosmos.distribution.v1beta1.QueryValidatorCommissionResponse,
      cosmos.distribution.v1beta1.QueryValidatorSlashesRequest,
      cosmos.distribution.v1beta1.QueryValidatorSlashesResponse,
      cosmos.distribution.v1beta1.QueryDelegationRewardsRequest,
      cosmos.distribution.v1beta1.QueryDelegationRewardsResponse,
      cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest,
      cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse,
      cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest,
      cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse,
      cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest,
      cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse,
      cosmos.distribution.v1beta1.QueryCommunityPoolRequest,
      cosmos.distribution.v1beta1.QueryCommunityPoolResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Cidjb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvcXVlcnkucHJvdG8SG2Nvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMRoqY
  29zbW9zL2Jhc2UvcXVlcnkvdjFiZXRhMS9wYWdpbmF0aW9uLnByb3RvGhRnb2dvcHJvdG8vZ29nby5wcm90bxocZ29vZ2xlL2Fwa
  S9hbm5vdGF0aW9ucy5wcm90bxoeY29zbW9zL2Jhc2UvdjFiZXRhMS9jb2luLnByb3RvGi5jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxY
  mV0YTEvZGlzdHJpYnV0aW9uLnByb3RvGhljb3Ntb3NfcHJvdG8vY29zbW9zLnByb3RvGhFhbWluby9hbWluby5wcm90byIUChJRd
  WVyeVBhcmFtc1JlcXVlc3QiaAoTUXVlcnlQYXJhbXNSZXNwb25zZRJRCgZwYXJhbXMYASABKAsyIy5jb3Ntb3MuZGlzdHJpYnV0a
  W9uLnYxYmV0YTEuUGFyYW1zQhTiPwgSBnBhcmFtc8jeHwCo57AqAVIGcGFyYW1zIowBCiVRdWVyeVZhbGlkYXRvckRpc3RyaWJ1d
  GlvbkluZm9SZXF1ZXN0EmMKEXZhbGlkYXRvcl9hZGRyZXNzGAEgASgJQjbiPxISEHZhbGlkYXRvckFkZHJlc3PStC0dY29zbW9zL
  lZhbGlkYXRvckFkZHJlc3NTdHJpbmdSEHZhbGlkYXRvckFkZHJlc3MipgMKJlF1ZXJ5VmFsaWRhdG9yRGlzdHJpYnV0aW9uSW5mb
  1Jlc3BvbnNlEmAKEG9wZXJhdG9yX2FkZHJlc3MYASABKAlCNeI/ERIPb3BlcmF0b3JBZGRyZXNz0rQtHWNvc21vcy5WYWxpZGF0b
  3JBZGRyZXNzU3RyaW5nUg9vcGVyYXRvckFkZHJlc3MSlgEKEXNlbGZfYm9uZF9yZXdhcmRzGAIgAygLMhwuY29zbW9zLmJhc2Uud
  jFiZXRhMS5EZWNDb2luQkziPxESD3NlbGZCb25kUmV3YXJkc8jeHwCq3x8rZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90e
  XBlcy5EZWNDb2luc6jnsCoBUg9zZWxmQm9uZFJld2FyZHMSgAEKCmNvbW1pc3Npb24YAyADKAsyHC5jb3Ntb3MuYmFzZS52MWJld
  GExLkRlY0NvaW5CQuI/DBIKY29tbWlzc2lvbsjeHwCq3x8rZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5EZWNDb
  2luc1IKY29tbWlzc2lvbiKOAQonUXVlcnlWYWxpZGF0b3JPdXRzdGFuZGluZ1Jld2FyZHNSZXF1ZXN0EmMKEXZhbGlkYXRvcl9hZ
  GRyZXNzGAEgASgJQjbiPxISEHZhbGlkYXRvckFkZHJlc3PStC0dY29zbW9zLlZhbGlkYXRvckFkZHJlc3NTdHJpbmdSEHZhbGlkY
  XRvckFkZHJlc3MilQEKKFF1ZXJ5VmFsaWRhdG9yT3V0c3RhbmRpbmdSZXdhcmRzUmVzcG9uc2USaQoHcmV3YXJkcxgBIAEoCzI4L
  mNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5WYWxpZGF0b3JPdXRzdGFuZGluZ1Jld2FyZHNCFeI/CRIHcmV3YXJkc8jeHwCo5
  7AqAVIHcmV3YXJkcyKGAQofUXVlcnlWYWxpZGF0b3JDb21taXNzaW9uUmVxdWVzdBJjChF2YWxpZGF0b3JfYWRkcmVzcxgBIAEoC
  UI24j8SEhB2YWxpZGF0b3JBZGRyZXNz0rQtHWNvc21vcy5WYWxpZGF0b3JBZGRyZXNzU3RyaW5nUhB2YWxpZGF0b3JBZGRyZXNzI
  pkBCiBRdWVyeVZhbGlkYXRvckNvbW1pc3Npb25SZXNwb25zZRJ1Cgpjb21taXNzaW9uGAEgASgLMjsuY29zbW9zLmRpc3RyaWJ1d
  Glvbi52MWJldGExLlZhbGlkYXRvckFjY3VtdWxhdGVkQ29tbWlzc2lvbkIY4j8MEgpjb21taXNzaW9uyN4fAKjnsCoBUgpjb21ta
  XNzaW9uItgCChxRdWVyeVZhbGlkYXRvclNsYXNoZXNSZXF1ZXN0EmMKEXZhbGlkYXRvcl9hZGRyZXNzGAEgASgJQjbiPxISEHZhb
  GlkYXRvckFkZHJlc3PStC0dY29zbW9zLlZhbGlkYXRvckFkZHJlc3NTdHJpbmdSEHZhbGlkYXRvckFkZHJlc3MSPAoPc3RhcnRpb
  mdfaGVpZ2h0GAIgASgEQhPiPxASDnN0YXJ0aW5nSGVpZ2h0Ug5zdGFydGluZ0hlaWdodBI2Cg1lbmRpbmdfaGVpZ2h0GAMgASgEQ
  hHiPw4SDGVuZGluZ0hlaWdodFIMZW5kaW5nSGVpZ2h0ElcKCnBhZ2luYXRpb24YBCABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52M
  WJldGExLlBhZ2VSZXF1ZXN0Qg/iPwwSCnBhZ2luYXRpb25SCnBhZ2luYXRpb246BIigHwAi3AEKHVF1ZXJ5VmFsaWRhdG9yU2xhc
  2hlc1Jlc3BvbnNlEmEKB3NsYXNoZXMYASADKAsyMC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuVmFsaWRhdG9yU2xhc2hFd
  mVudEIV4j8JEgdzbGFzaGVzyN4fAKjnsCoBUgdzbGFzaGVzElgKCnBhZ2luYXRpb24YAiABKAsyJy5jb3Ntb3MuYmFzZS5xdWVye
  S52MWJldGExLlBhZ2VSZXNwb25zZUIP4j8MEgpwYWdpbmF0aW9uUgpwYWdpbmF0aW9uIuoBCh1RdWVyeURlbGVnYXRpb25SZXdhc
  mRzUmVxdWVzdBJaChFkZWxlZ2F0b3JfYWRkcmVzcxgBIAEoCUIt4j8SEhBkZWxlZ2F0b3JBZGRyZXNz0rQtFGNvc21vcy5BZGRyZ
  XNzU3RyaW5nUhBkZWxlZ2F0b3JBZGRyZXNzEmMKEXZhbGlkYXRvcl9hZGRyZXNzGAIgASgJQjbiPxISEHZhbGlkYXRvckFkZHJlc
  3PStC0dY29zbW9zLlZhbGlkYXRvckFkZHJlc3NTdHJpbmdSEHZhbGlkYXRvckFkZHJlc3M6CIigHwDooB8AIp4BCh5RdWVyeURlb
  GVnYXRpb25SZXdhcmRzUmVzcG9uc2USfAoHcmV3YXJkcxgBIAMoCzIcLmNvc21vcy5iYXNlLnYxYmV0YTEuRGVjQ29pbkJE4j8JE
  gdyZXdhcmRzyN4fAKrfHytnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY0NvaW5zqOewKgFSB3Jld2FyZHMii
  gEKIlF1ZXJ5RGVsZWdhdGlvblRvdGFsUmV3YXJkc1JlcXVlc3QSWgoRZGVsZWdhdG9yX2FkZHJlc3MYASABKAlCLeI/EhIQZGVsZ
  WdhdG9yQWRkcmVzc9K0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IQZGVsZWdhdG9yQWRkcmVzczoIiKAfAOigHwAihgIKI1F1ZXJ5R
  GVsZWdhdGlvblRvdGFsUmV3YXJkc1Jlc3BvbnNlEmcKB3Jld2FyZHMYASADKAsyNi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0Y
  TEuRGVsZWdhdGlvbkRlbGVnYXRvclJld2FyZEIV4j8JEgdyZXdhcmRzyN4fAKjnsCoBUgdyZXdhcmRzEnYKBXRvdGFsGAIgAygLM
  hwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQkLiPwcSBXRvdGFsyN4fAKrfHytnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc
  2RrL3R5cGVzLkRlY0NvaW5zqOewKgFSBXRvdGFsIocBCh9RdWVyeURlbGVnYXRvclZhbGlkYXRvcnNSZXF1ZXN0EloKEWRlbGVnY
  XRvcl9hZGRyZXNzGAEgASgJQi3iPxISEGRlbGVnYXRvckFkZHJlc3PStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSEGRlbGVnYXRvc
  kFkZHJlc3M6CIigHwDooB8AIl0KIFF1ZXJ5RGVsZWdhdG9yVmFsaWRhdG9yc1Jlc3BvbnNlEi8KCnZhbGlkYXRvcnMYASADKAlCD
  +I/DBIKdmFsaWRhdG9yc1IKdmFsaWRhdG9yczoIiKAfAOigHwAijAEKJFF1ZXJ5RGVsZWdhdG9yV2l0aGRyYXdBZGRyZXNzUmVxd
  WVzdBJaChFkZWxlZ2F0b3JfYWRkcmVzcxgBIAEoCUIt4j8SEhBkZWxlZ2F0b3JBZGRyZXNz0rQtFGNvc21vcy5BZGRyZXNzU3Rya
  W5nUhBkZWxlZ2F0b3JBZGRyZXNzOgiIoB8A6KAfACKKAQolUXVlcnlEZWxlZ2F0b3JXaXRoZHJhd0FkZHJlc3NSZXNwb25zZRJXC
  hB3aXRoZHJhd19hZGRyZXNzGAEgASgJQiziPxESD3dpdGhkcmF3QWRkcmVzc9K0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IPd2l0a
  GRyYXdBZGRyZXNzOgiIoB8A6KAfACIbChlRdWVyeUNvbW11bml0eVBvb2xSZXF1ZXN0IpEBChpRdWVyeUNvbW11bml0eVBvb2xSZ
  XNwb25zZRJzCgRwb29sGAEgAygLMhwuY29zbW9zLmJhc2UudjFiZXRhMS5EZWNDb2luQkHiPwYSBHBvb2zI3h8Aqt8fK2dpdGh1Y
  i5jb20vY29zbW9zL2Nvc21vcy1zZGsvdHlwZXMuRGVjQ29pbnOo57AqAVIEcG9vbDLEEQoFUXVlcnkSmAEKBlBhcmFtcxIvLmNvc
  21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeVBhcmFtc1JlcXVlc3QaMC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuU
  XVlcnlQYXJhbXNSZXNwb25zZSIrgtPkkwIlEiMvY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL3BhcmFtcxLpAQoZVmFsaWRhd
  G9yRGlzdHJpYnV0aW9uSW5mbxJCLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeVZhbGlkYXRvckRpc3RyaWJ1dGlvb
  kluZm9SZXF1ZXN0GkMuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5VmFsaWRhdG9yRGlzdHJpYnV0aW9uSW5mb1Jlc
  3BvbnNlIkOC0+STAj0SOy9jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvdmFsaWRhdG9ycy97dmFsaWRhdG9yX2FkZHJlc3N9E
  oMCChtWYWxpZGF0b3JPdXRzdGFuZGluZ1Jld2FyZHMSRC5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlWYWxpZGF0b
  3JPdXRzdGFuZGluZ1Jld2FyZHNSZXF1ZXN0GkUuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5VmFsaWRhdG9yT3V0c
  3RhbmRpbmdSZXdhcmRzUmVzcG9uc2UiV4LT5JMCURJPL2Nvc21vcy9kaXN0cmlidXRpb24vdjFiZXRhMS92YWxpZGF0b3JzL3t2Y
  WxpZGF0b3JfYWRkcmVzc30vb3V0c3RhbmRpbmdfcmV3YXJkcxLiAQoTVmFsaWRhdG9yQ29tbWlzc2lvbhI8LmNvc21vcy5kaXN0c
  mlidXRpb24udjFiZXRhMS5RdWVyeVZhbGlkYXRvckNvbW1pc3Npb25SZXF1ZXN0Gj0uY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJld
  GExLlF1ZXJ5VmFsaWRhdG9yQ29tbWlzc2lvblJlc3BvbnNlIk6C0+STAkgSRi9jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvd
  mFsaWRhdG9ycy97dmFsaWRhdG9yX2FkZHJlc3N9L2NvbW1pc3Npb24S1gEKEFZhbGlkYXRvclNsYXNoZXMSOS5jb3Ntb3MuZGlzd
  HJpYnV0aW9uLnYxYmV0YTEuUXVlcnlWYWxpZGF0b3JTbGFzaGVzUmVxdWVzdBo6LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhM
  S5RdWVyeVZhbGlkYXRvclNsYXNoZXNSZXNwb25zZSJLgtPkkwJFEkMvY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL3ZhbGlkY
  XRvcnMve3ZhbGlkYXRvcl9hZGRyZXNzfS9zbGFzaGVzEu0BChFEZWxlZ2F0aW9uUmV3YXJkcxI6LmNvc21vcy5kaXN0cmlidXRpb
  24udjFiZXRhMS5RdWVyeURlbGVnYXRpb25SZXdhcmRzUmVxdWVzdBo7LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVye
  URlbGVnYXRpb25SZXdhcmRzUmVzcG9uc2UiX4LT5JMCWRJXL2Nvc21vcy9kaXN0cmlidXRpb24vdjFiZXRhMS9kZWxlZ2F0b3JzL
  3tkZWxlZ2F0b3JfYWRkcmVzc30vcmV3YXJkcy97dmFsaWRhdG9yX2FkZHJlc3N9EugBChZEZWxlZ2F0aW9uVG90YWxSZXdhcmRzE
  j8uY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5RGVsZWdhdGlvblRvdGFsUmV3YXJkc1JlcXVlc3QaQC5jb3Ntb3MuZ
  GlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlEZWxlZ2F0aW9uVG90YWxSZXdhcmRzUmVzcG9uc2UiS4LT5JMCRRJDL2Nvc21vcy9ka
  XN0cmlidXRpb24vdjFiZXRhMS9kZWxlZ2F0b3JzL3tkZWxlZ2F0b3JfYWRkcmVzc30vcmV3YXJkcxLiAQoTRGVsZWdhdG9yVmFsa
  WRhdG9ycxI8LmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeURlbGVnYXRvclZhbGlkYXRvcnNSZXF1ZXN0Gj0uY29zb
  W9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5RGVsZWdhdG9yVmFsaWRhdG9yc1Jlc3BvbnNlIk6C0+STAkgSRi9jb3Ntb3MvZ
  GlzdHJpYnV0aW9uL3YxYmV0YTEvZGVsZWdhdG9ycy97ZGVsZWdhdG9yX2FkZHJlc3N9L3ZhbGlkYXRvcnMS9wEKGERlbGVnYXRvc
  ldpdGhkcmF3QWRkcmVzcxJBLmNvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5RdWVyeURlbGVnYXRvcldpdGhkcmF3QWRkcmVzc
  1JlcXVlc3QaQi5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlEZWxlZ2F0b3JXaXRoZHJhd0FkZHJlc3NSZXNwb25zZ
  SJUgtPkkwJOEkwvY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL2RlbGVnYXRvcnMve2RlbGVnYXRvcl9hZGRyZXNzfS93aXRoZ
  HJhd19hZGRyZXNzErUBCg1Db21tdW5pdHlQb29sEjYuY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLlF1ZXJ5Q29tbXVuaXR5U
  G9vbFJlcXVlc3QaNy5jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuUXVlcnlDb21tdW5pdHlQb29sUmVzcG9uc2UiM4LT5JMCL
  RIrL2Nvc21vcy9kaXN0cmlidXRpb24vdjFiZXRhMS9jb21tdW5pdHlfcG9vbEIzWjFnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc
  2RrL3gvZGlzdHJpYnV0aW9uL3R5cGVzYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      cosmos.base.query.v1beta1.PaginationProto.javaDescriptor,
      com.google.protobuf.GogoProto.javaDescriptor,
      com.google.api.AnnotationsProto.javaDescriptor,
      cosmos.base.v1beta1.CoinProto.javaDescriptor,
      cosmos.distribution.v1beta1.DistributionProto.javaDescriptor,
      cosmos_proto.CosmosProto.javaDescriptor,
      amino.AminoProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}