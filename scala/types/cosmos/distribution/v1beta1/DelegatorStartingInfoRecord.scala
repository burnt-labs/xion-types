// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.distribution.v1beta1

/** DelegatorStartingInfoRecord used for import / export via genesis json.
  *
  * @param delegatorAddress
  *   delegator_address is the address of the delegator.
  * @param validatorAddress
  *   validator_address is the address of the validator.
  * @param startingInfo
  *   starting_info defines the starting info of a delegator.
  */
@SerialVersionUID(0L)
final case class DelegatorStartingInfoRecord(
    delegatorAddress: _root_.scala.Predef.String = "",
    validatorAddress: _root_.scala.Predef.String = "",
    startingInfo: _root_.scala.Option[cosmos.distribution.v1beta1.DelegatorStartingInfo] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DelegatorStartingInfoRecord] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = delegatorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = validatorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      if (startingInfo.isDefined) {
        val __value = startingInfo.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = delegatorAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = validatorAddress
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      startingInfo.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withDelegatorAddress(__v: _root_.scala.Predef.String): DelegatorStartingInfoRecord = copy(delegatorAddress = __v)
    def withValidatorAddress(__v: _root_.scala.Predef.String): DelegatorStartingInfoRecord = copy(validatorAddress = __v)
    def getStartingInfo: cosmos.distribution.v1beta1.DelegatorStartingInfo = startingInfo.getOrElse(cosmos.distribution.v1beta1.DelegatorStartingInfo.defaultInstance)
    def clearStartingInfo: DelegatorStartingInfoRecord = copy(startingInfo = _root_.scala.None)
    def withStartingInfo(__v: cosmos.distribution.v1beta1.DelegatorStartingInfo): DelegatorStartingInfoRecord = copy(startingInfo = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = delegatorAddress
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = validatorAddress
          if (__t != "") __t else null
        }
        case 3 => startingInfo.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(delegatorAddress)
        case 2 => _root_.scalapb.descriptors.PString(validatorAddress)
        case 3 => startingInfo.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.distribution.v1beta1.DelegatorStartingInfoRecord.type = cosmos.distribution.v1beta1.DelegatorStartingInfoRecord
    // @@protoc_insertion_point(GeneratedMessage[cosmos.distribution.v1beta1.DelegatorStartingInfoRecord])
}

object DelegatorStartingInfoRecord extends scalapb.GeneratedMessageCompanion[cosmos.distribution.v1beta1.DelegatorStartingInfoRecord] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.distribution.v1beta1.DelegatorStartingInfoRecord] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.distribution.v1beta1.DelegatorStartingInfoRecord = {
    var __delegatorAddress: _root_.scala.Predef.String = ""
    var __validatorAddress: _root_.scala.Predef.String = ""
    var __startingInfo: _root_.scala.Option[cosmos.distribution.v1beta1.DelegatorStartingInfo] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __delegatorAddress = _input__.readStringRequireUtf8()
        case 18 =>
          __validatorAddress = _input__.readStringRequireUtf8()
        case 26 =>
          __startingInfo = _root_.scala.Option(__startingInfo.fold(_root_.scalapb.LiteParser.readMessage[cosmos.distribution.v1beta1.DelegatorStartingInfo](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.distribution.v1beta1.DelegatorStartingInfoRecord(
        delegatorAddress = __delegatorAddress,
        validatorAddress = __validatorAddress,
        startingInfo = __startingInfo,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.distribution.v1beta1.DelegatorStartingInfoRecord] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.distribution.v1beta1.DelegatorStartingInfoRecord(
        delegatorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        validatorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        startingInfo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[cosmos.distribution.v1beta1.DelegatorStartingInfo]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.distribution.v1beta1.GenesisProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.distribution.v1beta1.GenesisProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = cosmos.distribution.v1beta1.DelegatorStartingInfo
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.distribution.v1beta1.DelegatorStartingInfoRecord(
    delegatorAddress = "",
    validatorAddress = "",
    startingInfo = _root_.scala.None
  )
  implicit class DelegatorStartingInfoRecordLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.distribution.v1beta1.DelegatorStartingInfoRecord]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.distribution.v1beta1.DelegatorStartingInfoRecord](_l) {
    def delegatorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.delegatorAddress)((c_, f_) => c_.copy(delegatorAddress = f_))
    def validatorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.validatorAddress)((c_, f_) => c_.copy(validatorAddress = f_))
    def startingInfo: _root_.scalapb.lenses.Lens[UpperPB, cosmos.distribution.v1beta1.DelegatorStartingInfo] = field(_.getStartingInfo)((c_, f_) => c_.copy(startingInfo = _root_.scala.Option(f_)))
    def optionalStartingInfo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.distribution.v1beta1.DelegatorStartingInfo]] = field(_.startingInfo)((c_, f_) => c_.copy(startingInfo = f_))
  }
  final val DELEGATOR_ADDRESS_FIELD_NUMBER = 1
  final val VALIDATOR_ADDRESS_FIELD_NUMBER = 2
  final val STARTING_INFO_FIELD_NUMBER = 3
  def of(
    delegatorAddress: _root_.scala.Predef.String,
    validatorAddress: _root_.scala.Predef.String,
    startingInfo: _root_.scala.Option[cosmos.distribution.v1beta1.DelegatorStartingInfo]
  ): _root_.cosmos.distribution.v1beta1.DelegatorStartingInfoRecord = _root_.cosmos.distribution.v1beta1.DelegatorStartingInfoRecord(
    delegatorAddress,
    validatorAddress,
    startingInfo
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.distribution.v1beta1.DelegatorStartingInfoRecord])
}
