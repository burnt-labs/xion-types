// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.base.tendermint.v1beta1

/** Header defines the structure of a Tendermint block header.
  *
  * @param version
  *   basic block info
  * @param lastBlockId
  *   prev block info
  * @param lastCommitHash
  *   hashes of block data
  *   commit from validators from the last block
  * @param dataHash
  *   transactions
  * @param validatorsHash
  *   hashes from the app output from the prev block
  *   validators for the current block
  * @param nextValidatorsHash
  *   validators for the next block
  * @param consensusHash
  *   consensus params for current block
  * @param appHash
  *   state after txs from the previous block
  * @param lastResultsHash
  *   root hash of all results from the txs from the previous block
  * @param evidenceHash
  *   consensus info
  *   evidence included in the block
  * @param proposerAddress
  *   proposer_address is the original block proposer address, formatted as a Bech32 string.
  *   In Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string
  *   for better UX.
  *   original proposer of the block
  */
@SerialVersionUID(0L)
final case class Header(
    version: _root_.scala.Option[tendermint.version.Consensus] = _root_.scala.None,
    chainId: _root_.scala.Predef.String = "",
    height: _root_.scala.Long = 0L,
    time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    lastBlockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None,
    lastCommitHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    dataHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    validatorsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    nextValidatorsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    consensusHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    appHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    lastResultsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    evidenceHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    proposerAddress: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Header] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (version.isDefined) {
        val __value = version.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = chainId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      if (time.isDefined) {
        val __value = time.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (lastBlockId.isDefined) {
        val __value = lastBlockId.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = lastCommitHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(6, __value)
        }
      };
      
      {
        val __value = dataHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(7, __value)
        }
      };
      
      {
        val __value = validatorsHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(8, __value)
        }
      };
      
      {
        val __value = nextValidatorsHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(9, __value)
        }
      };
      
      {
        val __value = consensusHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(10, __value)
        }
      };
      
      {
        val __value = appHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(11, __value)
        }
      };
      
      {
        val __value = lastResultsHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(12, __value)
        }
      };
      
      {
        val __value = evidenceHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(13, __value)
        }
      };
      
      {
        val __value = proposerAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(14, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      version.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = chainId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      time.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      lastBlockId.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = lastCommitHash
        if (!__v.isEmpty) {
          _output__.writeBytes(6, __v)
        }
      };
      {
        val __v = dataHash
        if (!__v.isEmpty) {
          _output__.writeBytes(7, __v)
        }
      };
      {
        val __v = validatorsHash
        if (!__v.isEmpty) {
          _output__.writeBytes(8, __v)
        }
      };
      {
        val __v = nextValidatorsHash
        if (!__v.isEmpty) {
          _output__.writeBytes(9, __v)
        }
      };
      {
        val __v = consensusHash
        if (!__v.isEmpty) {
          _output__.writeBytes(10, __v)
        }
      };
      {
        val __v = appHash
        if (!__v.isEmpty) {
          _output__.writeBytes(11, __v)
        }
      };
      {
        val __v = lastResultsHash
        if (!__v.isEmpty) {
          _output__.writeBytes(12, __v)
        }
      };
      {
        val __v = evidenceHash
        if (!__v.isEmpty) {
          _output__.writeBytes(13, __v)
        }
      };
      {
        val __v = proposerAddress
        if (!__v.isEmpty) {
          _output__.writeString(14, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getVersion: tendermint.version.Consensus = version.getOrElse(tendermint.version.Consensus.defaultInstance)
    def clearVersion: Header = copy(version = _root_.scala.None)
    def withVersion(__v: tendermint.version.Consensus): Header = copy(version = Option(__v))
    def withChainId(__v: _root_.scala.Predef.String): Header = copy(chainId = __v)
    def withHeight(__v: _root_.scala.Long): Header = copy(height = __v)
    def getTime: com.google.protobuf.timestamp.Timestamp = time.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearTime: Header = copy(time = _root_.scala.None)
    def withTime(__v: com.google.protobuf.timestamp.Timestamp): Header = copy(time = Option(__v))
    def getLastBlockId: tendermint.types.BlockID = lastBlockId.getOrElse(tendermint.types.BlockID.defaultInstance)
    def clearLastBlockId: Header = copy(lastBlockId = _root_.scala.None)
    def withLastBlockId(__v: tendermint.types.BlockID): Header = copy(lastBlockId = Option(__v))
    def withLastCommitHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(lastCommitHash = __v)
    def withDataHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(dataHash = __v)
    def withValidatorsHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(validatorsHash = __v)
    def withNextValidatorsHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(nextValidatorsHash = __v)
    def withConsensusHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(consensusHash = __v)
    def withAppHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(appHash = __v)
    def withLastResultsHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(lastResultsHash = __v)
    def withEvidenceHash(__v: _root_.com.google.protobuf.ByteString): Header = copy(evidenceHash = __v)
    def withProposerAddress(__v: _root_.scala.Predef.String): Header = copy(proposerAddress = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => version.orNull
        case 2 => {
          val __t = chainId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 4 => time.orNull
        case 5 => lastBlockId.orNull
        case 6 => {
          val __t = lastCommitHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 7 => {
          val __t = dataHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 8 => {
          val __t = validatorsHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 9 => {
          val __t = nextValidatorsHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 10 => {
          val __t = consensusHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 11 => {
          val __t = appHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 12 => {
          val __t = lastResultsHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 13 => {
          val __t = evidenceHash
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 14 => {
          val __t = proposerAddress
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => version.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(chainId)
        case 3 => _root_.scalapb.descriptors.PLong(height)
        case 4 => time.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => lastBlockId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => _root_.scalapb.descriptors.PByteString(lastCommitHash)
        case 7 => _root_.scalapb.descriptors.PByteString(dataHash)
        case 8 => _root_.scalapb.descriptors.PByteString(validatorsHash)
        case 9 => _root_.scalapb.descriptors.PByteString(nextValidatorsHash)
        case 10 => _root_.scalapb.descriptors.PByteString(consensusHash)
        case 11 => _root_.scalapb.descriptors.PByteString(appHash)
        case 12 => _root_.scalapb.descriptors.PByteString(lastResultsHash)
        case 13 => _root_.scalapb.descriptors.PByteString(evidenceHash)
        case 14 => _root_.scalapb.descriptors.PString(proposerAddress)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.base.tendermint.v1beta1.Header.type = cosmos.base.tendermint.v1beta1.Header
    // @@protoc_insertion_point(GeneratedMessage[cosmos.base.tendermint.v1beta1.Header])
}

object Header extends scalapb.GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.Header] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.Header] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.base.tendermint.v1beta1.Header = {
    var __version: _root_.scala.Option[tendermint.version.Consensus] = _root_.scala.None
    var __chainId: _root_.scala.Predef.String = ""
    var __height: _root_.scala.Long = 0L
    var __time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __lastBlockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None
    var __lastCommitHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __dataHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __validatorsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __nextValidatorsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __consensusHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __appHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __lastResultsHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __evidenceHash: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __proposerAddress: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __version = _root_.scala.Option(__version.fold(_root_.scalapb.LiteParser.readMessage[tendermint.version.Consensus](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __chainId = _input__.readStringRequireUtf8()
        case 24 =>
          __height = _input__.readInt64()
        case 34 =>
          __time = _root_.scala.Option(__time.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __lastBlockId = _root_.scala.Option(__lastBlockId.fold(_root_.scalapb.LiteParser.readMessage[tendermint.types.BlockID](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __lastCommitHash = _input__.readBytes()
        case 58 =>
          __dataHash = _input__.readBytes()
        case 66 =>
          __validatorsHash = _input__.readBytes()
        case 74 =>
          __nextValidatorsHash = _input__.readBytes()
        case 82 =>
          __consensusHash = _input__.readBytes()
        case 90 =>
          __appHash = _input__.readBytes()
        case 98 =>
          __lastResultsHash = _input__.readBytes()
        case 106 =>
          __evidenceHash = _input__.readBytes()
        case 114 =>
          __proposerAddress = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.base.tendermint.v1beta1.Header(
        version = __version,
        chainId = __chainId,
        height = __height,
        time = __time,
        lastBlockId = __lastBlockId,
        lastCommitHash = __lastCommitHash,
        dataHash = __dataHash,
        validatorsHash = __validatorsHash,
        nextValidatorsHash = __nextValidatorsHash,
        consensusHash = __consensusHash,
        appHash = __appHash,
        lastResultsHash = __lastResultsHash,
        evidenceHash = __evidenceHash,
        proposerAddress = __proposerAddress,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.base.tendermint.v1beta1.Header] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.base.tendermint.v1beta1.Header(
        version = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[tendermint.version.Consensus]]),
        chainId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        time = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        lastBlockId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[tendermint.types.BlockID]]),
        lastCommitHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        dataHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        validatorsHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        nextValidatorsHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        consensusHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        appHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        lastResultsHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        evidenceHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        proposerAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.base.tendermint.v1beta1.TypesProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.base.tendermint.v1beta1.TypesProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = tendermint.version.Consensus
      case 4 => __out = com.google.protobuf.timestamp.Timestamp
      case 5 => __out = tendermint.types.BlockID
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.base.tendermint.v1beta1.Header(
    version = _root_.scala.None,
    chainId = "",
    height = 0L,
    time = _root_.scala.None,
    lastBlockId = _root_.scala.None,
    lastCommitHash = _root_.com.google.protobuf.ByteString.EMPTY,
    dataHash = _root_.com.google.protobuf.ByteString.EMPTY,
    validatorsHash = _root_.com.google.protobuf.ByteString.EMPTY,
    nextValidatorsHash = _root_.com.google.protobuf.ByteString.EMPTY,
    consensusHash = _root_.com.google.protobuf.ByteString.EMPTY,
    appHash = _root_.com.google.protobuf.ByteString.EMPTY,
    lastResultsHash = _root_.com.google.protobuf.ByteString.EMPTY,
    evidenceHash = _root_.com.google.protobuf.ByteString.EMPTY,
    proposerAddress = ""
  )
  implicit class HeaderLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.tendermint.v1beta1.Header]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.base.tendermint.v1beta1.Header](_l) {
    def version: _root_.scalapb.lenses.Lens[UpperPB, tendermint.version.Consensus] = field(_.getVersion)((c_, f_) => c_.copy(version = _root_.scala.Option(f_)))
    def optionalVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.version.Consensus]] = field(_.version)((c_, f_) => c_.copy(version = f_))
    def chainId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.chainId)((c_, f_) => c_.copy(chainId = f_))
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def time: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTime)((c_, f_) => c_.copy(time = _root_.scala.Option(f_)))
    def optionalTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.time)((c_, f_) => c_.copy(time = f_))
    def lastBlockId: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.BlockID] = field(_.getLastBlockId)((c_, f_) => c_.copy(lastBlockId = _root_.scala.Option(f_)))
    def optionalLastBlockId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.types.BlockID]] = field(_.lastBlockId)((c_, f_) => c_.copy(lastBlockId = f_))
    def lastCommitHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.lastCommitHash)((c_, f_) => c_.copy(lastCommitHash = f_))
    def dataHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.dataHash)((c_, f_) => c_.copy(dataHash = f_))
    def validatorsHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.validatorsHash)((c_, f_) => c_.copy(validatorsHash = f_))
    def nextValidatorsHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.nextValidatorsHash)((c_, f_) => c_.copy(nextValidatorsHash = f_))
    def consensusHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.consensusHash)((c_, f_) => c_.copy(consensusHash = f_))
    def appHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.appHash)((c_, f_) => c_.copy(appHash = f_))
    def lastResultsHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.lastResultsHash)((c_, f_) => c_.copy(lastResultsHash = f_))
    def evidenceHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.evidenceHash)((c_, f_) => c_.copy(evidenceHash = f_))
    def proposerAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.proposerAddress)((c_, f_) => c_.copy(proposerAddress = f_))
  }
  final val VERSION_FIELD_NUMBER = 1
  final val CHAIN_ID_FIELD_NUMBER = 2
  final val HEIGHT_FIELD_NUMBER = 3
  final val TIME_FIELD_NUMBER = 4
  final val LAST_BLOCK_ID_FIELD_NUMBER = 5
  final val LAST_COMMIT_HASH_FIELD_NUMBER = 6
  final val DATA_HASH_FIELD_NUMBER = 7
  final val VALIDATORS_HASH_FIELD_NUMBER = 8
  final val NEXT_VALIDATORS_HASH_FIELD_NUMBER = 9
  final val CONSENSUS_HASH_FIELD_NUMBER = 10
  final val APP_HASH_FIELD_NUMBER = 11
  final val LAST_RESULTS_HASH_FIELD_NUMBER = 12
  final val EVIDENCE_HASH_FIELD_NUMBER = 13
  final val PROPOSER_ADDRESS_FIELD_NUMBER = 14
  def of(
    version: _root_.scala.Option[tendermint.version.Consensus],
    chainId: _root_.scala.Predef.String,
    height: _root_.scala.Long,
    time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    lastBlockId: _root_.scala.Option[tendermint.types.BlockID],
    lastCommitHash: _root_.com.google.protobuf.ByteString,
    dataHash: _root_.com.google.protobuf.ByteString,
    validatorsHash: _root_.com.google.protobuf.ByteString,
    nextValidatorsHash: _root_.com.google.protobuf.ByteString,
    consensusHash: _root_.com.google.protobuf.ByteString,
    appHash: _root_.com.google.protobuf.ByteString,
    lastResultsHash: _root_.com.google.protobuf.ByteString,
    evidenceHash: _root_.com.google.protobuf.ByteString,
    proposerAddress: _root_.scala.Predef.String
  ): _root_.cosmos.base.tendermint.v1beta1.Header = _root_.cosmos.base.tendermint.v1beta1.Header(
    version,
    chainId,
    height,
    time,
    lastBlockId,
    lastCommitHash,
    dataHash,
    validatorsHash,
    nextValidatorsHash,
    consensusHash,
    appHash,
    lastResultsHash,
    evidenceHash,
    proposerAddress
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.Header])
}
