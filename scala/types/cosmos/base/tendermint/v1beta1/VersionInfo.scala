// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.base.tendermint.v1beta1

/** VersionInfo is the type for the GetNodeInfoResponse message.
  */
@SerialVersionUID(0L)
final case class VersionInfo(
    name: _root_.scala.Predef.String = "",
    appName: _root_.scala.Predef.String = "",
    version: _root_.scala.Predef.String = "",
    gitCommit: _root_.scala.Predef.String = "",
    buildTags: _root_.scala.Predef.String = "",
    goVersion: _root_.scala.Predef.String = "",
    buildDeps: _root_.scala.Seq[cosmos.base.tendermint.v1beta1.Module] = _root_.scala.Seq.empty,
    cosmosSdkVersion: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[VersionInfo] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = appName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = version
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = gitCommit
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = buildTags
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = goVersion
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      buildDeps.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = cosmosSdkVersion
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = appName
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = version
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = gitCommit
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = buildTags
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = goVersion
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      buildDeps.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = cosmosSdkVersion
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): VersionInfo = copy(name = __v)
    def withAppName(__v: _root_.scala.Predef.String): VersionInfo = copy(appName = __v)
    def withVersion(__v: _root_.scala.Predef.String): VersionInfo = copy(version = __v)
    def withGitCommit(__v: _root_.scala.Predef.String): VersionInfo = copy(gitCommit = __v)
    def withBuildTags(__v: _root_.scala.Predef.String): VersionInfo = copy(buildTags = __v)
    def withGoVersion(__v: _root_.scala.Predef.String): VersionInfo = copy(goVersion = __v)
    def clearBuildDeps = copy(buildDeps = _root_.scala.Seq.empty)
    def addBuildDeps(__vs: cosmos.base.tendermint.v1beta1.Module *): VersionInfo = addAllBuildDeps(__vs)
    def addAllBuildDeps(__vs: Iterable[cosmos.base.tendermint.v1beta1.Module]): VersionInfo = copy(buildDeps = buildDeps ++ __vs)
    def withBuildDeps(__v: _root_.scala.Seq[cosmos.base.tendermint.v1beta1.Module]): VersionInfo = copy(buildDeps = __v)
    def withCosmosSdkVersion(__v: _root_.scala.Predef.String): VersionInfo = copy(cosmosSdkVersion = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = appName
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = version
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = gitCommit
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = buildTags
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = goVersion
          if (__t != "") __t else null
        }
        case 7 => buildDeps
        case 8 => {
          val __t = cosmosSdkVersion
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PString(appName)
        case 3 => _root_.scalapb.descriptors.PString(version)
        case 4 => _root_.scalapb.descriptors.PString(gitCommit)
        case 5 => _root_.scalapb.descriptors.PString(buildTags)
        case 6 => _root_.scalapb.descriptors.PString(goVersion)
        case 7 => _root_.scalapb.descriptors.PRepeated(buildDeps.iterator.map(_.toPMessage).toVector)
        case 8 => _root_.scalapb.descriptors.PString(cosmosSdkVersion)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.base.tendermint.v1beta1.VersionInfo.type = cosmos.base.tendermint.v1beta1.VersionInfo
    // @@protoc_insertion_point(GeneratedMessage[cosmos.base.tendermint.v1beta1.VersionInfo])
}

object VersionInfo extends scalapb.GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.VersionInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.VersionInfo] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.base.tendermint.v1beta1.VersionInfo = {
    var __name: _root_.scala.Predef.String = ""
    var __appName: _root_.scala.Predef.String = ""
    var __version: _root_.scala.Predef.String = ""
    var __gitCommit: _root_.scala.Predef.String = ""
    var __buildTags: _root_.scala.Predef.String = ""
    var __goVersion: _root_.scala.Predef.String = ""
    val __buildDeps: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.tendermint.v1beta1.Module] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.tendermint.v1beta1.Module]
    var __cosmosSdkVersion: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 18 =>
          __appName = _input__.readStringRequireUtf8()
        case 26 =>
          __version = _input__.readStringRequireUtf8()
        case 34 =>
          __gitCommit = _input__.readStringRequireUtf8()
        case 42 =>
          __buildTags = _input__.readStringRequireUtf8()
        case 50 =>
          __goVersion = _input__.readStringRequireUtf8()
        case 58 =>
          __buildDeps += _root_.scalapb.LiteParser.readMessage[cosmos.base.tendermint.v1beta1.Module](_input__)
        case 66 =>
          __cosmosSdkVersion = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.base.tendermint.v1beta1.VersionInfo(
        name = __name,
        appName = __appName,
        version = __version,
        gitCommit = __gitCommit,
        buildTags = __buildTags,
        goVersion = __goVersion,
        buildDeps = __buildDeps.result(),
        cosmosSdkVersion = __cosmosSdkVersion,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.base.tendermint.v1beta1.VersionInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.base.tendermint.v1beta1.VersionInfo(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        appName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        version = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        gitCommit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        buildTags = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        goVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        buildDeps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[cosmos.base.tendermint.v1beta1.Module]]).getOrElse(_root_.scala.Seq.empty),
        cosmosSdkVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.base.tendermint.v1beta1.QueryProto.javaDescriptor.getMessageTypes().get(13)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.base.tendermint.v1beta1.QueryProto.scalaDescriptor.messages(13)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 7 => __out = cosmos.base.tendermint.v1beta1.Module
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.base.tendermint.v1beta1.VersionInfo(
    name = "",
    appName = "",
    version = "",
    gitCommit = "",
    buildTags = "",
    goVersion = "",
    buildDeps = _root_.scala.Seq.empty,
    cosmosSdkVersion = ""
  )
  implicit class VersionInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.tendermint.v1beta1.VersionInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.base.tendermint.v1beta1.VersionInfo](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def appName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.appName)((c_, f_) => c_.copy(appName = f_))
    def version: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.version)((c_, f_) => c_.copy(version = f_))
    def gitCommit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.gitCommit)((c_, f_) => c_.copy(gitCommit = f_))
    def buildTags: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.buildTags)((c_, f_) => c_.copy(buildTags = f_))
    def goVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.goVersion)((c_, f_) => c_.copy(goVersion = f_))
    def buildDeps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.tendermint.v1beta1.Module]] = field(_.buildDeps)((c_, f_) => c_.copy(buildDeps = f_))
    def cosmosSdkVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.cosmosSdkVersion)((c_, f_) => c_.copy(cosmosSdkVersion = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val APP_NAME_FIELD_NUMBER = 2
  final val VERSION_FIELD_NUMBER = 3
  final val GIT_COMMIT_FIELD_NUMBER = 4
  final val BUILD_TAGS_FIELD_NUMBER = 5
  final val GO_VERSION_FIELD_NUMBER = 6
  final val BUILD_DEPS_FIELD_NUMBER = 7
  final val COSMOS_SDK_VERSION_FIELD_NUMBER = 8
  def of(
    name: _root_.scala.Predef.String,
    appName: _root_.scala.Predef.String,
    version: _root_.scala.Predef.String,
    gitCommit: _root_.scala.Predef.String,
    buildTags: _root_.scala.Predef.String,
    goVersion: _root_.scala.Predef.String,
    buildDeps: _root_.scala.Seq[cosmos.base.tendermint.v1beta1.Module],
    cosmosSdkVersion: _root_.scala.Predef.String
  ): _root_.cosmos.base.tendermint.v1beta1.VersionInfo = _root_.cosmos.base.tendermint.v1beta1.VersionInfo(
    name,
    appName,
    version,
    gitCommit,
    buildTags,
    goVersion,
    buildDeps,
    cosmosSdkVersion
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.VersionInfo])
}
