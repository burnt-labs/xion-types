// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.base.tendermint.v1beta1

/** GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC method.
  *
  * @param block
  *   Deprecated: please use `sdk_block` instead
  */
@SerialVersionUID(0L)
final case class GetLatestBlockResponse(
    blockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None,
    block: _root_.scala.Option[tendermint.types.Block] = _root_.scala.None,
    sdkBlock: _root_.scala.Option[cosmos.base.tendermint.v1beta1.Block] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetLatestBlockResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (blockId.isDefined) {
        val __value = blockId.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (block.isDefined) {
        val __value = block.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sdkBlock.isDefined) {
        val __value = sdkBlock.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      blockId.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      block.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sdkBlock.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getBlockId: tendermint.types.BlockID = blockId.getOrElse(tendermint.types.BlockID.defaultInstance)
    def clearBlockId: GetLatestBlockResponse = copy(blockId = _root_.scala.None)
    def withBlockId(__v: tendermint.types.BlockID): GetLatestBlockResponse = copy(blockId = Option(__v))
    def getBlock: tendermint.types.Block = block.getOrElse(tendermint.types.Block.defaultInstance)
    def clearBlock: GetLatestBlockResponse = copy(block = _root_.scala.None)
    def withBlock(__v: tendermint.types.Block): GetLatestBlockResponse = copy(block = Option(__v))
    def getSdkBlock: cosmos.base.tendermint.v1beta1.Block = sdkBlock.getOrElse(cosmos.base.tendermint.v1beta1.Block.defaultInstance)
    def clearSdkBlock: GetLatestBlockResponse = copy(sdkBlock = _root_.scala.None)
    def withSdkBlock(__v: cosmos.base.tendermint.v1beta1.Block): GetLatestBlockResponse = copy(sdkBlock = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => blockId.orNull
        case 2 => block.orNull
        case 3 => sdkBlock.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => blockId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => block.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => sdkBlock.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.type = cosmos.base.tendermint.v1beta1.GetLatestBlockResponse
    // @@protoc_insertion_point(GeneratedMessage[cosmos.base.tendermint.v1beta1.GetLatestBlockResponse])
}

object GetLatestBlockResponse extends scalapb.GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.GetLatestBlockResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.GetLatestBlockResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.base.tendermint.v1beta1.GetLatestBlockResponse = {
    var __blockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None
    var __block: _root_.scala.Option[tendermint.types.Block] = _root_.scala.None
    var __sdkBlock: _root_.scala.Option[cosmos.base.tendermint.v1beta1.Block] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __blockId = _root_.scala.Option(__blockId.fold(_root_.scalapb.LiteParser.readMessage[tendermint.types.BlockID](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __block = _root_.scala.Option(__block.fold(_root_.scalapb.LiteParser.readMessage[tendermint.types.Block](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __sdkBlock = _root_.scala.Option(__sdkBlock.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.tendermint.v1beta1.Block](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.base.tendermint.v1beta1.GetLatestBlockResponse(
        blockId = __blockId,
        block = __block,
        sdkBlock = __sdkBlock,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.base.tendermint.v1beta1.GetLatestBlockResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.base.tendermint.v1beta1.GetLatestBlockResponse(
        blockId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[tendermint.types.BlockID]]),
        block = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[tendermint.types.Block]]),
        sdkBlock = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[cosmos.base.tendermint.v1beta1.Block]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.base.tendermint.v1beta1.QueryProto.javaDescriptor.getMessageTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.base.tendermint.v1beta1.QueryProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = tendermint.types.BlockID
      case 2 => __out = tendermint.types.Block
      case 3 => __out = cosmos.base.tendermint.v1beta1.Block
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.base.tendermint.v1beta1.GetLatestBlockResponse(
    blockId = _root_.scala.None,
    block = _root_.scala.None,
    sdkBlock = _root_.scala.None
  )
  implicit class GetLatestBlockResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.tendermint.v1beta1.GetLatestBlockResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.base.tendermint.v1beta1.GetLatestBlockResponse](_l) {
    def blockId: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.BlockID] = field(_.getBlockId)((c_, f_) => c_.copy(blockId = _root_.scala.Option(f_)))
    def optionalBlockId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.types.BlockID]] = field(_.blockId)((c_, f_) => c_.copy(blockId = f_))
    def block: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.Block] = field(_.getBlock)((c_, f_) => c_.copy(block = _root_.scala.Option(f_)))
    def optionalBlock: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.types.Block]] = field(_.block)((c_, f_) => c_.copy(block = f_))
    def sdkBlock: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.tendermint.v1beta1.Block] = field(_.getSdkBlock)((c_, f_) => c_.copy(sdkBlock = _root_.scala.Option(f_)))
    def optionalSdkBlock: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.tendermint.v1beta1.Block]] = field(_.sdkBlock)((c_, f_) => c_.copy(sdkBlock = f_))
  }
  final val BLOCK_ID_FIELD_NUMBER = 1
  final val BLOCK_FIELD_NUMBER = 2
  final val SDK_BLOCK_FIELD_NUMBER = 3
  def of(
    blockId: _root_.scala.Option[tendermint.types.BlockID],
    block: _root_.scala.Option[tendermint.types.Block],
    sdkBlock: _root_.scala.Option[cosmos.base.tendermint.v1beta1.Block]
  ): _root_.cosmos.base.tendermint.v1beta1.GetLatestBlockResponse = _root_.cosmos.base.tendermint.v1beta1.GetLatestBlockResponse(
    blockId,
    block,
    sdkBlock
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.base.tendermint.v1beta1.GetLatestBlockResponse])
}
