// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.base.reflection.v2alpha1

/** InterfaceImplementerDescriptor describes an interface implementer
  *
  * @param fullname
  *   fullname is the protobuf queryable name of the interface implementer
  * @param typeUrl
  *   type_url defines the type URL used when marshalling the type as any
  *   this is required so we can provide type safe google.protobuf.Any marshalling and
  *   unmarshalling, making sure that we don't accept just 'any' type
  *   in our interface fields
  */
@SerialVersionUID(0L)
final case class InterfaceImplementerDescriptor(
    fullname: _root_.scala.Predef.String = "",
    typeUrl: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[InterfaceImplementerDescriptor] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = fullname
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = typeUrl
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = fullname
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = typeUrl
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withFullname(__v: _root_.scala.Predef.String): InterfaceImplementerDescriptor = copy(fullname = __v)
    def withTypeUrl(__v: _root_.scala.Predef.String): InterfaceImplementerDescriptor = copy(typeUrl = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = fullname
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = typeUrl
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(fullname)
        case 2 => _root_.scalapb.descriptors.PString(typeUrl)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type = cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor
    // @@protoc_insertion_point(GeneratedMessage[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor])
}

object InterfaceImplementerDescriptor extends scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor = {
    var __fullname: _root_.scala.Predef.String = ""
    var __typeUrl: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __fullname = _input__.readStringRequireUtf8()
        case 18 =>
          __typeUrl = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor(
        fullname = __fullname,
        typeUrl = __typeUrl,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor(
        fullname = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        typeUrl = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.javaDescriptor.getMessageTypes().get(7)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.scalaDescriptor.messages(7)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor(
    fullname = "",
    typeUrl = ""
  )
  implicit class InterfaceImplementerDescriptorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor](_l) {
    def fullname: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fullname)((c_, f_) => c_.copy(fullname = f_))
    def typeUrl: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.typeUrl)((c_, f_) => c_.copy(typeUrl = f_))
  }
  final val FULLNAME_FIELD_NUMBER = 1
  final val TYPE_URL_FIELD_NUMBER = 2
  def of(
    fullname: _root_.scala.Predef.String,
    typeUrl: _root_.scala.Predef.String
  ): _root_.cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor = _root_.cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor(
    fullname,
    typeUrl
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor])
}
