// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.base.reflection.v2alpha1

/** AppDescriptor describes a cosmos-sdk based application
  *
  * @param authn
  *   AuthnDescriptor provides information on how to authenticate transactions on the application
  *   NOTE: experimental and subject to change in future releases.
  * @param chain
  *   chain provides the chain descriptor
  * @param codec
  *   codec provides metadata information regarding codec related types
  * @param configuration
  *   configuration provides metadata information regarding the sdk.Config type
  * @param queryServices
  *   query_services provides metadata information regarding the available queriable endpoints
  * @param tx
  *   tx provides metadata information regarding how to send transactions to the given application
  */
@SerialVersionUID(0L)
final case class AppDescriptor(
    authn: _root_.scala.Option[cosmos.base.reflection.v2alpha1.AuthnDescriptor] = _root_.scala.None,
    chain: _root_.scala.Option[cosmos.base.reflection.v2alpha1.ChainDescriptor] = _root_.scala.None,
    codec: _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor] = _root_.scala.None,
    configuration: _root_.scala.Option[cosmos.base.reflection.v2alpha1.ConfigurationDescriptor] = _root_.scala.None,
    queryServices: _root_.scala.Option[cosmos.base.reflection.v2alpha1.QueryServicesDescriptor] = _root_.scala.None,
    tx: _root_.scala.Option[cosmos.base.reflection.v2alpha1.TxDescriptor] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AppDescriptor] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (authn.isDefined) {
        val __value = authn.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (chain.isDefined) {
        val __value = chain.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (codec.isDefined) {
        val __value = codec.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (configuration.isDefined) {
        val __value = configuration.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (queryServices.isDefined) {
        val __value = queryServices.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (tx.isDefined) {
        val __value = tx.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      authn.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      chain.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      codec.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      configuration.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      queryServices.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      tx.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getAuthn: cosmos.base.reflection.v2alpha1.AuthnDescriptor = authn.getOrElse(cosmos.base.reflection.v2alpha1.AuthnDescriptor.defaultInstance)
    def clearAuthn: AppDescriptor = copy(authn = _root_.scala.None)
    def withAuthn(__v: cosmos.base.reflection.v2alpha1.AuthnDescriptor): AppDescriptor = copy(authn = Option(__v))
    def getChain: cosmos.base.reflection.v2alpha1.ChainDescriptor = chain.getOrElse(cosmos.base.reflection.v2alpha1.ChainDescriptor.defaultInstance)
    def clearChain: AppDescriptor = copy(chain = _root_.scala.None)
    def withChain(__v: cosmos.base.reflection.v2alpha1.ChainDescriptor): AppDescriptor = copy(chain = Option(__v))
    def getCodec: cosmos.base.reflection.v2alpha1.CodecDescriptor = codec.getOrElse(cosmos.base.reflection.v2alpha1.CodecDescriptor.defaultInstance)
    def clearCodec: AppDescriptor = copy(codec = _root_.scala.None)
    def withCodec(__v: cosmos.base.reflection.v2alpha1.CodecDescriptor): AppDescriptor = copy(codec = Option(__v))
    def getConfiguration: cosmos.base.reflection.v2alpha1.ConfigurationDescriptor = configuration.getOrElse(cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.defaultInstance)
    def clearConfiguration: AppDescriptor = copy(configuration = _root_.scala.None)
    def withConfiguration(__v: cosmos.base.reflection.v2alpha1.ConfigurationDescriptor): AppDescriptor = copy(configuration = Option(__v))
    def getQueryServices: cosmos.base.reflection.v2alpha1.QueryServicesDescriptor = queryServices.getOrElse(cosmos.base.reflection.v2alpha1.QueryServicesDescriptor.defaultInstance)
    def clearQueryServices: AppDescriptor = copy(queryServices = _root_.scala.None)
    def withQueryServices(__v: cosmos.base.reflection.v2alpha1.QueryServicesDescriptor): AppDescriptor = copy(queryServices = Option(__v))
    def getTx: cosmos.base.reflection.v2alpha1.TxDescriptor = tx.getOrElse(cosmos.base.reflection.v2alpha1.TxDescriptor.defaultInstance)
    def clearTx: AppDescriptor = copy(tx = _root_.scala.None)
    def withTx(__v: cosmos.base.reflection.v2alpha1.TxDescriptor): AppDescriptor = copy(tx = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => authn.orNull
        case 2 => chain.orNull
        case 3 => codec.orNull
        case 4 => configuration.orNull
        case 5 => queryServices.orNull
        case 6 => tx.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => authn.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => chain.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => codec.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => configuration.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => queryServices.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => tx.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.base.reflection.v2alpha1.AppDescriptor.type = cosmos.base.reflection.v2alpha1.AppDescriptor
    // @@protoc_insertion_point(GeneratedMessage[cosmos.base.reflection.v2alpha1.AppDescriptor])
}

object AppDescriptor extends scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.AppDescriptor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.AppDescriptor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.base.reflection.v2alpha1.AppDescriptor = {
    var __authn: _root_.scala.Option[cosmos.base.reflection.v2alpha1.AuthnDescriptor] = _root_.scala.None
    var __chain: _root_.scala.Option[cosmos.base.reflection.v2alpha1.ChainDescriptor] = _root_.scala.None
    var __codec: _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor] = _root_.scala.None
    var __configuration: _root_.scala.Option[cosmos.base.reflection.v2alpha1.ConfigurationDescriptor] = _root_.scala.None
    var __queryServices: _root_.scala.Option[cosmos.base.reflection.v2alpha1.QueryServicesDescriptor] = _root_.scala.None
    var __tx: _root_.scala.Option[cosmos.base.reflection.v2alpha1.TxDescriptor] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __authn = _root_.scala.Option(__authn.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.AuthnDescriptor](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __chain = _root_.scala.Option(__chain.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.ChainDescriptor](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __codec = _root_.scala.Option(__codec.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.CodecDescriptor](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __configuration = _root_.scala.Option(__configuration.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.ConfigurationDescriptor](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __queryServices = _root_.scala.Option(__queryServices.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.QueryServicesDescriptor](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __tx = _root_.scala.Option(__tx.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.TxDescriptor](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.base.reflection.v2alpha1.AppDescriptor(
        authn = __authn,
        chain = __chain,
        codec = __codec,
        configuration = __configuration,
        queryServices = __queryServices,
        tx = __tx,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.base.reflection.v2alpha1.AppDescriptor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.base.reflection.v2alpha1.AppDescriptor(
        authn = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[cosmos.base.reflection.v2alpha1.AuthnDescriptor]]),
        chain = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[cosmos.base.reflection.v2alpha1.ChainDescriptor]]),
        codec = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor]]),
        configuration = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[cosmos.base.reflection.v2alpha1.ConfigurationDescriptor]]),
        queryServices = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[cosmos.base.reflection.v2alpha1.QueryServicesDescriptor]]),
        tx = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[cosmos.base.reflection.v2alpha1.TxDescriptor]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.base.reflection.v2alpha1.AuthnDescriptor
      case 2 => __out = cosmos.base.reflection.v2alpha1.ChainDescriptor
      case 3 => __out = cosmos.base.reflection.v2alpha1.CodecDescriptor
      case 4 => __out = cosmos.base.reflection.v2alpha1.ConfigurationDescriptor
      case 5 => __out = cosmos.base.reflection.v2alpha1.QueryServicesDescriptor
      case 6 => __out = cosmos.base.reflection.v2alpha1.TxDescriptor
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.base.reflection.v2alpha1.AppDescriptor(
    authn = _root_.scala.None,
    chain = _root_.scala.None,
    codec = _root_.scala.None,
    configuration = _root_.scala.None,
    queryServices = _root_.scala.None,
    tx = _root_.scala.None
  )
  implicit class AppDescriptorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.AppDescriptor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.base.reflection.v2alpha1.AppDescriptor](_l) {
    def authn: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.AuthnDescriptor] = field(_.getAuthn)((c_, f_) => c_.copy(authn = _root_.scala.Option(f_)))
    def optionalAuthn: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.reflection.v2alpha1.AuthnDescriptor]] = field(_.authn)((c_, f_) => c_.copy(authn = f_))
    def chain: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.ChainDescriptor] = field(_.getChain)((c_, f_) => c_.copy(chain = _root_.scala.Option(f_)))
    def optionalChain: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.reflection.v2alpha1.ChainDescriptor]] = field(_.chain)((c_, f_) => c_.copy(chain = f_))
    def codec: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.CodecDescriptor] = field(_.getCodec)((c_, f_) => c_.copy(codec = _root_.scala.Option(f_)))
    def optionalCodec: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor]] = field(_.codec)((c_, f_) => c_.copy(codec = f_))
    def configuration: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.ConfigurationDescriptor] = field(_.getConfiguration)((c_, f_) => c_.copy(configuration = _root_.scala.Option(f_)))
    def optionalConfiguration: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.reflection.v2alpha1.ConfigurationDescriptor]] = field(_.configuration)((c_, f_) => c_.copy(configuration = f_))
    def queryServices: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.QueryServicesDescriptor] = field(_.getQueryServices)((c_, f_) => c_.copy(queryServices = _root_.scala.Option(f_)))
    def optionalQueryServices: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.reflection.v2alpha1.QueryServicesDescriptor]] = field(_.queryServices)((c_, f_) => c_.copy(queryServices = f_))
    def tx: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.TxDescriptor] = field(_.getTx)((c_, f_) => c_.copy(tx = _root_.scala.Option(f_)))
    def optionalTx: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.reflection.v2alpha1.TxDescriptor]] = field(_.tx)((c_, f_) => c_.copy(tx = f_))
  }
  final val AUTHN_FIELD_NUMBER = 1
  final val CHAIN_FIELD_NUMBER = 2
  final val CODEC_FIELD_NUMBER = 3
  final val CONFIGURATION_FIELD_NUMBER = 4
  final val QUERY_SERVICES_FIELD_NUMBER = 5
  final val TX_FIELD_NUMBER = 6
  def of(
    authn: _root_.scala.Option[cosmos.base.reflection.v2alpha1.AuthnDescriptor],
    chain: _root_.scala.Option[cosmos.base.reflection.v2alpha1.ChainDescriptor],
    codec: _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor],
    configuration: _root_.scala.Option[cosmos.base.reflection.v2alpha1.ConfigurationDescriptor],
    queryServices: _root_.scala.Option[cosmos.base.reflection.v2alpha1.QueryServicesDescriptor],
    tx: _root_.scala.Option[cosmos.base.reflection.v2alpha1.TxDescriptor]
  ): _root_.cosmos.base.reflection.v2alpha1.AppDescriptor = _root_.cosmos.base.reflection.v2alpha1.AppDescriptor(
    authn,
    chain,
    codec,
    configuration,
    queryServices,
    tx
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.AppDescriptor])
}
