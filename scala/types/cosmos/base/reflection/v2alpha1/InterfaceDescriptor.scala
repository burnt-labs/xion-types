// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.base.reflection.v2alpha1

/** InterfaceDescriptor describes the implementation of an interface
  *
  * @param fullname
  *   fullname is the name of the interface
  * @param interfaceAcceptingMessages
  *   interface_accepting_messages contains information regarding the proto messages which contain the interface as
  *   google.protobuf.Any field
  * @param interfaceImplementers
  *   interface_implementers is a list of the descriptors of the interface implementers
  */
@SerialVersionUID(0L)
final case class InterfaceDescriptor(
    fullname: _root_.scala.Predef.String = "",
    interfaceAcceptingMessages: _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor] = _root_.scala.Seq.empty,
    interfaceImplementers: _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[InterfaceDescriptor] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = fullname
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      interfaceAcceptingMessages.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      interfaceImplementers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = fullname
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      interfaceAcceptingMessages.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      interfaceImplementers.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withFullname(__v: _root_.scala.Predef.String): InterfaceDescriptor = copy(fullname = __v)
    def clearInterfaceAcceptingMessages = copy(interfaceAcceptingMessages = _root_.scala.Seq.empty)
    def addInterfaceAcceptingMessages(__vs: cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor *): InterfaceDescriptor = addAllInterfaceAcceptingMessages(__vs)
    def addAllInterfaceAcceptingMessages(__vs: Iterable[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor]): InterfaceDescriptor = copy(interfaceAcceptingMessages = interfaceAcceptingMessages ++ __vs)
    def withInterfaceAcceptingMessages(__v: _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor]): InterfaceDescriptor = copy(interfaceAcceptingMessages = __v)
    def clearInterfaceImplementers = copy(interfaceImplementers = _root_.scala.Seq.empty)
    def addInterfaceImplementers(__vs: cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor *): InterfaceDescriptor = addAllInterfaceImplementers(__vs)
    def addAllInterfaceImplementers(__vs: Iterable[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor]): InterfaceDescriptor = copy(interfaceImplementers = interfaceImplementers ++ __vs)
    def withInterfaceImplementers(__v: _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor]): InterfaceDescriptor = copy(interfaceImplementers = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = fullname
          if (__t != "") __t else null
        }
        case 2 => interfaceAcceptingMessages
        case 3 => interfaceImplementers
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(fullname)
        case 2 => _root_.scalapb.descriptors.PRepeated(interfaceAcceptingMessages.iterator.map(_.toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(interfaceImplementers.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.base.reflection.v2alpha1.InterfaceDescriptor.type = cosmos.base.reflection.v2alpha1.InterfaceDescriptor
    // @@protoc_insertion_point(GeneratedMessage[cosmos.base.reflection.v2alpha1.InterfaceDescriptor])
}

object InterfaceDescriptor extends scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.InterfaceDescriptor] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.InterfaceDescriptor] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.base.reflection.v2alpha1.InterfaceDescriptor = {
    var __fullname: _root_.scala.Predef.String = ""
    val __interfaceAcceptingMessages: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor]
    val __interfaceImplementers: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __fullname = _input__.readStringRequireUtf8()
        case 18 =>
          __interfaceAcceptingMessages += _root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor](_input__)
        case 26 =>
          __interfaceImplementers += _root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.base.reflection.v2alpha1.InterfaceDescriptor(
        fullname = __fullname,
        interfaceAcceptingMessages = __interfaceAcceptingMessages.result(),
        interfaceImplementers = __interfaceImplementers.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.base.reflection.v2alpha1.InterfaceDescriptor] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.base.reflection.v2alpha1.InterfaceDescriptor(
        fullname = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        interfaceAcceptingMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor]]).getOrElse(_root_.scala.Seq.empty),
        interfaceImplementers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor
      case 3 => __out = cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.base.reflection.v2alpha1.InterfaceDescriptor(
    fullname = "",
    interfaceAcceptingMessages = _root_.scala.Seq.empty,
    interfaceImplementers = _root_.scala.Seq.empty
  )
  implicit class InterfaceDescriptorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.InterfaceDescriptor]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.base.reflection.v2alpha1.InterfaceDescriptor](_l) {
    def fullname: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.fullname)((c_, f_) => c_.copy(fullname = f_))
    def interfaceAcceptingMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor]] = field(_.interfaceAcceptingMessages)((c_, f_) => c_.copy(interfaceAcceptingMessages = f_))
    def interfaceImplementers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor]] = field(_.interfaceImplementers)((c_, f_) => c_.copy(interfaceImplementers = f_))
  }
  final val FULLNAME_FIELD_NUMBER = 1
  final val INTERFACE_ACCEPTING_MESSAGES_FIELD_NUMBER = 2
  final val INTERFACE_IMPLEMENTERS_FIELD_NUMBER = 3
  def of(
    fullname: _root_.scala.Predef.String,
    interfaceAcceptingMessages: _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor],
    interfaceImplementers: _root_.scala.Seq[cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor]
  ): _root_.cosmos.base.reflection.v2alpha1.InterfaceDescriptor = _root_.cosmos.base.reflection.v2alpha1.InterfaceDescriptor(
    fullname,
    interfaceAcceptingMessages,
    interfaceImplementers
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.InterfaceDescriptor])
}
