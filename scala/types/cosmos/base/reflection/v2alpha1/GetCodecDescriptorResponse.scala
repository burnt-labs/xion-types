// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.base.reflection.v2alpha1

/** GetCodecDescriptorResponse is the response returned by the GetCodecDescriptor RPC
  *
  * @param codec
  *   codec describes the application codec such as registered interfaces and implementations
  */
@SerialVersionUID(0L)
final case class GetCodecDescriptorResponse(
    codec: _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetCodecDescriptorResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (codec.isDefined) {
        val __value = codec.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      codec.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getCodec: cosmos.base.reflection.v2alpha1.CodecDescriptor = codec.getOrElse(cosmos.base.reflection.v2alpha1.CodecDescriptor.defaultInstance)
    def clearCodec: GetCodecDescriptorResponse = copy(codec = _root_.scala.None)
    def withCodec(__v: cosmos.base.reflection.v2alpha1.CodecDescriptor): GetCodecDescriptorResponse = copy(codec = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => codec.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => codec.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse.type = cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse
    // @@protoc_insertion_point(GeneratedMessage[cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse])
}

object GetCodecDescriptorResponse extends scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse = {
    var __codec: _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __codec = _root_.scala.Option(__codec.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.reflection.v2alpha1.CodecDescriptor](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse(
        codec = __codec,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse(
        codec = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.javaDescriptor.getMessageTypes().get(16)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.base.reflection.v2alpha1.ReflectionProto.scalaDescriptor.messages(16)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.base.reflection.v2alpha1.CodecDescriptor
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse(
    codec = _root_.scala.None
  )
  implicit class GetCodecDescriptorResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse](_l) {
    def codec: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.reflection.v2alpha1.CodecDescriptor] = field(_.getCodec)((c_, f_) => c_.copy(codec = _root_.scala.Option(f_)))
    def optionalCodec: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor]] = field(_.codec)((c_, f_) => c_.copy(codec = f_))
  }
  final val CODEC_FIELD_NUMBER = 1
  def of(
    codec: _root_.scala.Option[cosmos.base.reflection.v2alpha1.CodecDescriptor]
  ): _root_.cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse = _root_.cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse(
    codec
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse])
}
