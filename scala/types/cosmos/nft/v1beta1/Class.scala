// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.nft.v1beta1

/** Class defines the class of the nft type.
  *
  * @param id
  *   id defines the unique identifier of the NFT classification, similar to the contract address of ERC721
  * @param name
  *   name defines the human-readable name of the NFT classification. Optional
  * @param symbol
  *   symbol is an abbreviated name for nft classification. Optional
  * @param description
  *   description is a brief description of nft classification. Optional
  * @param uri
  *   uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional
  * @param uriHash
  *   uri_hash is a hash of the document pointed by uri. Optional
  * @param data
  *   data is the app specific metadata of the NFT class. Optional
  */
@SerialVersionUID(0L)
final case class Class(
    id: _root_.scala.Predef.String = "",
    name: _root_.scala.Predef.String = "",
    symbol: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    uri: _root_.scala.Predef.String = "",
    uriHash: _root_.scala.Predef.String = "",
    data: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Class] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = symbol
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = uri
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = uriHash
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      if (data.isDefined) {
        val __value = data.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = symbol
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = uri
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = uriHash
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      data.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Predef.String): Class = copy(id = __v)
    def withName(__v: _root_.scala.Predef.String): Class = copy(name = __v)
    def withSymbol(__v: _root_.scala.Predef.String): Class = copy(symbol = __v)
    def withDescription(__v: _root_.scala.Predef.String): Class = copy(description = __v)
    def withUri(__v: _root_.scala.Predef.String): Class = copy(uri = __v)
    def withUriHash(__v: _root_.scala.Predef.String): Class = copy(uriHash = __v)
    def getData: com.google.protobuf.any.Any = data.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearData: Class = copy(data = _root_.scala.None)
    def withData(__v: com.google.protobuf.any.Any): Class = copy(data = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = symbol
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = uri
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = uriHash
          if (__t != "") __t else null
        }
        case 7 => data.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(id)
        case 2 => _root_.scalapb.descriptors.PString(name)
        case 3 => _root_.scalapb.descriptors.PString(symbol)
        case 4 => _root_.scalapb.descriptors.PString(description)
        case 5 => _root_.scalapb.descriptors.PString(uri)
        case 6 => _root_.scalapb.descriptors.PString(uriHash)
        case 7 => data.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.nft.v1beta1.Class.type = cosmos.nft.v1beta1.Class
    // @@protoc_insertion_point(GeneratedMessage[cosmos.nft.v1beta1.Class])
}

object Class extends scalapb.GeneratedMessageCompanion[cosmos.nft.v1beta1.Class] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.nft.v1beta1.Class] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.nft.v1beta1.Class = {
    var __id: _root_.scala.Predef.String = ""
    var __name: _root_.scala.Predef.String = ""
    var __symbol: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    var __uri: _root_.scala.Predef.String = ""
    var __uriHash: _root_.scala.Predef.String = ""
    var __data: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __id = _input__.readStringRequireUtf8()
        case 18 =>
          __name = _input__.readStringRequireUtf8()
        case 26 =>
          __symbol = _input__.readStringRequireUtf8()
        case 34 =>
          __description = _input__.readStringRequireUtf8()
        case 42 =>
          __uri = _input__.readStringRequireUtf8()
        case 50 =>
          __uriHash = _input__.readStringRequireUtf8()
        case 58 =>
          __data = _root_.scala.Option(__data.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.nft.v1beta1.Class(
        id = __id,
        name = __name,
        symbol = __symbol,
        description = __description,
        uri = __uri,
        uriHash = __uriHash,
        data = __data,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.nft.v1beta1.Class] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.nft.v1beta1.Class(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        symbol = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        uri = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        uriHash = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        data = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.nft.v1beta1.NftProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.nft.v1beta1.NftProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 7 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.nft.v1beta1.Class(
    id = "",
    name = "",
    symbol = "",
    description = "",
    uri = "",
    uriHash = "",
    data = _root_.scala.None
  )
  implicit class ClassLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.nft.v1beta1.Class]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.nft.v1beta1.Class](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def symbol: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.symbol)((c_, f_) => c_.copy(symbol = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def uri: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.uri)((c_, f_) => c_.copy(uri = f_))
    def uriHash: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.uriHash)((c_, f_) => c_.copy(uriHash = f_))
    def data: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getData)((c_, f_) => c_.copy(data = _root_.scala.Option(f_)))
    def optionalData: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.data)((c_, f_) => c_.copy(data = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val NAME_FIELD_NUMBER = 2
  final val SYMBOL_FIELD_NUMBER = 3
  final val DESCRIPTION_FIELD_NUMBER = 4
  final val URI_FIELD_NUMBER = 5
  final val URI_HASH_FIELD_NUMBER = 6
  final val DATA_FIELD_NUMBER = 7
  def of(
    id: _root_.scala.Predef.String,
    name: _root_.scala.Predef.String,
    symbol: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    uri: _root_.scala.Predef.String,
    uriHash: _root_.scala.Predef.String,
    data: _root_.scala.Option[com.google.protobuf.any.Any]
  ): _root_.cosmos.nft.v1beta1.Class = _root_.cosmos.nft.v1beta1.Class(
    id,
    name,
    symbol,
    description,
    uri,
    uriHash,
    data
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.nft.v1beta1.Class])
}
