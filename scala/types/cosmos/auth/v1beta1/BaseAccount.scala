// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.auth.v1beta1

/** BaseAccount defines a base account type. It contains all the necessary fields
  * for basic account functionality. Any custom account type should extend this
  * type for additional functionality (e.g. vesting).
  */
@SerialVersionUID(0L)
final case class BaseAccount(
    address: _root_.scala.Predef.String = "",
    pubKey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    accountNumber: _root_.scala.Long = 0L,
    sequence: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[BaseAccount] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = address
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (pubKey.isDefined) {
        val __value = pubKey.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = accountNumber
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(3, __value)
        }
      };
      
      {
        val __value = sequence
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = address
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      pubKey.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = accountNumber
        if (__v != 0L) {
          _output__.writeUInt64(3, __v)
        }
      };
      {
        val __v = sequence
        if (__v != 0L) {
          _output__.writeUInt64(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withAddress(__v: _root_.scala.Predef.String): BaseAccount = copy(address = __v)
    def getPubKey: com.google.protobuf.any.Any = pubKey.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearPubKey: BaseAccount = copy(pubKey = _root_.scala.None)
    def withPubKey(__v: com.google.protobuf.any.Any): BaseAccount = copy(pubKey = Option(__v))
    def withAccountNumber(__v: _root_.scala.Long): BaseAccount = copy(accountNumber = __v)
    def withSequence(__v: _root_.scala.Long): BaseAccount = copy(sequence = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = address
          if (__t != "") __t else null
        }
        case 2 => pubKey.orNull
        case 3 => {
          val __t = accountNumber
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = sequence
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(address)
        case 2 => pubKey.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PLong(accountNumber)
        case 4 => _root_.scalapb.descriptors.PLong(sequence)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.auth.v1beta1.BaseAccount.type = cosmos.auth.v1beta1.BaseAccount
    // @@protoc_insertion_point(GeneratedMessage[cosmos.auth.v1beta1.BaseAccount])
}

object BaseAccount extends scalapb.GeneratedMessageCompanion[cosmos.auth.v1beta1.BaseAccount] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.auth.v1beta1.BaseAccount] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.auth.v1beta1.BaseAccount = {
    var __address: _root_.scala.Predef.String = ""
    var __pubKey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var __accountNumber: _root_.scala.Long = 0L
    var __sequence: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __address = _input__.readStringRequireUtf8()
        case 18 =>
          __pubKey = _root_.scala.Option(__pubKey.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __accountNumber = _input__.readUInt64()
        case 32 =>
          __sequence = _input__.readUInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.auth.v1beta1.BaseAccount(
        address = __address,
        pubKey = __pubKey,
        accountNumber = __accountNumber,
        sequence = __sequence,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.auth.v1beta1.BaseAccount] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.auth.v1beta1.BaseAccount(
        address = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        pubKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        accountNumber = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        sequence = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.auth.v1beta1.AuthProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.auth.v1beta1.AuthProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.auth.v1beta1.BaseAccount(
    address = "",
    pubKey = _root_.scala.None,
    accountNumber = 0L,
    sequence = 0L
  )
  implicit class BaseAccountLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.auth.v1beta1.BaseAccount]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.auth.v1beta1.BaseAccount](_l) {
    def address: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.address)((c_, f_) => c_.copy(address = f_))
    def pubKey: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getPubKey)((c_, f_) => c_.copy(pubKey = _root_.scala.Option(f_)))
    def optionalPubKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.pubKey)((c_, f_) => c_.copy(pubKey = f_))
    def accountNumber: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.accountNumber)((c_, f_) => c_.copy(accountNumber = f_))
    def sequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.sequence)((c_, f_) => c_.copy(sequence = f_))
  }
  final val ADDRESS_FIELD_NUMBER = 1
  final val PUB_KEY_FIELD_NUMBER = 2
  final val ACCOUNT_NUMBER_FIELD_NUMBER = 3
  final val SEQUENCE_FIELD_NUMBER = 4
  def of(
    address: _root_.scala.Predef.String,
    pubKey: _root_.scala.Option[com.google.protobuf.any.Any],
    accountNumber: _root_.scala.Long,
    sequence: _root_.scala.Long
  ): _root_.cosmos.auth.v1beta1.BaseAccount = _root_.cosmos.auth.v1beta1.BaseAccount(
    address,
    pubKey,
    accountNumber,
    sequence
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.auth.v1beta1.BaseAccount])
}
