// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.feegrant.v1beta1

/** Grant is stored in the KVStore to record a grant with full context
  *
  * @param granter
  *   granter is the address of the user granting an allowance of their funds.
  * @param grantee
  *   grantee is the address of the user being granted an allowance of another user's funds.
  * @param allowance
  *   allowance can be any of basic, periodic, allowed fee allowance.
  */
@SerialVersionUID(0L)
final case class Grant(
    granter: _root_.scala.Predef.String = "",
    grantee: _root_.scala.Predef.String = "",
    allowance: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Grant] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = granter
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = grantee
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      if (allowance.isDefined) {
        val __value = allowance.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = granter
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = grantee
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      allowance.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withGranter(__v: _root_.scala.Predef.String): Grant = copy(granter = __v)
    def withGrantee(__v: _root_.scala.Predef.String): Grant = copy(grantee = __v)
    def getAllowance: com.google.protobuf.any.Any = allowance.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearAllowance: Grant = copy(allowance = _root_.scala.None)
    def withAllowance(__v: com.google.protobuf.any.Any): Grant = copy(allowance = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = granter
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = grantee
          if (__t != "") __t else null
        }
        case 3 => allowance.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(granter)
        case 2 => _root_.scalapb.descriptors.PString(grantee)
        case 3 => allowance.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.feegrant.v1beta1.Grant.type = cosmos.feegrant.v1beta1.Grant
    // @@protoc_insertion_point(GeneratedMessage[cosmos.feegrant.v1beta1.Grant])
}

object Grant extends scalapb.GeneratedMessageCompanion[cosmos.feegrant.v1beta1.Grant] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.feegrant.v1beta1.Grant] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.feegrant.v1beta1.Grant = {
    var __granter: _root_.scala.Predef.String = ""
    var __grantee: _root_.scala.Predef.String = ""
    var __allowance: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __granter = _input__.readStringRequireUtf8()
        case 18 =>
          __grantee = _input__.readStringRequireUtf8()
        case 26 =>
          __allowance = _root_.scala.Option(__allowance.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.feegrant.v1beta1.Grant(
        granter = __granter,
        grantee = __grantee,
        allowance = __allowance,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.feegrant.v1beta1.Grant] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.feegrant.v1beta1.Grant(
        granter = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        grantee = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        allowance = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.feegrant.v1beta1.FeegrantProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.feegrant.v1beta1.FeegrantProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.feegrant.v1beta1.Grant(
    granter = "",
    grantee = "",
    allowance = _root_.scala.None
  )
  implicit class GrantLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.feegrant.v1beta1.Grant]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.feegrant.v1beta1.Grant](_l) {
    def granter: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.granter)((c_, f_) => c_.copy(granter = f_))
    def grantee: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.grantee)((c_, f_) => c_.copy(grantee = f_))
    def allowance: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getAllowance)((c_, f_) => c_.copy(allowance = _root_.scala.Option(f_)))
    def optionalAllowance: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.allowance)((c_, f_) => c_.copy(allowance = f_))
  }
  final val GRANTER_FIELD_NUMBER = 1
  final val GRANTEE_FIELD_NUMBER = 2
  final val ALLOWANCE_FIELD_NUMBER = 3
  def of(
    granter: _root_.scala.Predef.String,
    grantee: _root_.scala.Predef.String,
    allowance: _root_.scala.Option[com.google.protobuf.any.Any]
  ): _root_.cosmos.feegrant.v1beta1.Grant = _root_.cosmos.feegrant.v1beta1.Grant(
    granter,
    grantee,
    allowance
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.feegrant.v1beta1.Grant])
}
