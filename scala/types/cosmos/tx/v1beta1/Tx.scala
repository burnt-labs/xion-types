// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.tx.v1beta1

/** Tx is the standard type used for broadcasting transactions.
  *
  * @param body
  *   body is the processable content of the transaction
  * @param authInfo
  *   auth_info is the authorization related content of the transaction,
  *   specifically signers, signer modes and fee
  * @param signatures
  *   signatures is a list of signatures that matches the length and order of
  *   AuthInfo's signer_infos to allow connecting signature meta information like
  *   public key and signing mode by position.
  */
@SerialVersionUID(0L)
final case class Tx(
    body: _root_.scala.Option[cosmos.tx.v1beta1.TxBody] = _root_.scala.None,
    authInfo: _root_.scala.Option[cosmos.tx.v1beta1.AuthInfo] = _root_.scala.None,
    signatures: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Tx] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (body.isDefined) {
        val __value = body.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (authInfo.isDefined) {
        val __value = authInfo.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      signatures.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      body.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      authInfo.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      signatures.foreach { __v =>
        val __m = __v
        _output__.writeBytes(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getBody: cosmos.tx.v1beta1.TxBody = body.getOrElse(cosmos.tx.v1beta1.TxBody.defaultInstance)
    def clearBody: Tx = copy(body = _root_.scala.None)
    def withBody(__v: cosmos.tx.v1beta1.TxBody): Tx = copy(body = Option(__v))
    def getAuthInfo: cosmos.tx.v1beta1.AuthInfo = authInfo.getOrElse(cosmos.tx.v1beta1.AuthInfo.defaultInstance)
    def clearAuthInfo: Tx = copy(authInfo = _root_.scala.None)
    def withAuthInfo(__v: cosmos.tx.v1beta1.AuthInfo): Tx = copy(authInfo = Option(__v))
    def clearSignatures = copy(signatures = _root_.scala.Seq.empty)
    def addSignatures(__vs: _root_.com.google.protobuf.ByteString *): Tx = addAllSignatures(__vs)
    def addAllSignatures(__vs: Iterable[_root_.com.google.protobuf.ByteString]): Tx = copy(signatures = signatures ++ __vs)
    def withSignatures(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): Tx = copy(signatures = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => body.orNull
        case 2 => authInfo.orNull
        case 3 => signatures
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => body.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => authInfo.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PRepeated(signatures.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.tx.v1beta1.Tx.type = cosmos.tx.v1beta1.Tx
    // @@protoc_insertion_point(GeneratedMessage[cosmos.tx.v1beta1.Tx])
}

object Tx extends scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.Tx] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.Tx] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.tx.v1beta1.Tx = {
    var __body: _root_.scala.Option[cosmos.tx.v1beta1.TxBody] = _root_.scala.None
    var __authInfo: _root_.scala.Option[cosmos.tx.v1beta1.AuthInfo] = _root_.scala.None
    val __signatures: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __body = _root_.scala.Option(__body.fold(_root_.scalapb.LiteParser.readMessage[cosmos.tx.v1beta1.TxBody](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __authInfo = _root_.scala.Option(__authInfo.fold(_root_.scalapb.LiteParser.readMessage[cosmos.tx.v1beta1.AuthInfo](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __signatures += _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.tx.v1beta1.Tx(
        body = __body,
        authInfo = __authInfo,
        signatures = __signatures.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.tx.v1beta1.Tx] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.tx.v1beta1.Tx(
        body = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[cosmos.tx.v1beta1.TxBody]]),
        authInfo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[cosmos.tx.v1beta1.AuthInfo]]),
        signatures = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.tx.v1beta1.TxProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.tx.v1beta1.TxProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.tx.v1beta1.TxBody
      case 2 => __out = cosmos.tx.v1beta1.AuthInfo
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.tx.v1beta1.Tx(
    body = _root_.scala.None,
    authInfo = _root_.scala.None,
    signatures = _root_.scala.Seq.empty
  )
  implicit class TxLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.Tx]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.tx.v1beta1.Tx](_l) {
    def body: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.TxBody] = field(_.getBody)((c_, f_) => c_.copy(body = _root_.scala.Option(f_)))
    def optionalBody: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.tx.v1beta1.TxBody]] = field(_.body)((c_, f_) => c_.copy(body = f_))
    def authInfo: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.AuthInfo] = field(_.getAuthInfo)((c_, f_) => c_.copy(authInfo = _root_.scala.Option(f_)))
    def optionalAuthInfo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.tx.v1beta1.AuthInfo]] = field(_.authInfo)((c_, f_) => c_.copy(authInfo = f_))
    def signatures: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.signatures)((c_, f_) => c_.copy(signatures = f_))
  }
  final val BODY_FIELD_NUMBER = 1
  final val AUTH_INFO_FIELD_NUMBER = 2
  final val SIGNATURES_FIELD_NUMBER = 3
  def of(
    body: _root_.scala.Option[cosmos.tx.v1beta1.TxBody],
    authInfo: _root_.scala.Option[cosmos.tx.v1beta1.AuthInfo],
    signatures: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]
  ): _root_.cosmos.tx.v1beta1.Tx = _root_.cosmos.tx.v1beta1.Tx(
    body,
    authInfo,
    signatures
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.tx.v1beta1.Tx])
}
