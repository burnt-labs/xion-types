// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.tx.v1beta1

/** GetTxsEventRequest is the request type for the Service.TxsByEvents
  * RPC method.
  *
  * @param events
  *   events is the list of transaction event type.
  *   Deprecated post v0.47.x: use query instead, which should contain a valid
  *   events query.
  * @param pagination
  *   pagination defines a pagination for the request.
  *   Deprecated post v0.46.x: use page and limit instead.
  * @param page
  *   page is the page number to query, starts at 1. If not provided, will
  *   default to first page.
  * @param limit
  *   limit is the total number of results to be returned in the result page.
  *   If left empty it will default to a value to be set by each app.
  * @param query
  *   query defines the transaction event query that is proxied to Tendermint's
  *   TxSearch RPC method. The query must be valid.
  */
@SerialVersionUID(0L)
final case class GetTxsEventRequest(
    @scala.deprecated(message="Marked as deprecated in proto file", "") events: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    @scala.deprecated(message="Marked as deprecated in proto file", "") pagination: _root_.scala.Option[cosmos.base.query.v1beta1.PageRequest] = _root_.scala.None,
    orderBy: cosmos.tx.v1beta1.OrderBy = cosmos.tx.v1beta1.OrderBy.ORDER_BY_UNSPECIFIED,
    page: _root_.scala.Long = 0L,
    limit: _root_.scala.Long = 0L,
    query: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetTxsEventRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      events.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      }
      if (pagination.isDefined) {
        val __value = pagination.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = orderBy.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      
      {
        val __value = page
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(4, __value)
        }
      };
      
      {
        val __value = limit
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(5, __value)
        }
      };
      
      {
        val __value = query
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      events.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      pagination.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = orderBy.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      {
        val __v = page
        if (__v != 0L) {
          _output__.writeUInt64(4, __v)
        }
      };
      {
        val __v = limit
        if (__v != 0L) {
          _output__.writeUInt64(5, __v)
        }
      };
      {
        val __v = query
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearEvents = copy(events = _root_.scala.Seq.empty)
    def addEvents(__vs: _root_.scala.Predef.String *): GetTxsEventRequest = addAllEvents(__vs)
    def addAllEvents(__vs: Iterable[_root_.scala.Predef.String]): GetTxsEventRequest = copy(events = events ++ __vs)
    def withEvents(__v: _root_.scala.Seq[_root_.scala.Predef.String]): GetTxsEventRequest = copy(events = __v)
    def getPagination: cosmos.base.query.v1beta1.PageRequest = pagination.getOrElse(cosmos.base.query.v1beta1.PageRequest.defaultInstance)
    def clearPagination: GetTxsEventRequest = copy(pagination = _root_.scala.None)
    def withPagination(__v: cosmos.base.query.v1beta1.PageRequest): GetTxsEventRequest = copy(pagination = Option(__v))
    def withOrderBy(__v: cosmos.tx.v1beta1.OrderBy): GetTxsEventRequest = copy(orderBy = __v)
    def withPage(__v: _root_.scala.Long): GetTxsEventRequest = copy(page = __v)
    def withLimit(__v: _root_.scala.Long): GetTxsEventRequest = copy(limit = __v)
    def withQuery(__v: _root_.scala.Predef.String): GetTxsEventRequest = copy(query = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => events
        case 2 => pagination.orNull
        case 3 => {
          val __t = orderBy.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => {
          val __t = page
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = limit
          if (__t != 0L) __t else null
        }
        case 6 => {
          val __t = query
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(events.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 2 => pagination.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PEnum(orderBy.scalaValueDescriptor)
        case 4 => _root_.scalapb.descriptors.PLong(page)
        case 5 => _root_.scalapb.descriptors.PLong(limit)
        case 6 => _root_.scalapb.descriptors.PString(query)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.tx.v1beta1.GetTxsEventRequest.type = cosmos.tx.v1beta1.GetTxsEventRequest
    // @@protoc_insertion_point(GeneratedMessage[cosmos.tx.v1beta1.GetTxsEventRequest])
}

object GetTxsEventRequest extends scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.GetTxsEventRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.GetTxsEventRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.tx.v1beta1.GetTxsEventRequest = {
    val __events: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __pagination: _root_.scala.Option[cosmos.base.query.v1beta1.PageRequest] = _root_.scala.None
    var __orderBy: cosmos.tx.v1beta1.OrderBy = cosmos.tx.v1beta1.OrderBy.ORDER_BY_UNSPECIFIED
    var __page: _root_.scala.Long = 0L
    var __limit: _root_.scala.Long = 0L
    var __query: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __events += _input__.readStringRequireUtf8()
        case 18 =>
          __pagination = _root_.scala.Option(__pagination.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.query.v1beta1.PageRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __orderBy = cosmos.tx.v1beta1.OrderBy.fromValue(_input__.readEnum())
        case 32 =>
          __page = _input__.readUInt64()
        case 40 =>
          __limit = _input__.readUInt64()
        case 50 =>
          __query = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.tx.v1beta1.GetTxsEventRequest(
        events = __events.result(),
        pagination = __pagination,
        orderBy = __orderBy,
        page = __page,
        limit = __limit,
        query = __query,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.tx.v1beta1.GetTxsEventRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.tx.v1beta1.GetTxsEventRequest(
        events = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        pagination = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[cosmos.base.query.v1beta1.PageRequest]]),
        orderBy = cosmos.tx.v1beta1.OrderBy.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.tx.v1beta1.OrderBy.ORDER_BY_UNSPECIFIED.scalaValueDescriptor).number),
        page = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        limit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        query = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.tx.v1beta1.ServiceProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.tx.v1beta1.ServiceProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = cosmos.base.query.v1beta1.PageRequest
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => cosmos.tx.v1beta1.OrderBy
    }
  }
  lazy val defaultInstance = cosmos.tx.v1beta1.GetTxsEventRequest(
    events = _root_.scala.Seq.empty,
    pagination = _root_.scala.None,
    orderBy = cosmos.tx.v1beta1.OrderBy.ORDER_BY_UNSPECIFIED,
    page = 0L,
    limit = 0L,
    query = ""
  )
  implicit class GetTxsEventRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.GetTxsEventRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.tx.v1beta1.GetTxsEventRequest](_l) {
    def events: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.events)((c_, f_) => c_.copy(events = f_))
    def pagination: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.query.v1beta1.PageRequest] = field(_.getPagination)((c_, f_) => c_.copy(pagination = _root_.scala.Option(f_)))
    def optionalPagination: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.query.v1beta1.PageRequest]] = field(_.pagination)((c_, f_) => c_.copy(pagination = f_))
    def orderBy: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.OrderBy] = field(_.orderBy)((c_, f_) => c_.copy(orderBy = f_))
    def page: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.page)((c_, f_) => c_.copy(page = f_))
    def limit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.limit)((c_, f_) => c_.copy(limit = f_))
    def query: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.query)((c_, f_) => c_.copy(query = f_))
  }
  final val EVENTS_FIELD_NUMBER = 1
  final val PAGINATION_FIELD_NUMBER = 2
  final val ORDER_BY_FIELD_NUMBER = 3
  final val PAGE_FIELD_NUMBER = 4
  final val LIMIT_FIELD_NUMBER = 5
  final val QUERY_FIELD_NUMBER = 6
  def of(
    events: _root_.scala.Seq[_root_.scala.Predef.String],
    pagination: _root_.scala.Option[cosmos.base.query.v1beta1.PageRequest],
    orderBy: cosmos.tx.v1beta1.OrderBy,
    page: _root_.scala.Long,
    limit: _root_.scala.Long,
    query: _root_.scala.Predef.String
  ): _root_.cosmos.tx.v1beta1.GetTxsEventRequest = _root_.cosmos.tx.v1beta1.GetTxsEventRequest(
    events,
    pagination,
    orderBy,
    page,
    limit,
    query
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.tx.v1beta1.GetTxsEventRequest])
}
