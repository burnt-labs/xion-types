// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.tx.v1beta1

/** SignDocDirectAux is the type used for generating sign bytes for
  * SIGN_MODE_DIRECT_AUX.
  *
  * @param bodyBytes
  *   body_bytes is protobuf serialization of a TxBody that matches the
  *   representation in TxRaw.
  * @param publicKey
  *   public_key is the public key of the signing account.
  * @param chainId
  *   chain_id is the identifier of the chain this transaction targets.
  *   It prevents signed transactions from being used on another chain by an
  *   attacker.
  * @param accountNumber
  *   account_number is the account number of the account in state.
  * @param sequence
  *   sequence is the sequence number of the signing account.
  * @param tip
  *   tips have been depreacted and should not be used
  */
@SerialVersionUID(0L)
final case class SignDocDirectAux(
    bodyBytes: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    publicKey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    chainId: _root_.scala.Predef.String = "",
    accountNumber: _root_.scala.Long = 0L,
    sequence: _root_.scala.Long = 0L,
    @scala.deprecated(message="Marked as deprecated in proto file", "") tip: _root_.scala.Option[cosmos.tx.v1beta1.Tip] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SignDocDirectAux] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = bodyBytes
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(1, __value)
        }
      };
      if (publicKey.isDefined) {
        val __value = publicKey.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = chainId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = accountNumber
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(4, __value)
        }
      };
      
      {
        val __value = sequence
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(5, __value)
        }
      };
      if (tip.isDefined) {
        val __value = tip.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = bodyBytes
        if (!__v.isEmpty) {
          _output__.writeBytes(1, __v)
        }
      };
      publicKey.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = chainId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = accountNumber
        if (__v != 0L) {
          _output__.writeUInt64(4, __v)
        }
      };
      {
        val __v = sequence
        if (__v != 0L) {
          _output__.writeUInt64(5, __v)
        }
      };
      tip.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withBodyBytes(__v: _root_.com.google.protobuf.ByteString): SignDocDirectAux = copy(bodyBytes = __v)
    def getPublicKey: com.google.protobuf.any.Any = publicKey.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearPublicKey: SignDocDirectAux = copy(publicKey = _root_.scala.None)
    def withPublicKey(__v: com.google.protobuf.any.Any): SignDocDirectAux = copy(publicKey = Option(__v))
    def withChainId(__v: _root_.scala.Predef.String): SignDocDirectAux = copy(chainId = __v)
    def withAccountNumber(__v: _root_.scala.Long): SignDocDirectAux = copy(accountNumber = __v)
    def withSequence(__v: _root_.scala.Long): SignDocDirectAux = copy(sequence = __v)
    def getTip: cosmos.tx.v1beta1.Tip = tip.getOrElse(cosmos.tx.v1beta1.Tip.defaultInstance)
    def clearTip: SignDocDirectAux = copy(tip = _root_.scala.None)
    def withTip(__v: cosmos.tx.v1beta1.Tip): SignDocDirectAux = copy(tip = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = bodyBytes
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => publicKey.orNull
        case 3 => {
          val __t = chainId
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = accountNumber
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = sequence
          if (__t != 0L) __t else null
        }
        case 6 => tip.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PByteString(bodyBytes)
        case 2 => publicKey.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(chainId)
        case 4 => _root_.scalapb.descriptors.PLong(accountNumber)
        case 5 => _root_.scalapb.descriptors.PLong(sequence)
        case 6 => tip.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.tx.v1beta1.SignDocDirectAux.type = cosmos.tx.v1beta1.SignDocDirectAux
    // @@protoc_insertion_point(GeneratedMessage[cosmos.tx.v1beta1.SignDocDirectAux])
}

object SignDocDirectAux extends scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.SignDocDirectAux] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.SignDocDirectAux] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.tx.v1beta1.SignDocDirectAux = {
    var __bodyBytes: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __publicKey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var __chainId: _root_.scala.Predef.String = ""
    var __accountNumber: _root_.scala.Long = 0L
    var __sequence: _root_.scala.Long = 0L
    var __tip: _root_.scala.Option[cosmos.tx.v1beta1.Tip] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __bodyBytes = _input__.readBytes()
        case 18 =>
          __publicKey = _root_.scala.Option(__publicKey.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __chainId = _input__.readStringRequireUtf8()
        case 32 =>
          __accountNumber = _input__.readUInt64()
        case 40 =>
          __sequence = _input__.readUInt64()
        case 50 =>
          __tip = _root_.scala.Option(__tip.fold(_root_.scalapb.LiteParser.readMessage[cosmos.tx.v1beta1.Tip](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.tx.v1beta1.SignDocDirectAux(
        bodyBytes = __bodyBytes,
        publicKey = __publicKey,
        chainId = __chainId,
        accountNumber = __accountNumber,
        sequence = __sequence,
        tip = __tip,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.tx.v1beta1.SignDocDirectAux] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.tx.v1beta1.SignDocDirectAux(
        bodyBytes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        publicKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        chainId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        accountNumber = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        sequence = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        tip = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[cosmos.tx.v1beta1.Tip]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.tx.v1beta1.TxProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.tx.v1beta1.TxProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.any.Any
      case 6 => __out = cosmos.tx.v1beta1.Tip
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.tx.v1beta1.SignDocDirectAux(
    bodyBytes = _root_.com.google.protobuf.ByteString.EMPTY,
    publicKey = _root_.scala.None,
    chainId = "",
    accountNumber = 0L,
    sequence = 0L,
    tip = _root_.scala.None
  )
  implicit class SignDocDirectAuxLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.SignDocDirectAux]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.tx.v1beta1.SignDocDirectAux](_l) {
    def bodyBytes: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.bodyBytes)((c_, f_) => c_.copy(bodyBytes = f_))
    def publicKey: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getPublicKey)((c_, f_) => c_.copy(publicKey = _root_.scala.Option(f_)))
    def optionalPublicKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.publicKey)((c_, f_) => c_.copy(publicKey = f_))
    def chainId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.chainId)((c_, f_) => c_.copy(chainId = f_))
    def accountNumber: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.accountNumber)((c_, f_) => c_.copy(accountNumber = f_))
    def sequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.sequence)((c_, f_) => c_.copy(sequence = f_))
    def tip: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.Tip] = field(_.getTip)((c_, f_) => c_.copy(tip = _root_.scala.Option(f_)))
    def optionalTip: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.tx.v1beta1.Tip]] = field(_.tip)((c_, f_) => c_.copy(tip = f_))
  }
  final val BODY_BYTES_FIELD_NUMBER = 1
  final val PUBLIC_KEY_FIELD_NUMBER = 2
  final val CHAIN_ID_FIELD_NUMBER = 3
  final val ACCOUNT_NUMBER_FIELD_NUMBER = 4
  final val SEQUENCE_FIELD_NUMBER = 5
  final val TIP_FIELD_NUMBER = 6
  def of(
    bodyBytes: _root_.com.google.protobuf.ByteString,
    publicKey: _root_.scala.Option[com.google.protobuf.any.Any],
    chainId: _root_.scala.Predef.String,
    accountNumber: _root_.scala.Long,
    sequence: _root_.scala.Long,
    tip: _root_.scala.Option[cosmos.tx.v1beta1.Tip]
  ): _root_.cosmos.tx.v1beta1.SignDocDirectAux = _root_.cosmos.tx.v1beta1.SignDocDirectAux(
    bodyBytes,
    publicKey,
    chainId,
    accountNumber,
    sequence,
    tip
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.tx.v1beta1.SignDocDirectAux])
}
