// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.tx.v1beta1

/** GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs
  * method.
  *
  * @param txs
  *   txs are the transactions in the block.
  * @param pagination
  *   pagination defines a pagination for the response.
  */
@SerialVersionUID(0L)
final case class GetBlockWithTxsResponse(
    txs: _root_.scala.Seq[cosmos.tx.v1beta1.Tx] = _root_.scala.Seq.empty,
    blockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None,
    block: _root_.scala.Option[tendermint.types.Block] = _root_.scala.None,
    pagination: _root_.scala.Option[cosmos.base.query.v1beta1.PageResponse] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GetBlockWithTxsResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      txs.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (blockId.isDefined) {
        val __value = blockId.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (block.isDefined) {
        val __value = block.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (pagination.isDefined) {
        val __value = pagination.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      txs.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      blockId.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      block.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      pagination.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def clearTxs = copy(txs = _root_.scala.Seq.empty)
    def addTxs(__vs: cosmos.tx.v1beta1.Tx *): GetBlockWithTxsResponse = addAllTxs(__vs)
    def addAllTxs(__vs: Iterable[cosmos.tx.v1beta1.Tx]): GetBlockWithTxsResponse = copy(txs = txs ++ __vs)
    def withTxs(__v: _root_.scala.Seq[cosmos.tx.v1beta1.Tx]): GetBlockWithTxsResponse = copy(txs = __v)
    def getBlockId: tendermint.types.BlockID = blockId.getOrElse(tendermint.types.BlockID.defaultInstance)
    def clearBlockId: GetBlockWithTxsResponse = copy(blockId = _root_.scala.None)
    def withBlockId(__v: tendermint.types.BlockID): GetBlockWithTxsResponse = copy(blockId = Option(__v))
    def getBlock: tendermint.types.Block = block.getOrElse(tendermint.types.Block.defaultInstance)
    def clearBlock: GetBlockWithTxsResponse = copy(block = _root_.scala.None)
    def withBlock(__v: tendermint.types.Block): GetBlockWithTxsResponse = copy(block = Option(__v))
    def getPagination: cosmos.base.query.v1beta1.PageResponse = pagination.getOrElse(cosmos.base.query.v1beta1.PageResponse.defaultInstance)
    def clearPagination: GetBlockWithTxsResponse = copy(pagination = _root_.scala.None)
    def withPagination(__v: cosmos.base.query.v1beta1.PageResponse): GetBlockWithTxsResponse = copy(pagination = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => txs
        case 2 => blockId.orNull
        case 3 => block.orNull
        case 4 => pagination.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(txs.iterator.map(_.toPMessage).toVector)
        case 2 => blockId.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => block.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => pagination.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.tx.v1beta1.GetBlockWithTxsResponse.type = cosmos.tx.v1beta1.GetBlockWithTxsResponse
    // @@protoc_insertion_point(GeneratedMessage[cosmos.tx.v1beta1.GetBlockWithTxsResponse])
}

object GetBlockWithTxsResponse extends scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.GetBlockWithTxsResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.tx.v1beta1.GetBlockWithTxsResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.tx.v1beta1.GetBlockWithTxsResponse = {
    val __txs: _root_.scala.collection.immutable.VectorBuilder[cosmos.tx.v1beta1.Tx] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.tx.v1beta1.Tx]
    var __blockId: _root_.scala.Option[tendermint.types.BlockID] = _root_.scala.None
    var __block: _root_.scala.Option[tendermint.types.Block] = _root_.scala.None
    var __pagination: _root_.scala.Option[cosmos.base.query.v1beta1.PageResponse] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __txs += _root_.scalapb.LiteParser.readMessage[cosmos.tx.v1beta1.Tx](_input__)
        case 18 =>
          __blockId = _root_.scala.Option(__blockId.fold(_root_.scalapb.LiteParser.readMessage[tendermint.types.BlockID](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __block = _root_.scala.Option(__block.fold(_root_.scalapb.LiteParser.readMessage[tendermint.types.Block](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __pagination = _root_.scala.Option(__pagination.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.query.v1beta1.PageResponse](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.tx.v1beta1.GetBlockWithTxsResponse(
        txs = __txs.result(),
        blockId = __blockId,
        block = __block,
        pagination = __pagination,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.tx.v1beta1.GetBlockWithTxsResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.tx.v1beta1.GetBlockWithTxsResponse(
        txs = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[cosmos.tx.v1beta1.Tx]]).getOrElse(_root_.scala.Seq.empty),
        blockId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[tendermint.types.BlockID]]),
        block = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[tendermint.types.Block]]),
        pagination = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[cosmos.base.query.v1beta1.PageResponse]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.tx.v1beta1.ServiceProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.tx.v1beta1.ServiceProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.tx.v1beta1.Tx
      case 2 => __out = tendermint.types.BlockID
      case 3 => __out = tendermint.types.Block
      case 4 => __out = cosmos.base.query.v1beta1.PageResponse
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.tx.v1beta1.GetBlockWithTxsResponse(
    txs = _root_.scala.Seq.empty,
    blockId = _root_.scala.None,
    block = _root_.scala.None,
    pagination = _root_.scala.None
  )
  implicit class GetBlockWithTxsResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.tx.v1beta1.GetBlockWithTxsResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.tx.v1beta1.GetBlockWithTxsResponse](_l) {
    def txs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.tx.v1beta1.Tx]] = field(_.txs)((c_, f_) => c_.copy(txs = f_))
    def blockId: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.BlockID] = field(_.getBlockId)((c_, f_) => c_.copy(blockId = _root_.scala.Option(f_)))
    def optionalBlockId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.types.BlockID]] = field(_.blockId)((c_, f_) => c_.copy(blockId = f_))
    def block: _root_.scalapb.lenses.Lens[UpperPB, tendermint.types.Block] = field(_.getBlock)((c_, f_) => c_.copy(block = _root_.scala.Option(f_)))
    def optionalBlock: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[tendermint.types.Block]] = field(_.block)((c_, f_) => c_.copy(block = f_))
    def pagination: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.query.v1beta1.PageResponse] = field(_.getPagination)((c_, f_) => c_.copy(pagination = _root_.scala.Option(f_)))
    def optionalPagination: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.query.v1beta1.PageResponse]] = field(_.pagination)((c_, f_) => c_.copy(pagination = f_))
  }
  final val TXS_FIELD_NUMBER = 1
  final val BLOCK_ID_FIELD_NUMBER = 2
  final val BLOCK_FIELD_NUMBER = 3
  final val PAGINATION_FIELD_NUMBER = 4
  def of(
    txs: _root_.scala.Seq[cosmos.tx.v1beta1.Tx],
    blockId: _root_.scala.Option[tendermint.types.BlockID],
    block: _root_.scala.Option[tendermint.types.Block],
    pagination: _root_.scala.Option[cosmos.base.query.v1beta1.PageResponse]
  ): _root_.cosmos.tx.v1beta1.GetBlockWithTxsResponse = _root_.cosmos.tx.v1beta1.GetBlockWithTxsResponse(
    txs,
    blockId,
    block,
    pagination
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.tx.v1beta1.GetBlockWithTxsResponse])
}
