// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.tx.v1beta1

object ServiceProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.api.AnnotationsProto,
    cosmos.base.abci.v1beta1.AbciProto,
    cosmos.tx.v1beta1.TxProto,
    cosmos.base.query.v1beta1.PaginationProto,
    tendermint.types.BlockProto,
    tendermint.types.TypesProto,
    cosmos_proto.CosmosProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      cosmos.tx.v1beta1.GetTxsEventRequest,
      cosmos.tx.v1beta1.GetTxsEventResponse,
      cosmos.tx.v1beta1.BroadcastTxRequest,
      cosmos.tx.v1beta1.BroadcastTxResponse,
      cosmos.tx.v1beta1.SimulateRequest,
      cosmos.tx.v1beta1.SimulateResponse,
      cosmos.tx.v1beta1.GetTxRequest,
      cosmos.tx.v1beta1.GetTxResponse,
      cosmos.tx.v1beta1.GetBlockWithTxsRequest,
      cosmos.tx.v1beta1.GetBlockWithTxsResponse,
      cosmos.tx.v1beta1.TxDecodeRequest,
      cosmos.tx.v1beta1.TxDecodeResponse,
      cosmos.tx.v1beta1.TxEncodeRequest,
      cosmos.tx.v1beta1.TxEncodeResponse,
      cosmos.tx.v1beta1.TxEncodeAminoRequest,
      cosmos.tx.v1beta1.TxEncodeAminoResponse,
      cosmos.tx.v1beta1.TxDecodeAminoRequest,
      cosmos.tx.v1beta1.TxDecodeAminoResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Ch9jb3Ntb3MvdHgvdjFiZXRhMS9zZXJ2aWNlLnByb3RvEhFjb3Ntb3MudHgudjFiZXRhMRocZ29vZ2xlL2FwaS9hbm5vdGF0a
  W9ucy5wcm90bxojY29zbW9zL2Jhc2UvYWJjaS92MWJldGExL2FiY2kucHJvdG8aGmNvc21vcy90eC92MWJldGExL3R4LnByb3RvG
  ipjb3Ntb3MvYmFzZS9xdWVyeS92MWJldGExL3BhZ2luYXRpb24ucHJvdG8aHHRlbmRlcm1pbnQvdHlwZXMvYmxvY2sucHJvdG8aH
  HRlbmRlcm1pbnQvdHlwZXMvdHlwZXMucHJvdG8aGWNvc21vc19wcm90by9jb3Ntb3MucHJvdG8i0QIKEkdldFR4c0V2ZW50UmVxd
  WVzdBIlCgZldmVudHMYASADKAlCDRgB4j8IEgZldmVudHNSBmV2ZW50cxJZCgpwYWdpbmF0aW9uGAIgASgLMiYuY29zbW9zLmJhc
  2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdEIRGAHiPwwSCnBhZ2luYXRpb25SCnBhZ2luYXRpb24SQwoIb3JkZXJfYnkYAyABK
  A4yGi5jb3Ntb3MudHgudjFiZXRhMS5PcmRlckJ5QgziPwkSB29yZGVyQnlSB29yZGVyQnkSHQoEcGFnZRgEIAEoBEIJ4j8GEgRwY
  WdlUgRwYWdlEiAKBWxpbWl0GAUgASgEQgriPwcSBWxpbWl0UgVsaW1pdBIzCgVxdWVyeRgGIAEoCUId4j8HEgVxdWVyedq0LQ9jb
  3Ntb3Mtc2RrIDAuNTBSBXF1ZXJ5IqECChNHZXRUeHNFdmVudFJlc3BvbnNlEjEKA3R4cxgBIAMoCzIVLmNvc21vcy50eC52MWJld
  GExLlR4QgjiPwUSA3R4c1IDdHhzElkKDHR4X3Jlc3BvbnNlcxgCIAMoCzIkLmNvc21vcy5iYXNlLmFiY2kudjFiZXRhMS5UeFJlc
  3BvbnNlQhDiPw0SC3R4UmVzcG9uc2VzUgt0eFJlc3BvbnNlcxJaCgpwYWdpbmF0aW9uGAMgASgLMicuY29zbW9zLmJhc2UucXVlc
  nkudjFiZXRhMS5QYWdlUmVzcG9uc2VCERgB4j8MEgpwYWdpbmF0aW9uUgpwYWdpbmF0aW9uEiAKBXRvdGFsGAQgASgEQgriPwcSB
  XRvdGFsUgV0b3RhbCJ+ChJCcm9hZGNhc3RUeFJlcXVlc3QSJwoIdHhfYnl0ZXMYASABKAxCDOI/CRIHdHhCeXRlc1IHdHhCeXRlc
  xI/CgRtb2RlGAIgASgOMiAuY29zbW9zLnR4LnYxYmV0YTEuQnJvYWRjYXN0TW9kZUIJ4j8GEgRtb2RlUgRtb2RlIm0KE0Jyb2FkY
  2FzdFR4UmVzcG9uc2USVgoLdHhfcmVzcG9uc2UYASABKAsyJC5jb3Ntb3MuYmFzZS5hYmNpLnYxYmV0YTEuVHhSZXNwb25zZUIP4
  j8MEgp0eFJlc3BvbnNlUgp0eFJlc3BvbnNlIn8KD1NpbXVsYXRlUmVxdWVzdBIwCgJ0eBgBIAEoCzIVLmNvc21vcy50eC52MWJld
  GExLlR4QgkYAeI/BBICdHhSAnR4EjoKCHR4X2J5dGVzGAIgASgMQh/iPwkSB3R4Qnl0ZXPatC0PY29zbW9zLXNkayAwLjQzUgd0e
  EJ5dGVzIqUBChBTaW11bGF0ZVJlc3BvbnNlEkoKCGdhc19pbmZvGAEgASgLMiEuY29zbW9zLmJhc2UuYWJjaS52MWJldGExLkdhc
  0luZm9CDOI/CRIHZ2FzSW5mb1IHZ2FzSW5mbxJFCgZyZXN1bHQYAiABKAsyIC5jb3Ntb3MuYmFzZS5hYmNpLnYxYmV0YTEuUmVzd
  Wx0QgviPwgSBnJlc3VsdFIGcmVzdWx0Ii0KDEdldFR4UmVxdWVzdBIdCgRoYXNoGAEgASgJQgniPwYSBGhhc2hSBGhhc2gilwEKD
  UdldFR4UmVzcG9uc2USLgoCdHgYASABKAsyFS5jb3Ntb3MudHgudjFiZXRhMS5UeEIH4j8EEgJ0eFICdHgSVgoLdHhfcmVzcG9uc
  2UYAiABKAsyJC5jb3Ntb3MuYmFzZS5hYmNpLnYxYmV0YTEuVHhSZXNwb25zZUIP4j8MEgp0eFJlc3BvbnNlUgp0eFJlc3BvbnNlI
  q0BChZHZXRCbG9ja1dpdGhUeHNSZXF1ZXN0EiMKBmhlaWdodBgBIAEoA0IL4j8IEgZoZWlnaHRSBmhlaWdodBJXCgpwYWdpbmF0a
  W9uGAIgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdEIP4j8MEgpwYWdpbmF0aW9uUgpwYWdpbmF0a
  W9uOhXStC0RY29zbW9zLXNkayAwLjQ1LjIivAIKF0dldEJsb2NrV2l0aFR4c1Jlc3BvbnNlEjEKA3R4cxgBIAMoCzIVLmNvc21vc
  y50eC52MWJldGExLlR4QgjiPwUSA3R4c1IDdHhzEkIKCGJsb2NrX2lkGAIgASgLMhkudGVuZGVybWludC50eXBlcy5CbG9ja0lEQ
  gziPwkSB2Jsb2NrSWRSB2Jsb2NrSWQSOQoFYmxvY2sYAyABKAsyFy50ZW5kZXJtaW50LnR5cGVzLkJsb2NrQgriPwcSBWJsb2NrU
  gVibG9jaxJYCgpwYWdpbmF0aW9uGAQgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2VCD+I/DBIKc
  GFnaW5hdGlvblIKcGFnaW5hdGlvbjoV0rQtEWNvc21vcy1zZGsgMC40NS4yIk8KD1R4RGVjb2RlUmVxdWVzdBInCgh0eF9ieXRlc
  xgBIAEoDEIM4j8JEgd0eEJ5dGVzUgd0eEJ5dGVzOhPStC0PY29zbW9zLXNkayAwLjQ3IlcKEFR4RGVjb2RlUmVzcG9uc2USLgoCd
  HgYASABKAsyFS5jb3Ntb3MudHgudjFiZXRhMS5UeEIH4j8EEgJ0eFICdHg6E9K0LQ9jb3Ntb3Mtc2RrIDAuNDciVgoPVHhFbmNvZ
  GVSZXF1ZXN0Ei4KAnR4GAEgASgLMhUuY29zbW9zLnR4LnYxYmV0YTEuVHhCB+I/BBICdHhSAnR4OhPStC0PY29zbW9zLXNkayAwL
  jQ3IlAKEFR4RW5jb2RlUmVzcG9uc2USJwoIdHhfYnl0ZXMYASABKAxCDOI/CRIHdHhCeXRlc1IHdHhCeXRlczoT0rQtD2Nvc21vc
  y1zZGsgMC40NyJaChRUeEVuY29kZUFtaW5vUmVxdWVzdBItCgphbWlub19qc29uGAEgASgJQg7iPwsSCWFtaW5vSnNvblIJYW1pb
  m9Kc29uOhPStC0PY29zbW9zLXNkayAwLjQ3ImEKFVR4RW5jb2RlQW1pbm9SZXNwb25zZRIzCgxhbWlub19iaW5hcnkYASABKAxCE
  OI/DRILYW1pbm9CaW5hcnlSC2FtaW5vQmluYXJ5OhPStC0PY29zbW9zLXNkayAwLjQ3ImAKFFR4RGVjb2RlQW1pbm9SZXF1ZXN0E
  jMKDGFtaW5vX2JpbmFyeRgBIAEoDEIQ4j8NEgthbWlub0JpbmFyeVILYW1pbm9CaW5hcnk6E9K0LQ9jb3Ntb3Mtc2RrIDAuNDciW
  woVVHhEZWNvZGVBbWlub1Jlc3BvbnNlEi0KCmFtaW5vX2pzb24YASABKAlCDuI/CxIJYW1pbm9Kc29uUglhbWlub0pzb246E9K0L
  Q9jb3Ntb3Mtc2RrIDAuNDcqigEKB09yZGVyQnkSMwoUT1JERVJfQllfVU5TUEVDSUZJRUQQABoZ4j8WEhRPUkRFUl9CWV9VTlNQR
  UNJRklFRBIjCgxPUkRFUl9CWV9BU0MQARoR4j8OEgxPUkRFUl9CWV9BU0MSJQoNT1JERVJfQllfREVTQxACGhLiPw8SDU9SREVSX
  0JZX0RFU0Mq7wEKDUJyb2FkY2FzdE1vZGUSPwoaQlJPQURDQVNUX01PREVfVU5TUEVDSUZJRUQQABof4j8cEhpCUk9BRENBU1RfT
  U9ERV9VTlNQRUNJRklFRBI1ChRCUk9BRENBU1RfTU9ERV9CTE9DSxABGhsIAeI/FhIUQlJPQURDQVNUX01PREVfQkxPQ0sSMQoTQ
  lJPQURDQVNUX01PREVfU1lOQxACGhjiPxUSE0JST0FEQ0FTVF9NT0RFX1NZTkMSMwoUQlJPQURDQVNUX01PREVfQVNZTkMQAxoZ4
  j8WEhRCUk9BRENBU1RfTU9ERV9BU1lOQzKNCgoHU2VydmljZRJ7CghTaW11bGF0ZRIiLmNvc21vcy50eC52MWJldGExLlNpbXVsY
  XRlUmVxdWVzdBojLmNvc21vcy50eC52MWJldGExLlNpbXVsYXRlUmVzcG9uc2UiJoLT5JMCIDoBKiIbL2Nvc21vcy90eC92MWJld
  GExL3NpbXVsYXRlEnEKBUdldFR4Eh8uY29zbW9zLnR4LnYxYmV0YTEuR2V0VHhSZXF1ZXN0GiAuY29zbW9zLnR4LnYxYmV0YTEuR
  2V0VHhSZXNwb25zZSIlgtPkkwIfEh0vY29zbW9zL3R4L3YxYmV0YTEvdHhzL3toYXNofRJ/CgtCcm9hZGNhc3RUeBIlLmNvc21vc
  y50eC52MWJldGExLkJyb2FkY2FzdFR4UmVxdWVzdBomLmNvc21vcy50eC52MWJldGExLkJyb2FkY2FzdFR4UmVzcG9uc2UiIYLT5
  JMCGzoBKiIWL2Nvc21vcy90eC92MWJldGExL3R4cxJ8CgtHZXRUeHNFdmVudBIlLmNvc21vcy50eC52MWJldGExLkdldFR4c0V2Z
  W50UmVxdWVzdBomLmNvc21vcy50eC52MWJldGExLkdldFR4c0V2ZW50UmVzcG9uc2UiHoLT5JMCGBIWL2Nvc21vcy90eC92MWJld
  GExL3R4cxKsAQoPR2V0QmxvY2tXaXRoVHhzEikuY29zbW9zLnR4LnYxYmV0YTEuR2V0QmxvY2tXaXRoVHhzUmVxdWVzdBoqLmNvc
  21vcy50eC52MWJldGExLkdldEJsb2NrV2l0aFR4c1Jlc3BvbnNlIkLKtC0RY29zbW9zLXNkayAwLjQ1LjKC0+STAicSJS9jb3Ntb
  3MvdHgvdjFiZXRhMS90eHMvYmxvY2sve2hlaWdodH0SjAEKCFR4RGVjb2RlEiIuY29zbW9zLnR4LnYxYmV0YTEuVHhEZWNvZGVSZ
  XF1ZXN0GiMuY29zbW9zLnR4LnYxYmV0YTEuVHhEZWNvZGVSZXNwb25zZSI3yrQtD2Nvc21vcy1zZGsgMC40N4LT5JMCHjoBKiIZL
  2Nvc21vcy90eC92MWJldGExL2RlY29kZRKMAQoIVHhFbmNvZGUSIi5jb3Ntb3MudHgudjFiZXRhMS5UeEVuY29kZVJlcXVlc3QaI
  y5jb3Ntb3MudHgudjFiZXRhMS5UeEVuY29kZVJlc3BvbnNlIjfKtC0PY29zbW9zLXNkayAwLjQ3gtPkkwIeOgEqIhkvY29zbW9zL
  3R4L3YxYmV0YTEvZW5jb2RlEqEBCg1UeEVuY29kZUFtaW5vEicuY29zbW9zLnR4LnYxYmV0YTEuVHhFbmNvZGVBbWlub1JlcXVlc
  3QaKC5jb3Ntb3MudHgudjFiZXRhMS5UeEVuY29kZUFtaW5vUmVzcG9uc2UiPcq0LQ9jb3Ntb3Mtc2RrIDAuNDeC0+STAiQ6ASoiH
  y9jb3Ntb3MvdHgvdjFiZXRhMS9lbmNvZGUvYW1pbm8SoQEKDVR4RGVjb2RlQW1pbm8SJy5jb3Ntb3MudHgudjFiZXRhMS5UeERlY
  29kZUFtaW5vUmVxdWVzdBooLmNvc21vcy50eC52MWJldGExLlR4RGVjb2RlQW1pbm9SZXNwb25zZSI9yrQtD2Nvc21vcy1zZGsgM
  C40N4LT5JMCJDoBKiIfL2Nvc21vcy90eC92MWJldGExL2RlY29kZS9hbWlub0InWiVnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc
  2RrL3R5cGVzL3R4YgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.api.AnnotationsProto.javaDescriptor,
      cosmos.base.abci.v1beta1.AbciProto.javaDescriptor,
      cosmos.tx.v1beta1.TxProto.javaDescriptor,
      cosmos.base.query.v1beta1.PaginationProto.javaDescriptor,
      tendermint.types.BlockProto.javaDescriptor,
      tendermint.types.TypesProto.javaDescriptor,
      cosmos_proto.CosmosProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}