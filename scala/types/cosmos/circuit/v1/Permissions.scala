// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.circuit.v1

/** Permissions are the permissions that an account has to trip
  * or reset the circuit breaker.
  *
  * @param level
  *   level is the level of permissions granted to this account.
  * @param limitTypeUrls
  *   limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg type
  *   URLs that the account can trip. It is an error to use limit_type_urls with
  *   a level other than LEVEL_SOME_MSGS.
  */
@SerialVersionUID(0L)
final case class Permissions(
    level: cosmos.circuit.v1.Permissions.Level = cosmos.circuit.v1.Permissions.Level.LEVEL_NONE_UNSPECIFIED,
    limitTypeUrls: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Permissions] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = level.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      limitTypeUrls.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = level.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      limitTypeUrls.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withLevel(__v: cosmos.circuit.v1.Permissions.Level): Permissions = copy(level = __v)
    def clearLimitTypeUrls = copy(limitTypeUrls = _root_.scala.Seq.empty)
    def addLimitTypeUrls(__vs: _root_.scala.Predef.String *): Permissions = addAllLimitTypeUrls(__vs)
    def addAllLimitTypeUrls(__vs: Iterable[_root_.scala.Predef.String]): Permissions = copy(limitTypeUrls = limitTypeUrls ++ __vs)
    def withLimitTypeUrls(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Permissions = copy(limitTypeUrls = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = level.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => limitTypeUrls
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(level.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PRepeated(limitTypeUrls.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.circuit.v1.Permissions.type = cosmos.circuit.v1.Permissions
    // @@protoc_insertion_point(GeneratedMessage[cosmos.circuit.v1.Permissions])
}

object Permissions extends scalapb.GeneratedMessageCompanion[cosmos.circuit.v1.Permissions] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.circuit.v1.Permissions] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.circuit.v1.Permissions = {
    var __level: cosmos.circuit.v1.Permissions.Level = cosmos.circuit.v1.Permissions.Level.LEVEL_NONE_UNSPECIFIED
    val __limitTypeUrls: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __level = cosmos.circuit.v1.Permissions.Level.fromValue(_input__.readEnum())
        case 18 =>
          __limitTypeUrls += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.circuit.v1.Permissions(
        level = __level,
        limitTypeUrls = __limitTypeUrls.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.circuit.v1.Permissions] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.circuit.v1.Permissions(
        level = cosmos.circuit.v1.Permissions.Level.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.circuit.v1.Permissions.Level.LEVEL_NONE_UNSPECIFIED.scalaValueDescriptor).number),
        limitTypeUrls = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.circuit.v1.TypesProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.circuit.v1.TypesProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => cosmos.circuit.v1.Permissions.Level
    }
  }
  lazy val defaultInstance = cosmos.circuit.v1.Permissions(
    level = cosmos.circuit.v1.Permissions.Level.LEVEL_NONE_UNSPECIFIED,
    limitTypeUrls = _root_.scala.Seq.empty
  )
  /** Level is the permission level.
    */
  sealed abstract class Level(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
    type EnumType = cosmos.circuit.v1.Permissions.Level
    type RecognizedType = cosmos.circuit.v1.Permissions.Level.Recognized
    def isLevelNoneUnspecified: _root_.scala.Boolean = false
    def isLevelSomeMsgs: _root_.scala.Boolean = false
    def isLevelAllMsgs: _root_.scala.Boolean = false
    def isLevelSuperAdmin: _root_.scala.Boolean = false
    def companion: _root_.scalapb.GeneratedEnumCompanion[Level] = cosmos.circuit.v1.Permissions.Level
    final def asRecognized: _root_.scala.Option[cosmos.circuit.v1.Permissions.Level.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[cosmos.circuit.v1.Permissions.Level.Recognized])
  }
  
  object Level extends _root_.scalapb.GeneratedEnumCompanion[Level] {
    sealed trait Recognized extends Level
    implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Level] = this
    
    /** LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
      * breaker permissions.
      */
    @SerialVersionUID(0L)
    case object LEVEL_NONE_UNSPECIFIED extends Level(0) with Level.Recognized {
      val index = 0
      val name = "LEVEL_NONE_UNSPECIFIED"
      override def isLevelNoneUnspecified: _root_.scala.Boolean = true
    }
    
    /** LEVEL_SOME_MSGS indicates that the account will have permission to
      * trip or reset the circuit breaker for some Msg type URLs. If this level
      * is chosen, a non-empty list of Msg type URLs must be provided in
      * limit_type_urls.
      */
    @SerialVersionUID(0L)
    case object LEVEL_SOME_MSGS extends Level(1) with Level.Recognized {
      val index = 1
      val name = "LEVEL_SOME_MSGS"
      override def isLevelSomeMsgs: _root_.scala.Boolean = true
    }
    
    /** LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
      * breaker for Msg's of all type URLs.
      */
    @SerialVersionUID(0L)
    case object LEVEL_ALL_MSGS extends Level(2) with Level.Recognized {
      val index = 2
      val name = "LEVEL_ALL_MSGS"
      override def isLevelAllMsgs: _root_.scala.Boolean = true
    }
    
    /** LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
      * actions and can grant permissions to other accounts.
      */
    @SerialVersionUID(0L)
    case object LEVEL_SUPER_ADMIN extends Level(3) with Level.Recognized {
      val index = 3
      val name = "LEVEL_SUPER_ADMIN"
      override def isLevelSuperAdmin: _root_.scala.Boolean = true
    }
    
    @SerialVersionUID(0L)
    final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Level(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
    lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(LEVEL_NONE_UNSPECIFIED, LEVEL_SOME_MSGS, LEVEL_ALL_MSGS, LEVEL_SUPER_ADMIN)
    def fromValue(__value: _root_.scala.Int): Level = __value match {
      case 0 => LEVEL_NONE_UNSPECIFIED
      case 1 => LEVEL_SOME_MSGS
      case 2 => LEVEL_ALL_MSGS
      case 3 => LEVEL_SUPER_ADMIN
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = cosmos.circuit.v1.Permissions.javaDescriptor.getEnumTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = cosmos.circuit.v1.Permissions.scalaDescriptor.enums(0)
  }
  implicit class PermissionsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.circuit.v1.Permissions]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.circuit.v1.Permissions](_l) {
    def level: _root_.scalapb.lenses.Lens[UpperPB, cosmos.circuit.v1.Permissions.Level] = field(_.level)((c_, f_) => c_.copy(level = f_))
    def limitTypeUrls: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.limitTypeUrls)((c_, f_) => c_.copy(limitTypeUrls = f_))
  }
  final val LEVEL_FIELD_NUMBER = 1
  final val LIMIT_TYPE_URLS_FIELD_NUMBER = 2
  def of(
    level: cosmos.circuit.v1.Permissions.Level,
    limitTypeUrls: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.cosmos.circuit.v1.Permissions = _root_.cosmos.circuit.v1.Permissions(
    level,
    limitTypeUrls
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.circuit.v1.Permissions])
}
