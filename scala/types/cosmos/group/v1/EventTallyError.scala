// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.group.v1

/** EventTallyError is an event emitted when a proposal tally failed with an error.
  *
  * @param proposalId
  *   proposal_id is the unique ID of the proposal.
  * @param errorMessage
  *   error_message is the raw error output
  */
@SerialVersionUID(0L)
final case class EventTallyError(
    proposalId: _root_.scala.Long = 0L,
    errorMessage: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[EventTallyError] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = proposalId
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = errorMessage
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = proposalId
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = errorMessage
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withProposalId(__v: _root_.scala.Long): EventTallyError = copy(proposalId = __v)
    def withErrorMessage(__v: _root_.scala.Predef.String): EventTallyError = copy(errorMessage = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = proposalId
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = errorMessage
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(proposalId)
        case 2 => _root_.scalapb.descriptors.PString(errorMessage)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.group.v1.EventTallyError.type = cosmos.group.v1.EventTallyError
    // @@protoc_insertion_point(GeneratedMessage[cosmos.group.v1.EventTallyError])
}

object EventTallyError extends scalapb.GeneratedMessageCompanion[cosmos.group.v1.EventTallyError] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.group.v1.EventTallyError] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.group.v1.EventTallyError = {
    var __proposalId: _root_.scala.Long = 0L
    var __errorMessage: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __proposalId = _input__.readUInt64()
        case 18 =>
          __errorMessage = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.group.v1.EventTallyError(
        proposalId = __proposalId,
        errorMessage = __errorMessage,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.group.v1.EventTallyError] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.group.v1.EventTallyError(
        proposalId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        errorMessage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.group.v1.EventsProto.javaDescriptor.getMessageTypes().get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.group.v1.EventsProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.group.v1.EventTallyError(
    proposalId = 0L,
    errorMessage = ""
  )
  implicit class EventTallyErrorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.group.v1.EventTallyError]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.group.v1.EventTallyError](_l) {
    def proposalId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.proposalId)((c_, f_) => c_.copy(proposalId = f_))
    def errorMessage: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.errorMessage)((c_, f_) => c_.copy(errorMessage = f_))
  }
  final val PROPOSAL_ID_FIELD_NUMBER = 1
  final val ERROR_MESSAGE_FIELD_NUMBER = 2
  def of(
    proposalId: _root_.scala.Long,
    errorMessage: _root_.scala.Predef.String
  ): _root_.cosmos.group.v1.EventTallyError = _root_.cosmos.group.v1.EventTallyError(
    proposalId,
    errorMessage
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.group.v1.EventTallyError])
}
