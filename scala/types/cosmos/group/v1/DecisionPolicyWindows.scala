// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.group.v1

/** DecisionPolicyWindows defines the different windows for voting and execution.
  *
  * @param votingPeriod
  *   voting_period is the duration from submission of a proposal to the end of voting period
  *   Within this times votes can be submitted with MsgVote.
  * @param minExecutionPeriod
  *   min_execution_period is the minimum duration after the proposal submission
  *   where members can start sending MsgExec. This means that the window for
  *   sending a MsgExec transaction is:
  *   `[ submission + min_execution_period ; submission + voting_period + max_execution_period]`
  *   where max_execution_period is a app-specific config, defined in the keeper.
  *   If not set, min_execution_period will default to 0.
  *  
  *   Please make sure to set a `min_execution_period` that is smaller than
  *   `voting_period + max_execution_period`, or else the above execution window
  *   is empty, meaning that all proposals created with this decision policy
  *   won't be able to be executed.
  */
@SerialVersionUID(0L)
final case class DecisionPolicyWindows(
    votingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    minExecutionPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[DecisionPolicyWindows] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (votingPeriod.isDefined) {
        val __value = votingPeriod.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (minExecutionPeriod.isDefined) {
        val __value = minExecutionPeriod.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      votingPeriod.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      minExecutionPeriod.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getVotingPeriod: com.google.protobuf.duration.Duration = votingPeriod.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearVotingPeriod: DecisionPolicyWindows = copy(votingPeriod = _root_.scala.None)
    def withVotingPeriod(__v: com.google.protobuf.duration.Duration): DecisionPolicyWindows = copy(votingPeriod = Option(__v))
    def getMinExecutionPeriod: com.google.protobuf.duration.Duration = minExecutionPeriod.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearMinExecutionPeriod: DecisionPolicyWindows = copy(minExecutionPeriod = _root_.scala.None)
    def withMinExecutionPeriod(__v: com.google.protobuf.duration.Duration): DecisionPolicyWindows = copy(minExecutionPeriod = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => votingPeriod.orNull
        case 2 => minExecutionPeriod.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => votingPeriod.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => minExecutionPeriod.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.group.v1.DecisionPolicyWindows.type = cosmos.group.v1.DecisionPolicyWindows
    // @@protoc_insertion_point(GeneratedMessage[cosmos.group.v1.DecisionPolicyWindows])
}

object DecisionPolicyWindows extends scalapb.GeneratedMessageCompanion[cosmos.group.v1.DecisionPolicyWindows] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.group.v1.DecisionPolicyWindows] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.group.v1.DecisionPolicyWindows = {
    var __votingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __minExecutionPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __votingPeriod = _root_.scala.Option(__votingPeriod.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __minExecutionPeriod = _root_.scala.Option(__minExecutionPeriod.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.group.v1.DecisionPolicyWindows(
        votingPeriod = __votingPeriod,
        minExecutionPeriod = __minExecutionPeriod,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.group.v1.DecisionPolicyWindows] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.group.v1.DecisionPolicyWindows(
        votingPeriod = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        minExecutionPeriod = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.group.v1.TypesProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.group.v1.TypesProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.protobuf.duration.Duration
      case 2 => __out = com.google.protobuf.duration.Duration
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.group.v1.DecisionPolicyWindows(
    votingPeriod = _root_.scala.None,
    minExecutionPeriod = _root_.scala.None
  )
  implicit class DecisionPolicyWindowsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.group.v1.DecisionPolicyWindows]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.group.v1.DecisionPolicyWindows](_l) {
    def votingPeriod: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getVotingPeriod)((c_, f_) => c_.copy(votingPeriod = _root_.scala.Option(f_)))
    def optionalVotingPeriod: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.votingPeriod)((c_, f_) => c_.copy(votingPeriod = f_))
    def minExecutionPeriod: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getMinExecutionPeriod)((c_, f_) => c_.copy(minExecutionPeriod = _root_.scala.Option(f_)))
    def optionalMinExecutionPeriod: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.minExecutionPeriod)((c_, f_) => c_.copy(minExecutionPeriod = f_))
  }
  final val VOTING_PERIOD_FIELD_NUMBER = 1
  final val MIN_EXECUTION_PERIOD_FIELD_NUMBER = 2
  def of(
    votingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration],
    minExecutionPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration]
  ): _root_.cosmos.group.v1.DecisionPolicyWindows = _root_.cosmos.group.v1.DecisionPolicyWindows(
    votingPeriod,
    minExecutionPeriod
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.group.v1.DecisionPolicyWindows])
}
