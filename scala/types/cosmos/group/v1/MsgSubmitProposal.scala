// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.group.v1

/** MsgSubmitProposal is the Msg/SubmitProposal request type.
  *
  * @param groupPolicyAddress
  *   group_policy_address is the account address of group policy.
  * @param proposers
  *   proposers are the account addresses of the proposers.
  *   Proposers signatures will be counted as yes votes.
  * @param metadata
  *   metadata is any arbitrary metadata attached to the proposal.
  * @param messages
  *   messages is a list of `sdk.Msg`s that will be executed if the proposal passes.
  * @param exec
  *   exec defines the mode of execution of the proposal,
  *   whether it should be executed immediately on creation or not.
  *   If so, proposers signatures are considered as Yes votes.
  * @param title
  *   title is the title of the proposal.
  * @param summary
  *   summary is the summary of the proposal.
  */
@SerialVersionUID(0L)
final case class MsgSubmitProposal(
    groupPolicyAddress: _root_.scala.Predef.String = "",
    proposers: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    metadata: _root_.scala.Predef.String = "",
    messages: _root_.scala.Seq[com.google.protobuf.any.Any] = _root_.scala.Seq.empty,
    exec: cosmos.group.v1.Exec = cosmos.group.v1.Exec.EXEC_UNSPECIFIED,
    title: _root_.scala.Predef.String = "",
    summary: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgSubmitProposal] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = groupPolicyAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      proposers.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      
      {
        val __value = metadata
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      messages.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = exec.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(5, __value)
        }
      };
      
      {
        val __value = title
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = summary
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = groupPolicyAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      proposers.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      {
        val __v = metadata
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      messages.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = exec.value
        if (__v != 0) {
          _output__.writeEnum(5, __v)
        }
      };
      {
        val __v = title
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = summary
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withGroupPolicyAddress(__v: _root_.scala.Predef.String): MsgSubmitProposal = copy(groupPolicyAddress = __v)
    def clearProposers = copy(proposers = _root_.scala.Seq.empty)
    def addProposers(__vs: _root_.scala.Predef.String *): MsgSubmitProposal = addAllProposers(__vs)
    def addAllProposers(__vs: Iterable[_root_.scala.Predef.String]): MsgSubmitProposal = copy(proposers = proposers ++ __vs)
    def withProposers(__v: _root_.scala.Seq[_root_.scala.Predef.String]): MsgSubmitProposal = copy(proposers = __v)
    def withMetadata(__v: _root_.scala.Predef.String): MsgSubmitProposal = copy(metadata = __v)
    def clearMessages = copy(messages = _root_.scala.Seq.empty)
    def addMessages(__vs: com.google.protobuf.any.Any *): MsgSubmitProposal = addAllMessages(__vs)
    def addAllMessages(__vs: Iterable[com.google.protobuf.any.Any]): MsgSubmitProposal = copy(messages = messages ++ __vs)
    def withMessages(__v: _root_.scala.Seq[com.google.protobuf.any.Any]): MsgSubmitProposal = copy(messages = __v)
    def withExec(__v: cosmos.group.v1.Exec): MsgSubmitProposal = copy(exec = __v)
    def withTitle(__v: _root_.scala.Predef.String): MsgSubmitProposal = copy(title = __v)
    def withSummary(__v: _root_.scala.Predef.String): MsgSubmitProposal = copy(summary = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = groupPolicyAddress
          if (__t != "") __t else null
        }
        case 2 => proposers
        case 3 => {
          val __t = metadata
          if (__t != "") __t else null
        }
        case 4 => messages
        case 5 => {
          val __t = exec.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 6 => {
          val __t = title
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = summary
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(groupPolicyAddress)
        case 2 => _root_.scalapb.descriptors.PRepeated(proposers.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 3 => _root_.scalapb.descriptors.PString(metadata)
        case 4 => _root_.scalapb.descriptors.PRepeated(messages.iterator.map(_.toPMessage).toVector)
        case 5 => _root_.scalapb.descriptors.PEnum(exec.scalaValueDescriptor)
        case 6 => _root_.scalapb.descriptors.PString(title)
        case 7 => _root_.scalapb.descriptors.PString(summary)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.group.v1.MsgSubmitProposal.type = cosmos.group.v1.MsgSubmitProposal
    // @@protoc_insertion_point(GeneratedMessage[cosmos.group.v1.MsgSubmitProposal])
}

object MsgSubmitProposal extends scalapb.GeneratedMessageCompanion[cosmos.group.v1.MsgSubmitProposal] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.group.v1.MsgSubmitProposal] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.group.v1.MsgSubmitProposal = {
    var __groupPolicyAddress: _root_.scala.Predef.String = ""
    val __proposers: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __metadata: _root_.scala.Predef.String = ""
    val __messages: _root_.scala.collection.immutable.VectorBuilder[com.google.protobuf.any.Any] = new _root_.scala.collection.immutable.VectorBuilder[com.google.protobuf.any.Any]
    var __exec: cosmos.group.v1.Exec = cosmos.group.v1.Exec.EXEC_UNSPECIFIED
    var __title: _root_.scala.Predef.String = ""
    var __summary: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __groupPolicyAddress = _input__.readStringRequireUtf8()
        case 18 =>
          __proposers += _input__.readStringRequireUtf8()
        case 26 =>
          __metadata = _input__.readStringRequireUtf8()
        case 34 =>
          __messages += _root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__)
        case 40 =>
          __exec = cosmos.group.v1.Exec.fromValue(_input__.readEnum())
        case 50 =>
          __title = _input__.readStringRequireUtf8()
        case 58 =>
          __summary = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.group.v1.MsgSubmitProposal(
        groupPolicyAddress = __groupPolicyAddress,
        proposers = __proposers.result(),
        metadata = __metadata,
        messages = __messages.result(),
        exec = __exec,
        title = __title,
        summary = __summary,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.group.v1.MsgSubmitProposal] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.group.v1.MsgSubmitProposal(
        groupPolicyAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        proposers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        metadata = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        messages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[com.google.protobuf.any.Any]]).getOrElse(_root_.scala.Seq.empty),
        exec = cosmos.group.v1.Exec.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.group.v1.Exec.EXEC_UNSPECIFIED.scalaValueDescriptor).number),
        title = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        summary = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.group.v1.TxProto.javaDescriptor.getMessageTypes().get(18)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.group.v1.TxProto.scalaDescriptor.messages(18)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 5 => cosmos.group.v1.Exec
    }
  }
  lazy val defaultInstance = cosmos.group.v1.MsgSubmitProposal(
    groupPolicyAddress = "",
    proposers = _root_.scala.Seq.empty,
    metadata = "",
    messages = _root_.scala.Seq.empty,
    exec = cosmos.group.v1.Exec.EXEC_UNSPECIFIED,
    title = "",
    summary = ""
  )
  implicit class MsgSubmitProposalLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.group.v1.MsgSubmitProposal]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.group.v1.MsgSubmitProposal](_l) {
    def groupPolicyAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.groupPolicyAddress)((c_, f_) => c_.copy(groupPolicyAddress = f_))
    def proposers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.proposers)((c_, f_) => c_.copy(proposers = f_))
    def metadata: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.metadata)((c_, f_) => c_.copy(metadata = f_))
    def messages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.protobuf.any.Any]] = field(_.messages)((c_, f_) => c_.copy(messages = f_))
    def exec: _root_.scalapb.lenses.Lens[UpperPB, cosmos.group.v1.Exec] = field(_.exec)((c_, f_) => c_.copy(exec = f_))
    def title: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.title)((c_, f_) => c_.copy(title = f_))
    def summary: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.summary)((c_, f_) => c_.copy(summary = f_))
  }
  final val GROUP_POLICY_ADDRESS_FIELD_NUMBER = 1
  final val PROPOSERS_FIELD_NUMBER = 2
  final val METADATA_FIELD_NUMBER = 3
  final val MESSAGES_FIELD_NUMBER = 4
  final val EXEC_FIELD_NUMBER = 5
  final val TITLE_FIELD_NUMBER = 6
  final val SUMMARY_FIELD_NUMBER = 7
  def of(
    groupPolicyAddress: _root_.scala.Predef.String,
    proposers: _root_.scala.Seq[_root_.scala.Predef.String],
    metadata: _root_.scala.Predef.String,
    messages: _root_.scala.Seq[com.google.protobuf.any.Any],
    exec: cosmos.group.v1.Exec,
    title: _root_.scala.Predef.String,
    summary: _root_.scala.Predef.String
  ): _root_.cosmos.group.v1.MsgSubmitProposal = _root_.cosmos.group.v1.MsgSubmitProposal(
    groupPolicyAddress,
    proposers,
    metadata,
    messages,
    exec,
    title,
    summary
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.group.v1.MsgSubmitProposal])
}
