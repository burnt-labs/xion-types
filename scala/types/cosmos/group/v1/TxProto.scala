// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.group.v1

object TxProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.GogoProto,
    cosmos_proto.CosmosProto,
    com.google.protobuf.any.AnyProto,
    cosmos.group.v1.TypesProto,
    cosmos.msg.v1.MsgProto,
    amino.AminoProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      cosmos.group.v1.MsgCreateGroup,
      cosmos.group.v1.MsgCreateGroupResponse,
      cosmos.group.v1.MsgUpdateGroupMembers,
      cosmos.group.v1.MsgUpdateGroupMembersResponse,
      cosmos.group.v1.MsgUpdateGroupAdmin,
      cosmos.group.v1.MsgUpdateGroupAdminResponse,
      cosmos.group.v1.MsgUpdateGroupMetadata,
      cosmos.group.v1.MsgUpdateGroupMetadataResponse,
      cosmos.group.v1.MsgCreateGroupPolicy,
      cosmos.group.v1.MsgCreateGroupPolicyResponse,
      cosmos.group.v1.MsgUpdateGroupPolicyAdmin,
      cosmos.group.v1.MsgUpdateGroupPolicyAdminResponse,
      cosmos.group.v1.MsgCreateGroupWithPolicy,
      cosmos.group.v1.MsgCreateGroupWithPolicyResponse,
      cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy,
      cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicyResponse,
      cosmos.group.v1.MsgUpdateGroupPolicyMetadata,
      cosmos.group.v1.MsgUpdateGroupPolicyMetadataResponse,
      cosmos.group.v1.MsgSubmitProposal,
      cosmos.group.v1.MsgSubmitProposalResponse,
      cosmos.group.v1.MsgWithdrawProposal,
      cosmos.group.v1.MsgWithdrawProposalResponse,
      cosmos.group.v1.MsgVote,
      cosmos.group.v1.MsgVoteResponse,
      cosmos.group.v1.MsgExec,
      cosmos.group.v1.MsgExecResponse,
      cosmos.group.v1.MsgLeaveGroup,
      cosmos.group.v1.MsgLeaveGroupResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Chhjb3Ntb3MvZ3JvdXAvdjEvdHgucHJvdG8SD2Nvc21vcy5ncm91cC52MRoUZ29nb3Byb3RvL2dvZ28ucHJvdG8aGWNvc21vc
  19wcm90by9jb3Ntb3MucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aG2Nvc21vcy9ncm91cC92MS90eXBlcy5wcm90b
  xoXY29zbW9zL21zZy92MS9tc2cucHJvdG8aEWFtaW5vL2FtaW5vLnByb3RvIvABCg5Nc2dDcmVhdGVHcm91cBI4CgVhZG1pbhgBI
  AEoCUIi4j8HEgVhZG1pbtK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IFYWRtaW4STwoHbWVtYmVycxgCIAMoCzIeLmNvc21vcy5nc
  m91cC52MS5NZW1iZXJSZXF1ZXN0QhXiPwkSB21lbWJlcnPI3h8AqOewKgFSB21lbWJlcnMSKQoIbWV0YWRhdGEYAyABKAlCDeI/C
  hIIbWV0YWRhdGFSCG1ldGFkYXRhOiiC57AqBWFkbWluiuewKhljb3Ntb3Mtc2RrL01zZ0NyZWF0ZUdyb3VwIkEKFk1zZ0NyZWF0Z
  Udyb3VwUmVzcG9uc2USJwoIZ3JvdXBfaWQYASABKARCDOI/CRIHZ3JvdXBJZFIHZ3JvdXBJZCKPAgoVTXNnVXBkYXRlR3JvdXBNZ
  W1iZXJzEjgKBWFkbWluGAEgASgJQiLiPwcSBWFkbWlu0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVhZG1pbhInCghncm91cF9pZ
  BgCIAEoBEIM4j8JEgdncm91cElkUgdncm91cElkEmIKDm1lbWJlcl91cGRhdGVzGAMgAygLMh4uY29zbW9zLmdyb3VwLnYxLk1lb
  WJlclJlcXVlc3RCG+I/DxINbWVtYmVyVXBkYXRlc8jeHwCo57AqAVINbWVtYmVyVXBkYXRlczovguewKgVhZG1pbornsCogY29zb
  W9zLXNkay9Nc2dVcGRhdGVHcm91cE1lbWJlcnMiHwodTXNnVXBkYXRlR3JvdXBNZW1iZXJzUmVzcG9uc2Ui6wEKE01zZ1VwZGF0Z
  Udyb3VwQWRtaW4SOAoFYWRtaW4YASABKAlCIuI/BxIFYWRtaW7StC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSBWFkbWluEicKCGdyb
  3VwX2lkGAIgASgEQgziPwkSB2dyb3VwSWRSB2dyb3VwSWQSQgoJbmV3X2FkbWluGAMgASgJQiXiPwoSCG5ld0FkbWlu0rQtFGNvc
  21vcy5BZGRyZXNzU3RyaW5nUghuZXdBZG1pbjotguewKgVhZG1pbornsCoeY29zbW9zLXNkay9Nc2dVcGRhdGVHcm91cEFkbWluI
  h0KG01zZ1VwZGF0ZUdyb3VwQWRtaW5SZXNwb25zZSLYAQoWTXNnVXBkYXRlR3JvdXBNZXRhZGF0YRI4CgVhZG1pbhgBIAEoCUIi4
  j8HEgVhZG1pbtK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IFYWRtaW4SJwoIZ3JvdXBfaWQYAiABKARCDOI/CRIHZ3JvdXBJZFIHZ
  3JvdXBJZBIpCghtZXRhZGF0YRgDIAEoCUIN4j8KEghtZXRhZGF0YVIIbWV0YWRhdGE6MILnsCoFYWRtaW6K57AqIWNvc21vcy1zZ
  GsvTXNnVXBkYXRlR3JvdXBNZXRhZGF0YSIgCh5Nc2dVcGRhdGVHcm91cE1ldGFkYXRhUmVzcG9uc2UizgIKFE1zZ0NyZWF0ZUdyb
  3VwUG9saWN5EjgKBWFkbWluGAEgASgJQiLiPwcSBWFkbWlu0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVhZG1pbhInCghncm91c
  F9pZBgCIAEoBEIM4j8JEgdncm91cElkUgdncm91cElkEikKCG1ldGFkYXRhGAMgASgJQg3iPwoSCG1ldGFkYXRhUghtZXRhZGF0Y
  RJ0Cg9kZWNpc2lvbl9wb2xpY3kYBCABKAsyFC5nb29nbGUucHJvdG9idWYuQW55QjXiPxASDmRlY2lzaW9uUG9saWN5yrQtHmNvc
  21vcy5ncm91cC52MS5EZWNpc2lvblBvbGljeVIOZGVjaXNpb25Qb2xpY3k6MoigHwCC57AqBWFkbWluiuewKh9jb3Ntb3Mtc2RrL
  01zZ0NyZWF0ZUdyb3VwUG9saWN5Il4KHE1zZ0NyZWF0ZUdyb3VwUG9saWN5UmVzcG9uc2USPgoHYWRkcmVzcxgBIAEoCUIk4j8JE
  gdhZGRyZXNz0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgdhZGRyZXNzIrECChlNc2dVcGRhdGVHcm91cFBvbGljeUFkbWluEjgKB
  WFkbWluGAEgASgJQiLiPwcSBWFkbWlu0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVhZG1pbhJhChRncm91cF9wb2xpY3lfYWRkc
  mVzcxgCIAEoCUIv4j8UEhJncm91cFBvbGljeUFkZHJlc3PStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSEmdyb3VwUG9saWN5QWRkc
  mVzcxJCCgluZXdfYWRtaW4YAyABKAlCJeI/ChIIbmV3QWRtaW7StC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSCG5ld0FkbWluOjOC5
  7AqBWFkbWluiuewKiRjb3Ntb3Mtc2RrL01zZ1VwZGF0ZUdyb3VwUG9saWN5QWRtaW4iIwohTXNnVXBkYXRlR3JvdXBQb2xpY3lBZ
  G1pblJlc3BvbnNlIqgEChhNc2dDcmVhdGVHcm91cFdpdGhQb2xpY3kSOAoFYWRtaW4YASABKAlCIuI/BxIFYWRtaW7StC0UY29zb
  W9zLkFkZHJlc3NTdHJpbmdSBWFkbWluEk8KB21lbWJlcnMYAiADKAsyHi5jb3Ntb3MuZ3JvdXAudjEuTWVtYmVyUmVxdWVzdEIV4
  j8JEgdtZW1iZXJzyN4fAKjnsCoBUgdtZW1iZXJzEjkKDmdyb3VwX21ldGFkYXRhGAMgASgJQhLiPw8SDWdyb3VwTWV0YWRhdGFSD
  Wdyb3VwTWV0YWRhdGESTAoVZ3JvdXBfcG9saWN5X21ldGFkYXRhGAQgASgJQhjiPxUSE2dyb3VwUG9saWN5TWV0YWRhdGFSE2dyb
  3VwUG9saWN5TWV0YWRhdGESSgoVZ3JvdXBfcG9saWN5X2FzX2FkbWluGAUgASgIQhfiPxQSEmdyb3VwUG9saWN5QXNBZG1pblISZ
  3JvdXBQb2xpY3lBc0FkbWluEnQKD2RlY2lzaW9uX3BvbGljeRgGIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCNeI/EBIOZGVja
  XNpb25Qb2xpY3nKtC0eY29zbW9zLmdyb3VwLnYxLkRlY2lzaW9uUG9saWN5Ug5kZWNpc2lvblBvbGljeTo2iKAfAILnsCoFYWRta
  W6K57AqI2Nvc21vcy1zZGsvTXNnQ3JlYXRlR3JvdXBXaXRoUG9saWN5Iq4BCiBNc2dDcmVhdGVHcm91cFdpdGhQb2xpY3lSZXNwb
  25zZRInCghncm91cF9pZBgBIAEoBEIM4j8JEgdncm91cElkUgdncm91cElkEmEKFGdyb3VwX3BvbGljeV9hZGRyZXNzGAIgASgJQ
  i/iPxQSEmdyb3VwUG9saWN5QWRkcmVzc9K0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1ISZ3JvdXBQb2xpY3lBZGRyZXNzIvMCCiJNc
  2dVcGRhdGVHcm91cFBvbGljeURlY2lzaW9uUG9saWN5EjgKBWFkbWluGAEgASgJQiLiPwcSBWFkbWlu0rQtFGNvc21vcy5BZGRyZ
  XNzU3RyaW5nUgVhZG1pbhJhChRncm91cF9wb2xpY3lfYWRkcmVzcxgCIAEoCUIv4j8UEhJncm91cFBvbGljeUFkZHJlc3PStC0UY
  29zbW9zLkFkZHJlc3NTdHJpbmdSEmdyb3VwUG9saWN5QWRkcmVzcxJ0Cg9kZWNpc2lvbl9wb2xpY3kYAyABKAsyFC5nb29nbGUuc
  HJvdG9idWYuQW55QjXiPxASDmRlY2lzaW9uUG9saWN5yrQtHmNvc21vcy5ncm91cC52MS5EZWNpc2lvblBvbGljeVIOZGVjaXNpb
  25Qb2xpY3k6OoigHwCC57AqBWFkbWluiuewKidjb3Ntb3Mtc2RrL01zZ1VwZGF0ZUdyb3VwRGVjaXNpb25Qb2xpY3kiLAoqTXNnV
  XBkYXRlR3JvdXBQb2xpY3lEZWNpc2lvblBvbGljeVJlc3BvbnNlIp4CChxNc2dVcGRhdGVHcm91cFBvbGljeU1ldGFkYXRhEjgKB
  WFkbWluGAEgASgJQiLiPwcSBWFkbWlu0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVhZG1pbhJhChRncm91cF9wb2xpY3lfYWRkc
  mVzcxgCIAEoCUIv4j8UEhJncm91cFBvbGljeUFkZHJlc3PStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSEmdyb3VwUG9saWN5QWRkc
  mVzcxIpCghtZXRhZGF0YRgDIAEoCUIN4j8KEghtZXRhZGF0YVIIbWV0YWRhdGE6NoLnsCoFYWRtaW6K57AqJ2Nvc21vcy1zZGsvT
  XNnVXBkYXRlR3JvdXBQb2xpY3lNZXRhZGF0YSImCiRNc2dVcGRhdGVHcm91cFBvbGljeU1ldGFkYXRhUmVzcG9uc2Ui8QMKEU1zZ
  1N1Ym1pdFByb3Bvc2FsEmEKFGdyb3VwX3BvbGljeV9hZGRyZXNzGAEgASgJQi/iPxQSEmdyb3VwUG9saWN5QWRkcmVzc9K0LRRjb
  3Ntb3MuQWRkcmVzc1N0cmluZ1ISZ3JvdXBQb2xpY3lBZGRyZXNzEiwKCXByb3Bvc2VycxgCIAMoCUIO4j8LEglwcm9wb3NlcnNSC
  XByb3Bvc2VycxIpCghtZXRhZGF0YRgDIAEoCUIN4j8KEghtZXRhZGF0YVIIbWV0YWRhdGESPwoIbWVzc2FnZXMYBCADKAsyFC5nb
  29nbGUucHJvdG9idWYuQW55Qg3iPwoSCG1lc3NhZ2VzUghtZXNzYWdlcxI0CgRleGVjGAUgASgOMhUuY29zbW9zLmdyb3VwLnYxL
  kV4ZWNCCeI/BhIEZXhlY1IEZXhlYxIzCgV0aXRsZRgGIAEoCUId4j8HEgV0aXRsZdq0LQ9jb3Ntb3Mtc2RrIDAuNDdSBXRpdGxlE
  jkKB3N1bW1hcnkYByABKAlCH+I/CRIHc3VtbWFyedq0LQ9jb3Ntb3Mtc2RrIDAuNDdSB3N1bW1hcnk6OYigHwCC57AqCXByb3Bvc
  2Vyc4rnsCoiY29zbW9zLXNkay9ncm91cC9Nc2dTdWJtaXRQcm9wb3NhbCJNChlNc2dTdWJtaXRQcm9wb3NhbFJlc3BvbnNlEjAKC
  3Byb3Bvc2FsX2lkGAEgASgEQg/iPwwSCnByb3Bvc2FsSWRSCnByb3Bvc2FsSWQivgEKE01zZ1dpdGhkcmF3UHJvcG9zYWwSMAoLc
  HJvcG9zYWxfaWQYASABKARCD+I/DBIKcHJvcG9zYWxJZFIKcHJvcG9zYWxJZBI+CgdhZGRyZXNzGAIgASgJQiTiPwkSB2FkZHJlc
  3PStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSB2FkZHJlc3M6NYLnsCoHYWRkcmVzc4rnsCokY29zbW9zLXNkay9ncm91cC9Nc2dXa
  XRoZHJhd1Byb3Bvc2FsIh0KG01zZ1dpdGhkcmF3UHJvcG9zYWxSZXNwb25zZSLBAgoHTXNnVm90ZRIwCgtwcm9wb3NhbF9pZBgBI
  AEoBEIP4j8MEgpwcm9wb3NhbElkUgpwcm9wb3NhbElkEjgKBXZvdGVyGAIgASgJQiLiPwcSBXZvdGVy0rQtFGNvc21vcy5BZGRyZ
  XNzU3RyaW5nUgV2b3RlchJACgZvcHRpb24YAyABKA4yGy5jb3Ntb3MuZ3JvdXAudjEuVm90ZU9wdGlvbkIL4j8IEgZvcHRpb25SB
  m9wdGlvbhIpCghtZXRhZGF0YRgEIAEoCUIN4j8KEghtZXRhZGF0YVIIbWV0YWRhdGESNAoEZXhlYxgFIAEoDjIVLmNvc21vcy5nc
  m91cC52MS5FeGVjQgniPwYSBGV4ZWNSBGV4ZWM6J4LnsCoFdm90ZXKK57AqGGNvc21vcy1zZGsvZ3JvdXAvTXNnVm90ZSIRCg9Nc
  2dWb3RlUmVzcG9uc2UiqgEKB01zZ0V4ZWMSMAoLcHJvcG9zYWxfaWQYASABKARCD+I/DBIKcHJvcG9zYWxJZFIKcHJvcG9zYWxJZ
  BJBCghleGVjdXRvchgCIAEoCUIl4j8KEghleGVjdXRvctK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IIZXhlY3V0b3I6KoLnsCoIZ
  XhlY3V0b3KK57AqGGNvc21vcy1zZGsvZ3JvdXAvTXNnRXhlYyJfCg9Nc2dFeGVjUmVzcG9uc2USTAoGcmVzdWx0GAIgASgOMicuY
  29zbW9zLmdyb3VwLnYxLlByb3Bvc2FsRXhlY3V0b3JSZXN1bHRCC+I/CBIGcmVzdWx0UgZyZXN1bHQiqQEKDU1zZ0xlYXZlR3Jvd
  XASPgoHYWRkcmVzcxgBIAEoCUIk4j8JEgdhZGRyZXNz0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgdhZGRyZXNzEicKCGdyb3VwX
  2lkGAIgASgEQgziPwkSB2dyb3VwSWRSB2dyb3VwSWQ6L4LnsCoHYWRkcmVzc4rnsCoeY29zbW9zLXNkay9ncm91cC9Nc2dMZWF2Z
  Udyb3VwIhcKFU1zZ0xlYXZlR3JvdXBSZXNwb25zZSpQCgRFeGVjEisKEEVYRUNfVU5TUEVDSUZJRUQQABoV4j8SEhBFWEVDX1VOU
  1BFQ0lGSUVEEhsKCEVYRUNfVFJZEAEaDeI/ChIIRVhFQ19UUlkyygsKA01zZxJXCgtDcmVhdGVHcm91cBIfLmNvc21vcy5ncm91c
  C52MS5Nc2dDcmVhdGVHcm91cBonLmNvc21vcy5ncm91cC52MS5Nc2dDcmVhdGVHcm91cFJlc3BvbnNlEmwKElVwZGF0ZUdyb3VwT
  WVtYmVycxImLmNvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cE1lbWJlcnMaLi5jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR
  3JvdXBNZW1iZXJzUmVzcG9uc2USZgoQVXBkYXRlR3JvdXBBZG1pbhIkLmNvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cEFkb
  WluGiwuY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwQWRtaW5SZXNwb25zZRJvChNVcGRhdGVHcm91cE1ldGFkYXRhEicuY
  29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwTWV0YWRhdGEaLy5jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBNZXRhZ
  GF0YVJlc3BvbnNlEmkKEUNyZWF0ZUdyb3VwUG9saWN5EiUuY29zbW9zLmdyb3VwLnYxLk1zZ0NyZWF0ZUdyb3VwUG9saWN5Gi0uY
  29zbW9zLmdyb3VwLnYxLk1zZ0NyZWF0ZUdyb3VwUG9saWN5UmVzcG9uc2USdQoVQ3JlYXRlR3JvdXBXaXRoUG9saWN5EikuY29zb
  W9zLmdyb3VwLnYxLk1zZ0NyZWF0ZUdyb3VwV2l0aFBvbGljeRoxLmNvc21vcy5ncm91cC52MS5Nc2dDcmVhdGVHcm91cFdpdGhQb
  2xpY3lSZXNwb25zZRJ4ChZVcGRhdGVHcm91cFBvbGljeUFkbWluEiouY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwUG9sa
  WN5QWRtaW4aMi5jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBQb2xpY3lBZG1pblJlc3BvbnNlEpMBCh9VcGRhdGVHcm91c
  FBvbGljeURlY2lzaW9uUG9saWN5EjMuY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwUG9saWN5RGVjaXNpb25Qb2xpY3kaO
  y5jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBQb2xpY3lEZWNpc2lvblBvbGljeVJlc3BvbnNlEoEBChlVcGRhdGVHcm91c
  FBvbGljeU1ldGFkYXRhEi0uY29zbW9zLmdyb3VwLnYxLk1zZ1VwZGF0ZUdyb3VwUG9saWN5TWV0YWRhdGEaNS5jb3Ntb3MuZ3Jvd
  XAudjEuTXNnVXBkYXRlR3JvdXBQb2xpY3lNZXRhZGF0YVJlc3BvbnNlEmAKDlN1Ym1pdFByb3Bvc2FsEiIuY29zbW9zLmdyb3VwL
  nYxLk1zZ1N1Ym1pdFByb3Bvc2FsGiouY29zbW9zLmdyb3VwLnYxLk1zZ1N1Ym1pdFByb3Bvc2FsUmVzcG9uc2USZgoQV2l0aGRyY
  XdQcm9wb3NhbBIkLmNvc21vcy5ncm91cC52MS5Nc2dXaXRoZHJhd1Byb3Bvc2FsGiwuY29zbW9zLmdyb3VwLnYxLk1zZ1dpdGhkc
  mF3UHJvcG9zYWxSZXNwb25zZRJCCgRWb3RlEhguY29zbW9zLmdyb3VwLnYxLk1zZ1ZvdGUaIC5jb3Ntb3MuZ3JvdXAudjEuTXNnV
  m90ZVJlc3BvbnNlEkIKBEV4ZWMSGC5jb3Ntb3MuZ3JvdXAudjEuTXNnRXhlYxogLmNvc21vcy5ncm91cC52MS5Nc2dFeGVjUmVzc
  G9uc2USVAoKTGVhdmVHcm91cBIeLmNvc21vcy5ncm91cC52MS5Nc2dMZWF2ZUdyb3VwGiYuY29zbW9zLmdyb3VwLnYxLk1zZ0xlY
  XZlR3JvdXBSZXNwb25zZRoFgOewKgFCJlokZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay94L2dyb3VwYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.GogoProto.javaDescriptor,
      cosmos_proto.CosmosProto.javaDescriptor,
      com.google.protobuf.any.AnyProto.javaDescriptor,
      cosmos.group.v1.TypesProto.javaDescriptor,
      cosmos.msg.v1.MsgProto.javaDescriptor,
      amino.AminoProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}