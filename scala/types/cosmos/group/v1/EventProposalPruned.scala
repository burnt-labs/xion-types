// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.group.v1

/** EventProposalPruned is an event emitted when a proposal is pruned.
  *
  * @param proposalId
  *   proposal_id is the unique ID of the proposal.
  * @param status
  *   status is the proposal status (UNSPECIFIED, SUBMITTED, ACCEPTED, REJECTED, ABORTED, WITHDRAWN).
  * @param tallyResult
  *   tally_result is the proposal tally result (when applicable).
  */
@SerialVersionUID(0L)
final case class EventProposalPruned(
    proposalId: _root_.scala.Long = 0L,
    status: cosmos.group.v1.ProposalStatus = cosmos.group.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED,
    tallyResult: _root_.scala.Option[cosmos.group.v1.TallyResult] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[EventProposalPruned] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = proposalId
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = status.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(2, __value)
        }
      };
      if (tallyResult.isDefined) {
        val __value = tallyResult.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = proposalId
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = status.value
        if (__v != 0) {
          _output__.writeEnum(2, __v)
        }
      };
      tallyResult.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withProposalId(__v: _root_.scala.Long): EventProposalPruned = copy(proposalId = __v)
    def withStatus(__v: cosmos.group.v1.ProposalStatus): EventProposalPruned = copy(status = __v)
    def getTallyResult: cosmos.group.v1.TallyResult = tallyResult.getOrElse(cosmos.group.v1.TallyResult.defaultInstance)
    def clearTallyResult: EventProposalPruned = copy(tallyResult = _root_.scala.None)
    def withTallyResult(__v: cosmos.group.v1.TallyResult): EventProposalPruned = copy(tallyResult = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = proposalId
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = status.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => tallyResult.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(proposalId)
        case 2 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
        case 3 => tallyResult.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.group.v1.EventProposalPruned.type = cosmos.group.v1.EventProposalPruned
    // @@protoc_insertion_point(GeneratedMessage[cosmos.group.v1.EventProposalPruned])
}

object EventProposalPruned extends scalapb.GeneratedMessageCompanion[cosmos.group.v1.EventProposalPruned] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.group.v1.EventProposalPruned] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.group.v1.EventProposalPruned = {
    var __proposalId: _root_.scala.Long = 0L
    var __status: cosmos.group.v1.ProposalStatus = cosmos.group.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED
    var __tallyResult: _root_.scala.Option[cosmos.group.v1.TallyResult] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __proposalId = _input__.readUInt64()
        case 16 =>
          __status = cosmos.group.v1.ProposalStatus.fromValue(_input__.readEnum())
        case 26 =>
          __tallyResult = _root_.scala.Option(__tallyResult.fold(_root_.scalapb.LiteParser.readMessage[cosmos.group.v1.TallyResult](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.group.v1.EventProposalPruned(
        proposalId = __proposalId,
        status = __status,
        tallyResult = __tallyResult,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.group.v1.EventProposalPruned] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.group.v1.EventProposalPruned(
        proposalId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        status = cosmos.group.v1.ProposalStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.group.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED.scalaValueDescriptor).number),
        tallyResult = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[cosmos.group.v1.TallyResult]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.group.v1.EventsProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.group.v1.EventsProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = cosmos.group.v1.TallyResult
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 2 => cosmos.group.v1.ProposalStatus
    }
  }
  lazy val defaultInstance = cosmos.group.v1.EventProposalPruned(
    proposalId = 0L,
    status = cosmos.group.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED,
    tallyResult = _root_.scala.None
  )
  implicit class EventProposalPrunedLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.group.v1.EventProposalPruned]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.group.v1.EventProposalPruned](_l) {
    def proposalId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.proposalId)((c_, f_) => c_.copy(proposalId = f_))
    def status: _root_.scalapb.lenses.Lens[UpperPB, cosmos.group.v1.ProposalStatus] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def tallyResult: _root_.scalapb.lenses.Lens[UpperPB, cosmos.group.v1.TallyResult] = field(_.getTallyResult)((c_, f_) => c_.copy(tallyResult = _root_.scala.Option(f_)))
    def optionalTallyResult: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.group.v1.TallyResult]] = field(_.tallyResult)((c_, f_) => c_.copy(tallyResult = f_))
  }
  final val PROPOSAL_ID_FIELD_NUMBER = 1
  final val STATUS_FIELD_NUMBER = 2
  final val TALLY_RESULT_FIELD_NUMBER = 3
  def of(
    proposalId: _root_.scala.Long,
    status: cosmos.group.v1.ProposalStatus,
    tallyResult: _root_.scala.Option[cosmos.group.v1.TallyResult]
  ): _root_.cosmos.group.v1.EventProposalPruned = _root_.cosmos.group.v1.EventProposalPruned(
    proposalId,
    status,
    tallyResult
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.group.v1.EventProposalPruned])
}
