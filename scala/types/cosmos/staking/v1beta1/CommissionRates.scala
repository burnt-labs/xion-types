// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.staking.v1beta1

/** CommissionRates defines the initial commission rates to be used for creating
  * a validator.
  *
  * @param rate
  *   rate is the commission rate charged to delegators, as a fraction.
  * @param maxRate
  *   max_rate defines the maximum commission rate which validator can ever charge, as a fraction.
  * @param maxChangeRate
  *   max_change_rate defines the maximum daily increase of the validator commission, as a fraction.
  */
@SerialVersionUID(0L)
final case class CommissionRates(
    rate: _root_.scala.Predef.String = "",
    maxRate: _root_.scala.Predef.String = "",
    maxChangeRate: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CommissionRates] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = rate
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = maxRate
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = maxChangeRate
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = rate
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = maxRate
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = maxChangeRate
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withRate(__v: _root_.scala.Predef.String): CommissionRates = copy(rate = __v)
    def withMaxRate(__v: _root_.scala.Predef.String): CommissionRates = copy(maxRate = __v)
    def withMaxChangeRate(__v: _root_.scala.Predef.String): CommissionRates = copy(maxChangeRate = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = rate
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = maxRate
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = maxChangeRate
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(rate)
        case 2 => _root_.scalapb.descriptors.PString(maxRate)
        case 3 => _root_.scalapb.descriptors.PString(maxChangeRate)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.staking.v1beta1.CommissionRates.type = cosmos.staking.v1beta1.CommissionRates
    // @@protoc_insertion_point(GeneratedMessage[cosmos.staking.v1beta1.CommissionRates])
}

object CommissionRates extends scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.CommissionRates] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.CommissionRates] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.staking.v1beta1.CommissionRates = {
    var __rate: _root_.scala.Predef.String = ""
    var __maxRate: _root_.scala.Predef.String = ""
    var __maxChangeRate: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __rate = _input__.readStringRequireUtf8()
        case 18 =>
          __maxRate = _input__.readStringRequireUtf8()
        case 26 =>
          __maxChangeRate = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.staking.v1beta1.CommissionRates(
        rate = __rate,
        maxRate = __maxRate,
        maxChangeRate = __maxChangeRate,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.staking.v1beta1.CommissionRates] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.staking.v1beta1.CommissionRates(
        rate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        maxRate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        maxChangeRate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.staking.v1beta1.StakingProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.staking.v1beta1.StakingProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.staking.v1beta1.CommissionRates(
    rate = "",
    maxRate = "",
    maxChangeRate = ""
  )
  implicit class CommissionRatesLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.CommissionRates]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.staking.v1beta1.CommissionRates](_l) {
    def rate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.rate)((c_, f_) => c_.copy(rate = f_))
    def maxRate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.maxRate)((c_, f_) => c_.copy(maxRate = f_))
    def maxChangeRate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.maxChangeRate)((c_, f_) => c_.copy(maxChangeRate = f_))
  }
  final val RATE_FIELD_NUMBER = 1
  final val MAX_RATE_FIELD_NUMBER = 2
  final val MAX_CHANGE_RATE_FIELD_NUMBER = 3
  def of(
    rate: _root_.scala.Predef.String,
    maxRate: _root_.scala.Predef.String,
    maxChangeRate: _root_.scala.Predef.String
  ): _root_.cosmos.staking.v1beta1.CommissionRates = _root_.cosmos.staking.v1beta1.CommissionRates(
    rate,
    maxRate,
    maxChangeRate
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.staking.v1beta1.CommissionRates])
}
