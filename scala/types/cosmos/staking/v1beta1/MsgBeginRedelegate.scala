// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.staking.v1beta1

/** MsgBeginRedelegate defines a SDK message for performing a redelegation
  * of coins from a delegator and source validator to a destination validator.
  */
@SerialVersionUID(0L)
final case class MsgBeginRedelegate(
    delegatorAddress: _root_.scala.Predef.String = "",
    validatorSrcAddress: _root_.scala.Predef.String = "",
    validatorDstAddress: _root_.scala.Predef.String = "",
    amount: _root_.scala.Option[cosmos.base.v1beta1.Coin] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgBeginRedelegate] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = delegatorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = validatorSrcAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = validatorDstAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      if (amount.isDefined) {
        val __value = amount.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = delegatorAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = validatorSrcAddress
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = validatorDstAddress
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      amount.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withDelegatorAddress(__v: _root_.scala.Predef.String): MsgBeginRedelegate = copy(delegatorAddress = __v)
    def withValidatorSrcAddress(__v: _root_.scala.Predef.String): MsgBeginRedelegate = copy(validatorSrcAddress = __v)
    def withValidatorDstAddress(__v: _root_.scala.Predef.String): MsgBeginRedelegate = copy(validatorDstAddress = __v)
    def getAmount: cosmos.base.v1beta1.Coin = amount.getOrElse(cosmos.base.v1beta1.Coin.defaultInstance)
    def clearAmount: MsgBeginRedelegate = copy(amount = _root_.scala.None)
    def withAmount(__v: cosmos.base.v1beta1.Coin): MsgBeginRedelegate = copy(amount = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = delegatorAddress
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = validatorSrcAddress
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = validatorDstAddress
          if (__t != "") __t else null
        }
        case 4 => amount.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(delegatorAddress)
        case 2 => _root_.scalapb.descriptors.PString(validatorSrcAddress)
        case 3 => _root_.scalapb.descriptors.PString(validatorDstAddress)
        case 4 => amount.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.staking.v1beta1.MsgBeginRedelegate.type = cosmos.staking.v1beta1.MsgBeginRedelegate
    // @@protoc_insertion_point(GeneratedMessage[cosmos.staking.v1beta1.MsgBeginRedelegate])
}

object MsgBeginRedelegate extends scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.MsgBeginRedelegate] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.MsgBeginRedelegate] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.staking.v1beta1.MsgBeginRedelegate = {
    var __delegatorAddress: _root_.scala.Predef.String = ""
    var __validatorSrcAddress: _root_.scala.Predef.String = ""
    var __validatorDstAddress: _root_.scala.Predef.String = ""
    var __amount: _root_.scala.Option[cosmos.base.v1beta1.Coin] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __delegatorAddress = _input__.readStringRequireUtf8()
        case 18 =>
          __validatorSrcAddress = _input__.readStringRequireUtf8()
        case 26 =>
          __validatorDstAddress = _input__.readStringRequireUtf8()
        case 34 =>
          __amount = _root_.scala.Option(__amount.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.v1beta1.Coin](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.staking.v1beta1.MsgBeginRedelegate(
        delegatorAddress = __delegatorAddress,
        validatorSrcAddress = __validatorSrcAddress,
        validatorDstAddress = __validatorDstAddress,
        amount = __amount,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.staking.v1beta1.MsgBeginRedelegate] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.staking.v1beta1.MsgBeginRedelegate(
        delegatorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        validatorSrcAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        validatorDstAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        amount = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[cosmos.base.v1beta1.Coin]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.staking.v1beta1.TxProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.staking.v1beta1.TxProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = cosmos.base.v1beta1.Coin
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.staking.v1beta1.MsgBeginRedelegate(
    delegatorAddress = "",
    validatorSrcAddress = "",
    validatorDstAddress = "",
    amount = _root_.scala.None
  )
  implicit class MsgBeginRedelegateLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.MsgBeginRedelegate]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.staking.v1beta1.MsgBeginRedelegate](_l) {
    def delegatorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.delegatorAddress)((c_, f_) => c_.copy(delegatorAddress = f_))
    def validatorSrcAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.validatorSrcAddress)((c_, f_) => c_.copy(validatorSrcAddress = f_))
    def validatorDstAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.validatorDstAddress)((c_, f_) => c_.copy(validatorDstAddress = f_))
    def amount: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.v1beta1.Coin] = field(_.getAmount)((c_, f_) => c_.copy(amount = _root_.scala.Option(f_)))
    def optionalAmount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.v1beta1.Coin]] = field(_.amount)((c_, f_) => c_.copy(amount = f_))
  }
  final val DELEGATOR_ADDRESS_FIELD_NUMBER = 1
  final val VALIDATOR_SRC_ADDRESS_FIELD_NUMBER = 2
  final val VALIDATOR_DST_ADDRESS_FIELD_NUMBER = 3
  final val AMOUNT_FIELD_NUMBER = 4
  def of(
    delegatorAddress: _root_.scala.Predef.String,
    validatorSrcAddress: _root_.scala.Predef.String,
    validatorDstAddress: _root_.scala.Predef.String,
    amount: _root_.scala.Option[cosmos.base.v1beta1.Coin]
  ): _root_.cosmos.staking.v1beta1.MsgBeginRedelegate = _root_.cosmos.staking.v1beta1.MsgBeginRedelegate(
    delegatorAddress,
    validatorSrcAddress,
    validatorDstAddress,
    amount
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.staking.v1beta1.MsgBeginRedelegate])
}
