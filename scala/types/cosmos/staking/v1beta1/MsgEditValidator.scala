// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.staking.v1beta1

/** MsgEditValidator defines a SDK message for editing an existing validator.
  *
  * @param commissionRate
  *   We pass a reference to the new commission rate and min self delegation as
  *   it's not mandatory to update. If not updated, the deserialized rate will be
  *   zero with no way to distinguish if an update was intended.
  *   REF: #2373
  */
@SerialVersionUID(0L)
final case class MsgEditValidator(
    description: _root_.scala.Option[cosmos.staking.v1beta1.Description] = _root_.scala.None,
    validatorAddress: _root_.scala.Predef.String = "",
    commissionRate: _root_.scala.Predef.String = "",
    minSelfDelegation: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgEditValidator] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (description.isDefined) {
        val __value = description.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = validatorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = commissionRate
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = minSelfDelegation
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      description.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = validatorAddress
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = commissionRate
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = minSelfDelegation
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getDescription: cosmos.staking.v1beta1.Description = description.getOrElse(cosmos.staking.v1beta1.Description.defaultInstance)
    def clearDescription: MsgEditValidator = copy(description = _root_.scala.None)
    def withDescription(__v: cosmos.staking.v1beta1.Description): MsgEditValidator = copy(description = Option(__v))
    def withValidatorAddress(__v: _root_.scala.Predef.String): MsgEditValidator = copy(validatorAddress = __v)
    def withCommissionRate(__v: _root_.scala.Predef.String): MsgEditValidator = copy(commissionRate = __v)
    def withMinSelfDelegation(__v: _root_.scala.Predef.String): MsgEditValidator = copy(minSelfDelegation = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => description.orNull
        case 2 => {
          val __t = validatorAddress
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = commissionRate
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = minSelfDelegation
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => description.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PString(validatorAddress)
        case 3 => _root_.scalapb.descriptors.PString(commissionRate)
        case 4 => _root_.scalapb.descriptors.PString(minSelfDelegation)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.staking.v1beta1.MsgEditValidator.type = cosmos.staking.v1beta1.MsgEditValidator
    // @@protoc_insertion_point(GeneratedMessage[cosmos.staking.v1beta1.MsgEditValidator])
}

object MsgEditValidator extends scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.MsgEditValidator] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.MsgEditValidator] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.staking.v1beta1.MsgEditValidator = {
    var __description: _root_.scala.Option[cosmos.staking.v1beta1.Description] = _root_.scala.None
    var __validatorAddress: _root_.scala.Predef.String = ""
    var __commissionRate: _root_.scala.Predef.String = ""
    var __minSelfDelegation: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __description = _root_.scala.Option(__description.fold(_root_.scalapb.LiteParser.readMessage[cosmos.staking.v1beta1.Description](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __validatorAddress = _input__.readStringRequireUtf8()
        case 26 =>
          __commissionRate = _input__.readStringRequireUtf8()
        case 34 =>
          __minSelfDelegation = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.staking.v1beta1.MsgEditValidator(
        description = __description,
        validatorAddress = __validatorAddress,
        commissionRate = __commissionRate,
        minSelfDelegation = __minSelfDelegation,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.staking.v1beta1.MsgEditValidator] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.staking.v1beta1.MsgEditValidator(
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[cosmos.staking.v1beta1.Description]]),
        validatorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        commissionRate = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        minSelfDelegation = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.staking.v1beta1.TxProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.staking.v1beta1.TxProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.staking.v1beta1.Description
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.staking.v1beta1.MsgEditValidator(
    description = _root_.scala.None,
    validatorAddress = "",
    commissionRate = "",
    minSelfDelegation = ""
  )
  implicit class MsgEditValidatorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.MsgEditValidator]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.staking.v1beta1.MsgEditValidator](_l) {
    def description: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.Description] = field(_.getDescription)((c_, f_) => c_.copy(description = _root_.scala.Option(f_)))
    def optionalDescription: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.staking.v1beta1.Description]] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def validatorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.validatorAddress)((c_, f_) => c_.copy(validatorAddress = f_))
    def commissionRate: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.commissionRate)((c_, f_) => c_.copy(commissionRate = f_))
    def minSelfDelegation: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.minSelfDelegation)((c_, f_) => c_.copy(minSelfDelegation = f_))
  }
  final val DESCRIPTION_FIELD_NUMBER = 1
  final val VALIDATOR_ADDRESS_FIELD_NUMBER = 2
  final val COMMISSION_RATE_FIELD_NUMBER = 3
  final val MIN_SELF_DELEGATION_FIELD_NUMBER = 4
  def of(
    description: _root_.scala.Option[cosmos.staking.v1beta1.Description],
    validatorAddress: _root_.scala.Predef.String,
    commissionRate: _root_.scala.Predef.String,
    minSelfDelegation: _root_.scala.Predef.String
  ): _root_.cosmos.staking.v1beta1.MsgEditValidator = _root_.cosmos.staking.v1beta1.MsgEditValidator(
    description,
    validatorAddress,
    commissionRate,
    minSelfDelegation
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.staking.v1beta1.MsgEditValidator])
}
