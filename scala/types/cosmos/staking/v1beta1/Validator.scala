// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.staking.v1beta1

/** Validator defines a validator, together with the total amount of the
  * Validator's bond shares and their exchange rate to coins. Slashing results in
  * a decrease in the exchange rate, allowing correct calculation of future
  * undelegations without iterating over delegators. When coins are delegated to
  * this validator, the validator is credited with a delegation whose number of
  * bond shares is based on the amount of coins delegated divided by the current
  * exchange rate. Voting power can be calculated as total bonded shares
  * multiplied by exchange rate.
  *
  * @param operatorAddress
  *   operator_address defines the address of the validator's operator; bech encoded in JSON.
  * @param consensusPubkey
  *   consensus_pubkey is the consensus public key of the validator, as a Protobuf Any.
  * @param jailed
  *   jailed defined whether the validator has been jailed from bonded status or not.
  * @param status
  *   status is the validator status (bonded/unbonding/unbonded).
  * @param tokens
  *   tokens define the delegated tokens (incl. self-delegation).
  * @param delegatorShares
  *   delegator_shares defines total shares issued to a validator's delegators.
  * @param description
  *   description defines the description terms for the validator.
  * @param unbondingHeight
  *   unbonding_height defines, if unbonding, the height at which this validator has begun unbonding.
  * @param unbondingTime
  *   unbonding_time defines, if unbonding, the min time for the validator to complete unbonding.
  * @param commission
  *   commission defines the commission parameters.
  * @param minSelfDelegation
  *   min_self_delegation is the validator's self declared minimum self delegation.
  * @param unbondingOnHoldRefCount
  *   strictly positive if this validator's unbonding has been stopped by external modules
  * @param unbondingIds
  *   list of unbonding ids, each uniquely identifing an unbonding of this validator
  */
@SerialVersionUID(0L)
final case class Validator(
    operatorAddress: _root_.scala.Predef.String = "",
    consensusPubkey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    jailed: _root_.scala.Boolean = false,
    status: cosmos.staking.v1beta1.BondStatus = cosmos.staking.v1beta1.BondStatus.BOND_STATUS_UNSPECIFIED,
    tokens: _root_.scala.Predef.String = "",
    delegatorShares: _root_.scala.Predef.String = "",
    description: _root_.scala.Option[cosmos.staking.v1beta1.Description] = _root_.scala.None,
    unbondingHeight: _root_.scala.Long = 0L,
    unbondingTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    commission: _root_.scala.Option[cosmos.staking.v1beta1.Commission] = _root_.scala.None,
    minSelfDelegation: _root_.scala.Predef.String = "",
    unbondingOnHoldRefCount: _root_.scala.Long = 0L,
    unbondingIds: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Validator] {
    private[this] def unbondingIdsSerializedSize = {
      if (__unbondingIdsSerializedSizeField == 0) __unbondingIdsSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        unbondingIds.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeUInt64SizeNoTag(__i))
        __s
      }
      __unbondingIdsSerializedSizeField
    }
    @transient private[this] var __unbondingIdsSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = operatorAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (consensusPubkey.isDefined) {
        val __value = consensusPubkey.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = jailed
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = status.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, __value)
        }
      };
      
      {
        val __value = tokens
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = delegatorShares
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      if (description.isDefined) {
        val __value = description.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = unbondingHeight
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(8, __value)
        }
      };
      if (unbondingTime.isDefined) {
        val __value = unbondingTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (commission.isDefined) {
        val __value = commission.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = minSelfDelegation
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
        }
      };
      
      {
        val __value = unbondingOnHoldRefCount
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(12, __value)
        }
      };
      if (unbondingIds.nonEmpty) {
        val __localsize = unbondingIdsSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = operatorAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      consensusPubkey.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = jailed
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = status.value
        if (__v != 0) {
          _output__.writeEnum(4, __v)
        }
      };
      {
        val __v = tokens
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = delegatorShares
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      description.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = unbondingHeight
        if (__v != 0L) {
          _output__.writeInt64(8, __v)
        }
      };
      unbondingTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      commission.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = minSelfDelegation
        if (!__v.isEmpty) {
          _output__.writeString(11, __v)
        }
      };
      {
        val __v = unbondingOnHoldRefCount
        if (__v != 0L) {
          _output__.writeInt64(12, __v)
        }
      };
      if (unbondingIds.nonEmpty) {
        _output__.writeTag(13, 2)
        _output__.writeUInt32NoTag(unbondingIdsSerializedSize)
        unbondingIds.foreach(_output__.writeUInt64NoTag)
      };
      unknownFields.writeTo(_output__)
    }
    def withOperatorAddress(__v: _root_.scala.Predef.String): Validator = copy(operatorAddress = __v)
    def getConsensusPubkey: com.google.protobuf.any.Any = consensusPubkey.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearConsensusPubkey: Validator = copy(consensusPubkey = _root_.scala.None)
    def withConsensusPubkey(__v: com.google.protobuf.any.Any): Validator = copy(consensusPubkey = Option(__v))
    def withJailed(__v: _root_.scala.Boolean): Validator = copy(jailed = __v)
    def withStatus(__v: cosmos.staking.v1beta1.BondStatus): Validator = copy(status = __v)
    def withTokens(__v: _root_.scala.Predef.String): Validator = copy(tokens = __v)
    def withDelegatorShares(__v: _root_.scala.Predef.String): Validator = copy(delegatorShares = __v)
    def getDescription: cosmos.staking.v1beta1.Description = description.getOrElse(cosmos.staking.v1beta1.Description.defaultInstance)
    def clearDescription: Validator = copy(description = _root_.scala.None)
    def withDescription(__v: cosmos.staking.v1beta1.Description): Validator = copy(description = Option(__v))
    def withUnbondingHeight(__v: _root_.scala.Long): Validator = copy(unbondingHeight = __v)
    def getUnbondingTime: com.google.protobuf.timestamp.Timestamp = unbondingTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearUnbondingTime: Validator = copy(unbondingTime = _root_.scala.None)
    def withUnbondingTime(__v: com.google.protobuf.timestamp.Timestamp): Validator = copy(unbondingTime = Option(__v))
    def getCommission: cosmos.staking.v1beta1.Commission = commission.getOrElse(cosmos.staking.v1beta1.Commission.defaultInstance)
    def clearCommission: Validator = copy(commission = _root_.scala.None)
    def withCommission(__v: cosmos.staking.v1beta1.Commission): Validator = copy(commission = Option(__v))
    def withMinSelfDelegation(__v: _root_.scala.Predef.String): Validator = copy(minSelfDelegation = __v)
    def withUnbondingOnHoldRefCount(__v: _root_.scala.Long): Validator = copy(unbondingOnHoldRefCount = __v)
    def clearUnbondingIds = copy(unbondingIds = _root_.scala.Seq.empty)
    def addUnbondingIds(__vs: _root_.scala.Long *): Validator = addAllUnbondingIds(__vs)
    def addAllUnbondingIds(__vs: Iterable[_root_.scala.Long]): Validator = copy(unbondingIds = unbondingIds ++ __vs)
    def withUnbondingIds(__v: _root_.scala.Seq[_root_.scala.Long]): Validator = copy(unbondingIds = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = operatorAddress
          if (__t != "") __t else null
        }
        case 2 => consensusPubkey.orNull
        case 3 => {
          val __t = jailed
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = status.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 5 => {
          val __t = tokens
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = delegatorShares
          if (__t != "") __t else null
        }
        case 7 => description.orNull
        case 8 => {
          val __t = unbondingHeight
          if (__t != 0L) __t else null
        }
        case 9 => unbondingTime.orNull
        case 10 => commission.orNull
        case 11 => {
          val __t = minSelfDelegation
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = unbondingOnHoldRefCount
          if (__t != 0L) __t else null
        }
        case 13 => unbondingIds
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(operatorAddress)
        case 2 => consensusPubkey.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PBoolean(jailed)
        case 4 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
        case 5 => _root_.scalapb.descriptors.PString(tokens)
        case 6 => _root_.scalapb.descriptors.PString(delegatorShares)
        case 7 => description.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => _root_.scalapb.descriptors.PLong(unbondingHeight)
        case 9 => unbondingTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => commission.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => _root_.scalapb.descriptors.PString(minSelfDelegation)
        case 12 => _root_.scalapb.descriptors.PLong(unbondingOnHoldRefCount)
        case 13 => _root_.scalapb.descriptors.PRepeated(unbondingIds.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.staking.v1beta1.Validator.type = cosmos.staking.v1beta1.Validator
    // @@protoc_insertion_point(GeneratedMessage[cosmos.staking.v1beta1.Validator])
}

object Validator extends scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.Validator] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.staking.v1beta1.Validator] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.staking.v1beta1.Validator = {
    var __operatorAddress: _root_.scala.Predef.String = ""
    var __consensusPubkey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var __jailed: _root_.scala.Boolean = false
    var __status: cosmos.staking.v1beta1.BondStatus = cosmos.staking.v1beta1.BondStatus.BOND_STATUS_UNSPECIFIED
    var __tokens: _root_.scala.Predef.String = ""
    var __delegatorShares: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Option[cosmos.staking.v1beta1.Description] = _root_.scala.None
    var __unbondingHeight: _root_.scala.Long = 0L
    var __unbondingTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __commission: _root_.scala.Option[cosmos.staking.v1beta1.Commission] = _root_.scala.None
    var __minSelfDelegation: _root_.scala.Predef.String = ""
    var __unbondingOnHoldRefCount: _root_.scala.Long = 0L
    val __unbondingIds: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __operatorAddress = _input__.readStringRequireUtf8()
        case 18 =>
          __consensusPubkey = _root_.scala.Option(__consensusPubkey.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __jailed = _input__.readBool()
        case 32 =>
          __status = cosmos.staking.v1beta1.BondStatus.fromValue(_input__.readEnum())
        case 42 =>
          __tokens = _input__.readStringRequireUtf8()
        case 50 =>
          __delegatorShares = _input__.readStringRequireUtf8()
        case 58 =>
          __description = _root_.scala.Option(__description.fold(_root_.scalapb.LiteParser.readMessage[cosmos.staking.v1beta1.Description](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 64 =>
          __unbondingHeight = _input__.readInt64()
        case 74 =>
          __unbondingTime = _root_.scala.Option(__unbondingTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __commission = _root_.scala.Option(__commission.fold(_root_.scalapb.LiteParser.readMessage[cosmos.staking.v1beta1.Commission](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 90 =>
          __minSelfDelegation = _input__.readStringRequireUtf8()
        case 96 =>
          __unbondingOnHoldRefCount = _input__.readInt64()
        case 104 =>
          __unbondingIds += _input__.readUInt64()
        case 106 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __unbondingIds += _input__.readUInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.staking.v1beta1.Validator(
        operatorAddress = __operatorAddress,
        consensusPubkey = __consensusPubkey,
        jailed = __jailed,
        status = __status,
        tokens = __tokens,
        delegatorShares = __delegatorShares,
        description = __description,
        unbondingHeight = __unbondingHeight,
        unbondingTime = __unbondingTime,
        commission = __commission,
        minSelfDelegation = __minSelfDelegation,
        unbondingOnHoldRefCount = __unbondingOnHoldRefCount,
        unbondingIds = __unbondingIds.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.staking.v1beta1.Validator] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.staking.v1beta1.Validator(
        operatorAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        consensusPubkey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        jailed = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        status = cosmos.staking.v1beta1.BondStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.staking.v1beta1.BondStatus.BOND_STATUS_UNSPECIFIED.scalaValueDescriptor).number),
        tokens = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        delegatorShares = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[cosmos.staking.v1beta1.Description]]),
        unbondingHeight = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        unbondingTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        commission = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[cosmos.staking.v1beta1.Commission]]),
        minSelfDelegation = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        unbondingOnHoldRefCount = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        unbondingIds = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.staking.v1beta1.StakingProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.staking.v1beta1.StakingProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.any.Any
      case 7 => __out = cosmos.staking.v1beta1.Description
      case 9 => __out = com.google.protobuf.timestamp.Timestamp
      case 10 => __out = cosmos.staking.v1beta1.Commission
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => cosmos.staking.v1beta1.BondStatus
    }
  }
  lazy val defaultInstance = cosmos.staking.v1beta1.Validator(
    operatorAddress = "",
    consensusPubkey = _root_.scala.None,
    jailed = false,
    status = cosmos.staking.v1beta1.BondStatus.BOND_STATUS_UNSPECIFIED,
    tokens = "",
    delegatorShares = "",
    description = _root_.scala.None,
    unbondingHeight = 0L,
    unbondingTime = _root_.scala.None,
    commission = _root_.scala.None,
    minSelfDelegation = "",
    unbondingOnHoldRefCount = 0L,
    unbondingIds = _root_.scala.Seq.empty
  )
  implicit class ValidatorLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.Validator]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.staking.v1beta1.Validator](_l) {
    def operatorAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.operatorAddress)((c_, f_) => c_.copy(operatorAddress = f_))
    def consensusPubkey: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getConsensusPubkey)((c_, f_) => c_.copy(consensusPubkey = _root_.scala.Option(f_)))
    def optionalConsensusPubkey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.consensusPubkey)((c_, f_) => c_.copy(consensusPubkey = f_))
    def jailed: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.jailed)((c_, f_) => c_.copy(jailed = f_))
    def status: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.BondStatus] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def tokens: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.tokens)((c_, f_) => c_.copy(tokens = f_))
    def delegatorShares: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.delegatorShares)((c_, f_) => c_.copy(delegatorShares = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.Description] = field(_.getDescription)((c_, f_) => c_.copy(description = _root_.scala.Option(f_)))
    def optionalDescription: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.staking.v1beta1.Description]] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def unbondingHeight: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.unbondingHeight)((c_, f_) => c_.copy(unbondingHeight = f_))
    def unbondingTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getUnbondingTime)((c_, f_) => c_.copy(unbondingTime = _root_.scala.Option(f_)))
    def optionalUnbondingTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.unbondingTime)((c_, f_) => c_.copy(unbondingTime = f_))
    def commission: _root_.scalapb.lenses.Lens[UpperPB, cosmos.staking.v1beta1.Commission] = field(_.getCommission)((c_, f_) => c_.copy(commission = _root_.scala.Option(f_)))
    def optionalCommission: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.staking.v1beta1.Commission]] = field(_.commission)((c_, f_) => c_.copy(commission = f_))
    def minSelfDelegation: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.minSelfDelegation)((c_, f_) => c_.copy(minSelfDelegation = f_))
    def unbondingOnHoldRefCount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.unbondingOnHoldRefCount)((c_, f_) => c_.copy(unbondingOnHoldRefCount = f_))
    def unbondingIds: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.unbondingIds)((c_, f_) => c_.copy(unbondingIds = f_))
  }
  final val OPERATOR_ADDRESS_FIELD_NUMBER = 1
  final val CONSENSUS_PUBKEY_FIELD_NUMBER = 2
  final val JAILED_FIELD_NUMBER = 3
  final val STATUS_FIELD_NUMBER = 4
  final val TOKENS_FIELD_NUMBER = 5
  final val DELEGATOR_SHARES_FIELD_NUMBER = 6
  final val DESCRIPTION_FIELD_NUMBER = 7
  final val UNBONDING_HEIGHT_FIELD_NUMBER = 8
  final val UNBONDING_TIME_FIELD_NUMBER = 9
  final val COMMISSION_FIELD_NUMBER = 10
  final val MIN_SELF_DELEGATION_FIELD_NUMBER = 11
  final val UNBONDING_ON_HOLD_REF_COUNT_FIELD_NUMBER = 12
  final val UNBONDING_IDS_FIELD_NUMBER = 13
  def of(
    operatorAddress: _root_.scala.Predef.String,
    consensusPubkey: _root_.scala.Option[com.google.protobuf.any.Any],
    jailed: _root_.scala.Boolean,
    status: cosmos.staking.v1beta1.BondStatus,
    tokens: _root_.scala.Predef.String,
    delegatorShares: _root_.scala.Predef.String,
    description: _root_.scala.Option[cosmos.staking.v1beta1.Description],
    unbondingHeight: _root_.scala.Long,
    unbondingTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    commission: _root_.scala.Option[cosmos.staking.v1beta1.Commission],
    minSelfDelegation: _root_.scala.Predef.String,
    unbondingOnHoldRefCount: _root_.scala.Long,
    unbondingIds: _root_.scala.Seq[_root_.scala.Long]
  ): _root_.cosmos.staking.v1beta1.Validator = _root_.cosmos.staking.v1beta1.Validator(
    operatorAddress,
    consensusPubkey,
    jailed,
    status,
    tokens,
    delegatorShares,
    description,
    unbondingHeight,
    unbondingTime,
    commission,
    minSelfDelegation,
    unbondingOnHoldRefCount,
    unbondingIds
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.staking.v1beta1.Validator])
}
