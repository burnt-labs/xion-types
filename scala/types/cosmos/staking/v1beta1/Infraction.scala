// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.staking.v1beta1

/** Infraction indicates the infraction a validator commited.
  */
sealed abstract class Infraction(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = cosmos.staking.v1beta1.Infraction
  type RecognizedType = cosmos.staking.v1beta1.Infraction.Recognized
  def isInfractionUnspecified: _root_.scala.Boolean = false
  def isInfractionDoubleSign: _root_.scala.Boolean = false
  def isInfractionDowntime: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[Infraction] = cosmos.staking.v1beta1.Infraction
  final def asRecognized: _root_.scala.Option[cosmos.staking.v1beta1.Infraction.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[cosmos.staking.v1beta1.Infraction.Recognized])
}

object Infraction extends _root_.scalapb.GeneratedEnumCompanion[Infraction] {
  sealed trait Recognized extends Infraction
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Infraction] = this
  
  /** UNSPECIFIED defines an empty infraction.
    */
  @SerialVersionUID(0L)
  case object INFRACTION_UNSPECIFIED extends Infraction(0) with Infraction.Recognized {
    val index = 0
    val name = "INFRACTION_UNSPECIFIED"
    override def isInfractionUnspecified: _root_.scala.Boolean = true
  }
  
  /** DOUBLE_SIGN defines a validator that double-signs a block.
    */
  @SerialVersionUID(0L)
  case object INFRACTION_DOUBLE_SIGN extends Infraction(1) with Infraction.Recognized {
    val index = 1
    val name = "INFRACTION_DOUBLE_SIGN"
    override def isInfractionDoubleSign: _root_.scala.Boolean = true
  }
  
  /** DOWNTIME defines a validator that missed signing too many blocks.
    */
  @SerialVersionUID(0L)
  case object INFRACTION_DOWNTIME extends Infraction(2) with Infraction.Recognized {
    val index = 2
    val name = "INFRACTION_DOWNTIME"
    override def isInfractionDowntime: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Infraction(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values: scala.collection.immutable.Seq[ValueType] = scala.collection.immutable.Seq(INFRACTION_UNSPECIFIED, INFRACTION_DOUBLE_SIGN, INFRACTION_DOWNTIME)
  def fromValue(__value: _root_.scala.Int): Infraction = __value match {
    case 0 => INFRACTION_UNSPECIFIED
    case 1 => INFRACTION_DOUBLE_SIGN
    case 2 => INFRACTION_DOWNTIME
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = cosmos.staking.v1beta1.StakingProto.javaDescriptor.getEnumTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = cosmos.staking.v1beta1.StakingProto.scalaDescriptor.enums(1)
}