// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.crypto.multisig.v1beta1

/** CompactBitArray is an implementation of a space efficient bit array.
  * This is used to ensure that the encoded data takes up a minimal amount of
  * space after proto encoding.
  * This is not thread safe, and is not intended for concurrent usage.
  */
@SerialVersionUID(0L)
final case class CompactBitArray(
    extraBitsStored: _root_.scala.Int = 0,
    elems: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[CompactBitArray] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = extraBitsStored
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
        }
      };
      
      {
        val __value = elems
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = extraBitsStored
        if (__v != 0) {
          _output__.writeUInt32(1, __v)
        }
      };
      {
        val __v = elems
        if (!__v.isEmpty) {
          _output__.writeBytes(2, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withExtraBitsStored(__v: _root_.scala.Int): CompactBitArray = copy(extraBitsStored = __v)
    def withElems(__v: _root_.com.google.protobuf.ByteString): CompactBitArray = copy(elems = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = extraBitsStored
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = elems
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(extraBitsStored)
        case 2 => _root_.scalapb.descriptors.PByteString(elems)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.crypto.multisig.v1beta1.CompactBitArray.type = cosmos.crypto.multisig.v1beta1.CompactBitArray
    // @@protoc_insertion_point(GeneratedMessage[cosmos.crypto.multisig.v1beta1.CompactBitArray])
}

object CompactBitArray extends scalapb.GeneratedMessageCompanion[cosmos.crypto.multisig.v1beta1.CompactBitArray] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.crypto.multisig.v1beta1.CompactBitArray] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.crypto.multisig.v1beta1.CompactBitArray = {
    var __extraBitsStored: _root_.scala.Int = 0
    var __elems: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __extraBitsStored = _input__.readUInt32()
        case 18 =>
          __elems = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.crypto.multisig.v1beta1.CompactBitArray(
        extraBitsStored = __extraBitsStored,
        elems = __elems,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.crypto.multisig.v1beta1.CompactBitArray] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.crypto.multisig.v1beta1.CompactBitArray(
        extraBitsStored = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        elems = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.crypto.multisig.v1beta1.MultisigProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.crypto.multisig.v1beta1.MultisigProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.crypto.multisig.v1beta1.CompactBitArray(
    extraBitsStored = 0,
    elems = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class CompactBitArrayLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.crypto.multisig.v1beta1.CompactBitArray]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.crypto.multisig.v1beta1.CompactBitArray](_l) {
    def extraBitsStored: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.extraBitsStored)((c_, f_) => c_.copy(extraBitsStored = f_))
    def elems: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.elems)((c_, f_) => c_.copy(elems = f_))
  }
  final val EXTRA_BITS_STORED_FIELD_NUMBER = 1
  final val ELEMS_FIELD_NUMBER = 2
  def of(
    extraBitsStored: _root_.scala.Int,
    elems: _root_.com.google.protobuf.ByteString
  ): _root_.cosmos.crypto.multisig.v1beta1.CompactBitArray = _root_.cosmos.crypto.multisig.v1beta1.CompactBitArray(
    extraBitsStored,
    elems
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.crypto.multisig.v1beta1.CompactBitArray])
}
