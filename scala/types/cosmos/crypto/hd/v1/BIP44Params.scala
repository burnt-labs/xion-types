// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.crypto.hd.v1

/** BIP44Params is used as path field in ledger item in Record.
  *
  * @param purpose
  *   purpose is a constant set to 44' (or 0x8000002C) following the BIP43 recommendation
  * @param coinType
  *   coin_type is a constant that improves privacy
  * @param account
  *   account splits the key space into independent user identities
  * @param change
  *   change is a constant used for public derivation. Constant 0 is used for external chain and constant 1 for internal
  *   chain.
  * @param addressIndex
  *   address_index is used as child index in BIP32 derivation
  */
@SerialVersionUID(0L)
final case class BIP44Params(
    purpose: _root_.scala.Int = 0,
    coinType: _root_.scala.Int = 0,
    account: _root_.scala.Int = 0,
    change: _root_.scala.Boolean = false,
    addressIndex: _root_.scala.Int = 0,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[BIP44Params] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = purpose
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(1, __value)
        }
      };
      
      {
        val __value = coinType
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(2, __value)
        }
      };
      
      {
        val __value = account
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(3, __value)
        }
      };
      
      {
        val __value = change
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      
      {
        val __value = addressIndex
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = purpose
        if (__v != 0) {
          _output__.writeUInt32(1, __v)
        }
      };
      {
        val __v = coinType
        if (__v != 0) {
          _output__.writeUInt32(2, __v)
        }
      };
      {
        val __v = account
        if (__v != 0) {
          _output__.writeUInt32(3, __v)
        }
      };
      {
        val __v = change
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      {
        val __v = addressIndex
        if (__v != 0) {
          _output__.writeUInt32(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withPurpose(__v: _root_.scala.Int): BIP44Params = copy(purpose = __v)
    def withCoinType(__v: _root_.scala.Int): BIP44Params = copy(coinType = __v)
    def withAccount(__v: _root_.scala.Int): BIP44Params = copy(account = __v)
    def withChange(__v: _root_.scala.Boolean): BIP44Params = copy(change = __v)
    def withAddressIndex(__v: _root_.scala.Int): BIP44Params = copy(addressIndex = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = purpose
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = coinType
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = account
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = change
          if (__t != false) __t else null
        }
        case 5 => {
          val __t = addressIndex
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(purpose)
        case 2 => _root_.scalapb.descriptors.PInt(coinType)
        case 3 => _root_.scalapb.descriptors.PInt(account)
        case 4 => _root_.scalapb.descriptors.PBoolean(change)
        case 5 => _root_.scalapb.descriptors.PInt(addressIndex)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.crypto.hd.v1.BIP44Params.type = cosmos.crypto.hd.v1.BIP44Params
    // @@protoc_insertion_point(GeneratedMessage[cosmos.crypto.hd.v1.BIP44Params])
}

object BIP44Params extends scalapb.GeneratedMessageCompanion[cosmos.crypto.hd.v1.BIP44Params] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.crypto.hd.v1.BIP44Params] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.crypto.hd.v1.BIP44Params = {
    var __purpose: _root_.scala.Int = 0
    var __coinType: _root_.scala.Int = 0
    var __account: _root_.scala.Int = 0
    var __change: _root_.scala.Boolean = false
    var __addressIndex: _root_.scala.Int = 0
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __purpose = _input__.readUInt32()
        case 16 =>
          __coinType = _input__.readUInt32()
        case 24 =>
          __account = _input__.readUInt32()
        case 32 =>
          __change = _input__.readBool()
        case 40 =>
          __addressIndex = _input__.readUInt32()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.crypto.hd.v1.BIP44Params(
        purpose = __purpose,
        coinType = __coinType,
        account = __account,
        change = __change,
        addressIndex = __addressIndex,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.crypto.hd.v1.BIP44Params] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.crypto.hd.v1.BIP44Params(
        purpose = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        coinType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        account = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        change = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        addressIndex = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.crypto.hd.v1.HdProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.crypto.hd.v1.HdProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.crypto.hd.v1.BIP44Params(
    purpose = 0,
    coinType = 0,
    account = 0,
    change = false,
    addressIndex = 0
  )
  implicit class BIP44ParamsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.crypto.hd.v1.BIP44Params]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.crypto.hd.v1.BIP44Params](_l) {
    def purpose: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.purpose)((c_, f_) => c_.copy(purpose = f_))
    def coinType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.coinType)((c_, f_) => c_.copy(coinType = f_))
    def account: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.account)((c_, f_) => c_.copy(account = f_))
    def change: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.change)((c_, f_) => c_.copy(change = f_))
    def addressIndex: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.addressIndex)((c_, f_) => c_.copy(addressIndex = f_))
  }
  final val PURPOSE_FIELD_NUMBER = 1
  final val COIN_TYPE_FIELD_NUMBER = 2
  final val ACCOUNT_FIELD_NUMBER = 3
  final val CHANGE_FIELD_NUMBER = 4
  final val ADDRESS_INDEX_FIELD_NUMBER = 5
  def of(
    purpose: _root_.scala.Int,
    coinType: _root_.scala.Int,
    account: _root_.scala.Int,
    change: _root_.scala.Boolean,
    addressIndex: _root_.scala.Int
  ): _root_.cosmos.crypto.hd.v1.BIP44Params = _root_.cosmos.crypto.hd.v1.BIP44Params(
    purpose,
    coinType,
    account,
    change,
    addressIndex
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.crypto.hd.v1.BIP44Params])
}
