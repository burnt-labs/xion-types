// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.bank.module.v1

object ModuleProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    cosmos.app.v1alpha1.ModuleProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      cosmos.bank.module.v1.Module
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CiJjb3Ntb3MvYmFuay9tb2R1bGUvdjEvbW9kdWxlLnByb3RvEhVjb3Ntb3MuYmFuay5tb2R1bGUudjEaIGNvc21vcy9hcHAvd
  jFhbHBoYTEvbW9kdWxlLnByb3RvIpcCCgZNb2R1bGUSawogYmxvY2tlZF9tb2R1bGVfYWNjb3VudHNfb3ZlcnJpZGUYASADKAlCI
  uI/HxIdYmxvY2tlZE1vZHVsZUFjY291bnRzT3ZlcnJpZGVSHWJsb2NrZWRNb2R1bGVBY2NvdW50c092ZXJyaWRlEiwKCWF1dGhvc
  ml0eRgCIAEoCUIO4j8LEglhdXRob3JpdHlSCWF1dGhvcml0eRJFChJyZXN0cmljdGlvbnNfb3JkZXIYAyADKAlCFuI/ExIRcmVzd
  HJpY3Rpb25zT3JkZXJSEXJlc3RyaWN0aW9uc09yZGVyOiu6wJbaASUKI2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsveC9iY
  W5rYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      cosmos.app.v1alpha1.ModuleProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}