// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.app.runtime.v1alpha1

/** Module is the config object for the runtime module.
  *
  * @param appName
  *   app_name is the name of the app.
  * @param beginBlockers
  *   begin_blockers specifies the module names of begin blockers
  *   to call in the order in which they should be called. If this is left empty
  *   no begin blocker will be registered.
  * @param endBlockers
  *   end_blockers specifies the module names of the end blockers
  *   to call in the order in which they should be called. If this is left empty
  *   no end blocker will be registered.
  * @param initGenesis
  *   init_genesis specifies the module names of init genesis functions
  *   to call in the order in which they should be called. If this is left empty
  *   no init genesis function will be registered.
  * @param exportGenesis
  *   export_genesis specifies the order in which to export module genesis data.
  *   If this is left empty, the init_genesis order will be used for export genesis
  *   if it is specified.
  * @param overrideStoreKeys
  *   override_store_keys is an optional list of overrides for the module store keys
  *   to be used in keeper construction.
  * @param skipStoreKeys
  *   skip_store_keys is an optional list of store keys to skip when constructing the
  *   module's keeper. This is useful when a module does not have a store key.
  *   NOTE: the provided environment variable will have a fake store service.
  * @param orderMigrations
  *   order_migrations defines the order in which module migrations are performed.
  *   If this is left empty, it uses the default migration order.
  *   https://pkg.go.dev/github.com/cosmos/cosmos-sdk/types/module#DefaultMigrationsOrder
  * @param precommiters
  *   precommiters specifies the module names of the precommiters
  *   to call in the order in which they should be called. If this is left empty
  *   no precommit function will be registered.
  * @param prepareCheckStaters
  *   prepare_check_staters specifies the module names of the prepare_check_staters
  *   to call in the order in which they should be called. If this is left empty
  *   no preparecheckstate function will be registered.
  * @param preBlockers
  *   pre_blockers specifies the module names of pre blockers
  *   to call in the order in which they should be called. If this is left empty
  *   no pre blocker will be registered.
  */
@SerialVersionUID(0L)
final case class Module(
    appName: _root_.scala.Predef.String = "",
    beginBlockers: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    endBlockers: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    initGenesis: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    exportGenesis: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    overrideStoreKeys: _root_.scala.Seq[cosmos.app.runtime.v1alpha1.StoreKeyConfig] = _root_.scala.Seq.empty,
    skipStoreKeys: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    orderMigrations: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    precommiters: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    prepareCheckStaters: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    preBlockers: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Module] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = appName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      beginBlockers.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      endBlockers.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      initGenesis.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      }
      exportGenesis.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
      }
      overrideStoreKeys.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      skipStoreKeys.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
      }
      orderMigrations.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
      }
      precommiters.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
      }
      prepareCheckStaters.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
      }
      preBlockers.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = appName
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      beginBlockers.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      endBlockers.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      initGenesis.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      exportGenesis.foreach { __v =>
        val __m = __v
        _output__.writeString(5, __m)
      };
      overrideStoreKeys.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      orderMigrations.foreach { __v =>
        val __m = __v
        _output__.writeString(7, __m)
      };
      precommiters.foreach { __v =>
        val __m = __v
        _output__.writeString(8, __m)
      };
      prepareCheckStaters.foreach { __v =>
        val __m = __v
        _output__.writeString(9, __m)
      };
      preBlockers.foreach { __v =>
        val __m = __v
        _output__.writeString(10, __m)
      };
      skipStoreKeys.foreach { __v =>
        val __m = __v
        _output__.writeString(11, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withAppName(__v: _root_.scala.Predef.String): Module = copy(appName = __v)
    def clearBeginBlockers = copy(beginBlockers = _root_.scala.Seq.empty)
    def addBeginBlockers(__vs: _root_.scala.Predef.String *): Module = addAllBeginBlockers(__vs)
    def addAllBeginBlockers(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(beginBlockers = beginBlockers ++ __vs)
    def withBeginBlockers(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(beginBlockers = __v)
    def clearEndBlockers = copy(endBlockers = _root_.scala.Seq.empty)
    def addEndBlockers(__vs: _root_.scala.Predef.String *): Module = addAllEndBlockers(__vs)
    def addAllEndBlockers(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(endBlockers = endBlockers ++ __vs)
    def withEndBlockers(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(endBlockers = __v)
    def clearInitGenesis = copy(initGenesis = _root_.scala.Seq.empty)
    def addInitGenesis(__vs: _root_.scala.Predef.String *): Module = addAllInitGenesis(__vs)
    def addAllInitGenesis(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(initGenesis = initGenesis ++ __vs)
    def withInitGenesis(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(initGenesis = __v)
    def clearExportGenesis = copy(exportGenesis = _root_.scala.Seq.empty)
    def addExportGenesis(__vs: _root_.scala.Predef.String *): Module = addAllExportGenesis(__vs)
    def addAllExportGenesis(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(exportGenesis = exportGenesis ++ __vs)
    def withExportGenesis(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(exportGenesis = __v)
    def clearOverrideStoreKeys = copy(overrideStoreKeys = _root_.scala.Seq.empty)
    def addOverrideStoreKeys(__vs: cosmos.app.runtime.v1alpha1.StoreKeyConfig *): Module = addAllOverrideStoreKeys(__vs)
    def addAllOverrideStoreKeys(__vs: Iterable[cosmos.app.runtime.v1alpha1.StoreKeyConfig]): Module = copy(overrideStoreKeys = overrideStoreKeys ++ __vs)
    def withOverrideStoreKeys(__v: _root_.scala.Seq[cosmos.app.runtime.v1alpha1.StoreKeyConfig]): Module = copy(overrideStoreKeys = __v)
    def clearSkipStoreKeys = copy(skipStoreKeys = _root_.scala.Seq.empty)
    def addSkipStoreKeys(__vs: _root_.scala.Predef.String *): Module = addAllSkipStoreKeys(__vs)
    def addAllSkipStoreKeys(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(skipStoreKeys = skipStoreKeys ++ __vs)
    def withSkipStoreKeys(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(skipStoreKeys = __v)
    def clearOrderMigrations = copy(orderMigrations = _root_.scala.Seq.empty)
    def addOrderMigrations(__vs: _root_.scala.Predef.String *): Module = addAllOrderMigrations(__vs)
    def addAllOrderMigrations(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(orderMigrations = orderMigrations ++ __vs)
    def withOrderMigrations(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(orderMigrations = __v)
    def clearPrecommiters = copy(precommiters = _root_.scala.Seq.empty)
    def addPrecommiters(__vs: _root_.scala.Predef.String *): Module = addAllPrecommiters(__vs)
    def addAllPrecommiters(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(precommiters = precommiters ++ __vs)
    def withPrecommiters(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(precommiters = __v)
    def clearPrepareCheckStaters = copy(prepareCheckStaters = _root_.scala.Seq.empty)
    def addPrepareCheckStaters(__vs: _root_.scala.Predef.String *): Module = addAllPrepareCheckStaters(__vs)
    def addAllPrepareCheckStaters(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(prepareCheckStaters = prepareCheckStaters ++ __vs)
    def withPrepareCheckStaters(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(prepareCheckStaters = __v)
    def clearPreBlockers = copy(preBlockers = _root_.scala.Seq.empty)
    def addPreBlockers(__vs: _root_.scala.Predef.String *): Module = addAllPreBlockers(__vs)
    def addAllPreBlockers(__vs: Iterable[_root_.scala.Predef.String]): Module = copy(preBlockers = preBlockers ++ __vs)
    def withPreBlockers(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Module = copy(preBlockers = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = appName
          if (__t != "") __t else null
        }
        case 2 => beginBlockers
        case 3 => endBlockers
        case 4 => initGenesis
        case 5 => exportGenesis
        case 6 => overrideStoreKeys
        case 11 => skipStoreKeys
        case 7 => orderMigrations
        case 8 => precommiters
        case 9 => prepareCheckStaters
        case 10 => preBlockers
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(appName)
        case 2 => _root_.scalapb.descriptors.PRepeated(beginBlockers.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(endBlockers.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(initGenesis.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 5 => _root_.scalapb.descriptors.PRepeated(exportGenesis.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(overrideStoreKeys.iterator.map(_.toPMessage).toVector)
        case 11 => _root_.scalapb.descriptors.PRepeated(skipStoreKeys.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 7 => _root_.scalapb.descriptors.PRepeated(orderMigrations.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 8 => _root_.scalapb.descriptors.PRepeated(precommiters.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 9 => _root_.scalapb.descriptors.PRepeated(prepareCheckStaters.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 10 => _root_.scalapb.descriptors.PRepeated(preBlockers.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.app.runtime.v1alpha1.Module.type = cosmos.app.runtime.v1alpha1.Module
    // @@protoc_insertion_point(GeneratedMessage[cosmos.app.runtime.v1alpha1.Module])
}

object Module extends scalapb.GeneratedMessageCompanion[cosmos.app.runtime.v1alpha1.Module] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.app.runtime.v1alpha1.Module] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.app.runtime.v1alpha1.Module = {
    var __appName: _root_.scala.Predef.String = ""
    val __beginBlockers: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __endBlockers: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __initGenesis: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __exportGenesis: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __overrideStoreKeys: _root_.scala.collection.immutable.VectorBuilder[cosmos.app.runtime.v1alpha1.StoreKeyConfig] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.app.runtime.v1alpha1.StoreKeyConfig]
    val __skipStoreKeys: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __orderMigrations: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __precommiters: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __prepareCheckStaters: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __preBlockers: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __appName = _input__.readStringRequireUtf8()
        case 18 =>
          __beginBlockers += _input__.readStringRequireUtf8()
        case 26 =>
          __endBlockers += _input__.readStringRequireUtf8()
        case 34 =>
          __initGenesis += _input__.readStringRequireUtf8()
        case 42 =>
          __exportGenesis += _input__.readStringRequireUtf8()
        case 50 =>
          __overrideStoreKeys += _root_.scalapb.LiteParser.readMessage[cosmos.app.runtime.v1alpha1.StoreKeyConfig](_input__)
        case 90 =>
          __skipStoreKeys += _input__.readStringRequireUtf8()
        case 58 =>
          __orderMigrations += _input__.readStringRequireUtf8()
        case 66 =>
          __precommiters += _input__.readStringRequireUtf8()
        case 74 =>
          __prepareCheckStaters += _input__.readStringRequireUtf8()
        case 82 =>
          __preBlockers += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.app.runtime.v1alpha1.Module(
        appName = __appName,
        beginBlockers = __beginBlockers.result(),
        endBlockers = __endBlockers.result(),
        initGenesis = __initGenesis.result(),
        exportGenesis = __exportGenesis.result(),
        overrideStoreKeys = __overrideStoreKeys.result(),
        skipStoreKeys = __skipStoreKeys.result(),
        orderMigrations = __orderMigrations.result(),
        precommiters = __precommiters.result(),
        prepareCheckStaters = __prepareCheckStaters.result(),
        preBlockers = __preBlockers.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.app.runtime.v1alpha1.Module] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.app.runtime.v1alpha1.Module(
        appName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        beginBlockers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        endBlockers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        initGenesis = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        exportGenesis = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        overrideStoreKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[cosmos.app.runtime.v1alpha1.StoreKeyConfig]]).getOrElse(_root_.scala.Seq.empty),
        skipStoreKeys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        orderMigrations = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        precommiters = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        prepareCheckStaters = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        preBlockers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.app.runtime.v1alpha1.ModuleProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.app.runtime.v1alpha1.ModuleProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 6 => __out = cosmos.app.runtime.v1alpha1.StoreKeyConfig
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.app.runtime.v1alpha1.Module(
    appName = "",
    beginBlockers = _root_.scala.Seq.empty,
    endBlockers = _root_.scala.Seq.empty,
    initGenesis = _root_.scala.Seq.empty,
    exportGenesis = _root_.scala.Seq.empty,
    overrideStoreKeys = _root_.scala.Seq.empty,
    skipStoreKeys = _root_.scala.Seq.empty,
    orderMigrations = _root_.scala.Seq.empty,
    precommiters = _root_.scala.Seq.empty,
    prepareCheckStaters = _root_.scala.Seq.empty,
    preBlockers = _root_.scala.Seq.empty
  )
  implicit class ModuleLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.app.runtime.v1alpha1.Module]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.app.runtime.v1alpha1.Module](_l) {
    def appName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.appName)((c_, f_) => c_.copy(appName = f_))
    def beginBlockers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.beginBlockers)((c_, f_) => c_.copy(beginBlockers = f_))
    def endBlockers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.endBlockers)((c_, f_) => c_.copy(endBlockers = f_))
    def initGenesis: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.initGenesis)((c_, f_) => c_.copy(initGenesis = f_))
    def exportGenesis: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.exportGenesis)((c_, f_) => c_.copy(exportGenesis = f_))
    def overrideStoreKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.app.runtime.v1alpha1.StoreKeyConfig]] = field(_.overrideStoreKeys)((c_, f_) => c_.copy(overrideStoreKeys = f_))
    def skipStoreKeys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.skipStoreKeys)((c_, f_) => c_.copy(skipStoreKeys = f_))
    def orderMigrations: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.orderMigrations)((c_, f_) => c_.copy(orderMigrations = f_))
    def precommiters: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.precommiters)((c_, f_) => c_.copy(precommiters = f_))
    def prepareCheckStaters: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.prepareCheckStaters)((c_, f_) => c_.copy(prepareCheckStaters = f_))
    def preBlockers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.preBlockers)((c_, f_) => c_.copy(preBlockers = f_))
  }
  final val APP_NAME_FIELD_NUMBER = 1
  final val BEGIN_BLOCKERS_FIELD_NUMBER = 2
  final val END_BLOCKERS_FIELD_NUMBER = 3
  final val INIT_GENESIS_FIELD_NUMBER = 4
  final val EXPORT_GENESIS_FIELD_NUMBER = 5
  final val OVERRIDE_STORE_KEYS_FIELD_NUMBER = 6
  final val SKIP_STORE_KEYS_FIELD_NUMBER = 11
  final val ORDER_MIGRATIONS_FIELD_NUMBER = 7
  final val PRECOMMITERS_FIELD_NUMBER = 8
  final val PREPARE_CHECK_STATERS_FIELD_NUMBER = 9
  final val PRE_BLOCKERS_FIELD_NUMBER = 10
  def of(
    appName: _root_.scala.Predef.String,
    beginBlockers: _root_.scala.Seq[_root_.scala.Predef.String],
    endBlockers: _root_.scala.Seq[_root_.scala.Predef.String],
    initGenesis: _root_.scala.Seq[_root_.scala.Predef.String],
    exportGenesis: _root_.scala.Seq[_root_.scala.Predef.String],
    overrideStoreKeys: _root_.scala.Seq[cosmos.app.runtime.v1alpha1.StoreKeyConfig],
    skipStoreKeys: _root_.scala.Seq[_root_.scala.Predef.String],
    orderMigrations: _root_.scala.Seq[_root_.scala.Predef.String],
    precommiters: _root_.scala.Seq[_root_.scala.Predef.String],
    prepareCheckStaters: _root_.scala.Seq[_root_.scala.Predef.String],
    preBlockers: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.cosmos.app.runtime.v1alpha1.Module = _root_.cosmos.app.runtime.v1alpha1.Module(
    appName,
    beginBlockers,
    endBlockers,
    initGenesis,
    exportGenesis,
    overrideStoreKeys,
    skipStoreKeys,
    orderMigrations,
    precommiters,
    prepareCheckStaters,
    preBlockers
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.app.runtime.v1alpha1.Module])
}
