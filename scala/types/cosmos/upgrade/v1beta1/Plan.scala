// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.upgrade.v1beta1

/** Plan specifies information about a planned upgrade and when it should occur.
  *
  * @param name
  *   Sets the name for the upgrade. This name will be used by the upgraded
  *   version of the software to apply any special "on-upgrade" commands during
  *   the first BeginBlock method after the upgrade is applied. It is also used
  *   to detect whether a software version can handle a given upgrade. If no
  *   upgrade handler with this name has been set in the software, it will be
  *   assumed that the software is out-of-date when the upgrade Time or Height is
  *   reached and the software will exit.
  * @param time
  *   Deprecated: Time based upgrades have been deprecated. Time based upgrade logic
  *   has been removed from the SDK.
  *   If this field is not empty, an error will be thrown.
  * @param height
  *   The height at which the upgrade must be performed.
  * @param info
  *   Any application specific upgrade info to be included on-chain
  *   such as a git commit that validators could automatically upgrade to
  * @param upgradedClientState
  *   Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been
  *   moved to the IBC module in the sub module 02-client.
  *   If this field is not empty, an error will be thrown.
  */
@SerialVersionUID(0L)
final case class Plan(
    name: _root_.scala.Predef.String = "",
    @scala.deprecated(message="Marked as deprecated in proto file", "") time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    height: _root_.scala.Long = 0L,
    info: _root_.scala.Predef.String = "",
    @scala.deprecated(message="Marked as deprecated in proto file", "") upgradedClientState: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Plan] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (time.isDefined) {
        val __value = time.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = height
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(3, __value)
        }
      };
      
      {
        val __value = info
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      if (upgradedClientState.isDefined) {
        val __value = upgradedClientState.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      time.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = height
        if (__v != 0L) {
          _output__.writeInt64(3, __v)
        }
      };
      {
        val __v = info
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      upgradedClientState.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): Plan = copy(name = __v)
    def getTime: com.google.protobuf.timestamp.Timestamp = time.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearTime: Plan = copy(time = _root_.scala.None)
    def withTime(__v: com.google.protobuf.timestamp.Timestamp): Plan = copy(time = Option(__v))
    def withHeight(__v: _root_.scala.Long): Plan = copy(height = __v)
    def withInfo(__v: _root_.scala.Predef.String): Plan = copy(info = __v)
    def getUpgradedClientState: com.google.protobuf.any.Any = upgradedClientState.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearUpgradedClientState: Plan = copy(upgradedClientState = _root_.scala.None)
    def withUpgradedClientState(__v: com.google.protobuf.any.Any): Plan = copy(upgradedClientState = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => time.orNull
        case 3 => {
          val __t = height
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = info
          if (__t != "") __t else null
        }
        case 5 => upgradedClientState.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => time.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PLong(height)
        case 4 => _root_.scalapb.descriptors.PString(info)
        case 5 => upgradedClientState.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.upgrade.v1beta1.Plan.type = cosmos.upgrade.v1beta1.Plan
    // @@protoc_insertion_point(GeneratedMessage[cosmos.upgrade.v1beta1.Plan])
}

object Plan extends scalapb.GeneratedMessageCompanion[cosmos.upgrade.v1beta1.Plan] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.upgrade.v1beta1.Plan] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.upgrade.v1beta1.Plan = {
    var __name: _root_.scala.Predef.String = ""
    var __time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __height: _root_.scala.Long = 0L
    var __info: _root_.scala.Predef.String = ""
    var __upgradedClientState: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 18 =>
          __time = _root_.scala.Option(__time.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __height = _input__.readInt64()
        case 34 =>
          __info = _input__.readStringRequireUtf8()
        case 42 =>
          __upgradedClientState = _root_.scala.Option(__upgradedClientState.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.upgrade.v1beta1.Plan(
        name = __name,
        time = __time,
        height = __height,
        info = __info,
        upgradedClientState = __upgradedClientState,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.upgrade.v1beta1.Plan] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.upgrade.v1beta1.Plan(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        time = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        height = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        info = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        upgradedClientState = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.upgrade.v1beta1.UpgradeProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.upgrade.v1beta1.UpgradeProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.timestamp.Timestamp
      case 5 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.upgrade.v1beta1.Plan(
    name = "",
    time = _root_.scala.None,
    height = 0L,
    info = "",
    upgradedClientState = _root_.scala.None
  )
  implicit class PlanLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.upgrade.v1beta1.Plan]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.upgrade.v1beta1.Plan](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def time: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTime)((c_, f_) => c_.copy(time = _root_.scala.Option(f_)))
    def optionalTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.time)((c_, f_) => c_.copy(time = f_))
    def height: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.height)((c_, f_) => c_.copy(height = f_))
    def info: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.info)((c_, f_) => c_.copy(info = f_))
    def upgradedClientState: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getUpgradedClientState)((c_, f_) => c_.copy(upgradedClientState = _root_.scala.Option(f_)))
    def optionalUpgradedClientState: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.upgradedClientState)((c_, f_) => c_.copy(upgradedClientState = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val TIME_FIELD_NUMBER = 2
  final val HEIGHT_FIELD_NUMBER = 3
  final val INFO_FIELD_NUMBER = 4
  final val UPGRADED_CLIENT_STATE_FIELD_NUMBER = 5
  def of(
    name: _root_.scala.Predef.String,
    time: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    height: _root_.scala.Long,
    info: _root_.scala.Predef.String,
    upgradedClientState: _root_.scala.Option[com.google.protobuf.any.Any]
  ): _root_.cosmos.upgrade.v1beta1.Plan = _root_.cosmos.upgrade.v1beta1.Plan(
    name,
    time,
    height,
    info,
    upgradedClientState
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.upgrade.v1beta1.Plan])
}
