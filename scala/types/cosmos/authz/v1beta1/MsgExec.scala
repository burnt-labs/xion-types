// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.authz.v1beta1

/** MsgExec attempts to execute the provided messages using
  * authorizations granted to the grantee. Each message should have only
  * one signer corresponding to the granter of the authorization.
  *
  * @param msgs
  *   Execute Msg.
  *   The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg))
  *   triple and validate it.
  */
@SerialVersionUID(0L)
final case class MsgExec(
    grantee: _root_.scala.Predef.String = "",
    msgs: _root_.scala.Seq[com.google.protobuf.any.Any] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgExec] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = grantee
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      msgs.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = grantee
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      msgs.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withGrantee(__v: _root_.scala.Predef.String): MsgExec = copy(grantee = __v)
    def clearMsgs = copy(msgs = _root_.scala.Seq.empty)
    def addMsgs(__vs: com.google.protobuf.any.Any *): MsgExec = addAllMsgs(__vs)
    def addAllMsgs(__vs: Iterable[com.google.protobuf.any.Any]): MsgExec = copy(msgs = msgs ++ __vs)
    def withMsgs(__v: _root_.scala.Seq[com.google.protobuf.any.Any]): MsgExec = copy(msgs = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = grantee
          if (__t != "") __t else null
        }
        case 2 => msgs
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(grantee)
        case 2 => _root_.scalapb.descriptors.PRepeated(msgs.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.authz.v1beta1.MsgExec.type = cosmos.authz.v1beta1.MsgExec
    // @@protoc_insertion_point(GeneratedMessage[cosmos.authz.v1beta1.MsgExec])
}

object MsgExec extends scalapb.GeneratedMessageCompanion[cosmos.authz.v1beta1.MsgExec] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.authz.v1beta1.MsgExec] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.authz.v1beta1.MsgExec = {
    var __grantee: _root_.scala.Predef.String = ""
    val __msgs: _root_.scala.collection.immutable.VectorBuilder[com.google.protobuf.any.Any] = new _root_.scala.collection.immutable.VectorBuilder[com.google.protobuf.any.Any]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __grantee = _input__.readStringRequireUtf8()
        case 18 =>
          __msgs += _root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.authz.v1beta1.MsgExec(
        grantee = __grantee,
        msgs = __msgs.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.authz.v1beta1.MsgExec] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.authz.v1beta1.MsgExec(
        grantee = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        msgs = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[com.google.protobuf.any.Any]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.authz.v1beta1.TxProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.authz.v1beta1.TxProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.authz.v1beta1.MsgExec(
    grantee = "",
    msgs = _root_.scala.Seq.empty
  )
  implicit class MsgExecLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.authz.v1beta1.MsgExec]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.authz.v1beta1.MsgExec](_l) {
    def grantee: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.grantee)((c_, f_) => c_.copy(grantee = f_))
    def msgs: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.protobuf.any.Any]] = field(_.msgs)((c_, f_) => c_.copy(msgs = f_))
  }
  final val GRANTEE_FIELD_NUMBER = 1
  final val MSGS_FIELD_NUMBER = 2
  def of(
    grantee: _root_.scala.Predef.String,
    msgs: _root_.scala.Seq[com.google.protobuf.any.Any]
  ): _root_.cosmos.authz.v1beta1.MsgExec = _root_.cosmos.authz.v1beta1.MsgExec(
    grantee,
    msgs
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.authz.v1beta1.MsgExec])
}
