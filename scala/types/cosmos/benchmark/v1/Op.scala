// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.benchmark.v1

/** Op is a message describing a benchmark operation.
  */
@SerialVersionUID(0L)
final case class Op(
    seed: _root_.scala.Long = 0L,
    actor: _root_.scala.Predef.String = "",
    keyLength: _root_.scala.Long = 0L,
    valueLength: _root_.scala.Long = 0L,
    iterations: _root_.scala.Int = 0,
    delete: _root_.scala.Boolean = false,
    exists: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Op] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = seed
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = actor
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = keyLength
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(3, __value)
        }
      };
      
      {
        val __value = valueLength
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(4, __value)
        }
      };
      
      {
        val __value = iterations
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt32Size(5, __value)
        }
      };
      
      {
        val __value = delete
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(6, __value)
        }
      };
      
      {
        val __value = exists
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = seed
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = actor
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = keyLength
        if (__v != 0L) {
          _output__.writeUInt64(3, __v)
        }
      };
      {
        val __v = valueLength
        if (__v != 0L) {
          _output__.writeUInt64(4, __v)
        }
      };
      {
        val __v = iterations
        if (__v != 0) {
          _output__.writeUInt32(5, __v)
        }
      };
      {
        val __v = delete
        if (__v != false) {
          _output__.writeBool(6, __v)
        }
      };
      {
        val __v = exists
        if (__v != false) {
          _output__.writeBool(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withSeed(__v: _root_.scala.Long): Op = copy(seed = __v)
    def withActor(__v: _root_.scala.Predef.String): Op = copy(actor = __v)
    def withKeyLength(__v: _root_.scala.Long): Op = copy(keyLength = __v)
    def withValueLength(__v: _root_.scala.Long): Op = copy(valueLength = __v)
    def withIterations(__v: _root_.scala.Int): Op = copy(iterations = __v)
    def withDelete(__v: _root_.scala.Boolean): Op = copy(delete = __v)
    def withExists(__v: _root_.scala.Boolean): Op = copy(exists = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = seed
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = actor
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = keyLength
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = valueLength
          if (__t != 0L) __t else null
        }
        case 5 => {
          val __t = iterations
          if (__t != 0) __t else null
        }
        case 6 => {
          val __t = delete
          if (__t != false) __t else null
        }
        case 7 => {
          val __t = exists
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(seed)
        case 2 => _root_.scalapb.descriptors.PString(actor)
        case 3 => _root_.scalapb.descriptors.PLong(keyLength)
        case 4 => _root_.scalapb.descriptors.PLong(valueLength)
        case 5 => _root_.scalapb.descriptors.PInt(iterations)
        case 6 => _root_.scalapb.descriptors.PBoolean(delete)
        case 7 => _root_.scalapb.descriptors.PBoolean(exists)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.benchmark.v1.Op.type = cosmos.benchmark.v1.Op
    // @@protoc_insertion_point(GeneratedMessage[cosmos.benchmark.v1.Op])
}

object Op extends scalapb.GeneratedMessageCompanion[cosmos.benchmark.v1.Op] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.benchmark.v1.Op] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.benchmark.v1.Op = {
    var __seed: _root_.scala.Long = 0L
    var __actor: _root_.scala.Predef.String = ""
    var __keyLength: _root_.scala.Long = 0L
    var __valueLength: _root_.scala.Long = 0L
    var __iterations: _root_.scala.Int = 0
    var __delete: _root_.scala.Boolean = false
    var __exists: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __seed = _input__.readUInt64()
        case 18 =>
          __actor = _input__.readStringRequireUtf8()
        case 24 =>
          __keyLength = _input__.readUInt64()
        case 32 =>
          __valueLength = _input__.readUInt64()
        case 40 =>
          __iterations = _input__.readUInt32()
        case 48 =>
          __delete = _input__.readBool()
        case 56 =>
          __exists = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.benchmark.v1.Op(
        seed = __seed,
        actor = __actor,
        keyLength = __keyLength,
        valueLength = __valueLength,
        iterations = __iterations,
        delete = __delete,
        exists = __exists,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.benchmark.v1.Op] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.benchmark.v1.Op(
        seed = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        actor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        keyLength = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        valueLength = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        iterations = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        delete = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        exists = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.benchmark.v1.BenchmarkProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.benchmark.v1.BenchmarkProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.benchmark.v1.Op(
    seed = 0L,
    actor = "",
    keyLength = 0L,
    valueLength = 0L,
    iterations = 0,
    delete = false,
    exists = false
  )
  implicit class OpLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.benchmark.v1.Op]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.benchmark.v1.Op](_l) {
    def seed: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.seed)((c_, f_) => c_.copy(seed = f_))
    def actor: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.actor)((c_, f_) => c_.copy(actor = f_))
    def keyLength: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.keyLength)((c_, f_) => c_.copy(keyLength = f_))
    def valueLength: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.valueLength)((c_, f_) => c_.copy(valueLength = f_))
    def iterations: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.iterations)((c_, f_) => c_.copy(iterations = f_))
    def delete: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.delete)((c_, f_) => c_.copy(delete = f_))
    def exists: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.exists)((c_, f_) => c_.copy(exists = f_))
  }
  final val SEED_FIELD_NUMBER = 1
  final val ACTOR_FIELD_NUMBER = 2
  final val KEY_LENGTH_FIELD_NUMBER = 3
  final val VALUE_LENGTH_FIELD_NUMBER = 4
  final val ITERATIONS_FIELD_NUMBER = 5
  final val DELETE_FIELD_NUMBER = 6
  final val EXISTS_FIELD_NUMBER = 7
  def of(
    seed: _root_.scala.Long,
    actor: _root_.scala.Predef.String,
    keyLength: _root_.scala.Long,
    valueLength: _root_.scala.Long,
    iterations: _root_.scala.Int,
    delete: _root_.scala.Boolean,
    exists: _root_.scala.Boolean
  ): _root_.cosmos.benchmark.v1.Op = _root_.cosmos.benchmark.v1.Op(
    seed,
    actor,
    keyLength,
    valueLength,
    iterations,
    delete,
    exists
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.benchmark.v1.Op])
}
