// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1

object TxProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    cosmos.base.v1beta1.CoinProto,
    cosmos.gov.v1.GovProto,
    com.google.protobuf.GogoProto,
    cosmos_proto.CosmosProto,
    com.google.protobuf.any.AnyProto,
    cosmos.msg.v1.MsgProto,
    amino.AminoProto,
    com.google.protobuf.timestamp.TimestampProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      cosmos.gov.v1.MsgSubmitProposal,
      cosmos.gov.v1.MsgSubmitProposalResponse,
      cosmos.gov.v1.MsgExecLegacyContent,
      cosmos.gov.v1.MsgExecLegacyContentResponse,
      cosmos.gov.v1.MsgVote,
      cosmos.gov.v1.MsgVoteResponse,
      cosmos.gov.v1.MsgVoteWeighted,
      cosmos.gov.v1.MsgVoteWeightedResponse,
      cosmos.gov.v1.MsgDeposit,
      cosmos.gov.v1.MsgDepositResponse,
      cosmos.gov.v1.MsgUpdateParams,
      cosmos.gov.v1.MsgUpdateParamsResponse,
      cosmos.gov.v1.MsgCancelProposal,
      cosmos.gov.v1.MsgCancelProposalResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChZjb3Ntb3MvZ292L3YxL3R4LnByb3RvEg1jb3Ntb3MuZ292LnYxGh5jb3Ntb3MvYmFzZS92MWJldGExL2NvaW4ucHJvdG8aF
  2Nvc21vcy9nb3YvdjEvZ292LnByb3RvGhRnb2dvcHJvdG8vZ29nby5wcm90bxoZY29zbW9zX3Byb3RvL2Nvc21vcy5wcm90bxoZZ
  29vZ2xlL3Byb3RvYnVmL2FueS5wcm90bxoXY29zbW9zL21zZy92MS9tc2cucHJvdG8aEWFtaW5vL2FtaW5vLnByb3RvGh9nb29nb
  GUvcHJvdG9idWYvdGltZXN0YW1wLnByb3RvIsYEChFNc2dTdWJtaXRQcm9wb3NhbBI/CghtZXNzYWdlcxgBIAMoCzIULmdvb2dsZ
  S5wcm90b2J1Zi5BbnlCDeI/ChIIbWVzc2FnZXNSCG1lc3NhZ2VzEp0BCg9pbml0aWFsX2RlcG9zaXQYAiADKAsyGS5jb3Ntb3MuY
  mFzZS52MWJldGExLkNvaW5CWeI/EBIOaW5pdGlhbERlcG9zaXTI3h8Aqt8fKGdpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvd
  HlwZXMuQ29pbnOa57AqDGxlZ2FjeV9jb2luc6jnsCoBUg5pbml0aWFsRGVwb3NpdBJBCghwcm9wb3NlchgDIAEoCUIl4j8KEghwc
  m9wb3NlctK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IIcHJvcG9zZXISKQoIbWV0YWRhdGEYBCABKAlCDeI/ChIIbWV0YWRhdGFSC
  G1ldGFkYXRhEjMKBXRpdGxlGAUgASgJQh3iPwcSBXRpdGxl2rQtD2Nvc21vcy1zZGsgMC40N1IFdGl0bGUSOQoHc3VtbWFyeRgGI
  AEoCUIf4j8JEgdzdW1tYXJ52rQtD2Nvc21vcy1zZGsgMC40N1IHc3VtbWFyeRI/CglleHBlZGl0ZWQYByABKAhCIeI/CxIJZXhwZ
  WRpdGVk2rQtD2Nvc21vcy1zZGsgMC41MFIJZXhwZWRpdGVkOjGC57AqCHByb3Bvc2VyiuewKh9jb3Ntb3Mtc2RrL3YxL01zZ1N1Y
  m1pdFByb3Bvc2FsIk0KGU1zZ1N1Ym1pdFByb3Bvc2FsUmVzcG9uc2USMAoLcHJvcG9zYWxfaWQYASABKARCD+I/DBIKcHJvcG9zY
  WxJZFIKcHJvcG9zYWxJZCLXAQoUTXNnRXhlY0xlZ2FjeUNvbnRlbnQSWgoHY29udGVudBgBIAEoCzIULmdvb2dsZS5wcm90b2J1Z
  i5BbnlCKuI/CRIHY29udGVudMq0LRpjb3Ntb3MuZ292LnYxYmV0YTEuQ29udGVudFIHY29udGVudBIsCglhdXRob3JpdHkYAiABK
  AlCDuI/CxIJYXV0aG9yaXR5UglhdXRob3JpdHk6NYLnsCoJYXV0aG9yaXR5iuewKiJjb3Ntb3Mtc2RrL3YxL01zZ0V4ZWNMZWdhY
  3lDb250ZW50Ih4KHE1zZ0V4ZWNMZWdhY3lDb250ZW50UmVzcG9uc2UimgIKB01zZ1ZvdGUSRAoLcHJvcG9zYWxfaWQYASABKARCI
  +I/DBIKcHJvcG9zYWxJZOreHwtwcm9wb3NhbF9pZKjnsCoBUgpwcm9wb3NhbElkEjgKBXZvdGVyGAIgASgJQiLiPwcSBXZvdGVy0
  rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgV2b3RlchI+CgZvcHRpb24YAyABKA4yGS5jb3Ntb3MuZ292LnYxLlZvdGVPcHRpb25CC
  +I/CBIGb3B0aW9uUgZvcHRpb24SKQoIbWV0YWRhdGEYBCABKAlCDeI/ChIIbWV0YWRhdGFSCG1ldGFkYXRhOiSC57AqBXZvdGVyi
  uewKhVjb3Ntb3Mtc2RrL3YxL01zZ1ZvdGUiEQoPTXNnVm90ZVJlc3BvbnNlIrUCCg9Nc2dWb3RlV2VpZ2h0ZWQSRAoLcHJvcG9zY
  WxfaWQYASABKARCI+I/DBIKcHJvcG9zYWxJZOreHwtwcm9wb3NhbF9pZKjnsCoBUgpwcm9wb3NhbElkEjgKBXZvdGVyGAIgASgJQ
  iLiPwcSBXZvdGVy0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgV2b3RlchJJCgdvcHRpb25zGAMgAygLMiEuY29zbW9zLmdvdi52M
  S5XZWlnaHRlZFZvdGVPcHRpb25CDOI/CRIHb3B0aW9uc1IHb3B0aW9ucxIpCghtZXRhZGF0YRgEIAEoCUIN4j8KEghtZXRhZGF0Y
  VIIbWV0YWRhdGE6LILnsCoFdm90ZXKK57AqHWNvc21vcy1zZGsvdjEvTXNnVm90ZVdlaWdodGVkIhkKF01zZ1ZvdGVXZWlnaHRlZ
  FJlc3BvbnNlIo4CCgpNc2dEZXBvc2l0EkQKC3Byb3Bvc2FsX2lkGAEgASgEQiPiPwwSCnByb3Bvc2FsSWTq3h8LcHJvcG9zYWxfa
  WSo57AqAVIKcHJvcG9zYWxJZBJECglkZXBvc2l0b3IYAiABKAlCJuI/CxIJZGVwb3NpdG9y0rQtFGNvc21vcy5BZGRyZXNzU3Rya
  W5nUglkZXBvc2l0b3ISRwoGYW1vdW50GAMgAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQhTiPwgSBmFtb3VudMjeHwCo5
  7AqAVIGYW1vdW50OiuC57AqCWRlcG9zaXRvcornsCoYY29zbW9zLXNkay92MS9Nc2dEZXBvc2l0IhQKEk1zZ0RlcG9zaXRSZXNwb
  25zZSLnAQoPTXNnVXBkYXRlUGFyYW1zEkQKCWF1dGhvcml0eRgBIAEoCUIm4j8LEglhdXRob3JpdHnStC0UY29zbW9zLkFkZHJlc
  3NTdHJpbmdSCWF1dGhvcml0eRJDCgZwYXJhbXMYAiABKAsyFS5jb3Ntb3MuZ292LnYxLlBhcmFtc0IU4j8IEgZwYXJhbXPI3h8Aq
  OewKgFSBnBhcmFtczpJ0rQtD2Nvc21vcy1zZGsgMC40N4LnsCoJYXV0aG9yaXR5iuewKiNjb3Ntb3Mtc2RrL3gvZ292L3YxL01zZ
  1VwZGF0ZVBhcmFtcyIuChdNc2dVcGRhdGVQYXJhbXNSZXNwb25zZToT0rQtD2Nvc21vcy1zZGsgMC40NyK5AQoRTXNnQ2FuY2VsU
  HJvcG9zYWwSPwoLcHJvcG9zYWxfaWQYASABKARCHuI/DBIKcHJvcG9zYWxJZOreHwtwcm9wb3NhbF9pZFIKcHJvcG9zYWxJZBJBC
  ghwcm9wb3NlchgCIAEoCUIl4j8KEghwcm9wb3NlctK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IIcHJvcG9zZXI6INK0LQ9jb3Ntb
  3Mtc2RrIDAuNTCC57AqCHByb3Bvc2VyIosCChlNc2dDYW5jZWxQcm9wb3NhbFJlc3BvbnNlEj8KC3Byb3Bvc2FsX2lkGAEgASgEQ
  h7iPwwSCnByb3Bvc2FsSWTq3h8LcHJvcG9zYWxfaWRSCnByb3Bvc2FsSWQSWgoNY2FuY2VsZWRfdGltZRgCIAEoCzIaLmdvb2dsZ
  S5wcm90b2J1Zi5UaW1lc3RhbXBCGeI/DhIMY2FuY2VsZWRUaW1lyN4fAJDfHwFSDGNhbmNlbGVkVGltZRI8Cg9jYW5jZWxlZF9oZ
  WlnaHQYAyABKARCE+I/EBIOY2FuY2VsZWRIZWlnaHRSDmNhbmNlbGVkSGVpZ2h0OhPStC0PY29zbW9zLXNkayAwLjUwMvsFCgNNc
  2cScQoOU3VibWl0UHJvcG9zYWwSIC5jb3Ntb3MuZ292LnYxLk1zZ1N1Ym1pdFByb3Bvc2FsGiguY29zbW9zLmdvdi52MS5Nc2dTd
  WJtaXRQcm9wb3NhbFJlc3BvbnNlIhPKtC0PY29zbW9zLXNkayAwLjQ2EnoKEUV4ZWNMZWdhY3lDb250ZW50EiMuY29zbW9zLmdvd
  i52MS5Nc2dFeGVjTGVnYWN5Q29udGVudBorLmNvc21vcy5nb3YudjEuTXNnRXhlY0xlZ2FjeUNvbnRlbnRSZXNwb25zZSITyrQtD
  2Nvc21vcy1zZGsgMC40NhJTCgRWb3RlEhYuY29zbW9zLmdvdi52MS5Nc2dWb3RlGh4uY29zbW9zLmdvdi52MS5Nc2dWb3RlUmVzc
  G9uc2UiE8q0LQ9jb3Ntb3Mtc2RrIDAuNDYSawoMVm90ZVdlaWdodGVkEh4uY29zbW9zLmdvdi52MS5Nc2dWb3RlV2VpZ2h0ZWQaJ
  i5jb3Ntb3MuZ292LnYxLk1zZ1ZvdGVXZWlnaHRlZFJlc3BvbnNlIhPKtC0PY29zbW9zLXNkayAwLjQ2ElwKB0RlcG9zaXQSGS5jb
  3Ntb3MuZ292LnYxLk1zZ0RlcG9zaXQaIS5jb3Ntb3MuZ292LnYxLk1zZ0RlcG9zaXRSZXNwb25zZSITyrQtD2Nvc21vcy1zZGsgM
  C40NhJrCgxVcGRhdGVQYXJhbXMSHi5jb3Ntb3MuZ292LnYxLk1zZ1VwZGF0ZVBhcmFtcxomLmNvc21vcy5nb3YudjEuTXNnVXBkY
  XRlUGFyYW1zUmVzcG9uc2UiE8q0LQ9jb3Ntb3Mtc2RrIDAuNDcScQoOQ2FuY2VsUHJvcG9zYWwSIC5jb3Ntb3MuZ292LnYxLk1zZ
  0NhbmNlbFByb3Bvc2FsGiguY29zbW9zLmdvdi52MS5Nc2dDYW5jZWxQcm9wb3NhbFJlc3BvbnNlIhPKtC0PY29zbW9zLXNkayAwL
  jUwGgWA57AqAUItWitnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3gvZ292L3R5cGVzL3YxYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      cosmos.base.v1beta1.CoinProto.javaDescriptor,
      cosmos.gov.v1.GovProto.javaDescriptor,
      com.google.protobuf.GogoProto.javaDescriptor,
      cosmos_proto.CosmosProto.javaDescriptor,
      com.google.protobuf.any.AnyProto.javaDescriptor,
      cosmos.msg.v1.MsgProto.javaDescriptor,
      amino.AminoProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}