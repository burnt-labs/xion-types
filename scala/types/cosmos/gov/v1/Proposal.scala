// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1

/** Proposal defines the core field members of a governance proposal.
  *
  * @param id
  *   id defines the unique id of the proposal.
  * @param messages
  *   messages are the arbitrary messages to be executed if the proposal passes.
  * @param status
  *   status defines the proposal status.
  * @param finalTallyResult
  *   final_tally_result is the final tally result of the proposal. When
  *   querying a proposal via gRPC, this field is not populated until the
  *   proposal's voting period has ended.
  * @param submitTime
  *   submit_time is the time of proposal submission.
  * @param depositEndTime
  *   deposit_end_time is the end time for deposition.
  * @param totalDeposit
  *   total_deposit is the total deposit on the proposal.
  * @param votingStartTime
  *   voting_start_time is the starting time to vote on a proposal.
  * @param votingEndTime
  *   voting_end_time is the end time of voting on a proposal.
  * @param metadata
  *   metadata is any arbitrary metadata attached to the proposal.
  *   the recommended format of the metadata is to be found here:
  *   https://docs.cosmos.network/v0.47/modules/gov#proposal-3
  * @param title
  *   title is the title of the proposal
  * @param summary
  *   summary is a short summary of the proposal
  * @param proposer
  *   proposer is the address of the proposal sumbitter
  * @param expedited
  *   expedited defines if the proposal is expedited
  * @param failedReason
  *   failed_reason defines the reason why the proposal failed
  */
@SerialVersionUID(0L)
final case class Proposal(
    id: _root_.scala.Long = 0L,
    messages: _root_.scala.Seq[com.google.protobuf.any.Any] = _root_.scala.Seq.empty,
    status: cosmos.gov.v1.ProposalStatus = cosmos.gov.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED,
    finalTallyResult: _root_.scala.Option[cosmos.gov.v1.TallyResult] = _root_.scala.None,
    submitTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    depositEndTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    totalDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin] = _root_.scala.Seq.empty,
    votingStartTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    votingEndTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    metadata: _root_.scala.Predef.String = "",
    title: _root_.scala.Predef.String = "",
    summary: _root_.scala.Predef.String = "",
    proposer: _root_.scala.Predef.String = "",
    expedited: _root_.scala.Boolean = false,
    failedReason: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Proposal] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      messages.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = status.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      if (finalTallyResult.isDefined) {
        val __value = finalTallyResult.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (submitTime.isDefined) {
        val __value = submitTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (depositEndTime.isDefined) {
        val __value = depositEndTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      totalDeposit.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (votingStartTime.isDefined) {
        val __value = votingStartTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (votingEndTime.isDefined) {
        val __value = votingEndTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = metadata
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
        }
      };
      
      {
        val __value = title
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
        }
      };
      
      {
        val __value = summary
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(12, __value)
        }
      };
      
      {
        val __value = proposer
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(13, __value)
        }
      };
      
      {
        val __value = expedited
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(14, __value)
        }
      };
      
      {
        val __value = failedReason
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(15, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      messages.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = status.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      finalTallyResult.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      submitTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      depositEndTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      totalDeposit.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      votingStartTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      votingEndTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = metadata
        if (!__v.isEmpty) {
          _output__.writeString(10, __v)
        }
      };
      {
        val __v = title
        if (!__v.isEmpty) {
          _output__.writeString(11, __v)
        }
      };
      {
        val __v = summary
        if (!__v.isEmpty) {
          _output__.writeString(12, __v)
        }
      };
      {
        val __v = proposer
        if (!__v.isEmpty) {
          _output__.writeString(13, __v)
        }
      };
      {
        val __v = expedited
        if (__v != false) {
          _output__.writeBool(14, __v)
        }
      };
      {
        val __v = failedReason
        if (!__v.isEmpty) {
          _output__.writeString(15, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Long): Proposal = copy(id = __v)
    def clearMessages = copy(messages = _root_.scala.Seq.empty)
    def addMessages(__vs: com.google.protobuf.any.Any *): Proposal = addAllMessages(__vs)
    def addAllMessages(__vs: Iterable[com.google.protobuf.any.Any]): Proposal = copy(messages = messages ++ __vs)
    def withMessages(__v: _root_.scala.Seq[com.google.protobuf.any.Any]): Proposal = copy(messages = __v)
    def withStatus(__v: cosmos.gov.v1.ProposalStatus): Proposal = copy(status = __v)
    def getFinalTallyResult: cosmos.gov.v1.TallyResult = finalTallyResult.getOrElse(cosmos.gov.v1.TallyResult.defaultInstance)
    def clearFinalTallyResult: Proposal = copy(finalTallyResult = _root_.scala.None)
    def withFinalTallyResult(__v: cosmos.gov.v1.TallyResult): Proposal = copy(finalTallyResult = Option(__v))
    def getSubmitTime: com.google.protobuf.timestamp.Timestamp = submitTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearSubmitTime: Proposal = copy(submitTime = _root_.scala.None)
    def withSubmitTime(__v: com.google.protobuf.timestamp.Timestamp): Proposal = copy(submitTime = Option(__v))
    def getDepositEndTime: com.google.protobuf.timestamp.Timestamp = depositEndTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearDepositEndTime: Proposal = copy(depositEndTime = _root_.scala.None)
    def withDepositEndTime(__v: com.google.protobuf.timestamp.Timestamp): Proposal = copy(depositEndTime = Option(__v))
    def clearTotalDeposit = copy(totalDeposit = _root_.scala.Seq.empty)
    def addTotalDeposit(__vs: cosmos.base.v1beta1.Coin *): Proposal = addAllTotalDeposit(__vs)
    def addAllTotalDeposit(__vs: Iterable[cosmos.base.v1beta1.Coin]): Proposal = copy(totalDeposit = totalDeposit ++ __vs)
    def withTotalDeposit(__v: _root_.scala.Seq[cosmos.base.v1beta1.Coin]): Proposal = copy(totalDeposit = __v)
    def getVotingStartTime: com.google.protobuf.timestamp.Timestamp = votingStartTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearVotingStartTime: Proposal = copy(votingStartTime = _root_.scala.None)
    def withVotingStartTime(__v: com.google.protobuf.timestamp.Timestamp): Proposal = copy(votingStartTime = Option(__v))
    def getVotingEndTime: com.google.protobuf.timestamp.Timestamp = votingEndTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearVotingEndTime: Proposal = copy(votingEndTime = _root_.scala.None)
    def withVotingEndTime(__v: com.google.protobuf.timestamp.Timestamp): Proposal = copy(votingEndTime = Option(__v))
    def withMetadata(__v: _root_.scala.Predef.String): Proposal = copy(metadata = __v)
    def withTitle(__v: _root_.scala.Predef.String): Proposal = copy(title = __v)
    def withSummary(__v: _root_.scala.Predef.String): Proposal = copy(summary = __v)
    def withProposer(__v: _root_.scala.Predef.String): Proposal = copy(proposer = __v)
    def withExpedited(__v: _root_.scala.Boolean): Proposal = copy(expedited = __v)
    def withFailedReason(__v: _root_.scala.Predef.String): Proposal = copy(failedReason = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != 0L) __t else null
        }
        case 2 => messages
        case 3 => {
          val __t = status.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => finalTallyResult.orNull
        case 5 => submitTime.orNull
        case 6 => depositEndTime.orNull
        case 7 => totalDeposit
        case 8 => votingStartTime.orNull
        case 9 => votingEndTime.orNull
        case 10 => {
          val __t = metadata
          if (__t != "") __t else null
        }
        case 11 => {
          val __t = title
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = summary
          if (__t != "") __t else null
        }
        case 13 => {
          val __t = proposer
          if (__t != "") __t else null
        }
        case 14 => {
          val __t = expedited
          if (__t != false) __t else null
        }
        case 15 => {
          val __t = failedReason
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(id)
        case 2 => _root_.scalapb.descriptors.PRepeated(messages.iterator.map(_.toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PEnum(status.scalaValueDescriptor)
        case 4 => finalTallyResult.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => submitTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => depositEndTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => _root_.scalapb.descriptors.PRepeated(totalDeposit.iterator.map(_.toPMessage).toVector)
        case 8 => votingStartTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => votingEndTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => _root_.scalapb.descriptors.PString(metadata)
        case 11 => _root_.scalapb.descriptors.PString(title)
        case 12 => _root_.scalapb.descriptors.PString(summary)
        case 13 => _root_.scalapb.descriptors.PString(proposer)
        case 14 => _root_.scalapb.descriptors.PBoolean(expedited)
        case 15 => _root_.scalapb.descriptors.PString(failedReason)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.gov.v1.Proposal.type = cosmos.gov.v1.Proposal
    // @@protoc_insertion_point(GeneratedMessage[cosmos.gov.v1.Proposal])
}

object Proposal extends scalapb.GeneratedMessageCompanion[cosmos.gov.v1.Proposal] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.gov.v1.Proposal] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.gov.v1.Proposal = {
    var __id: _root_.scala.Long = 0L
    val __messages: _root_.scala.collection.immutable.VectorBuilder[com.google.protobuf.any.Any] = new _root_.scala.collection.immutable.VectorBuilder[com.google.protobuf.any.Any]
    var __status: cosmos.gov.v1.ProposalStatus = cosmos.gov.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED
    var __finalTallyResult: _root_.scala.Option[cosmos.gov.v1.TallyResult] = _root_.scala.None
    var __submitTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __depositEndTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    val __totalDeposit: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin]
    var __votingStartTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __votingEndTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __metadata: _root_.scala.Predef.String = ""
    var __title: _root_.scala.Predef.String = ""
    var __summary: _root_.scala.Predef.String = ""
    var __proposer: _root_.scala.Predef.String = ""
    var __expedited: _root_.scala.Boolean = false
    var __failedReason: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __id = _input__.readUInt64()
        case 18 =>
          __messages += _root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__)
        case 24 =>
          __status = cosmos.gov.v1.ProposalStatus.fromValue(_input__.readEnum())
        case 34 =>
          __finalTallyResult = _root_.scala.Option(__finalTallyResult.fold(_root_.scalapb.LiteParser.readMessage[cosmos.gov.v1.TallyResult](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __submitTime = _root_.scala.Option(__submitTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __depositEndTime = _root_.scala.Option(__depositEndTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __totalDeposit += _root_.scalapb.LiteParser.readMessage[cosmos.base.v1beta1.Coin](_input__)
        case 66 =>
          __votingStartTime = _root_.scala.Option(__votingStartTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __votingEndTime = _root_.scala.Option(__votingEndTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __metadata = _input__.readStringRequireUtf8()
        case 90 =>
          __title = _input__.readStringRequireUtf8()
        case 98 =>
          __summary = _input__.readStringRequireUtf8()
        case 106 =>
          __proposer = _input__.readStringRequireUtf8()
        case 112 =>
          __expedited = _input__.readBool()
        case 122 =>
          __failedReason = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.gov.v1.Proposal(
        id = __id,
        messages = __messages.result(),
        status = __status,
        finalTallyResult = __finalTallyResult,
        submitTime = __submitTime,
        depositEndTime = __depositEndTime,
        totalDeposit = __totalDeposit.result(),
        votingStartTime = __votingStartTime,
        votingEndTime = __votingEndTime,
        metadata = __metadata,
        title = __title,
        summary = __summary,
        proposer = __proposer,
        expedited = __expedited,
        failedReason = __failedReason,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.gov.v1.Proposal] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.gov.v1.Proposal(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        messages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[com.google.protobuf.any.Any]]).getOrElse(_root_.scala.Seq.empty),
        status = cosmos.gov.v1.ProposalStatus.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.gov.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED.scalaValueDescriptor).number),
        finalTallyResult = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[cosmos.gov.v1.TallyResult]]),
        submitTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        depositEndTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        totalDeposit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Seq[cosmos.base.v1beta1.Coin]]).getOrElse(_root_.scala.Seq.empty),
        votingStartTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        votingEndTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        metadata = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        title = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        summary = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        proposer = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        expedited = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        failedReason = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.gov.v1.GovProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.gov.v1.GovProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.any.Any
      case 4 => __out = cosmos.gov.v1.TallyResult
      case 5 => __out = com.google.protobuf.timestamp.Timestamp
      case 6 => __out = com.google.protobuf.timestamp.Timestamp
      case 7 => __out = cosmos.base.v1beta1.Coin
      case 8 => __out = com.google.protobuf.timestamp.Timestamp
      case 9 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => cosmos.gov.v1.ProposalStatus
    }
  }
  lazy val defaultInstance = cosmos.gov.v1.Proposal(
    id = 0L,
    messages = _root_.scala.Seq.empty,
    status = cosmos.gov.v1.ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED,
    finalTallyResult = _root_.scala.None,
    submitTime = _root_.scala.None,
    depositEndTime = _root_.scala.None,
    totalDeposit = _root_.scala.Seq.empty,
    votingStartTime = _root_.scala.None,
    votingEndTime = _root_.scala.None,
    metadata = "",
    title = "",
    summary = "",
    proposer = "",
    expedited = false,
    failedReason = ""
  )
  implicit class ProposalLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1.Proposal]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.gov.v1.Proposal](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def messages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[com.google.protobuf.any.Any]] = field(_.messages)((c_, f_) => c_.copy(messages = f_))
    def status: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1.ProposalStatus] = field(_.status)((c_, f_) => c_.copy(status = f_))
    def finalTallyResult: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1.TallyResult] = field(_.getFinalTallyResult)((c_, f_) => c_.copy(finalTallyResult = _root_.scala.Option(f_)))
    def optionalFinalTallyResult: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.gov.v1.TallyResult]] = field(_.finalTallyResult)((c_, f_) => c_.copy(finalTallyResult = f_))
    def submitTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getSubmitTime)((c_, f_) => c_.copy(submitTime = _root_.scala.Option(f_)))
    def optionalSubmitTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.submitTime)((c_, f_) => c_.copy(submitTime = f_))
    def depositEndTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getDepositEndTime)((c_, f_) => c_.copy(depositEndTime = _root_.scala.Option(f_)))
    def optionalDepositEndTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.depositEndTime)((c_, f_) => c_.copy(depositEndTime = f_))
    def totalDeposit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.v1beta1.Coin]] = field(_.totalDeposit)((c_, f_) => c_.copy(totalDeposit = f_))
    def votingStartTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getVotingStartTime)((c_, f_) => c_.copy(votingStartTime = _root_.scala.Option(f_)))
    def optionalVotingStartTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.votingStartTime)((c_, f_) => c_.copy(votingStartTime = f_))
    def votingEndTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getVotingEndTime)((c_, f_) => c_.copy(votingEndTime = _root_.scala.Option(f_)))
    def optionalVotingEndTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.votingEndTime)((c_, f_) => c_.copy(votingEndTime = f_))
    def metadata: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.metadata)((c_, f_) => c_.copy(metadata = f_))
    def title: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.title)((c_, f_) => c_.copy(title = f_))
    def summary: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.summary)((c_, f_) => c_.copy(summary = f_))
    def proposer: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.proposer)((c_, f_) => c_.copy(proposer = f_))
    def expedited: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.expedited)((c_, f_) => c_.copy(expedited = f_))
    def failedReason: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.failedReason)((c_, f_) => c_.copy(failedReason = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val MESSAGES_FIELD_NUMBER = 2
  final val STATUS_FIELD_NUMBER = 3
  final val FINAL_TALLY_RESULT_FIELD_NUMBER = 4
  final val SUBMIT_TIME_FIELD_NUMBER = 5
  final val DEPOSIT_END_TIME_FIELD_NUMBER = 6
  final val TOTAL_DEPOSIT_FIELD_NUMBER = 7
  final val VOTING_START_TIME_FIELD_NUMBER = 8
  final val VOTING_END_TIME_FIELD_NUMBER = 9
  final val METADATA_FIELD_NUMBER = 10
  final val TITLE_FIELD_NUMBER = 11
  final val SUMMARY_FIELD_NUMBER = 12
  final val PROPOSER_FIELD_NUMBER = 13
  final val EXPEDITED_FIELD_NUMBER = 14
  final val FAILED_REASON_FIELD_NUMBER = 15
  def of(
    id: _root_.scala.Long,
    messages: _root_.scala.Seq[com.google.protobuf.any.Any],
    status: cosmos.gov.v1.ProposalStatus,
    finalTallyResult: _root_.scala.Option[cosmos.gov.v1.TallyResult],
    submitTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    depositEndTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    totalDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin],
    votingStartTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    votingEndTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    metadata: _root_.scala.Predef.String,
    title: _root_.scala.Predef.String,
    summary: _root_.scala.Predef.String,
    proposer: _root_.scala.Predef.String,
    expedited: _root_.scala.Boolean,
    failedReason: _root_.scala.Predef.String
  ): _root_.cosmos.gov.v1.Proposal = _root_.cosmos.gov.v1.Proposal(
    id,
    messages,
    status,
    finalTallyResult,
    submitTime,
    depositEndTime,
    totalDeposit,
    votingStartTime,
    votingEndTime,
    metadata,
    title,
    summary,
    proposer,
    expedited,
    failedReason
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.gov.v1.Proposal])
}
