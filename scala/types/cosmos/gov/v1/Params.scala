// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1

/** Params defines the parameters for the x/gov module.
  *
  * @param minDeposit
  *   Minimum deposit for a proposal to enter voting period.
  * @param maxDepositPeriod
  *   Maximum period for Atom holders to deposit on a proposal. Initial value: 2
  *   months.
  * @param votingPeriod
  *   Duration of the voting period.
  * @param quorum
  *    Minimum percentage of total stake needed to vote for a result to be
  *    considered valid.
  * @param threshold
  *    Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
  * @param vetoThreshold
  *    Minimum value of Veto votes to Total votes ratio for proposal to be
  *    vetoed. Default value: 1/3.
  * @param minInitialDepositRatio
  *    The ratio representing the proportion of the deposit value that must be paid at proposal submission.
  * @param proposalCancelRatio
  *   The cancel ratio which will not be returned back to the depositors when a proposal is cancelled.
  * @param proposalCancelDest
  *   The address which will receive (proposal_cancel_ratio * deposit) proposal deposits.
  *   If empty, the (proposal_cancel_ratio * deposit) proposal deposits will be burned.
  * @param expeditedVotingPeriod
  *   Duration of the voting period of an expedited proposal.
  * @param expeditedThreshold
  *   Minimum proportion of Yes votes for proposal to pass. Default value: 0.67.
  * @param expeditedMinDeposit
  *    Minimum expedited deposit for a proposal to enter voting period.
  * @param burnVoteQuorum
  *   burn deposits if a proposal does not meet quorum
  * @param burnProposalDepositPrevote
  *   burn deposits if the proposal does not enter voting period
  * @param burnVoteVeto
  *   burn deposits if quorum with vote type no_veto is met
  * @param minDepositRatio
  *   The ratio representing the proportion of the deposit value minimum that must be met when making a deposit.
  *   Default value: 0.01. Meaning that for a chain with a min_deposit of 100stake, a deposit of 1stake would be
  *   required.
  */
@SerialVersionUID(0L)
final case class Params(
    minDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin] = _root_.scala.Seq.empty,
    maxDepositPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    votingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    quorum: _root_.scala.Predef.String = "",
    threshold: _root_.scala.Predef.String = "",
    vetoThreshold: _root_.scala.Predef.String = "",
    minInitialDepositRatio: _root_.scala.Predef.String = "",
    proposalCancelRatio: _root_.scala.Predef.String = "",
    proposalCancelDest: _root_.scala.Predef.String = "",
    expeditedVotingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    expeditedThreshold: _root_.scala.Predef.String = "",
    expeditedMinDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin] = _root_.scala.Seq.empty,
    burnVoteQuorum: _root_.scala.Boolean = false,
    burnProposalDepositPrevote: _root_.scala.Boolean = false,
    burnVoteVeto: _root_.scala.Boolean = false,
    minDepositRatio: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Params] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      minDeposit.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (maxDepositPeriod.isDefined) {
        val __value = maxDepositPeriod.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (votingPeriod.isDefined) {
        val __value = votingPeriod.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = quorum
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = threshold
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = vetoThreshold
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      
      {
        val __value = minInitialDepositRatio
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = proposalCancelRatio
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, __value)
        }
      };
      
      {
        val __value = proposalCancelDest
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, __value)
        }
      };
      if (expeditedVotingPeriod.isDefined) {
        val __value = expeditedVotingPeriod.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = expeditedThreshold
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(11, __value)
        }
      };
      expeditedMinDeposit.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = burnVoteQuorum
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(13, __value)
        }
      };
      
      {
        val __value = burnProposalDepositPrevote
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(14, __value)
        }
      };
      
      {
        val __value = burnVoteVeto
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(15, __value)
        }
      };
      
      {
        val __value = minDepositRatio
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(16, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      minDeposit.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      maxDepositPeriod.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      votingPeriod.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = quorum
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = threshold
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = vetoThreshold
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      {
        val __v = minInitialDepositRatio
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = proposalCancelRatio
        if (!__v.isEmpty) {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = proposalCancelDest
        if (!__v.isEmpty) {
          _output__.writeString(9, __v)
        }
      };
      expeditedVotingPeriod.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = expeditedThreshold
        if (!__v.isEmpty) {
          _output__.writeString(11, __v)
        }
      };
      expeditedMinDeposit.foreach { __v =>
        val __m = __v
        _output__.writeTag(12, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = burnVoteQuorum
        if (__v != false) {
          _output__.writeBool(13, __v)
        }
      };
      {
        val __v = burnProposalDepositPrevote
        if (__v != false) {
          _output__.writeBool(14, __v)
        }
      };
      {
        val __v = burnVoteVeto
        if (__v != false) {
          _output__.writeBool(15, __v)
        }
      };
      {
        val __v = minDepositRatio
        if (!__v.isEmpty) {
          _output__.writeString(16, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearMinDeposit = copy(minDeposit = _root_.scala.Seq.empty)
    def addMinDeposit(__vs: cosmos.base.v1beta1.Coin *): Params = addAllMinDeposit(__vs)
    def addAllMinDeposit(__vs: Iterable[cosmos.base.v1beta1.Coin]): Params = copy(minDeposit = minDeposit ++ __vs)
    def withMinDeposit(__v: _root_.scala.Seq[cosmos.base.v1beta1.Coin]): Params = copy(minDeposit = __v)
    def getMaxDepositPeriod: com.google.protobuf.duration.Duration = maxDepositPeriod.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearMaxDepositPeriod: Params = copy(maxDepositPeriod = _root_.scala.None)
    def withMaxDepositPeriod(__v: com.google.protobuf.duration.Duration): Params = copy(maxDepositPeriod = Option(__v))
    def getVotingPeriod: com.google.protobuf.duration.Duration = votingPeriod.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearVotingPeriod: Params = copy(votingPeriod = _root_.scala.None)
    def withVotingPeriod(__v: com.google.protobuf.duration.Duration): Params = copy(votingPeriod = Option(__v))
    def withQuorum(__v: _root_.scala.Predef.String): Params = copy(quorum = __v)
    def withThreshold(__v: _root_.scala.Predef.String): Params = copy(threshold = __v)
    def withVetoThreshold(__v: _root_.scala.Predef.String): Params = copy(vetoThreshold = __v)
    def withMinInitialDepositRatio(__v: _root_.scala.Predef.String): Params = copy(minInitialDepositRatio = __v)
    def withProposalCancelRatio(__v: _root_.scala.Predef.String): Params = copy(proposalCancelRatio = __v)
    def withProposalCancelDest(__v: _root_.scala.Predef.String): Params = copy(proposalCancelDest = __v)
    def getExpeditedVotingPeriod: com.google.protobuf.duration.Duration = expeditedVotingPeriod.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearExpeditedVotingPeriod: Params = copy(expeditedVotingPeriod = _root_.scala.None)
    def withExpeditedVotingPeriod(__v: com.google.protobuf.duration.Duration): Params = copy(expeditedVotingPeriod = Option(__v))
    def withExpeditedThreshold(__v: _root_.scala.Predef.String): Params = copy(expeditedThreshold = __v)
    def clearExpeditedMinDeposit = copy(expeditedMinDeposit = _root_.scala.Seq.empty)
    def addExpeditedMinDeposit(__vs: cosmos.base.v1beta1.Coin *): Params = addAllExpeditedMinDeposit(__vs)
    def addAllExpeditedMinDeposit(__vs: Iterable[cosmos.base.v1beta1.Coin]): Params = copy(expeditedMinDeposit = expeditedMinDeposit ++ __vs)
    def withExpeditedMinDeposit(__v: _root_.scala.Seq[cosmos.base.v1beta1.Coin]): Params = copy(expeditedMinDeposit = __v)
    def withBurnVoteQuorum(__v: _root_.scala.Boolean): Params = copy(burnVoteQuorum = __v)
    def withBurnProposalDepositPrevote(__v: _root_.scala.Boolean): Params = copy(burnProposalDepositPrevote = __v)
    def withBurnVoteVeto(__v: _root_.scala.Boolean): Params = copy(burnVoteVeto = __v)
    def withMinDepositRatio(__v: _root_.scala.Predef.String): Params = copy(minDepositRatio = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => minDeposit
        case 2 => maxDepositPeriod.orNull
        case 3 => votingPeriod.orNull
        case 4 => {
          val __t = quorum
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = threshold
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = vetoThreshold
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = minInitialDepositRatio
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = proposalCancelRatio
          if (__t != "") __t else null
        }
        case 9 => {
          val __t = proposalCancelDest
          if (__t != "") __t else null
        }
        case 10 => expeditedVotingPeriod.orNull
        case 11 => {
          val __t = expeditedThreshold
          if (__t != "") __t else null
        }
        case 12 => expeditedMinDeposit
        case 13 => {
          val __t = burnVoteQuorum
          if (__t != false) __t else null
        }
        case 14 => {
          val __t = burnProposalDepositPrevote
          if (__t != false) __t else null
        }
        case 15 => {
          val __t = burnVoteVeto
          if (__t != false) __t else null
        }
        case 16 => {
          val __t = minDepositRatio
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(minDeposit.iterator.map(_.toPMessage).toVector)
        case 2 => maxDepositPeriod.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => votingPeriod.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PString(quorum)
        case 5 => _root_.scalapb.descriptors.PString(threshold)
        case 6 => _root_.scalapb.descriptors.PString(vetoThreshold)
        case 7 => _root_.scalapb.descriptors.PString(minInitialDepositRatio)
        case 8 => _root_.scalapb.descriptors.PString(proposalCancelRatio)
        case 9 => _root_.scalapb.descriptors.PString(proposalCancelDest)
        case 10 => expeditedVotingPeriod.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => _root_.scalapb.descriptors.PString(expeditedThreshold)
        case 12 => _root_.scalapb.descriptors.PRepeated(expeditedMinDeposit.iterator.map(_.toPMessage).toVector)
        case 13 => _root_.scalapb.descriptors.PBoolean(burnVoteQuorum)
        case 14 => _root_.scalapb.descriptors.PBoolean(burnProposalDepositPrevote)
        case 15 => _root_.scalapb.descriptors.PBoolean(burnVoteVeto)
        case 16 => _root_.scalapb.descriptors.PString(minDepositRatio)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.gov.v1.Params.type = cosmos.gov.v1.Params
    // @@protoc_insertion_point(GeneratedMessage[cosmos.gov.v1.Params])
}

object Params extends scalapb.GeneratedMessageCompanion[cosmos.gov.v1.Params] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.gov.v1.Params] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.gov.v1.Params = {
    val __minDeposit: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin]
    var __maxDepositPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __votingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __quorum: _root_.scala.Predef.String = ""
    var __threshold: _root_.scala.Predef.String = ""
    var __vetoThreshold: _root_.scala.Predef.String = ""
    var __minInitialDepositRatio: _root_.scala.Predef.String = ""
    var __proposalCancelRatio: _root_.scala.Predef.String = ""
    var __proposalCancelDest: _root_.scala.Predef.String = ""
    var __expeditedVotingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __expeditedThreshold: _root_.scala.Predef.String = ""
    val __expeditedMinDeposit: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin]
    var __burnVoteQuorum: _root_.scala.Boolean = false
    var __burnProposalDepositPrevote: _root_.scala.Boolean = false
    var __burnVoteVeto: _root_.scala.Boolean = false
    var __minDepositRatio: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __minDeposit += _root_.scalapb.LiteParser.readMessage[cosmos.base.v1beta1.Coin](_input__)
        case 18 =>
          __maxDepositPeriod = _root_.scala.Option(__maxDepositPeriod.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __votingPeriod = _root_.scala.Option(__votingPeriod.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __quorum = _input__.readStringRequireUtf8()
        case 42 =>
          __threshold = _input__.readStringRequireUtf8()
        case 50 =>
          __vetoThreshold = _input__.readStringRequireUtf8()
        case 58 =>
          __minInitialDepositRatio = _input__.readStringRequireUtf8()
        case 66 =>
          __proposalCancelRatio = _input__.readStringRequireUtf8()
        case 74 =>
          __proposalCancelDest = _input__.readStringRequireUtf8()
        case 82 =>
          __expeditedVotingPeriod = _root_.scala.Option(__expeditedVotingPeriod.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 90 =>
          __expeditedThreshold = _input__.readStringRequireUtf8()
        case 98 =>
          __expeditedMinDeposit += _root_.scalapb.LiteParser.readMessage[cosmos.base.v1beta1.Coin](_input__)
        case 104 =>
          __burnVoteQuorum = _input__.readBool()
        case 112 =>
          __burnProposalDepositPrevote = _input__.readBool()
        case 120 =>
          __burnVoteVeto = _input__.readBool()
        case 130 =>
          __minDepositRatio = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.gov.v1.Params(
        minDeposit = __minDeposit.result(),
        maxDepositPeriod = __maxDepositPeriod,
        votingPeriod = __votingPeriod,
        quorum = __quorum,
        threshold = __threshold,
        vetoThreshold = __vetoThreshold,
        minInitialDepositRatio = __minInitialDepositRatio,
        proposalCancelRatio = __proposalCancelRatio,
        proposalCancelDest = __proposalCancelDest,
        expeditedVotingPeriod = __expeditedVotingPeriod,
        expeditedThreshold = __expeditedThreshold,
        expeditedMinDeposit = __expeditedMinDeposit.result(),
        burnVoteQuorum = __burnVoteQuorum,
        burnProposalDepositPrevote = __burnProposalDepositPrevote,
        burnVoteVeto = __burnVoteVeto,
        minDepositRatio = __minDepositRatio,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.gov.v1.Params] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.gov.v1.Params(
        minDeposit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[cosmos.base.v1beta1.Coin]]).getOrElse(_root_.scala.Seq.empty),
        maxDepositPeriod = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        votingPeriod = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        quorum = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        threshold = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        vetoThreshold = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        minInitialDepositRatio = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        proposalCancelRatio = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        proposalCancelDest = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        expeditedVotingPeriod = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        expeditedThreshold = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        expeditedMinDeposit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Seq[cosmos.base.v1beta1.Coin]]).getOrElse(_root_.scala.Seq.empty),
        burnVoteQuorum = __fieldsMap.get(scalaDescriptor.findFieldByNumber(13).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        burnProposalDepositPrevote = __fieldsMap.get(scalaDescriptor.findFieldByNumber(14).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        burnVoteVeto = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        minDepositRatio = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.gov.v1.GovProto.javaDescriptor.getMessageTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.gov.v1.GovProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.base.v1beta1.Coin
      case 2 => __out = com.google.protobuf.duration.Duration
      case 3 => __out = com.google.protobuf.duration.Duration
      case 10 => __out = com.google.protobuf.duration.Duration
      case 12 => __out = cosmos.base.v1beta1.Coin
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.gov.v1.Params(
    minDeposit = _root_.scala.Seq.empty,
    maxDepositPeriod = _root_.scala.None,
    votingPeriod = _root_.scala.None,
    quorum = "",
    threshold = "",
    vetoThreshold = "",
    minInitialDepositRatio = "",
    proposalCancelRatio = "",
    proposalCancelDest = "",
    expeditedVotingPeriod = _root_.scala.None,
    expeditedThreshold = "",
    expeditedMinDeposit = _root_.scala.Seq.empty,
    burnVoteQuorum = false,
    burnProposalDepositPrevote = false,
    burnVoteVeto = false,
    minDepositRatio = ""
  )
  implicit class ParamsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1.Params]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.gov.v1.Params](_l) {
    def minDeposit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.v1beta1.Coin]] = field(_.minDeposit)((c_, f_) => c_.copy(minDeposit = f_))
    def maxDepositPeriod: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getMaxDepositPeriod)((c_, f_) => c_.copy(maxDepositPeriod = _root_.scala.Option(f_)))
    def optionalMaxDepositPeriod: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.maxDepositPeriod)((c_, f_) => c_.copy(maxDepositPeriod = f_))
    def votingPeriod: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getVotingPeriod)((c_, f_) => c_.copy(votingPeriod = _root_.scala.Option(f_)))
    def optionalVotingPeriod: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.votingPeriod)((c_, f_) => c_.copy(votingPeriod = f_))
    def quorum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.quorum)((c_, f_) => c_.copy(quorum = f_))
    def threshold: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.threshold)((c_, f_) => c_.copy(threshold = f_))
    def vetoThreshold: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.vetoThreshold)((c_, f_) => c_.copy(vetoThreshold = f_))
    def minInitialDepositRatio: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.minInitialDepositRatio)((c_, f_) => c_.copy(minInitialDepositRatio = f_))
    def proposalCancelRatio: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.proposalCancelRatio)((c_, f_) => c_.copy(proposalCancelRatio = f_))
    def proposalCancelDest: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.proposalCancelDest)((c_, f_) => c_.copy(proposalCancelDest = f_))
    def expeditedVotingPeriod: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getExpeditedVotingPeriod)((c_, f_) => c_.copy(expeditedVotingPeriod = _root_.scala.Option(f_)))
    def optionalExpeditedVotingPeriod: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.expeditedVotingPeriod)((c_, f_) => c_.copy(expeditedVotingPeriod = f_))
    def expeditedThreshold: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.expeditedThreshold)((c_, f_) => c_.copy(expeditedThreshold = f_))
    def expeditedMinDeposit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.v1beta1.Coin]] = field(_.expeditedMinDeposit)((c_, f_) => c_.copy(expeditedMinDeposit = f_))
    def burnVoteQuorum: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.burnVoteQuorum)((c_, f_) => c_.copy(burnVoteQuorum = f_))
    def burnProposalDepositPrevote: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.burnProposalDepositPrevote)((c_, f_) => c_.copy(burnProposalDepositPrevote = f_))
    def burnVoteVeto: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.burnVoteVeto)((c_, f_) => c_.copy(burnVoteVeto = f_))
    def minDepositRatio: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.minDepositRatio)((c_, f_) => c_.copy(minDepositRatio = f_))
  }
  final val MIN_DEPOSIT_FIELD_NUMBER = 1
  final val MAX_DEPOSIT_PERIOD_FIELD_NUMBER = 2
  final val VOTING_PERIOD_FIELD_NUMBER = 3
  final val QUORUM_FIELD_NUMBER = 4
  final val THRESHOLD_FIELD_NUMBER = 5
  final val VETO_THRESHOLD_FIELD_NUMBER = 6
  final val MIN_INITIAL_DEPOSIT_RATIO_FIELD_NUMBER = 7
  final val PROPOSAL_CANCEL_RATIO_FIELD_NUMBER = 8
  final val PROPOSAL_CANCEL_DEST_FIELD_NUMBER = 9
  final val EXPEDITED_VOTING_PERIOD_FIELD_NUMBER = 10
  final val EXPEDITED_THRESHOLD_FIELD_NUMBER = 11
  final val EXPEDITED_MIN_DEPOSIT_FIELD_NUMBER = 12
  final val BURN_VOTE_QUORUM_FIELD_NUMBER = 13
  final val BURN_PROPOSAL_DEPOSIT_PREVOTE_FIELD_NUMBER = 14
  final val BURN_VOTE_VETO_FIELD_NUMBER = 15
  final val MIN_DEPOSIT_RATIO_FIELD_NUMBER = 16
  def of(
    minDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin],
    maxDepositPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration],
    votingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration],
    quorum: _root_.scala.Predef.String,
    threshold: _root_.scala.Predef.String,
    vetoThreshold: _root_.scala.Predef.String,
    minInitialDepositRatio: _root_.scala.Predef.String,
    proposalCancelRatio: _root_.scala.Predef.String,
    proposalCancelDest: _root_.scala.Predef.String,
    expeditedVotingPeriod: _root_.scala.Option[com.google.protobuf.duration.Duration],
    expeditedThreshold: _root_.scala.Predef.String,
    expeditedMinDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin],
    burnVoteQuorum: _root_.scala.Boolean,
    burnProposalDepositPrevote: _root_.scala.Boolean,
    burnVoteVeto: _root_.scala.Boolean,
    minDepositRatio: _root_.scala.Predef.String
  ): _root_.cosmos.gov.v1.Params = _root_.cosmos.gov.v1.Params(
    minDeposit,
    maxDepositPeriod,
    votingPeriod,
    quorum,
    threshold,
    vetoThreshold,
    minInitialDepositRatio,
    proposalCancelRatio,
    proposalCancelDest,
    expeditedVotingPeriod,
    expeditedThreshold,
    expeditedMinDeposit,
    burnVoteQuorum,
    burnProposalDepositPrevote,
    burnVoteVeto,
    minDepositRatio
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.gov.v1.Params])
}
