// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1

object QueryProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    cosmos.base.query.v1beta1.PaginationProto,
    com.google.api.AnnotationsProto,
    cosmos.gov.v1.GovProto,
    cosmos_proto.CosmosProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      cosmos.gov.v1.QueryConstitutionRequest,
      cosmos.gov.v1.QueryConstitutionResponse,
      cosmos.gov.v1.QueryProposalRequest,
      cosmos.gov.v1.QueryProposalResponse,
      cosmos.gov.v1.QueryProposalsRequest,
      cosmos.gov.v1.QueryProposalsResponse,
      cosmos.gov.v1.QueryVoteRequest,
      cosmos.gov.v1.QueryVoteResponse,
      cosmos.gov.v1.QueryVotesRequest,
      cosmos.gov.v1.QueryVotesResponse,
      cosmos.gov.v1.QueryParamsRequest,
      cosmos.gov.v1.QueryParamsResponse,
      cosmos.gov.v1.QueryDepositRequest,
      cosmos.gov.v1.QueryDepositResponse,
      cosmos.gov.v1.QueryDepositsRequest,
      cosmos.gov.v1.QueryDepositsResponse,
      cosmos.gov.v1.QueryTallyResultRequest,
      cosmos.gov.v1.QueryTallyResultResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Chljb3Ntb3MvZ292L3YxL3F1ZXJ5LnByb3RvEg1jb3Ntb3MuZ292LnYxGipjb3Ntb3MvYmFzZS9xdWVyeS92MWJldGExL3BhZ
  2luYXRpb24ucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aF2Nvc21vcy9nb3YvdjEvZ292LnByb3RvGhljb3Ntb
  3NfcHJvdG8vY29zbW9zLnByb3RvIhoKGFF1ZXJ5Q29uc3RpdHV0aW9uUmVxdWVzdCJSChlRdWVyeUNvbnN0aXR1dGlvblJlc3Bvb
  nNlEjUKDGNvbnN0aXR1dGlvbhgBIAEoCUIR4j8OEgxjb25zdGl0dXRpb25SDGNvbnN0aXR1dGlvbiJIChRRdWVyeVByb3Bvc2FsU
  mVxdWVzdBIwCgtwcm9wb3NhbF9pZBgBIAEoBEIP4j8MEgpwcm9wb3NhbElkUgpwcm9wb3NhbElkIlsKFVF1ZXJ5UHJvcG9zYWxSZ
  XNwb25zZRJCCghwcm9wb3NhbBgBIAEoCzIXLmNvc21vcy5nb3YudjEuUHJvcG9zYWxCDeI/ChIIcHJvcG9zYWxSCHByb3Bvc2FsI
  s0CChVRdWVyeVByb3Bvc2Fsc1JlcXVlc3QSWwoPcHJvcG9zYWxfc3RhdHVzGAEgASgOMh0uY29zbW9zLmdvdi52MS5Qcm9wb3Nhb
  FN0YXR1c0IT4j8QEg5wcm9wb3NhbFN0YXR1c1IOcHJvcG9zYWxTdGF0dXMSOAoFdm90ZXIYAiABKAlCIuI/BxIFdm90ZXLStC0UY
  29zbW9zLkFkZHJlc3NTdHJpbmdSBXZvdGVyEkQKCWRlcG9zaXRvchgDIAEoCUIm4j8LEglkZXBvc2l0b3LStC0UY29zbW9zLkFkZ
  HJlc3NTdHJpbmdSCWRlcG9zaXRvchJXCgpwYWdpbmF0aW9uGAQgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlU
  mVxdWVzdEIP4j8MEgpwYWdpbmF0aW9uUgpwYWdpbmF0aW9uIrkBChZRdWVyeVByb3Bvc2Fsc1Jlc3BvbnNlEkUKCXByb3Bvc2Fsc
  xgBIAMoCzIXLmNvc21vcy5nb3YudjEuUHJvcG9zYWxCDuI/CxIJcHJvcG9zYWxzUglwcm9wb3NhbHMSWAoKcGFnaW5hdGlvbhgCI
  AEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlc3BvbnNlQg/iPwwSCnBhZ2luYXRpb25SCnBhZ2luYXRpb24if
  goQUXVlcnlWb3RlUmVxdWVzdBIwCgtwcm9wb3NhbF9pZBgBIAEoBEIP4j8MEgpwcm9wb3NhbElkUgpwcm9wb3NhbElkEjgKBXZvd
  GVyGAIgASgJQiLiPwcSBXZvdGVy0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgV2b3RlciJHChFRdWVyeVZvdGVSZXNwb25zZRIyC
  gR2b3RlGAEgASgLMhMuY29zbW9zLmdvdi52MS5Wb3RlQgniPwYSBHZvdGVSBHZvdGUingEKEVF1ZXJ5Vm90ZXNSZXF1ZXN0EjAKC
  3Byb3Bvc2FsX2lkGAEgASgEQg/iPwwSCnByb3Bvc2FsSWRSCnByb3Bvc2FsSWQSVwoKcGFnaW5hdGlvbhgCIAEoCzImLmNvc21vc
  y5iYXNlLnF1ZXJ5LnYxYmV0YTEuUGFnZVJlcXVlc3RCD+I/DBIKcGFnaW5hdGlvblIKcGFnaW5hdGlvbiKlAQoSUXVlcnlWb3Rlc
  1Jlc3BvbnNlEjUKBXZvdGVzGAEgAygLMhMuY29zbW9zLmdvdi52MS5Wb3RlQgriPwcSBXZvdGVzUgV2b3RlcxJYCgpwYWdpbmF0a
  W9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2VCD+I/DBIKcGFnaW5hdGlvblIKcGFnaW5hd
  GlvbiJGChJRdWVyeVBhcmFtc1JlcXVlc3QSMAoLcGFyYW1zX3R5cGUYASABKAlCD+I/DBIKcGFyYW1zVHlwZVIKcGFyYW1zVHlwZ
  SLpAgoTUXVlcnlQYXJhbXNSZXNwb25zZRJVCg12b3RpbmdfcGFyYW1zGAEgASgLMhsuY29zbW9zLmdvdi52MS5Wb3RpbmdQYXJhb
  XNCExgB4j8OEgx2b3RpbmdQYXJhbXNSDHZvdGluZ1BhcmFtcxJZCg5kZXBvc2l0X3BhcmFtcxgCIAEoCzIcLmNvc21vcy5nb3Yud
  jEuRGVwb3NpdFBhcmFtc0IUGAHiPw8SDWRlcG9zaXRQYXJhbXNSDWRlcG9zaXRQYXJhbXMSUQoMdGFsbHlfcGFyYW1zGAMgASgLM
  houY29zbW9zLmdvdi52MS5UYWxseVBhcmFtc0ISGAHiPw0SC3RhbGx5UGFyYW1zUgt0YWxseVBhcmFtcxJNCgZwYXJhbXMYBCABK
  AsyFS5jb3Ntb3MuZ292LnYxLlBhcmFtc0Ie4j8IEgZwYXJhbXPatC0PY29zbW9zLXNkayAwLjQ3UgZwYXJhbXMijQEKE1F1ZXJ5R
  GVwb3NpdFJlcXVlc3QSMAoLcHJvcG9zYWxfaWQYASABKARCD+I/DBIKcHJvcG9zYWxJZFIKcHJvcG9zYWxJZBJECglkZXBvc2l0b
  3IYAiABKAlCJuI/CxIJZGVwb3NpdG9y0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUglkZXBvc2l0b3IiVgoUUXVlcnlEZXBvc2l0U
  mVzcG9uc2USPgoHZGVwb3NpdBgBIAEoCzIWLmNvc21vcy5nb3YudjEuRGVwb3NpdEIM4j8JEgdkZXBvc2l0UgdkZXBvc2l0IqEBC
  hRRdWVyeURlcG9zaXRzUmVxdWVzdBIwCgtwcm9wb3NhbF9pZBgBIAEoBEIP4j8MEgpwcm9wb3NhbElkUgpwcm9wb3NhbElkElcKC
  nBhZ2luYXRpb24YAiABKAsyJi5jb3Ntb3MuYmFzZS5xdWVyeS52MWJldGExLlBhZ2VSZXF1ZXN0Qg/iPwwSCnBhZ2luYXRpb25SC
  nBhZ2luYXRpb24itAEKFVF1ZXJ5RGVwb3NpdHNSZXNwb25zZRJBCghkZXBvc2l0cxgBIAMoCzIWLmNvc21vcy5nb3YudjEuRGVwb
  3NpdEIN4j8KEghkZXBvc2l0c1IIZGVwb3NpdHMSWAoKcGFnaW5hdGlvbhgCIAEoCzInLmNvc21vcy5iYXNlLnF1ZXJ5LnYxYmV0Y
  TEuUGFnZVJlc3BvbnNlQg/iPwwSCnBhZ2luYXRpb25SCnBhZ2luYXRpb24iSwoXUXVlcnlUYWxseVJlc3VsdFJlcXVlc3QSMAoLc
  HJvcG9zYWxfaWQYASABKARCD+I/DBIKcHJvcG9zYWxJZFIKcHJvcG9zYWxJZCJYChhRdWVyeVRhbGx5UmVzdWx0UmVzcG9uc2USP
  AoFdGFsbHkYASABKAsyGi5jb3Ntb3MuZ292LnYxLlRhbGx5UmVzdWx0QgriPwcSBXRhbGx5UgV0YWxseTLjCQoFUXVlcnkShgEKD
  ENvbnN0aXR1dGlvbhInLmNvc21vcy5nb3YudjEuUXVlcnlDb25zdGl0dXRpb25SZXF1ZXN0GiguY29zbW9zLmdvdi52MS5RdWVye
  UNvbnN0aXR1dGlvblJlc3BvbnNlIiOC0+STAh0SGy9jb3Ntb3MvZ292L3YxL2NvbnN0aXR1dGlvbhKFAQoIUHJvcG9zYWwSIy5jb
  3Ntb3MuZ292LnYxLlF1ZXJ5UHJvcG9zYWxSZXF1ZXN0GiQuY29zbW9zLmdvdi52MS5RdWVyeVByb3Bvc2FsUmVzcG9uc2UiLoLT5
  JMCKBImL2Nvc21vcy9nb3YvdjEvcHJvcG9zYWxzL3twcm9wb3NhbF9pZH0SegoJUHJvcG9zYWxzEiQuY29zbW9zLmdvdi52MS5Rd
  WVyeVByb3Bvc2Fsc1JlcXVlc3QaJS5jb3Ntb3MuZ292LnYxLlF1ZXJ5UHJvcG9zYWxzUmVzcG9uc2UiIILT5JMCGhIYL2Nvc21vc
  y9nb3YvdjEvcHJvcG9zYWxzEocBCgRWb3RlEh8uY29zbW9zLmdvdi52MS5RdWVyeVZvdGVSZXF1ZXN0GiAuY29zbW9zLmdvdi52M
  S5RdWVyeVZvdGVSZXNwb25zZSI8gtPkkwI2EjQvY29zbW9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS92b3Rlcy97d
  m90ZXJ9EoIBCgVWb3RlcxIgLmNvc21vcy5nb3YudjEuUXVlcnlWb3Rlc1JlcXVlc3QaIS5jb3Ntb3MuZ292LnYxLlF1ZXJ5Vm90Z
  XNSZXNwb25zZSI0gtPkkwIuEiwvY29zbW9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS92b3RlcxJ8CgZQYXJhbXMSI
  S5jb3Ntb3MuZ292LnYxLlF1ZXJ5UGFyYW1zUmVxdWVzdBoiLmNvc21vcy5nb3YudjEuUXVlcnlQYXJhbXNSZXNwb25zZSIrgtPkk
  wIlEiMvY29zbW9zL2dvdi92MS9wYXJhbXMve3BhcmFtc190eXBlfRKXAQoHRGVwb3NpdBIiLmNvc21vcy5nb3YudjEuUXVlcnlEZ
  XBvc2l0UmVxdWVzdBojLmNvc21vcy5nb3YudjEuUXVlcnlEZXBvc2l0UmVzcG9uc2UiQ4LT5JMCPRI7L2Nvc21vcy9nb3YvdjEvc
  HJvcG9zYWxzL3twcm9wb3NhbF9pZH0vZGVwb3NpdHMve2RlcG9zaXRvcn0SjgEKCERlcG9zaXRzEiMuY29zbW9zLmdvdi52MS5Rd
  WVyeURlcG9zaXRzUmVxdWVzdBokLmNvc21vcy5nb3YudjEuUXVlcnlEZXBvc2l0c1Jlc3BvbnNlIjeC0+STAjESLy9jb3Ntb3MvZ
  292L3YxL3Byb3Bvc2Fscy97cHJvcG9zYWxfaWR9L2RlcG9zaXRzEpQBCgtUYWxseVJlc3VsdBImLmNvc21vcy5nb3YudjEuUXVlc
  nlUYWxseVJlc3VsdFJlcXVlc3QaJy5jb3Ntb3MuZ292LnYxLlF1ZXJ5VGFsbHlSZXN1bHRSZXNwb25zZSI0gtPkkwIuEiwvY29zb
  W9zL2dvdi92MS9wcm9wb3NhbHMve3Byb3Bvc2FsX2lkfS90YWxseUItWitnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3gvZ
  292L3R5cGVzL3YxYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      cosmos.base.query.v1beta1.PaginationProto.javaDescriptor,
      com.google.api.AnnotationsProto.javaDescriptor,
      cosmos.gov.v1.GovProto.javaDescriptor,
      cosmos_proto.CosmosProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}