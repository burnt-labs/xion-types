// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1beta1

/** Vote defines a vote on a governance proposal.
  * A Vote consists of a proposal ID, the voter, and the vote option.
  *
  * @param proposalId
  *   proposal_id defines the unique id of the proposal.
  * @param voter
  *   voter is the voter address of the proposal.
  * @param option
  *   Deprecated: Prefer to use `options` instead. This field is set in queries
  *   if and only if `len(options) == 1` and that option has weight 1. In all
  *   other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
  * @param options
  *   options is the weighted vote options.
  */
@SerialVersionUID(0L)
final case class Vote(
    proposalId: _root_.scala.Long = 0L,
    voter: _root_.scala.Predef.String = "",
    @scala.deprecated(message="Marked as deprecated in proto file", "") option: cosmos.gov.v1beta1.VoteOption = cosmos.gov.v1beta1.VoteOption.VOTE_OPTION_UNSPECIFIED,
    options: _root_.scala.Seq[cosmos.gov.v1beta1.WeightedVoteOption] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Vote] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = proposalId
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = voter
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = option.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      options.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = proposalId
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = voter
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = option.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      options.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withProposalId(__v: _root_.scala.Long): Vote = copy(proposalId = __v)
    def withVoter(__v: _root_.scala.Predef.String): Vote = copy(voter = __v)
    def withOption(__v: cosmos.gov.v1beta1.VoteOption): Vote = copy(option = __v)
    def clearOptions = copy(options = _root_.scala.Seq.empty)
    def addOptions(__vs: cosmos.gov.v1beta1.WeightedVoteOption *): Vote = addAllOptions(__vs)
    def addAllOptions(__vs: Iterable[cosmos.gov.v1beta1.WeightedVoteOption]): Vote = copy(options = options ++ __vs)
    def withOptions(__v: _root_.scala.Seq[cosmos.gov.v1beta1.WeightedVoteOption]): Vote = copy(options = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = proposalId
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = voter
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = option.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => options
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(proposalId)
        case 2 => _root_.scalapb.descriptors.PString(voter)
        case 3 => _root_.scalapb.descriptors.PEnum(option.scalaValueDescriptor)
        case 4 => _root_.scalapb.descriptors.PRepeated(options.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.gov.v1beta1.Vote.type = cosmos.gov.v1beta1.Vote
    // @@protoc_insertion_point(GeneratedMessage[cosmos.gov.v1beta1.Vote])
}

object Vote extends scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.Vote] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.Vote] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.gov.v1beta1.Vote = {
    var __proposalId: _root_.scala.Long = 0L
    var __voter: _root_.scala.Predef.String = ""
    var __option: cosmos.gov.v1beta1.VoteOption = cosmos.gov.v1beta1.VoteOption.VOTE_OPTION_UNSPECIFIED
    val __options: _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.WeightedVoteOption] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.WeightedVoteOption]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __proposalId = _input__.readUInt64()
        case 18 =>
          __voter = _input__.readStringRequireUtf8()
        case 24 =>
          __option = cosmos.gov.v1beta1.VoteOption.fromValue(_input__.readEnum())
        case 34 =>
          __options += _root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.WeightedVoteOption](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.gov.v1beta1.Vote(
        proposalId = __proposalId,
        voter = __voter,
        option = __option,
        options = __options.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.gov.v1beta1.Vote] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.gov.v1beta1.Vote(
        proposalId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        voter = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        option = cosmos.gov.v1beta1.VoteOption.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmos.gov.v1beta1.VoteOption.VOTE_OPTION_UNSPECIFIED.scalaValueDescriptor).number),
        options = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[cosmos.gov.v1beta1.WeightedVoteOption]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.gov.v1beta1.GovProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.gov.v1beta1.GovProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = cosmos.gov.v1beta1.WeightedVoteOption
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => cosmos.gov.v1beta1.VoteOption
    }
  }
  lazy val defaultInstance = cosmos.gov.v1beta1.Vote(
    proposalId = 0L,
    voter = "",
    option = cosmos.gov.v1beta1.VoteOption.VOTE_OPTION_UNSPECIFIED,
    options = _root_.scala.Seq.empty
  )
  implicit class VoteLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.Vote]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.gov.v1beta1.Vote](_l) {
    def proposalId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.proposalId)((c_, f_) => c_.copy(proposalId = f_))
    def voter: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.voter)((c_, f_) => c_.copy(voter = f_))
    def option: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.VoteOption] = field(_.option)((c_, f_) => c_.copy(option = f_))
    def options: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.gov.v1beta1.WeightedVoteOption]] = field(_.options)((c_, f_) => c_.copy(options = f_))
  }
  final val PROPOSAL_ID_FIELD_NUMBER = 1
  final val VOTER_FIELD_NUMBER = 2
  final val OPTION_FIELD_NUMBER = 3
  final val OPTIONS_FIELD_NUMBER = 4
  def of(
    proposalId: _root_.scala.Long,
    voter: _root_.scala.Predef.String,
    option: cosmos.gov.v1beta1.VoteOption,
    options: _root_.scala.Seq[cosmos.gov.v1beta1.WeightedVoteOption]
  ): _root_.cosmos.gov.v1beta1.Vote = _root_.cosmos.gov.v1beta1.Vote(
    proposalId,
    voter,
    option,
    options
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.gov.v1beta1.Vote])
}
