// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1beta1

/** QueryParamsResponse is the response type for the Query/Params RPC method.
  *
  * @param votingParams
  *   voting_params defines the parameters related to voting.
  * @param depositParams
  *   deposit_params defines the parameters related to deposit.
  * @param tallyParams
  *   tally_params defines the parameters related to tally.
  */
@SerialVersionUID(0L)
final case class QueryParamsResponse(
    votingParams: _root_.scala.Option[cosmos.gov.v1beta1.VotingParams] = _root_.scala.None,
    depositParams: _root_.scala.Option[cosmos.gov.v1beta1.DepositParams] = _root_.scala.None,
    tallyParams: _root_.scala.Option[cosmos.gov.v1beta1.TallyParams] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[QueryParamsResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (votingParams.isDefined) {
        val __value = votingParams.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (depositParams.isDefined) {
        val __value = depositParams.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (tallyParams.isDefined) {
        val __value = tallyParams.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      votingParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      depositParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      tallyParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def getVotingParams: cosmos.gov.v1beta1.VotingParams = votingParams.getOrElse(cosmos.gov.v1beta1.VotingParams.defaultInstance)
    def clearVotingParams: QueryParamsResponse = copy(votingParams = _root_.scala.None)
    def withVotingParams(__v: cosmos.gov.v1beta1.VotingParams): QueryParamsResponse = copy(votingParams = Option(__v))
    def getDepositParams: cosmos.gov.v1beta1.DepositParams = depositParams.getOrElse(cosmos.gov.v1beta1.DepositParams.defaultInstance)
    def clearDepositParams: QueryParamsResponse = copy(depositParams = _root_.scala.None)
    def withDepositParams(__v: cosmos.gov.v1beta1.DepositParams): QueryParamsResponse = copy(depositParams = Option(__v))
    def getTallyParams: cosmos.gov.v1beta1.TallyParams = tallyParams.getOrElse(cosmos.gov.v1beta1.TallyParams.defaultInstance)
    def clearTallyParams: QueryParamsResponse = copy(tallyParams = _root_.scala.None)
    def withTallyParams(__v: cosmos.gov.v1beta1.TallyParams): QueryParamsResponse = copy(tallyParams = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => votingParams.orNull
        case 2 => depositParams.orNull
        case 3 => tallyParams.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => votingParams.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => depositParams.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => tallyParams.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.gov.v1beta1.QueryParamsResponse.type = cosmos.gov.v1beta1.QueryParamsResponse
    // @@protoc_insertion_point(GeneratedMessage[cosmos.gov.v1beta1.QueryParamsResponse])
}

object QueryParamsResponse extends scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.QueryParamsResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.QueryParamsResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.gov.v1beta1.QueryParamsResponse = {
    var __votingParams: _root_.scala.Option[cosmos.gov.v1beta1.VotingParams] = _root_.scala.None
    var __depositParams: _root_.scala.Option[cosmos.gov.v1beta1.DepositParams] = _root_.scala.None
    var __tallyParams: _root_.scala.Option[cosmos.gov.v1beta1.TallyParams] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __votingParams = _root_.scala.Option(__votingParams.fold(_root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.VotingParams](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __depositParams = _root_.scala.Option(__depositParams.fold(_root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.DepositParams](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __tallyParams = _root_.scala.Option(__tallyParams.fold(_root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.TallyParams](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.gov.v1beta1.QueryParamsResponse(
        votingParams = __votingParams,
        depositParams = __depositParams,
        tallyParams = __tallyParams,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.gov.v1beta1.QueryParamsResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.gov.v1beta1.QueryParamsResponse(
        votingParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[cosmos.gov.v1beta1.VotingParams]]),
        depositParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[cosmos.gov.v1beta1.DepositParams]]),
        tallyParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[cosmos.gov.v1beta1.TallyParams]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.gov.v1beta1.QueryProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.gov.v1beta1.QueryProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = cosmos.gov.v1beta1.VotingParams
      case 2 => __out = cosmos.gov.v1beta1.DepositParams
      case 3 => __out = cosmos.gov.v1beta1.TallyParams
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.gov.v1beta1.QueryParamsResponse(
    votingParams = _root_.scala.None,
    depositParams = _root_.scala.None,
    tallyParams = _root_.scala.None
  )
  implicit class QueryParamsResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.QueryParamsResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.gov.v1beta1.QueryParamsResponse](_l) {
    def votingParams: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.VotingParams] = field(_.getVotingParams)((c_, f_) => c_.copy(votingParams = _root_.scala.Option(f_)))
    def optionalVotingParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.gov.v1beta1.VotingParams]] = field(_.votingParams)((c_, f_) => c_.copy(votingParams = f_))
    def depositParams: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.DepositParams] = field(_.getDepositParams)((c_, f_) => c_.copy(depositParams = _root_.scala.Option(f_)))
    def optionalDepositParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.gov.v1beta1.DepositParams]] = field(_.depositParams)((c_, f_) => c_.copy(depositParams = f_))
    def tallyParams: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.TallyParams] = field(_.getTallyParams)((c_, f_) => c_.copy(tallyParams = _root_.scala.Option(f_)))
    def optionalTallyParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.gov.v1beta1.TallyParams]] = field(_.tallyParams)((c_, f_) => c_.copy(tallyParams = f_))
  }
  final val VOTING_PARAMS_FIELD_NUMBER = 1
  final val DEPOSIT_PARAMS_FIELD_NUMBER = 2
  final val TALLY_PARAMS_FIELD_NUMBER = 3
  def of(
    votingParams: _root_.scala.Option[cosmos.gov.v1beta1.VotingParams],
    depositParams: _root_.scala.Option[cosmos.gov.v1beta1.DepositParams],
    tallyParams: _root_.scala.Option[cosmos.gov.v1beta1.TallyParams]
  ): _root_.cosmos.gov.v1beta1.QueryParamsResponse = _root_.cosmos.gov.v1beta1.QueryParamsResponse(
    votingParams,
    depositParams,
    tallyParams
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.gov.v1beta1.QueryParamsResponse])
}
