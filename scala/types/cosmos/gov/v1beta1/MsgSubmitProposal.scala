// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1beta1

/** MsgSubmitProposal defines an sdk.Msg type that supports submitting arbitrary
  * proposal Content.
  *
  * @param content
  *   content is the proposal's content.
  * @param initialDeposit
  *   initial_deposit is the deposit value that must be paid at proposal submission.
  * @param proposer
  *   proposer is the account address of the proposer.
  */
@SerialVersionUID(0L)
final case class MsgSubmitProposal(
    content: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    initialDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin] = _root_.scala.Seq.empty,
    proposer: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgSubmitProposal] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (content.isDefined) {
        val __value = content.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      initialDeposit.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = proposer
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      content.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      initialDeposit.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = proposer
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def getContent: com.google.protobuf.any.Any = content.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearContent: MsgSubmitProposal = copy(content = _root_.scala.None)
    def withContent(__v: com.google.protobuf.any.Any): MsgSubmitProposal = copy(content = Option(__v))
    def clearInitialDeposit = copy(initialDeposit = _root_.scala.Seq.empty)
    def addInitialDeposit(__vs: cosmos.base.v1beta1.Coin *): MsgSubmitProposal = addAllInitialDeposit(__vs)
    def addAllInitialDeposit(__vs: Iterable[cosmos.base.v1beta1.Coin]): MsgSubmitProposal = copy(initialDeposit = initialDeposit ++ __vs)
    def withInitialDeposit(__v: _root_.scala.Seq[cosmos.base.v1beta1.Coin]): MsgSubmitProposal = copy(initialDeposit = __v)
    def withProposer(__v: _root_.scala.Predef.String): MsgSubmitProposal = copy(proposer = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => content.orNull
        case 2 => initialDeposit
        case 3 => {
          val __t = proposer
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => content.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => _root_.scalapb.descriptors.PRepeated(initialDeposit.iterator.map(_.toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PString(proposer)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.gov.v1beta1.MsgSubmitProposal.type = cosmos.gov.v1beta1.MsgSubmitProposal
    // @@protoc_insertion_point(GeneratedMessage[cosmos.gov.v1beta1.MsgSubmitProposal])
}

object MsgSubmitProposal extends scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.MsgSubmitProposal] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.MsgSubmitProposal] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.gov.v1beta1.MsgSubmitProposal = {
    var __content: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    val __initialDeposit: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin]
    var __proposer: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __content = _root_.scala.Option(__content.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __initialDeposit += _root_.scalapb.LiteParser.readMessage[cosmos.base.v1beta1.Coin](_input__)
        case 26 =>
          __proposer = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.gov.v1beta1.MsgSubmitProposal(
        content = __content,
        initialDeposit = __initialDeposit.result(),
        proposer = __proposer,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.gov.v1beta1.MsgSubmitProposal] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.gov.v1beta1.MsgSubmitProposal(
        content = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        initialDeposit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[cosmos.base.v1beta1.Coin]]).getOrElse(_root_.scala.Seq.empty),
        proposer = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.gov.v1beta1.TxProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.gov.v1beta1.TxProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = com.google.protobuf.any.Any
      case 2 => __out = cosmos.base.v1beta1.Coin
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.gov.v1beta1.MsgSubmitProposal(
    content = _root_.scala.None,
    initialDeposit = _root_.scala.Seq.empty,
    proposer = ""
  )
  implicit class MsgSubmitProposalLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.MsgSubmitProposal]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.gov.v1beta1.MsgSubmitProposal](_l) {
    def content: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getContent)((c_, f_) => c_.copy(content = _root_.scala.Option(f_)))
    def optionalContent: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.content)((c_, f_) => c_.copy(content = f_))
    def initialDeposit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.v1beta1.Coin]] = field(_.initialDeposit)((c_, f_) => c_.copy(initialDeposit = f_))
    def proposer: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.proposer)((c_, f_) => c_.copy(proposer = f_))
  }
  final val CONTENT_FIELD_NUMBER = 1
  final val INITIAL_DEPOSIT_FIELD_NUMBER = 2
  final val PROPOSER_FIELD_NUMBER = 3
  def of(
    content: _root_.scala.Option[com.google.protobuf.any.Any],
    initialDeposit: _root_.scala.Seq[cosmos.base.v1beta1.Coin],
    proposer: _root_.scala.Predef.String
  ): _root_.cosmos.gov.v1beta1.MsgSubmitProposal = _root_.cosmos.gov.v1beta1.MsgSubmitProposal(
    content,
    initialDeposit,
    proposer
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.gov.v1beta1.MsgSubmitProposal])
}
