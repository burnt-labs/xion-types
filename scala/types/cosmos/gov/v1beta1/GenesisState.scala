// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmos.gov.v1beta1

/** GenesisState defines the gov module's genesis state.
  *
  * @param startingProposalId
  *   starting_proposal_id is the ID of the starting proposal.
  * @param deposits
  *   deposits defines all the deposits present at genesis.
  * @param votes
  *   votes defines all the votes present at genesis.
  * @param proposals
  *   proposals defines all the proposals present at genesis.
  * @param depositParams
  *   deposit_params defines all the parameters related to deposit.
  * @param votingParams
  *   voting_params defines all the parameters related to voting.
  * @param tallyParams
  *   tally_params defines all the parameters related to tally.
  */
@SerialVersionUID(0L)
final case class GenesisState(
    startingProposalId: _root_.scala.Long = 0L,
    deposits: _root_.scala.Seq[cosmos.gov.v1beta1.Deposit] = _root_.scala.Seq.empty,
    votes: _root_.scala.Seq[cosmos.gov.v1beta1.Vote] = _root_.scala.Seq.empty,
    proposals: _root_.scala.Seq[cosmos.gov.v1beta1.Proposal] = _root_.scala.Seq.empty,
    depositParams: _root_.scala.Option[cosmos.gov.v1beta1.DepositParams] = _root_.scala.None,
    votingParams: _root_.scala.Option[cosmos.gov.v1beta1.VotingParams] = _root_.scala.None,
    tallyParams: _root_.scala.Option[cosmos.gov.v1beta1.TallyParams] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GenesisState] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = startingProposalId
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      deposits.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      votes.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      proposals.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (depositParams.isDefined) {
        val __value = depositParams.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (votingParams.isDefined) {
        val __value = votingParams.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (tallyParams.isDefined) {
        val __value = tallyParams.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = startingProposalId
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      deposits.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      votes.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      proposals.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      depositParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      votingParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      tallyParams.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withStartingProposalId(__v: _root_.scala.Long): GenesisState = copy(startingProposalId = __v)
    def clearDeposits = copy(deposits = _root_.scala.Seq.empty)
    def addDeposits(__vs: cosmos.gov.v1beta1.Deposit *): GenesisState = addAllDeposits(__vs)
    def addAllDeposits(__vs: Iterable[cosmos.gov.v1beta1.Deposit]): GenesisState = copy(deposits = deposits ++ __vs)
    def withDeposits(__v: _root_.scala.Seq[cosmos.gov.v1beta1.Deposit]): GenesisState = copy(deposits = __v)
    def clearVotes = copy(votes = _root_.scala.Seq.empty)
    def addVotes(__vs: cosmos.gov.v1beta1.Vote *): GenesisState = addAllVotes(__vs)
    def addAllVotes(__vs: Iterable[cosmos.gov.v1beta1.Vote]): GenesisState = copy(votes = votes ++ __vs)
    def withVotes(__v: _root_.scala.Seq[cosmos.gov.v1beta1.Vote]): GenesisState = copy(votes = __v)
    def clearProposals = copy(proposals = _root_.scala.Seq.empty)
    def addProposals(__vs: cosmos.gov.v1beta1.Proposal *): GenesisState = addAllProposals(__vs)
    def addAllProposals(__vs: Iterable[cosmos.gov.v1beta1.Proposal]): GenesisState = copy(proposals = proposals ++ __vs)
    def withProposals(__v: _root_.scala.Seq[cosmos.gov.v1beta1.Proposal]): GenesisState = copy(proposals = __v)
    def getDepositParams: cosmos.gov.v1beta1.DepositParams = depositParams.getOrElse(cosmos.gov.v1beta1.DepositParams.defaultInstance)
    def clearDepositParams: GenesisState = copy(depositParams = _root_.scala.None)
    def withDepositParams(__v: cosmos.gov.v1beta1.DepositParams): GenesisState = copy(depositParams = Option(__v))
    def getVotingParams: cosmos.gov.v1beta1.VotingParams = votingParams.getOrElse(cosmos.gov.v1beta1.VotingParams.defaultInstance)
    def clearVotingParams: GenesisState = copy(votingParams = _root_.scala.None)
    def withVotingParams(__v: cosmos.gov.v1beta1.VotingParams): GenesisState = copy(votingParams = Option(__v))
    def getTallyParams: cosmos.gov.v1beta1.TallyParams = tallyParams.getOrElse(cosmos.gov.v1beta1.TallyParams.defaultInstance)
    def clearTallyParams: GenesisState = copy(tallyParams = _root_.scala.None)
    def withTallyParams(__v: cosmos.gov.v1beta1.TallyParams): GenesisState = copy(tallyParams = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = startingProposalId
          if (__t != 0L) __t else null
        }
        case 2 => deposits
        case 3 => votes
        case 4 => proposals
        case 5 => depositParams.orNull
        case 6 => votingParams.orNull
        case 7 => tallyParams.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(startingProposalId)
        case 2 => _root_.scalapb.descriptors.PRepeated(deposits.iterator.map(_.toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(votes.iterator.map(_.toPMessage).toVector)
        case 4 => _root_.scalapb.descriptors.PRepeated(proposals.iterator.map(_.toPMessage).toVector)
        case 5 => depositParams.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => votingParams.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => tallyParams.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmos.gov.v1beta1.GenesisState.type = cosmos.gov.v1beta1.GenesisState
    // @@protoc_insertion_point(GeneratedMessage[cosmos.gov.v1beta1.GenesisState])
}

object GenesisState extends scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.GenesisState] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmos.gov.v1beta1.GenesisState] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmos.gov.v1beta1.GenesisState = {
    var __startingProposalId: _root_.scala.Long = 0L
    val __deposits: _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.Deposit] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.Deposit]
    val __votes: _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.Vote] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.Vote]
    val __proposals: _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.Proposal] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.gov.v1beta1.Proposal]
    var __depositParams: _root_.scala.Option[cosmos.gov.v1beta1.DepositParams] = _root_.scala.None
    var __votingParams: _root_.scala.Option[cosmos.gov.v1beta1.VotingParams] = _root_.scala.None
    var __tallyParams: _root_.scala.Option[cosmos.gov.v1beta1.TallyParams] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __startingProposalId = _input__.readUInt64()
        case 18 =>
          __deposits += _root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.Deposit](_input__)
        case 26 =>
          __votes += _root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.Vote](_input__)
        case 34 =>
          __proposals += _root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.Proposal](_input__)
        case 42 =>
          __depositParams = _root_.scala.Option(__depositParams.fold(_root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.DepositParams](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __votingParams = _root_.scala.Option(__votingParams.fold(_root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.VotingParams](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __tallyParams = _root_.scala.Option(__tallyParams.fold(_root_.scalapb.LiteParser.readMessage[cosmos.gov.v1beta1.TallyParams](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmos.gov.v1beta1.GenesisState(
        startingProposalId = __startingProposalId,
        deposits = __deposits.result(),
        votes = __votes.result(),
        proposals = __proposals.result(),
        depositParams = __depositParams,
        votingParams = __votingParams,
        tallyParams = __tallyParams,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmos.gov.v1beta1.GenesisState] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmos.gov.v1beta1.GenesisState(
        startingProposalId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        deposits = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[cosmos.gov.v1beta1.Deposit]]).getOrElse(_root_.scala.Seq.empty),
        votes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[cosmos.gov.v1beta1.Vote]]).getOrElse(_root_.scala.Seq.empty),
        proposals = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[cosmos.gov.v1beta1.Proposal]]).getOrElse(_root_.scala.Seq.empty),
        depositParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[cosmos.gov.v1beta1.DepositParams]]),
        votingParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[cosmos.gov.v1beta1.VotingParams]]),
        tallyParams = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[cosmos.gov.v1beta1.TallyParams]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmos.gov.v1beta1.GenesisProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmos.gov.v1beta1.GenesisProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = cosmos.gov.v1beta1.Deposit
      case 3 => __out = cosmos.gov.v1beta1.Vote
      case 4 => __out = cosmos.gov.v1beta1.Proposal
      case 5 => __out = cosmos.gov.v1beta1.DepositParams
      case 6 => __out = cosmos.gov.v1beta1.VotingParams
      case 7 => __out = cosmos.gov.v1beta1.TallyParams
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmos.gov.v1beta1.GenesisState(
    startingProposalId = 0L,
    deposits = _root_.scala.Seq.empty,
    votes = _root_.scala.Seq.empty,
    proposals = _root_.scala.Seq.empty,
    depositParams = _root_.scala.None,
    votingParams = _root_.scala.None,
    tallyParams = _root_.scala.None
  )
  implicit class GenesisStateLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.GenesisState]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmos.gov.v1beta1.GenesisState](_l) {
    def startingProposalId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.startingProposalId)((c_, f_) => c_.copy(startingProposalId = f_))
    def deposits: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.gov.v1beta1.Deposit]] = field(_.deposits)((c_, f_) => c_.copy(deposits = f_))
    def votes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.gov.v1beta1.Vote]] = field(_.votes)((c_, f_) => c_.copy(votes = f_))
    def proposals: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.gov.v1beta1.Proposal]] = field(_.proposals)((c_, f_) => c_.copy(proposals = f_))
    def depositParams: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.DepositParams] = field(_.getDepositParams)((c_, f_) => c_.copy(depositParams = _root_.scala.Option(f_)))
    def optionalDepositParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.gov.v1beta1.DepositParams]] = field(_.depositParams)((c_, f_) => c_.copy(depositParams = f_))
    def votingParams: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.VotingParams] = field(_.getVotingParams)((c_, f_) => c_.copy(votingParams = _root_.scala.Option(f_)))
    def optionalVotingParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.gov.v1beta1.VotingParams]] = field(_.votingParams)((c_, f_) => c_.copy(votingParams = f_))
    def tallyParams: _root_.scalapb.lenses.Lens[UpperPB, cosmos.gov.v1beta1.TallyParams] = field(_.getTallyParams)((c_, f_) => c_.copy(tallyParams = _root_.scala.Option(f_)))
    def optionalTallyParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.gov.v1beta1.TallyParams]] = field(_.tallyParams)((c_, f_) => c_.copy(tallyParams = f_))
  }
  final val STARTING_PROPOSAL_ID_FIELD_NUMBER = 1
  final val DEPOSITS_FIELD_NUMBER = 2
  final val VOTES_FIELD_NUMBER = 3
  final val PROPOSALS_FIELD_NUMBER = 4
  final val DEPOSIT_PARAMS_FIELD_NUMBER = 5
  final val VOTING_PARAMS_FIELD_NUMBER = 6
  final val TALLY_PARAMS_FIELD_NUMBER = 7
  def of(
    startingProposalId: _root_.scala.Long,
    deposits: _root_.scala.Seq[cosmos.gov.v1beta1.Deposit],
    votes: _root_.scala.Seq[cosmos.gov.v1beta1.Vote],
    proposals: _root_.scala.Seq[cosmos.gov.v1beta1.Proposal],
    depositParams: _root_.scala.Option[cosmos.gov.v1beta1.DepositParams],
    votingParams: _root_.scala.Option[cosmos.gov.v1beta1.VotingParams],
    tallyParams: _root_.scala.Option[cosmos.gov.v1beta1.TallyParams]
  ): _root_.cosmos.gov.v1beta1.GenesisState = _root_.cosmos.gov.v1beta1.GenesisState(
    startingProposalId,
    deposits,
    votes,
    proposals,
    depositParams,
    votingParams,
    tallyParams
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmos.gov.v1beta1.GenesisState])
}
