// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.lightclients.solomachine.v2

/** Header defines a solo machine consensus header
  *
  * @param sequence
  *   sequence to update solo machine public key at
  */
@SerialVersionUID(0L)
final case class Header(
    sequence: _root_.scala.Long = 0L,
    timestamp: _root_.scala.Long = 0L,
    signature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    newPublicKey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    newDiversifier: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Header] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = sequence
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = timestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(2, __value)
        }
      };
      
      {
        val __value = signature
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(3, __value)
        }
      };
      if (newPublicKey.isDefined) {
        val __value = newPublicKey.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = newDiversifier
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = sequence
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = timestamp
        if (__v != 0L) {
          _output__.writeUInt64(2, __v)
        }
      };
      {
        val __v = signature
        if (!__v.isEmpty) {
          _output__.writeBytes(3, __v)
        }
      };
      newPublicKey.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = newDiversifier
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withSequence(__v: _root_.scala.Long): Header = copy(sequence = __v)
    def withTimestamp(__v: _root_.scala.Long): Header = copy(timestamp = __v)
    def withSignature(__v: _root_.com.google.protobuf.ByteString): Header = copy(signature = __v)
    def getNewPublicKey: com.google.protobuf.any.Any = newPublicKey.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearNewPublicKey: Header = copy(newPublicKey = _root_.scala.None)
    def withNewPublicKey(__v: com.google.protobuf.any.Any): Header = copy(newPublicKey = Option(__v))
    def withNewDiversifier(__v: _root_.scala.Predef.String): Header = copy(newDiversifier = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = sequence
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
        case 3 => {
          val __t = signature
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 4 => newPublicKey.orNull
        case 5 => {
          val __t = newDiversifier
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(sequence)
        case 2 => _root_.scalapb.descriptors.PLong(timestamp)
        case 3 => _root_.scalapb.descriptors.PByteString(signature)
        case 4 => newPublicKey.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PString(newDiversifier)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.lightclients.solomachine.v2.Header.type = ibc.lightclients.solomachine.v2.Header
    // @@protoc_insertion_point(GeneratedMessage[ibc.lightclients.solomachine.v2.Header])
}

object Header extends scalapb.GeneratedMessageCompanion[ibc.lightclients.solomachine.v2.Header] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.lightclients.solomachine.v2.Header] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.lightclients.solomachine.v2.Header = {
    var __sequence: _root_.scala.Long = 0L
    var __timestamp: _root_.scala.Long = 0L
    var __signature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __newPublicKey: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var __newDiversifier: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __sequence = _input__.readUInt64()
        case 16 =>
          __timestamp = _input__.readUInt64()
        case 26 =>
          __signature = _input__.readBytes()
        case 34 =>
          __newPublicKey = _root_.scala.Option(__newPublicKey.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __newDiversifier = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.lightclients.solomachine.v2.Header(
        sequence = __sequence,
        timestamp = __timestamp,
        signature = __signature,
        newPublicKey = __newPublicKey,
        newDiversifier = __newDiversifier,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.lightclients.solomachine.v2.Header] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.lightclients.solomachine.v2.Header(
        sequence = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        timestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        signature = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        newPublicKey = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        newDiversifier = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.lightclients.solomachine.v2.SolomachineProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.lightclients.solomachine.v2.SolomachineProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 4 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.lightclients.solomachine.v2.Header(
    sequence = 0L,
    timestamp = 0L,
    signature = _root_.com.google.protobuf.ByteString.EMPTY,
    newPublicKey = _root_.scala.None,
    newDiversifier = ""
  )
  implicit class HeaderLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.lightclients.solomachine.v2.Header]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.lightclients.solomachine.v2.Header](_l) {
    def sequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.sequence)((c_, f_) => c_.copy(sequence = f_))
    def timestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def signature: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
    def newPublicKey: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getNewPublicKey)((c_, f_) => c_.copy(newPublicKey = _root_.scala.Option(f_)))
    def optionalNewPublicKey: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.newPublicKey)((c_, f_) => c_.copy(newPublicKey = f_))
    def newDiversifier: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.newDiversifier)((c_, f_) => c_.copy(newDiversifier = f_))
  }
  final val SEQUENCE_FIELD_NUMBER = 1
  final val TIMESTAMP_FIELD_NUMBER = 2
  final val SIGNATURE_FIELD_NUMBER = 3
  final val NEW_PUBLIC_KEY_FIELD_NUMBER = 4
  final val NEW_DIVERSIFIER_FIELD_NUMBER = 5
  def of(
    sequence: _root_.scala.Long,
    timestamp: _root_.scala.Long,
    signature: _root_.com.google.protobuf.ByteString,
    newPublicKey: _root_.scala.Option[com.google.protobuf.any.Any],
    newDiversifier: _root_.scala.Predef.String
  ): _root_.ibc.lightclients.solomachine.v2.Header = _root_.ibc.lightclients.solomachine.v2.Header(
    sequence,
    timestamp,
    signature,
    newPublicKey,
    newDiversifier
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.lightclients.solomachine.v2.Header])
}
