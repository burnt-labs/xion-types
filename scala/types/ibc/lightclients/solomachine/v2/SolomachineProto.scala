// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.lightclients.solomachine.v2

object SolomachineProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    ibc.core.connection.v1.ConnectionProto,
    ibc.core.channel.v1.ChannelProto,
    com.google.protobuf.GogoProto,
    com.google.protobuf.any.AnyProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      ibc.lightclients.solomachine.v2.ClientState,
      ibc.lightclients.solomachine.v2.ConsensusState,
      ibc.lightclients.solomachine.v2.Header,
      ibc.lightclients.solomachine.v2.Misbehaviour,
      ibc.lightclients.solomachine.v2.SignatureAndData,
      ibc.lightclients.solomachine.v2.TimestampedSignatureData,
      ibc.lightclients.solomachine.v2.SignBytes,
      ibc.lightclients.solomachine.v2.HeaderData,
      ibc.lightclients.solomachine.v2.ClientStateData,
      ibc.lightclients.solomachine.v2.ConsensusStateData,
      ibc.lightclients.solomachine.v2.ConnectionStateData,
      ibc.lightclients.solomachine.v2.ChannelStateData,
      ibc.lightclients.solomachine.v2.PacketCommitmentData,
      ibc.lightclients.solomachine.v2.PacketAcknowledgementData,
      ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData,
      ibc.lightclients.solomachine.v2.NextSequenceRecvData
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CjFpYmMvbGlnaHRjbGllbnRzL3NvbG9tYWNoaW5lL3YyL3NvbG9tYWNoaW5lLnByb3RvEh9pYmMubGlnaHRjbGllbnRzLnNvb
  G9tYWNoaW5lLnYyGidpYmMvY29yZS9jb25uZWN0aW9uL3YxL2Nvbm5lY3Rpb24ucHJvdG8aIWliYy9jb3JlL2NoYW5uZWwvdjEvY
  2hhbm5lbC5wcm90bxoUZ29nb3Byb3RvL2dvZ28ucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8itwIKC0NsaWVudFN0Y
  XRlEikKCHNlcXVlbmNlGAEgASgEQg3iPwoSCHNlcXVlbmNlUghzZXF1ZW5jZRIqCglpc19mcm96ZW4YAiABKAhCDeI/ChIIaXNGc
  m96ZW5SCGlzRnJvemVuEm0KD2NvbnNlbnN1c19zdGF0ZRgDIAEoCzIvLmliYy5saWdodGNsaWVudHMuc29sb21hY2hpbmUudjIuQ
  29uc2Vuc3VzU3RhdGVCE+I/EBIOY29uc2Vuc3VzU3RhdGVSDmNvbnNlbnN1c1N0YXRlElwKG2FsbG93X3VwZGF0ZV9hZnRlcl9wc
  m9wb3NhbBgEIAEoCEId4j8aEhhhbGxvd1VwZGF0ZUFmdGVyUHJvcG9zYWxSGGFsbG93VXBkYXRlQWZ0ZXJQcm9wb3NhbDoEiKAfA
  CK9AQoOQ29uc2Vuc3VzU3RhdGUSQwoKcHVibGljX2tleRgBIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCDuI/CxIJcHVibGljS
  2V5UglwdWJsaWNLZXkSMgoLZGl2ZXJzaWZpZXIYAiABKAlCEOI/DRILZGl2ZXJzaWZpZXJSC2RpdmVyc2lmaWVyEiwKCXRpbWVzd
  GFtcBgDIAEoBEIO4j8LEgl0aW1lc3RhbXBSCXRpbWVzdGFtcDoEiKAfACKiAgoGSGVhZGVyEikKCHNlcXVlbmNlGAEgASgEQg3iP
  woSCHNlcXVlbmNlUghzZXF1ZW5jZRIsCgl0aW1lc3RhbXAYAiABKARCDuI/CxIJdGltZXN0YW1wUgl0aW1lc3RhbXASLAoJc2lnb
  mF0dXJlGAMgASgMQg7iPwsSCXNpZ25hdHVyZVIJc2lnbmF0dXJlEk0KDm5ld19wdWJsaWNfa2V5GAQgASgLMhQuZ29vZ2xlLnByb
  3RvYnVmLkFueUIR4j8OEgxuZXdQdWJsaWNLZXlSDG5ld1B1YmxpY0tleRI8Cg9uZXdfZGl2ZXJzaWZpZXIYBSABKAlCE+I/EBIOb
  mV3RGl2ZXJzaWZpZXJSDm5ld0RpdmVyc2lmaWVyOgSIoB8AIsECCgxNaXNiZWhhdmlvdXISKgoJY2xpZW50X2lkGAEgASgJQg3iP
  woSCGNsaWVudElkUghjbGllbnRJZBIpCghzZXF1ZW5jZRgCIAEoBEIN4j8KEghzZXF1ZW5jZVIIc2VxdWVuY2USaQoNc2lnbmF0d
  XJlX29uZRgDIAEoCzIxLmliYy5saWdodGNsaWVudHMuc29sb21hY2hpbmUudjIuU2lnbmF0dXJlQW5kRGF0YUIR4j8OEgxzaWduY
  XR1cmVPbmVSDHNpZ25hdHVyZU9uZRJpCg1zaWduYXR1cmVfdHdvGAQgASgLMjEuaWJjLmxpZ2h0Y2xpZW50cy5zb2xvbWFjaGluZ
  S52Mi5TaWduYXR1cmVBbmREYXRhQhHiPw4SDHNpZ25hdHVyZVR3b1IMc2lnbmF0dXJlVHdvOgSIoB8AIuoBChBTaWduYXR1cmVBb
  mREYXRhEiwKCXNpZ25hdHVyZRgBIAEoDEIO4j8LEglzaWduYXR1cmVSCXNpZ25hdHVyZRJVCglkYXRhX3R5cGUYAiABKA4yKS5pY
  mMubGlnaHRjbGllbnRzLnNvbG9tYWNoaW5lLnYyLkRhdGFUeXBlQg3iPwoSCGRhdGFUeXBlUghkYXRhVHlwZRIdCgRkYXRhGAMgA
  SgMQgniPwYSBGRhdGFSBGRhdGESLAoJdGltZXN0YW1wGAQgASgEQg7iPwsSCXRpbWVzdGFtcFIJdGltZXN0YW1wOgSIoB8AIokBC
  hhUaW1lc3RhbXBlZFNpZ25hdHVyZURhdGESOQoOc2lnbmF0dXJlX2RhdGEYASABKAxCEuI/DxINc2lnbmF0dXJlRGF0YVINc2lnb
  mF0dXJlRGF0YRIsCgl0aW1lc3RhbXAYAiABKARCDuI/CxIJdGltZXN0YW1wUgl0aW1lc3RhbXA6BIigHwAilAIKCVNpZ25CeXRlc
  xIpCghzZXF1ZW5jZRgBIAEoBEIN4j8KEghzZXF1ZW5jZVIIc2VxdWVuY2USLAoJdGltZXN0YW1wGAIgASgEQg7iPwsSCXRpbWVzd
  GFtcFIJdGltZXN0YW1wEjIKC2RpdmVyc2lmaWVyGAMgASgJQhDiPw0SC2RpdmVyc2lmaWVyUgtkaXZlcnNpZmllchJVCglkYXRhX
  3R5cGUYBCABKA4yKS5pYmMubGlnaHRjbGllbnRzLnNvbG9tYWNoaW5lLnYyLkRhdGFUeXBlQg3iPwoSCGRhdGFUeXBlUghkYXRhV
  HlwZRIdCgRkYXRhGAUgASgMQgniPwYSBGRhdGFSBGRhdGE6BIigHwAilgEKCkhlYWRlckRhdGESRAoLbmV3X3B1Yl9rZXkYASABK
  AsyFC5nb29nbGUucHJvdG9idWYuQW55Qg7iPwsSCW5ld1B1YktleVIJbmV3UHViS2V5EjwKD25ld19kaXZlcnNpZmllchgCIAEoC
  UIT4j8QEg5uZXdEaXZlcnNpZmllclIObmV3RGl2ZXJzaWZpZXI6BIigHwAigQEKD0NsaWVudFN0YXRlRGF0YRIdCgRwYXRoGAEgA
  SgMQgniPwYSBHBhdGhSBHBhdGgSSQoMY2xpZW50X3N0YXRlGAIgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUIQ4j8NEgtjbGllb
  nRTdGF0ZVILY2xpZW50U3RhdGU6BIigHwAijQEKEkNvbnNlbnN1c1N0YXRlRGF0YRIdCgRwYXRoGAEgASgMQgniPwYSBHBhdGhSB
  HBhdGgSUgoPY29uc2Vuc3VzX3N0YXRlGAIgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUIT4j8QEg5jb25zZW5zdXNTdGF0ZVIOY
  29uc2Vuc3VzU3RhdGU6BIigHwAikgEKE0Nvbm5lY3Rpb25TdGF0ZURhdGESHQoEcGF0aBgBIAEoDEIJ4j8GEgRwYXRoUgRwYXRoE
  lYKCmNvbm5lY3Rpb24YAiABKAsyJS5pYmMuY29yZS5jb25uZWN0aW9uLnYxLkNvbm5lY3Rpb25FbmRCD+I/DBIKY29ubmVjdGlvb
  lIKY29ubmVjdGlvbjoEiKAfACJ9ChBDaGFubmVsU3RhdGVEYXRhEh0KBHBhdGgYASABKAxCCeI/BhIEcGF0aFIEcGF0aBJECgdja
  GFubmVsGAIgASgLMhwuaWJjLmNvcmUuY2hhbm5lbC52MS5DaGFubmVsQgziPwkSB2NoYW5uZWxSB2NoYW5uZWw6BIigHwAiZgoUU
  GFja2V0Q29tbWl0bWVudERhdGESHQoEcGF0aBgBIAEoDEIJ4j8GEgRwYXRoUgRwYXRoEi8KCmNvbW1pdG1lbnQYAiABKAxCD+I/D
  BIKY29tbWl0bWVudFIKY29tbWl0bWVudCJ6ChlQYWNrZXRBY2tub3dsZWRnZW1lbnREYXRhEh0KBHBhdGgYASABKAxCCeI/BhIEc
  GF0aFIEcGF0aBI+Cg9hY2tub3dsZWRnZW1lbnQYAiABKAxCFOI/ERIPYWNrbm93bGVkZ2VtZW50Ug9hY2tub3dsZWRnZW1lbnQiO
  QoYUGFja2V0UmVjZWlwdEFic2VuY2VEYXRhEh0KBHBhdGgYASABKAxCCeI/BhIEcGF0aFIEcGF0aCJrChROZXh0U2VxdWVuY2VSZ
  WN2RGF0YRIdCgRwYXRoGAEgASgMQgniPwYSBHBhdGhSBHBhdGgSNAoNbmV4dF9zZXFfcmVjdhgCIAEoBEIQ4j8NEgtuZXh0U2VxU
  mVjdlILbmV4dFNlcVJlY3YqyAYKCERhdGFUeXBlEmAKI0RBVEFfVFlQRV9VTklOSVRJQUxJWkVEX1VOU1BFQ0lGSUVEEAAaN+I/J
  RIjREFUQV9UWVBFX1VOSU5JVElBTElaRURfVU5TUEVDSUZJRUSKnSALVU5TUEVDSUZJRUQSQQoWREFUQV9UWVBFX0NMSUVOVF9TV
  EFURRABGiXiPxgSFkRBVEFfVFlQRV9DTElFTlRfU1RBVEWKnSAGQ0xJRU5UEkoKGURBVEFfVFlQRV9DT05TRU5TVVNfU1RBVEUQA
  hor4j8bEhlEQVRBX1RZUEVfQ09OU0VOU1VTX1NUQVRFip0gCUNPTlNFTlNVUxJNChpEQVRBX1RZUEVfQ09OTkVDVElPTl9TVEFUR
  RADGi3iPxwSGkRBVEFfVFlQRV9DT05ORUNUSU9OX1NUQVRFip0gCkNPTk5FQ1RJT04SRAoXREFUQV9UWVBFX0NIQU5ORUxfU1RBV
  EUQBBon4j8ZEhdEQVRBX1RZUEVfQ0hBTk5FTF9TVEFURYqdIAdDSEFOTkVMElUKG0RBVEFfVFlQRV9QQUNLRVRfQ09NTUlUTUVOV
  BAFGjTiPx0SG0RBVEFfVFlQRV9QQUNLRVRfQ09NTUlUTUVOVIqdIBBQQUNLRVRDT01NSVRNRU5UEmQKIERBVEFfVFlQRV9QQUNLR
  VRfQUNLTk9XTEVER0VNRU5UEAYaPuI/IhIgREFUQV9UWVBFX1BBQ0tFVF9BQ0tOT1dMRURHRU1FTlSKnSAVUEFDS0VUQUNLTk9XT
  EVER0VNRU5UEmMKIERBVEFfVFlQRV9QQUNLRVRfUkVDRUlQVF9BQlNFTkNFEAcaPeI/IhIgREFUQV9UWVBFX1BBQ0tFVF9SRUNFS
  VBUX0FCU0VOQ0WKnSAUUEFDS0VUUkVDRUlQVEFCU0VOQ0USVwocREFUQV9UWVBFX05FWFRfU0VRVUVOQ0VfUkVDVhAIGjXiPx4SH
  ERBVEFfVFlQRV9ORVhUX1NFUVVFTkNFX1JFQ1aKnSAQTkVYVFNFUVVFTkNFUkVDVhI1ChBEQVRBX1RZUEVfSEVBREVSEAkaH+I/E
  hIQREFUQV9UWVBFX0hFQURFUoqdIAZIRUFERVIaBIijHgBCQ1pBZ2l0aHViLmNvbS9jb3Ntb3MvaWJjLWdvL3YxMC9tb2R1bGVzL
  2NvcmUvMDItY2xpZW50L21pZ3JhdGlvbnMvdjdiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      ibc.core.connection.v1.ConnectionProto.javaDescriptor,
      ibc.core.channel.v1.ChannelProto.javaDescriptor,
      com.google.protobuf.GogoProto.javaDescriptor,
      com.google.protobuf.any.AnyProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}