// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.applications.transfer.v1

/** GenesisState defines the ibc-transfer genesis state
  *
  * @param totalEscrowed
  *   total_escrowed contains the total amount of tokens escrowed
  *   by the transfer module
  */
@SerialVersionUID(0L)
final case class GenesisState(
    portId: _root_.scala.Predef.String = "",
    denoms: _root_.scala.Seq[ibc.applications.transfer.v1.Denom] = _root_.scala.Seq.empty,
    params: _root_.scala.Option[ibc.applications.transfer.v1.Params] = _root_.scala.None,
    totalEscrowed: _root_.scala.Seq[cosmos.base.v1beta1.Coin] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GenesisState] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = portId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      denoms.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (params.isDefined) {
        val __value = params.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      totalEscrowed.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = portId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      denoms.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      params.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      totalEscrowed.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withPortId(__v: _root_.scala.Predef.String): GenesisState = copy(portId = __v)
    def clearDenoms = copy(denoms = _root_.scala.Seq.empty)
    def addDenoms(__vs: ibc.applications.transfer.v1.Denom *): GenesisState = addAllDenoms(__vs)
    def addAllDenoms(__vs: Iterable[ibc.applications.transfer.v1.Denom]): GenesisState = copy(denoms = denoms ++ __vs)
    def withDenoms(__v: _root_.scala.Seq[ibc.applications.transfer.v1.Denom]): GenesisState = copy(denoms = __v)
    def getParams: ibc.applications.transfer.v1.Params = params.getOrElse(ibc.applications.transfer.v1.Params.defaultInstance)
    def clearParams: GenesisState = copy(params = _root_.scala.None)
    def withParams(__v: ibc.applications.transfer.v1.Params): GenesisState = copy(params = Option(__v))
    def clearTotalEscrowed = copy(totalEscrowed = _root_.scala.Seq.empty)
    def addTotalEscrowed(__vs: cosmos.base.v1beta1.Coin *): GenesisState = addAllTotalEscrowed(__vs)
    def addAllTotalEscrowed(__vs: Iterable[cosmos.base.v1beta1.Coin]): GenesisState = copy(totalEscrowed = totalEscrowed ++ __vs)
    def withTotalEscrowed(__v: _root_.scala.Seq[cosmos.base.v1beta1.Coin]): GenesisState = copy(totalEscrowed = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = portId
          if (__t != "") __t else null
        }
        case 2 => denoms
        case 3 => params.orNull
        case 4 => totalEscrowed
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(portId)
        case 2 => _root_.scalapb.descriptors.PRepeated(denoms.iterator.map(_.toPMessage).toVector)
        case 3 => params.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PRepeated(totalEscrowed.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.applications.transfer.v1.GenesisState.type = ibc.applications.transfer.v1.GenesisState
    // @@protoc_insertion_point(GeneratedMessage[ibc.applications.transfer.v1.GenesisState])
}

object GenesisState extends scalapb.GeneratedMessageCompanion[ibc.applications.transfer.v1.GenesisState] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.applications.transfer.v1.GenesisState] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.applications.transfer.v1.GenesisState = {
    var __portId: _root_.scala.Predef.String = ""
    val __denoms: _root_.scala.collection.immutable.VectorBuilder[ibc.applications.transfer.v1.Denom] = new _root_.scala.collection.immutable.VectorBuilder[ibc.applications.transfer.v1.Denom]
    var __params: _root_.scala.Option[ibc.applications.transfer.v1.Params] = _root_.scala.None
    val __totalEscrowed: _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin] = new _root_.scala.collection.immutable.VectorBuilder[cosmos.base.v1beta1.Coin]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __portId = _input__.readStringRequireUtf8()
        case 18 =>
          __denoms += _root_.scalapb.LiteParser.readMessage[ibc.applications.transfer.v1.Denom](_input__)
        case 26 =>
          __params = _root_.scala.Option(__params.fold(_root_.scalapb.LiteParser.readMessage[ibc.applications.transfer.v1.Params](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __totalEscrowed += _root_.scalapb.LiteParser.readMessage[cosmos.base.v1beta1.Coin](_input__)
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.applications.transfer.v1.GenesisState(
        portId = __portId,
        denoms = __denoms.result(),
        params = __params,
        totalEscrowed = __totalEscrowed.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.applications.transfer.v1.GenesisState] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.applications.transfer.v1.GenesisState(
        portId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        denoms = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[ibc.applications.transfer.v1.Denom]]).getOrElse(_root_.scala.Seq.empty),
        params = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[ibc.applications.transfer.v1.Params]]),
        totalEscrowed = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[cosmos.base.v1beta1.Coin]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.applications.transfer.v1.GenesisProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.applications.transfer.v1.GenesisProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = ibc.applications.transfer.v1.Denom
      case 3 => __out = ibc.applications.transfer.v1.Params
      case 4 => __out = cosmos.base.v1beta1.Coin
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.applications.transfer.v1.GenesisState(
    portId = "",
    denoms = _root_.scala.Seq.empty,
    params = _root_.scala.None,
    totalEscrowed = _root_.scala.Seq.empty
  )
  implicit class GenesisStateLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.applications.transfer.v1.GenesisState]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.applications.transfer.v1.GenesisState](_l) {
    def portId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.portId)((c_, f_) => c_.copy(portId = f_))
    def denoms: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ibc.applications.transfer.v1.Denom]] = field(_.denoms)((c_, f_) => c_.copy(denoms = f_))
    def params: _root_.scalapb.lenses.Lens[UpperPB, ibc.applications.transfer.v1.Params] = field(_.getParams)((c_, f_) => c_.copy(params = _root_.scala.Option(f_)))
    def optionalParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[ibc.applications.transfer.v1.Params]] = field(_.params)((c_, f_) => c_.copy(params = f_))
    def totalEscrowed: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[cosmos.base.v1beta1.Coin]] = field(_.totalEscrowed)((c_, f_) => c_.copy(totalEscrowed = f_))
  }
  final val PORT_ID_FIELD_NUMBER = 1
  final val DENOMS_FIELD_NUMBER = 2
  final val PARAMS_FIELD_NUMBER = 3
  final val TOTAL_ESCROWED_FIELD_NUMBER = 4
  def of(
    portId: _root_.scala.Predef.String,
    denoms: _root_.scala.Seq[ibc.applications.transfer.v1.Denom],
    params: _root_.scala.Option[ibc.applications.transfer.v1.Params],
    totalEscrowed: _root_.scala.Seq[cosmos.base.v1beta1.Coin]
  ): _root_.ibc.applications.transfer.v1.GenesisState = _root_.ibc.applications.transfer.v1.GenesisState(
    portId,
    denoms,
    params,
    totalEscrowed
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.applications.transfer.v1.GenesisState])
}
