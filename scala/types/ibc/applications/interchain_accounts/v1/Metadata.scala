// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.applications.interchain_accounts.v1

/** Metadata defines a set of protocol specific data encoded into the ICS27 channel version bytestring
  * See ICS004: https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#Versioning
  *
  * @param version
  *   version defines the ICS27 protocol version
  * @param controllerConnectionId
  *   controller_connection_id is the connection identifier associated with the controller chain
  * @param hostConnectionId
  *   host_connection_id is the connection identifier associated with the host chain
  * @param address
  *   address defines the interchain account address to be fulfilled upon the OnChanOpenTry handshake step
  *   NOTE: the address field is empty on the OnChanOpenInit handshake step
  * @param encoding
  *   encoding defines the supported codec format
  * @param txType
  *   tx_type defines the type of transactions the interchain account can execute
  */
@SerialVersionUID(0L)
final case class Metadata(
    version: _root_.scala.Predef.String = "",
    controllerConnectionId: _root_.scala.Predef.String = "",
    hostConnectionId: _root_.scala.Predef.String = "",
    address: _root_.scala.Predef.String = "",
    encoding: _root_.scala.Predef.String = "",
    txType: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Metadata] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = version
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = controllerConnectionId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = hostConnectionId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = address
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = encoding
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = txType
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = version
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = controllerConnectionId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = hostConnectionId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = address
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = encoding
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = txType
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withVersion(__v: _root_.scala.Predef.String): Metadata = copy(version = __v)
    def withControllerConnectionId(__v: _root_.scala.Predef.String): Metadata = copy(controllerConnectionId = __v)
    def withHostConnectionId(__v: _root_.scala.Predef.String): Metadata = copy(hostConnectionId = __v)
    def withAddress(__v: _root_.scala.Predef.String): Metadata = copy(address = __v)
    def withEncoding(__v: _root_.scala.Predef.String): Metadata = copy(encoding = __v)
    def withTxType(__v: _root_.scala.Predef.String): Metadata = copy(txType = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = version
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = controllerConnectionId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = hostConnectionId
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = address
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = encoding
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = txType
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(version)
        case 2 => _root_.scalapb.descriptors.PString(controllerConnectionId)
        case 3 => _root_.scalapb.descriptors.PString(hostConnectionId)
        case 4 => _root_.scalapb.descriptors.PString(address)
        case 5 => _root_.scalapb.descriptors.PString(encoding)
        case 6 => _root_.scalapb.descriptors.PString(txType)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.applications.interchain_accounts.v1.Metadata.type = ibc.applications.interchain_accounts.v1.Metadata
    // @@protoc_insertion_point(GeneratedMessage[ibc.applications.interchain_accounts.v1.Metadata])
}

object Metadata extends scalapb.GeneratedMessageCompanion[ibc.applications.interchain_accounts.v1.Metadata] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.applications.interchain_accounts.v1.Metadata] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.applications.interchain_accounts.v1.Metadata = {
    var __version: _root_.scala.Predef.String = ""
    var __controllerConnectionId: _root_.scala.Predef.String = ""
    var __hostConnectionId: _root_.scala.Predef.String = ""
    var __address: _root_.scala.Predef.String = ""
    var __encoding: _root_.scala.Predef.String = ""
    var __txType: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __version = _input__.readStringRequireUtf8()
        case 18 =>
          __controllerConnectionId = _input__.readStringRequireUtf8()
        case 26 =>
          __hostConnectionId = _input__.readStringRequireUtf8()
        case 34 =>
          __address = _input__.readStringRequireUtf8()
        case 42 =>
          __encoding = _input__.readStringRequireUtf8()
        case 50 =>
          __txType = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.applications.interchain_accounts.v1.Metadata(
        version = __version,
        controllerConnectionId = __controllerConnectionId,
        hostConnectionId = __hostConnectionId,
        address = __address,
        encoding = __encoding,
        txType = __txType,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.applications.interchain_accounts.v1.Metadata] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.applications.interchain_accounts.v1.Metadata(
        version = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        controllerConnectionId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        hostConnectionId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        address = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        encoding = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        txType = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.applications.interchain_accounts.v1.MetadataProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.applications.interchain_accounts.v1.MetadataProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.applications.interchain_accounts.v1.Metadata(
    version = "",
    controllerConnectionId = "",
    hostConnectionId = "",
    address = "",
    encoding = "",
    txType = ""
  )
  implicit class MetadataLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.applications.interchain_accounts.v1.Metadata]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.applications.interchain_accounts.v1.Metadata](_l) {
    def version: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.version)((c_, f_) => c_.copy(version = f_))
    def controllerConnectionId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.controllerConnectionId)((c_, f_) => c_.copy(controllerConnectionId = f_))
    def hostConnectionId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.hostConnectionId)((c_, f_) => c_.copy(hostConnectionId = f_))
    def address: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.address)((c_, f_) => c_.copy(address = f_))
    def encoding: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.encoding)((c_, f_) => c_.copy(encoding = f_))
    def txType: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.txType)((c_, f_) => c_.copy(txType = f_))
  }
  final val VERSION_FIELD_NUMBER = 1
  final val CONTROLLER_CONNECTION_ID_FIELD_NUMBER = 2
  final val HOST_CONNECTION_ID_FIELD_NUMBER = 3
  final val ADDRESS_FIELD_NUMBER = 4
  final val ENCODING_FIELD_NUMBER = 5
  final val TX_TYPE_FIELD_NUMBER = 6
  def of(
    version: _root_.scala.Predef.String,
    controllerConnectionId: _root_.scala.Predef.String,
    hostConnectionId: _root_.scala.Predef.String,
    address: _root_.scala.Predef.String,
    encoding: _root_.scala.Predef.String,
    txType: _root_.scala.Predef.String
  ): _root_.ibc.applications.interchain_accounts.v1.Metadata = _root_.ibc.applications.interchain_accounts.v1.Metadata(
    version,
    controllerConnectionId,
    hostConnectionId,
    address,
    encoding,
    txType
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.applications.interchain_accounts.v1.Metadata])
}
