// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.applications.interchain_accounts.host.v1

/** Params defines the set of on-chain interchain accounts parameters.
  * The following parameters may be used to disable the host submodule.
  *
  * @param hostEnabled
  *   host_enabled enables or disables the host submodule.
  * @param allowMessages
  *   allow_messages defines a list of sdk message typeURLs allowed to be executed on a host chain.
  */
@SerialVersionUID(0L)
final case class Params(
    hostEnabled: _root_.scala.Boolean = false,
    allowMessages: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Params] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = hostEnabled
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
        }
      };
      allowMessages.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = hostEnabled
        if (__v != false) {
          _output__.writeBool(1, __v)
        }
      };
      allowMessages.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withHostEnabled(__v: _root_.scala.Boolean): Params = copy(hostEnabled = __v)
    def clearAllowMessages = copy(allowMessages = _root_.scala.Seq.empty)
    def addAllowMessages(__vs: _root_.scala.Predef.String *): Params = addAllAllowMessages(__vs)
    def addAllAllowMessages(__vs: Iterable[_root_.scala.Predef.String]): Params = copy(allowMessages = allowMessages ++ __vs)
    def withAllowMessages(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Params = copy(allowMessages = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = hostEnabled
          if (__t != false) __t else null
        }
        case 2 => allowMessages
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PBoolean(hostEnabled)
        case 2 => _root_.scalapb.descriptors.PRepeated(allowMessages.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.applications.interchain_accounts.host.v1.Params.type = ibc.applications.interchain_accounts.host.v1.Params
    // @@protoc_insertion_point(GeneratedMessage[ibc.applications.interchain_accounts.host.v1.Params])
}

object Params extends scalapb.GeneratedMessageCompanion[ibc.applications.interchain_accounts.host.v1.Params] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.applications.interchain_accounts.host.v1.Params] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.applications.interchain_accounts.host.v1.Params = {
    var __hostEnabled: _root_.scala.Boolean = false
    val __allowMessages: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __hostEnabled = _input__.readBool()
        case 18 =>
          __allowMessages += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.applications.interchain_accounts.host.v1.Params(
        hostEnabled = __hostEnabled,
        allowMessages = __allowMessages.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.applications.interchain_accounts.host.v1.Params] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.applications.interchain_accounts.host.v1.Params(
        hostEnabled = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        allowMessages = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.applications.interchain_accounts.host.v1.HostProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.applications.interchain_accounts.host.v1.HostProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.applications.interchain_accounts.host.v1.Params(
    hostEnabled = false,
    allowMessages = _root_.scala.Seq.empty
  )
  implicit class ParamsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.applications.interchain_accounts.host.v1.Params]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.applications.interchain_accounts.host.v1.Params](_l) {
    def hostEnabled: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.hostEnabled)((c_, f_) => c_.copy(hostEnabled = f_))
    def allowMessages: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.allowMessages)((c_, f_) => c_.copy(allowMessages = f_))
  }
  final val HOST_ENABLED_FIELD_NUMBER = 1
  final val ALLOW_MESSAGES_FIELD_NUMBER = 2
  def of(
    hostEnabled: _root_.scala.Boolean,
    allowMessages: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.ibc.applications.interchain_accounts.host.v1.Params = _root_.ibc.applications.interchain_accounts.host.v1.Params(
    hostEnabled,
    allowMessages
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.applications.interchain_accounts.host.v1.Params])
}
