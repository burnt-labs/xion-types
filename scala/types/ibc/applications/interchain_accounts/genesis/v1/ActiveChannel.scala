// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.applications.interchain_accounts.genesis.v1

/** ActiveChannel contains a connection ID, port ID and associated active channel ID, as well as a boolean flag to
  * indicate if the channel is middleware enabled
  */
@SerialVersionUID(0L)
final case class ActiveChannel(
    connectionId: _root_.scala.Predef.String = "",
    portId: _root_.scala.Predef.String = "",
    channelId: _root_.scala.Predef.String = "",
    isMiddlewareEnabled: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ActiveChannel] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = connectionId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = portId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = channelId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = isMiddlewareEnabled
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = connectionId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = portId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = channelId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = isMiddlewareEnabled
        if (__v != false) {
          _output__.writeBool(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withConnectionId(__v: _root_.scala.Predef.String): ActiveChannel = copy(connectionId = __v)
    def withPortId(__v: _root_.scala.Predef.String): ActiveChannel = copy(portId = __v)
    def withChannelId(__v: _root_.scala.Predef.String): ActiveChannel = copy(channelId = __v)
    def withIsMiddlewareEnabled(__v: _root_.scala.Boolean): ActiveChannel = copy(isMiddlewareEnabled = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = connectionId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = portId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = channelId
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = isMiddlewareEnabled
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(connectionId)
        case 2 => _root_.scalapb.descriptors.PString(portId)
        case 3 => _root_.scalapb.descriptors.PString(channelId)
        case 4 => _root_.scalapb.descriptors.PBoolean(isMiddlewareEnabled)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.applications.interchain_accounts.genesis.v1.ActiveChannel.type = ibc.applications.interchain_accounts.genesis.v1.ActiveChannel
    // @@protoc_insertion_point(GeneratedMessage[ibc.applications.interchain_accounts.genesis.v1.ActiveChannel])
}

object ActiveChannel extends scalapb.GeneratedMessageCompanion[ibc.applications.interchain_accounts.genesis.v1.ActiveChannel] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.applications.interchain_accounts.genesis.v1.ActiveChannel] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.applications.interchain_accounts.genesis.v1.ActiveChannel = {
    var __connectionId: _root_.scala.Predef.String = ""
    var __portId: _root_.scala.Predef.String = ""
    var __channelId: _root_.scala.Predef.String = ""
    var __isMiddlewareEnabled: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __connectionId = _input__.readStringRequireUtf8()
        case 18 =>
          __portId = _input__.readStringRequireUtf8()
        case 26 =>
          __channelId = _input__.readStringRequireUtf8()
        case 32 =>
          __isMiddlewareEnabled = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.applications.interchain_accounts.genesis.v1.ActiveChannel(
        connectionId = __connectionId,
        portId = __portId,
        channelId = __channelId,
        isMiddlewareEnabled = __isMiddlewareEnabled,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.applications.interchain_accounts.genesis.v1.ActiveChannel] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.applications.interchain_accounts.genesis.v1.ActiveChannel(
        connectionId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        portId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        channelId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        isMiddlewareEnabled = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.applications.interchain_accounts.genesis.v1.GenesisProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.applications.interchain_accounts.genesis.v1.GenesisProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.applications.interchain_accounts.genesis.v1.ActiveChannel(
    connectionId = "",
    portId = "",
    channelId = "",
    isMiddlewareEnabled = false
  )
  implicit class ActiveChannelLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.applications.interchain_accounts.genesis.v1.ActiveChannel]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.applications.interchain_accounts.genesis.v1.ActiveChannel](_l) {
    def connectionId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.connectionId)((c_, f_) => c_.copy(connectionId = f_))
    def portId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.portId)((c_, f_) => c_.copy(portId = f_))
    def channelId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.channelId)((c_, f_) => c_.copy(channelId = f_))
    def isMiddlewareEnabled: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isMiddlewareEnabled)((c_, f_) => c_.copy(isMiddlewareEnabled = f_))
  }
  final val CONNECTION_ID_FIELD_NUMBER = 1
  final val PORT_ID_FIELD_NUMBER = 2
  final val CHANNEL_ID_FIELD_NUMBER = 3
  final val IS_MIDDLEWARE_ENABLED_FIELD_NUMBER = 4
  def of(
    connectionId: _root_.scala.Predef.String,
    portId: _root_.scala.Predef.String,
    channelId: _root_.scala.Predef.String,
    isMiddlewareEnabled: _root_.scala.Boolean
  ): _root_.ibc.applications.interchain_accounts.genesis.v1.ActiveChannel = _root_.ibc.applications.interchain_accounts.genesis.v1.ActiveChannel(
    connectionId,
    portId,
    channelId,
    isMiddlewareEnabled
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.applications.interchain_accounts.genesis.v1.ActiveChannel])
}
