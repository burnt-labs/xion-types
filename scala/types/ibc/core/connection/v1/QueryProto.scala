// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.connection.v1

object QueryProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.GogoProto,
    cosmos.base.query.v1beta1.PaginationProto,
    ibc.core.client.v1.ClientProto,
    ibc.core.connection.v1.ConnectionProto,
    com.google.api.AnnotationsProto,
    com.google.protobuf.any.AnyProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      ibc.core.connection.v1.QueryConnectionRequest,
      ibc.core.connection.v1.QueryConnectionResponse,
      ibc.core.connection.v1.QueryConnectionsRequest,
      ibc.core.connection.v1.QueryConnectionsResponse,
      ibc.core.connection.v1.QueryClientConnectionsRequest,
      ibc.core.connection.v1.QueryClientConnectionsResponse,
      ibc.core.connection.v1.QueryConnectionClientStateRequest,
      ibc.core.connection.v1.QueryConnectionClientStateResponse,
      ibc.core.connection.v1.QueryConnectionConsensusStateRequest,
      ibc.core.connection.v1.QueryConnectionConsensusStateResponse,
      ibc.core.connection.v1.QueryConnectionParamsRequest,
      ibc.core.connection.v1.QueryConnectionParamsResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CiJpYmMvY29yZS9jb25uZWN0aW9uL3YxL3F1ZXJ5LnByb3RvEhZpYmMuY29yZS5jb25uZWN0aW9uLnYxGhRnb2dvcHJvdG8vZ
  29nby5wcm90bxoqY29zbW9zL2Jhc2UvcXVlcnkvdjFiZXRhMS9wYWdpbmF0aW9uLnByb3RvGh9pYmMvY29yZS9jbGllbnQvdjEvY
  2xpZW50LnByb3RvGidpYmMvY29yZS9jb25uZWN0aW9uL3YxL2Nvbm5lY3Rpb24ucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlvb
  nMucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8iUAoWUXVlcnlDb25uZWN0aW9uUmVxdWVzdBI2Cg1jb25uZWN0aW9uX
  2lkGAEgASgJQhHiPw4SDGNvbm5lY3Rpb25JZFIMY29ubmVjdGlvbklkIugBChdRdWVyeUNvbm5lY3Rpb25SZXNwb25zZRJWCgpjb
  25uZWN0aW9uGAEgASgLMiUuaWJjLmNvcmUuY29ubmVjdGlvbi52MS5Db25uZWN0aW9uRW5kQg/iPwwSCmNvbm5lY3Rpb25SCmNvb
  m5lY3Rpb24SIAoFcHJvb2YYAiABKAxCCuI/BxIFcHJvb2ZSBXByb29mElMKDHByb29mX2hlaWdodBgDIAEoCzIaLmliYy5jb3JlL
  mNsaWVudC52MS5IZWlnaHRCFOI/DRILcHJvb2ZIZWlnaHTI3h8AUgtwcm9vZkhlaWdodCJyChdRdWVyeUNvbm5lY3Rpb25zUmVxd
  WVzdBJXCgpwYWdpbmF0aW9uGAEgASgLMiYuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVxdWVzdEIP4j8MEgpwYWdpb
  mF0aW9uUgpwYWdpbmF0aW9uIpsCChhRdWVyeUNvbm5lY3Rpb25zUmVzcG9uc2USYAoLY29ubmVjdGlvbnMYASADKAsyLC5pYmMuY
  29yZS5jb25uZWN0aW9uLnYxLklkZW50aWZpZWRDb25uZWN0aW9uQhDiPw0SC2Nvbm5lY3Rpb25zUgtjb25uZWN0aW9ucxJYCgpwY
  WdpbmF0aW9uGAIgASgLMicuY29zbW9zLmJhc2UucXVlcnkudjFiZXRhMS5QYWdlUmVzcG9uc2VCD+I/DBIKcGFnaW5hdGlvblIKc
  GFnaW5hdGlvbhJDCgZoZWlnaHQYAyABKAsyGi5pYmMuY29yZS5jbGllbnQudjEuSGVpZ2h0Qg/iPwgSBmhlaWdodMjeHwBSBmhla
  WdodCJLCh1RdWVyeUNsaWVudENvbm5lY3Rpb25zUmVxdWVzdBIqCgljbGllbnRfaWQYASABKAlCDeI/ChIIY2xpZW50SWRSCGNsa
  WVudElkItgBCh5RdWVyeUNsaWVudENvbm5lY3Rpb25zUmVzcG9uc2USPwoQY29ubmVjdGlvbl9wYXRocxgBIAMoCUIU4j8REg9jb
  25uZWN0aW9uUGF0aHNSD2Nvbm5lY3Rpb25QYXRocxIgCgVwcm9vZhgCIAEoDEIK4j8HEgVwcm9vZlIFcHJvb2YSUwoMcHJvb2Zfa
  GVpZ2h0GAMgASgLMhouaWJjLmNvcmUuY2xpZW50LnYxLkhlaWdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ2h0I
  lsKIVF1ZXJ5Q29ubmVjdGlvbkNsaWVudFN0YXRlUmVxdWVzdBI2Cg1jb25uZWN0aW9uX2lkGAEgASgJQhHiPw4SDGNvbm5lY3Rpb
  25JZFIMY29ubmVjdGlvbklkIpoCCiJRdWVyeUNvbm5lY3Rpb25DbGllbnRTdGF0ZVJlc3BvbnNlEn0KF2lkZW50aWZpZWRfY2xpZ
  W50X3N0YXRlGAEgASgLMikuaWJjLmNvcmUuY2xpZW50LnYxLklkZW50aWZpZWRDbGllbnRTdGF0ZUIa4j8XEhVpZGVudGlmaWVkQ
  2xpZW50U3RhdGVSFWlkZW50aWZpZWRDbGllbnRTdGF0ZRIgCgVwcm9vZhgCIAEoDEIK4j8HEgVwcm9vZlIFcHJvb2YSUwoMcHJvb
  2ZfaGVpZ2h0GAMgASgLMhouaWJjLmNvcmUuY2xpZW50LnYxLkhlaWdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ
  2h0ItoBCiRRdWVyeUNvbm5lY3Rpb25Db25zZW5zdXNTdGF0ZVJlcXVlc3QSNgoNY29ubmVjdGlvbl9pZBgBIAEoCUIR4j8OEgxjb
  25uZWN0aW9uSWRSDGNvbm5lY3Rpb25JZBI8Cg9yZXZpc2lvbl9udW1iZXIYAiABKARCE+I/EBIOcmV2aXNpb25OdW1iZXJSDnJld
  mlzaW9uTnVtYmVyEjwKD3JldmlzaW9uX2hlaWdodBgDIAEoBEIT4j8QEg5yZXZpc2lvbkhlaWdodFIOcmV2aXNpb25IZWlnaHQin
  gIKJVF1ZXJ5Q29ubmVjdGlvbkNvbnNlbnN1c1N0YXRlUmVzcG9uc2USUgoPY29uc2Vuc3VzX3N0YXRlGAEgASgLMhQuZ29vZ2xlL
  nByb3RvYnVmLkFueUIT4j8QEg5jb25zZW5zdXNTdGF0ZVIOY29uc2Vuc3VzU3RhdGUSKgoJY2xpZW50X2lkGAIgASgJQg3iPwoSC
  GNsaWVudElkUghjbGllbnRJZBIgCgVwcm9vZhgDIAEoDEIK4j8HEgVwcm9vZlIFcHJvb2YSUwoMcHJvb2ZfaGVpZ2h0GAQgASgLM
  houaWJjLmNvcmUuY2xpZW50LnYxLkhlaWdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ2h0Ih4KHFF1ZXJ5Q29ub
  mVjdGlvblBhcmFtc1JlcXVlc3QiZAodUXVlcnlDb25uZWN0aW9uUGFyYW1zUmVzcG9uc2USQwoGcGFyYW1zGAEgASgLMh4uaWJjL
  mNvcmUuY29ubmVjdGlvbi52MS5QYXJhbXNCC+I/CBIGcGFyYW1zUgZwYXJhbXMyuQkKBVF1ZXJ5EqoBCgpDb25uZWN0aW9uEi4ua
  WJjLmNvcmUuY29ubmVjdGlvbi52MS5RdWVyeUNvbm5lY3Rpb25SZXF1ZXN0Gi8uaWJjLmNvcmUuY29ubmVjdGlvbi52MS5RdWVye
  UNvbm5lY3Rpb25SZXNwb25zZSI7gtPkkwI1EjMvaWJjL2NvcmUvY29ubmVjdGlvbi92MS9jb25uZWN0aW9ucy97Y29ubmVjdGlvb
  l9pZH0SnQEKC0Nvbm5lY3Rpb25zEi8uaWJjLmNvcmUuY29ubmVjdGlvbi52MS5RdWVyeUNvbm5lY3Rpb25zUmVxdWVzdBowLmliY
  y5jb3JlLmNvbm5lY3Rpb24udjEuUXVlcnlDb25uZWN0aW9uc1Jlc3BvbnNlIiuC0+STAiUSIy9pYmMvY29yZS9jb25uZWN0aW9uL
  3YxL2Nvbm5lY3Rpb25zEsIBChFDbGllbnRDb25uZWN0aW9ucxI1LmliYy5jb3JlLmNvbm5lY3Rpb24udjEuUXVlcnlDbGllbnRDb
  25uZWN0aW9uc1JlcXVlc3QaNi5pYmMuY29yZS5jb25uZWN0aW9uLnYxLlF1ZXJ5Q2xpZW50Q29ubmVjdGlvbnNSZXNwb25zZSI+g
  tPkkwI4EjYvaWJjL2NvcmUvY29ubmVjdGlvbi92MS9jbGllbnRfY29ubmVjdGlvbnMve2NsaWVudF9pZH0S2AEKFUNvbm5lY3Rpb
  25DbGllbnRTdGF0ZRI5LmliYy5jb3JlLmNvbm5lY3Rpb24udjEuUXVlcnlDb25uZWN0aW9uQ2xpZW50U3RhdGVSZXF1ZXN0Gjoua
  WJjLmNvcmUuY29ubmVjdGlvbi52MS5RdWVyeUNvbm5lY3Rpb25DbGllbnRTdGF0ZVJlc3BvbnNlIkiC0+STAkISQC9pYmMvY29yZ
  S9jb25uZWN0aW9uL3YxL2Nvbm5lY3Rpb25zL3tjb25uZWN0aW9uX2lkfS9jbGllbnRfc3RhdGUSmAIKGENvbm5lY3Rpb25Db25zZ
  W5zdXNTdGF0ZRI8LmliYy5jb3JlLmNvbm5lY3Rpb24udjEuUXVlcnlDb25uZWN0aW9uQ29uc2Vuc3VzU3RhdGVSZXF1ZXN0Gj0ua
  WJjLmNvcmUuY29ubmVjdGlvbi52MS5RdWVyeUNvbm5lY3Rpb25Db25zZW5zdXNTdGF0ZVJlc3BvbnNlIn+C0+STAnkSdy9pYmMvY
  29yZS9jb25uZWN0aW9uL3YxL2Nvbm5lY3Rpb25zL3tjb25uZWN0aW9uX2lkfS9jb25zZW5zdXNfc3RhdGUvcmV2aXNpb24ve3Jld
  mlzaW9uX251bWJlcn0vaGVpZ2h0L3tyZXZpc2lvbl9oZWlnaHR9EqcBChBDb25uZWN0aW9uUGFyYW1zEjQuaWJjLmNvcmUuY29ub
  mVjdGlvbi52MS5RdWVyeUNvbm5lY3Rpb25QYXJhbXNSZXF1ZXN0GjUuaWJjLmNvcmUuY29ubmVjdGlvbi52MS5RdWVyeUNvbm5lY
  3Rpb25QYXJhbXNSZXNwb25zZSImgtPkkwIgEh4vaWJjL2NvcmUvY29ubmVjdGlvbi92MS9wYXJhbXNCP1o9Z2l0aHViLmNvbS9jb
  3Ntb3MvaWJjLWdvL3YxMC9tb2R1bGVzL2NvcmUvMDMtY29ubmVjdGlvbi90eXBlc2IGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.GogoProto.javaDescriptor,
      cosmos.base.query.v1beta1.PaginationProto.javaDescriptor,
      ibc.core.client.v1.ClientProto.javaDescriptor,
      ibc.core.connection.v1.ConnectionProto.javaDescriptor,
      com.google.api.AnnotationsProto.javaDescriptor,
      com.google.protobuf.any.AnyProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}