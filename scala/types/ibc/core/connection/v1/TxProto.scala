// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.connection.v1

object TxProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.GogoProto,
    cosmos.msg.v1.MsgProto,
    com.google.protobuf.any.AnyProto,
    ibc.core.client.v1.ClientProto,
    ibc.core.connection.v1.ConnectionProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      ibc.core.connection.v1.MsgConnectionOpenInit,
      ibc.core.connection.v1.MsgConnectionOpenInitResponse,
      ibc.core.connection.v1.MsgConnectionOpenTry,
      ibc.core.connection.v1.MsgConnectionOpenTryResponse,
      ibc.core.connection.v1.MsgConnectionOpenAck,
      ibc.core.connection.v1.MsgConnectionOpenAckResponse,
      ibc.core.connection.v1.MsgConnectionOpenConfirm,
      ibc.core.connection.v1.MsgConnectionOpenConfirmResponse,
      ibc.core.connection.v1.MsgUpdateParams,
      ibc.core.connection.v1.MsgUpdateParamsResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Ch9pYmMvY29yZS9jb25uZWN0aW9uL3YxL3R4LnByb3RvEhZpYmMuY29yZS5jb25uZWN0aW9uLnYxGhRnb2dvcHJvdG8vZ29nb
  y5wcm90bxoXY29zbW9zL21zZy92MS9tc2cucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnkucHJvdG8aH2liYy9jb3JlL2NsaWVud
  C92MS9jbGllbnQucHJvdG8aJ2liYy9jb3JlL2Nvbm5lY3Rpb24vdjEvY29ubmVjdGlvbi5wcm90byLYAgoVTXNnQ29ubmVjdGlvb
  k9wZW5Jbml0EioKCWNsaWVudF9pZBgBIAEoCUIN4j8KEghjbGllbnRJZFIIY2xpZW50SWQSXwoMY291bnRlcnBhcnR5GAIgASgLM
  iQuaWJjLmNvcmUuY29ubmVjdGlvbi52MS5Db3VudGVycGFydHlCFeI/DhIMY291bnRlcnBhcnR5yN4fAFIMY291bnRlcnBhcnR5E
  kcKB3ZlcnNpb24YAyABKAsyHy5pYmMuY29yZS5jb25uZWN0aW9uLnYxLlZlcnNpb25CDOI/CRIHdmVyc2lvblIHdmVyc2lvbhIzC
  gxkZWxheV9wZXJpb2QYBCABKARCEOI/DRILZGVsYXlQZXJpb2RSC2RlbGF5UGVyaW9kEiMKBnNpZ25lchgFIAEoCUIL4j8IEgZza
  WduZXJSBnNpZ25lcjoPiKAfAILnsCoGc2lnbmVyIh8KHU1zZ0Nvbm5lY3Rpb25PcGVuSW5pdFJlc3BvbnNlItoHChRNc2dDb25uZ
  WN0aW9uT3BlblRyeRIqCgljbGllbnRfaWQYASABKAlCDeI/ChIIY2xpZW50SWRSCGNsaWVudElkElEKFnByZXZpb3VzX2Nvbm5lY
  3Rpb25faWQYAiABKAlCGxgB4j8WEhRwcmV2aW91c0Nvbm5lY3Rpb25JZFIUcHJldmlvdXNDb25uZWN0aW9uSWQSSwoMY2xpZW50X
  3N0YXRlGAMgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUISGAHiPw0SC2NsaWVudFN0YXRlUgtjbGllbnRTdGF0ZRJfCgxjb3Vud
  GVycGFydHkYBCABKAsyJC5pYmMuY29yZS5jb25uZWN0aW9uLnYxLkNvdW50ZXJwYXJ0eUIV4j8OEgxjb3VudGVycGFydHnI3h8AU
  gxjb3VudGVycGFydHkSMwoMZGVsYXlfcGVyaW9kGAUgASgEQhDiPw0SC2RlbGF5UGVyaW9kUgtkZWxheVBlcmlvZBJvChVjb3Vud
  GVycGFydHlfdmVyc2lvbnMYBiADKAsyHy5pYmMuY29yZS5jb25uZWN0aW9uLnYxLlZlcnNpb25CGeI/FhIUY291bnRlcnBhcnR5V
  mVyc2lvbnNSFGNvdW50ZXJwYXJ0eVZlcnNpb25zElMKDHByb29mX2hlaWdodBgHIAEoCzIaLmliYy5jb3JlLmNsaWVudC52MS5IZ
  WlnaHRCFOI/DRILcHJvb2ZIZWlnaHTI3h8AUgtwcm9vZkhlaWdodBItCgpwcm9vZl9pbml0GAggASgMQg7iPwsSCXByb29mSW5pd
  FIJcHJvb2ZJbml0EjUKDHByb29mX2NsaWVudBgJIAEoDEISGAHiPw0SC3Byb29mQ2xpZW50Ugtwcm9vZkNsaWVudBI+Cg9wcm9vZ
  l9jb25zZW5zdXMYCiABKAxCFRgB4j8QEg5wcm9vZkNvbnNlbnN1c1IOcHJvb2ZDb25zZW5zdXMSYQoQY29uc2Vuc3VzX2hlaWdod
  BgLIAEoCzIaLmliYy5jb3JlLmNsaWVudC52MS5IZWlnaHRCGhgB4j8REg9jb25zZW5zdXNIZWlnaHTI3h8AUg9jb25zZW5zdXNIZ
  WlnaHQSIwoGc2lnbmVyGAwgASgJQgviPwgSBnNpZ25lclIGc2lnbmVyElsKGmhvc3RfY29uc2Vuc3VzX3N0YXRlX3Byb29mGA0gA
  SgMQh4YAeI/GRIXaG9zdENvbnNlbnN1c1N0YXRlUHJvb2ZSF2hvc3RDb25zZW5zdXNTdGF0ZVByb29mOg+IoB8AguewKgZzaWduZ
  XIiHgocTXNnQ29ubmVjdGlvbk9wZW5UcnlSZXNwb25zZSKvBgoUTXNnQ29ubmVjdGlvbk9wZW5BY2sSNgoNY29ubmVjdGlvbl9pZ
  BgBIAEoCUIR4j8OEgxjb25uZWN0aW9uSWRSDGNvbm5lY3Rpb25JZBJbChpjb3VudGVycGFydHlfY29ubmVjdGlvbl9pZBgCIAEoC
  UId4j8aEhhjb3VudGVycGFydHlDb25uZWN0aW9uSWRSGGNvdW50ZXJwYXJ0eUNvbm5lY3Rpb25JZBJHCgd2ZXJzaW9uGAMgASgLM
  h8uaWJjLmNvcmUuY29ubmVjdGlvbi52MS5WZXJzaW9uQgziPwkSB3ZlcnNpb25SB3ZlcnNpb24SSwoMY2xpZW50X3N0YXRlGAQgA
  SgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUISGAHiPw0SC2NsaWVudFN0YXRlUgtjbGllbnRTdGF0ZRJTCgxwcm9vZl9oZWlnaHQYB
  SABKAsyGi5pYmMuY29yZS5jbGllbnQudjEuSGVpZ2h0QhTiPw0SC3Byb29mSGVpZ2h0yN4fAFILcHJvb2ZIZWlnaHQSKgoJcHJvb
  2ZfdHJ5GAYgASgMQg3iPwoSCHByb29mVHJ5Ughwcm9vZlRyeRI1Cgxwcm9vZl9jbGllbnQYByABKAxCEhgB4j8NEgtwcm9vZkNsa
  WVudFILcHJvb2ZDbGllbnQSPgoPcHJvb2ZfY29uc2Vuc3VzGAggASgMQhUYAeI/EBIOcHJvb2ZDb25zZW5zdXNSDnByb29mQ29uc
  2Vuc3VzEmEKEGNvbnNlbnN1c19oZWlnaHQYCSABKAsyGi5pYmMuY29yZS5jbGllbnQudjEuSGVpZ2h0QhoYAeI/ERIPY29uc2Vuc
  3VzSGVpZ2h0yN4fAFIPY29uc2Vuc3VzSGVpZ2h0EiMKBnNpZ25lchgKIAEoCUIL4j8IEgZzaWduZXJSBnNpZ25lchJbChpob3N0X
  2NvbnNlbnN1c19zdGF0ZV9wcm9vZhgLIAEoDEIeGAHiPxkSF2hvc3RDb25zZW5zdXNTdGF0ZVByb29mUhdob3N0Q29uc2Vuc3VzU
  3RhdGVQcm9vZjoPiKAfAILnsCoGc2lnbmVyIh4KHE1zZ0Nvbm5lY3Rpb25PcGVuQWNrUmVzcG9uc2UiiQIKGE1zZ0Nvbm5lY3Rpb
  25PcGVuQ29uZmlybRI2Cg1jb25uZWN0aW9uX2lkGAEgASgJQhHiPw4SDGNvbm5lY3Rpb25JZFIMY29ubmVjdGlvbklkEioKCXByb
  29mX2FjaxgCIAEoDEIN4j8KEghwcm9vZkFja1IIcHJvb2ZBY2sSUwoMcHJvb2ZfaGVpZ2h0GAMgASgLMhouaWJjLmNvcmUuY2xpZ
  W50LnYxLkhlaWdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ2h0EiMKBnNpZ25lchgEIAEoCUIL4j8IEgZzaWduZ
  XJSBnNpZ25lcjoPiKAfAILnsCoGc2lnbmVyIiIKIE1zZ0Nvbm5lY3Rpb25PcGVuQ29uZmlybVJlc3BvbnNlIpABCg9Nc2dVcGRhd
  GVQYXJhbXMSIwoGc2lnbmVyGAEgASgJQgviPwgSBnNpZ25lclIGc2lnbmVyEkcKBnBhcmFtcxgCIAEoCzIeLmliYy5jb3JlLmNvb
  m5lY3Rpb24udjEuUGFyYW1zQg/iPwgSBnBhcmFtc8jeHwBSBnBhcmFtczoPiKAfAILnsCoGc2lnbmVyIhkKF01zZ1VwZGF0ZVBhc
  mFtc1Jlc3BvbnNlMvQECgNNc2cSegoSQ29ubmVjdGlvbk9wZW5Jbml0Ei0uaWJjLmNvcmUuY29ubmVjdGlvbi52MS5Nc2dDb25uZ
  WN0aW9uT3BlbkluaXQaNS5pYmMuY29yZS5jb25uZWN0aW9uLnYxLk1zZ0Nvbm5lY3Rpb25PcGVuSW5pdFJlc3BvbnNlEncKEUNvb
  m5lY3Rpb25PcGVuVHJ5EiwuaWJjLmNvcmUuY29ubmVjdGlvbi52MS5Nc2dDb25uZWN0aW9uT3BlblRyeRo0LmliYy5jb3JlLmNvb
  m5lY3Rpb24udjEuTXNnQ29ubmVjdGlvbk9wZW5UcnlSZXNwb25zZRJ3ChFDb25uZWN0aW9uT3BlbkFjaxIsLmliYy5jb3JlLmNvb
  m5lY3Rpb24udjEuTXNnQ29ubmVjdGlvbk9wZW5BY2saNC5pYmMuY29yZS5jb25uZWN0aW9uLnYxLk1zZ0Nvbm5lY3Rpb25PcGVuQ
  WNrUmVzcG9uc2USgwEKFUNvbm5lY3Rpb25PcGVuQ29uZmlybRIwLmliYy5jb3JlLmNvbm5lY3Rpb24udjEuTXNnQ29ubmVjdGlvb
  k9wZW5Db25maXJtGjguaWJjLmNvcmUuY29ubmVjdGlvbi52MS5Nc2dDb25uZWN0aW9uT3BlbkNvbmZpcm1SZXNwb25zZRJyChZVc
  GRhdGVDb25uZWN0aW9uUGFyYW1zEicuaWJjLmNvcmUuY29ubmVjdGlvbi52MS5Nc2dVcGRhdGVQYXJhbXMaLy5pYmMuY29yZS5jb
  25uZWN0aW9uLnYxLk1zZ1VwZGF0ZVBhcmFtc1Jlc3BvbnNlGgWA57AqAUI/Wj1naXRodWIuY29tL2Nvc21vcy9pYmMtZ28vdjEwL
  21vZHVsZXMvY29yZS8wMy1jb25uZWN0aW9uL3R5cGVzYgZwcm90bzM="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.GogoProto.javaDescriptor,
      cosmos.msg.v1.MsgProto.javaDescriptor,
      com.google.protobuf.any.AnyProto.javaDescriptor,
      ibc.core.client.v1.ClientProto.javaDescriptor,
      ibc.core.connection.v1.ConnectionProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}