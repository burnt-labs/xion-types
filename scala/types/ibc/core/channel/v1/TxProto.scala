// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.channel.v1

object TxProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.GogoProto,
    cosmos.msg.v1.MsgProto,
    ibc.core.client.v1.ClientProto,
    ibc.core.channel.v1.ChannelProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      ibc.core.channel.v1.MsgChannelOpenInit,
      ibc.core.channel.v1.MsgChannelOpenInitResponse,
      ibc.core.channel.v1.MsgChannelOpenTry,
      ibc.core.channel.v1.MsgChannelOpenTryResponse,
      ibc.core.channel.v1.MsgChannelOpenAck,
      ibc.core.channel.v1.MsgChannelOpenAckResponse,
      ibc.core.channel.v1.MsgChannelOpenConfirm,
      ibc.core.channel.v1.MsgChannelOpenConfirmResponse,
      ibc.core.channel.v1.MsgChannelCloseInit,
      ibc.core.channel.v1.MsgChannelCloseInitResponse,
      ibc.core.channel.v1.MsgChannelCloseConfirm,
      ibc.core.channel.v1.MsgChannelCloseConfirmResponse,
      ibc.core.channel.v1.MsgRecvPacket,
      ibc.core.channel.v1.MsgRecvPacketResponse,
      ibc.core.channel.v1.MsgTimeout,
      ibc.core.channel.v1.MsgTimeoutResponse,
      ibc.core.channel.v1.MsgTimeoutOnClose,
      ibc.core.channel.v1.MsgTimeoutOnCloseResponse,
      ibc.core.channel.v1.MsgAcknowledgement,
      ibc.core.channel.v1.MsgAcknowledgementResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChxpYmMvY29yZS9jaGFubmVsL3YxL3R4LnByb3RvEhNpYmMuY29yZS5jaGFubmVsLnYxGhRnb2dvcHJvdG8vZ29nby5wcm90b
  xoXY29zbW9zL21zZy92MS9tc2cucHJvdG8aH2liYy9jb3JlL2NsaWVudC92MS9jbGllbnQucHJvdG8aIWliYy9jb3JlL2NoYW5uZ
  WwvdjEvY2hhbm5lbC5wcm90byK6AQoSTXNnQ2hhbm5lbE9wZW5Jbml0EiQKB3BvcnRfaWQYASABKAlCC+I/CBIGcG9ydElkUgZwb
  3J0SWQSSAoHY2hhbm5lbBgCIAEoCzIcLmliYy5jb3JlLmNoYW5uZWwudjEuQ2hhbm5lbEIQ4j8JEgdjaGFubmVsyN4fAFIHY2hhb
  m5lbBIjCgZzaWduZXIYAyABKAlCC+I/CBIGc2lnbmVyUgZzaWduZXI6D4igHwCC57AqBnNpZ25lciJ5ChpNc2dDaGFubmVsT3Blb
  kluaXRSZXNwb25zZRItCgpjaGFubmVsX2lkGAEgASgJQg7iPwsSCWNoYW5uZWxJZFIJY2hhbm5lbElkEiYKB3ZlcnNpb24YAiABK
  AlCDOI/CRIHdmVyc2lvblIHdmVyc2lvbjoEiKAfACLUAwoRTXNnQ2hhbm5lbE9wZW5UcnkSJAoHcG9ydF9pZBgBIAEoCUIL4j8IE
  gZwb3J0SWRSBnBvcnRJZBJIChNwcmV2aW91c19jaGFubmVsX2lkGAIgASgJQhgYAeI/ExIRcHJldmlvdXNDaGFubmVsSWRSEXByZ
  XZpb3VzQ2hhbm5lbElkEkgKB2NoYW5uZWwYAyABKAsyHC5pYmMuY29yZS5jaGFubmVsLnYxLkNoYW5uZWxCEOI/CRIHY2hhbm5lb
  MjeHwBSB2NoYW5uZWwSSwoUY291bnRlcnBhcnR5X3ZlcnNpb24YBCABKAlCGOI/FRITY291bnRlcnBhcnR5VmVyc2lvblITY291b
  nRlcnBhcnR5VmVyc2lvbhItCgpwcm9vZl9pbml0GAUgASgMQg7iPwsSCXByb29mSW5pdFIJcHJvb2ZJbml0ElMKDHByb29mX2hla
  WdodBgGIAEoCzIaLmliYy5jb3JlLmNsaWVudC52MS5IZWlnaHRCFOI/DRILcHJvb2ZIZWlnaHTI3h8AUgtwcm9vZkhlaWdodBIjC
  gZzaWduZXIYByABKAlCC+I/CBIGc2lnbmVyUgZzaWduZXI6D4igHwCC57AqBnNpZ25lciJ4ChlNc2dDaGFubmVsT3BlblRyeVJlc
  3BvbnNlEiYKB3ZlcnNpb24YASABKAlCDOI/CRIHdmVyc2lvblIHdmVyc2lvbhItCgpjaGFubmVsX2lkGAIgASgJQg7iPwsSCWNoY
  W5uZWxJZFIJY2hhbm5lbElkOgSIoB8AIsADChFNc2dDaGFubmVsT3BlbkFjaxIkCgdwb3J0X2lkGAEgASgJQgviPwgSBnBvcnRJZ
  FIGcG9ydElkEi0KCmNoYW5uZWxfaWQYAiABKAlCDuI/CxIJY2hhbm5lbElkUgljaGFubmVsSWQSUgoXY291bnRlcnBhcnR5X2NoY
  W5uZWxfaWQYAyABKAlCGuI/FxIVY291bnRlcnBhcnR5Q2hhbm5lbElkUhVjb3VudGVycGFydHlDaGFubmVsSWQSSwoUY291bnRlc
  nBhcnR5X3ZlcnNpb24YBCABKAlCGOI/FRITY291bnRlcnBhcnR5VmVyc2lvblITY291bnRlcnBhcnR5VmVyc2lvbhIqCglwcm9vZ
  l90cnkYBSABKAxCDeI/ChIIcHJvb2ZUcnlSCHByb29mVHJ5ElMKDHByb29mX2hlaWdodBgGIAEoCzIaLmliYy5jb3JlLmNsaWVud
  C52MS5IZWlnaHRCFOI/DRILcHJvb2ZIZWlnaHTI3h8AUgtwcm9vZkhlaWdodBIjCgZzaWduZXIYByABKAlCC+I/CBIGc2lnbmVyU
  gZzaWduZXI6D4igHwCC57AqBnNpZ25lciIbChlNc2dDaGFubmVsT3BlbkFja1Jlc3BvbnNlIqMCChVNc2dDaGFubmVsT3BlbkNvb
  mZpcm0SJAoHcG9ydF9pZBgBIAEoCUIL4j8IEgZwb3J0SWRSBnBvcnRJZBItCgpjaGFubmVsX2lkGAIgASgJQg7iPwsSCWNoYW5uZ
  WxJZFIJY2hhbm5lbElkEioKCXByb29mX2FjaxgDIAEoDEIN4j8KEghwcm9vZkFja1IIcHJvb2ZBY2sSUwoMcHJvb2ZfaGVpZ2h0G
  AQgASgLMhouaWJjLmNvcmUuY2xpZW50LnYxLkhlaWdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ2h0EiMKBnNpZ
  25lchgFIAEoCUIL4j8IEgZzaWduZXJSBnNpZ25lcjoPiKAfAILnsCoGc2lnbmVyIh8KHU1zZ0NoYW5uZWxPcGVuQ29uZmlybVJlc
  3BvbnNlIqABChNNc2dDaGFubmVsQ2xvc2VJbml0EiQKB3BvcnRfaWQYASABKAlCC+I/CBIGcG9ydElkUgZwb3J0SWQSLQoKY2hhb
  m5lbF9pZBgCIAEoCUIO4j8LEgljaGFubmVsSWRSCWNoYW5uZWxJZBIjCgZzaWduZXIYAyABKAlCC+I/CBIGc2lnbmVyUgZzaWduZ
  XI6D4igHwCC57AqBnNpZ25lciIdChtNc2dDaGFubmVsQ2xvc2VJbml0UmVzcG9uc2UipwIKFk1zZ0NoYW5uZWxDbG9zZUNvbmZpc
  m0SJAoHcG9ydF9pZBgBIAEoCUIL4j8IEgZwb3J0SWRSBnBvcnRJZBItCgpjaGFubmVsX2lkGAIgASgJQg7iPwsSCWNoYW5uZWxJZ
  FIJY2hhbm5lbElkEi0KCnByb29mX2luaXQYAyABKAxCDuI/CxIJcHJvb2ZJbml0Uglwcm9vZkluaXQSUwoMcHJvb2ZfaGVpZ2h0G
  AQgASgLMhouaWJjLmNvcmUuY2xpZW50LnYxLkhlaWdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ2h0EiMKBnNpZ
  25lchgFIAEoCUIL4j8IEgZzaWduZXJSBnNpZ25lcjoPiKAfAILnsCoGc2lnbmVyIiAKHk1zZ0NoYW5uZWxDbG9zZUNvbmZpcm1SZ
  XNwb25zZSKhAgoNTXNnUmVjdlBhY2tldBJECgZwYWNrZXQYASABKAsyGy5pYmMuY29yZS5jaGFubmVsLnYxLlBhY2tldEIP4j8IE
  gZwYWNrZXTI3h8AUgZwYWNrZXQSPwoQcHJvb2ZfY29tbWl0bWVudBgCIAEoDEIU4j8REg9wcm9vZkNvbW1pdG1lbnRSD3Byb29mQ
  29tbWl0bWVudBJTCgxwcm9vZl9oZWlnaHQYAyABKAsyGi5pYmMuY29yZS5jbGllbnQudjEuSGVpZ2h0QhTiPw0SC3Byb29mSGVpZ
  2h0yN4fAFILcHJvb2ZIZWlnaHQSIwoGc2lnbmVyGAQgASgJQgviPwgSBnNpZ25lclIGc2lnbmVyOg+IoB8AguewKgZzaWduZXIia
  woVTXNnUmVjdlBhY2tldFJlc3BvbnNlEkwKBnJlc3VsdBgBIAEoDjInLmliYy5jb3JlLmNoYW5uZWwudjEuUmVzcG9uc2VSZXN1b
  HRUeXBlQgviPwgSBnJlc3VsdFIGcmVzdWx0OgSIoB8AIuMCCgpNc2dUaW1lb3V0EkQKBnBhY2tldBgBIAEoCzIbLmliYy5jb3JlL
  mNoYW5uZWwudjEuUGFja2V0Qg/iPwgSBnBhY2tldMjeHwBSBnBhY2tldBI/ChBwcm9vZl91bnJlY2VpdmVkGAIgASgMQhTiPxESD
  3Byb29mVW5yZWNlaXZlZFIPcHJvb2ZVbnJlY2VpdmVkElMKDHByb29mX2hlaWdodBgDIAEoCzIaLmliYy5jb3JlLmNsaWVudC52M
  S5IZWlnaHRCFOI/DRILcHJvb2ZIZWlnaHTI3h8AUgtwcm9vZkhlaWdodBJDChJuZXh0X3NlcXVlbmNlX3JlY3YYBCABKARCFeI/E
  hIQbmV4dFNlcXVlbmNlUmVjdlIQbmV4dFNlcXVlbmNlUmVjdhIjCgZzaWduZXIYBSABKAlCC+I/CBIGc2lnbmVyUgZzaWduZXI6D
  4igHwCC57AqBnNpZ25lciJoChJNc2dUaW1lb3V0UmVzcG9uc2USTAoGcmVzdWx0GAEgASgOMicuaWJjLmNvcmUuY2hhbm5lbC52M
  S5SZXNwb25zZVJlc3VsdFR5cGVCC+I/CBIGcmVzdWx0UgZyZXN1bHQ6BIigHwAinAMKEU1zZ1RpbWVvdXRPbkNsb3NlEkQKBnBhY
  2tldBgBIAEoCzIbLmliYy5jb3JlLmNoYW5uZWwudjEuUGFja2V0Qg/iPwgSBnBhY2tldMjeHwBSBnBhY2tldBI/ChBwcm9vZl91b
  nJlY2VpdmVkGAIgASgMQhTiPxESD3Byb29mVW5yZWNlaXZlZFIPcHJvb2ZVbnJlY2VpdmVkEjAKC3Byb29mX2Nsb3NlGAMgASgMQ
  g/iPwwSCnByb29mQ2xvc2VSCnByb29mQ2xvc2USUwoMcHJvb2ZfaGVpZ2h0GAQgASgLMhouaWJjLmNvcmUuY2xpZW50LnYxLkhla
  WdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ2h0EkMKEm5leHRfc2VxdWVuY2VfcmVjdhgFIAEoBEIV4j8SEhBuZ
  Xh0U2VxdWVuY2VSZWN2UhBuZXh0U2VxdWVuY2VSZWN2EiMKBnNpZ25lchgGIAEoCUIL4j8IEgZzaWduZXJSBnNpZ25lcjoPiKAfA
  ILnsCoGc2lnbmVyIm8KGU1zZ1RpbWVvdXRPbkNsb3NlUmVzcG9uc2USTAoGcmVzdWx0GAEgASgOMicuaWJjLmNvcmUuY2hhbm5lb
  C52MS5SZXNwb25zZVJlc3VsdFR5cGVCC+I/CBIGcmVzdWx0UgZyZXN1bHQ6BIigHwAi1wIKEk1zZ0Fja25vd2xlZGdlbWVudBJEC
  gZwYWNrZXQYASABKAsyGy5pYmMuY29yZS5jaGFubmVsLnYxLlBhY2tldEIP4j8IEgZwYWNrZXTI3h8AUgZwYWNrZXQSPgoPYWNrb
  m93bGVkZ2VtZW50GAIgASgMQhTiPxESD2Fja25vd2xlZGdlbWVudFIPYWNrbm93bGVkZ2VtZW50EjAKC3Byb29mX2Fja2VkGAMgA
  SgMQg/iPwwSCnByb29mQWNrZWRSCnByb29mQWNrZWQSUwoMcHJvb2ZfaGVpZ2h0GAQgASgLMhouaWJjLmNvcmUuY2xpZW50LnYxL
  khlaWdodEIU4j8NEgtwcm9vZkhlaWdodMjeHwBSC3Byb29mSGVpZ2h0EiMKBnNpZ25lchgFIAEoCUIL4j8IEgZzaWduZXJSBnNpZ
  25lcjoPiKAfAILnsCoGc2lnbmVyInAKGk1zZ0Fja25vd2xlZGdlbWVudFJlc3BvbnNlEkwKBnJlc3VsdBgBIAEoDjInLmliYy5jb
  3JlLmNoYW5uZWwudjEuUmVzcG9uc2VSZXN1bHRUeXBlQgviPwgSBnJlc3VsdFIGcmVzdWx0OgSIoB8AKt0CChJSZXNwb25zZVJlc
  3VsdFR5cGUSWgogUkVTUE9OU0VfUkVTVUxUX1RZUEVfVU5TUEVDSUZJRUQQABo04j8iEiBSRVNQT05TRV9SRVNVTFRfVFlQRV9VT
  lNQRUNJRklFRIqdIAtVTlNQRUNJRklFRBJFChlSRVNQT05TRV9SRVNVTFRfVFlQRV9OT09QEAEaJuI/GxIZUkVTUE9OU0VfUkVTV
  UxUX1RZUEVfTk9PUIqdIAROT09QEk4KHFJFU1BPTlNFX1JFU1VMVF9UWVBFX1NVQ0NFU1MQAhos4j8eEhxSRVNQT05TRV9SRVNVT
  FRfVFlQRV9TVUNDRVNTip0gB1NVQ0NFU1MSTgocUkVTUE9OU0VfUkVTVUxUX1RZUEVfRkFJTFVSRRADGiziPx4SHFJFU1BPTlNFX
  1JFU1VMVF9UWVBFX0ZBSUxVUkWKnSAHRkFJTFVSRRoEiKMeADK2CAoDTXNnEmsKD0NoYW5uZWxPcGVuSW5pdBInLmliYy5jb3JlL
  mNoYW5uZWwudjEuTXNnQ2hhbm5lbE9wZW5Jbml0Gi8uaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dDaGFubmVsT3BlbkluaXRSZXNwb
  25zZRJoCg5DaGFubmVsT3BlblRyeRImLmliYy5jb3JlLmNoYW5uZWwudjEuTXNnQ2hhbm5lbE9wZW5UcnkaLi5pYmMuY29yZS5ja
  GFubmVsLnYxLk1zZ0NoYW5uZWxPcGVuVHJ5UmVzcG9uc2USaAoOQ2hhbm5lbE9wZW5BY2sSJi5pYmMuY29yZS5jaGFubmVsLnYxL
  k1zZ0NoYW5uZWxPcGVuQWNrGi4uaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dDaGFubmVsT3BlbkFja1Jlc3BvbnNlEnQKEkNoYW5uZ
  WxPcGVuQ29uZmlybRIqLmliYy5jb3JlLmNoYW5uZWwudjEuTXNnQ2hhbm5lbE9wZW5Db25maXJtGjIuaWJjLmNvcmUuY2hhbm5lb
  C52MS5Nc2dDaGFubmVsT3BlbkNvbmZpcm1SZXNwb25zZRJuChBDaGFubmVsQ2xvc2VJbml0EiguaWJjLmNvcmUuY2hhbm5lbC52M
  S5Nc2dDaGFubmVsQ2xvc2VJbml0GjAuaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dDaGFubmVsQ2xvc2VJbml0UmVzcG9uc2USdwoTQ
  2hhbm5lbENsb3NlQ29uZmlybRIrLmliYy5jb3JlLmNoYW5uZWwudjEuTXNnQ2hhbm5lbENsb3NlQ29uZmlybRozLmliYy5jb3JlL
  mNoYW5uZWwudjEuTXNnQ2hhbm5lbENsb3NlQ29uZmlybVJlc3BvbnNlElwKClJlY3ZQYWNrZXQSIi5pYmMuY29yZS5jaGFubmVsL
  nYxLk1zZ1JlY3ZQYWNrZXQaKi5pYmMuY29yZS5jaGFubmVsLnYxLk1zZ1JlY3ZQYWNrZXRSZXNwb25zZRJTCgdUaW1lb3V0Eh8ua
  WJjLmNvcmUuY2hhbm5lbC52MS5Nc2dUaW1lb3V0GicuaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dUaW1lb3V0UmVzcG9uc2USaAoOV
  GltZW91dE9uQ2xvc2USJi5pYmMuY29yZS5jaGFubmVsLnYxLk1zZ1RpbWVvdXRPbkNsb3NlGi4uaWJjLmNvcmUuY2hhbm5lbC52M
  S5Nc2dUaW1lb3V0T25DbG9zZVJlc3BvbnNlEmsKD0Fja25vd2xlZGdlbWVudBInLmliYy5jb3JlLmNoYW5uZWwudjEuTXNnQWNrb
  m93bGVkZ2VtZW50Gi8uaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dBY2tub3dsZWRnZW1lbnRSZXNwb25zZRoFgOewKgFCPFo6Z2l0a
  HViLmNvbS9jb3Ntb3MvaWJjLWdvL3YxMC9tb2R1bGVzL2NvcmUvMDQtY2hhbm5lbC90eXBlc2IGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.GogoProto.javaDescriptor,
      cosmos.msg.v1.MsgProto.javaDescriptor,
      ibc.core.client.v1.ClientProto.javaDescriptor,
      ibc.core.channel.v1.ChannelProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}