// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.channel.v1

/** Acknowledgement is the recommended acknowledgement format to be used by
  * app-specific protocols.
  * NOTE: The field numbers 21 and 22 were explicitly chosen to avoid accidental
  * conflicts with other protobuf message formats used for acknowledgements.
  * The first byte of any message with this format will be the non-ASCII values
  * `0xaa` (result) or `0xb2` (error). Implemented as defined by ICS:
  * https://github.com/cosmos/ibc/tree/master/spec/core/ics-004-channel-and-packet-semantics#acknowledgement-envelope
  */
@SerialVersionUID(0L)
final case class Acknowledgement(
    response: ibc.core.channel.v1.Acknowledgement.Response = ibc.core.channel.v1.Acknowledgement.Response.Empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Acknowledgement] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (response.result.isDefined) {
        val __value = response.result.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(21, __value)
      };
      if (response.error.isDefined) {
        val __value = response.error.get
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(22, __value)
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      response.result.foreach { __v =>
        val __m = __v
        _output__.writeBytes(21, __m)
      };
      response.error.foreach { __v =>
        val __m = __v
        _output__.writeString(22, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getResult: _root_.com.google.protobuf.ByteString = response.result.getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
    def withResult(__v: _root_.com.google.protobuf.ByteString): Acknowledgement = copy(response = ibc.core.channel.v1.Acknowledgement.Response.Result(__v))
    def getError: _root_.scala.Predef.String = response.error.getOrElse("")
    def withError(__v: _root_.scala.Predef.String): Acknowledgement = copy(response = ibc.core.channel.v1.Acknowledgement.Response.Error(__v))
    def clearResponse: Acknowledgement = copy(response = ibc.core.channel.v1.Acknowledgement.Response.Empty)
    def withResponse(__v: ibc.core.channel.v1.Acknowledgement.Response): Acknowledgement = copy(response = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 21 => response.result.orNull
        case 22 => response.error.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 21 => response.result.map(_root_.scalapb.descriptors.PByteString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 22 => response.error.map(_root_.scalapb.descriptors.PString(_)).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.core.channel.v1.Acknowledgement.type = ibc.core.channel.v1.Acknowledgement
    // @@protoc_insertion_point(GeneratedMessage[ibc.core.channel.v1.Acknowledgement])
}

object Acknowledgement extends scalapb.GeneratedMessageCompanion[ibc.core.channel.v1.Acknowledgement] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.core.channel.v1.Acknowledgement] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.core.channel.v1.Acknowledgement = {
    var __response: ibc.core.channel.v1.Acknowledgement.Response = ibc.core.channel.v1.Acknowledgement.Response.Empty
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 170 =>
          __response = ibc.core.channel.v1.Acknowledgement.Response.Result(_input__.readBytes())
        case 178 =>
          __response = ibc.core.channel.v1.Acknowledgement.Response.Error(_input__.readStringRequireUtf8())
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.core.channel.v1.Acknowledgement(
        response = __response,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.core.channel.v1.Acknowledgement] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.core.channel.v1.Acknowledgement(
        response = __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).flatMap(_.as[_root_.scala.Option[_root_.com.google.protobuf.ByteString]]).map(ibc.core.channel.v1.Acknowledgement.Response.Result(_))
            .orElse[ibc.core.channel.v1.Acknowledgement.Response](__fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).flatMap(_.as[_root_.scala.Option[_root_.scala.Predef.String]]).map(ibc.core.channel.v1.Acknowledgement.Response.Error(_)))
            .getOrElse(ibc.core.channel.v1.Acknowledgement.Response.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.core.channel.v1.ChannelProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.core.channel.v1.ChannelProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.core.channel.v1.Acknowledgement(
    response = ibc.core.channel.v1.Acknowledgement.Response.Empty
  )
  sealed trait Response extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isResult: _root_.scala.Boolean = false
    def isError: _root_.scala.Boolean = false
    def result: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = _root_.scala.None
    def error: _root_.scala.Option[_root_.scala.Predef.String] = _root_.scala.None
  }
  object Response {
    @SerialVersionUID(0L)
    case object Empty extends ibc.core.channel.v1.Acknowledgement.Response {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class Result(value: _root_.com.google.protobuf.ByteString) extends ibc.core.channel.v1.Acknowledgement.Response {
      type ValueType = _root_.com.google.protobuf.ByteString
      override def isResult: _root_.scala.Boolean = true
      override def result: _root_.scala.Option[_root_.com.google.protobuf.ByteString] = Some(value)
      override def number: _root_.scala.Int = 21
    }
    @SerialVersionUID(0L)
    final case class Error(value: _root_.scala.Predef.String) extends ibc.core.channel.v1.Acknowledgement.Response {
      type ValueType = _root_.scala.Predef.String
      override def isError: _root_.scala.Boolean = true
      override def error: _root_.scala.Option[_root_.scala.Predef.String] = Some(value)
      override def number: _root_.scala.Int = 22
    }
  }
  implicit class AcknowledgementLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.channel.v1.Acknowledgement]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.core.channel.v1.Acknowledgement](_l) {
    def result: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.getResult)((c_, f_) => c_.copy(response = ibc.core.channel.v1.Acknowledgement.Response.Result(f_)))
    def error: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.getError)((c_, f_) => c_.copy(response = ibc.core.channel.v1.Acknowledgement.Response.Error(f_)))
    def response: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.channel.v1.Acknowledgement.Response] = field(_.response)((c_, f_) => c_.copy(response = f_))
  }
  final val RESULT_FIELD_NUMBER = 21
  final val ERROR_FIELD_NUMBER = 22
  def of(
    response: ibc.core.channel.v1.Acknowledgement.Response
  ): _root_.ibc.core.channel.v1.Acknowledgement = _root_.ibc.core.channel.v1.Acknowledgement(
    response
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.core.channel.v1.Acknowledgement])
}
