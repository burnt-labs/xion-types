// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.channel.v1

/** Packet defines a type that carries data across different chains through IBC
  *
  * @param sequence
  *   number corresponds to the order of sends and receives, where a Packet
  *   with an earlier sequence number must be sent and received before a Packet
  *   with a later sequence number.
  * @param sourcePort
  *   identifies the port on the sending chain.
  * @param sourceChannel
  *   identifies the channel end on the sending chain.
  * @param destinationPort
  *   identifies the port on the receiving chain.
  * @param destinationChannel
  *   identifies the channel end on the receiving chain.
  * @param data
  *   actual opaque bytes transferred directly to the application module
  * @param timeoutHeight
  *   block height after which the packet times out
  * @param timeoutTimestamp
  *   block timestamp (in nanoseconds) after which the packet times out
  */
@SerialVersionUID(0L)
final case class Packet(
    sequence: _root_.scala.Long = 0L,
    sourcePort: _root_.scala.Predef.String = "",
    sourceChannel: _root_.scala.Predef.String = "",
    destinationPort: _root_.scala.Predef.String = "",
    destinationChannel: _root_.scala.Predef.String = "",
    data: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    timeoutHeight: _root_.scala.Option[ibc.core.client.v1.Height] = _root_.scala.None,
    timeoutTimestamp: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Packet] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = sequence
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(1, __value)
        }
      };
      
      {
        val __value = sourcePort
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = sourceChannel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = destinationPort
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = destinationChannel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = data
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(6, __value)
        }
      };
      if (timeoutHeight.isDefined) {
        val __value = timeoutHeight.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = timeoutTimestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = sequence
        if (__v != 0L) {
          _output__.writeUInt64(1, __v)
        }
      };
      {
        val __v = sourcePort
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = sourceChannel
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = destinationPort
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = destinationChannel
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = data
        if (!__v.isEmpty) {
          _output__.writeBytes(6, __v)
        }
      };
      timeoutHeight.foreach { __v =>
        val __m = __v
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = timeoutTimestamp
        if (__v != 0L) {
          _output__.writeUInt64(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withSequence(__v: _root_.scala.Long): Packet = copy(sequence = __v)
    def withSourcePort(__v: _root_.scala.Predef.String): Packet = copy(sourcePort = __v)
    def withSourceChannel(__v: _root_.scala.Predef.String): Packet = copy(sourceChannel = __v)
    def withDestinationPort(__v: _root_.scala.Predef.String): Packet = copy(destinationPort = __v)
    def withDestinationChannel(__v: _root_.scala.Predef.String): Packet = copy(destinationChannel = __v)
    def withData(__v: _root_.com.google.protobuf.ByteString): Packet = copy(data = __v)
    def getTimeoutHeight: ibc.core.client.v1.Height = timeoutHeight.getOrElse(ibc.core.client.v1.Height.defaultInstance)
    def clearTimeoutHeight: Packet = copy(timeoutHeight = _root_.scala.None)
    def withTimeoutHeight(__v: ibc.core.client.v1.Height): Packet = copy(timeoutHeight = Option(__v))
    def withTimeoutTimestamp(__v: _root_.scala.Long): Packet = copy(timeoutTimestamp = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = sequence
          if (__t != 0L) __t else null
        }
        case 2 => {
          val __t = sourcePort
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = sourceChannel
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = destinationPort
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = destinationChannel
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = data
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 7 => timeoutHeight.orNull
        case 8 => {
          val __t = timeoutTimestamp
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PLong(sequence)
        case 2 => _root_.scalapb.descriptors.PString(sourcePort)
        case 3 => _root_.scalapb.descriptors.PString(sourceChannel)
        case 4 => _root_.scalapb.descriptors.PString(destinationPort)
        case 5 => _root_.scalapb.descriptors.PString(destinationChannel)
        case 6 => _root_.scalapb.descriptors.PByteString(data)
        case 7 => timeoutHeight.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => _root_.scalapb.descriptors.PLong(timeoutTimestamp)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.core.channel.v1.Packet.type = ibc.core.channel.v1.Packet
    // @@protoc_insertion_point(GeneratedMessage[ibc.core.channel.v1.Packet])
}

object Packet extends scalapb.GeneratedMessageCompanion[ibc.core.channel.v1.Packet] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.core.channel.v1.Packet] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.core.channel.v1.Packet = {
    var __sequence: _root_.scala.Long = 0L
    var __sourcePort: _root_.scala.Predef.String = ""
    var __sourceChannel: _root_.scala.Predef.String = ""
    var __destinationPort: _root_.scala.Predef.String = ""
    var __destinationChannel: _root_.scala.Predef.String = ""
    var __data: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __timeoutHeight: _root_.scala.Option[ibc.core.client.v1.Height] = _root_.scala.None
    var __timeoutTimestamp: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __sequence = _input__.readUInt64()
        case 18 =>
          __sourcePort = _input__.readStringRequireUtf8()
        case 26 =>
          __sourceChannel = _input__.readStringRequireUtf8()
        case 34 =>
          __destinationPort = _input__.readStringRequireUtf8()
        case 42 =>
          __destinationChannel = _input__.readStringRequireUtf8()
        case 50 =>
          __data = _input__.readBytes()
        case 58 =>
          __timeoutHeight = _root_.scala.Option(__timeoutHeight.fold(_root_.scalapb.LiteParser.readMessage[ibc.core.client.v1.Height](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 64 =>
          __timeoutTimestamp = _input__.readUInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.core.channel.v1.Packet(
        sequence = __sequence,
        sourcePort = __sourcePort,
        sourceChannel = __sourceChannel,
        destinationPort = __destinationPort,
        destinationChannel = __destinationChannel,
        data = __data,
        timeoutHeight = __timeoutHeight,
        timeoutTimestamp = __timeoutTimestamp,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.core.channel.v1.Packet] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.core.channel.v1.Packet(
        sequence = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        sourcePort = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        sourceChannel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        destinationPort = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        destinationChannel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        data = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        timeoutHeight = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[ibc.core.client.v1.Height]]),
        timeoutTimestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.core.channel.v1.ChannelProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.core.channel.v1.ChannelProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 7 => __out = ibc.core.client.v1.Height
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.core.channel.v1.Packet(
    sequence = 0L,
    sourcePort = "",
    sourceChannel = "",
    destinationPort = "",
    destinationChannel = "",
    data = _root_.com.google.protobuf.ByteString.EMPTY,
    timeoutHeight = _root_.scala.None,
    timeoutTimestamp = 0L
  )
  implicit class PacketLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.channel.v1.Packet]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.core.channel.v1.Packet](_l) {
    def sequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.sequence)((c_, f_) => c_.copy(sequence = f_))
    def sourcePort: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sourcePort)((c_, f_) => c_.copy(sourcePort = f_))
    def sourceChannel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sourceChannel)((c_, f_) => c_.copy(sourceChannel = f_))
    def destinationPort: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.destinationPort)((c_, f_) => c_.copy(destinationPort = f_))
    def destinationChannel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.destinationChannel)((c_, f_) => c_.copy(destinationChannel = f_))
    def data: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.data)((c_, f_) => c_.copy(data = f_))
    def timeoutHeight: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.client.v1.Height] = field(_.getTimeoutHeight)((c_, f_) => c_.copy(timeoutHeight = _root_.scala.Option(f_)))
    def optionalTimeoutHeight: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[ibc.core.client.v1.Height]] = field(_.timeoutHeight)((c_, f_) => c_.copy(timeoutHeight = f_))
    def timeoutTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.timeoutTimestamp)((c_, f_) => c_.copy(timeoutTimestamp = f_))
  }
  final val SEQUENCE_FIELD_NUMBER = 1
  final val SOURCE_PORT_FIELD_NUMBER = 2
  final val SOURCE_CHANNEL_FIELD_NUMBER = 3
  final val DESTINATION_PORT_FIELD_NUMBER = 4
  final val DESTINATION_CHANNEL_FIELD_NUMBER = 5
  final val DATA_FIELD_NUMBER = 6
  final val TIMEOUT_HEIGHT_FIELD_NUMBER = 7
  final val TIMEOUT_TIMESTAMP_FIELD_NUMBER = 8
  def of(
    sequence: _root_.scala.Long,
    sourcePort: _root_.scala.Predef.String,
    sourceChannel: _root_.scala.Predef.String,
    destinationPort: _root_.scala.Predef.String,
    destinationChannel: _root_.scala.Predef.String,
    data: _root_.com.google.protobuf.ByteString,
    timeoutHeight: _root_.scala.Option[ibc.core.client.v1.Height],
    timeoutTimestamp: _root_.scala.Long
  ): _root_.ibc.core.channel.v1.Packet = _root_.ibc.core.channel.v1.Packet(
    sequence,
    sourcePort,
    sourceChannel,
    destinationPort,
    destinationChannel,
    data,
    timeoutHeight,
    timeoutTimestamp
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.core.channel.v1.Packet])
}
