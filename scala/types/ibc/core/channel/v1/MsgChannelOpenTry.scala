// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.channel.v1

/** MsgChannelOpenInit defines a msg sent by a Relayer to try to open a channel
  * on Chain B. The version field within the Channel field has been deprecated. Its
  * value will be ignored by core IBC.
  *
  * @param previousChannelId
  *   Deprecated: this field is unused. Crossing hello's are no longer supported in core IBC.
  * @param channel
  *   NOTE: the version field within the channel has been deprecated. Its value will be ignored by core IBC.
  */
@SerialVersionUID(0L)
final case class MsgChannelOpenTry(
    portId: _root_.scala.Predef.String = "",
    @scala.deprecated(message="Marked as deprecated in proto file", "") previousChannelId: _root_.scala.Predef.String = "",
    channel: _root_.scala.Option[ibc.core.channel.v1.Channel] = _root_.scala.None,
    counterpartyVersion: _root_.scala.Predef.String = "",
    proofInit: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    proofHeight: _root_.scala.Option[ibc.core.client.v1.Height] = _root_.scala.None,
    signer: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgChannelOpenTry] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = portId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = previousChannelId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      if (channel.isDefined) {
        val __value = channel.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = counterpartyVersion
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = proofInit
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, __value)
        }
      };
      if (proofHeight.isDefined) {
        val __value = proofHeight.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = signer
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = portId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = previousChannelId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      channel.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = counterpartyVersion
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = proofInit
        if (!__v.isEmpty) {
          _output__.writeBytes(5, __v)
        }
      };
      proofHeight.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = signer
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withPortId(__v: _root_.scala.Predef.String): MsgChannelOpenTry = copy(portId = __v)
    def withPreviousChannelId(__v: _root_.scala.Predef.String): MsgChannelOpenTry = copy(previousChannelId = __v)
    def getChannel: ibc.core.channel.v1.Channel = channel.getOrElse(ibc.core.channel.v1.Channel.defaultInstance)
    def clearChannel: MsgChannelOpenTry = copy(channel = _root_.scala.None)
    def withChannel(__v: ibc.core.channel.v1.Channel): MsgChannelOpenTry = copy(channel = Option(__v))
    def withCounterpartyVersion(__v: _root_.scala.Predef.String): MsgChannelOpenTry = copy(counterpartyVersion = __v)
    def withProofInit(__v: _root_.com.google.protobuf.ByteString): MsgChannelOpenTry = copy(proofInit = __v)
    def getProofHeight: ibc.core.client.v1.Height = proofHeight.getOrElse(ibc.core.client.v1.Height.defaultInstance)
    def clearProofHeight: MsgChannelOpenTry = copy(proofHeight = _root_.scala.None)
    def withProofHeight(__v: ibc.core.client.v1.Height): MsgChannelOpenTry = copy(proofHeight = Option(__v))
    def withSigner(__v: _root_.scala.Predef.String): MsgChannelOpenTry = copy(signer = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = portId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = previousChannelId
          if (__t != "") __t else null
        }
        case 3 => channel.orNull
        case 4 => {
          val __t = counterpartyVersion
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = proofInit
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 6 => proofHeight.orNull
        case 7 => {
          val __t = signer
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(portId)
        case 2 => _root_.scalapb.descriptors.PString(previousChannelId)
        case 3 => channel.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PString(counterpartyVersion)
        case 5 => _root_.scalapb.descriptors.PByteString(proofInit)
        case 6 => proofHeight.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => _root_.scalapb.descriptors.PString(signer)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.core.channel.v1.MsgChannelOpenTry.type = ibc.core.channel.v1.MsgChannelOpenTry
    // @@protoc_insertion_point(GeneratedMessage[ibc.core.channel.v1.MsgChannelOpenTry])
}

object MsgChannelOpenTry extends scalapb.GeneratedMessageCompanion[ibc.core.channel.v1.MsgChannelOpenTry] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.core.channel.v1.MsgChannelOpenTry] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.core.channel.v1.MsgChannelOpenTry = {
    var __portId: _root_.scala.Predef.String = ""
    var __previousChannelId: _root_.scala.Predef.String = ""
    var __channel: _root_.scala.Option[ibc.core.channel.v1.Channel] = _root_.scala.None
    var __counterpartyVersion: _root_.scala.Predef.String = ""
    var __proofInit: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __proofHeight: _root_.scala.Option[ibc.core.client.v1.Height] = _root_.scala.None
    var __signer: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __portId = _input__.readStringRequireUtf8()
        case 18 =>
          __previousChannelId = _input__.readStringRequireUtf8()
        case 26 =>
          __channel = _root_.scala.Option(__channel.fold(_root_.scalapb.LiteParser.readMessage[ibc.core.channel.v1.Channel](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __counterpartyVersion = _input__.readStringRequireUtf8()
        case 42 =>
          __proofInit = _input__.readBytes()
        case 50 =>
          __proofHeight = _root_.scala.Option(__proofHeight.fold(_root_.scalapb.LiteParser.readMessage[ibc.core.client.v1.Height](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __signer = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.core.channel.v1.MsgChannelOpenTry(
        portId = __portId,
        previousChannelId = __previousChannelId,
        channel = __channel,
        counterpartyVersion = __counterpartyVersion,
        proofInit = __proofInit,
        proofHeight = __proofHeight,
        signer = __signer,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.core.channel.v1.MsgChannelOpenTry] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.core.channel.v1.MsgChannelOpenTry(
        portId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        previousChannelId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        channel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[ibc.core.channel.v1.Channel]]),
        counterpartyVersion = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        proofInit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        proofHeight = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[ibc.core.client.v1.Height]]),
        signer = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.core.channel.v1.TxProto.javaDescriptor.getMessageTypes().get(2)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.core.channel.v1.TxProto.scalaDescriptor.messages(2)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = ibc.core.channel.v1.Channel
      case 6 => __out = ibc.core.client.v1.Height
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.core.channel.v1.MsgChannelOpenTry(
    portId = "",
    previousChannelId = "",
    channel = _root_.scala.None,
    counterpartyVersion = "",
    proofInit = _root_.com.google.protobuf.ByteString.EMPTY,
    proofHeight = _root_.scala.None,
    signer = ""
  )
  implicit class MsgChannelOpenTryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.channel.v1.MsgChannelOpenTry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.core.channel.v1.MsgChannelOpenTry](_l) {
    def portId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.portId)((c_, f_) => c_.copy(portId = f_))
    def previousChannelId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.previousChannelId)((c_, f_) => c_.copy(previousChannelId = f_))
    def channel: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.channel.v1.Channel] = field(_.getChannel)((c_, f_) => c_.copy(channel = _root_.scala.Option(f_)))
    def optionalChannel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[ibc.core.channel.v1.Channel]] = field(_.channel)((c_, f_) => c_.copy(channel = f_))
    def counterpartyVersion: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.counterpartyVersion)((c_, f_) => c_.copy(counterpartyVersion = f_))
    def proofInit: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.proofInit)((c_, f_) => c_.copy(proofInit = f_))
    def proofHeight: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.client.v1.Height] = field(_.getProofHeight)((c_, f_) => c_.copy(proofHeight = _root_.scala.Option(f_)))
    def optionalProofHeight: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[ibc.core.client.v1.Height]] = field(_.proofHeight)((c_, f_) => c_.copy(proofHeight = f_))
    def signer: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.signer)((c_, f_) => c_.copy(signer = f_))
  }
  final val PORT_ID_FIELD_NUMBER = 1
  final val PREVIOUS_CHANNEL_ID_FIELD_NUMBER = 2
  final val CHANNEL_FIELD_NUMBER = 3
  final val COUNTERPARTY_VERSION_FIELD_NUMBER = 4
  final val PROOF_INIT_FIELD_NUMBER = 5
  final val PROOF_HEIGHT_FIELD_NUMBER = 6
  final val SIGNER_FIELD_NUMBER = 7
  def of(
    portId: _root_.scala.Predef.String,
    previousChannelId: _root_.scala.Predef.String,
    channel: _root_.scala.Option[ibc.core.channel.v1.Channel],
    counterpartyVersion: _root_.scala.Predef.String,
    proofInit: _root_.com.google.protobuf.ByteString,
    proofHeight: _root_.scala.Option[ibc.core.client.v1.Height],
    signer: _root_.scala.Predef.String
  ): _root_.ibc.core.channel.v1.MsgChannelOpenTry = _root_.ibc.core.channel.v1.MsgChannelOpenTry(
    portId,
    previousChannelId,
    channel,
    counterpartyVersion,
    proofInit,
    proofHeight,
    signer
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.core.channel.v1.MsgChannelOpenTry])
}
