// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.channel.v2

/** QueryUnreceivedAcks is the request type for the
  * Query/UnreceivedAcks RPC method
  *
  * @param clientId
  *   client unique identifier
  * @param packetAckSequences
  *   list of acknowledgement sequences
  */
@SerialVersionUID(0L)
final case class QueryUnreceivedAcksRequest(
    clientId: _root_.scala.Predef.String = "",
    packetAckSequences: _root_.scala.Seq[_root_.scala.Long] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[QueryUnreceivedAcksRequest] {
    private[this] def packetAckSequencesSerializedSize = {
      if (__packetAckSequencesSerializedSizeField == 0) __packetAckSequencesSerializedSizeField = {
        var __s: _root_.scala.Int = 0
        packetAckSequences.foreach(__i => __s += _root_.com.google.protobuf.CodedOutputStream.computeUInt64SizeNoTag(__i))
        __s
      }
      __packetAckSequencesSerializedSizeField
    }
    @transient private[this] var __packetAckSequencesSerializedSizeField: _root_.scala.Int = 0
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = clientId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (packetAckSequences.nonEmpty) {
        val __localsize = packetAckSequencesSerializedSize
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = clientId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      if (packetAckSequences.nonEmpty) {
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(packetAckSequencesSerializedSize)
        packetAckSequences.foreach(_output__.writeUInt64NoTag)
      };
      unknownFields.writeTo(_output__)
    }
    def withClientId(__v: _root_.scala.Predef.String): QueryUnreceivedAcksRequest = copy(clientId = __v)
    def clearPacketAckSequences = copy(packetAckSequences = _root_.scala.Seq.empty)
    def addPacketAckSequences(__vs: _root_.scala.Long *): QueryUnreceivedAcksRequest = addAllPacketAckSequences(__vs)
    def addAllPacketAckSequences(__vs: Iterable[_root_.scala.Long]): QueryUnreceivedAcksRequest = copy(packetAckSequences = packetAckSequences ++ __vs)
    def withPacketAckSequences(__v: _root_.scala.Seq[_root_.scala.Long]): QueryUnreceivedAcksRequest = copy(packetAckSequences = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = clientId
          if (__t != "") __t else null
        }
        case 2 => packetAckSequences
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(clientId)
        case 2 => _root_.scalapb.descriptors.PRepeated(packetAckSequences.iterator.map(_root_.scalapb.descriptors.PLong(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.core.channel.v2.QueryUnreceivedAcksRequest.type = ibc.core.channel.v2.QueryUnreceivedAcksRequest
    // @@protoc_insertion_point(GeneratedMessage[ibc.core.channel.v2.QueryUnreceivedAcksRequest])
}

object QueryUnreceivedAcksRequest extends scalapb.GeneratedMessageCompanion[ibc.core.channel.v2.QueryUnreceivedAcksRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.core.channel.v2.QueryUnreceivedAcksRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.core.channel.v2.QueryUnreceivedAcksRequest = {
    var __clientId: _root_.scala.Predef.String = ""
    val __packetAckSequences: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Long]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __clientId = _input__.readStringRequireUtf8()
        case 16 =>
          __packetAckSequences += _input__.readUInt64()
        case 18 => {
          val length = _input__.readRawVarint32()
          val oldLimit = _input__.pushLimit(length)
          while (_input__.getBytesUntilLimit > 0) {
            __packetAckSequences += _input__.readUInt64()
          }
          _input__.popLimit(oldLimit)
        }
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.core.channel.v2.QueryUnreceivedAcksRequest(
        clientId = __clientId,
        packetAckSequences = __packetAckSequences.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.core.channel.v2.QueryUnreceivedAcksRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.core.channel.v2.QueryUnreceivedAcksRequest(
        clientId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        packetAckSequences = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Long]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.core.channel.v2.QueryProto.javaDescriptor.getMessageTypes().get(14)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.core.channel.v2.QueryProto.scalaDescriptor.messages(14)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.core.channel.v2.QueryUnreceivedAcksRequest(
    clientId = "",
    packetAckSequences = _root_.scala.Seq.empty
  )
  implicit class QueryUnreceivedAcksRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.channel.v2.QueryUnreceivedAcksRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.core.channel.v2.QueryUnreceivedAcksRequest](_l) {
    def clientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientId)((c_, f_) => c_.copy(clientId = f_))
    def packetAckSequences: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Long]] = field(_.packetAckSequences)((c_, f_) => c_.copy(packetAckSequences = f_))
  }
  final val CLIENT_ID_FIELD_NUMBER = 1
  final val PACKET_ACK_SEQUENCES_FIELD_NUMBER = 2
  def of(
    clientId: _root_.scala.Predef.String,
    packetAckSequences: _root_.scala.Seq[_root_.scala.Long]
  ): _root_.ibc.core.channel.v2.QueryUnreceivedAcksRequest = _root_.ibc.core.channel.v2.QueryUnreceivedAcksRequest(
    clientId,
    packetAckSequences
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.core.channel.v2.QueryUnreceivedAcksRequest])
}
