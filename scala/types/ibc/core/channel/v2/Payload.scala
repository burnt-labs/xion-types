// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.channel.v2

/** Payload contains the source and destination ports and payload for the application (version, encoding, raw bytes)
  *
  * @param sourcePort
  *   specifies the source port of the packet.
  * @param destinationPort
  *   specifies the destination port of the packet.
  * @param version
  *   version of the specified application.
  * @param encoding
  *   the encoding used for the provided value.
  * @param value
  *   the raw bytes for the payload.
  */
@SerialVersionUID(0L)
final case class Payload(
    sourcePort: _root_.scala.Predef.String = "",
    destinationPort: _root_.scala.Predef.String = "",
    version: _root_.scala.Predef.String = "",
    encoding: _root_.scala.Predef.String = "",
    value: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Payload] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = sourcePort
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = destinationPort
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = version
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = encoding
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = value
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = sourcePort
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = destinationPort
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = version
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = encoding
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = value
        if (!__v.isEmpty) {
          _output__.writeBytes(5, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withSourcePort(__v: _root_.scala.Predef.String): Payload = copy(sourcePort = __v)
    def withDestinationPort(__v: _root_.scala.Predef.String): Payload = copy(destinationPort = __v)
    def withVersion(__v: _root_.scala.Predef.String): Payload = copy(version = __v)
    def withEncoding(__v: _root_.scala.Predef.String): Payload = copy(encoding = __v)
    def withValue(__v: _root_.com.google.protobuf.ByteString): Payload = copy(value = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = sourcePort
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = destinationPort
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = version
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = encoding
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = value
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(sourcePort)
        case 2 => _root_.scalapb.descriptors.PString(destinationPort)
        case 3 => _root_.scalapb.descriptors.PString(version)
        case 4 => _root_.scalapb.descriptors.PString(encoding)
        case 5 => _root_.scalapb.descriptors.PByteString(value)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.core.channel.v2.Payload.type = ibc.core.channel.v2.Payload
    // @@protoc_insertion_point(GeneratedMessage[ibc.core.channel.v2.Payload])
}

object Payload extends scalapb.GeneratedMessageCompanion[ibc.core.channel.v2.Payload] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.core.channel.v2.Payload] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.core.channel.v2.Payload = {
    var __sourcePort: _root_.scala.Predef.String = ""
    var __destinationPort: _root_.scala.Predef.String = ""
    var __version: _root_.scala.Predef.String = ""
    var __encoding: _root_.scala.Predef.String = ""
    var __value: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __sourcePort = _input__.readStringRequireUtf8()
        case 18 =>
          __destinationPort = _input__.readStringRequireUtf8()
        case 26 =>
          __version = _input__.readStringRequireUtf8()
        case 34 =>
          __encoding = _input__.readStringRequireUtf8()
        case 42 =>
          __value = _input__.readBytes()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.core.channel.v2.Payload(
        sourcePort = __sourcePort,
        destinationPort = __destinationPort,
        version = __version,
        encoding = __encoding,
        value = __value,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.core.channel.v2.Payload] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.core.channel.v2.Payload(
        sourcePort = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        destinationPort = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        version = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        encoding = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.core.channel.v2.PacketProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.core.channel.v2.PacketProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.core.channel.v2.Payload(
    sourcePort = "",
    destinationPort = "",
    version = "",
    encoding = "",
    value = _root_.com.google.protobuf.ByteString.EMPTY
  )
  implicit class PayloadLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.channel.v2.Payload]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.core.channel.v2.Payload](_l) {
    def sourcePort: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.sourcePort)((c_, f_) => c_.copy(sourcePort = f_))
    def destinationPort: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.destinationPort)((c_, f_) => c_.copy(destinationPort = f_))
    def version: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.version)((c_, f_) => c_.copy(version = f_))
    def encoding: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.encoding)((c_, f_) => c_.copy(encoding = f_))
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.value)((c_, f_) => c_.copy(value = f_))
  }
  final val SOURCE_PORT_FIELD_NUMBER = 1
  final val DESTINATION_PORT_FIELD_NUMBER = 2
  final val VERSION_FIELD_NUMBER = 3
  final val ENCODING_FIELD_NUMBER = 4
  final val VALUE_FIELD_NUMBER = 5
  def of(
    sourcePort: _root_.scala.Predef.String,
    destinationPort: _root_.scala.Predef.String,
    version: _root_.scala.Predef.String,
    encoding: _root_.scala.Predef.String,
    value: _root_.com.google.protobuf.ByteString
  ): _root_.ibc.core.channel.v2.Payload = _root_.ibc.core.channel.v2.Payload(
    sourcePort,
    destinationPort,
    version,
    encoding,
    value
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.core.channel.v2.Payload])
}
