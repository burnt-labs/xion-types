// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.client.v1

/** GenesisState defines the ibc client submodule's genesis state.
  *
  * @param clients
  *   client states with their corresponding identifiers
  * @param clientsConsensus
  *   consensus states from each client
  * @param clientsMetadata
  *   metadata from each client
  * @param createLocalhost
  *   Deprecated: create_localhost has been deprecated.
  *   The localhost client is automatically created at genesis.
  * @param nextClientSequence
  *   the sequence for the next generated client identifier
  */
@SerialVersionUID(0L)
final case class GenesisState(
    clients: _root_.scala.Seq[ibc.core.client.v1.IdentifiedClientState] = _root_.scala.Seq.empty,
    clientsConsensus: _root_.scala.Seq[ibc.core.client.v1.ClientConsensusStates] = _root_.scala.Seq.empty,
    clientsMetadata: _root_.scala.Seq[ibc.core.client.v1.IdentifiedGenesisMetadata] = _root_.scala.Seq.empty,
    params: _root_.scala.Option[ibc.core.client.v1.Params] = _root_.scala.None,
    @scala.deprecated(message="Marked as deprecated in proto file", "") createLocalhost: _root_.scala.Boolean = false,
    nextClientSequence: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[GenesisState] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      clients.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      clientsConsensus.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      clientsMetadata.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      if (params.isDefined) {
        val __value = params.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = createLocalhost
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(5, __value)
        }
      };
      
      {
        val __value = nextClientSequence
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      clients.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      clientsConsensus.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      clientsMetadata.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      params.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = createLocalhost
        if (__v != false) {
          _output__.writeBool(5, __v)
        }
      };
      {
        val __v = nextClientSequence
        if (__v != 0L) {
          _output__.writeUInt64(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def clearClients = copy(clients = _root_.scala.Seq.empty)
    def addClients(__vs: ibc.core.client.v1.IdentifiedClientState *): GenesisState = addAllClients(__vs)
    def addAllClients(__vs: Iterable[ibc.core.client.v1.IdentifiedClientState]): GenesisState = copy(clients = clients ++ __vs)
    def withClients(__v: _root_.scala.Seq[ibc.core.client.v1.IdentifiedClientState]): GenesisState = copy(clients = __v)
    def clearClientsConsensus = copy(clientsConsensus = _root_.scala.Seq.empty)
    def addClientsConsensus(__vs: ibc.core.client.v1.ClientConsensusStates *): GenesisState = addAllClientsConsensus(__vs)
    def addAllClientsConsensus(__vs: Iterable[ibc.core.client.v1.ClientConsensusStates]): GenesisState = copy(clientsConsensus = clientsConsensus ++ __vs)
    def withClientsConsensus(__v: _root_.scala.Seq[ibc.core.client.v1.ClientConsensusStates]): GenesisState = copy(clientsConsensus = __v)
    def clearClientsMetadata = copy(clientsMetadata = _root_.scala.Seq.empty)
    def addClientsMetadata(__vs: ibc.core.client.v1.IdentifiedGenesisMetadata *): GenesisState = addAllClientsMetadata(__vs)
    def addAllClientsMetadata(__vs: Iterable[ibc.core.client.v1.IdentifiedGenesisMetadata]): GenesisState = copy(clientsMetadata = clientsMetadata ++ __vs)
    def withClientsMetadata(__v: _root_.scala.Seq[ibc.core.client.v1.IdentifiedGenesisMetadata]): GenesisState = copy(clientsMetadata = __v)
    def getParams: ibc.core.client.v1.Params = params.getOrElse(ibc.core.client.v1.Params.defaultInstance)
    def clearParams: GenesisState = copy(params = _root_.scala.None)
    def withParams(__v: ibc.core.client.v1.Params): GenesisState = copy(params = Option(__v))
    def withCreateLocalhost(__v: _root_.scala.Boolean): GenesisState = copy(createLocalhost = __v)
    def withNextClientSequence(__v: _root_.scala.Long): GenesisState = copy(nextClientSequence = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => clients
        case 2 => clientsConsensus
        case 3 => clientsMetadata
        case 4 => params.orNull
        case 5 => {
          val __t = createLocalhost
          if (__t != false) __t else null
        }
        case 6 => {
          val __t = nextClientSequence
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(clients.iterator.map(_.toPMessage).toVector)
        case 2 => _root_.scalapb.descriptors.PRepeated(clientsConsensus.iterator.map(_.toPMessage).toVector)
        case 3 => _root_.scalapb.descriptors.PRepeated(clientsMetadata.iterator.map(_.toPMessage).toVector)
        case 4 => params.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => _root_.scalapb.descriptors.PBoolean(createLocalhost)
        case 6 => _root_.scalapb.descriptors.PLong(nextClientSequence)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.core.client.v1.GenesisState.type = ibc.core.client.v1.GenesisState
    // @@protoc_insertion_point(GeneratedMessage[ibc.core.client.v1.GenesisState])
}

object GenesisState extends scalapb.GeneratedMessageCompanion[ibc.core.client.v1.GenesisState] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.core.client.v1.GenesisState] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.core.client.v1.GenesisState = {
    val __clients: _root_.scala.collection.immutable.VectorBuilder[ibc.core.client.v1.IdentifiedClientState] = new _root_.scala.collection.immutable.VectorBuilder[ibc.core.client.v1.IdentifiedClientState]
    val __clientsConsensus: _root_.scala.collection.immutable.VectorBuilder[ibc.core.client.v1.ClientConsensusStates] = new _root_.scala.collection.immutable.VectorBuilder[ibc.core.client.v1.ClientConsensusStates]
    val __clientsMetadata: _root_.scala.collection.immutable.VectorBuilder[ibc.core.client.v1.IdentifiedGenesisMetadata] = new _root_.scala.collection.immutable.VectorBuilder[ibc.core.client.v1.IdentifiedGenesisMetadata]
    var __params: _root_.scala.Option[ibc.core.client.v1.Params] = _root_.scala.None
    var __createLocalhost: _root_.scala.Boolean = false
    var __nextClientSequence: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __clients += _root_.scalapb.LiteParser.readMessage[ibc.core.client.v1.IdentifiedClientState](_input__)
        case 18 =>
          __clientsConsensus += _root_.scalapb.LiteParser.readMessage[ibc.core.client.v1.ClientConsensusStates](_input__)
        case 26 =>
          __clientsMetadata += _root_.scalapb.LiteParser.readMessage[ibc.core.client.v1.IdentifiedGenesisMetadata](_input__)
        case 34 =>
          __params = _root_.scala.Option(__params.fold(_root_.scalapb.LiteParser.readMessage[ibc.core.client.v1.Params](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 40 =>
          __createLocalhost = _input__.readBool()
        case 48 =>
          __nextClientSequence = _input__.readUInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.core.client.v1.GenesisState(
        clients = __clients.result(),
        clientsConsensus = __clientsConsensus.result(),
        clientsMetadata = __clientsMetadata.result(),
        params = __params,
        createLocalhost = __createLocalhost,
        nextClientSequence = __nextClientSequence,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.core.client.v1.GenesisState] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.core.client.v1.GenesisState(
        clients = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[ibc.core.client.v1.IdentifiedClientState]]).getOrElse(_root_.scala.Seq.empty),
        clientsConsensus = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[ibc.core.client.v1.ClientConsensusStates]]).getOrElse(_root_.scala.Seq.empty),
        clientsMetadata = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[ibc.core.client.v1.IdentifiedGenesisMetadata]]).getOrElse(_root_.scala.Seq.empty),
        params = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[ibc.core.client.v1.Params]]),
        createLocalhost = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        nextClientSequence = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.core.client.v1.GenesisProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.core.client.v1.GenesisProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = ibc.core.client.v1.IdentifiedClientState
      case 2 => __out = ibc.core.client.v1.ClientConsensusStates
      case 3 => __out = ibc.core.client.v1.IdentifiedGenesisMetadata
      case 4 => __out = ibc.core.client.v1.Params
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.core.client.v1.GenesisState(
    clients = _root_.scala.Seq.empty,
    clientsConsensus = _root_.scala.Seq.empty,
    clientsMetadata = _root_.scala.Seq.empty,
    params = _root_.scala.None,
    createLocalhost = false,
    nextClientSequence = 0L
  )
  implicit class GenesisStateLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.client.v1.GenesisState]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.core.client.v1.GenesisState](_l) {
    def clients: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ibc.core.client.v1.IdentifiedClientState]] = field(_.clients)((c_, f_) => c_.copy(clients = f_))
    def clientsConsensus: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ibc.core.client.v1.ClientConsensusStates]] = field(_.clientsConsensus)((c_, f_) => c_.copy(clientsConsensus = f_))
    def clientsMetadata: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[ibc.core.client.v1.IdentifiedGenesisMetadata]] = field(_.clientsMetadata)((c_, f_) => c_.copy(clientsMetadata = f_))
    def params: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.client.v1.Params] = field(_.getParams)((c_, f_) => c_.copy(params = _root_.scala.Option(f_)))
    def optionalParams: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[ibc.core.client.v1.Params]] = field(_.params)((c_, f_) => c_.copy(params = f_))
    def createLocalhost: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.createLocalhost)((c_, f_) => c_.copy(createLocalhost = f_))
    def nextClientSequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.nextClientSequence)((c_, f_) => c_.copy(nextClientSequence = f_))
  }
  final val CLIENTS_FIELD_NUMBER = 1
  final val CLIENTS_CONSENSUS_FIELD_NUMBER = 2
  final val CLIENTS_METADATA_FIELD_NUMBER = 3
  final val PARAMS_FIELD_NUMBER = 4
  final val CREATE_LOCALHOST_FIELD_NUMBER = 5
  final val NEXT_CLIENT_SEQUENCE_FIELD_NUMBER = 6
  def of(
    clients: _root_.scala.Seq[ibc.core.client.v1.IdentifiedClientState],
    clientsConsensus: _root_.scala.Seq[ibc.core.client.v1.ClientConsensusStates],
    clientsMetadata: _root_.scala.Seq[ibc.core.client.v1.IdentifiedGenesisMetadata],
    params: _root_.scala.Option[ibc.core.client.v1.Params],
    createLocalhost: _root_.scala.Boolean,
    nextClientSequence: _root_.scala.Long
  ): _root_.ibc.core.client.v1.GenesisState = _root_.ibc.core.client.v1.GenesisState(
    clients,
    clientsConsensus,
    clientsMetadata,
    params,
    createLocalhost,
    nextClientSequence
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.core.client.v1.GenesisState])
}
