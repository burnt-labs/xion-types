// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package ibc.core.client.v2

/** MsgRegisterCounterparty defines a message to register a counterparty on a client
  *
  * @param clientId
  *   client identifier
  * @param counterpartyMerklePrefix
  *   counterparty merkle prefix
  * @param counterpartyClientId
  *   counterparty client identifier
  * @param signer
  *   signer address
  */
@SerialVersionUID(0L)
final case class MsgRegisterCounterparty(
    clientId: _root_.scala.Predef.String = "",
    counterpartyMerklePrefix: _root_.scala.Seq[_root_.com.google.protobuf.ByteString] = _root_.scala.Seq.empty,
    counterpartyClientId: _root_.scala.Predef.String = "",
    signer: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[MsgRegisterCounterparty] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = clientId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      counterpartyMerklePrefix.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, __value)
      }
      
      {
        val __value = counterpartyClientId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = signer
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = clientId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      counterpartyMerklePrefix.foreach { __v =>
        val __m = __v
        _output__.writeBytes(2, __m)
      };
      {
        val __v = counterpartyClientId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = signer
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withClientId(__v: _root_.scala.Predef.String): MsgRegisterCounterparty = copy(clientId = __v)
    def clearCounterpartyMerklePrefix = copy(counterpartyMerklePrefix = _root_.scala.Seq.empty)
    def addCounterpartyMerklePrefix(__vs: _root_.com.google.protobuf.ByteString *): MsgRegisterCounterparty = addAllCounterpartyMerklePrefix(__vs)
    def addAllCounterpartyMerklePrefix(__vs: Iterable[_root_.com.google.protobuf.ByteString]): MsgRegisterCounterparty = copy(counterpartyMerklePrefix = counterpartyMerklePrefix ++ __vs)
    def withCounterpartyMerklePrefix(__v: _root_.scala.Seq[_root_.com.google.protobuf.ByteString]): MsgRegisterCounterparty = copy(counterpartyMerklePrefix = __v)
    def withCounterpartyClientId(__v: _root_.scala.Predef.String): MsgRegisterCounterparty = copy(counterpartyClientId = __v)
    def withSigner(__v: _root_.scala.Predef.String): MsgRegisterCounterparty = copy(signer = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = clientId
          if (__t != "") __t else null
        }
        case 2 => counterpartyMerklePrefix
        case 3 => {
          val __t = counterpartyClientId
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = signer
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(clientId)
        case 2 => _root_.scalapb.descriptors.PRepeated(counterpartyMerklePrefix.iterator.map(_root_.scalapb.descriptors.PByteString(_)).toVector)
        case 3 => _root_.scalapb.descriptors.PString(counterpartyClientId)
        case 4 => _root_.scalapb.descriptors.PString(signer)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: ibc.core.client.v2.MsgRegisterCounterparty.type = ibc.core.client.v2.MsgRegisterCounterparty
    // @@protoc_insertion_point(GeneratedMessage[ibc.core.client.v2.MsgRegisterCounterparty])
}

object MsgRegisterCounterparty extends scalapb.GeneratedMessageCompanion[ibc.core.client.v2.MsgRegisterCounterparty] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[ibc.core.client.v2.MsgRegisterCounterparty] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): ibc.core.client.v2.MsgRegisterCounterparty = {
    var __clientId: _root_.scala.Predef.String = ""
    val __counterpartyMerklePrefix: _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString] = new _root_.scala.collection.immutable.VectorBuilder[_root_.com.google.protobuf.ByteString]
    var __counterpartyClientId: _root_.scala.Predef.String = ""
    var __signer: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __clientId = _input__.readStringRequireUtf8()
        case 18 =>
          __counterpartyMerklePrefix += _input__.readBytes()
        case 26 =>
          __counterpartyClientId = _input__.readStringRequireUtf8()
        case 34 =>
          __signer = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    ibc.core.client.v2.MsgRegisterCounterparty(
        clientId = __clientId,
        counterpartyMerklePrefix = __counterpartyMerklePrefix.result(),
        counterpartyClientId = __counterpartyClientId,
        signer = __signer,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[ibc.core.client.v2.MsgRegisterCounterparty] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      ibc.core.client.v2.MsgRegisterCounterparty(
        clientId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        counterpartyMerklePrefix = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.com.google.protobuf.ByteString]]).getOrElse(_root_.scala.Seq.empty),
        counterpartyClientId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        signer = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ibc.core.client.v2.TxProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ibc.core.client.v2.TxProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = ibc.core.client.v2.MsgRegisterCounterparty(
    clientId = "",
    counterpartyMerklePrefix = _root_.scala.Seq.empty,
    counterpartyClientId = "",
    signer = ""
  )
  implicit class MsgRegisterCounterpartyLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, ibc.core.client.v2.MsgRegisterCounterparty]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, ibc.core.client.v2.MsgRegisterCounterparty](_l) {
    def clientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.clientId)((c_, f_) => c_.copy(clientId = f_))
    def counterpartyMerklePrefix: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.com.google.protobuf.ByteString]] = field(_.counterpartyMerklePrefix)((c_, f_) => c_.copy(counterpartyMerklePrefix = f_))
    def counterpartyClientId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.counterpartyClientId)((c_, f_) => c_.copy(counterpartyClientId = f_))
    def signer: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.signer)((c_, f_) => c_.copy(signer = f_))
  }
  final val CLIENT_ID_FIELD_NUMBER = 1
  final val COUNTERPARTY_MERKLE_PREFIX_FIELD_NUMBER = 2
  final val COUNTERPARTY_CLIENT_ID_FIELD_NUMBER = 3
  final val SIGNER_FIELD_NUMBER = 4
  def of(
    clientId: _root_.scala.Predef.String,
    counterpartyMerklePrefix: _root_.scala.Seq[_root_.com.google.protobuf.ByteString],
    counterpartyClientId: _root_.scala.Predef.String,
    signer: _root_.scala.Predef.String
  ): _root_.ibc.core.client.v2.MsgRegisterCounterparty = _root_.ibc.core.client.v2.MsgRegisterCounterparty(
    clientId,
    counterpartyMerklePrefix,
    counterpartyClientId,
    signer
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[ibc.core.client.v2.MsgRegisterCounterparty])
}
