// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmwasm.wasm.v1.proposal_legacy

object ProposalLegacyProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    com.google.protobuf.gogo.GogoProto,
    cosmos_proto.cosmos.CosmosProto,
    cosmos.base.v1beta1.coin.CoinProto,
    cosmwasm.wasm.v1.types.TypesProto,
    amino.amino.AminoProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      cosmwasm.wasm.v1.proposal_legacy.StoreCodeProposal,
      cosmwasm.wasm.v1.proposal_legacy.InstantiateContractProposal,
      cosmwasm.wasm.v1.proposal_legacy.InstantiateContract2Proposal,
      cosmwasm.wasm.v1.proposal_legacy.MigrateContractProposal,
      cosmwasm.wasm.v1.proposal_legacy.SudoContractProposal,
      cosmwasm.wasm.v1.proposal_legacy.ExecuteContractProposal,
      cosmwasm.wasm.v1.proposal_legacy.UpdateAdminProposal,
      cosmwasm.wasm.v1.proposal_legacy.ClearAdminProposal,
      cosmwasm.wasm.v1.proposal_legacy.PinCodesProposal,
      cosmwasm.wasm.v1.proposal_legacy.UnpinCodesProposal,
      cosmwasm.wasm.v1.proposal_legacy.AccessConfigUpdate,
      cosmwasm.wasm.v1.proposal_legacy.UpdateInstantiateConfigProposal,
      cosmwasm.wasm.v1.proposal_legacy.StoreAndInstantiateContractProposal
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CiZjb3Ntd2FzbS93YXNtL3YxL3Byb3Bvc2FsX2xlZ2FjeS5wcm90bxIQY29zbXdhc20ud2FzbS52MRoUZ29nb3Byb3RvL2dvZ
  28ucHJvdG8aGWNvc21vc19wcm90by9jb3Ntb3MucHJvdG8aHmNvc21vcy9iYXNlL3YxYmV0YTEvY29pbi5wcm90bxocY29zbXdhc
  20vd2FzbS92MS90eXBlcy5wcm90bxoRYW1pbm8vYW1pbm8ucHJvdG8i0QQKEVN0b3JlQ29kZVByb3Bvc2FsEiAKBXRpdGxlGAEgA
  SgJQgriPwcSBXRpdGxlUgV0aXRsZRIyCgtkZXNjcmlwdGlvbhgCIAEoCUIQ4j8NEgtkZXNjcmlwdGlvblILZGVzY3JpcHRpb24SO
  QoGcnVuX2FzGAMgASgJQiLiPwcSBXJ1bkFz0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVydW5BcxJHCg53YXNtX2J5dGVfY29kZ
  RgEIAEoDEIh4j8OEgx3YXNtQnl0ZUNvZGXi3h8MV0FTTUJ5dGVDb2RlUgx3YXNtQnl0ZUNvZGUScQoWaW5zdGFudGlhdGVfcGVyb
  Wlzc2lvbhgHIAEoCzIeLmNvc213YXNtLndhc20udjEuQWNjZXNzQ29uZmlnQhriPxcSFWluc3RhbnRpYXRlUGVybWlzc2lvblIVa
  W5zdGFudGlhdGVQZXJtaXNzaW9uEi0KCnVucGluX2NvZGUYCCABKAhCDuI/CxIJdW5waW5Db2RlUgl1bnBpbkNvZGUSIwoGc291c
  mNlGAkgASgJQgviPwgSBnNvdXJjZVIGc291cmNlEiYKB2J1aWxkZXIYCiABKAlCDOI/CRIHYnVpbGRlclIHYnVpbGRlchIqCgljb
  2RlX2hhc2gYCyABKAxCDeI/ChIIY29kZUhhc2hSCGNvZGVIYXNoOjsYAcq0LRpjb3Ntb3MuZ292LnYxYmV0YTEuQ29udGVudIrns
  CoWd2FzbS9TdG9yZUNvZGVQcm9wb3NhbEoECAUQBkoECAYQByLHBAobSW5zdGFudGlhdGVDb250cmFjdFByb3Bvc2FsEiAKBXRpd
  GxlGAEgASgJQgriPwcSBXRpdGxlUgV0aXRsZRIyCgtkZXNjcmlwdGlvbhgCIAEoCUIQ4j8NEgtkZXNjcmlwdGlvblILZGVzY3Jpc
  HRpb24SOQoGcnVuX2FzGAMgASgJQiLiPwcSBXJ1bkFz0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVydW5BcxI4CgVhZG1pbhgEI
  AEoCUIi4j8HEgVhZG1pbtK0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IFYWRtaW4SLgoHY29kZV9pZBgFIAEoBEIV4j8IEgZjb2RlS
  WTi3h8GQ29kZUlEUgZjb2RlSWQSIAoFbGFiZWwYBiABKAlCCuI/BxIFbGFiZWxSBWxhYmVsEkAKA21zZxgHIAEoDEIu4j8FEgNtc
  2f63h8SUmF3Q29udHJhY3RNZXNzYWdlmuewKgtpbmxpbmVfanNvblIDbXNnEoEBCgVmdW5kcxgIIAMoCzIZLmNvc21vcy5iYXNlL
  nYxYmV0YTEuQ29pbkJQ4j8HEgVmdW5kc8jeHwCq3x8oZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2luc5rns
  CoMbGVnYWN5X2NvaW5zqOewKgFSBWZ1bmRzOkUYAcq0LRpjb3Ntb3MuZ292LnYxYmV0YTEuQ29udGVudIrnsCogd2FzbS9JbnN0Y
  W50aWF0ZUNvbnRyYWN0UHJvcG9zYWwijgUKHEluc3RhbnRpYXRlQ29udHJhY3QyUHJvcG9zYWwSIAoFdGl0bGUYASABKAlCCuI/B
  xIFdGl0bGVSBXRpdGxlEjIKC2Rlc2NyaXB0aW9uGAIgASgJQhDiPw0SC2Rlc2NyaXB0aW9uUgtkZXNjcmlwdGlvbhI5CgZydW5fY
  XMYAyABKAlCIuI/BxIFcnVuQXPStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSBXJ1bkFzEjgKBWFkbWluGAQgASgJQiLiPwcSBWFkb
  Wlu0rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUgVhZG1pbhIuCgdjb2RlX2lkGAUgASgEQhXiPwgSBmNvZGVJZOLeHwZDb2RlSURSB
  mNvZGVJZBIgCgVsYWJlbBgGIAEoCUIK4j8HEgVsYWJlbFIFbGFiZWwSQAoDbXNnGAcgASgMQi7iPwUSA21zZ/reHxJSYXdDb250c
  mFjdE1lc3NhZ2Wa57AqC2lubGluZV9qc29uUgNtc2cSgQEKBWZ1bmRzGAggAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db2luQ
  lDiPwcSBWZ1bmRzyN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zmuewKgxsZWdhY3lfY29pb
  nOo57AqAVIFZnVuZHMSHQoEc2FsdBgJIAEoDEIJ4j8GEgRzYWx0UgRzYWx0EiQKB2ZpeF9tc2cYCiABKAhCC+I/CBIGZml4TXNnU
  gZmaXhNc2c6RhgByrQtGmNvc21vcy5nb3YudjFiZXRhMS5Db250ZW50iuewKiF3YXNtL0luc3RhbnRpYXRlQ29udHJhY3QyUHJvc
  G9zYWwi5wIKF01pZ3JhdGVDb250cmFjdFByb3Bvc2FsEiAKBXRpdGxlGAEgASgJQgriPwcSBXRpdGxlUgV0aXRsZRIyCgtkZXNjc
  mlwdGlvbhgCIAEoCUIQ4j8NEgtkZXNjcmlwdGlvblILZGVzY3JpcHRpb24SQQoIY29udHJhY3QYBCABKAlCJeI/ChIIY29udHJhY
  3TStC0UY29zbW9zLkFkZHJlc3NTdHJpbmdSCGNvbnRyYWN0Ei4KB2NvZGVfaWQYBSABKARCFeI/CBIGY29kZUlk4t4fBkNvZGVJR
  FIGY29kZUlkEkAKA21zZxgGIAEoDEIu4j8FEgNtc2f63h8SUmF3Q29udHJhY3RNZXNzYWdlmuewKgtpbmxpbmVfanNvblIDbXNnO
  kEYAcq0LRpjb3Ntb3MuZ292LnYxYmV0YTEuQ29udGVudIrnsCocd2FzbS9NaWdyYXRlQ29udHJhY3RQcm9wb3NhbCKxAgoUU3Vkb
  0NvbnRyYWN0UHJvcG9zYWwSIAoFdGl0bGUYASABKAlCCuI/BxIFdGl0bGVSBXRpdGxlEjIKC2Rlc2NyaXB0aW9uGAIgASgJQhDiP
  w0SC2Rlc2NyaXB0aW9uUgtkZXNjcmlwdGlvbhJBCghjb250cmFjdBgDIAEoCUIl4j8KEghjb250cmFjdNK0LRRjb3Ntb3MuQWRkc
  mVzc1N0cmluZ1IIY29udHJhY3QSQAoDbXNnGAQgASgMQi7iPwUSA21zZ/reHxJSYXdDb250cmFjdE1lc3NhZ2Wa57AqC2lubGluZ
  V9qc29uUgNtc2c6PhgByrQtGmNvc21vcy5nb3YudjFiZXRhMS5Db250ZW50iuewKhl3YXNtL1N1ZG9Db250cmFjdFByb3Bvc2FsI
  vYDChdFeGVjdXRlQ29udHJhY3RQcm9wb3NhbBIgCgV0aXRsZRgBIAEoCUIK4j8HEgV0aXRsZVIFdGl0bGUSMgoLZGVzY3JpcHRpb
  24YAiABKAlCEOI/DRILZGVzY3JpcHRpb25SC2Rlc2NyaXB0aW9uEjkKBnJ1bl9hcxgDIAEoCUIi4j8HEgVydW5Bc9K0LRRjb3Ntb
  3MuQWRkcmVzc1N0cmluZ1IFcnVuQXMSQQoIY29udHJhY3QYBCABKAlCJeI/ChIIY29udHJhY3TStC0UY29zbW9zLkFkZHJlc3NTd
  HJpbmdSCGNvbnRyYWN0EkAKA21zZxgFIAEoDEIu4j8FEgNtc2f63h8SUmF3Q29udHJhY3RNZXNzYWdlmuewKgtpbmxpbmVfanNvb
  lIDbXNnEoEBCgVmdW5kcxgGIAMoCzIZLmNvc21vcy5iYXNlLnYxYmV0YTEuQ29pbkJQ4j8HEgVmdW5kc8jeHwCq3x8oZ2l0aHViL
  mNvbS9jb3Ntb3MvY29zbW9zLXNkay90eXBlcy5Db2luc5rnsCoMbGVnYWN5X2NvaW5zqOewKgFSBWZ1bmRzOkEYAcq0LRpjb3Ntb
  3MuZ292LnYxYmV0YTEuQ29udGVudIrnsCocd2FzbS9FeGVjdXRlQ29udHJhY3RQcm9wb3NhbCLFAgoTVXBkYXRlQWRtaW5Qcm9wb
  3NhbBIgCgV0aXRsZRgBIAEoCUIK4j8HEgV0aXRsZVIFdGl0bGUSMgoLZGVzY3JpcHRpb24YAiABKAlCEOI/DRILZGVzY3JpcHRpb
  25SC2Rlc2NyaXB0aW9uElYKCW5ld19hZG1pbhgDIAEoCUI54j8KEghuZXdBZG1pbvLeHxB5YW1sOiJuZXdfYWRtaW4i0rQtFGNvc
  21vcy5BZGRyZXNzU3RyaW5nUghuZXdBZG1pbhJBCghjb250cmFjdBgEIAEoCUIl4j8KEghjb250cmFjdNK0LRRjb3Ntb3MuQWRkc
  mVzc1N0cmluZ1IIY29udHJhY3Q6PRgByrQtGmNvc21vcy5nb3YudjFiZXRhMS5Db250ZW50iuewKhh3YXNtL1VwZGF0ZUFkbWluU
  HJvcG9zYWwi6wEKEkNsZWFyQWRtaW5Qcm9wb3NhbBIgCgV0aXRsZRgBIAEoCUIK4j8HEgV0aXRsZVIFdGl0bGUSMgoLZGVzY3Jpc
  HRpb24YAiABKAlCEOI/DRILZGVzY3JpcHRpb25SC2Rlc2NyaXB0aW9uEkEKCGNvbnRyYWN0GAMgASgJQiXiPwoSCGNvbnRyYWN00
  rQtFGNvc21vcy5BZGRyZXNzU3RyaW5nUghjb250cmFjdDo8GAHKtC0aY29zbW9zLmdvdi52MWJldGExLkNvbnRlbnSK57AqF3dhc
  20vQ2xlYXJBZG1pblByb3Bvc2FsIusBChBQaW5Db2Rlc1Byb3Bvc2FsEiAKBXRpdGxlGAEgASgJQgriPwcSBXRpdGxlUgV0aXRsZ
  RIyCgtkZXNjcmlwdGlvbhgCIAEoCUIQ4j8NEgtkZXNjcmlwdGlvblILZGVzY3JpcHRpb24SRQoIY29kZV9pZHMYAyADKARCKuI/C
  RIHY29kZUlkc+LeHwdDb2RlSURz8t4fD3lhbWw6ImNvZGVfaWRzIlIHY29kZUlkczo6GAHKtC0aY29zbW9zLmdvdi52MWJldGExL
  kNvbnRlbnSK57AqFXdhc20vUGluQ29kZXNQcm9wb3NhbCLvAQoSVW5waW5Db2Rlc1Byb3Bvc2FsEiAKBXRpdGxlGAEgASgJQgriP
  wcSBXRpdGxlUgV0aXRsZRIyCgtkZXNjcmlwdGlvbhgCIAEoCUIQ4j8NEgtkZXNjcmlwdGlvblILZGVzY3JpcHRpb24SRQoIY29kZ
  V9pZHMYAyADKARCKuI/CRIHY29kZUlkc+LeHwdDb2RlSURz8t4fD3lhbWw6ImNvZGVfaWRzIlIHY29kZUlkczo8GAHKtC0aY29zb
  W9zLmdvdi52MWJldGExLkNvbnRlbnSK57AqF3dhc20vVW5waW5Db2Rlc1Byb3Bvc2FsIsABChJBY2Nlc3NDb25maWdVcGRhdGUSL
  goHY29kZV9pZBgBIAEoBEIV4j8IEgZjb2RlSWTi3h8GQ29kZUlEUgZjb2RlSWQSegoWaW5zdGFudGlhdGVfcGVybWlzc2lvbhgCI
  AEoCzIeLmNvc213YXNtLndhc20udjEuQWNjZXNzQ29uZmlnQiPiPxcSFWluc3RhbnRpYXRlUGVybWlzc2lvbsjeHwCo57AqAVIVa
  W5zdGFudGlhdGVQZXJtaXNzaW9uIuUCCh9VcGRhdGVJbnN0YW50aWF0ZUNvbmZpZ1Byb3Bvc2FsEjAKBXRpdGxlGAEgASgJQhriP
  wcSBXRpdGxl8t4fDHlhbWw6InRpdGxlIlIFdGl0bGUSSAoLZGVzY3JpcHRpb24YAiABKAlCJuI/DRILZGVzY3JpcHRpb27y3h8Se
  WFtbDoiZGVzY3JpcHRpb24iUgtkZXNjcmlwdGlvbhJ7ChVhY2Nlc3NfY29uZmlnX3VwZGF0ZXMYAyADKAsyJC5jb3Ntd2FzbS53Y
  XNtLnYxLkFjY2Vzc0NvbmZpZ1VwZGF0ZUIh4j8VEhNhY2Nlc3NDb25maWdVcGRhdGVzyN4fAKjnsCoBUhNhY2Nlc3NDb25maWdVc
  GRhdGVzOkkYAcq0LRpjb3Ntb3MuZ292LnYxYmV0YTEuQ29udGVudIrnsCokd2FzbS9VcGRhdGVJbnN0YW50aWF0ZUNvbmZpZ1Byb
  3Bvc2FsIvMGCiNTdG9yZUFuZEluc3RhbnRpYXRlQ29udHJhY3RQcm9wb3NhbBIgCgV0aXRsZRgBIAEoCUIK4j8HEgV0aXRsZVIFd
  Gl0bGUSMgoLZGVzY3JpcHRpb24YAiABKAlCEOI/DRILZGVzY3JpcHRpb25SC2Rlc2NyaXB0aW9uEjkKBnJ1bl9hcxgDIAEoCUIi4
  j8HEgVydW5Bc9K0LRRjb3Ntb3MuQWRkcmVzc1N0cmluZ1IFcnVuQXMSRwoOd2FzbV9ieXRlX2NvZGUYBCABKAxCIeI/DhIMd2Fzb
  UJ5dGVDb2Rl4t4fDFdBU01CeXRlQ29kZVIMd2FzbUJ5dGVDb2RlEnEKFmluc3RhbnRpYXRlX3Blcm1pc3Npb24YBSABKAsyHi5jb
  3Ntd2FzbS53YXNtLnYxLkFjY2Vzc0NvbmZpZ0Ia4j8XEhVpbnN0YW50aWF0ZVBlcm1pc3Npb25SFWluc3RhbnRpYXRlUGVybWlzc
  2lvbhItCgp1bnBpbl9jb2RlGAYgASgIQg7iPwsSCXVucGluQ29kZVIJdW5waW5Db2RlEiAKBWFkbWluGAcgASgJQgriPwcSBWFkb
  WluUgVhZG1pbhIgCgVsYWJlbBgIIAEoCUIK4j8HEgVsYWJlbFIFbGFiZWwSQAoDbXNnGAkgASgMQi7iPwUSA21zZ/reHxJSYXdDb
  250cmFjdE1lc3NhZ2Wa57AqC2lubGluZV9qc29uUgNtc2cSgQEKBWZ1bmRzGAogAygLMhkuY29zbW9zLmJhc2UudjFiZXRhMS5Db
  2luQlDiPwcSBWZ1bmRzyN4fAKrfHyhnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkNvaW5zmuewKgxsZWdhY3lfY
  29pbnOo57AqAVIFZnVuZHMSIwoGc291cmNlGAsgASgJQgviPwgSBnNvdXJjZVIGc291cmNlEiYKB2J1aWxkZXIYDCABKAlCDOI/C
  RIHYnVpbGRlclIHYnVpbGRlchIqCgljb2RlX2hhc2gYDSABKAxCDeI/ChIIY29kZUhhc2hSCGNvZGVIYXNoOk0YAcq0LRpjb3Ntb
  3MuZ292LnYxYmV0YTEuQ29udGVudIrnsCood2FzbS9TdG9yZUFuZEluc3RhbnRpYXRlQ29udHJhY3RQcm9wb3NhbEI0WiZnaXRod
  WIuY29tL0Nvc21XYXNtL3dhc21kL3gvd2FzbS90eXBlc8jhHgDY4R4AqOIeAWIGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      com.google.protobuf.gogo.GogoProto.javaDescriptor,
      cosmos_proto.cosmos.CosmosProto.javaDescriptor,
      cosmos.base.v1beta1.coin.CoinProto.javaDescriptor,
      cosmwasm.wasm.v1.types.TypesProto.javaDescriptor,
      amino.amino.AminoProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}