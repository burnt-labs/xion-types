// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmwasm.wasm.v1.authz

/** AcceptedMessageKeysFilter accept only the specific contract message keys in
  * the json object to be executed.
  * Since: wasmd 0.30
  *
  * @param keys
  *   Messages is the list of unique keys
  */
@SerialVersionUID(0L)
final case class AcceptedMessageKeysFilter(
    keys: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AcceptedMessageKeysFilter] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      keys.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      keys.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def clearKeys = copy(keys = _root_.scala.Seq.empty)
    def addKeys(__vs: _root_.scala.Predef.String *): AcceptedMessageKeysFilter = addAllKeys(__vs)
    def addAllKeys(__vs: Iterable[_root_.scala.Predef.String]): AcceptedMessageKeysFilter = copy(keys = keys ++ __vs)
    def withKeys(__v: _root_.scala.Seq[_root_.scala.Predef.String]): AcceptedMessageKeysFilter = copy(keys = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => keys
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(keys.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter.type = cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter
    // @@protoc_insertion_point(GeneratedMessage[cosmwasm.wasm.v1.AcceptedMessageKeysFilter])
}

object AcceptedMessageKeysFilter extends scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter = {
    val __keys: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __keys += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter(
        keys = __keys.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter(
        keys = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmwasm.wasm.v1.authz.AuthzProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmwasm.wasm.v1.authz.AuthzProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter(
    keys = _root_.scala.Seq.empty
  )
  implicit class AcceptedMessageKeysFilterLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter](_l) {
    def keys: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.keys)((c_, f_) => c_.copy(keys = f_))
  }
  final val KEYS_FIELD_NUMBER = 1
  def of(
    keys: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter = _root_.cosmwasm.wasm.v1.authz.AcceptedMessageKeysFilter(
    keys
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmwasm.wasm.v1.AcceptedMessageKeysFilter])
}
