// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmwasm.wasm.v1.query

/** QueryContractsByCodeResponse is the response type for the
  * Query/ContractsByCode RPC method
  *
  * @param contracts
  *   contracts are a set of contract addresses
  * @param pagination
  *   pagination defines the pagination in the response.
  */
@SerialVersionUID(0L)
final case class QueryContractsByCodeResponse(
    contracts: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    pagination: _root_.scala.Option[cosmos.base.query.v1beta1.pagination.PageResponse] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[QueryContractsByCodeResponse] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      contracts.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
      }
      if (pagination.isDefined) {
        val __value = pagination.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      contracts.foreach { __v =>
        val __m = __v
        _output__.writeString(1, __m)
      };
      pagination.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def clearContracts = copy(contracts = _root_.scala.Seq.empty)
    def addContracts(__vs: _root_.scala.Predef.String *): QueryContractsByCodeResponse = addAllContracts(__vs)
    def addAllContracts(__vs: Iterable[_root_.scala.Predef.String]): QueryContractsByCodeResponse = copy(contracts = contracts ++ __vs)
    def withContracts(__v: _root_.scala.Seq[_root_.scala.Predef.String]): QueryContractsByCodeResponse = copy(contracts = __v)
    def getPagination: cosmos.base.query.v1beta1.pagination.PageResponse = pagination.getOrElse(cosmos.base.query.v1beta1.pagination.PageResponse.defaultInstance)
    def clearPagination: QueryContractsByCodeResponse = copy(pagination = _root_.scala.None)
    def withPagination(__v: cosmos.base.query.v1beta1.pagination.PageResponse): QueryContractsByCodeResponse = copy(pagination = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => contracts
        case 2 => pagination.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(contracts.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 2 => pagination.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmwasm.wasm.v1.query.QueryContractsByCodeResponse.type = cosmwasm.wasm.v1.query.QueryContractsByCodeResponse
    // @@protoc_insertion_point(GeneratedMessage[cosmwasm.wasm.v1.QueryContractsByCodeResponse])
}

object QueryContractsByCodeResponse extends scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.query.QueryContractsByCodeResponse] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.query.QueryContractsByCodeResponse] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmwasm.wasm.v1.query.QueryContractsByCodeResponse = {
    val __contracts: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __pagination: _root_.scala.Option[cosmos.base.query.v1beta1.pagination.PageResponse] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __contracts += _input__.readStringRequireUtf8()
        case 18 =>
          __pagination = _root_.scala.Option(__pagination.fold(_root_.scalapb.LiteParser.readMessage[cosmos.base.query.v1beta1.pagination.PageResponse](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmwasm.wasm.v1.query.QueryContractsByCodeResponse(
        contracts = __contracts.result(),
        pagination = __pagination,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmwasm.wasm.v1.query.QueryContractsByCodeResponse] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmwasm.wasm.v1.query.QueryContractsByCodeResponse(
        contracts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        pagination = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[cosmos.base.query.v1beta1.pagination.PageResponse]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmwasm.wasm.v1.query.QueryProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmwasm.wasm.v1.query.QueryProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = cosmos.base.query.v1beta1.pagination.PageResponse
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmwasm.wasm.v1.query.QueryContractsByCodeResponse(
    contracts = _root_.scala.Seq.empty,
    pagination = _root_.scala.None
  )
  implicit class QueryContractsByCodeResponseLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmwasm.wasm.v1.query.QueryContractsByCodeResponse]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmwasm.wasm.v1.query.QueryContractsByCodeResponse](_l) {
    def contracts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.contracts)((c_, f_) => c_.copy(contracts = f_))
    def pagination: _root_.scalapb.lenses.Lens[UpperPB, cosmos.base.query.v1beta1.pagination.PageResponse] = field(_.getPagination)((c_, f_) => c_.copy(pagination = _root_.scala.Option(f_)))
    def optionalPagination: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[cosmos.base.query.v1beta1.pagination.PageResponse]] = field(_.pagination)((c_, f_) => c_.copy(pagination = f_))
  }
  final val CONTRACTS_FIELD_NUMBER = 1
  final val PAGINATION_FIELD_NUMBER = 2
  def of(
    contracts: _root_.scala.Seq[_root_.scala.Predef.String],
    pagination: _root_.scala.Option[cosmos.base.query.v1beta1.pagination.PageResponse]
  ): _root_.cosmwasm.wasm.v1.query.QueryContractsByCodeResponse = _root_.cosmwasm.wasm.v1.query.QueryContractsByCodeResponse(
    contracts,
    pagination
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmwasm.wasm.v1.QueryContractsByCodeResponse])
}
