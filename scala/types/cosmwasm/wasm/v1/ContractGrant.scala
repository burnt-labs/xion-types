// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmwasm.wasm.v1

/** ContractGrant a granted permission for a single contract
  * Since: wasmd 0.30
  *
  * @param contract
  *   Contract is the bech32 address of the smart contract
  * @param limit
  *   Limit defines execution limits that are enforced and updated when the grant
  *   is applied. When the limit lapsed the grant is removed.
  * @param filter
  *   Filter define more fine-grained control on the message payload passed
  *   to the contract in the operation. When no filter applies on execution, the
  *   operation is prohibited.
  */
@SerialVersionUID(0L)
final case class ContractGrant(
    contract: _root_.scala.Predef.String = "",
    limit: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    filter: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ContractGrant] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = contract
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (limit.isDefined) {
        val __value = limit.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (filter.isDefined) {
        val __value = filter.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = contract
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      limit.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      filter.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withContract(__v: _root_.scala.Predef.String): ContractGrant = copy(contract = __v)
    def getLimit: com.google.protobuf.any.Any = limit.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearLimit: ContractGrant = copy(limit = _root_.scala.None)
    def withLimit(__v: com.google.protobuf.any.Any): ContractGrant = copy(limit = Option(__v))
    def getFilter: com.google.protobuf.any.Any = filter.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearFilter: ContractGrant = copy(filter = _root_.scala.None)
    def withFilter(__v: com.google.protobuf.any.Any): ContractGrant = copy(filter = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = contract
          if (__t != "") __t else null
        }
        case 2 => limit.orNull
        case 3 => filter.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(contract)
        case 2 => limit.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => filter.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmwasm.wasm.v1.ContractGrant.type = cosmwasm.wasm.v1.ContractGrant
    // @@protoc_insertion_point(GeneratedMessage[cosmwasm.wasm.v1.ContractGrant])
}

object ContractGrant extends scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.ContractGrant] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.ContractGrant] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmwasm.wasm.v1.ContractGrant = {
    var __contract: _root_.scala.Predef.String = ""
    var __limit: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var __filter: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __contract = _input__.readStringRequireUtf8()
        case 18 =>
          __limit = _root_.scala.Option(__limit.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __filter = _root_.scala.Option(__filter.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmwasm.wasm.v1.ContractGrant(
        contract = __contract,
        limit = __limit,
        filter = __filter,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmwasm.wasm.v1.ContractGrant] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmwasm.wasm.v1.ContractGrant(
        contract = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        limit = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]]),
        filter = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmwasm.wasm.v1.AuthzProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmwasm.wasm.v1.AuthzProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.any.Any
      case 3 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = cosmwasm.wasm.v1.ContractGrant(
    contract = "",
    limit = _root_.scala.None,
    filter = _root_.scala.None
  )
  implicit class ContractGrantLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmwasm.wasm.v1.ContractGrant]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmwasm.wasm.v1.ContractGrant](_l) {
    def contract: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.contract)((c_, f_) => c_.copy(contract = f_))
    def limit: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getLimit)((c_, f_) => c_.copy(limit = _root_.scala.Option(f_)))
    def optionalLimit: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.limit)((c_, f_) => c_.copy(limit = f_))
    def filter: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getFilter)((c_, f_) => c_.copy(filter = _root_.scala.Option(f_)))
    def optionalFilter: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.filter)((c_, f_) => c_.copy(filter = f_))
  }
  final val CONTRACT_FIELD_NUMBER = 1
  final val LIMIT_FIELD_NUMBER = 2
  final val FILTER_FIELD_NUMBER = 3
  def of(
    contract: _root_.scala.Predef.String,
    limit: _root_.scala.Option[com.google.protobuf.any.Any],
    filter: _root_.scala.Option[com.google.protobuf.any.Any]
  ): _root_.cosmwasm.wasm.v1.ContractGrant = _root_.cosmwasm.wasm.v1.ContractGrant(
    contract,
    limit,
    filter
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmwasm.wasm.v1.ContractGrant])
}
