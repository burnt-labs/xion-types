// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package cosmwasm.wasm.v1.types

/** AccessConfig access control type.
  */
@SerialVersionUID(0L)
final case class AccessConfig(
    permission: cosmwasm.wasm.v1.types.AccessType = cosmwasm.wasm.v1.types.AccessType.ACCESS_TYPE_UNSPECIFIED,
    addresses: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[AccessConfig] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = permission.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      addresses.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = permission.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
      addresses.foreach { __v =>
        val __m = __v
        _output__.writeString(3, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withPermission(__v: cosmwasm.wasm.v1.types.AccessType): AccessConfig = copy(permission = __v)
    def clearAddresses = copy(addresses = _root_.scala.Seq.empty)
    def addAddresses(__vs: _root_.scala.Predef.String *): AccessConfig = addAllAddresses(__vs)
    def addAllAddresses(__vs: Iterable[_root_.scala.Predef.String]): AccessConfig = copy(addresses = addresses ++ __vs)
    def withAddresses(__v: _root_.scala.Seq[_root_.scala.Predef.String]): AccessConfig = copy(addresses = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = permission.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 3 => addresses
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(permission.scalaValueDescriptor)
        case 3 => _root_.scalapb.descriptors.PRepeated(addresses.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: cosmwasm.wasm.v1.types.AccessConfig.type = cosmwasm.wasm.v1.types.AccessConfig
    // @@protoc_insertion_point(GeneratedMessage[cosmwasm.wasm.v1.AccessConfig])
}

object AccessConfig extends scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.types.AccessConfig] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[cosmwasm.wasm.v1.types.AccessConfig] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): cosmwasm.wasm.v1.types.AccessConfig = {
    var __permission: cosmwasm.wasm.v1.types.AccessType = cosmwasm.wasm.v1.types.AccessType.ACCESS_TYPE_UNSPECIFIED
    val __addresses: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __permission = cosmwasm.wasm.v1.types.AccessType.fromValue(_input__.readEnum())
        case 26 =>
          __addresses += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    cosmwasm.wasm.v1.types.AccessConfig(
        permission = __permission,
        addresses = __addresses.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[cosmwasm.wasm.v1.types.AccessConfig] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      cosmwasm.wasm.v1.types.AccessConfig(
        permission = cosmwasm.wasm.v1.types.AccessType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(cosmwasm.wasm.v1.types.AccessType.ACCESS_TYPE_UNSPECIFIED.scalaValueDescriptor).number),
        addresses = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = cosmwasm.wasm.v1.types.TypesProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = cosmwasm.wasm.v1.types.TypesProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => cosmwasm.wasm.v1.types.AccessType
    }
  }
  lazy val defaultInstance = cosmwasm.wasm.v1.types.AccessConfig(
    permission = cosmwasm.wasm.v1.types.AccessType.ACCESS_TYPE_UNSPECIFIED,
    addresses = _root_.scala.Seq.empty
  )
  implicit class AccessConfigLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, cosmwasm.wasm.v1.types.AccessConfig]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, cosmwasm.wasm.v1.types.AccessConfig](_l) {
    def permission: _root_.scalapb.lenses.Lens[UpperPB, cosmwasm.wasm.v1.types.AccessType] = field(_.permission)((c_, f_) => c_.copy(permission = f_))
    def addresses: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.addresses)((c_, f_) => c_.copy(addresses = f_))
  }
  final val PERMISSION_FIELD_NUMBER = 1
  final val ADDRESSES_FIELD_NUMBER = 3
  def of(
    permission: cosmwasm.wasm.v1.types.AccessType,
    addresses: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.cosmwasm.wasm.v1.types.AccessConfig = _root_.cosmwasm.wasm.v1.types.AccessConfig(
    permission,
    addresses
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[cosmwasm.wasm.v1.AccessConfig])
}
