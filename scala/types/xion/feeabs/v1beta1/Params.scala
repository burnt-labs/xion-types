// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package xion.feeabs.v1beta1

/** Params defines the parameters for the feeabs module.
  *
  * @param nativeIbcedInOsmosis
  *   native ibced in osmosis
  * @param osmosisQueryTwapPath
  *   osmosis query TWAP path
  * @param chainName
  *   chain name for ibc path unwinding
  * @param ibcTransferChannel
  *   transfer channel for cross chain swap with osmosis
  * @param ibcQueryIcqChannel
  *   query twap price icq channel with osmosis
  * @param osmosisCrosschainSwapAddress
  *   osmosis crosschain swap contract address
  */
@SerialVersionUID(0L)
final case class Params(
    nativeIbcedInOsmosis: _root_.scala.Predef.String = "",
    osmosisQueryTwapPath: _root_.scala.Predef.String = "",
    chainName: _root_.scala.Predef.String = "",
    ibcTransferChannel: _root_.scala.Predef.String = "",
    ibcQueryIcqChannel: _root_.scala.Predef.String = "",
    osmosisCrosschainSwapAddress: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Params] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = nativeIbcedInOsmosis
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = osmosisQueryTwapPath
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = chainName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = ibcTransferChannel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = ibcQueryIcqChannel
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = osmosisCrosschainSwapAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = nativeIbcedInOsmosis
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = osmosisQueryTwapPath
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = chainName
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = ibcTransferChannel
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = ibcQueryIcqChannel
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = osmosisCrosschainSwapAddress
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withNativeIbcedInOsmosis(__v: _root_.scala.Predef.String): Params = copy(nativeIbcedInOsmosis = __v)
    def withOsmosisQueryTwapPath(__v: _root_.scala.Predef.String): Params = copy(osmosisQueryTwapPath = __v)
    def withChainName(__v: _root_.scala.Predef.String): Params = copy(chainName = __v)
    def withIbcTransferChannel(__v: _root_.scala.Predef.String): Params = copy(ibcTransferChannel = __v)
    def withIbcQueryIcqChannel(__v: _root_.scala.Predef.String): Params = copy(ibcQueryIcqChannel = __v)
    def withOsmosisCrosschainSwapAddress(__v: _root_.scala.Predef.String): Params = copy(osmosisCrosschainSwapAddress = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = nativeIbcedInOsmosis
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = osmosisQueryTwapPath
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = chainName
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = ibcTransferChannel
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = ibcQueryIcqChannel
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = osmosisCrosschainSwapAddress
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(nativeIbcedInOsmosis)
        case 2 => _root_.scalapb.descriptors.PString(osmosisQueryTwapPath)
        case 3 => _root_.scalapb.descriptors.PString(chainName)
        case 4 => _root_.scalapb.descriptors.PString(ibcTransferChannel)
        case 5 => _root_.scalapb.descriptors.PString(ibcQueryIcqChannel)
        case 6 => _root_.scalapb.descriptors.PString(osmosisCrosschainSwapAddress)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: xion.feeabs.v1beta1.Params.type = xion.feeabs.v1beta1.Params
    // @@protoc_insertion_point(GeneratedMessage[xion.feeabs.v1beta1.Params])
}

object Params extends scalapb.GeneratedMessageCompanion[xion.feeabs.v1beta1.Params] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[xion.feeabs.v1beta1.Params] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): xion.feeabs.v1beta1.Params = {
    var __nativeIbcedInOsmosis: _root_.scala.Predef.String = ""
    var __osmosisQueryTwapPath: _root_.scala.Predef.String = ""
    var __chainName: _root_.scala.Predef.String = ""
    var __ibcTransferChannel: _root_.scala.Predef.String = ""
    var __ibcQueryIcqChannel: _root_.scala.Predef.String = ""
    var __osmosisCrosschainSwapAddress: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __nativeIbcedInOsmosis = _input__.readStringRequireUtf8()
        case 18 =>
          __osmosisQueryTwapPath = _input__.readStringRequireUtf8()
        case 26 =>
          __chainName = _input__.readStringRequireUtf8()
        case 34 =>
          __ibcTransferChannel = _input__.readStringRequireUtf8()
        case 42 =>
          __ibcQueryIcqChannel = _input__.readStringRequireUtf8()
        case 50 =>
          __osmosisCrosschainSwapAddress = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    xion.feeabs.v1beta1.Params(
        nativeIbcedInOsmosis = __nativeIbcedInOsmosis,
        osmosisQueryTwapPath = __osmosisQueryTwapPath,
        chainName = __chainName,
        ibcTransferChannel = __ibcTransferChannel,
        ibcQueryIcqChannel = __ibcQueryIcqChannel,
        osmosisCrosschainSwapAddress = __osmosisCrosschainSwapAddress,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[xion.feeabs.v1beta1.Params] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      xion.feeabs.v1beta1.Params(
        nativeIbcedInOsmosis = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        osmosisQueryTwapPath = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        chainName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        ibcTransferChannel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        ibcQueryIcqChannel = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        osmosisCrosschainSwapAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = xion.feeabs.v1beta1.ParamsProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = xion.feeabs.v1beta1.ParamsProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = xion.feeabs.v1beta1.Params(
    nativeIbcedInOsmosis = "",
    osmosisQueryTwapPath = "",
    chainName = "",
    ibcTransferChannel = "",
    ibcQueryIcqChannel = "",
    osmosisCrosschainSwapAddress = ""
  )
  implicit class ParamsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, xion.feeabs.v1beta1.Params]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, xion.feeabs.v1beta1.Params](_l) {
    def nativeIbcedInOsmosis: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.nativeIbcedInOsmosis)((c_, f_) => c_.copy(nativeIbcedInOsmosis = f_))
    def osmosisQueryTwapPath: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.osmosisQueryTwapPath)((c_, f_) => c_.copy(osmosisQueryTwapPath = f_))
    def chainName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.chainName)((c_, f_) => c_.copy(chainName = f_))
    def ibcTransferChannel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.ibcTransferChannel)((c_, f_) => c_.copy(ibcTransferChannel = f_))
    def ibcQueryIcqChannel: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.ibcQueryIcqChannel)((c_, f_) => c_.copy(ibcQueryIcqChannel = f_))
    def osmosisCrosschainSwapAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.osmosisCrosschainSwapAddress)((c_, f_) => c_.copy(osmosisCrosschainSwapAddress = f_))
  }
  final val NATIVE_IBCED_IN_OSMOSIS_FIELD_NUMBER = 1
  final val OSMOSIS_QUERY_TWAP_PATH_FIELD_NUMBER = 2
  final val CHAIN_NAME_FIELD_NUMBER = 3
  final val IBC_TRANSFER_CHANNEL_FIELD_NUMBER = 4
  final val IBC_QUERY_ICQ_CHANNEL_FIELD_NUMBER = 5
  final val OSMOSIS_CROSSCHAIN_SWAP_ADDRESS_FIELD_NUMBER = 6
  def of(
    nativeIbcedInOsmosis: _root_.scala.Predef.String,
    osmosisQueryTwapPath: _root_.scala.Predef.String,
    chainName: _root_.scala.Predef.String,
    ibcTransferChannel: _root_.scala.Predef.String,
    ibcQueryIcqChannel: _root_.scala.Predef.String,
    osmosisCrosschainSwapAddress: _root_.scala.Predef.String
  ): _root_.xion.feeabs.v1beta1.Params = _root_.xion.feeabs.v1beta1.Params(
    nativeIbcedInOsmosis,
    osmosisQueryTwapPath,
    chainName,
    ibcTransferChannel,
    ibcQueryIcqChannel,
    osmosisCrosschainSwapAddress
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[xion.feeabs.v1beta1.Params])
}
