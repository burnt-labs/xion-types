// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package xion.feeabs.v1beta1

/** EpochInfo defines information of a epoch
  *
  * @param identifier
  *   identifier is a unique reference to this particular timer.
  * @param startTime
  *   start_time is the time at which the timer first ever ticks.
  *   If start_time is in the future, the epoch will not begin until the start
  *   time.
  * @param duration
  *   duration is the time in between epoch ticks.
  *   In order for intended behavior to be met, duration should
  *   be greater than the chains expected block time.
  *   Duration must be non-zero.
  * @param currentEpoch
  *   current_epoch is the current epoch number, or in other words,
  *   how many times has the timer 'ticked'.
  *   The first tick (current_epoch=1) is defined as
  *   the first block whose blocktime is greater than the EpochInfo start_time.
  * @param currentEpochStartTime
  *   current_epoch_start_time describes the start time of the current timer
  *   interval. The interval is (current_epoch_start_time,
  *   current_epoch_start_time + duration] When the timer ticks, this is set to
  *   current_epoch_start_time = last_epoch_start_time + duration only one timer
  *   tick for a given identifier can occur per block.
  *  
  *   NOTE! The current_epoch_start_time may diverge significantly from the
  *   wall-clock time the epoch began at. Wall-clock time of epoch start may be
  *   &gt;&gt; current_epoch_start_time. Suppose current_epoch_start_time = 10,
  *   duration = 5. Suppose the chain goes offline at t=14, and comes back online
  *   at t=30, and produces blocks at every successive time. (t=31, 32, etc.)
  *   * The t=30 block will start the epoch for (10, 15]
  *   * The t=31 block will start the epoch for (15, 20]
  *   * The t=32 block will start the epoch for (20, 25]
  *   * The t=33 block will start the epoch for (25, 30]
  *   * The t=34 block will start the epoch for (30, 35]
  *   * The **t=36** block will start the epoch for (35, 40]
  * @param epochCountingStarted
  *   epoch_counting_started is a boolean, that indicates whether this
  *   epoch timer has began yet.
  * @param currentEpochStartHeight
  *   current_epoch_start_height is the block height at which the current epoch
  *   started. (The block height at which the timer last ticked)
  */
@SerialVersionUID(0L)
final case class EpochInfo(
    identifier: _root_.scala.Predef.String = "",
    startTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    duration: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None,
    currentEpoch: _root_.scala.Long = 0L,
    currentEpochStartTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    epochCountingStarted: _root_.scala.Boolean = false,
    currentEpochStartHeight: _root_.scala.Long = 0L,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[EpochInfo] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = identifier
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (startTime.isDefined) {
        val __value = startTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (duration.isDefined) {
        val __value = duration.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = currentEpoch
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(4, __value)
        }
      };
      if (currentEpochStartTime.isDefined) {
        val __value = currentEpochStartTime.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = epochCountingStarted
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(6, __value)
        }
      };
      
      {
        val __value = currentEpochStartHeight
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt64Size(8, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = identifier
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      startTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      duration.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = currentEpoch
        if (__v != 0L) {
          _output__.writeInt64(4, __v)
        }
      };
      currentEpochStartTime.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = epochCountingStarted
        if (__v != false) {
          _output__.writeBool(6, __v)
        }
      };
      {
        val __v = currentEpochStartHeight
        if (__v != 0L) {
          _output__.writeInt64(8, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withIdentifier(__v: _root_.scala.Predef.String): EpochInfo = copy(identifier = __v)
    def getStartTime: com.google.protobuf.timestamp.Timestamp = startTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearStartTime: EpochInfo = copy(startTime = _root_.scala.None)
    def withStartTime(__v: com.google.protobuf.timestamp.Timestamp): EpochInfo = copy(startTime = Option(__v))
    def getDuration: com.google.protobuf.duration.Duration = duration.getOrElse(com.google.protobuf.duration.Duration.defaultInstance)
    def clearDuration: EpochInfo = copy(duration = _root_.scala.None)
    def withDuration(__v: com.google.protobuf.duration.Duration): EpochInfo = copy(duration = Option(__v))
    def withCurrentEpoch(__v: _root_.scala.Long): EpochInfo = copy(currentEpoch = __v)
    def getCurrentEpochStartTime: com.google.protobuf.timestamp.Timestamp = currentEpochStartTime.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearCurrentEpochStartTime: EpochInfo = copy(currentEpochStartTime = _root_.scala.None)
    def withCurrentEpochStartTime(__v: com.google.protobuf.timestamp.Timestamp): EpochInfo = copy(currentEpochStartTime = Option(__v))
    def withEpochCountingStarted(__v: _root_.scala.Boolean): EpochInfo = copy(epochCountingStarted = __v)
    def withCurrentEpochStartHeight(__v: _root_.scala.Long): EpochInfo = copy(currentEpochStartHeight = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = identifier
          if (__t != "") __t else null
        }
        case 2 => startTime.orNull
        case 3 => duration.orNull
        case 4 => {
          val __t = currentEpoch
          if (__t != 0L) __t else null
        }
        case 5 => currentEpochStartTime.orNull
        case 6 => {
          val __t = epochCountingStarted
          if (__t != false) __t else null
        }
        case 8 => {
          val __t = currentEpochStartHeight
          if (__t != 0L) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(identifier)
        case 2 => startTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => duration.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PLong(currentEpoch)
        case 5 => currentEpochStartTime.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => _root_.scalapb.descriptors.PBoolean(epochCountingStarted)
        case 8 => _root_.scalapb.descriptors.PLong(currentEpochStartHeight)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: xion.feeabs.v1beta1.EpochInfo.type = xion.feeabs.v1beta1.EpochInfo
    // @@protoc_insertion_point(GeneratedMessage[xion.feeabs.v1beta1.EpochInfo])
}

object EpochInfo extends scalapb.GeneratedMessageCompanion[xion.feeabs.v1beta1.EpochInfo] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[xion.feeabs.v1beta1.EpochInfo] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): xion.feeabs.v1beta1.EpochInfo = {
    var __identifier: _root_.scala.Predef.String = ""
    var __startTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __duration: _root_.scala.Option[com.google.protobuf.duration.Duration] = _root_.scala.None
    var __currentEpoch: _root_.scala.Long = 0L
    var __currentEpochStartTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __epochCountingStarted: _root_.scala.Boolean = false
    var __currentEpochStartHeight: _root_.scala.Long = 0L
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __identifier = _input__.readStringRequireUtf8()
        case 18 =>
          __startTime = _root_.scala.Option(__startTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __duration = _root_.scala.Option(__duration.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.duration.Duration](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 32 =>
          __currentEpoch = _input__.readInt64()
        case 42 =>
          __currentEpochStartTime = _root_.scala.Option(__currentEpochStartTime.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 48 =>
          __epochCountingStarted = _input__.readBool()
        case 64 =>
          __currentEpochStartHeight = _input__.readInt64()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    xion.feeabs.v1beta1.EpochInfo(
        identifier = __identifier,
        startTime = __startTime,
        duration = __duration,
        currentEpoch = __currentEpoch,
        currentEpochStartTime = __currentEpochStartTime,
        epochCountingStarted = __epochCountingStarted,
        currentEpochStartHeight = __currentEpochStartHeight,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[xion.feeabs.v1beta1.EpochInfo] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      xion.feeabs.v1beta1.EpochInfo(
        identifier = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        startTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        duration = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.duration.Duration]]),
        currentEpoch = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        currentEpochStartTime = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        epochCountingStarted = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        currentEpochStartHeight = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.scala.Long]).getOrElse(0L)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = xion.feeabs.v1beta1.EpochProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = xion.feeabs.v1beta1.EpochProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.timestamp.Timestamp
      case 3 => __out = com.google.protobuf.duration.Duration
      case 5 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = xion.feeabs.v1beta1.EpochInfo(
    identifier = "",
    startTime = _root_.scala.None,
    duration = _root_.scala.None,
    currentEpoch = 0L,
    currentEpochStartTime = _root_.scala.None,
    epochCountingStarted = false,
    currentEpochStartHeight = 0L
  )
  implicit class EpochInfoLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, xion.feeabs.v1beta1.EpochInfo]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, xion.feeabs.v1beta1.EpochInfo](_l) {
    def identifier: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.identifier)((c_, f_) => c_.copy(identifier = f_))
    def startTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getStartTime)((c_, f_) => c_.copy(startTime = _root_.scala.Option(f_)))
    def optionalStartTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.startTime)((c_, f_) => c_.copy(startTime = f_))
    def duration: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.duration.Duration] = field(_.getDuration)((c_, f_) => c_.copy(duration = _root_.scala.Option(f_)))
    def optionalDuration: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.duration.Duration]] = field(_.duration)((c_, f_) => c_.copy(duration = f_))
    def currentEpoch: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.currentEpoch)((c_, f_) => c_.copy(currentEpoch = f_))
    def currentEpochStartTime: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getCurrentEpochStartTime)((c_, f_) => c_.copy(currentEpochStartTime = _root_.scala.Option(f_)))
    def optionalCurrentEpochStartTime: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.currentEpochStartTime)((c_, f_) => c_.copy(currentEpochStartTime = f_))
    def epochCountingStarted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.epochCountingStarted)((c_, f_) => c_.copy(epochCountingStarted = f_))
    def currentEpochStartHeight: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.currentEpochStartHeight)((c_, f_) => c_.copy(currentEpochStartHeight = f_))
  }
  final val IDENTIFIER_FIELD_NUMBER = 1
  final val START_TIME_FIELD_NUMBER = 2
  final val DURATION_FIELD_NUMBER = 3
  final val CURRENT_EPOCH_FIELD_NUMBER = 4
  final val CURRENT_EPOCH_START_TIME_FIELD_NUMBER = 5
  final val EPOCH_COUNTING_STARTED_FIELD_NUMBER = 6
  final val CURRENT_EPOCH_START_HEIGHT_FIELD_NUMBER = 8
  def of(
    identifier: _root_.scala.Predef.String,
    startTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    duration: _root_.scala.Option[com.google.protobuf.duration.Duration],
    currentEpoch: _root_.scala.Long,
    currentEpochStartTime: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    epochCountingStarted: _root_.scala.Boolean,
    currentEpochStartHeight: _root_.scala.Long
  ): _root_.xion.feeabs.v1beta1.EpochInfo = _root_.xion.feeabs.v1beta1.EpochInfo(
    identifier,
    startTime,
    duration,
    currentEpoch,
    currentEpochStartTime,
    epochCountingStarted,
    currentEpochStartHeight
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[xion.feeabs.v1beta1.EpochInfo])
}
