// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package packetforward.v1

/** InFlightPacket contains information about original packet for
  * writing the acknowledgement and refunding if necessary.
  */
@SerialVersionUID(0L)
final case class InFlightPacket(
    originalSenderAddress: _root_.scala.Predef.String = "",
    refundChannelId: _root_.scala.Predef.String = "",
    refundPortId: _root_.scala.Predef.String = "",
    packetSrcChannelId: _root_.scala.Predef.String = "",
    packetSrcPortId: _root_.scala.Predef.String = "",
    packetTimeoutTimestamp: _root_.scala.Long = 0L,
    packetTimeoutHeight: _root_.scala.Predef.String = "",
    packetData: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    refundSequence: _root_.scala.Long = 0L,
    retriesRemaining: _root_.scala.Int = 0,
    timeout: _root_.scala.Long = 0L,
    nonrefundable: _root_.scala.Boolean = false,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[InFlightPacket] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = originalSenderAddress
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = refundChannelId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = refundPortId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = packetSrcChannelId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      
      {
        val __value = packetSrcPortId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, __value)
        }
      };
      
      {
        val __value = packetTimeoutTimestamp
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(6, __value)
        }
      };
      
      {
        val __value = packetTimeoutHeight
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      
      {
        val __value = packetData
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(8, __value)
        }
      };
      
      {
        val __value = refundSequence
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(9, __value)
        }
      };
      
      {
        val __value = retriesRemaining
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(10, __value)
        }
      };
      
      {
        val __value = timeout
        if (__value != 0L) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeUInt64Size(11, __value)
        }
      };
      
      {
        val __value = nonrefundable
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(12, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = originalSenderAddress
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = refundChannelId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = refundPortId
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = packetSrcChannelId
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = packetSrcPortId
        if (!__v.isEmpty) {
          _output__.writeString(5, __v)
        }
      };
      {
        val __v = packetTimeoutTimestamp
        if (__v != 0L) {
          _output__.writeUInt64(6, __v)
        }
      };
      {
        val __v = packetTimeoutHeight
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
      {
        val __v = packetData
        if (!__v.isEmpty) {
          _output__.writeBytes(8, __v)
        }
      };
      {
        val __v = refundSequence
        if (__v != 0L) {
          _output__.writeUInt64(9, __v)
        }
      };
      {
        val __v = retriesRemaining
        if (__v != 0) {
          _output__.writeInt32(10, __v)
        }
      };
      {
        val __v = timeout
        if (__v != 0L) {
          _output__.writeUInt64(11, __v)
        }
      };
      {
        val __v = nonrefundable
        if (__v != false) {
          _output__.writeBool(12, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withOriginalSenderAddress(__v: _root_.scala.Predef.String): InFlightPacket = copy(originalSenderAddress = __v)
    def withRefundChannelId(__v: _root_.scala.Predef.String): InFlightPacket = copy(refundChannelId = __v)
    def withRefundPortId(__v: _root_.scala.Predef.String): InFlightPacket = copy(refundPortId = __v)
    def withPacketSrcChannelId(__v: _root_.scala.Predef.String): InFlightPacket = copy(packetSrcChannelId = __v)
    def withPacketSrcPortId(__v: _root_.scala.Predef.String): InFlightPacket = copy(packetSrcPortId = __v)
    def withPacketTimeoutTimestamp(__v: _root_.scala.Long): InFlightPacket = copy(packetTimeoutTimestamp = __v)
    def withPacketTimeoutHeight(__v: _root_.scala.Predef.String): InFlightPacket = copy(packetTimeoutHeight = __v)
    def withPacketData(__v: _root_.com.google.protobuf.ByteString): InFlightPacket = copy(packetData = __v)
    def withRefundSequence(__v: _root_.scala.Long): InFlightPacket = copy(refundSequence = __v)
    def withRetriesRemaining(__v: _root_.scala.Int): InFlightPacket = copy(retriesRemaining = __v)
    def withTimeout(__v: _root_.scala.Long): InFlightPacket = copy(timeout = __v)
    def withNonrefundable(__v: _root_.scala.Boolean): InFlightPacket = copy(nonrefundable = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = originalSenderAddress
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = refundChannelId
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = refundPortId
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = packetSrcChannelId
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = packetSrcPortId
          if (__t != "") __t else null
        }
        case 6 => {
          val __t = packetTimeoutTimestamp
          if (__t != 0L) __t else null
        }
        case 7 => {
          val __t = packetTimeoutHeight
          if (__t != "") __t else null
        }
        case 8 => {
          val __t = packetData
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 9 => {
          val __t = refundSequence
          if (__t != 0L) __t else null
        }
        case 10 => {
          val __t = retriesRemaining
          if (__t != 0) __t else null
        }
        case 11 => {
          val __t = timeout
          if (__t != 0L) __t else null
        }
        case 12 => {
          val __t = nonrefundable
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(originalSenderAddress)
        case 2 => _root_.scalapb.descriptors.PString(refundChannelId)
        case 3 => _root_.scalapb.descriptors.PString(refundPortId)
        case 4 => _root_.scalapb.descriptors.PString(packetSrcChannelId)
        case 5 => _root_.scalapb.descriptors.PString(packetSrcPortId)
        case 6 => _root_.scalapb.descriptors.PLong(packetTimeoutTimestamp)
        case 7 => _root_.scalapb.descriptors.PString(packetTimeoutHeight)
        case 8 => _root_.scalapb.descriptors.PByteString(packetData)
        case 9 => _root_.scalapb.descriptors.PLong(refundSequence)
        case 10 => _root_.scalapb.descriptors.PInt(retriesRemaining)
        case 11 => _root_.scalapb.descriptors.PLong(timeout)
        case 12 => _root_.scalapb.descriptors.PBoolean(nonrefundable)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: packetforward.v1.InFlightPacket.type = packetforward.v1.InFlightPacket
    // @@protoc_insertion_point(GeneratedMessage[packetforward.v1.InFlightPacket])
}

object InFlightPacket extends scalapb.GeneratedMessageCompanion[packetforward.v1.InFlightPacket] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[packetforward.v1.InFlightPacket] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): packetforward.v1.InFlightPacket = {
    var __originalSenderAddress: _root_.scala.Predef.String = ""
    var __refundChannelId: _root_.scala.Predef.String = ""
    var __refundPortId: _root_.scala.Predef.String = ""
    var __packetSrcChannelId: _root_.scala.Predef.String = ""
    var __packetSrcPortId: _root_.scala.Predef.String = ""
    var __packetTimeoutTimestamp: _root_.scala.Long = 0L
    var __packetTimeoutHeight: _root_.scala.Predef.String = ""
    var __packetData: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    var __refundSequence: _root_.scala.Long = 0L
    var __retriesRemaining: _root_.scala.Int = 0
    var __timeout: _root_.scala.Long = 0L
    var __nonrefundable: _root_.scala.Boolean = false
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __originalSenderAddress = _input__.readStringRequireUtf8()
        case 18 =>
          __refundChannelId = _input__.readStringRequireUtf8()
        case 26 =>
          __refundPortId = _input__.readStringRequireUtf8()
        case 34 =>
          __packetSrcChannelId = _input__.readStringRequireUtf8()
        case 42 =>
          __packetSrcPortId = _input__.readStringRequireUtf8()
        case 48 =>
          __packetTimeoutTimestamp = _input__.readUInt64()
        case 58 =>
          __packetTimeoutHeight = _input__.readStringRequireUtf8()
        case 66 =>
          __packetData = _input__.readBytes()
        case 72 =>
          __refundSequence = _input__.readUInt64()
        case 80 =>
          __retriesRemaining = _input__.readInt32()
        case 88 =>
          __timeout = _input__.readUInt64()
        case 96 =>
          __nonrefundable = _input__.readBool()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    packetforward.v1.InFlightPacket(
        originalSenderAddress = __originalSenderAddress,
        refundChannelId = __refundChannelId,
        refundPortId = __refundPortId,
        packetSrcChannelId = __packetSrcChannelId,
        packetSrcPortId = __packetSrcPortId,
        packetTimeoutTimestamp = __packetTimeoutTimestamp,
        packetTimeoutHeight = __packetTimeoutHeight,
        packetData = __packetData,
        refundSequence = __refundSequence,
        retriesRemaining = __retriesRemaining,
        timeout = __timeout,
        nonrefundable = __nonrefundable,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[packetforward.v1.InFlightPacket] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      packetforward.v1.InFlightPacket(
        originalSenderAddress = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        refundChannelId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        refundPortId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        packetSrcChannelId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        packetSrcPortId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        packetTimeoutTimestamp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        packetTimeoutHeight = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        packetData = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        refundSequence = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        retriesRemaining = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        timeout = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.scala.Long]).getOrElse(0L),
        nonrefundable = __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = packetforward.v1.GenesisProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = packetforward.v1.GenesisProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = packetforward.v1.InFlightPacket(
    originalSenderAddress = "",
    refundChannelId = "",
    refundPortId = "",
    packetSrcChannelId = "",
    packetSrcPortId = "",
    packetTimeoutTimestamp = 0L,
    packetTimeoutHeight = "",
    packetData = _root_.com.google.protobuf.ByteString.EMPTY,
    refundSequence = 0L,
    retriesRemaining = 0,
    timeout = 0L,
    nonrefundable = false
  )
  implicit class InFlightPacketLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, packetforward.v1.InFlightPacket]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, packetforward.v1.InFlightPacket](_l) {
    def originalSenderAddress: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.originalSenderAddress)((c_, f_) => c_.copy(originalSenderAddress = f_))
    def refundChannelId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.refundChannelId)((c_, f_) => c_.copy(refundChannelId = f_))
    def refundPortId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.refundPortId)((c_, f_) => c_.copy(refundPortId = f_))
    def packetSrcChannelId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.packetSrcChannelId)((c_, f_) => c_.copy(packetSrcChannelId = f_))
    def packetSrcPortId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.packetSrcPortId)((c_, f_) => c_.copy(packetSrcPortId = f_))
    def packetTimeoutTimestamp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.packetTimeoutTimestamp)((c_, f_) => c_.copy(packetTimeoutTimestamp = f_))
    def packetTimeoutHeight: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.packetTimeoutHeight)((c_, f_) => c_.copy(packetTimeoutHeight = f_))
    def packetData: _root_.scalapb.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.packetData)((c_, f_) => c_.copy(packetData = f_))
    def refundSequence: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.refundSequence)((c_, f_) => c_.copy(refundSequence = f_))
    def retriesRemaining: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.retriesRemaining)((c_, f_) => c_.copy(retriesRemaining = f_))
    def timeout: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Long] = field(_.timeout)((c_, f_) => c_.copy(timeout = f_))
    def nonrefundable: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.nonrefundable)((c_, f_) => c_.copy(nonrefundable = f_))
  }
  final val ORIGINAL_SENDER_ADDRESS_FIELD_NUMBER = 1
  final val REFUND_CHANNEL_ID_FIELD_NUMBER = 2
  final val REFUND_PORT_ID_FIELD_NUMBER = 3
  final val PACKET_SRC_CHANNEL_ID_FIELD_NUMBER = 4
  final val PACKET_SRC_PORT_ID_FIELD_NUMBER = 5
  final val PACKET_TIMEOUT_TIMESTAMP_FIELD_NUMBER = 6
  final val PACKET_TIMEOUT_HEIGHT_FIELD_NUMBER = 7
  final val PACKET_DATA_FIELD_NUMBER = 8
  final val REFUND_SEQUENCE_FIELD_NUMBER = 9
  final val RETRIES_REMAINING_FIELD_NUMBER = 10
  final val TIMEOUT_FIELD_NUMBER = 11
  final val NONREFUNDABLE_FIELD_NUMBER = 12
  def of(
    originalSenderAddress: _root_.scala.Predef.String,
    refundChannelId: _root_.scala.Predef.String,
    refundPortId: _root_.scala.Predef.String,
    packetSrcChannelId: _root_.scala.Predef.String,
    packetSrcPortId: _root_.scala.Predef.String,
    packetTimeoutTimestamp: _root_.scala.Long,
    packetTimeoutHeight: _root_.scala.Predef.String,
    packetData: _root_.com.google.protobuf.ByteString,
    refundSequence: _root_.scala.Long,
    retriesRemaining: _root_.scala.Int,
    timeout: _root_.scala.Long,
    nonrefundable: _root_.scala.Boolean
  ): _root_.packetforward.v1.InFlightPacket = _root_.packetforward.v1.InFlightPacket(
    originalSenderAddress,
    refundChannelId,
    refundPortId,
    packetSrcChannelId,
    packetSrcPortId,
    packetTimeoutTimestamp,
    packetTimeoutHeight,
    packetData,
    refundSequence,
    retriesRemaining,
    timeout,
    nonrefundable
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[packetforward.v1.InFlightPacket])
}
