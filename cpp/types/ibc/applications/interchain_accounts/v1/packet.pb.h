// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/interchain_accounts/v1/packet.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_2epb_2eh
#define ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto;
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace v1 {
class CosmosTx;
struct CosmosTxDefaultTypeInternal;
extern CosmosTxDefaultTypeInternal _CosmosTx_default_instance_;
class InterchainAccountPacketData;
struct InterchainAccountPacketDataDefaultTypeInternal;
extern InterchainAccountPacketDataDefaultTypeInternal _InterchainAccountPacketData_default_instance_;
}  // namespace v1
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace v1 {
enum Type : int {
  TYPE_UNSPECIFIED = 0,
  TYPE_EXECUTE_TX = 1,
  Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Type_IsValid(int value);
extern const uint32_t Type_internal_data_[];
constexpr Type Type_MIN = static_cast<Type>(0);
constexpr Type Type_MAX = static_cast<Type>(1);
constexpr int Type_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Type_descriptor();
template <typename T>
const std::string& Type_Name(T value) {
  static_assert(std::is_same<T, Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return Type_Name(static_cast<Type>(value));
}
template <>
inline const std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Type_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Type_Parse(absl::string_view name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
      Type_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class InterchainAccountPacketData final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData) */ {
 public:
  inline InterchainAccountPacketData() : InterchainAccountPacketData(nullptr) {}
  ~InterchainAccountPacketData() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterchainAccountPacketData* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterchainAccountPacketData));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterchainAccountPacketData(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterchainAccountPacketData(const InterchainAccountPacketData& from) : InterchainAccountPacketData(nullptr, from) {}
  inline InterchainAccountPacketData(InterchainAccountPacketData&& from) noexcept
      : InterchainAccountPacketData(nullptr, std::move(from)) {}
  inline InterchainAccountPacketData& operator=(const InterchainAccountPacketData& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterchainAccountPacketData& operator=(InterchainAccountPacketData&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterchainAccountPacketData& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterchainAccountPacketData* internal_default_instance() {
    return reinterpret_cast<const InterchainAccountPacketData*>(
        &_InterchainAccountPacketData_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InterchainAccountPacketData& a, InterchainAccountPacketData& b) { a.Swap(&b); }
  inline void Swap(InterchainAccountPacketData* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterchainAccountPacketData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterchainAccountPacketData* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterchainAccountPacketData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterchainAccountPacketData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterchainAccountPacketData& from) { InterchainAccountPacketData::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterchainAccountPacketData* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.v1.InterchainAccountPacketData"; }

 protected:
  explicit InterchainAccountPacketData(::google::protobuf::Arena* arena);
  InterchainAccountPacketData(::google::protobuf::Arena* arena, const InterchainAccountPacketData& from);
  InterchainAccountPacketData(::google::protobuf::Arena* arena, InterchainAccountPacketData&& from) noexcept
      : InterchainAccountPacketData(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kMemoFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string memo = 3 [json_name = "memo"];
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // .ibc.applications.interchain_accounts.v1.Type type = 1 [json_name = "type"];
  void clear_type() ;
  ::ibc::applications::interchain_accounts::v1::Type type() const;
  void set_type(::ibc::applications::interchain_accounts::v1::Type value);

  private:
  ::ibc::applications::interchain_accounts::v1::Type _internal_type() const;
  void _internal_set_type(::ibc::applications::interchain_accounts::v1::Type value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterchainAccountPacketData& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    int type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto;
};
// -------------------------------------------------------------------

class CosmosTx final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.v1.CosmosTx) */ {
 public:
  inline CosmosTx() : CosmosTx(nullptr) {}
  ~CosmosTx() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CosmosTx* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CosmosTx));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CosmosTx(
      ::google::protobuf::internal::ConstantInitialized);

  inline CosmosTx(const CosmosTx& from) : CosmosTx(nullptr, from) {}
  inline CosmosTx(CosmosTx&& from) noexcept
      : CosmosTx(nullptr, std::move(from)) {}
  inline CosmosTx& operator=(const CosmosTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline CosmosTx& operator=(CosmosTx&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CosmosTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const CosmosTx* internal_default_instance() {
    return reinterpret_cast<const CosmosTx*>(
        &_CosmosTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(CosmosTx& a, CosmosTx& b) { a.Swap(&b); }
  inline void Swap(CosmosTx* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CosmosTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CosmosTx* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CosmosTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CosmosTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CosmosTx& from) { CosmosTx::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CosmosTx* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.v1.CosmosTx"; }

 protected:
  explicit CosmosTx(::google::protobuf::Arena* arena);
  CosmosTx(::google::protobuf::Arena* arena, const CosmosTx& from);
  CosmosTx(::google::protobuf::Arena* arena, CosmosTx&& from) noexcept
      : CosmosTx(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::google::protobuf::Any* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_messages();
  public:
  const ::google::protobuf::Any& messages(int index) const;
  ::google::protobuf::Any* add_messages();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& messages() const;
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.v1.CosmosTx)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CosmosTx& from_msg);
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > messages_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InterchainAccountPacketData

// .ibc.applications.interchain_accounts.v1.Type type = 1 [json_name = "type"];
inline void InterchainAccountPacketData::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::ibc::applications::interchain_accounts::v1::Type InterchainAccountPacketData::type() const {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.type)
  return _internal_type();
}
inline void InterchainAccountPacketData::set_type(::ibc::applications::interchain_accounts::v1::Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.type)
}
inline ::ibc::applications::interchain_accounts::v1::Type InterchainAccountPacketData::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ibc::applications::interchain_accounts::v1::Type>(_impl_.type_);
}
inline void InterchainAccountPacketData::_internal_set_type(::ibc::applications::interchain_accounts::v1::Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bytes data = 2 [json_name = "data"];
inline void InterchainAccountPacketData::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& InterchainAccountPacketData::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterchainAccountPacketData::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.data)
}
inline std::string* InterchainAccountPacketData::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.data)
  return _s;
}
inline const std::string& InterchainAccountPacketData::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void InterchainAccountPacketData::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* InterchainAccountPacketData::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* InterchainAccountPacketData::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.data)
  return _impl_.data_.Release();
}
inline void InterchainAccountPacketData::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.data)
}

// string memo = 3 [json_name = "memo"];
inline void InterchainAccountPacketData::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& InterchainAccountPacketData::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterchainAccountPacketData::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.memo)
}
inline std::string* InterchainAccountPacketData::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.memo)
  return _s;
}
inline const std::string& InterchainAccountPacketData::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void InterchainAccountPacketData::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* InterchainAccountPacketData::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* InterchainAccountPacketData::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.memo)
  return _impl_.memo_.Release();
}
inline void InterchainAccountPacketData::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.memo_.IsDefault()) {
    _impl_.memo_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.v1.InterchainAccountPacketData.memo)
}

// -------------------------------------------------------------------

// CosmosTx

// repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
inline int CosmosTx::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int CosmosTx::messages_size() const {
  return _internal_messages_size();
}
inline ::google::protobuf::Any* CosmosTx::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.v1.CosmosTx.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* CosmosTx::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.applications.interchain_accounts.v1.CosmosTx.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::google::protobuf::Any& CosmosTx::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.v1.CosmosTx.messages)
  return _internal_messages().Get(index);
}
inline ::google::protobuf::Any* CosmosTx::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:ibc.applications.interchain_accounts.v1.CosmosTx.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& CosmosTx::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.applications.interchain_accounts.v1.CosmosTx.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
CosmosTx::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
CosmosTx::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ibc::applications::interchain_accounts::v1::Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ibc::applications::interchain_accounts::v1::Type>() {
  return ::ibc::applications::interchain_accounts::v1::Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2fapplications_2finterchain_5faccounts_2fv1_2fpacket_2eproto_2epb_2eh
