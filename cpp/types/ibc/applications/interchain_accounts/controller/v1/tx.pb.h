// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/interchain_accounts/controller/v1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_2epb_2eh
#define ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "ibc/applications/interchain_accounts/v1/packet.pb.h"
#include "ibc/applications/interchain_accounts/controller/v1/controller.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "ibc/core/channel/v1/channel.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace controller {
namespace v1 {
class MsgRegisterInterchainAccount;
struct MsgRegisterInterchainAccountDefaultTypeInternal;
extern MsgRegisterInterchainAccountDefaultTypeInternal _MsgRegisterInterchainAccount_default_instance_;
class MsgRegisterInterchainAccountResponse;
struct MsgRegisterInterchainAccountResponseDefaultTypeInternal;
extern MsgRegisterInterchainAccountResponseDefaultTypeInternal _MsgRegisterInterchainAccountResponse_default_instance_;
class MsgSendTx;
struct MsgSendTxDefaultTypeInternal;
extern MsgSendTxDefaultTypeInternal _MsgSendTx_default_instance_;
class MsgSendTxResponse;
struct MsgSendTxResponseDefaultTypeInternal;
extern MsgSendTxResponseDefaultTypeInternal _MsgSendTxResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace controller
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace applications {
namespace interchain_accounts {
namespace controller {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSendTxResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse) */ {
 public:
  inline MsgSendTxResponse() : MsgSendTxResponse(nullptr) {}
  ~MsgSendTxResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSendTxResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSendTxResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSendTxResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSendTxResponse(const MsgSendTxResponse& from) : MsgSendTxResponse(nullptr, from) {}
  inline MsgSendTxResponse(MsgSendTxResponse&& from) noexcept
      : MsgSendTxResponse(nullptr, std::move(from)) {}
  inline MsgSendTxResponse& operator=(const MsgSendTxResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSendTxResponse& operator=(MsgSendTxResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSendTxResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSendTxResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSendTxResponse*>(
        &_MsgSendTxResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgSendTxResponse& a, MsgSendTxResponse& b) { a.Swap(&b); }
  inline void Swap(MsgSendTxResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSendTxResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSendTxResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSendTxResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSendTxResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSendTxResponse& from) { MsgSendTxResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSendTxResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse"; }

 protected:
  explicit MsgSendTxResponse(::google::protobuf::Arena* arena);
  MsgSendTxResponse(::google::protobuf::Arena* arena, const MsgSendTxResponse& from);
  MsgSendTxResponse(::google::protobuf::Arena* arena, MsgSendTxResponse&& from) noexcept
      : MsgSendTxResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSequenceFieldNumber = 1,
  };
  // uint64 sequence = 1 [json_name = "sequence"];
  void clear_sequence() ;
  ::uint64_t sequence() const;
  void set_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_sequence() const;
  void _internal_set_sequence(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSendTxResponse& from_msg);
    ::uint64_t sequence_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRegisterInterchainAccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse) */ {
 public:
  inline MsgRegisterInterchainAccountResponse() : MsgRegisterInterchainAccountResponse(nullptr) {}
  ~MsgRegisterInterchainAccountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRegisterInterchainAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRegisterInterchainAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRegisterInterchainAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRegisterInterchainAccountResponse(const MsgRegisterInterchainAccountResponse& from) : MsgRegisterInterchainAccountResponse(nullptr, from) {}
  inline MsgRegisterInterchainAccountResponse(MsgRegisterInterchainAccountResponse&& from) noexcept
      : MsgRegisterInterchainAccountResponse(nullptr, std::move(from)) {}
  inline MsgRegisterInterchainAccountResponse& operator=(const MsgRegisterInterchainAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRegisterInterchainAccountResponse& operator=(MsgRegisterInterchainAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRegisterInterchainAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRegisterInterchainAccountResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRegisterInterchainAccountResponse*>(
        &_MsgRegisterInterchainAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgRegisterInterchainAccountResponse& a, MsgRegisterInterchainAccountResponse& b) { a.Swap(&b); }
  inline void Swap(MsgRegisterInterchainAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRegisterInterchainAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRegisterInterchainAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgRegisterInterchainAccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgRegisterInterchainAccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgRegisterInterchainAccountResponse& from) { MsgRegisterInterchainAccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgRegisterInterchainAccountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse"; }

 protected:
  explicit MsgRegisterInterchainAccountResponse(::google::protobuf::Arena* arena);
  MsgRegisterInterchainAccountResponse(::google::protobuf::Arena* arena, const MsgRegisterInterchainAccountResponse& from);
  MsgRegisterInterchainAccountResponse(::google::protobuf::Arena* arena, MsgRegisterInterchainAccountResponse&& from) noexcept
      : MsgRegisterInterchainAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelIdFieldNumber = 1,
    kPortIdFieldNumber = 2,
  };
  // string channel_id = 1 [json_name = "channelId"];
  void clear_channel_id() ;
  const std::string& channel_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_id(Arg_&& arg, Args_... args);
  std::string* mutable_channel_id();
  PROTOBUF_NODISCARD std::string* release_channel_id();
  void set_allocated_channel_id(std::string* value);

  private:
  const std::string& _internal_channel_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_id(
      const std::string& value);
  std::string* _internal_mutable_channel_id();

  public:
  // string port_id = 2 [json_name = "portId"];
  void clear_port_id() ;
  const std::string& port_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port_id(Arg_&& arg, Args_... args);
  std::string* mutable_port_id();
  PROTOBUF_NODISCARD std::string* release_port_id();
  void set_allocated_port_id(std::string* value);

  private:
  const std::string& _internal_port_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port_id(
      const std::string& value);
  std::string* _internal_mutable_port_id();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      113, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRegisterInterchainAccountResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr channel_id_;
    ::google::protobuf::internal::ArenaStringPtr port_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRegisterInterchainAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount) */ {
 public:
  inline MsgRegisterInterchainAccount() : MsgRegisterInterchainAccount(nullptr) {}
  ~MsgRegisterInterchainAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRegisterInterchainAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRegisterInterchainAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRegisterInterchainAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRegisterInterchainAccount(const MsgRegisterInterchainAccount& from) : MsgRegisterInterchainAccount(nullptr, from) {}
  inline MsgRegisterInterchainAccount(MsgRegisterInterchainAccount&& from) noexcept
      : MsgRegisterInterchainAccount(nullptr, std::move(from)) {}
  inline MsgRegisterInterchainAccount& operator=(const MsgRegisterInterchainAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRegisterInterchainAccount& operator=(MsgRegisterInterchainAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRegisterInterchainAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRegisterInterchainAccount* internal_default_instance() {
    return reinterpret_cast<const MsgRegisterInterchainAccount*>(
        &_MsgRegisterInterchainAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgRegisterInterchainAccount& a, MsgRegisterInterchainAccount& b) { a.Swap(&b); }
  inline void Swap(MsgRegisterInterchainAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRegisterInterchainAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRegisterInterchainAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgRegisterInterchainAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgRegisterInterchainAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgRegisterInterchainAccount& from) { MsgRegisterInterchainAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgRegisterInterchainAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount"; }

 protected:
  explicit MsgRegisterInterchainAccount(::google::protobuf::Arena* arena);
  MsgRegisterInterchainAccount(::google::protobuf::Arena* arena, const MsgRegisterInterchainAccount& from);
  MsgRegisterInterchainAccount(::google::protobuf::Arena* arena, MsgRegisterInterchainAccount&& from) noexcept
      : MsgRegisterInterchainAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerFieldNumber = 1,
    kConnectionIdFieldNumber = 2,
    kVersionFieldNumber = 3,
    kOrderingFieldNumber = 4,
  };
  // string owner = 1 [json_name = "owner"];
  void clear_owner() ;
  const std::string& owner() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_owner(Arg_&& arg, Args_... args);
  std::string* mutable_owner();
  PROTOBUF_NODISCARD std::string* release_owner();
  void set_allocated_owner(std::string* value);

  private:
  const std::string& _internal_owner() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_owner(
      const std::string& value);
  std::string* _internal_mutable_owner();

  public:
  // string connection_id = 2 [json_name = "connectionId"];
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // string version = 3 [json_name = "version"];
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // .ibc.core.channel.v1.Order ordering = 4 [json_name = "ordering"];
  void clear_ordering() ;
  ::ibc::core::channel::v1::Order ordering() const;
  void set_ordering(::ibc::core::channel::v1::Order value);

  private:
  ::ibc::core::channel::v1::Order _internal_ordering() const;
  void _internal_set_ordering(::ibc::core::channel::v1::Order value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      113, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRegisterInterchainAccount& from_msg);
    ::google::protobuf::internal::ArenaStringPtr owner_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    int ordering_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignerFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string signer = 1 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* value);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .ibc.applications.interchain_accounts.controller.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::ibc::applications::interchain_accounts::controller::v1::Params& params() const;
  PROTOBUF_NODISCARD ::ibc::applications::interchain_accounts::controller::v1::Params* release_params();
  ::ibc::applications::interchain_accounts::controller::v1::Params* mutable_params();
  void set_allocated_params(::ibc::applications::interchain_accounts::controller::v1::Params* value);
  void unsafe_arena_set_allocated_params(::ibc::applications::interchain_accounts::controller::v1::Params* value);
  ::ibc::applications::interchain_accounts::controller::v1::Params* unsafe_arena_release_params();

  private:
  const ::ibc::applications::interchain_accounts::controller::v1::Params& _internal_params() const;
  ::ibc::applications::interchain_accounts::controller::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signer_;
    ::ibc::applications::interchain_accounts::controller::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSendTx final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.interchain_accounts.controller.v1.MsgSendTx) */ {
 public:
  inline MsgSendTx() : MsgSendTx(nullptr) {}
  ~MsgSendTx() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSendTx* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSendTx));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSendTx(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSendTx(const MsgSendTx& from) : MsgSendTx(nullptr, from) {}
  inline MsgSendTx(MsgSendTx&& from) noexcept
      : MsgSendTx(nullptr, std::move(from)) {}
  inline MsgSendTx& operator=(const MsgSendTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSendTx& operator=(MsgSendTx&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSendTx& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSendTx* internal_default_instance() {
    return reinterpret_cast<const MsgSendTx*>(
        &_MsgSendTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgSendTx& a, MsgSendTx& b) { a.Swap(&b); }
  inline void Swap(MsgSendTx* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSendTx* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSendTx* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSendTx>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSendTx& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSendTx& from) { MsgSendTx::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSendTx* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.interchain_accounts.controller.v1.MsgSendTx"; }

 protected:
  explicit MsgSendTx(::google::protobuf::Arena* arena);
  MsgSendTx(::google::protobuf::Arena* arena, const MsgSendTx& from);
  MsgSendTx(::google::protobuf::Arena* arena, MsgSendTx&& from) noexcept
      : MsgSendTx(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerFieldNumber = 1,
    kConnectionIdFieldNumber = 2,
    kPacketDataFieldNumber = 3,
    kRelativeTimeoutFieldNumber = 4,
  };
  // string owner = 1 [json_name = "owner"];
  void clear_owner() ;
  const std::string& owner() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_owner(Arg_&& arg, Args_... args);
  std::string* mutable_owner();
  PROTOBUF_NODISCARD std::string* release_owner();
  void set_allocated_owner(std::string* value);

  private:
  const std::string& _internal_owner() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_owner(
      const std::string& value);
  std::string* _internal_mutable_owner();

  public:
  // string connection_id = 2 [json_name = "connectionId"];
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // .ibc.applications.interchain_accounts.v1.InterchainAccountPacketData packet_data = 3 [json_name = "packetData", (.gogoproto.nullable) = false];
  bool has_packet_data() const;
  void clear_packet_data() ;
  const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData& packet_data() const;
  PROTOBUF_NODISCARD ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* release_packet_data();
  ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* mutable_packet_data();
  void set_allocated_packet_data(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* value);
  void unsafe_arena_set_allocated_packet_data(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* value);
  ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* unsafe_arena_release_packet_data();

  private:
  const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData& _internal_packet_data() const;
  ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* _internal_mutable_packet_data();

  public:
  // uint64 relative_timeout = 4 [json_name = "relativeTimeout"];
  void clear_relative_timeout() ;
  ::uint64_t relative_timeout() const;
  void set_relative_timeout(::uint64_t value);

  private:
  ::uint64_t _internal_relative_timeout() const;
  void _internal_set_relative_timeout(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.interchain_accounts.controller.v1.MsgSendTx)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSendTx& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr owner_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* packet_data_;
    ::uint64_t relative_timeout_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgRegisterInterchainAccount

// string owner = 1 [json_name = "owner"];
inline void MsgRegisterInterchainAccount::clear_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.ClearToEmpty();
}
inline const std::string& MsgRegisterInterchainAccount::owner() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.owner)
  return _internal_owner();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRegisterInterchainAccount::set_owner(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.owner)
}
inline std::string* MsgRegisterInterchainAccount::mutable_owner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_owner();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.owner)
  return _s;
}
inline const std::string& MsgRegisterInterchainAccount::_internal_owner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owner_.Get();
}
inline void MsgRegisterInterchainAccount::_internal_set_owner(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.Set(value, GetArena());
}
inline std::string* MsgRegisterInterchainAccount::_internal_mutable_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.owner_.Mutable( GetArena());
}
inline std::string* MsgRegisterInterchainAccount::release_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.owner)
  return _impl_.owner_.Release();
}
inline void MsgRegisterInterchainAccount::set_allocated_owner(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.owner_.IsDefault()) {
    _impl_.owner_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.owner)
}

// string connection_id = 2 [json_name = "connectionId"];
inline void MsgRegisterInterchainAccount::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& MsgRegisterInterchainAccount::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRegisterInterchainAccount::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.connection_id)
}
inline std::string* MsgRegisterInterchainAccount::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.connection_id)
  return _s;
}
inline const std::string& MsgRegisterInterchainAccount::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void MsgRegisterInterchainAccount::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* MsgRegisterInterchainAccount::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* MsgRegisterInterchainAccount::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.connection_id)
  return _impl_.connection_id_.Release();
}
inline void MsgRegisterInterchainAccount::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.connection_id_.IsDefault()) {
    _impl_.connection_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.connection_id)
}

// string version = 3 [json_name = "version"];
inline void MsgRegisterInterchainAccount::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& MsgRegisterInterchainAccount::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRegisterInterchainAccount::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.version)
}
inline std::string* MsgRegisterInterchainAccount::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.version)
  return _s;
}
inline const std::string& MsgRegisterInterchainAccount::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void MsgRegisterInterchainAccount::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* MsgRegisterInterchainAccount::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* MsgRegisterInterchainAccount::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.version)
  return _impl_.version_.Release();
}
inline void MsgRegisterInterchainAccount::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.version)
}

// .ibc.core.channel.v1.Order ordering = 4 [json_name = "ordering"];
inline void MsgRegisterInterchainAccount::clear_ordering() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ordering_ = 0;
}
inline ::ibc::core::channel::v1::Order MsgRegisterInterchainAccount::ordering() const {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.ordering)
  return _internal_ordering();
}
inline void MsgRegisterInterchainAccount::set_ordering(::ibc::core::channel::v1::Order value) {
  _internal_set_ordering(value);
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccount.ordering)
}
inline ::ibc::core::channel::v1::Order MsgRegisterInterchainAccount::_internal_ordering() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ibc::core::channel::v1::Order>(_impl_.ordering_);
}
inline void MsgRegisterInterchainAccount::_internal_set_ordering(::ibc::core::channel::v1::Order value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ordering_ = value;
}

// -------------------------------------------------------------------

// MsgRegisterInterchainAccountResponse

// string channel_id = 1 [json_name = "channelId"];
inline void MsgRegisterInterchainAccountResponse::clear_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.ClearToEmpty();
}
inline const std::string& MsgRegisterInterchainAccountResponse::channel_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.channel_id)
  return _internal_channel_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRegisterInterchainAccountResponse::set_channel_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.channel_id)
}
inline std::string* MsgRegisterInterchainAccountResponse::mutable_channel_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel_id();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.channel_id)
  return _s;
}
inline const std::string& MsgRegisterInterchainAccountResponse::_internal_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_id_.Get();
}
inline void MsgRegisterInterchainAccountResponse::_internal_set_channel_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.Set(value, GetArena());
}
inline std::string* MsgRegisterInterchainAccountResponse::_internal_mutable_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_id_.Mutable( GetArena());
}
inline std::string* MsgRegisterInterchainAccountResponse::release_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.channel_id)
  return _impl_.channel_id_.Release();
}
inline void MsgRegisterInterchainAccountResponse::set_allocated_channel_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.channel_id_.IsDefault()) {
    _impl_.channel_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.channel_id)
}

// string port_id = 2 [json_name = "portId"];
inline void MsgRegisterInterchainAccountResponse::clear_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.ClearToEmpty();
}
inline const std::string& MsgRegisterInterchainAccountResponse::port_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.port_id)
  return _internal_port_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRegisterInterchainAccountResponse::set_port_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.port_id)
}
inline std::string* MsgRegisterInterchainAccountResponse::mutable_port_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_port_id();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.port_id)
  return _s;
}
inline const std::string& MsgRegisterInterchainAccountResponse::_internal_port_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_id_.Get();
}
inline void MsgRegisterInterchainAccountResponse::_internal_set_port_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.Set(value, GetArena());
}
inline std::string* MsgRegisterInterchainAccountResponse::_internal_mutable_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.port_id_.Mutable( GetArena());
}
inline std::string* MsgRegisterInterchainAccountResponse::release_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.port_id)
  return _impl_.port_id_.Release();
}
inline void MsgRegisterInterchainAccountResponse::set_allocated_port_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.port_id_.IsDefault()) {
    _impl_.port_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgRegisterInterchainAccountResponse.port_id)
}

// -------------------------------------------------------------------

// MsgSendTx

// string owner = 1 [json_name = "owner"];
inline void MsgSendTx::clear_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.ClearToEmpty();
}
inline const std::string& MsgSendTx::owner() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.owner)
  return _internal_owner();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSendTx::set_owner(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.owner)
}
inline std::string* MsgSendTx::mutable_owner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_owner();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.owner)
  return _s;
}
inline const std::string& MsgSendTx::_internal_owner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owner_.Get();
}
inline void MsgSendTx::_internal_set_owner(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.Set(value, GetArena());
}
inline std::string* MsgSendTx::_internal_mutable_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.owner_.Mutable( GetArena());
}
inline std::string* MsgSendTx::release_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.owner)
  return _impl_.owner_.Release();
}
inline void MsgSendTx::set_allocated_owner(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owner_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.owner_.IsDefault()) {
    _impl_.owner_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.owner)
}

// string connection_id = 2 [json_name = "connectionId"];
inline void MsgSendTx::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& MsgSendTx::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSendTx::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.connection_id)
}
inline std::string* MsgSendTx::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.connection_id)
  return _s;
}
inline const std::string& MsgSendTx::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void MsgSendTx::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* MsgSendTx::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* MsgSendTx::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.connection_id)
  return _impl_.connection_id_.Release();
}
inline void MsgSendTx::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.connection_id_.IsDefault()) {
    _impl_.connection_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.connection_id)
}

// .ibc.applications.interchain_accounts.v1.InterchainAccountPacketData packet_data = 3 [json_name = "packetData", (.gogoproto.nullable) = false];
inline bool MsgSendTx::has_packet_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.packet_data_ != nullptr);
  return value;
}
inline const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData& MsgSendTx::_internal_packet_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* p = _impl_.packet_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData&>(::ibc::applications::interchain_accounts::v1::_InterchainAccountPacketData_default_instance_);
}
inline const ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData& MsgSendTx::packet_data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.packet_data)
  return _internal_packet_data();
}
inline void MsgSendTx::unsafe_arena_set_allocated_packet_data(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packet_data_);
  }
  _impl_.packet_data_ = reinterpret_cast<::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.packet_data)
}
inline ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* MsgSendTx::release_packet_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* released = _impl_.packet_data_;
  _impl_.packet_data_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* MsgSendTx::unsafe_arena_release_packet_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.packet_data)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* temp = _impl_.packet_data_;
  _impl_.packet_data_ = nullptr;
  return temp;
}
inline ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* MsgSendTx::_internal_mutable_packet_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.packet_data_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData>(GetArena());
    _impl_.packet_data_ = reinterpret_cast<::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData*>(p);
  }
  return _impl_.packet_data_;
}
inline ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* MsgSendTx::mutable_packet_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* _msg = _internal_mutable_packet_data();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.packet_data)
  return _msg;
}
inline void MsgSendTx::set_allocated_packet_data(::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.packet_data_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.packet_data_ = reinterpret_cast<::ibc::applications::interchain_accounts::v1::InterchainAccountPacketData*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.packet_data)
}

// uint64 relative_timeout = 4 [json_name = "relativeTimeout"];
inline void MsgSendTx::clear_relative_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relative_timeout_ = ::uint64_t{0u};
}
inline ::uint64_t MsgSendTx::relative_timeout() const {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.relative_timeout)
  return _internal_relative_timeout();
}
inline void MsgSendTx::set_relative_timeout(::uint64_t value) {
  _internal_set_relative_timeout(value);
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgSendTx.relative_timeout)
}
inline ::uint64_t MsgSendTx::_internal_relative_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.relative_timeout_;
}
inline void MsgSendTx::_internal_set_relative_timeout(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.relative_timeout_ = value;
}

// -------------------------------------------------------------------

// MsgSendTxResponse

// uint64 sequence = 1 [json_name = "sequence"];
inline void MsgSendTxResponse::clear_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = ::uint64_t{0u};
}
inline ::uint64_t MsgSendTxResponse::sequence() const {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.sequence)
  return _internal_sequence();
}
inline void MsgSendTxResponse::set_sequence(::uint64_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgSendTxResponse.sequence)
}
inline ::uint64_t MsgSendTxResponse::_internal_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_;
}
inline void MsgSendTxResponse::_internal_set_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = value;
}

// -------------------------------------------------------------------

// MsgUpdateParams

// string signer = 1 [json_name = "signer"];
inline void MsgUpdateParams::clear_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::signer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.signer)
}
inline std::string* MsgUpdateParams::mutable_signer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.signer)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_signer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signer_.Get();
}
inline void MsgUpdateParams::_internal_set_signer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signer_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.signer)
  return _impl_.signer_.Release();
}
inline void MsgUpdateParams::set_allocated_signer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signer_.IsDefault()) {
    _impl_.signer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.signer)
}

// .ibc.applications.interchain_accounts.controller.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::ibc::applications::interchain_accounts::controller::v1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::applications::interchain_accounts::controller::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::applications::interchain_accounts::controller::v1::Params&>(::ibc::applications::interchain_accounts::controller::v1::_Params_default_instance_);
}
inline const ::ibc::applications::interchain_accounts::controller::v1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::ibc::applications::interchain_accounts::controller::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::ibc::applications::interchain_accounts::controller::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.params)
}
inline ::ibc::applications::interchain_accounts::controller::v1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::interchain_accounts::controller::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::applications::interchain_accounts::controller::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::interchain_accounts::controller::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::ibc::applications::interchain_accounts::controller::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::applications::interchain_accounts::controller::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::ibc::applications::interchain_accounts::controller::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::ibc::applications::interchain_accounts::controller::v1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::applications::interchain_accounts::controller::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::ibc::applications::interchain_accounts::controller::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::ibc::applications::interchain_accounts::controller::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.interchain_accounts.controller.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace controller
}  // namespace interchain_accounts
}  // namespace applications
}  // namespace ibc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2fapplications_2finterchain_5faccounts_2fcontroller_2fv1_2ftx_2eproto_2epb_2eh
