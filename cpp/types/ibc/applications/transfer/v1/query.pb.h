// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/transfer/v1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_2epb_2eh
#define ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "ibc/applications/transfer/v1/transfer.pb.h"
#include "ibc/applications/transfer/v1/token.pb.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
class QueryDenomHashRequest;
struct QueryDenomHashRequestDefaultTypeInternal;
extern QueryDenomHashRequestDefaultTypeInternal _QueryDenomHashRequest_default_instance_;
class QueryDenomHashResponse;
struct QueryDenomHashResponseDefaultTypeInternal;
extern QueryDenomHashResponseDefaultTypeInternal _QueryDenomHashResponse_default_instance_;
class QueryDenomRequest;
struct QueryDenomRequestDefaultTypeInternal;
extern QueryDenomRequestDefaultTypeInternal _QueryDenomRequest_default_instance_;
class QueryDenomResponse;
struct QueryDenomResponseDefaultTypeInternal;
extern QueryDenomResponseDefaultTypeInternal _QueryDenomResponse_default_instance_;
class QueryDenomsRequest;
struct QueryDenomsRequestDefaultTypeInternal;
extern QueryDenomsRequestDefaultTypeInternal _QueryDenomsRequest_default_instance_;
class QueryDenomsResponse;
struct QueryDenomsResponseDefaultTypeInternal;
extern QueryDenomsResponseDefaultTypeInternal _QueryDenomsResponse_default_instance_;
class QueryEscrowAddressRequest;
struct QueryEscrowAddressRequestDefaultTypeInternal;
extern QueryEscrowAddressRequestDefaultTypeInternal _QueryEscrowAddressRequest_default_instance_;
class QueryEscrowAddressResponse;
struct QueryEscrowAddressResponseDefaultTypeInternal;
extern QueryEscrowAddressResponseDefaultTypeInternal _QueryEscrowAddressResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
class QueryTotalEscrowForDenomRequest;
struct QueryTotalEscrowForDenomRequestDefaultTypeInternal;
extern QueryTotalEscrowForDenomRequestDefaultTypeInternal _QueryTotalEscrowForDenomRequest_default_instance_;
class QueryTotalEscrowForDenomResponse;
struct QueryTotalEscrowForDenomResponseDefaultTypeInternal;
extern QueryTotalEscrowForDenomResponseDefaultTypeInternal _QueryTotalEscrowForDenomResponse_default_instance_;
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryTotalEscrowForDenomRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest) */ {
 public:
  inline QueryTotalEscrowForDenomRequest() : QueryTotalEscrowForDenomRequest(nullptr) {}
  ~QueryTotalEscrowForDenomRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryTotalEscrowForDenomRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryTotalEscrowForDenomRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTotalEscrowForDenomRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTotalEscrowForDenomRequest(const QueryTotalEscrowForDenomRequest& from) : QueryTotalEscrowForDenomRequest(nullptr, from) {}
  inline QueryTotalEscrowForDenomRequest(QueryTotalEscrowForDenomRequest&& from) noexcept
      : QueryTotalEscrowForDenomRequest(nullptr, std::move(from)) {}
  inline QueryTotalEscrowForDenomRequest& operator=(const QueryTotalEscrowForDenomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTotalEscrowForDenomRequest& operator=(QueryTotalEscrowForDenomRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTotalEscrowForDenomRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryTotalEscrowForDenomRequest* internal_default_instance() {
    return reinterpret_cast<const QueryTotalEscrowForDenomRequest*>(
        &_QueryTotalEscrowForDenomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(QueryTotalEscrowForDenomRequest& a, QueryTotalEscrowForDenomRequest& b) { a.Swap(&b); }
  inline void Swap(QueryTotalEscrowForDenomRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTotalEscrowForDenomRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTotalEscrowForDenomRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryTotalEscrowForDenomRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTotalEscrowForDenomRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTotalEscrowForDenomRequest& from) { QueryTotalEscrowForDenomRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryTotalEscrowForDenomRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest"; }

 protected:
  explicit QueryTotalEscrowForDenomRequest(::google::protobuf::Arena* arena);
  QueryTotalEscrowForDenomRequest(::google::protobuf::Arena* arena, const QueryTotalEscrowForDenomRequest& from);
  QueryTotalEscrowForDenomRequest(::google::protobuf::Arena* arena, QueryTotalEscrowForDenomRequest&& from) noexcept
      : QueryTotalEscrowForDenomRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDenomFieldNumber = 1,
  };
  // string denom = 1 [json_name = "denom"];
  void clear_denom() ;
  const std::string& denom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_denom(Arg_&& arg, Args_... args);
  std::string* mutable_denom();
  PROTOBUF_NODISCARD std::string* release_denom();
  void set_allocated_denom(std::string* value);

  private:
  const std::string& _internal_denom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_denom(
      const std::string& value);
  std::string* _internal_mutable_denom();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTotalEscrowForDenomRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr denom_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryEscrowAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryEscrowAddressResponse) */ {
 public:
  inline QueryEscrowAddressResponse() : QueryEscrowAddressResponse(nullptr) {}
  ~QueryEscrowAddressResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryEscrowAddressResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryEscrowAddressResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryEscrowAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryEscrowAddressResponse(const QueryEscrowAddressResponse& from) : QueryEscrowAddressResponse(nullptr, from) {}
  inline QueryEscrowAddressResponse(QueryEscrowAddressResponse&& from) noexcept
      : QueryEscrowAddressResponse(nullptr, std::move(from)) {}
  inline QueryEscrowAddressResponse& operator=(const QueryEscrowAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryEscrowAddressResponse& operator=(QueryEscrowAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryEscrowAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryEscrowAddressResponse* internal_default_instance() {
    return reinterpret_cast<const QueryEscrowAddressResponse*>(
        &_QueryEscrowAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryEscrowAddressResponse& a, QueryEscrowAddressResponse& b) { a.Swap(&b); }
  inline void Swap(QueryEscrowAddressResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryEscrowAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryEscrowAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryEscrowAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryEscrowAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryEscrowAddressResponse& from) { QueryEscrowAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryEscrowAddressResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryEscrowAddressResponse"; }

 protected:
  explicit QueryEscrowAddressResponse(::google::protobuf::Arena* arena);
  QueryEscrowAddressResponse(::google::protobuf::Arena* arena, const QueryEscrowAddressResponse& from);
  QueryEscrowAddressResponse(::google::protobuf::Arena* arena, QueryEscrowAddressResponse&& from) noexcept
      : QueryEscrowAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEscrowAddressFieldNumber = 1,
  };
  // string escrow_address = 1 [json_name = "escrowAddress"];
  void clear_escrow_address() ;
  const std::string& escrow_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_escrow_address(Arg_&& arg, Args_... args);
  std::string* mutable_escrow_address();
  PROTOBUF_NODISCARD std::string* release_escrow_address();
  void set_allocated_escrow_address(std::string* value);

  private:
  const std::string& _internal_escrow_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_escrow_address(
      const std::string& value);
  std::string* _internal_mutable_escrow_address();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryEscrowAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryEscrowAddressResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr escrow_address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryEscrowAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryEscrowAddressRequest) */ {
 public:
  inline QueryEscrowAddressRequest() : QueryEscrowAddressRequest(nullptr) {}
  ~QueryEscrowAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryEscrowAddressRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryEscrowAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryEscrowAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryEscrowAddressRequest(const QueryEscrowAddressRequest& from) : QueryEscrowAddressRequest(nullptr, from) {}
  inline QueryEscrowAddressRequest(QueryEscrowAddressRequest&& from) noexcept
      : QueryEscrowAddressRequest(nullptr, std::move(from)) {}
  inline QueryEscrowAddressRequest& operator=(const QueryEscrowAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryEscrowAddressRequest& operator=(QueryEscrowAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryEscrowAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryEscrowAddressRequest* internal_default_instance() {
    return reinterpret_cast<const QueryEscrowAddressRequest*>(
        &_QueryEscrowAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryEscrowAddressRequest& a, QueryEscrowAddressRequest& b) { a.Swap(&b); }
  inline void Swap(QueryEscrowAddressRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryEscrowAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryEscrowAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryEscrowAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryEscrowAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryEscrowAddressRequest& from) { QueryEscrowAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryEscrowAddressRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryEscrowAddressRequest"; }

 protected:
  explicit QueryEscrowAddressRequest(::google::protobuf::Arena* arena);
  QueryEscrowAddressRequest(::google::protobuf::Arena* arena, const QueryEscrowAddressRequest& from);
  QueryEscrowAddressRequest(::google::protobuf::Arena* arena, QueryEscrowAddressRequest&& from) noexcept
      : QueryEscrowAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPortIdFieldNumber = 1,
    kChannelIdFieldNumber = 2,
  };
  // string port_id = 1 [json_name = "portId"];
  void clear_port_id() ;
  const std::string& port_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_port_id(Arg_&& arg, Args_... args);
  std::string* mutable_port_id();
  PROTOBUF_NODISCARD std::string* release_port_id();
  void set_allocated_port_id(std::string* value);

  private:
  const std::string& _internal_port_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_port_id(
      const std::string& value);
  std::string* _internal_mutable_port_id();

  public:
  // string channel_id = 2 [json_name = "channelId"];
  void clear_channel_id() ;
  const std::string& channel_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_id(Arg_&& arg, Args_... args);
  std::string* mutable_channel_id();
  PROTOBUF_NODISCARD std::string* release_channel_id();
  void set_allocated_channel_id(std::string* value);

  private:
  const std::string& _internal_channel_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_id(
      const std::string& value);
  std::string* _internal_mutable_channel_id();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryEscrowAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryEscrowAddressRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr port_id_;
    ::google::protobuf::internal::ArenaStringPtr channel_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDenomRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryDenomRequest) */ {
 public:
  inline QueryDenomRequest() : QueryDenomRequest(nullptr) {}
  ~QueryDenomRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDenomRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDenomRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDenomRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDenomRequest(const QueryDenomRequest& from) : QueryDenomRequest(nullptr, from) {}
  inline QueryDenomRequest(QueryDenomRequest&& from) noexcept
      : QueryDenomRequest(nullptr, std::move(from)) {}
  inline QueryDenomRequest& operator=(const QueryDenomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDenomRequest& operator=(QueryDenomRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDenomRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDenomRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDenomRequest*>(
        &_QueryDenomRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryDenomRequest& a, QueryDenomRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDenomRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDenomRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDenomRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDenomRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDenomRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDenomRequest& from) { QueryDenomRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDenomRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryDenomRequest"; }

 protected:
  explicit QueryDenomRequest(::google::protobuf::Arena* arena);
  QueryDenomRequest(::google::protobuf::Arena* arena, const QueryDenomRequest& from);
  QueryDenomRequest(::google::protobuf::Arena* arena, QueryDenomRequest&& from) noexcept
      : QueryDenomRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
  };
  // string hash = 1 [json_name = "hash"];
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryDenomRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDenomRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDenomHashResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryDenomHashResponse) */ {
 public:
  inline QueryDenomHashResponse() : QueryDenomHashResponse(nullptr) {}
  ~QueryDenomHashResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDenomHashResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDenomHashResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDenomHashResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDenomHashResponse(const QueryDenomHashResponse& from) : QueryDenomHashResponse(nullptr, from) {}
  inline QueryDenomHashResponse(QueryDenomHashResponse&& from) noexcept
      : QueryDenomHashResponse(nullptr, std::move(from)) {}
  inline QueryDenomHashResponse& operator=(const QueryDenomHashResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDenomHashResponse& operator=(QueryDenomHashResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDenomHashResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDenomHashResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDenomHashResponse*>(
        &_QueryDenomHashResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryDenomHashResponse& a, QueryDenomHashResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDenomHashResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDenomHashResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDenomHashResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDenomHashResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDenomHashResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDenomHashResponse& from) { QueryDenomHashResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDenomHashResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryDenomHashResponse"; }

 protected:
  explicit QueryDenomHashResponse(::google::protobuf::Arena* arena);
  QueryDenomHashResponse(::google::protobuf::Arena* arena, const QueryDenomHashResponse& from);
  QueryDenomHashResponse(::google::protobuf::Arena* arena, QueryDenomHashResponse&& from) noexcept
      : QueryDenomHashResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
  };
  // string hash = 1 [json_name = "hash"];
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryDenomHashResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDenomHashResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDenomHashRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryDenomHashRequest) */ {
 public:
  inline QueryDenomHashRequest() : QueryDenomHashRequest(nullptr) {}
  ~QueryDenomHashRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDenomHashRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDenomHashRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDenomHashRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDenomHashRequest(const QueryDenomHashRequest& from) : QueryDenomHashRequest(nullptr, from) {}
  inline QueryDenomHashRequest(QueryDenomHashRequest&& from) noexcept
      : QueryDenomHashRequest(nullptr, std::move(from)) {}
  inline QueryDenomHashRequest& operator=(const QueryDenomHashRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDenomHashRequest& operator=(QueryDenomHashRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDenomHashRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDenomHashRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDenomHashRequest*>(
        &_QueryDenomHashRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryDenomHashRequest& a, QueryDenomHashRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDenomHashRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDenomHashRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDenomHashRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDenomHashRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDenomHashRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDenomHashRequest& from) { QueryDenomHashRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDenomHashRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryDenomHashRequest"; }

 protected:
  explicit QueryDenomHashRequest(::google::protobuf::Arena* arena);
  QueryDenomHashRequest(::google::protobuf::Arena* arena, const QueryDenomHashRequest& from);
  QueryDenomHashRequest(::google::protobuf::Arena* arena, QueryDenomHashRequest&& from) noexcept
      : QueryDenomHashRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTraceFieldNumber = 1,
  };
  // string trace = 1 [json_name = "trace"];
  void clear_trace() ;
  const std::string& trace() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_trace(Arg_&& arg, Args_... args);
  std::string* mutable_trace();
  PROTOBUF_NODISCARD std::string* release_trace();
  void set_allocated_trace(std::string* value);

  private:
  const std::string& _internal_trace() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_trace(
      const std::string& value);
  std::string* _internal_mutable_trace();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryDenomHashRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDenomHashRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr trace_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryTotalEscrowForDenomResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse) */ {
 public:
  inline QueryTotalEscrowForDenomResponse() : QueryTotalEscrowForDenomResponse(nullptr) {}
  ~QueryTotalEscrowForDenomResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryTotalEscrowForDenomResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryTotalEscrowForDenomResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTotalEscrowForDenomResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTotalEscrowForDenomResponse(const QueryTotalEscrowForDenomResponse& from) : QueryTotalEscrowForDenomResponse(nullptr, from) {}
  inline QueryTotalEscrowForDenomResponse(QueryTotalEscrowForDenomResponse&& from) noexcept
      : QueryTotalEscrowForDenomResponse(nullptr, std::move(from)) {}
  inline QueryTotalEscrowForDenomResponse& operator=(const QueryTotalEscrowForDenomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTotalEscrowForDenomResponse& operator=(QueryTotalEscrowForDenomResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTotalEscrowForDenomResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryTotalEscrowForDenomResponse* internal_default_instance() {
    return reinterpret_cast<const QueryTotalEscrowForDenomResponse*>(
        &_QueryTotalEscrowForDenomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(QueryTotalEscrowForDenomResponse& a, QueryTotalEscrowForDenomResponse& b) { a.Swap(&b); }
  inline void Swap(QueryTotalEscrowForDenomResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTotalEscrowForDenomResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTotalEscrowForDenomResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryTotalEscrowForDenomResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTotalEscrowForDenomResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTotalEscrowForDenomResponse& from) { QueryTotalEscrowForDenomResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryTotalEscrowForDenomResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse"; }

 protected:
  explicit QueryTotalEscrowForDenomResponse(::google::protobuf::Arena* arena);
  QueryTotalEscrowForDenomResponse(::google::protobuf::Arena* arena, const QueryTotalEscrowForDenomResponse& from);
  QueryTotalEscrowForDenomResponse(::google::protobuf::Arena* arena, QueryTotalEscrowForDenomResponse&& from) noexcept
      : QueryTotalEscrowForDenomResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAmountFieldNumber = 1,
  };
  // .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTotalEscrowForDenomResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .ibc.applications.transfer.v1.Params params = 1 [json_name = "params"];
  bool has_params() const;
  void clear_params() ;
  const ::ibc::applications::transfer::v1::Params& params() const;
  PROTOBUF_NODISCARD ::ibc::applications::transfer::v1::Params* release_params();
  ::ibc::applications::transfer::v1::Params* mutable_params();
  void set_allocated_params(::ibc::applications::transfer::v1::Params* value);
  void unsafe_arena_set_allocated_params(::ibc::applications::transfer::v1::Params* value);
  ::ibc::applications::transfer::v1::Params* unsafe_arena_release_params();

  private:
  const ::ibc::applications::transfer::v1::Params& _internal_params() const;
  ::ibc::applications::transfer::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::ibc::applications::transfer::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDenomsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryDenomsRequest) */ {
 public:
  inline QueryDenomsRequest() : QueryDenomsRequest(nullptr) {}
  ~QueryDenomsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDenomsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDenomsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDenomsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDenomsRequest(const QueryDenomsRequest& from) : QueryDenomsRequest(nullptr, from) {}
  inline QueryDenomsRequest(QueryDenomsRequest&& from) noexcept
      : QueryDenomsRequest(nullptr, std::move(from)) {}
  inline QueryDenomsRequest& operator=(const QueryDenomsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDenomsRequest& operator=(QueryDenomsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDenomsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDenomsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDenomsRequest*>(
        &_QueryDenomsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryDenomsRequest& a, QueryDenomsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDenomsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDenomsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDenomsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDenomsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDenomsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDenomsRequest& from) { QueryDenomsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDenomsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryDenomsRequest"; }

 protected:
  explicit QueryDenomsRequest(::google::protobuf::Arena* arena);
  QueryDenomsRequest(::google::protobuf::Arena* arena, const QueryDenomsRequest& from);
  QueryDenomsRequest(::google::protobuf::Arena* arena, QueryDenomsRequest&& from) noexcept
      : QueryDenomsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryDenomsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDenomsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDenomsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryDenomsResponse) */ {
 public:
  inline QueryDenomsResponse() : QueryDenomsResponse(nullptr) {}
  ~QueryDenomsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDenomsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDenomsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDenomsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDenomsResponse(const QueryDenomsResponse& from) : QueryDenomsResponse(nullptr, from) {}
  inline QueryDenomsResponse(QueryDenomsResponse&& from) noexcept
      : QueryDenomsResponse(nullptr, std::move(from)) {}
  inline QueryDenomsResponse& operator=(const QueryDenomsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDenomsResponse& operator=(QueryDenomsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDenomsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDenomsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDenomsResponse*>(
        &_QueryDenomsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryDenomsResponse& a, QueryDenomsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDenomsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDenomsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDenomsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDenomsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDenomsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDenomsResponse& from) { QueryDenomsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDenomsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryDenomsResponse"; }

 protected:
  explicit QueryDenomsResponse(::google::protobuf::Arena* arena);
  QueryDenomsResponse(::google::protobuf::Arena* arena, const QueryDenomsResponse& from);
  QueryDenomsResponse(::google::protobuf::Arena* arena, QueryDenomsResponse&& from) noexcept
      : QueryDenomsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDenomsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .ibc.applications.transfer.v1.Denom denoms = 1 [json_name = "denoms", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Denoms"];
  int denoms_size() const;
  private:
  int _internal_denoms_size() const;

  public:
  void clear_denoms() ;
  ::ibc::applications::transfer::v1::Denom* mutable_denoms(int index);
  ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>* mutable_denoms();

  private:
  const ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>& _internal_denoms() const;
  ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>* _internal_mutable_denoms();
  public:
  const ::ibc::applications::transfer::v1::Denom& denoms(int index) const;
  ::ibc::applications::transfer::v1::Denom* add_denoms();
  const ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>& denoms() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryDenomsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDenomsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ibc::applications::transfer::v1::Denom > denoms_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDenomResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.QueryDenomResponse) */ {
 public:
  inline QueryDenomResponse() : QueryDenomResponse(nullptr) {}
  ~QueryDenomResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDenomResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDenomResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDenomResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDenomResponse(const QueryDenomResponse& from) : QueryDenomResponse(nullptr, from) {}
  inline QueryDenomResponse(QueryDenomResponse&& from) noexcept
      : QueryDenomResponse(nullptr, std::move(from)) {}
  inline QueryDenomResponse& operator=(const QueryDenomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDenomResponse& operator=(QueryDenomResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDenomResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDenomResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDenomResponse*>(
        &_QueryDenomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryDenomResponse& a, QueryDenomResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDenomResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDenomResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDenomResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDenomResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDenomResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDenomResponse& from) { QueryDenomResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDenomResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.QueryDenomResponse"; }

 protected:
  explicit QueryDenomResponse(::google::protobuf::Arena* arena);
  QueryDenomResponse(::google::protobuf::Arena* arena, const QueryDenomResponse& from);
  QueryDenomResponse(::google::protobuf::Arena* arena, QueryDenomResponse&& from) noexcept
      : QueryDenomResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDenomFieldNumber = 1,
  };
  // .ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom"];
  bool has_denom() const;
  void clear_denom() ;
  const ::ibc::applications::transfer::v1::Denom& denom() const;
  PROTOBUF_NODISCARD ::ibc::applications::transfer::v1::Denom* release_denom();
  ::ibc::applications::transfer::v1::Denom* mutable_denom();
  void set_allocated_denom(::ibc::applications::transfer::v1::Denom* value);
  void unsafe_arena_set_allocated_denom(::ibc::applications::transfer::v1::Denom* value);
  ::ibc::applications::transfer::v1::Denom* unsafe_arena_release_denom();

  private:
  const ::ibc::applications::transfer::v1::Denom& _internal_denom() const;
  ::ibc::applications::transfer::v1::Denom* _internal_mutable_denom();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.QueryDenomResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDenomResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::ibc::applications::transfer::v1::Denom* denom_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .ibc.applications.transfer.v1.Params params = 1 [json_name = "params"];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::ibc::applications::transfer::v1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::applications::transfer::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::applications::transfer::v1::Params&>(::ibc::applications::transfer::v1::_Params_default_instance_);
}
inline const ::ibc::applications::transfer::v1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::ibc::applications::transfer::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::ibc::applications::transfer::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.QueryParamsResponse.params)
}
inline ::ibc::applications::transfer::v1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::transfer::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::applications::transfer::v1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::transfer::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::ibc::applications::transfer::v1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::applications::transfer::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::ibc::applications::transfer::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::ibc::applications::transfer::v1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::applications::transfer::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::ibc::applications::transfer::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::ibc::applications::transfer::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryDenomRequest

// string hash = 1 [json_name = "hash"];
inline void QueryDenomRequest::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& QueryDenomRequest::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryDenomRequest.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDenomRequest::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.QueryDenomRequest.hash)
}
inline std::string* QueryDenomRequest::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryDenomRequest.hash)
  return _s;
}
inline const std::string& QueryDenomRequest::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void QueryDenomRequest::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* QueryDenomRequest::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* QueryDenomRequest::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryDenomRequest.hash)
  return _impl_.hash_.Release();
}
inline void QueryDenomRequest::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hash_.IsDefault()) {
    _impl_.hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryDenomRequest.hash)
}

// -------------------------------------------------------------------

// QueryDenomResponse

// .ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom"];
inline bool QueryDenomResponse::has_denom() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.denom_ != nullptr);
  return value;
}
inline const ::ibc::applications::transfer::v1::Denom& QueryDenomResponse::_internal_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::applications::transfer::v1::Denom* p = _impl_.denom_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::applications::transfer::v1::Denom&>(::ibc::applications::transfer::v1::_Denom_default_instance_);
}
inline const ::ibc::applications::transfer::v1::Denom& QueryDenomResponse::denom() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryDenomResponse.denom)
  return _internal_denom();
}
inline void QueryDenomResponse::unsafe_arena_set_allocated_denom(::ibc::applications::transfer::v1::Denom* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.denom_);
  }
  _impl_.denom_ = reinterpret_cast<::ibc::applications::transfer::v1::Denom*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.QueryDenomResponse.denom)
}
inline ::ibc::applications::transfer::v1::Denom* QueryDenomResponse::release_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::transfer::v1::Denom* released = _impl_.denom_;
  _impl_.denom_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::applications::transfer::v1::Denom* QueryDenomResponse::unsafe_arena_release_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryDenomResponse.denom)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::transfer::v1::Denom* temp = _impl_.denom_;
  _impl_.denom_ = nullptr;
  return temp;
}
inline ::ibc::applications::transfer::v1::Denom* QueryDenomResponse::_internal_mutable_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.denom_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::applications::transfer::v1::Denom>(GetArena());
    _impl_.denom_ = reinterpret_cast<::ibc::applications::transfer::v1::Denom*>(p);
  }
  return _impl_.denom_;
}
inline ::ibc::applications::transfer::v1::Denom* QueryDenomResponse::mutable_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::applications::transfer::v1::Denom* _msg = _internal_mutable_denom();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryDenomResponse.denom)
  return _msg;
}
inline void QueryDenomResponse::set_allocated_denom(::ibc::applications::transfer::v1::Denom* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.denom_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.denom_ = reinterpret_cast<::ibc::applications::transfer::v1::Denom*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryDenomResponse.denom)
}

// -------------------------------------------------------------------

// QueryDenomsRequest

// .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
inline bool QueryDenomsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDenomsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDenomsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryDenomsRequest.pagination)
  return _internal_pagination();
}
inline void QueryDenomsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.QueryDenomsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDenomsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDenomsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryDenomsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDenomsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDenomsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryDenomsRequest.pagination)
  return _msg;
}
inline void QueryDenomsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryDenomsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryDenomsResponse

// repeated .ibc.applications.transfer.v1.Denom denoms = 1 [json_name = "denoms", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Denoms"];
inline int QueryDenomsResponse::_internal_denoms_size() const {
  return _internal_denoms().size();
}
inline int QueryDenomsResponse::denoms_size() const {
  return _internal_denoms_size();
}
inline ::ibc::applications::transfer::v1::Denom* QueryDenomsResponse::mutable_denoms(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryDenomsResponse.denoms)
  return _internal_mutable_denoms()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>* QueryDenomsResponse::mutable_denoms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.applications.transfer.v1.QueryDenomsResponse.denoms)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_denoms();
}
inline const ::ibc::applications::transfer::v1::Denom& QueryDenomsResponse::denoms(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryDenomsResponse.denoms)
  return _internal_denoms().Get(index);
}
inline ::ibc::applications::transfer::v1::Denom* QueryDenomsResponse::add_denoms() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ibc::applications::transfer::v1::Denom* _add = _internal_mutable_denoms()->Add();
  // @@protoc_insertion_point(field_add:ibc.applications.transfer.v1.QueryDenomsResponse.denoms)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>& QueryDenomsResponse::denoms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.applications.transfer.v1.QueryDenomsResponse.denoms)
  return _internal_denoms();
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>&
QueryDenomsResponse::_internal_denoms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.denoms_;
}
inline ::google::protobuf::RepeatedPtrField<::ibc::applications::transfer::v1::Denom>*
QueryDenomsResponse::_internal_mutable_denoms() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.denoms_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryDenomsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDenomsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDenomsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryDenomsResponse.pagination)
  return _internal_pagination();
}
inline void QueryDenomsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.QueryDenomsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDenomsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDenomsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryDenomsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDenomsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDenomsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryDenomsResponse.pagination)
  return _msg;
}
inline void QueryDenomsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryDenomsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryDenomHashRequest

// string trace = 1 [json_name = "trace"];
inline void QueryDenomHashRequest::clear_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_.ClearToEmpty();
}
inline const std::string& QueryDenomHashRequest::trace() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryDenomHashRequest.trace)
  return _internal_trace();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDenomHashRequest::set_trace(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.QueryDenomHashRequest.trace)
}
inline std::string* QueryDenomHashRequest::mutable_trace() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_trace();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryDenomHashRequest.trace)
  return _s;
}
inline const std::string& QueryDenomHashRequest::_internal_trace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trace_.Get();
}
inline void QueryDenomHashRequest::_internal_set_trace(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_.Set(value, GetArena());
}
inline std::string* QueryDenomHashRequest::_internal_mutable_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.trace_.Mutable( GetArena());
}
inline std::string* QueryDenomHashRequest::release_trace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryDenomHashRequest.trace)
  return _impl_.trace_.Release();
}
inline void QueryDenomHashRequest::set_allocated_trace(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trace_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trace_.IsDefault()) {
    _impl_.trace_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryDenomHashRequest.trace)
}

// -------------------------------------------------------------------

// QueryDenomHashResponse

// string hash = 1 [json_name = "hash"];
inline void QueryDenomHashResponse::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& QueryDenomHashResponse::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryDenomHashResponse.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDenomHashResponse::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.QueryDenomHashResponse.hash)
}
inline std::string* QueryDenomHashResponse::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryDenomHashResponse.hash)
  return _s;
}
inline const std::string& QueryDenomHashResponse::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void QueryDenomHashResponse::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* QueryDenomHashResponse::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* QueryDenomHashResponse::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryDenomHashResponse.hash)
  return _impl_.hash_.Release();
}
inline void QueryDenomHashResponse::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.hash_.IsDefault()) {
    _impl_.hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryDenomHashResponse.hash)
}

// -------------------------------------------------------------------

// QueryEscrowAddressRequest

// string port_id = 1 [json_name = "portId"];
inline void QueryEscrowAddressRequest::clear_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.ClearToEmpty();
}
inline const std::string& QueryEscrowAddressRequest::port_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryEscrowAddressRequest.port_id)
  return _internal_port_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryEscrowAddressRequest::set_port_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.QueryEscrowAddressRequest.port_id)
}
inline std::string* QueryEscrowAddressRequest::mutable_port_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_port_id();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryEscrowAddressRequest.port_id)
  return _s;
}
inline const std::string& QueryEscrowAddressRequest::_internal_port_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_id_.Get();
}
inline void QueryEscrowAddressRequest::_internal_set_port_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.Set(value, GetArena());
}
inline std::string* QueryEscrowAddressRequest::_internal_mutable_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.port_id_.Mutable( GetArena());
}
inline std::string* QueryEscrowAddressRequest::release_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryEscrowAddressRequest.port_id)
  return _impl_.port_id_.Release();
}
inline void QueryEscrowAddressRequest::set_allocated_port_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.port_id_.IsDefault()) {
    _impl_.port_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryEscrowAddressRequest.port_id)
}

// string channel_id = 2 [json_name = "channelId"];
inline void QueryEscrowAddressRequest::clear_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.ClearToEmpty();
}
inline const std::string& QueryEscrowAddressRequest::channel_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryEscrowAddressRequest.channel_id)
  return _internal_channel_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryEscrowAddressRequest::set_channel_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.QueryEscrowAddressRequest.channel_id)
}
inline std::string* QueryEscrowAddressRequest::mutable_channel_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel_id();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryEscrowAddressRequest.channel_id)
  return _s;
}
inline const std::string& QueryEscrowAddressRequest::_internal_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_id_.Get();
}
inline void QueryEscrowAddressRequest::_internal_set_channel_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.Set(value, GetArena());
}
inline std::string* QueryEscrowAddressRequest::_internal_mutable_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_id_.Mutable( GetArena());
}
inline std::string* QueryEscrowAddressRequest::release_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryEscrowAddressRequest.channel_id)
  return _impl_.channel_id_.Release();
}
inline void QueryEscrowAddressRequest::set_allocated_channel_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.channel_id_.IsDefault()) {
    _impl_.channel_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryEscrowAddressRequest.channel_id)
}

// -------------------------------------------------------------------

// QueryEscrowAddressResponse

// string escrow_address = 1 [json_name = "escrowAddress"];
inline void QueryEscrowAddressResponse::clear_escrow_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escrow_address_.ClearToEmpty();
}
inline const std::string& QueryEscrowAddressResponse::escrow_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryEscrowAddressResponse.escrow_address)
  return _internal_escrow_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryEscrowAddressResponse::set_escrow_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escrow_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.QueryEscrowAddressResponse.escrow_address)
}
inline std::string* QueryEscrowAddressResponse::mutable_escrow_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_escrow_address();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryEscrowAddressResponse.escrow_address)
  return _s;
}
inline const std::string& QueryEscrowAddressResponse::_internal_escrow_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.escrow_address_.Get();
}
inline void QueryEscrowAddressResponse::_internal_set_escrow_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escrow_address_.Set(value, GetArena());
}
inline std::string* QueryEscrowAddressResponse::_internal_mutable_escrow_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.escrow_address_.Mutable( GetArena());
}
inline std::string* QueryEscrowAddressResponse::release_escrow_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryEscrowAddressResponse.escrow_address)
  return _impl_.escrow_address_.Release();
}
inline void QueryEscrowAddressResponse::set_allocated_escrow_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.escrow_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.escrow_address_.IsDefault()) {
    _impl_.escrow_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryEscrowAddressResponse.escrow_address)
}

// -------------------------------------------------------------------

// QueryTotalEscrowForDenomRequest

// string denom = 1 [json_name = "denom"];
inline void QueryTotalEscrowForDenomRequest::clear_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.ClearToEmpty();
}
inline const std::string& QueryTotalEscrowForDenomRequest::denom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.denom)
  return _internal_denom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryTotalEscrowForDenomRequest::set_denom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.denom)
}
inline std::string* QueryTotalEscrowForDenomRequest::mutable_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_denom();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.denom)
  return _s;
}
inline const std::string& QueryTotalEscrowForDenomRequest::_internal_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.denom_.Get();
}
inline void QueryTotalEscrowForDenomRequest::_internal_set_denom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.Set(value, GetArena());
}
inline std::string* QueryTotalEscrowForDenomRequest::_internal_mutable_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.denom_.Mutable( GetArena());
}
inline std::string* QueryTotalEscrowForDenomRequest::release_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.denom)
  return _impl_.denom_.Release();
}
inline void QueryTotalEscrowForDenomRequest::set_allocated_denom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.denom_.IsDefault()) {
    _impl_.denom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryTotalEscrowForDenomRequest.denom)
}

// -------------------------------------------------------------------

// QueryTotalEscrowForDenomResponse

// .cosmos.base.v1beta1.Coin amount = 1 [json_name = "amount", (.gogoproto.nullable) = false];
inline bool QueryTotalEscrowForDenomResponse::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& QueryTotalEscrowForDenomResponse::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& QueryTotalEscrowForDenomResponse::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse.amount)
  return _internal_amount();
}
inline void QueryTotalEscrowForDenomResponse::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse.amount)
}
inline ::cosmos::base::v1beta1::Coin* QueryTotalEscrowForDenomResponse::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* QueryTotalEscrowForDenomResponse::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* QueryTotalEscrowForDenomResponse::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* QueryTotalEscrowForDenomResponse::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse.amount)
  return _msg;
}
inline void QueryTotalEscrowForDenomResponse::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.QueryTotalEscrowForDenomResponse.amount)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2fapplications_2ftransfer_2fv1_2fquery_2eproto_2epb_2eh
