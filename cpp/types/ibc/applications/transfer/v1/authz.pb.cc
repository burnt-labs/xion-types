// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/transfer/v1/authz.proto
// Protobuf C++ Version: 5.29.4

#include "ibc/applications/transfer/v1/authz.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {

inline constexpr Allocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : spend_limit_{},
        allow_list_{},
        allowed_packet_data_{},
        source_port_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Allocation::Allocation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AllocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AllocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AllocationDefaultTypeInternal() {}
  union {
    Allocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AllocationDefaultTypeInternal _Allocation_default_instance_;

inline constexpr TransferAuthorization::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : allocations_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TransferAuthorization::TransferAuthorization(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TransferAuthorizationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TransferAuthorizationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TransferAuthorizationDefaultTypeInternal() {}
  union {
    TransferAuthorization _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TransferAuthorizationDefaultTypeInternal _TransferAuthorization_default_instance_;
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto = nullptr;
const ::uint32_t
    TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Allocation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Allocation, _impl_.source_port_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Allocation, _impl_.source_channel_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Allocation, _impl_.spend_limit_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Allocation, _impl_.allow_list_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Allocation, _impl_.allowed_packet_data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::TransferAuthorization, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::TransferAuthorization, _impl_.allocations_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ibc::applications::transfer::v1::Allocation)},
        {13, -1, -1, sizeof(::ibc::applications::transfer::v1::TransferAuthorization)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::applications::transfer::v1::_Allocation_default_instance_._instance,
    &::ibc::applications::transfer::v1::_TransferAuthorization_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(ibc/applications/transfer/v1/authz.pro"
    "to\022\034ibc.applications.transfer.v1\032\031cosmos"
    "_proto/cosmos.proto\032\024gogoproto/gogo.prot"
    "o\032\036cosmos/base/v1beta1/coin.proto\"\221\002\n\nAl"
    "location\022\037\n\013source_port\030\001 \001(\tR\nsourcePor"
    "t\022%\n\016source_channel\030\002 \001(\tR\rsourceChannel"
    "\022l\n\013spend_limit\030\003 \003(\0132\031.cosmos.base.v1be"
    "ta1.CoinB0\310\336\037\000\252\337\037(github.com/cosmos/cosm"
    "os-sdk/types.CoinsR\nspendLimit\022\035\n\nallow_"
    "list\030\004 \003(\tR\tallowList\022.\n\023allowed_packet_"
    "data\030\005 \003(\tR\021allowedPacketData\"\221\001\n\025Transf"
    "erAuthorization\022P\n\013allocations\030\001 \003(\0132(.i"
    "bc.applications.transfer.v1.AllocationB\004"
    "\310\336\037\000R\013allocations:&\312\264-\"cosmos.authz.v1be"
    "ta1.AuthorizationB:Z8github.com/cosmos/i"
    "bc-go/v10/modules/apps/transfer/typesb\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto_deps[3] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto = {
    false,
    false,
    645,
    descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto,
    "ibc/applications/transfer/v1/authz.proto",
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto_once,
    descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto::offsets,
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto,
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto,
};
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
// ===================================================================

class Allocation::_Internal {
 public:
};

void Allocation::clear_spend_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_limit_.Clear();
}
Allocation::Allocation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.Allocation)
}
inline PROTOBUF_NDEBUG_INLINE Allocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::applications::transfer::v1::Allocation& from_msg)
      : spend_limit_{visibility, arena, from.spend_limit_},
        allow_list_{visibility, arena, from.allow_list_},
        allowed_packet_data_{visibility, arena, from.allowed_packet_data_},
        source_port_(arena, from.source_port_),
        source_channel_(arena, from.source_channel_),
        _cached_size_{0} {}

Allocation::Allocation(
    ::google::protobuf::Arena* arena,
    const Allocation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Allocation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.Allocation)
}
inline PROTOBUF_NDEBUG_INLINE Allocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : spend_limit_{visibility, arena},
        allow_list_{visibility, arena},
        allowed_packet_data_{visibility, arena},
        source_port_(arena),
        source_channel_(arena),
        _cached_size_{0} {}

inline void Allocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Allocation::~Allocation() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.Allocation)
  SharedDtor(*this);
}
inline void Allocation::SharedDtor(MessageLite& self) {
  Allocation& this_ = static_cast<Allocation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.source_port_.Destroy();
  this_._impl_.source_channel_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Allocation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Allocation(arena);
}
constexpr auto Allocation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Allocation, _impl_.spend_limit_) +
          decltype(Allocation::_impl_.spend_limit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Allocation, _impl_.allow_list_) +
          decltype(Allocation::_impl_.allow_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Allocation, _impl_.allowed_packet_data_) +
          decltype(Allocation::_impl_.allowed_packet_data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Allocation), alignof(Allocation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Allocation::PlacementNew_,
                                 sizeof(Allocation),
                                 alignof(Allocation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Allocation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Allocation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Allocation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Allocation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Allocation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Allocation>(), &Allocation::ByteSizeLong,
            &Allocation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Allocation, _impl_._cached_size_),
        false,
    },
    &Allocation::kDescriptorMethods,
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Allocation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 102, 2> Allocation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::Allocation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string source_port = 1 [json_name = "sourcePort"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Allocation, _impl_.source_port_)}},
    // string source_channel = 2 [json_name = "sourceChannel"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Allocation, _impl_.source_channel_)}},
    // repeated .cosmos.base.v1beta1.Coin spend_limit = 3 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Allocation, _impl_.spend_limit_)}},
    // repeated string allow_list = 4 [json_name = "allowList"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Allocation, _impl_.allow_list_)}},
    // repeated string allowed_packet_data = 5 [json_name = "allowedPacketData"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Allocation, _impl_.allowed_packet_data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string source_port = 1 [json_name = "sourcePort"];
    {PROTOBUF_FIELD_OFFSET(Allocation, _impl_.source_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_channel = 2 [json_name = "sourceChannel"];
    {PROTOBUF_FIELD_OFFSET(Allocation, _impl_.source_channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin spend_limit = 3 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
    {PROTOBUF_FIELD_OFFSET(Allocation, _impl_.spend_limit_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string allow_list = 4 [json_name = "allowList"];
    {PROTOBUF_FIELD_OFFSET(Allocation, _impl_.allow_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string allowed_packet_data = 5 [json_name = "allowedPacketData"];
    {PROTOBUF_FIELD_OFFSET(Allocation, _impl_.allowed_packet_data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\47\13\16\0\12\23\0\0"
    "ibc.applications.transfer.v1.Allocation"
    "source_port"
    "source_channel"
    "allow_list"
    "allowed_packet_data"
  }},
};

PROTOBUF_NOINLINE void Allocation::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.Allocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spend_limit_.Clear();
  _impl_.allow_list_.Clear();
  _impl_.allowed_packet_data_.Clear();
  _impl_.source_port_.ClearToEmpty();
  _impl_.source_channel_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Allocation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Allocation& this_ = static_cast<const Allocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Allocation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Allocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.Allocation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string source_port = 1 [json_name = "sourcePort"];
          if (!this_._internal_source_port().empty()) {
            const std::string& _s = this_._internal_source_port();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Allocation.source_port");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string source_channel = 2 [json_name = "sourceChannel"];
          if (!this_._internal_source_channel().empty()) {
            const std::string& _s = this_._internal_source_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Allocation.source_channel");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin spend_limit = 3 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_spend_limit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_spend_limit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated string allow_list = 4 [json_name = "allowList"];
          for (int i = 0, n = this_._internal_allow_list_size(); i < n; ++i) {
            const auto& s = this_._internal_allow_list().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Allocation.allow_list");
            target = stream->WriteString(4, s, target);
          }

          // repeated string allowed_packet_data = 5 [json_name = "allowedPacketData"];
          for (int i = 0, n = this_._internal_allowed_packet_data_size(); i < n; ++i) {
            const auto& s = this_._internal_allowed_packet_data().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Allocation.allowed_packet_data");
            target = stream->WriteString(5, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.Allocation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Allocation::ByteSizeLong(const MessageLite& base) {
          const Allocation& this_ = static_cast<const Allocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Allocation::ByteSizeLong() const {
          const Allocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.Allocation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin spend_limit = 3 [json_name = "spendLimit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
            {
              total_size += 1UL * this_._internal_spend_limit_size();
              for (const auto& msg : this_._internal_spend_limit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated string allow_list = 4 [json_name = "allowList"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_allow_list().size());
              for (int i = 0, n = this_._internal_allow_list().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_allow_list().Get(i));
              }
            }
            // repeated string allowed_packet_data = 5 [json_name = "allowedPacketData"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_allowed_packet_data().size());
              for (int i = 0, n = this_._internal_allowed_packet_data().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_allowed_packet_data().Get(i));
              }
            }
          }
           {
            // string source_port = 1 [json_name = "sourcePort"];
            if (!this_._internal_source_port().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_port());
            }
            // string source_channel = 2 [json_name = "sourceChannel"];
            if (!this_._internal_source_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_channel());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Allocation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Allocation*>(&to_msg);
  auto& from = static_cast<const Allocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.Allocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_spend_limit()->MergeFrom(
      from._internal_spend_limit());
  _this->_internal_mutable_allow_list()->MergeFrom(from._internal_allow_list());
  _this->_internal_mutable_allowed_packet_data()->MergeFrom(from._internal_allowed_packet_data());
  if (!from._internal_source_port().empty()) {
    _this->_internal_set_source_port(from._internal_source_port());
  }
  if (!from._internal_source_channel().empty()) {
    _this->_internal_set_source_channel(from._internal_source_channel());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Allocation::CopyFrom(const Allocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.Allocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Allocation::InternalSwap(Allocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.spend_limit_.InternalSwap(&other->_impl_.spend_limit_);
  _impl_.allow_list_.InternalSwap(&other->_impl_.allow_list_);
  _impl_.allowed_packet_data_.InternalSwap(&other->_impl_.allowed_packet_data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_port_, &other->_impl_.source_port_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_channel_, &other->_impl_.source_channel_, arena);
}

::google::protobuf::Metadata Allocation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TransferAuthorization::_Internal {
 public:
};

TransferAuthorization::TransferAuthorization(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.TransferAuthorization)
}
inline PROTOBUF_NDEBUG_INLINE TransferAuthorization::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::applications::transfer::v1::TransferAuthorization& from_msg)
      : allocations_{visibility, arena, from.allocations_},
        _cached_size_{0} {}

TransferAuthorization::TransferAuthorization(
    ::google::protobuf::Arena* arena,
    const TransferAuthorization& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TransferAuthorization* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.TransferAuthorization)
}
inline PROTOBUF_NDEBUG_INLINE TransferAuthorization::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : allocations_{visibility, arena},
        _cached_size_{0} {}

inline void TransferAuthorization::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TransferAuthorization::~TransferAuthorization() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.TransferAuthorization)
  SharedDtor(*this);
}
inline void TransferAuthorization::SharedDtor(MessageLite& self) {
  TransferAuthorization& this_ = static_cast<TransferAuthorization&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TransferAuthorization::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TransferAuthorization(arena);
}
constexpr auto TransferAuthorization::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TransferAuthorization, _impl_.allocations_) +
          decltype(TransferAuthorization::_impl_.allocations_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TransferAuthorization), alignof(TransferAuthorization), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TransferAuthorization::PlacementNew_,
                                 sizeof(TransferAuthorization),
                                 alignof(TransferAuthorization));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TransferAuthorization::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TransferAuthorization_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TransferAuthorization::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TransferAuthorization>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TransferAuthorization::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TransferAuthorization>(), &TransferAuthorization::ByteSizeLong,
            &TransferAuthorization::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TransferAuthorization, _impl_._cached_size_),
        false,
    },
    &TransferAuthorization::kDescriptorMethods,
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TransferAuthorization::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> TransferAuthorization::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::TransferAuthorization>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TransferAuthorization, _impl_.allocations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(TransferAuthorization, _impl_.allocations_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::Allocation>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TransferAuthorization::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.TransferAuthorization)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allocations_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TransferAuthorization::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TransferAuthorization& this_ = static_cast<const TransferAuthorization&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TransferAuthorization::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TransferAuthorization& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.TransferAuthorization)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_allocations_size());
               i < n; i++) {
            const auto& repfield = this_._internal_allocations().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.TransferAuthorization)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TransferAuthorization::ByteSizeLong(const MessageLite& base) {
          const TransferAuthorization& this_ = static_cast<const TransferAuthorization&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TransferAuthorization::ByteSizeLong() const {
          const TransferAuthorization& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.TransferAuthorization)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_allocations_size();
              for (const auto& msg : this_._internal_allocations()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TransferAuthorization::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TransferAuthorization*>(&to_msg);
  auto& from = static_cast<const TransferAuthorization&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.TransferAuthorization)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_allocations()->MergeFrom(
      from._internal_allocations());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TransferAuthorization::CopyFrom(const TransferAuthorization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.TransferAuthorization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TransferAuthorization::InternalSwap(TransferAuthorization* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allocations_.InternalSwap(&other->_impl_.allocations_);
}

::google::protobuf::Metadata TransferAuthorization::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2fauthz_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
