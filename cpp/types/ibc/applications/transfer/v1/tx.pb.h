// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/transfer/v1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_2epb_2eh
#define ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "amino/amino.pb.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "ibc/core/client/v1/client.pb.h"
#include "ibc/applications/transfer/v1/transfer.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto;
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
class MsgTransfer;
struct MsgTransferDefaultTypeInternal;
extern MsgTransferDefaultTypeInternal _MsgTransfer_default_instance_;
class MsgTransferResponse;
struct MsgTransferResponseDefaultTypeInternal;
extern MsgTransferResponseDefaultTypeInternal _MsgTransferResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgTransferResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.MsgTransferResponse) */ {
 public:
  inline MsgTransferResponse() : MsgTransferResponse(nullptr) {}
  ~MsgTransferResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgTransferResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgTransferResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgTransferResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgTransferResponse(const MsgTransferResponse& from) : MsgTransferResponse(nullptr, from) {}
  inline MsgTransferResponse(MsgTransferResponse&& from) noexcept
      : MsgTransferResponse(nullptr, std::move(from)) {}
  inline MsgTransferResponse& operator=(const MsgTransferResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTransferResponse& operator=(MsgTransferResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgTransferResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgTransferResponse* internal_default_instance() {
    return reinterpret_cast<const MsgTransferResponse*>(
        &_MsgTransferResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgTransferResponse& a, MsgTransferResponse& b) { a.Swap(&b); }
  inline void Swap(MsgTransferResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTransferResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgTransferResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgTransferResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgTransferResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgTransferResponse& from) { MsgTransferResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgTransferResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.MsgTransferResponse"; }

 protected:
  explicit MsgTransferResponse(::google::protobuf::Arena* arena);
  MsgTransferResponse(::google::protobuf::Arena* arena, const MsgTransferResponse& from);
  MsgTransferResponse(::google::protobuf::Arena* arena, MsgTransferResponse&& from) noexcept
      : MsgTransferResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSequenceFieldNumber = 1,
  };
  // uint64 sequence = 1 [json_name = "sequence"];
  void clear_sequence() ;
  ::uint64_t sequence() const;
  void set_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_sequence() const;
  void _internal_set_sequence(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.MsgTransferResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgTransferResponse& from_msg);
    ::uint64_t sequence_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignerFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string signer = 1 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* value);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .ibc.applications.transfer.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::ibc::applications::transfer::v1::Params& params() const;
  PROTOBUF_NODISCARD ::ibc::applications::transfer::v1::Params* release_params();
  ::ibc::applications::transfer::v1::Params* mutable_params();
  void set_allocated_params(::ibc::applications::transfer::v1::Params* value);
  void unsafe_arena_set_allocated_params(::ibc::applications::transfer::v1::Params* value);
  ::ibc::applications::transfer::v1::Params* unsafe_arena_release_params();

  private:
  const ::ibc::applications::transfer::v1::Params& _internal_params() const;
  ::ibc::applications::transfer::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signer_;
    ::ibc::applications::transfer::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgTransfer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.applications.transfer.v1.MsgTransfer) */ {
 public:
  inline MsgTransfer() : MsgTransfer(nullptr) {}
  ~MsgTransfer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgTransfer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgTransfer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgTransfer(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgTransfer(const MsgTransfer& from) : MsgTransfer(nullptr, from) {}
  inline MsgTransfer(MsgTransfer&& from) noexcept
      : MsgTransfer(nullptr, std::move(from)) {}
  inline MsgTransfer& operator=(const MsgTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgTransfer& operator=(MsgTransfer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgTransfer& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgTransfer* internal_default_instance() {
    return reinterpret_cast<const MsgTransfer*>(
        &_MsgTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgTransfer& a, MsgTransfer& b) { a.Swap(&b); }
  inline void Swap(MsgTransfer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgTransfer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgTransfer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgTransfer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgTransfer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgTransfer& from) { MsgTransfer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgTransfer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.applications.transfer.v1.MsgTransfer"; }

 protected:
  explicit MsgTransfer(::google::protobuf::Arena* arena);
  MsgTransfer(::google::protobuf::Arena* arena, const MsgTransfer& from);
  MsgTransfer(::google::protobuf::Arena* arena, MsgTransfer&& from) noexcept
      : MsgTransfer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourcePortFieldNumber = 1,
    kSourceChannelFieldNumber = 2,
    kSenderFieldNumber = 4,
    kReceiverFieldNumber = 5,
    kMemoFieldNumber = 8,
    kEncodingFieldNumber = 9,
    kTokenFieldNumber = 3,
    kTimeoutHeightFieldNumber = 6,
    kTimeoutTimestampFieldNumber = 7,
  };
  // string source_port = 1 [json_name = "sourcePort"];
  void clear_source_port() ;
  const std::string& source_port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_port(Arg_&& arg, Args_... args);
  std::string* mutable_source_port();
  PROTOBUF_NODISCARD std::string* release_source_port();
  void set_allocated_source_port(std::string* value);

  private:
  const std::string& _internal_source_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_port(
      const std::string& value);
  std::string* _internal_mutable_source_port();

  public:
  // string source_channel = 2 [json_name = "sourceChannel"];
  void clear_source_channel() ;
  const std::string& source_channel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_channel(Arg_&& arg, Args_... args);
  std::string* mutable_source_channel();
  PROTOBUF_NODISCARD std::string* release_source_channel();
  void set_allocated_source_channel(std::string* value);

  private:
  const std::string& _internal_source_channel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_channel(
      const std::string& value);
  std::string* _internal_mutable_source_channel();

  public:
  // string sender = 4 [json_name = "sender"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string receiver = 5 [json_name = "receiver"];
  void clear_receiver() ;
  const std::string& receiver() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_receiver(Arg_&& arg, Args_... args);
  std::string* mutable_receiver();
  PROTOBUF_NODISCARD std::string* release_receiver();
  void set_allocated_receiver(std::string* value);

  private:
  const std::string& _internal_receiver() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_receiver(
      const std::string& value);
  std::string* _internal_mutable_receiver();

  public:
  // string memo = 8 [json_name = "memo"];
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // string encoding = 9 [json_name = "encoding"];
  void clear_encoding() ;
  const std::string& encoding() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encoding(Arg_&& arg, Args_... args);
  std::string* mutable_encoding();
  PROTOBUF_NODISCARD std::string* release_encoding();
  void set_allocated_encoding(std::string* value);

  private:
  const std::string& _internal_encoding() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encoding(
      const std::string& value);
  std::string* _internal_mutable_encoding();

  public:
  // .cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_token() const;
  void clear_token() ;
  const ::cosmos::base::v1beta1::Coin& token() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_token();
  ::cosmos::base::v1beta1::Coin* mutable_token();
  void set_allocated_token(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_token(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_token();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_token() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_token();

  public:
  // .ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_timeout_height() const;
  void clear_timeout_height() ;
  const ::ibc::core::client::v1::Height& timeout_height() const;
  PROTOBUF_NODISCARD ::ibc::core::client::v1::Height* release_timeout_height();
  ::ibc::core::client::v1::Height* mutable_timeout_height();
  void set_allocated_timeout_height(::ibc::core::client::v1::Height* value);
  void unsafe_arena_set_allocated_timeout_height(::ibc::core::client::v1::Height* value);
  ::ibc::core::client::v1::Height* unsafe_arena_release_timeout_height();

  private:
  const ::ibc::core::client::v1::Height& _internal_timeout_height() const;
  ::ibc::core::client::v1::Height* _internal_mutable_timeout_height();

  public:
  // uint64 timeout_timestamp = 7 [json_name = "timeoutTimestamp"];
  void clear_timeout_timestamp() ;
  ::uint64_t timeout_timestamp() const;
  void set_timeout_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timeout_timestamp() const;
  void _internal_set_timeout_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.applications.transfer.v1.MsgTransfer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      108, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgTransfer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr source_port_;
    ::google::protobuf::internal::ArenaStringPtr source_channel_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr receiver_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::google::protobuf::internal::ArenaStringPtr encoding_;
    ::cosmos::base::v1beta1::Coin* token_;
    ::ibc::core::client::v1::Height* timeout_height_;
    ::uint64_t timeout_timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgTransfer

// string source_port = 1 [json_name = "sourcePort"];
inline void MsgTransfer::clear_source_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.ClearToEmpty();
}
inline const std::string& MsgTransfer::source_port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.source_port)
  return _internal_source_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgTransfer::set_source_port(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransfer.source_port)
}
inline std::string* MsgTransfer::mutable_source_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_port();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.source_port)
  return _s;
}
inline const std::string& MsgTransfer::_internal_source_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_port_.Get();
}
inline void MsgTransfer::_internal_set_source_port(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.Set(value, GetArena());
}
inline std::string* MsgTransfer::_internal_mutable_source_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_port_.Mutable( GetArena());
}
inline std::string* MsgTransfer::release_source_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.source_port)
  return _impl_.source_port_.Release();
}
inline void MsgTransfer::set_allocated_source_port(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_port_.IsDefault()) {
    _impl_.source_port_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.source_port)
}

// string source_channel = 2 [json_name = "sourceChannel"];
inline void MsgTransfer::clear_source_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_channel_.ClearToEmpty();
}
inline const std::string& MsgTransfer::source_channel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.source_channel)
  return _internal_source_channel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgTransfer::set_source_channel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_channel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransfer.source_channel)
}
inline std::string* MsgTransfer::mutable_source_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_channel();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.source_channel)
  return _s;
}
inline const std::string& MsgTransfer::_internal_source_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_channel_.Get();
}
inline void MsgTransfer::_internal_set_source_channel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_channel_.Set(value, GetArena());
}
inline std::string* MsgTransfer::_internal_mutable_source_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_channel_.Mutable( GetArena());
}
inline std::string* MsgTransfer::release_source_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.source_channel)
  return _impl_.source_channel_.Release();
}
inline void MsgTransfer::set_allocated_source_channel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_channel_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_channel_.IsDefault()) {
    _impl_.source_channel_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.source_channel)
}

// .cosmos.base.v1beta1.Coin token = 3 [json_name = "token", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgTransfer::has_token() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.token_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgTransfer::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.token_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgTransfer::token() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.token)
  return _internal_token();
}
inline void MsgTransfer::unsafe_arena_set_allocated_token(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.token_);
  }
  _impl_.token_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.MsgTransfer.token)
}
inline ::cosmos::base::v1beta1::Coin* MsgTransfer::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.token_;
  _impl_.token_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgTransfer::unsafe_arena_release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.token)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.token_;
  _impl_.token_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgTransfer::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.token_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.token_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.token_;
}
inline ::cosmos::base::v1beta1::Coin* MsgTransfer::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.token)
  return _msg;
}
inline void MsgTransfer::set_allocated_token(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.token_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.token_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.token)
}

// string sender = 4 [json_name = "sender"];
inline void MsgTransfer::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgTransfer::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgTransfer::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransfer.sender)
}
inline std::string* MsgTransfer::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.sender)
  return _s;
}
inline const std::string& MsgTransfer::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgTransfer::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgTransfer::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgTransfer::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.sender)
  return _impl_.sender_.Release();
}
inline void MsgTransfer::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.sender)
}

// string receiver = 5 [json_name = "receiver"];
inline void MsgTransfer::clear_receiver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.ClearToEmpty();
}
inline const std::string& MsgTransfer::receiver() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.receiver)
  return _internal_receiver();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgTransfer::set_receiver(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransfer.receiver)
}
inline std::string* MsgTransfer::mutable_receiver() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_receiver();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.receiver)
  return _s;
}
inline const std::string& MsgTransfer::_internal_receiver() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.receiver_.Get();
}
inline void MsgTransfer::_internal_set_receiver(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.Set(value, GetArena());
}
inline std::string* MsgTransfer::_internal_mutable_receiver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.receiver_.Mutable( GetArena());
}
inline std::string* MsgTransfer::release_receiver() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.receiver)
  return _impl_.receiver_.Release();
}
inline void MsgTransfer::set_allocated_receiver(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.receiver_.IsDefault()) {
    _impl_.receiver_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.receiver)
}

// .ibc.core.client.v1.Height timeout_height = 6 [json_name = "timeoutHeight", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgTransfer::has_timeout_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timeout_height_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Height& MsgTransfer::_internal_timeout_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::client::v1::Height* p = _impl_.timeout_height_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Height&>(::ibc::core::client::v1::_Height_default_instance_);
}
inline const ::ibc::core::client::v1::Height& MsgTransfer::timeout_height() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.timeout_height)
  return _internal_timeout_height();
}
inline void MsgTransfer::unsafe_arena_set_allocated_timeout_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_height_);
  }
  _impl_.timeout_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.MsgTransfer.timeout_height)
}
inline ::ibc::core::client::v1::Height* MsgTransfer::release_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ibc::core::client::v1::Height* released = _impl_.timeout_height_;
  _impl_.timeout_height_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::client::v1::Height* MsgTransfer::unsafe_arena_release_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.timeout_height)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ibc::core::client::v1::Height* temp = _impl_.timeout_height_;
  _impl_.timeout_height_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Height* MsgTransfer::_internal_mutable_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_height_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::client::v1::Height>(GetArena());
    _impl_.timeout_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(p);
  }
  return _impl_.timeout_height_;
}
inline ::ibc::core::client::v1::Height* MsgTransfer::mutable_timeout_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ibc::core::client::v1::Height* _msg = _internal_mutable_timeout_height();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.timeout_height)
  return _msg;
}
inline void MsgTransfer::set_allocated_timeout_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timeout_height_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.timeout_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.timeout_height)
}

// uint64 timeout_timestamp = 7 [json_name = "timeoutTimestamp"];
inline void MsgTransfer::clear_timeout_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t MsgTransfer::timeout_timestamp() const {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.timeout_timestamp)
  return _internal_timeout_timestamp();
}
inline void MsgTransfer::set_timeout_timestamp(::uint64_t value) {
  _internal_set_timeout_timestamp(value);
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransfer.timeout_timestamp)
}
inline ::uint64_t MsgTransfer::_internal_timeout_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_timestamp_;
}
inline void MsgTransfer::_internal_set_timeout_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_timestamp_ = value;
}

// string memo = 8 [json_name = "memo"];
inline void MsgTransfer::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& MsgTransfer::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgTransfer::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransfer.memo)
}
inline std::string* MsgTransfer::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.memo)
  return _s;
}
inline const std::string& MsgTransfer::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void MsgTransfer::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* MsgTransfer::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* MsgTransfer::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.memo)
  return _impl_.memo_.Release();
}
inline void MsgTransfer::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.memo_.IsDefault()) {
    _impl_.memo_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.memo)
}

// string encoding = 9 [json_name = "encoding"];
inline void MsgTransfer::clear_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.ClearToEmpty();
}
inline const std::string& MsgTransfer::encoding() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransfer.encoding)
  return _internal_encoding();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgTransfer::set_encoding(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransfer.encoding)
}
inline std::string* MsgTransfer::mutable_encoding() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encoding();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgTransfer.encoding)
  return _s;
}
inline const std::string& MsgTransfer::_internal_encoding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encoding_.Get();
}
inline void MsgTransfer::_internal_set_encoding(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.Set(value, GetArena());
}
inline std::string* MsgTransfer::_internal_mutable_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encoding_.Mutable( GetArena());
}
inline std::string* MsgTransfer::release_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgTransfer.encoding)
  return _impl_.encoding_.Release();
}
inline void MsgTransfer::set_allocated_encoding(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encoding_.IsDefault()) {
    _impl_.encoding_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgTransfer.encoding)
}

// -------------------------------------------------------------------

// MsgTransferResponse

// uint64 sequence = 1 [json_name = "sequence"];
inline void MsgTransferResponse::clear_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = ::uint64_t{0u};
}
inline ::uint64_t MsgTransferResponse::sequence() const {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgTransferResponse.sequence)
  return _internal_sequence();
}
inline void MsgTransferResponse::set_sequence(::uint64_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgTransferResponse.sequence)
}
inline ::uint64_t MsgTransferResponse::_internal_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_;
}
inline void MsgTransferResponse::_internal_set_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = value;
}

// -------------------------------------------------------------------

// MsgUpdateParams

// string signer = 1 [json_name = "signer"];
inline void MsgUpdateParams::clear_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::signer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgUpdateParams.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.applications.transfer.v1.MsgUpdateParams.signer)
}
inline std::string* MsgUpdateParams::mutable_signer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgUpdateParams.signer)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_signer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signer_.Get();
}
inline void MsgUpdateParams::_internal_set_signer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signer_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgUpdateParams.signer)
  return _impl_.signer_.Release();
}
inline void MsgUpdateParams::set_allocated_signer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signer_.IsDefault()) {
    _impl_.signer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgUpdateParams.signer)
}

// .ibc.applications.transfer.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::ibc::applications::transfer::v1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::applications::transfer::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::applications::transfer::v1::Params&>(::ibc::applications::transfer::v1::_Params_default_instance_);
}
inline const ::ibc::applications::transfer::v1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.applications.transfer.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::ibc::applications::transfer::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::ibc::applications::transfer::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.applications.transfer.v1.MsgUpdateParams.params)
}
inline ::ibc::applications::transfer::v1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::transfer::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::applications::transfer::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.applications.transfer.v1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::applications::transfer::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::ibc::applications::transfer::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::applications::transfer::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::ibc::applications::transfer::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::ibc::applications::transfer::v1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::applications::transfer::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:ibc.applications.transfer.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::ibc::applications::transfer::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::ibc::applications::transfer::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.applications.transfer.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2fapplications_2ftransfer_2fv1_2ftx_2eproto_2epb_2eh
