// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/applications/transfer/v1/token.proto
// Protobuf C++ Version: 5.29.4

#include "ibc/applications/transfer/v1/token.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {

inline constexpr Hop::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Hop::Hop(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HopDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HopDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HopDefaultTypeInternal() {}
  union {
    Hop _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HopDefaultTypeInternal _Hop_default_instance_;

inline constexpr Denom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trace_{},
        base_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Denom::Denom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DenomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DenomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DenomDefaultTypeInternal() {}
  union {
    Denom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DenomDefaultTypeInternal _Denom_default_instance_;

inline constexpr Token::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        amount_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        denom_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Token::Token(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TokenDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TokenDefaultTypeInternal() {}
  union {
    Token _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TokenDefaultTypeInternal _Token_default_instance_;
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto = nullptr;
const ::uint32_t
    TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Token, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Token, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Token, _impl_.denom_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Token, _impl_.amount_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Denom, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Denom, _impl_.base_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Denom, _impl_.trace_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Hop, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Hop, _impl_.port_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::applications::transfer::v1::Hop, _impl_.channel_id_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::ibc::applications::transfer::v1::Token)},
        {12, -1, -1, sizeof(::ibc::applications::transfer::v1::Denom)},
        {22, -1, -1, sizeof(::ibc::applications::transfer::v1::Hop)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::applications::transfer::v1::_Token_default_instance_._instance,
    &::ibc::applications::transfer::v1::_Denom_default_instance_._instance,
    &::ibc::applications::transfer::v1::_Hop_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(ibc/applications/transfer/v1/token.pro"
    "to\022\034ibc.applications.transfer.v1\032\024gogopr"
    "oto/gogo.proto\"`\n\005Token\022\?\n\005denom\030\001 \001(\0132#"
    ".ibc.applications.transfer.v1.DenomB\004\310\336\037"
    "\000R\005denom\022\026\n\006amount\030\002 \001(\tR\006amount\"Z\n\005Deno"
    "m\022\022\n\004base\030\001 \001(\tR\004base\022=\n\005trace\030\003 \003(\0132!.i"
    "bc.applications.transfer.v1.HopB\004\310\336\037\000R\005t"
    "race\"C\n\003Hop\022\027\n\007port_id\030\001 \001(\tR\006portId\022\035\n\n"
    "channel_id\030\002 \001(\tR\tchannelId:\004\230\240\037\000B:Z8git"
    "hub.com/cosmos/ibc-go/v10/modules/apps/t"
    "ransfer/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto_deps[1] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto = {
    false,
    false,
    421,
    descriptor_table_protodef_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto,
    "ibc/applications/transfer/v1/token.proto",
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto_once,
    descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto::offsets,
    file_level_enum_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto,
    file_level_service_descriptors_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto,
};
namespace ibc {
namespace applications {
namespace transfer {
namespace v1 {
// ===================================================================

class Token::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Token>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Token, _impl_._has_bits_);
};

Token::Token(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.Token)
}
inline PROTOBUF_NDEBUG_INLINE Token::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::applications::transfer::v1::Token& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        amount_(arena, from.amount_) {}

Token::Token(
    ::google::protobuf::Arena* arena,
    const Token& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Token* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.denom_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::applications::transfer::v1::Denom>(
                              arena, *from._impl_.denom_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.Token)
}
inline PROTOBUF_NDEBUG_INLINE Token::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        amount_(arena) {}

inline void Token::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.denom_ = {};
}
Token::~Token() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.Token)
  SharedDtor(*this);
}
inline void Token::SharedDtor(MessageLite& self) {
  Token& this_ = static_cast<Token&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.amount_.Destroy();
  delete this_._impl_.denom_;
  this_._impl_.~Impl_();
}

inline void* Token::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Token(arena);
}
constexpr auto Token::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Token),
                                            alignof(Token));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Token::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Token_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Token::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Token>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Token::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Token>(), &Token::ByteSizeLong,
            &Token::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Token, _impl_._cached_size_),
        false,
    },
    &Token::kDescriptorMethods,
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Token::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2> Token::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Token, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::Token>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string amount = 2 [json_name = "amount"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.amount_)}},
    // .ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Token, _impl_.denom_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.denom_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string amount = 2 [json_name = "amount"];
    {PROTOBUF_FIELD_OFFSET(Token, _impl_.amount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::Denom>()},
  }}, {{
    "\42\0\6\0\0\0\0\0"
    "ibc.applications.transfer.v1.Token"
    "amount"
  }},
};

PROTOBUF_NOINLINE void Token::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.Token)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.amount_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.denom_ != nullptr);
    _impl_.denom_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Token::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Token& this_ = static_cast<const Token&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Token::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Token& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.Token)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.denom_, this_._impl_.denom_->GetCachedSize(), target,
                stream);
          }

          // string amount = 2 [json_name = "amount"];
          if (!this_._internal_amount().empty()) {
            const std::string& _s = this_._internal_amount();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Token.amount");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.Token)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Token::ByteSizeLong(const MessageLite& base) {
          const Token& this_ = static_cast<const Token&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Token::ByteSizeLong() const {
          const Token& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.Token)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string amount = 2 [json_name = "amount"];
            if (!this_._internal_amount().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_amount());
            }
          }
           {
            // .ibc.applications.transfer.v1.Denom denom = 1 [json_name = "denom", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.denom_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Token::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Token*>(&to_msg);
  auto& from = static_cast<const Token&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.Token)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_amount().empty()) {
    _this->_internal_set_amount(from._internal_amount());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.denom_ != nullptr);
    if (_this->_impl_.denom_ == nullptr) {
      _this->_impl_.denom_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::applications::transfer::v1::Denom>(arena, *from._impl_.denom_);
    } else {
      _this->_impl_.denom_->MergeFrom(*from._impl_.denom_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Token::CopyFrom(const Token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Token::InternalSwap(Token* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.amount_, &other->_impl_.amount_, arena);
  swap(_impl_.denom_, other->_impl_.denom_);
}

::google::protobuf::Metadata Token::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Denom::_Internal {
 public:
};

Denom::Denom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.Denom)
}
inline PROTOBUF_NDEBUG_INLINE Denom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::applications::transfer::v1::Denom& from_msg)
      : trace_{visibility, arena, from.trace_},
        base_(arena, from.base_),
        _cached_size_{0} {}

Denom::Denom(
    ::google::protobuf::Arena* arena,
    const Denom& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Denom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.Denom)
}
inline PROTOBUF_NDEBUG_INLINE Denom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trace_{visibility, arena},
        base_(arena),
        _cached_size_{0} {}

inline void Denom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Denom::~Denom() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.Denom)
  SharedDtor(*this);
}
inline void Denom::SharedDtor(MessageLite& self) {
  Denom& this_ = static_cast<Denom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.base_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Denom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Denom(arena);
}
constexpr auto Denom::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Denom, _impl_.trace_) +
          decltype(Denom::_impl_.trace_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Denom), alignof(Denom), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Denom::PlacementNew_,
                                 sizeof(Denom),
                                 alignof(Denom));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Denom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Denom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Denom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Denom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Denom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Denom>(), &Denom::ByteSizeLong,
            &Denom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Denom, _impl_._cached_size_),
        false,
    },
    &Denom::kDescriptorMethods,
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Denom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 47, 2> Denom::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::Denom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string base = 1 [json_name = "base"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Denom, _impl_.base_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .ibc.applications.transfer.v1.Hop trace = 3 [json_name = "trace", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Denom, _impl_.trace_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string base = 1 [json_name = "base"];
    {PROTOBUF_FIELD_OFFSET(Denom, _impl_.base_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .ibc.applications.transfer.v1.Hop trace = 3 [json_name = "trace", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Denom, _impl_.trace_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::Hop>()},
  }}, {{
    "\42\4\0\0\0\0\0\0"
    "ibc.applications.transfer.v1.Denom"
    "base"
  }},
};

PROTOBUF_NOINLINE void Denom::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.Denom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trace_.Clear();
  _impl_.base_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Denom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Denom& this_ = static_cast<const Denom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Denom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Denom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.Denom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string base = 1 [json_name = "base"];
          if (!this_._internal_base().empty()) {
            const std::string& _s = this_._internal_base();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Denom.base");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .ibc.applications.transfer.v1.Hop trace = 3 [json_name = "trace", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trace_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trace().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.Denom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Denom::ByteSizeLong(const MessageLite& base) {
          const Denom& this_ = static_cast<const Denom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Denom::ByteSizeLong() const {
          const Denom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.Denom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ibc.applications.transfer.v1.Hop trace = 3 [json_name = "trace", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_trace_size();
              for (const auto& msg : this_._internal_trace()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string base = 1 [json_name = "base"];
            if (!this_._internal_base().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_base());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Denom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Denom*>(&to_msg);
  auto& from = static_cast<const Denom&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.Denom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trace()->MergeFrom(
      from._internal_trace());
  if (!from._internal_base().empty()) {
    _this->_internal_set_base(from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Denom::CopyFrom(const Denom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.Denom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Denom::InternalSwap(Denom* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trace_.InternalSwap(&other->_impl_.trace_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.base_, &other->_impl_.base_, arena);
}

::google::protobuf::Metadata Denom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Hop::_Internal {
 public:
};

Hop::Hop(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.applications.transfer.v1.Hop)
}
inline PROTOBUF_NDEBUG_INLINE Hop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::applications::transfer::v1::Hop& from_msg)
      : port_id_(arena, from.port_id_),
        channel_id_(arena, from.channel_id_),
        _cached_size_{0} {}

Hop::Hop(
    ::google::protobuf::Arena* arena,
    const Hop& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Hop* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.applications.transfer.v1.Hop)
}
inline PROTOBUF_NDEBUG_INLINE Hop::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : port_id_(arena),
        channel_id_(arena),
        _cached_size_{0} {}

inline void Hop::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Hop::~Hop() {
  // @@protoc_insertion_point(destructor:ibc.applications.transfer.v1.Hop)
  SharedDtor(*this);
}
inline void Hop::SharedDtor(MessageLite& self) {
  Hop& this_ = static_cast<Hop&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.port_id_.Destroy();
  this_._impl_.channel_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Hop::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Hop(arena);
}
constexpr auto Hop::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Hop),
                                            alignof(Hop));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Hop::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Hop_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Hop::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Hop>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Hop::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Hop>(), &Hop::ByteSizeLong,
            &Hop::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Hop, _impl_._cached_size_),
        false,
    },
    &Hop::kDescriptorMethods,
    &descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Hop::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> Hop::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::applications::transfer::v1::Hop>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string channel_id = 2 [json_name = "channelId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Hop, _impl_.channel_id_)}},
    // string port_id = 1 [json_name = "portId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Hop, _impl_.port_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string port_id = 1 [json_name = "portId"];
    {PROTOBUF_FIELD_OFFSET(Hop, _impl_.port_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string channel_id = 2 [json_name = "channelId"];
    {PROTOBUF_FIELD_OFFSET(Hop, _impl_.channel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\7\12\0\0\0\0\0"
    "ibc.applications.transfer.v1.Hop"
    "port_id"
    "channel_id"
  }},
};

PROTOBUF_NOINLINE void Hop::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.applications.transfer.v1.Hop)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_id_.ClearToEmpty();
  _impl_.channel_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Hop::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Hop& this_ = static_cast<const Hop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Hop::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Hop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.applications.transfer.v1.Hop)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string port_id = 1 [json_name = "portId"];
          if (!this_._internal_port_id().empty()) {
            const std::string& _s = this_._internal_port_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Hop.port_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string channel_id = 2 [json_name = "channelId"];
          if (!this_._internal_channel_id().empty()) {
            const std::string& _s = this_._internal_channel_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.applications.transfer.v1.Hop.channel_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.applications.transfer.v1.Hop)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Hop::ByteSizeLong(const MessageLite& base) {
          const Hop& this_ = static_cast<const Hop&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Hop::ByteSizeLong() const {
          const Hop& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.applications.transfer.v1.Hop)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string port_id = 1 [json_name = "portId"];
            if (!this_._internal_port_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_port_id());
            }
            // string channel_id = 2 [json_name = "channelId"];
            if (!this_._internal_channel_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Hop::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Hop*>(&to_msg);
  auto& from = static_cast<const Hop&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.applications.transfer.v1.Hop)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Hop::CopyFrom(const Hop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.applications.transfer.v1.Hop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Hop::InternalSwap(Hop* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, &other->_impl_.port_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, &other->_impl_.channel_id_, arena);
}

::google::protobuf::Metadata Hop::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace transfer
}  // namespace applications
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ibc_2fapplications_2ftransfer_2fv1_2ftoken_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
