// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/channel/v2/packet.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto_2epb_2eh
#define ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto;
namespace ibc {
namespace core {
namespace channel {
namespace v2 {
class Acknowledgement;
struct AcknowledgementDefaultTypeInternal;
extern AcknowledgementDefaultTypeInternal _Acknowledgement_default_instance_;
class Packet;
struct PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
class Payload;
struct PayloadDefaultTypeInternal;
extern PayloadDefaultTypeInternal _Payload_default_instance_;
class RecvPacketResult;
struct RecvPacketResultDefaultTypeInternal;
extern RecvPacketResultDefaultTypeInternal _RecvPacketResult_default_instance_;
}  // namespace v2
}  // namespace channel
}  // namespace core
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace core {
namespace channel {
namespace v2 {
enum PacketStatus : int {
  PACKET_STATUS_UNSPECIFIED = 0,
  PACKET_STATUS_SUCCESS = 1,
  PACKET_STATUS_FAILURE = 2,
  PACKET_STATUS_ASYNC = 3,
  PacketStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PacketStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PacketStatus_IsValid(int value);
extern const uint32_t PacketStatus_internal_data_[];
constexpr PacketStatus PacketStatus_MIN = static_cast<PacketStatus>(0);
constexpr PacketStatus PacketStatus_MAX = static_cast<PacketStatus>(3);
constexpr int PacketStatus_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
PacketStatus_descriptor();
template <typename T>
const std::string& PacketStatus_Name(T value) {
  static_assert(std::is_same<T, PacketStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PacketStatus_Name().");
  return PacketStatus_Name(static_cast<PacketStatus>(value));
}
template <>
inline const std::string& PacketStatus_Name(PacketStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PacketStatus_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool PacketStatus_Parse(absl::string_view name, PacketStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketStatus>(
      PacketStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class RecvPacketResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.channel.v2.RecvPacketResult) */ {
 public:
  inline RecvPacketResult() : RecvPacketResult(nullptr) {}
  ~RecvPacketResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RecvPacketResult* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RecvPacketResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecvPacketResult(
      ::google::protobuf::internal::ConstantInitialized);

  inline RecvPacketResult(const RecvPacketResult& from) : RecvPacketResult(nullptr, from) {}
  inline RecvPacketResult(RecvPacketResult&& from) noexcept
      : RecvPacketResult(nullptr, std::move(from)) {}
  inline RecvPacketResult& operator=(const RecvPacketResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecvPacketResult& operator=(RecvPacketResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecvPacketResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const RecvPacketResult* internal_default_instance() {
    return reinterpret_cast<const RecvPacketResult*>(
        &_RecvPacketResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(RecvPacketResult& a, RecvPacketResult& b) { a.Swap(&b); }
  inline void Swap(RecvPacketResult* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecvPacketResult* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecvPacketResult* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RecvPacketResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecvPacketResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecvPacketResult& from) { RecvPacketResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RecvPacketResult* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.channel.v2.RecvPacketResult"; }

 protected:
  explicit RecvPacketResult(::google::protobuf::Arena* arena);
  RecvPacketResult(::google::protobuf::Arena* arena, const RecvPacketResult& from);
  RecvPacketResult(::google::protobuf::Arena* arena, RecvPacketResult&& from) noexcept
      : RecvPacketResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcknowledgementFieldNumber = 2,
    kStatusFieldNumber = 1,
  };
  // bytes acknowledgement = 2 [json_name = "acknowledgement"];
  void clear_acknowledgement() ;
  const std::string& acknowledgement() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_acknowledgement(Arg_&& arg, Args_... args);
  std::string* mutable_acknowledgement();
  PROTOBUF_NODISCARD std::string* release_acknowledgement();
  void set_allocated_acknowledgement(std::string* value);

  private:
  const std::string& _internal_acknowledgement() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_acknowledgement(
      const std::string& value);
  std::string* _internal_mutable_acknowledgement();

  public:
  // .ibc.core.channel.v2.PacketStatus status = 1 [json_name = "status"];
  void clear_status() ;
  ::ibc::core::channel::v2::PacketStatus status() const;
  void set_status(::ibc::core::channel::v2::PacketStatus value);

  private:
  ::ibc::core::channel::v2::PacketStatus _internal_status() const;
  void _internal_set_status(::ibc::core::channel::v2::PacketStatus value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.channel.v2.RecvPacketResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RecvPacketResult& from_msg);
    ::google::protobuf::internal::ArenaStringPtr acknowledgement_;
    int status_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto;
};
// -------------------------------------------------------------------

class Payload final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.channel.v2.Payload) */ {
 public:
  inline Payload() : Payload(nullptr) {}
  ~Payload() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Payload* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Payload));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Payload(
      ::google::protobuf::internal::ConstantInitialized);

  inline Payload(const Payload& from) : Payload(nullptr, from) {}
  inline Payload(Payload&& from) noexcept
      : Payload(nullptr, std::move(from)) {}
  inline Payload& operator=(const Payload& from) {
    CopyFrom(from);
    return *this;
  }
  inline Payload& operator=(Payload&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Payload& default_instance() {
    return *internal_default_instance();
  }
  static inline const Payload* internal_default_instance() {
    return reinterpret_cast<const Payload*>(
        &_Payload_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Payload& a, Payload& b) { a.Swap(&b); }
  inline void Swap(Payload* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Payload* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Payload* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Payload>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Payload& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Payload& from) { Payload::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Payload* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.channel.v2.Payload"; }

 protected:
  explicit Payload(::google::protobuf::Arena* arena);
  Payload(::google::protobuf::Arena* arena, const Payload& from);
  Payload(::google::protobuf::Arena* arena, Payload&& from) noexcept
      : Payload(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourcePortFieldNumber = 1,
    kDestinationPortFieldNumber = 2,
    kVersionFieldNumber = 3,
    kEncodingFieldNumber = 4,
    kValueFieldNumber = 5,
  };
  // string source_port = 1 [json_name = "sourcePort"];
  void clear_source_port() ;
  const std::string& source_port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_port(Arg_&& arg, Args_... args);
  std::string* mutable_source_port();
  PROTOBUF_NODISCARD std::string* release_source_port();
  void set_allocated_source_port(std::string* value);

  private:
  const std::string& _internal_source_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_port(
      const std::string& value);
  std::string* _internal_mutable_source_port();

  public:
  // string destination_port = 2 [json_name = "destinationPort"];
  void clear_destination_port() ;
  const std::string& destination_port() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_port(Arg_&& arg, Args_... args);
  std::string* mutable_destination_port();
  PROTOBUF_NODISCARD std::string* release_destination_port();
  void set_allocated_destination_port(std::string* value);

  private:
  const std::string& _internal_destination_port() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination_port(
      const std::string& value);
  std::string* _internal_mutable_destination_port();

  public:
  // string version = 3 [json_name = "version"];
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string encoding = 4 [json_name = "encoding"];
  void clear_encoding() ;
  const std::string& encoding() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encoding(Arg_&& arg, Args_... args);
  std::string* mutable_encoding();
  PROTOBUF_NODISCARD std::string* release_encoding();
  void set_allocated_encoding(std::string* value);

  private:
  const std::string& _internal_encoding() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encoding(
      const std::string& value);
  std::string* _internal_mutable_encoding();

  public:
  // bytes value = 5 [json_name = "value"];
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.channel.v2.Payload)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Payload& from_msg);
    ::google::protobuf::internal::ArenaStringPtr source_port_;
    ::google::protobuf::internal::ArenaStringPtr destination_port_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr encoding_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto;
};
// -------------------------------------------------------------------

class Acknowledgement final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.channel.v2.Acknowledgement) */ {
 public:
  inline Acknowledgement() : Acknowledgement(nullptr) {}
  ~Acknowledgement() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Acknowledgement* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Acknowledgement));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Acknowledgement(
      ::google::protobuf::internal::ConstantInitialized);

  inline Acknowledgement(const Acknowledgement& from) : Acknowledgement(nullptr, from) {}
  inline Acknowledgement(Acknowledgement&& from) noexcept
      : Acknowledgement(nullptr, std::move(from)) {}
  inline Acknowledgement& operator=(const Acknowledgement& from) {
    CopyFrom(from);
    return *this;
  }
  inline Acknowledgement& operator=(Acknowledgement&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Acknowledgement& default_instance() {
    return *internal_default_instance();
  }
  static inline const Acknowledgement* internal_default_instance() {
    return reinterpret_cast<const Acknowledgement*>(
        &_Acknowledgement_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Acknowledgement& a, Acknowledgement& b) { a.Swap(&b); }
  inline void Swap(Acknowledgement* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Acknowledgement* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Acknowledgement* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Acknowledgement>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Acknowledgement& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Acknowledgement& from) { Acknowledgement::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Acknowledgement* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.channel.v2.Acknowledgement"; }

 protected:
  explicit Acknowledgement(::google::protobuf::Arena* arena);
  Acknowledgement(::google::protobuf::Arena* arena, const Acknowledgement& from);
  Acknowledgement(::google::protobuf::Arena* arena, Acknowledgement&& from) noexcept
      : Acknowledgement(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppAcknowledgementsFieldNumber = 1,
  };
  // repeated bytes app_acknowledgements = 1 [json_name = "appAcknowledgements"];
  int app_acknowledgements_size() const;
  private:
  int _internal_app_acknowledgements_size() const;

  public:
  void clear_app_acknowledgements() ;
  const std::string& app_acknowledgements(int index) const;
  std::string* mutable_app_acknowledgements(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_acknowledgements(int index, Arg_&& value, Args_... args);
  std::string* add_app_acknowledgements();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_app_acknowledgements(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& app_acknowledgements() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_app_acknowledgements();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_app_acknowledgements() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_app_acknowledgements();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.channel.v2.Acknowledgement)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Acknowledgement& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> app_acknowledgements_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto;
};
// -------------------------------------------------------------------

class Packet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.channel.v2.Packet) */ {
 public:
  inline Packet() : Packet(nullptr) {}
  ~Packet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Packet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Packet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Packet(
      ::google::protobuf::internal::ConstantInitialized);

  inline Packet(const Packet& from) : Packet(nullptr, from) {}
  inline Packet(Packet&& from) noexcept
      : Packet(nullptr, std::move(from)) {}
  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  inline Packet& operator=(Packet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Packet& default_instance() {
    return *internal_default_instance();
  }
  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
        &_Packet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Packet& a, Packet& b) { a.Swap(&b); }
  inline void Swap(Packet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Packet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Packet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Packet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Packet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Packet& from) { Packet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Packet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.channel.v2.Packet"; }

 protected:
  explicit Packet(::google::protobuf::Arena* arena);
  Packet(::google::protobuf::Arena* arena, const Packet& from);
  Packet(::google::protobuf::Arena* arena, Packet&& from) noexcept
      : Packet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayloadsFieldNumber = 5,
    kSourceClientFieldNumber = 2,
    kDestinationClientFieldNumber = 3,
    kSequenceFieldNumber = 1,
    kTimeoutTimestampFieldNumber = 4,
  };
  // repeated .ibc.core.channel.v2.Payload payloads = 5 [json_name = "payloads", (.gogoproto.nullable) = false];
  int payloads_size() const;
  private:
  int _internal_payloads_size() const;

  public:
  void clear_payloads() ;
  ::ibc::core::channel::v2::Payload* mutable_payloads(int index);
  ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>* mutable_payloads();

  private:
  const ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>& _internal_payloads() const;
  ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>* _internal_mutable_payloads();
  public:
  const ::ibc::core::channel::v2::Payload& payloads(int index) const;
  ::ibc::core::channel::v2::Payload* add_payloads();
  const ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>& payloads() const;
  // string source_client = 2 [json_name = "sourceClient"];
  void clear_source_client() ;
  const std::string& source_client() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_client(Arg_&& arg, Args_... args);
  std::string* mutable_source_client();
  PROTOBUF_NODISCARD std::string* release_source_client();
  void set_allocated_source_client(std::string* value);

  private:
  const std::string& _internal_source_client() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_client(
      const std::string& value);
  std::string* _internal_mutable_source_client();

  public:
  // string destination_client = 3 [json_name = "destinationClient"];
  void clear_destination_client() ;
  const std::string& destination_client() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination_client(Arg_&& arg, Args_... args);
  std::string* mutable_destination_client();
  PROTOBUF_NODISCARD std::string* release_destination_client();
  void set_allocated_destination_client(std::string* value);

  private:
  const std::string& _internal_destination_client() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination_client(
      const std::string& value);
  std::string* _internal_mutable_destination_client();

  public:
  // uint64 sequence = 1 [json_name = "sequence"];
  void clear_sequence() ;
  ::uint64_t sequence() const;
  void set_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_sequence() const;
  void _internal_set_sequence(::uint64_t value);

  public:
  // uint64 timeout_timestamp = 4 [json_name = "timeoutTimestamp"];
  void clear_timeout_timestamp() ;
  ::uint64_t timeout_timestamp() const;
  void set_timeout_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timeout_timestamp() const;
  void _internal_set_timeout_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.channel.v2.Packet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Packet& from_msg);
    ::google::protobuf::RepeatedPtrField< ::ibc::core::channel::v2::Payload > payloads_;
    ::google::protobuf::internal::ArenaStringPtr source_client_;
    ::google::protobuf::internal::ArenaStringPtr destination_client_;
    ::uint64_t sequence_;
    ::uint64_t timeout_timestamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Packet

// uint64 sequence = 1 [json_name = "sequence"];
inline void Packet::clear_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = ::uint64_t{0u};
}
inline ::uint64_t Packet::sequence() const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Packet.sequence)
  return _internal_sequence();
}
inline void Packet::set_sequence(::uint64_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Packet.sequence)
}
inline ::uint64_t Packet::_internal_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_;
}
inline void Packet::_internal_set_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = value;
}

// string source_client = 2 [json_name = "sourceClient"];
inline void Packet::clear_source_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_client_.ClearToEmpty();
}
inline const std::string& Packet::source_client() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Packet.source_client)
  return _internal_source_client();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Packet::set_source_client(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_client_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Packet.source_client)
}
inline std::string* Packet::mutable_source_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_client();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Packet.source_client)
  return _s;
}
inline const std::string& Packet::_internal_source_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_client_.Get();
}
inline void Packet::_internal_set_source_client(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_client_.Set(value, GetArena());
}
inline std::string* Packet::_internal_mutable_source_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_client_.Mutable( GetArena());
}
inline std::string* Packet::release_source_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.Packet.source_client)
  return _impl_.source_client_.Release();
}
inline void Packet::set_allocated_source_client(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_client_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_client_.IsDefault()) {
    _impl_.source_client_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.Packet.source_client)
}

// string destination_client = 3 [json_name = "destinationClient"];
inline void Packet::clear_destination_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_client_.ClearToEmpty();
}
inline const std::string& Packet::destination_client() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Packet.destination_client)
  return _internal_destination_client();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Packet::set_destination_client(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_client_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Packet.destination_client)
}
inline std::string* Packet::mutable_destination_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination_client();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Packet.destination_client)
  return _s;
}
inline const std::string& Packet::_internal_destination_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_client_.Get();
}
inline void Packet::_internal_set_destination_client(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_client_.Set(value, GetArena());
}
inline std::string* Packet::_internal_mutable_destination_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.destination_client_.Mutable( GetArena());
}
inline std::string* Packet::release_destination_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.Packet.destination_client)
  return _impl_.destination_client_.Release();
}
inline void Packet::set_allocated_destination_client(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_client_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.destination_client_.IsDefault()) {
    _impl_.destination_client_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.Packet.destination_client)
}

// uint64 timeout_timestamp = 4 [json_name = "timeoutTimestamp"];
inline void Packet::clear_timeout_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t Packet::timeout_timestamp() const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Packet.timeout_timestamp)
  return _internal_timeout_timestamp();
}
inline void Packet::set_timeout_timestamp(::uint64_t value) {
  _internal_set_timeout_timestamp(value);
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Packet.timeout_timestamp)
}
inline ::uint64_t Packet::_internal_timeout_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_timestamp_;
}
inline void Packet::_internal_set_timeout_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_timestamp_ = value;
}

// repeated .ibc.core.channel.v2.Payload payloads = 5 [json_name = "payloads", (.gogoproto.nullable) = false];
inline int Packet::_internal_payloads_size() const {
  return _internal_payloads().size();
}
inline int Packet::payloads_size() const {
  return _internal_payloads_size();
}
inline void Packet::clear_payloads() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payloads_.Clear();
}
inline ::ibc::core::channel::v2::Payload* Packet::mutable_payloads(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Packet.payloads)
  return _internal_mutable_payloads()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>* Packet::mutable_payloads()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v2.Packet.payloads)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_payloads();
}
inline const ::ibc::core::channel::v2::Payload& Packet::payloads(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Packet.payloads)
  return _internal_payloads().Get(index);
}
inline ::ibc::core::channel::v2::Payload* Packet::add_payloads() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ibc::core::channel::v2::Payload* _add = _internal_mutable_payloads()->Add();
  // @@protoc_insertion_point(field_add:ibc.core.channel.v2.Packet.payloads)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>& Packet::payloads() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v2.Packet.payloads)
  return _internal_payloads();
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>&
Packet::_internal_payloads() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payloads_;
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::channel::v2::Payload>*
Packet::_internal_mutable_payloads() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.payloads_;
}

// -------------------------------------------------------------------

// Payload

// string source_port = 1 [json_name = "sourcePort"];
inline void Payload::clear_source_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.ClearToEmpty();
}
inline const std::string& Payload::source_port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Payload.source_port)
  return _internal_source_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payload::set_source_port(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Payload.source_port)
}
inline std::string* Payload::mutable_source_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_port();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Payload.source_port)
  return _s;
}
inline const std::string& Payload::_internal_source_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_port_.Get();
}
inline void Payload::_internal_set_source_port(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.Set(value, GetArena());
}
inline std::string* Payload::_internal_mutable_source_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_port_.Mutable( GetArena());
}
inline std::string* Payload::release_source_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.Payload.source_port)
  return _impl_.source_port_.Release();
}
inline void Payload::set_allocated_source_port(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_port_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_port_.IsDefault()) {
    _impl_.source_port_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.Payload.source_port)
}

// string destination_port = 2 [json_name = "destinationPort"];
inline void Payload::clear_destination_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_port_.ClearToEmpty();
}
inline const std::string& Payload::destination_port() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Payload.destination_port)
  return _internal_destination_port();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payload::set_destination_port(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_port_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Payload.destination_port)
}
inline std::string* Payload::mutable_destination_port() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination_port();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Payload.destination_port)
  return _s;
}
inline const std::string& Payload::_internal_destination_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_port_.Get();
}
inline void Payload::_internal_set_destination_port(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_port_.Set(value, GetArena());
}
inline std::string* Payload::_internal_mutable_destination_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.destination_port_.Mutable( GetArena());
}
inline std::string* Payload::release_destination_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.Payload.destination_port)
  return _impl_.destination_port_.Release();
}
inline void Payload::set_allocated_destination_port(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_port_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.destination_port_.IsDefault()) {
    _impl_.destination_port_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.Payload.destination_port)
}

// string version = 3 [json_name = "version"];
inline void Payload::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& Payload::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Payload.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payload::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Payload.version)
}
inline std::string* Payload::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Payload.version)
  return _s;
}
inline const std::string& Payload::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void Payload::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* Payload::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* Payload::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.Payload.version)
  return _impl_.version_.Release();
}
inline void Payload::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.Payload.version)
}

// string encoding = 4 [json_name = "encoding"];
inline void Payload::clear_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.ClearToEmpty();
}
inline const std::string& Payload::encoding() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Payload.encoding)
  return _internal_encoding();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payload::set_encoding(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Payload.encoding)
}
inline std::string* Payload::mutable_encoding() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encoding();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Payload.encoding)
  return _s;
}
inline const std::string& Payload::_internal_encoding() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encoding_.Get();
}
inline void Payload::_internal_set_encoding(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.Set(value, GetArena());
}
inline std::string* Payload::_internal_mutable_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encoding_.Mutable( GetArena());
}
inline std::string* Payload::release_encoding() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.Payload.encoding)
  return _impl_.encoding_.Release();
}
inline void Payload::set_allocated_encoding(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encoding_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.encoding_.IsDefault()) {
    _impl_.encoding_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.Payload.encoding)
}

// bytes value = 5 [json_name = "value"];
inline void Payload::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Payload::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Payload.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payload::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Payload.value)
}
inline std::string* Payload::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Payload.value)
  return _s;
}
inline const std::string& Payload::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Payload::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Payload::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Payload::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.Payload.value)
  return _impl_.value_.Release();
}
inline void Payload::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.Payload.value)
}

// -------------------------------------------------------------------

// Acknowledgement

// repeated bytes app_acknowledgements = 1 [json_name = "appAcknowledgements"];
inline int Acknowledgement::_internal_app_acknowledgements_size() const {
  return _internal_app_acknowledgements().size();
}
inline int Acknowledgement::app_acknowledgements_size() const {
  return _internal_app_acknowledgements_size();
}
inline void Acknowledgement::clear_app_acknowledgements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_acknowledgements_.Clear();
}
inline std::string* Acknowledgement::add_app_acknowledgements() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_app_acknowledgements()->Add();
  // @@protoc_insertion_point(field_add_mutable:ibc.core.channel.v2.Acknowledgement.app_acknowledgements)
  return _s;
}
inline const std::string& Acknowledgement::app_acknowledgements(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.Acknowledgement.app_acknowledgements)
  return _internal_app_acknowledgements().Get(index);
}
inline std::string* Acknowledgement::mutable_app_acknowledgements(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.Acknowledgement.app_acknowledgements)
  return _internal_mutable_app_acknowledgements()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Acknowledgement::set_app_acknowledgements(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_app_acknowledgements()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.Acknowledgement.app_acknowledgements)
}
template <typename Arg_, typename... Args_>
inline void Acknowledgement::add_app_acknowledgements(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_app_acknowledgements(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:ibc.core.channel.v2.Acknowledgement.app_acknowledgements)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Acknowledgement::app_acknowledgements() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.channel.v2.Acknowledgement.app_acknowledgements)
  return _internal_app_acknowledgements();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Acknowledgement::mutable_app_acknowledgements() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.channel.v2.Acknowledgement.app_acknowledgements)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_app_acknowledgements();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Acknowledgement::_internal_app_acknowledgements() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.app_acknowledgements_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Acknowledgement::_internal_mutable_app_acknowledgements() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.app_acknowledgements_;
}

// -------------------------------------------------------------------

// RecvPacketResult

// .ibc.core.channel.v2.PacketStatus status = 1 [json_name = "status"];
inline void RecvPacketResult::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::ibc::core::channel::v2::PacketStatus RecvPacketResult::status() const {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.RecvPacketResult.status)
  return _internal_status();
}
inline void RecvPacketResult::set_status(::ibc::core::channel::v2::PacketStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.RecvPacketResult.status)
}
inline ::ibc::core::channel::v2::PacketStatus RecvPacketResult::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ibc::core::channel::v2::PacketStatus>(_impl_.status_);
}
inline void RecvPacketResult::_internal_set_status(::ibc::core::channel::v2::PacketStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// bytes acknowledgement = 2 [json_name = "acknowledgement"];
inline void RecvPacketResult::clear_acknowledgement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acknowledgement_.ClearToEmpty();
}
inline const std::string& RecvPacketResult::acknowledgement() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.channel.v2.RecvPacketResult.acknowledgement)
  return _internal_acknowledgement();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RecvPacketResult::set_acknowledgement(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acknowledgement_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.channel.v2.RecvPacketResult.acknowledgement)
}
inline std::string* RecvPacketResult::mutable_acknowledgement() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_acknowledgement();
  // @@protoc_insertion_point(field_mutable:ibc.core.channel.v2.RecvPacketResult.acknowledgement)
  return _s;
}
inline const std::string& RecvPacketResult::_internal_acknowledgement() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acknowledgement_.Get();
}
inline void RecvPacketResult::_internal_set_acknowledgement(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acknowledgement_.Set(value, GetArena());
}
inline std::string* RecvPacketResult::_internal_mutable_acknowledgement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.acknowledgement_.Mutable( GetArena());
}
inline std::string* RecvPacketResult::release_acknowledgement() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.channel.v2.RecvPacketResult.acknowledgement)
  return _impl_.acknowledgement_.Release();
}
inline void RecvPacketResult::set_allocated_acknowledgement(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acknowledgement_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.acknowledgement_.IsDefault()) {
    _impl_.acknowledgement_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.channel.v2.RecvPacketResult.acknowledgement)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace channel
}  // namespace core
}  // namespace ibc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ibc::core::channel::v2::PacketStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ibc::core::channel::v2::PacketStatus>() {
  return ::ibc::core::channel::v2::PacketStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2fcore_2fchannel_2fv2_2fpacket_2eproto_2epb_2eh
