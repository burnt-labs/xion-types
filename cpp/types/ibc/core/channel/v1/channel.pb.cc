// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/channel/v1/channel.proto
// Protobuf C++ Version: 5.29.4

#include "ibc/core/channel/v1/channel.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ibc {
namespace core {
namespace channel {
namespace v1 {

inline constexpr PacketState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sequence_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketState::PacketState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketStateDefaultTypeInternal() {}
  union {
    PacketState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketStateDefaultTypeInternal _PacketState_default_instance_;

inline constexpr PacketId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sequence_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketId::PacketId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketIdDefaultTypeInternal() {}
  union {
    PacketId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketIdDefaultTypeInternal _PacketId_default_instance_;

inline constexpr Counterparty::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Counterparty::Counterparty(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CounterpartyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CounterpartyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CounterpartyDefaultTypeInternal() {}
  union {
    Counterparty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CounterpartyDefaultTypeInternal _Counterparty_default_instance_;

inline constexpr Acknowledgement::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Acknowledgement::Acknowledgement(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AcknowledgementDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AcknowledgementDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AcknowledgementDefaultTypeInternal() {}
  union {
    Acknowledgement _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AcknowledgementDefaultTypeInternal _Acknowledgement_default_instance_;

inline constexpr Timeout::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        height_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Timeout::Timeout(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimeoutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeoutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeoutDefaultTypeInternal() {}
  union {
    Timeout _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeoutDefaultTypeInternal _Timeout_default_instance_;

inline constexpr Packet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_port_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_port_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        destination_channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timeout_height_{nullptr},
        sequence_{::uint64_t{0u}},
        timeout_timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Packet::Packet(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketDefaultTypeInternal() {}
  union {
    Packet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketDefaultTypeInternal _Packet_default_instance_;

inline constexpr IdentifiedChannel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        connection_hops_{},
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        counterparty_{nullptr},
        state_{static_cast< ::ibc::core::channel::v1::State >(0)},
        ordering_{static_cast< ::ibc::core::channel::v1::Order >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR IdentifiedChannel::IdentifiedChannel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IdentifiedChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IdentifiedChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IdentifiedChannelDefaultTypeInternal() {}
  union {
    IdentifiedChannel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IdentifiedChannelDefaultTypeInternal _IdentifiedChannel_default_instance_;

inline constexpr Channel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        connection_hops_{},
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        counterparty_{nullptr},
        state_{static_cast< ::ibc::core::channel::v1::State >(0)},
        ordering_{static_cast< ::ibc::core::channel::v1::Order >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Channel::Channel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelDefaultTypeInternal() {}
  union {
    Channel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelDefaultTypeInternal _Channel_default_instance_;
}  // namespace v1
}  // namespace channel
}  // namespace core
}  // namespace ibc
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto = nullptr;
const ::uint32_t
    TableStruct_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Channel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Channel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Channel, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Channel, _impl_.ordering_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Channel, _impl_.counterparty_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Channel, _impl_.connection_hops_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Channel, _impl_.version_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_.state_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_.ordering_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_.counterparty_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_.connection_hops_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_.port_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::IdentifiedChannel, _impl_.channel_id_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Counterparty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Counterparty, _impl_.port_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Counterparty, _impl_.channel_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.sequence_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.source_port_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.source_channel_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.destination_port_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.destination_channel_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.timeout_height_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Packet, _impl_.timeout_timestamp_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketState, _impl_.port_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketState, _impl_.channel_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketState, _impl_.sequence_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketState, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketId, _impl_.port_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketId, _impl_.channel_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketId, _impl_.sequence_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Acknowledgement, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Acknowledgement, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Acknowledgement, _impl_.response_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Timeout, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Timeout, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Timeout, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Timeout, _impl_.timestamp_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::ibc::core::channel::v1::Channel)},
        {18, 33, -1, sizeof(::ibc::core::channel::v1::IdentifiedChannel)},
        {40, -1, -1, sizeof(::ibc::core::channel::v1::Counterparty)},
        {50, 66, -1, sizeof(::ibc::core::channel::v1::Packet)},
        {74, -1, -1, sizeof(::ibc::core::channel::v1::PacketState)},
        {86, -1, -1, sizeof(::ibc::core::channel::v1::PacketId)},
        {97, -1, -1, sizeof(::ibc::core::channel::v1::Acknowledgement)},
        {108, 118, -1, sizeof(::ibc::core::channel::v1::Timeout)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::core::channel::v1::_Channel_default_instance_._instance,
    &::ibc::core::channel::v1::_IdentifiedChannel_default_instance_._instance,
    &::ibc::core::channel::v1::_Counterparty_default_instance_._instance,
    &::ibc::core::channel::v1::_Packet_default_instance_._instance,
    &::ibc::core::channel::v1::_PacketState_default_instance_._instance,
    &::ibc::core::channel::v1::_PacketId_default_instance_._instance,
    &::ibc::core::channel::v1::_Acknowledgement_default_instance_._instance,
    &::ibc::core::channel::v1::_Timeout_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!ibc/core/channel/v1/channel.proto\022\023ibc"
    ".core.channel.v1\032\024gogoproto/gogo.proto\032\037"
    "ibc/core/client/v1/client.proto\"\211\002\n\007Chan"
    "nel\0220\n\005state\030\001 \001(\0162\032.ibc.core.channel.v1"
    ".StateR\005state\0226\n\010ordering\030\002 \001(\0162\032.ibc.co"
    "re.channel.v1.OrderR\010ordering\022K\n\014counter"
    "party\030\003 \001(\0132!.ibc.core.channel.v1.Counte"
    "rpartyB\004\310\336\037\000R\014counterparty\022\'\n\017connection"
    "_hops\030\004 \003(\tR\016connectionHops\022\030\n\007version\030\005"
    " \001(\tR\007version:\004\210\240\037\000\"\313\002\n\021IdentifiedChanne"
    "l\0220\n\005state\030\001 \001(\0162\032.ibc.core.channel.v1.S"
    "tateR\005state\0226\n\010ordering\030\002 \001(\0162\032.ibc.core"
    ".channel.v1.OrderR\010ordering\022K\n\014counterpa"
    "rty\030\003 \001(\0132!.ibc.core.channel.v1.Counterp"
    "artyB\004\310\336\037\000R\014counterparty\022\'\n\017connection_h"
    "ops\030\004 \003(\tR\016connectionHops\022\030\n\007version\030\005 \001"
    "(\tR\007version\022\027\n\007port_id\030\006 \001(\tR\006portId\022\035\n\n"
    "channel_id\030\007 \001(\tR\tchannelId:\004\210\240\037\000\"L\n\014Cou"
    "nterparty\022\027\n\007port_id\030\001 \001(\tR\006portId\022\035\n\nch"
    "annel_id\030\002 \001(\tR\tchannelId:\004\210\240\037\000\"\330\002\n\006Pack"
    "et\022\032\n\010sequence\030\001 \001(\004R\010sequence\022\037\n\013source"
    "_port\030\002 \001(\tR\nsourcePort\022%\n\016source_channe"
    "l\030\003 \001(\tR\rsourceChannel\022)\n\020destination_po"
    "rt\030\004 \001(\tR\017destinationPort\022/\n\023destination"
    "_channel\030\005 \001(\tR\022destinationChannel\022\022\n\004da"
    "ta\030\006 \001(\014R\004data\022G\n\016timeout_height\030\007 \001(\0132\032"
    ".ibc.core.client.v1.HeightB\004\310\336\037\000R\rtimeou"
    "tHeight\022+\n\021timeout_timestamp\030\010 \001(\004R\020time"
    "outTimestamp:\004\210\240\037\000\"{\n\013PacketState\022\027\n\007por"
    "t_id\030\001 \001(\tR\006portId\022\035\n\nchannel_id\030\002 \001(\tR\t"
    "channelId\022\032\n\010sequence\030\003 \001(\004R\010sequence\022\022\n"
    "\004data\030\004 \001(\014R\004data:\004\210\240\037\000\"d\n\010PacketId\022\027\n\007p"
    "ort_id\030\001 \001(\tR\006portId\022\035\n\nchannel_id\030\002 \001(\t"
    "R\tchannelId\022\032\n\010sequence\030\003 \001(\004R\010sequence:"
    "\004\210\240\037\000\"O\n\017Acknowledgement\022\030\n\006result\030\025 \001(\014"
    "H\000R\006result\022\026\n\005error\030\026 \001(\tH\000R\005errorB\n\n\010re"
    "sponse\"a\n\007Timeout\0228\n\006height\030\001 \001(\0132\032.ibc."
    "core.client.v1.HeightB\004\310\336\037\000R\006height\022\034\n\tt"
    "imestamp\030\002 \001(\004R\ttimestamp*\267\001\n\005State\0226\n\037S"
    "TATE_UNINITIALIZED_UNSPECIFIED\020\000\032\021\212\235 \rUN"
    "INITIALIZED\022\030\n\nSTATE_INIT\020\001\032\010\212\235 \004INIT\022\036\n"
    "\rSTATE_TRYOPEN\020\002\032\013\212\235 \007TRYOPEN\022\030\n\nSTATE_O"
    "PEN\020\003\032\010\212\235 \004OPEN\022\034\n\014STATE_CLOSED\020\004\032\n\212\235 \006C"
    "LOSED\032\004\210\243\036\000*w\n\005Order\022$\n\026ORDER_NONE_UNSPE"
    "CIFIED\020\000\032\010\212\235 \004NONE\022\"\n\017ORDER_UNORDERED\020\001\032"
    "\r\212\235 \tUNORDERED\022\036\n\rORDER_ORDERED\020\002\032\013\212\235 \007O"
    "RDERED\032\004\210\243\036\000B<Z:github.com/cosmos/ibc-go"
    "/v10/modules/core/04-channel/typesb\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto_deps[2] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_ibc_2fcore_2fclient_2fv1_2fclient_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto = {
    false,
    false,
    1922,
    descriptor_table_protodef_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    "ibc/core/channel/v1/channel.proto",
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto_once,
    descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto_deps,
    2,
    8,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto::offsets,
    file_level_enum_descriptors_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    file_level_service_descriptors_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
};
namespace ibc {
namespace core {
namespace channel {
namespace v1 {
const ::google::protobuf::EnumDescriptor* State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto);
  return file_level_enum_descriptors_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t State_internal_data_[] = {
    327680u, 0u, };
bool State_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* Order_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto);
  return file_level_enum_descriptors_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Order_internal_data_[] = {
    196608u, 0u, };
bool Order_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Channel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Channel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Channel, _impl_._has_bits_);
};

Channel::Channel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.Channel)
}
inline PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::Channel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        connection_hops_{visibility, arena, from.connection_hops_},
        version_(arena, from.version_) {}

Channel::Channel(
    ::google::protobuf::Arena* arena,
    const Channel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Channel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.counterparty_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::core::channel::v1::Counterparty>(
                              arena, *from._impl_.counterparty_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, state_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, state_),
           offsetof(Impl_, ordering_) -
               offsetof(Impl_, state_) +
               sizeof(Impl_::ordering_));

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.Channel)
}
inline PROTOBUF_NDEBUG_INLINE Channel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        connection_hops_{visibility, arena},
        version_(arena) {}

inline void Channel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, counterparty_),
           0,
           offsetof(Impl_, ordering_) -
               offsetof(Impl_, counterparty_) +
               sizeof(Impl_::ordering_));
}
Channel::~Channel() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.Channel)
  SharedDtor(*this);
}
inline void Channel::SharedDtor(MessageLite& self) {
  Channel& this_ = static_cast<Channel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  delete this_._impl_.counterparty_;
  this_._impl_.~Impl_();
}

inline void* Channel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Channel(arena);
}
constexpr auto Channel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.connection_hops_) +
          decltype(Channel::_impl_.connection_hops_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Channel), alignof(Channel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Channel::PlacementNew_,
                                 sizeof(Channel),
                                 alignof(Channel));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Channel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Channel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Channel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Channel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Channel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Channel>(), &Channel::ByteSizeLong,
            &Channel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Channel, _impl_._cached_size_),
        false,
    },
    &Channel::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Channel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 58, 2> Channel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Channel, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Channel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Channel, _impl_.state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.state_)}},
    // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Channel, _impl_.ordering_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.ordering_)}},
    // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.counterparty_)}},
    // repeated string connection_hops = 4 [json_name = "connectionHops"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.connection_hops_)}},
    // string version = 5 [json_name = "version"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Channel, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.ordering_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.counterparty_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string connection_hops = 4 [json_name = "connectionHops"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.connection_hops_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string version = 5 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(Channel, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Counterparty>()},
  }}, {{
    "\33\0\0\0\17\7\0\0"
    "ibc.core.channel.v1.Channel"
    "connection_hops"
    "version"
  }},
};

PROTOBUF_NOINLINE void Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.Channel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connection_hops_.Clear();
  _impl_.version_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.counterparty_ != nullptr);
    _impl_.counterparty_->Clear();
  }
  ::memset(&_impl_.state_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ordering_) -
      reinterpret_cast<char*>(&_impl_.state_)) + sizeof(_impl_.ordering_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Channel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Channel& this_ = static_cast<const Channel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Channel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Channel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.Channel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
          if (this_._internal_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_state(), target);
          }

          // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
          if (this_._internal_ordering() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_ordering(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.counterparty_, this_._impl_.counterparty_->GetCachedSize(), target,
                stream);
          }

          // repeated string connection_hops = 4 [json_name = "connectionHops"];
          for (int i = 0, n = this_._internal_connection_hops_size(); i < n; ++i) {
            const auto& s = this_._internal_connection_hops().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Channel.connection_hops");
            target = stream->WriteString(4, s, target);
          }

          // string version = 5 [json_name = "version"];
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Channel.version");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.Channel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Channel::ByteSizeLong(const MessageLite& base) {
          const Channel& this_ = static_cast<const Channel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Channel::ByteSizeLong() const {
          const Channel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.Channel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string connection_hops = 4 [json_name = "connectionHops"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_connection_hops().size());
              for (int i = 0, n = this_._internal_connection_hops().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_connection_hops().Get(i));
              }
            }
          }
           {
            // string version = 5 [json_name = "version"];
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
          }
           {
            // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.counterparty_);
            }
          }
           {
            // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
            if (this_._internal_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
            // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
            if (this_._internal_ordering() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_ordering());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Channel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Channel*>(&to_msg);
  auto& from = static_cast<const Channel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.Channel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connection_hops()->MergeFrom(from._internal_connection_hops());
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.counterparty_ != nullptr);
    if (_this->_impl_.counterparty_ == nullptr) {
      _this->_impl_.counterparty_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::core::channel::v1::Counterparty>(arena, *from._impl_.counterparty_);
    } else {
      _this->_impl_.counterparty_->MergeFrom(*from._impl_.counterparty_);
    }
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  if (from._internal_ordering() != 0) {
    _this->_impl_.ordering_ = from._impl_.ordering_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Channel::CopyFrom(const Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Channel::InternalSwap(Channel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.connection_hops_.InternalSwap(&other->_impl_.connection_hops_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Channel, _impl_.ordering_)
      + sizeof(Channel::_impl_.ordering_)
      - PROTOBUF_FIELD_OFFSET(Channel, _impl_.counterparty_)>(
          reinterpret_cast<char*>(&_impl_.counterparty_),
          reinterpret_cast<char*>(&other->_impl_.counterparty_));
}

::google::protobuf::Metadata Channel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IdentifiedChannel::_Internal {
 public:
  using HasBits =
      decltype(std::declval<IdentifiedChannel>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_._has_bits_);
};

IdentifiedChannel::IdentifiedChannel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.IdentifiedChannel)
}
inline PROTOBUF_NDEBUG_INLINE IdentifiedChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::IdentifiedChannel& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        connection_hops_{visibility, arena, from.connection_hops_},
        version_(arena, from.version_),
        port_id_(arena, from.port_id_),
        channel_id_(arena, from.channel_id_) {}

IdentifiedChannel::IdentifiedChannel(
    ::google::protobuf::Arena* arena,
    const IdentifiedChannel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IdentifiedChannel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.counterparty_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::core::channel::v1::Counterparty>(
                              arena, *from._impl_.counterparty_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, state_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, state_),
           offsetof(Impl_, ordering_) -
               offsetof(Impl_, state_) +
               sizeof(Impl_::ordering_));

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.IdentifiedChannel)
}
inline PROTOBUF_NDEBUG_INLINE IdentifiedChannel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        connection_hops_{visibility, arena},
        version_(arena),
        port_id_(arena),
        channel_id_(arena) {}

inline void IdentifiedChannel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, counterparty_),
           0,
           offsetof(Impl_, ordering_) -
               offsetof(Impl_, counterparty_) +
               sizeof(Impl_::ordering_));
}
IdentifiedChannel::~IdentifiedChannel() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.IdentifiedChannel)
  SharedDtor(*this);
}
inline void IdentifiedChannel::SharedDtor(MessageLite& self) {
  IdentifiedChannel& this_ = static_cast<IdentifiedChannel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  this_._impl_.port_id_.Destroy();
  this_._impl_.channel_id_.Destroy();
  delete this_._impl_.counterparty_;
  this_._impl_.~Impl_();
}

inline void* IdentifiedChannel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) IdentifiedChannel(arena);
}
constexpr auto IdentifiedChannel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.connection_hops_) +
          decltype(IdentifiedChannel::_impl_.connection_hops_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(IdentifiedChannel), alignof(IdentifiedChannel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&IdentifiedChannel::PlacementNew_,
                                 sizeof(IdentifiedChannel),
                                 alignof(IdentifiedChannel));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull IdentifiedChannel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_IdentifiedChannel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &IdentifiedChannel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<IdentifiedChannel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &IdentifiedChannel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<IdentifiedChannel>(), &IdentifiedChannel::ByteSizeLong,
            &IdentifiedChannel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_._cached_size_),
        false,
    },
    &IdentifiedChannel::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* IdentifiedChannel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 85, 2> IdentifiedChannel::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::IdentifiedChannel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IdentifiedChannel, _impl_.state_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.state_)}},
    // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(IdentifiedChannel, _impl_.ordering_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.ordering_)}},
    // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.counterparty_)}},
    // repeated string connection_hops = 4 [json_name = "connectionHops"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.connection_hops_)}},
    // string version = 5 [json_name = "version"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.version_)}},
    // string port_id = 6 [json_name = "portId"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.port_id_)}},
    // string channel_id = 7 [json_name = "channelId"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.channel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
    {PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
    {PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.ordering_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.counterparty_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string connection_hops = 4 [json_name = "connectionHops"];
    {PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.connection_hops_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string version = 5 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string port_id = 6 [json_name = "portId"];
    {PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.port_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string channel_id = 7 [json_name = "channelId"];
    {PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.channel_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Counterparty>()},
  }}, {{
    "\45\0\0\0\17\7\7\12"
    "ibc.core.channel.v1.IdentifiedChannel"
    "connection_hops"
    "version"
    "port_id"
    "channel_id"
  }},
};

PROTOBUF_NOINLINE void IdentifiedChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.IdentifiedChannel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.connection_hops_.Clear();
  _impl_.version_.ClearToEmpty();
  _impl_.port_id_.ClearToEmpty();
  _impl_.channel_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.counterparty_ != nullptr);
    _impl_.counterparty_->Clear();
  }
  ::memset(&_impl_.state_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ordering_) -
      reinterpret_cast<char*>(&_impl_.state_)) + sizeof(_impl_.ordering_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IdentifiedChannel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IdentifiedChannel& this_ = static_cast<const IdentifiedChannel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IdentifiedChannel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IdentifiedChannel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.IdentifiedChannel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
          if (this_._internal_state() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_state(), target);
          }

          // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
          if (this_._internal_ordering() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_ordering(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.counterparty_, this_._impl_.counterparty_->GetCachedSize(), target,
                stream);
          }

          // repeated string connection_hops = 4 [json_name = "connectionHops"];
          for (int i = 0, n = this_._internal_connection_hops_size(); i < n; ++i) {
            const auto& s = this_._internal_connection_hops().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.IdentifiedChannel.connection_hops");
            target = stream->WriteString(4, s, target);
          }

          // string version = 5 [json_name = "version"];
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.IdentifiedChannel.version");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string port_id = 6 [json_name = "portId"];
          if (!this_._internal_port_id().empty()) {
            const std::string& _s = this_._internal_port_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.IdentifiedChannel.port_id");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string channel_id = 7 [json_name = "channelId"];
          if (!this_._internal_channel_id().empty()) {
            const std::string& _s = this_._internal_channel_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.IdentifiedChannel.channel_id");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.IdentifiedChannel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IdentifiedChannel::ByteSizeLong(const MessageLite& base) {
          const IdentifiedChannel& this_ = static_cast<const IdentifiedChannel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IdentifiedChannel::ByteSizeLong() const {
          const IdentifiedChannel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.IdentifiedChannel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string connection_hops = 4 [json_name = "connectionHops"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_connection_hops().size());
              for (int i = 0, n = this_._internal_connection_hops().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_connection_hops().Get(i));
              }
            }
          }
           {
            // string version = 5 [json_name = "version"];
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // string port_id = 6 [json_name = "portId"];
            if (!this_._internal_port_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_port_id());
            }
            // string channel_id = 7 [json_name = "channelId"];
            if (!this_._internal_channel_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel_id());
            }
          }
           {
            // .ibc.core.channel.v1.Counterparty counterparty = 3 [json_name = "counterparty", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.counterparty_);
            }
          }
           {
            // .ibc.core.channel.v1.State state = 1 [json_name = "state"];
            if (this_._internal_state() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_state());
            }
            // .ibc.core.channel.v1.Order ordering = 2 [json_name = "ordering"];
            if (this_._internal_ordering() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_ordering());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IdentifiedChannel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IdentifiedChannel*>(&to_msg);
  auto& from = static_cast<const IdentifiedChannel&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.IdentifiedChannel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_connection_hops()->MergeFrom(from._internal_connection_hops());
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.counterparty_ != nullptr);
    if (_this->_impl_.counterparty_ == nullptr) {
      _this->_impl_.counterparty_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::core::channel::v1::Counterparty>(arena, *from._impl_.counterparty_);
    } else {
      _this->_impl_.counterparty_->MergeFrom(*from._impl_.counterparty_);
    }
  }
  if (from._internal_state() != 0) {
    _this->_impl_.state_ = from._impl_.state_;
  }
  if (from._internal_ordering() != 0) {
    _this->_impl_.ordering_ = from._impl_.ordering_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IdentifiedChannel::CopyFrom(const IdentifiedChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.IdentifiedChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IdentifiedChannel::InternalSwap(IdentifiedChannel* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.connection_hops_.InternalSwap(&other->_impl_.connection_hops_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, &other->_impl_.port_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, &other->_impl_.channel_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.ordering_)
      + sizeof(IdentifiedChannel::_impl_.ordering_)
      - PROTOBUF_FIELD_OFFSET(IdentifiedChannel, _impl_.counterparty_)>(
          reinterpret_cast<char*>(&_impl_.counterparty_),
          reinterpret_cast<char*>(&other->_impl_.counterparty_));
}

::google::protobuf::Metadata IdentifiedChannel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Counterparty::_Internal {
 public:
};

Counterparty::Counterparty(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.Counterparty)
}
inline PROTOBUF_NDEBUG_INLINE Counterparty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::Counterparty& from_msg)
      : port_id_(arena, from.port_id_),
        channel_id_(arena, from.channel_id_),
        _cached_size_{0} {}

Counterparty::Counterparty(
    ::google::protobuf::Arena* arena,
    const Counterparty& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Counterparty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.Counterparty)
}
inline PROTOBUF_NDEBUG_INLINE Counterparty::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : port_id_(arena),
        channel_id_(arena),
        _cached_size_{0} {}

inline void Counterparty::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Counterparty::~Counterparty() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.Counterparty)
  SharedDtor(*this);
}
inline void Counterparty::SharedDtor(MessageLite& self) {
  Counterparty& this_ = static_cast<Counterparty&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.port_id_.Destroy();
  this_._impl_.channel_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Counterparty::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Counterparty(arena);
}
constexpr auto Counterparty::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Counterparty),
                                            alignof(Counterparty));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Counterparty::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Counterparty_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Counterparty::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Counterparty>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Counterparty::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Counterparty>(), &Counterparty::ByteSizeLong,
            &Counterparty::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Counterparty, _impl_._cached_size_),
        false,
    },
    &Counterparty::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Counterparty::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> Counterparty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Counterparty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string channel_id = 2 [json_name = "channelId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Counterparty, _impl_.channel_id_)}},
    // string port_id = 1 [json_name = "portId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Counterparty, _impl_.port_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string port_id = 1 [json_name = "portId"];
    {PROTOBUF_FIELD_OFFSET(Counterparty, _impl_.port_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string channel_id = 2 [json_name = "channelId"];
    {PROTOBUF_FIELD_OFFSET(Counterparty, _impl_.channel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\7\12\0\0\0\0\0"
    "ibc.core.channel.v1.Counterparty"
    "port_id"
    "channel_id"
  }},
};

PROTOBUF_NOINLINE void Counterparty::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.Counterparty)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_id_.ClearToEmpty();
  _impl_.channel_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Counterparty::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Counterparty& this_ = static_cast<const Counterparty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Counterparty::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Counterparty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.Counterparty)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string port_id = 1 [json_name = "portId"];
          if (!this_._internal_port_id().empty()) {
            const std::string& _s = this_._internal_port_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Counterparty.port_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string channel_id = 2 [json_name = "channelId"];
          if (!this_._internal_channel_id().empty()) {
            const std::string& _s = this_._internal_channel_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Counterparty.channel_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.Counterparty)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Counterparty::ByteSizeLong(const MessageLite& base) {
          const Counterparty& this_ = static_cast<const Counterparty&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Counterparty::ByteSizeLong() const {
          const Counterparty& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.Counterparty)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string port_id = 1 [json_name = "portId"];
            if (!this_._internal_port_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_port_id());
            }
            // string channel_id = 2 [json_name = "channelId"];
            if (!this_._internal_channel_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Counterparty::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Counterparty*>(&to_msg);
  auto& from = static_cast<const Counterparty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.Counterparty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Counterparty::CopyFrom(const Counterparty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.Counterparty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Counterparty::InternalSwap(Counterparty* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, &other->_impl_.port_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, &other->_impl_.channel_id_, arena);
}

::google::protobuf::Metadata Counterparty::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Packet::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Packet>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Packet, _impl_._has_bits_);
};

void Packet::clear_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timeout_height_ != nullptr) _impl_.timeout_height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Packet::Packet(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.Packet)
}
inline PROTOBUF_NDEBUG_INLINE Packet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::Packet& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        source_port_(arena, from.source_port_),
        source_channel_(arena, from.source_channel_),
        destination_port_(arena, from.destination_port_),
        destination_channel_(arena, from.destination_channel_),
        data_(arena, from.data_) {}

Packet::Packet(
    ::google::protobuf::Arena* arena,
    const Packet& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Packet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timeout_height_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::core::client::v1::Height>(
                              arena, *from._impl_.timeout_height_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_),
           offsetof(Impl_, timeout_timestamp_) -
               offsetof(Impl_, sequence_) +
               sizeof(Impl_::timeout_timestamp_));

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.Packet)
}
inline PROTOBUF_NDEBUG_INLINE Packet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        source_port_(arena),
        source_channel_(arena),
        destination_port_(arena),
        destination_channel_(arena),
        data_(arena) {}

inline void Packet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timeout_height_),
           0,
           offsetof(Impl_, timeout_timestamp_) -
               offsetof(Impl_, timeout_height_) +
               sizeof(Impl_::timeout_timestamp_));
}
Packet::~Packet() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.Packet)
  SharedDtor(*this);
}
inline void Packet::SharedDtor(MessageLite& self) {
  Packet& this_ = static_cast<Packet&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.source_port_.Destroy();
  this_._impl_.source_channel_.Destroy();
  this_._impl_.destination_port_.Destroy();
  this_._impl_.destination_channel_.Destroy();
  this_._impl_.data_.Destroy();
  delete this_._impl_.timeout_height_;
  this_._impl_.~Impl_();
}

inline void* Packet::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Packet(arena);
}
constexpr auto Packet::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Packet),
                                            alignof(Packet));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Packet::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Packet_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Packet::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Packet>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Packet::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Packet>(), &Packet::ByteSizeLong,
            &Packet::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Packet, _impl_._cached_size_),
        false,
    },
    &Packet::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Packet::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 103, 2> Packet::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Packet, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Packet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timeout_timestamp = 8 [json_name = "timeoutTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Packet, _impl_.timeout_timestamp_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.timeout_timestamp_)}},
    // uint64 sequence = 1 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Packet, _impl_.sequence_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.sequence_)}},
    // string source_port = 2 [json_name = "sourcePort"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.source_port_)}},
    // string source_channel = 3 [json_name = "sourceChannel"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.source_channel_)}},
    // string destination_port = 4 [json_name = "destinationPort"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.destination_port_)}},
    // string destination_channel = 5 [json_name = "destinationChannel"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.destination_channel_)}},
    // bytes data = 6 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.data_)}},
    // .ibc.core.client.v1.Height timeout_height = 7 [json_name = "timeoutHeight", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(Packet, _impl_.timeout_height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 sequence = 1 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.sequence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string source_port = 2 [json_name = "sourcePort"];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.source_port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_channel = 3 [json_name = "sourceChannel"];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.source_channel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_port = 4 [json_name = "destinationPort"];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.destination_port_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string destination_channel = 5 [json_name = "destinationChannel"];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.destination_channel_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 6 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .ibc.core.client.v1.Height timeout_height = 7 [json_name = "timeoutHeight", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.timeout_height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 timeout_timestamp = 8 [json_name = "timeoutTimestamp"];
    {PROTOBUF_FIELD_OFFSET(Packet, _impl_.timeout_timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::core::client::v1::Height>()},
  }}, {{
    "\32\0\13\16\20\23\0\0\0\0\0\0\0\0\0\0"
    "ibc.core.channel.v1.Packet"
    "source_port"
    "source_channel"
    "destination_port"
    "destination_channel"
  }},
};

PROTOBUF_NOINLINE void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.Packet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_port_.ClearToEmpty();
  _impl_.source_channel_.ClearToEmpty();
  _impl_.destination_port_.ClearToEmpty();
  _impl_.destination_channel_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timeout_height_ != nullptr);
    _impl_.timeout_height_->Clear();
  }
  ::memset(&_impl_.sequence_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timeout_timestamp_) -
      reinterpret_cast<char*>(&_impl_.sequence_)) + sizeof(_impl_.timeout_timestamp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Packet::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Packet& this_ = static_cast<const Packet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Packet::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Packet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.Packet)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 sequence = 1 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_sequence(), target);
          }

          // string source_port = 2 [json_name = "sourcePort"];
          if (!this_._internal_source_port().empty()) {
            const std::string& _s = this_._internal_source_port();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Packet.source_port");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string source_channel = 3 [json_name = "sourceChannel"];
          if (!this_._internal_source_channel().empty()) {
            const std::string& _s = this_._internal_source_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Packet.source_channel");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string destination_port = 4 [json_name = "destinationPort"];
          if (!this_._internal_destination_port().empty()) {
            const std::string& _s = this_._internal_destination_port();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Packet.destination_port");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string destination_channel = 5 [json_name = "destinationChannel"];
          if (!this_._internal_destination_channel().empty()) {
            const std::string& _s = this_._internal_destination_channel();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Packet.destination_channel");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bytes data = 6 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.core.client.v1.Height timeout_height = 7 [json_name = "timeoutHeight", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.timeout_height_, this_._impl_.timeout_height_->GetCachedSize(), target,
                stream);
          }

          // uint64 timeout_timestamp = 8 [json_name = "timeoutTimestamp"];
          if (this_._internal_timeout_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                8, this_._internal_timeout_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.Packet)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Packet::ByteSizeLong(const MessageLite& base) {
          const Packet& this_ = static_cast<const Packet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Packet::ByteSizeLong() const {
          const Packet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.Packet)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string source_port = 2 [json_name = "sourcePort"];
            if (!this_._internal_source_port().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_port());
            }
            // string source_channel = 3 [json_name = "sourceChannel"];
            if (!this_._internal_source_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source_channel());
            }
            // string destination_port = 4 [json_name = "destinationPort"];
            if (!this_._internal_destination_port().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_port());
            }
            // string destination_channel = 5 [json_name = "destinationChannel"];
            if (!this_._internal_destination_channel().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_destination_channel());
            }
            // bytes data = 6 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
           {
            // .ibc.core.client.v1.Height timeout_height = 7 [json_name = "timeoutHeight", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timeout_height_);
            }
          }
           {
            // uint64 sequence = 1 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
            // uint64 timeout_timestamp = 8 [json_name = "timeoutTimestamp"];
            if (this_._internal_timeout_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timeout_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Packet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Packet*>(&to_msg);
  auto& from = static_cast<const Packet&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.Packet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_source_port().empty()) {
    _this->_internal_set_source_port(from._internal_source_port());
  }
  if (!from._internal_source_channel().empty()) {
    _this->_internal_set_source_channel(from._internal_source_channel());
  }
  if (!from._internal_destination_port().empty()) {
    _this->_internal_set_destination_port(from._internal_destination_port());
  }
  if (!from._internal_destination_channel().empty()) {
    _this->_internal_set_destination_channel(from._internal_destination_channel());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timeout_height_ != nullptr);
    if (_this->_impl_.timeout_height_ == nullptr) {
      _this->_impl_.timeout_height_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::core::client::v1::Height>(arena, *from._impl_.timeout_height_);
    } else {
      _this->_impl_.timeout_height_->MergeFrom(*from._impl_.timeout_height_);
    }
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  if (from._internal_timeout_timestamp() != 0) {
    _this->_impl_.timeout_timestamp_ = from._impl_.timeout_timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Packet::InternalSwap(Packet* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_port_, &other->_impl_.source_port_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_channel_, &other->_impl_.source_channel_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_port_, &other->_impl_.destination_port_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.destination_channel_, &other->_impl_.destination_channel_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Packet, _impl_.timeout_timestamp_)
      + sizeof(Packet::_impl_.timeout_timestamp_)
      - PROTOBUF_FIELD_OFFSET(Packet, _impl_.timeout_height_)>(
          reinterpret_cast<char*>(&_impl_.timeout_height_),
          reinterpret_cast<char*>(&other->_impl_.timeout_height_));
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketState::_Internal {
 public:
};

PacketState::PacketState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.PacketState)
}
inline PROTOBUF_NDEBUG_INLINE PacketState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::PacketState& from_msg)
      : port_id_(arena, from.port_id_),
        channel_id_(arena, from.channel_id_),
        data_(arena, from.data_),
        _cached_size_{0} {}

PacketState::PacketState(
    ::google::protobuf::Arena* arena,
    const PacketState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.sequence_ = from._impl_.sequence_;

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.PacketState)
}
inline PROTOBUF_NDEBUG_INLINE PacketState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : port_id_(arena),
        channel_id_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void PacketState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sequence_ = {};
}
PacketState::~PacketState() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.PacketState)
  SharedDtor(*this);
}
inline void PacketState::SharedDtor(MessageLite& self) {
  PacketState& this_ = static_cast<PacketState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.port_id_.Destroy();
  this_._impl_.channel_id_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketState(arena);
}
constexpr auto PacketState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketState),
                                            alignof(PacketState));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketState>(), &PacketState::ByteSizeLong,
            &PacketState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketState, _impl_._cached_size_),
        false,
    },
    &PacketState::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 57, 2> PacketState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 4 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PacketState, _impl_.data_)}},
    // string port_id = 1 [json_name = "portId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PacketState, _impl_.port_id_)}},
    // string channel_id = 2 [json_name = "channelId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PacketState, _impl_.channel_id_)}},
    // uint64 sequence = 3 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PacketState, _impl_.sequence_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PacketState, _impl_.sequence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string port_id = 1 [json_name = "portId"];
    {PROTOBUF_FIELD_OFFSET(PacketState, _impl_.port_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string channel_id = 2 [json_name = "channelId"];
    {PROTOBUF_FIELD_OFFSET(PacketState, _impl_.channel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 sequence = 3 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(PacketState, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes data = 4 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(PacketState, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\7\12\0\0\0\0\0"
    "ibc.core.channel.v1.PacketState"
    "port_id"
    "channel_id"
  }},
};

PROTOBUF_NOINLINE void PacketState::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.PacketState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_id_.ClearToEmpty();
  _impl_.channel_id_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.sequence_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketState& this_ = static_cast<const PacketState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.PacketState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string port_id = 1 [json_name = "portId"];
          if (!this_._internal_port_id().empty()) {
            const std::string& _s = this_._internal_port_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.PacketState.port_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string channel_id = 2 [json_name = "channelId"];
          if (!this_._internal_channel_id().empty()) {
            const std::string& _s = this_._internal_channel_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.PacketState.channel_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 sequence = 3 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_sequence(), target);
          }

          // bytes data = 4 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.PacketState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketState::ByteSizeLong(const MessageLite& base) {
          const PacketState& this_ = static_cast<const PacketState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketState::ByteSizeLong() const {
          const PacketState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.PacketState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string port_id = 1 [json_name = "portId"];
            if (!this_._internal_port_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_port_id());
            }
            // string channel_id = 2 [json_name = "channelId"];
            if (!this_._internal_channel_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel_id());
            }
            // bytes data = 4 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // uint64 sequence = 3 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketState*>(&to_msg);
  auto& from = static_cast<const PacketState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.PacketState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketState::CopyFrom(const PacketState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.PacketState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketState::InternalSwap(PacketState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, &other->_impl_.port_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, &other->_impl_.channel_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
        swap(_impl_.sequence_, other->_impl_.sequence_);
}

::google::protobuf::Metadata PacketState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketId::_Internal {
 public:
};

PacketId::PacketId(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.PacketId)
}
inline PROTOBUF_NDEBUG_INLINE PacketId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::PacketId& from_msg)
      : port_id_(arena, from.port_id_),
        channel_id_(arena, from.channel_id_),
        _cached_size_{0} {}

PacketId::PacketId(
    ::google::protobuf::Arena* arena,
    const PacketId& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.sequence_ = from._impl_.sequence_;

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.PacketId)
}
inline PROTOBUF_NDEBUG_INLINE PacketId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : port_id_(arena),
        channel_id_(arena),
        _cached_size_{0} {}

inline void PacketId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sequence_ = {};
}
PacketId::~PacketId() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.PacketId)
  SharedDtor(*this);
}
inline void PacketId::SharedDtor(MessageLite& self) {
  PacketId& this_ = static_cast<PacketId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.port_id_.Destroy();
  this_._impl_.channel_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketId::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketId(arena);
}
constexpr auto PacketId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketId),
                                            alignof(PacketId));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketId::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketId_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketId::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketId::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketId>(), &PacketId::ByteSizeLong,
            &PacketId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketId, _impl_._cached_size_),
        false,
    },
    &PacketId::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 54, 2> PacketId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string port_id = 1 [json_name = "portId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PacketId, _impl_.port_id_)}},
    // string channel_id = 2 [json_name = "channelId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PacketId, _impl_.channel_id_)}},
    // uint64 sequence = 3 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PacketId, _impl_.sequence_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PacketId, _impl_.sequence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string port_id = 1 [json_name = "portId"];
    {PROTOBUF_FIELD_OFFSET(PacketId, _impl_.port_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string channel_id = 2 [json_name = "channelId"];
    {PROTOBUF_FIELD_OFFSET(PacketId, _impl_.channel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 sequence = 3 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(PacketId, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\34\7\12\0\0\0\0\0"
    "ibc.core.channel.v1.PacketId"
    "port_id"
    "channel_id"
  }},
};

PROTOBUF_NOINLINE void PacketId::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.PacketId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_id_.ClearToEmpty();
  _impl_.channel_id_.ClearToEmpty();
  _impl_.sequence_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketId::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketId& this_ = static_cast<const PacketId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketId::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.PacketId)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string port_id = 1 [json_name = "portId"];
          if (!this_._internal_port_id().empty()) {
            const std::string& _s = this_._internal_port_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.PacketId.port_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string channel_id = 2 [json_name = "channelId"];
          if (!this_._internal_channel_id().empty()) {
            const std::string& _s = this_._internal_channel_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.PacketId.channel_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 sequence = 3 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_sequence(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.PacketId)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketId::ByteSizeLong(const MessageLite& base) {
          const PacketId& this_ = static_cast<const PacketId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketId::ByteSizeLong() const {
          const PacketId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.PacketId)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string port_id = 1 [json_name = "portId"];
            if (!this_._internal_port_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_port_id());
            }
            // string channel_id = 2 [json_name = "channelId"];
            if (!this_._internal_channel_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel_id());
            }
            // uint64 sequence = 3 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketId*>(&to_msg);
  auto& from = static_cast<const PacketId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.PacketId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketId::CopyFrom(const PacketId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.PacketId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketId::InternalSwap(PacketId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, &other->_impl_.port_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, &other->_impl_.channel_id_, arena);
        swap(_impl_.sequence_, other->_impl_.sequence_);
}

::google::protobuf::Metadata PacketId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Acknowledgement::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::Acknowledgement, _impl_._oneof_case_);
};

Acknowledgement::Acknowledgement(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.Acknowledgement)
}
inline PROTOBUF_NDEBUG_INLINE Acknowledgement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::Acknowledgement& from_msg)
      : response_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Acknowledgement::Acknowledgement(
    ::google::protobuf::Arena* arena,
    const Acknowledgement& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Acknowledgement* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (response_case()) {
    case RESPONSE_NOT_SET:
      break;
      case kResult:
        new (&_impl_.response_.result_) decltype(_impl_.response_.result_){arena, from._impl_.response_.result_};
        break;
      case kError:
        new (&_impl_.response_.error_) decltype(_impl_.response_.error_){arena, from._impl_.response_.error_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.Acknowledgement)
}
inline PROTOBUF_NDEBUG_INLINE Acknowledgement::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : response_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Acknowledgement::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Acknowledgement::~Acknowledgement() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.Acknowledgement)
  SharedDtor(*this);
}
inline void Acknowledgement::SharedDtor(MessageLite& self) {
  Acknowledgement& this_ = static_cast<Acknowledgement&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_response()) {
    this_.clear_response();
  }
  this_._impl_.~Impl_();
}

void Acknowledgement::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:ibc.core.channel.v1.Acknowledgement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (response_case()) {
    case kResult: {
      _impl_.response_.result_.Destroy();
      break;
    }
    case kError: {
      _impl_.response_.error_.Destroy();
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_NOT_SET;
}


inline void* Acknowledgement::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Acknowledgement(arena);
}
constexpr auto Acknowledgement::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Acknowledgement),
                                            alignof(Acknowledgement));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Acknowledgement::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Acknowledgement_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Acknowledgement::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Acknowledgement>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Acknowledgement::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Acknowledgement>(), &Acknowledgement::ByteSizeLong,
            &Acknowledgement::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Acknowledgement, _impl_._cached_size_),
        false,
    },
    &Acknowledgement::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Acknowledgement::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 49, 2> Acknowledgement::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    22, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4291821567,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Acknowledgement>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes result = 21 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(Acknowledgement, _impl_.response_.result_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kBytes | ::_fl::kRepAString)},
    // string error = 22 [json_name = "error"];
    {PROTOBUF_FIELD_OFFSET(Acknowledgement, _impl_.response_.error_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\0\5\0\0\0\0\0"
    "ibc.core.channel.v1.Acknowledgement"
    "error"
  }},
};

PROTOBUF_NOINLINE void Acknowledgement::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.Acknowledgement)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Acknowledgement::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Acknowledgement& this_ = static_cast<const Acknowledgement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Acknowledgement::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Acknowledgement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.Acknowledgement)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.response_case()) {
            case kResult: {
              const std::string& _s = this_._internal_result();
              target = stream->WriteBytesMaybeAliased(21, _s, target);
              break;
            }
            case kError: {
              const std::string& _s = this_._internal_error();
              ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                  _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.Acknowledgement.error");
              target = stream->WriteStringMaybeAliased(22, _s, target);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.Acknowledgement)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Acknowledgement::ByteSizeLong(const MessageLite& base) {
          const Acknowledgement& this_ = static_cast<const Acknowledgement&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Acknowledgement::ByteSizeLong() const {
          const Acknowledgement& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.Acknowledgement)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.response_case()) {
            // bytes result = 21 [json_name = "result"];
            case kResult: {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_result());
              break;
            }
            // string error = 22 [json_name = "error"];
            case kError: {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error());
              break;
            }
            case RESPONSE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Acknowledgement::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Acknowledgement*>(&to_msg);
  auto& from = static_cast<const Acknowledgement&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.Acknowledgement)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_response();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kResult: {
        if (oneof_needs_init) {
          _this->_impl_.response_.result_.InitDefault();
        }
        _this->_impl_.response_.result_.Set(from._internal_result(), arena);
        break;
      }
      case kError: {
        if (oneof_needs_init) {
          _this->_impl_.response_.error_.InitDefault();
        }
        _this->_impl_.response_.error_.Set(from._internal_error(), arena);
        break;
      }
      case RESPONSE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Acknowledgement::CopyFrom(const Acknowledgement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.Acknowledgement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Acknowledgement::InternalSwap(Acknowledgement* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.response_, other->_impl_.response_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Acknowledgement::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Timeout::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Timeout>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Timeout, _impl_._has_bits_);
};

void Timeout::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.height_ != nullptr) _impl_.height_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Timeout::Timeout(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.Timeout)
}
inline PROTOBUF_NDEBUG_INLINE Timeout::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::Timeout& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Timeout::Timeout(
    ::google::protobuf::Arena* arena,
    const Timeout& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Timeout* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.height_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::core::client::v1::Height>(
                              arena, *from._impl_.height_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.Timeout)
}
inline PROTOBUF_NDEBUG_INLINE Timeout::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Timeout::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::timestamp_));
}
Timeout::~Timeout() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.Timeout)
  SharedDtor(*this);
}
inline void Timeout::SharedDtor(MessageLite& self) {
  Timeout& this_ = static_cast<Timeout&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.height_;
  this_._impl_.~Impl_();
}

inline void* Timeout::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Timeout(arena);
}
constexpr auto Timeout::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Timeout),
                                            alignof(Timeout));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Timeout::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Timeout_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Timeout::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Timeout>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Timeout::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Timeout>(), &Timeout::ByteSizeLong,
            &Timeout::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Timeout, _impl_._cached_size_),
        false,
    },
    &Timeout::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Timeout::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Timeout::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Timeout, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Timeout>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Timeout, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Timeout, _impl_.timestamp_)}},
    // .ibc.core.client.v1.Height height = 1 [json_name = "height", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Timeout, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ibc.core.client.v1.Height height = 1 [json_name = "height", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Timeout, _impl_.height_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Timeout, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::core::client::v1::Height>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Timeout::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.Timeout)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.height_ != nullptr);
    _impl_.height_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Timeout::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Timeout& this_ = static_cast<const Timeout&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Timeout::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Timeout& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.Timeout)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.core.client.v1.Height height = 1 [json_name = "height", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.height_, this_._impl_.height_->GetCachedSize(), target,
                stream);
          }

          // uint64 timestamp = 2 [json_name = "timestamp"];
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.Timeout)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Timeout::ByteSizeLong(const MessageLite& base) {
          const Timeout& this_ = static_cast<const Timeout&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Timeout::ByteSizeLong() const {
          const Timeout& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.Timeout)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .ibc.core.client.v1.Height height = 1 [json_name = "height", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.height_);
            }
          }
           {
            // uint64 timestamp = 2 [json_name = "timestamp"];
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Timeout::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Timeout*>(&to_msg);
  auto& from = static_cast<const Timeout&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.Timeout)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.height_ != nullptr);
    if (_this->_impl_.height_ == nullptr) {
      _this->_impl_.height_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::core::client::v1::Height>(arena, *from._impl_.height_);
    } else {
      _this->_impl_.height_->MergeFrom(*from._impl_.height_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Timeout::CopyFrom(const Timeout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.Timeout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Timeout::InternalSwap(Timeout* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Timeout, _impl_.timestamp_)
      + sizeof(Timeout::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Timeout, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata Timeout::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace channel
}  // namespace core
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
