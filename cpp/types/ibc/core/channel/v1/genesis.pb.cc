// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/channel/v1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "ibc/core/channel/v1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ibc {
namespace core {
namespace channel {
namespace v1 {

inline constexpr PacketSequence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : port_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sequence_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketSequence::PacketSequence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketSequenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketSequenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketSequenceDefaultTypeInternal() {}
  union {
    PacketSequence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketSequenceDefaultTypeInternal _PacketSequence_default_instance_;

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channels_{},
        acknowledgements_{},
        commitments_{},
        receipts_{},
        send_sequences_{},
        recv_sequences_{},
        ack_sequences_{},
        next_channel_sequence_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1
}  // namespace channel
}  // namespace core
}  // namespace ibc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.channels_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.acknowledgements_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.commitments_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.receipts_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.send_sequences_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.recv_sequences_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.ack_sequences_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::GenesisState, _impl_.next_channel_sequence_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketSequence, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketSequence, _impl_.port_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketSequence, _impl_.channel_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::core::channel::v1::PacketSequence, _impl_.sequence_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ibc::core::channel::v1::GenesisState)},
        {16, -1, -1, sizeof(::ibc::core::channel::v1::PacketSequence)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::core::channel::v1::_GenesisState_default_instance_._instance,
    &::ibc::core::channel::v1::_PacketSequence_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!ibc/core/channel/v1/genesis.proto\022\023ibc"
    ".core.channel.v1\032\024gogoproto/gogo.proto\032!"
    "ibc/core/channel/v1/channel.proto\"\367\004\n\014Ge"
    "nesisState\022]\n\010channels\030\001 \003(\0132&.ibc.core."
    "channel.v1.IdentifiedChannelB\031\310\336\037\000\372\336\037\021Id"
    "entifiedChannelR\010channels\022R\n\020acknowledge"
    "ments\030\002 \003(\0132 .ibc.core.channel.v1.Packet"
    "StateB\004\310\336\037\000R\020acknowledgements\022H\n\013commitm"
    "ents\030\003 \003(\0132 .ibc.core.channel.v1.PacketS"
    "tateB\004\310\336\037\000R\013commitments\022B\n\010receipts\030\004 \003("
    "\0132 .ibc.core.channel.v1.PacketStateB\004\310\336\037"
    "\000R\010receipts\022P\n\016send_sequences\030\005 \003(\0132#.ib"
    "c.core.channel.v1.PacketSequenceB\004\310\336\037\000R\r"
    "sendSequences\022P\n\016recv_sequences\030\006 \003(\0132#."
    "ibc.core.channel.v1.PacketSequenceB\004\310\336\037\000"
    "R\rrecvSequences\022N\n\rack_sequences\030\007 \003(\0132#"
    ".ibc.core.channel.v1.PacketSequenceB\004\310\336\037"
    "\000R\014ackSequences\0222\n\025next_channel_sequence"
    "\030\010 \001(\004R\023nextChannelSequence\"d\n\016PacketSeq"
    "uence\022\027\n\007port_id\030\001 \001(\tR\006portId\022\035\n\nchanne"
    "l_id\030\002 \001(\tR\tchannelId\022\032\n\010sequence\030\003 \001(\004R"
    "\010sequenceB<Z:github.com/cosmos/ibc-go/v1"
    "0/modules/core/04-channel/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto_deps[2] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto = {
    false,
    false,
    919,
    descriptor_table_protodef_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto,
    "ibc/core/channel/v1/genesis.proto",
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto_once,
    descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto,
    file_level_service_descriptors_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto,
};
namespace ibc {
namespace core {
namespace channel {
namespace v1 {
// ===================================================================

class GenesisState::_Internal {
 public:
};

void GenesisState::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_.Clear();
}
void GenesisState::clear_acknowledgements() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acknowledgements_.Clear();
}
void GenesisState::clear_commitments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitments_.Clear();
}
void GenesisState::clear_receipts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receipts_.Clear();
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::GenesisState& from_msg)
      : channels_{visibility, arena, from.channels_},
        acknowledgements_{visibility, arena, from.acknowledgements_},
        commitments_{visibility, arena, from.commitments_},
        receipts_{visibility, arena, from.receipts_},
        send_sequences_{visibility, arena, from.send_sequences_},
        recv_sequences_{visibility, arena, from.recv_sequences_},
        ack_sequences_{visibility, arena, from.ack_sequences_},
        _cached_size_{0} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.next_channel_sequence_ = from._impl_.next_channel_sequence_;

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : channels_{visibility, arena},
        acknowledgements_{visibility, arena},
        commitments_{visibility, arena},
        receipts_{visibility, arena},
        send_sequences_{visibility, arena},
        recv_sequences_{visibility, arena},
        ack_sequences_{visibility, arena},
        _cached_size_{0} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.next_channel_sequence_ = {};
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.channels_) +
          decltype(GenesisState::_impl_.channels_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.acknowledgements_) +
          decltype(GenesisState::_impl_.acknowledgements_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.commitments_) +
          decltype(GenesisState::_impl_.commitments_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.receipts_) +
          decltype(GenesisState::_impl_.receipts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.send_sequences_) +
          decltype(GenesisState::_impl_.send_sequences_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.recv_sequences_) +
          decltype(GenesisState::_impl_.recv_sequences_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.ack_sequences_) +
          decltype(GenesisState::_impl_.ack_sequences_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 7, 0, 2> GenesisState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 next_channel_sequence = 8 [json_name = "nextChannelSequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GenesisState, _impl_.next_channel_sequence_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.next_channel_sequence_)}},
    // repeated .ibc.core.channel.v1.IdentifiedChannel channels = 1 [json_name = "channels", (.gogoproto.nullable) = false, (.gogoproto.casttype) = "IdentifiedChannel"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.channels_)}},
    // repeated .ibc.core.channel.v1.PacketState acknowledgements = 2 [json_name = "acknowledgements", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.acknowledgements_)}},
    // repeated .ibc.core.channel.v1.PacketState commitments = 3 [json_name = "commitments", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.commitments_)}},
    // repeated .ibc.core.channel.v1.PacketState receipts = 4 [json_name = "receipts", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.receipts_)}},
    // repeated .ibc.core.channel.v1.PacketSequence send_sequences = 5 [json_name = "sendSequences", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 4, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.send_sequences_)}},
    // repeated .ibc.core.channel.v1.PacketSequence recv_sequences = 6 [json_name = "recvSequences", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 5, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.recv_sequences_)}},
    // repeated .ibc.core.channel.v1.PacketSequence ack_sequences = 7 [json_name = "ackSequences", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 6, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.ack_sequences_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ibc.core.channel.v1.IdentifiedChannel channels = 1 [json_name = "channels", (.gogoproto.nullable) = false, (.gogoproto.casttype) = "IdentifiedChannel"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.channels_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ibc.core.channel.v1.PacketState acknowledgements = 2 [json_name = "acknowledgements", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.acknowledgements_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ibc.core.channel.v1.PacketState commitments = 3 [json_name = "commitments", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.commitments_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ibc.core.channel.v1.PacketState receipts = 4 [json_name = "receipts", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.receipts_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ibc.core.channel.v1.PacketSequence send_sequences = 5 [json_name = "sendSequences", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.send_sequences_), 0, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ibc.core.channel.v1.PacketSequence recv_sequences = 6 [json_name = "recvSequences", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.recv_sequences_), 0, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .ibc.core.channel.v1.PacketSequence ack_sequences = 7 [json_name = "ackSequences", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.ack_sequences_), 0, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 next_channel_sequence = 8 [json_name = "nextChannelSequence"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.next_channel_sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::IdentifiedChannel>()},
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketState>()},
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketState>()},
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketState>()},
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketSequence>()},
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketSequence>()},
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketSequence>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  _impl_.acknowledgements_.Clear();
  _impl_.commitments_.Clear();
  _impl_.receipts_.Clear();
  _impl_.send_sequences_.Clear();
  _impl_.recv_sequences_.Clear();
  _impl_.ack_sequences_.Clear();
  _impl_.next_channel_sequence_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .ibc.core.channel.v1.IdentifiedChannel channels = 1 [json_name = "channels", (.gogoproto.nullable) = false, (.gogoproto.casttype) = "IdentifiedChannel"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_channels_size());
               i < n; i++) {
            const auto& repfield = this_._internal_channels().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .ibc.core.channel.v1.PacketState acknowledgements = 2 [json_name = "acknowledgements", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_acknowledgements_size());
               i < n; i++) {
            const auto& repfield = this_._internal_acknowledgements().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .ibc.core.channel.v1.PacketState commitments = 3 [json_name = "commitments", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_commitments_size());
               i < n; i++) {
            const auto& repfield = this_._internal_commitments().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .ibc.core.channel.v1.PacketState receipts = 4 [json_name = "receipts", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_receipts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_receipts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .ibc.core.channel.v1.PacketSequence send_sequences = 5 [json_name = "sendSequences", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_send_sequences_size());
               i < n; i++) {
            const auto& repfield = this_._internal_send_sequences().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    5, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .ibc.core.channel.v1.PacketSequence recv_sequences = 6 [json_name = "recvSequences", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_recv_sequences_size());
               i < n; i++) {
            const auto& repfield = this_._internal_recv_sequences().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .ibc.core.channel.v1.PacketSequence ack_sequences = 7 [json_name = "ackSequences", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_ack_sequences_size());
               i < n; i++) {
            const auto& repfield = this_._internal_ack_sequences().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 next_channel_sequence = 8 [json_name = "nextChannelSequence"];
          if (this_._internal_next_channel_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                8, this_._internal_next_channel_sequence(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ibc.core.channel.v1.IdentifiedChannel channels = 1 [json_name = "channels", (.gogoproto.nullable) = false, (.gogoproto.casttype) = "IdentifiedChannel"];
            {
              total_size += 1UL * this_._internal_channels_size();
              for (const auto& msg : this_._internal_channels()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .ibc.core.channel.v1.PacketState acknowledgements = 2 [json_name = "acknowledgements", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_acknowledgements_size();
              for (const auto& msg : this_._internal_acknowledgements()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .ibc.core.channel.v1.PacketState commitments = 3 [json_name = "commitments", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_commitments_size();
              for (const auto& msg : this_._internal_commitments()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .ibc.core.channel.v1.PacketState receipts = 4 [json_name = "receipts", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_receipts_size();
              for (const auto& msg : this_._internal_receipts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .ibc.core.channel.v1.PacketSequence send_sequences = 5 [json_name = "sendSequences", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_send_sequences_size();
              for (const auto& msg : this_._internal_send_sequences()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .ibc.core.channel.v1.PacketSequence recv_sequences = 6 [json_name = "recvSequences", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_recv_sequences_size();
              for (const auto& msg : this_._internal_recv_sequences()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .ibc.core.channel.v1.PacketSequence ack_sequences = 7 [json_name = "ackSequences", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_ack_sequences_size();
              for (const auto& msg : this_._internal_ack_sequences()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 next_channel_sequence = 8 [json_name = "nextChannelSequence"];
            if (this_._internal_next_channel_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_next_channel_sequence());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(
      from._internal_channels());
  _this->_internal_mutable_acknowledgements()->MergeFrom(
      from._internal_acknowledgements());
  _this->_internal_mutable_commitments()->MergeFrom(
      from._internal_commitments());
  _this->_internal_mutable_receipts()->MergeFrom(
      from._internal_receipts());
  _this->_internal_mutable_send_sequences()->MergeFrom(
      from._internal_send_sequences());
  _this->_internal_mutable_recv_sequences()->MergeFrom(
      from._internal_recv_sequences());
  _this->_internal_mutable_ack_sequences()->MergeFrom(
      from._internal_ack_sequences());
  if (from._internal_next_channel_sequence() != 0) {
    _this->_impl_.next_channel_sequence_ = from._impl_.next_channel_sequence_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  _impl_.acknowledgements_.InternalSwap(&other->_impl_.acknowledgements_);
  _impl_.commitments_.InternalSwap(&other->_impl_.commitments_);
  _impl_.receipts_.InternalSwap(&other->_impl_.receipts_);
  _impl_.send_sequences_.InternalSwap(&other->_impl_.send_sequences_);
  _impl_.recv_sequences_.InternalSwap(&other->_impl_.recv_sequences_);
  _impl_.ack_sequences_.InternalSwap(&other->_impl_.ack_sequences_);
        swap(_impl_.next_channel_sequence_, other->_impl_.next_channel_sequence_);
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketSequence::_Internal {
 public:
};

PacketSequence::PacketSequence(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.core.channel.v1.PacketSequence)
}
inline PROTOBUF_NDEBUG_INLINE PacketSequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::core::channel::v1::PacketSequence& from_msg)
      : port_id_(arena, from.port_id_),
        channel_id_(arena, from.channel_id_),
        _cached_size_{0} {}

PacketSequence::PacketSequence(
    ::google::protobuf::Arena* arena,
    const PacketSequence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketSequence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.sequence_ = from._impl_.sequence_;

  // @@protoc_insertion_point(copy_constructor:ibc.core.channel.v1.PacketSequence)
}
inline PROTOBUF_NDEBUG_INLINE PacketSequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : port_id_(arena),
        channel_id_(arena),
        _cached_size_{0} {}

inline void PacketSequence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sequence_ = {};
}
PacketSequence::~PacketSequence() {
  // @@protoc_insertion_point(destructor:ibc.core.channel.v1.PacketSequence)
  SharedDtor(*this);
}
inline void PacketSequence::SharedDtor(MessageLite& self) {
  PacketSequence& this_ = static_cast<PacketSequence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.port_id_.Destroy();
  this_._impl_.channel_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketSequence::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketSequence(arena);
}
constexpr auto PacketSequence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketSequence),
                                            alignof(PacketSequence));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketSequence::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketSequence_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketSequence::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketSequence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketSequence::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketSequence>(), &PacketSequence::ByteSizeLong,
            &PacketSequence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketSequence, _impl_._cached_size_),
        false,
    },
    &PacketSequence::kDescriptorMethods,
    &descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketSequence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 60, 2> PacketSequence::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::core::channel::v1::PacketSequence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string port_id = 1 [json_name = "portId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PacketSequence, _impl_.port_id_)}},
    // string channel_id = 2 [json_name = "channelId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PacketSequence, _impl_.channel_id_)}},
    // uint64 sequence = 3 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PacketSequence, _impl_.sequence_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PacketSequence, _impl_.sequence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string port_id = 1 [json_name = "portId"];
    {PROTOBUF_FIELD_OFFSET(PacketSequence, _impl_.port_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string channel_id = 2 [json_name = "channelId"];
    {PROTOBUF_FIELD_OFFSET(PacketSequence, _impl_.channel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 sequence = 3 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(PacketSequence, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\42\7\12\0\0\0\0\0"
    "ibc.core.channel.v1.PacketSequence"
    "port_id"
    "channel_id"
  }},
};

PROTOBUF_NOINLINE void PacketSequence::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.core.channel.v1.PacketSequence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.port_id_.ClearToEmpty();
  _impl_.channel_id_.ClearToEmpty();
  _impl_.sequence_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketSequence::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketSequence& this_ = static_cast<const PacketSequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketSequence::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketSequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.core.channel.v1.PacketSequence)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string port_id = 1 [json_name = "portId"];
          if (!this_._internal_port_id().empty()) {
            const std::string& _s = this_._internal_port_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.PacketSequence.port_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string channel_id = 2 [json_name = "channelId"];
          if (!this_._internal_channel_id().empty()) {
            const std::string& _s = this_._internal_channel_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.core.channel.v1.PacketSequence.channel_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 sequence = 3 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_sequence(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.core.channel.v1.PacketSequence)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketSequence::ByteSizeLong(const MessageLite& base) {
          const PacketSequence& this_ = static_cast<const PacketSequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketSequence::ByteSizeLong() const {
          const PacketSequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.core.channel.v1.PacketSequence)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string port_id = 1 [json_name = "portId"];
            if (!this_._internal_port_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_port_id());
            }
            // string channel_id = 2 [json_name = "channelId"];
            if (!this_._internal_channel_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_channel_id());
            }
            // uint64 sequence = 3 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketSequence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketSequence*>(&to_msg);
  auto& from = static_cast<const PacketSequence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.core.channel.v1.PacketSequence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_port_id().empty()) {
    _this->_internal_set_port_id(from._internal_port_id());
  }
  if (!from._internal_channel_id().empty()) {
    _this->_internal_set_channel_id(from._internal_channel_id());
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketSequence::CopyFrom(const PacketSequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.core.channel.v1.PacketSequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketSequence::InternalSwap(PacketSequence* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.port_id_, &other->_impl_.port_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_id_, &other->_impl_.channel_id_, arena);
        swap(_impl_.sequence_, other->_impl_.sequence_);
}

::google::protobuf::Metadata PacketSequence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace channel
}  // namespace core
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ibc_2fcore_2fchannel_2fv1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
