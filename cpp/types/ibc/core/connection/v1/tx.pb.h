// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/connection/v1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2fcore_2fconnection_2fv1_2ftx_2eproto_2epb_2eh
#define ibc_2fcore_2fconnection_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "google/protobuf/any.pb.h"
#include "ibc/core/client/v1/client.pb.h"
#include "ibc/core/connection/v1/connection.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
namespace ibc {
namespace core {
namespace connection {
namespace v1 {
class MsgConnectionOpenAck;
struct MsgConnectionOpenAckDefaultTypeInternal;
extern MsgConnectionOpenAckDefaultTypeInternal _MsgConnectionOpenAck_default_instance_;
class MsgConnectionOpenAckResponse;
struct MsgConnectionOpenAckResponseDefaultTypeInternal;
extern MsgConnectionOpenAckResponseDefaultTypeInternal _MsgConnectionOpenAckResponse_default_instance_;
class MsgConnectionOpenConfirm;
struct MsgConnectionOpenConfirmDefaultTypeInternal;
extern MsgConnectionOpenConfirmDefaultTypeInternal _MsgConnectionOpenConfirm_default_instance_;
class MsgConnectionOpenConfirmResponse;
struct MsgConnectionOpenConfirmResponseDefaultTypeInternal;
extern MsgConnectionOpenConfirmResponseDefaultTypeInternal _MsgConnectionOpenConfirmResponse_default_instance_;
class MsgConnectionOpenInit;
struct MsgConnectionOpenInitDefaultTypeInternal;
extern MsgConnectionOpenInitDefaultTypeInternal _MsgConnectionOpenInit_default_instance_;
class MsgConnectionOpenInitResponse;
struct MsgConnectionOpenInitResponseDefaultTypeInternal;
extern MsgConnectionOpenInitResponseDefaultTypeInternal _MsgConnectionOpenInitResponse_default_instance_;
class MsgConnectionOpenTry;
struct MsgConnectionOpenTryDefaultTypeInternal;
extern MsgConnectionOpenTryDefaultTypeInternal _MsgConnectionOpenTry_default_instance_;
class MsgConnectionOpenTryResponse;
struct MsgConnectionOpenTryResponseDefaultTypeInternal;
extern MsgConnectionOpenTryResponseDefaultTypeInternal _MsgConnectionOpenTryResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace connection
}  // namespace core
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace core {
namespace connection {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenTryResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenTryResponse) */ {
 public:
  inline MsgConnectionOpenTryResponse() : MsgConnectionOpenTryResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenTryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenTryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenTryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenTryResponse(const MsgConnectionOpenTryResponse& from) : MsgConnectionOpenTryResponse(nullptr, from) {}
  inline MsgConnectionOpenTryResponse(MsgConnectionOpenTryResponse&& from) noexcept
      : MsgConnectionOpenTryResponse(nullptr, std::move(from)) {}
  inline MsgConnectionOpenTryResponse& operator=(const MsgConnectionOpenTryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenTryResponse& operator=(MsgConnectionOpenTryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenTryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenTryResponse* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenTryResponse*>(
        &_MsgConnectionOpenTryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgConnectionOpenTryResponse& a, MsgConnectionOpenTryResponse& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenTryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenTryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenTryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgConnectionOpenTryResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgConnectionOpenTryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgConnectionOpenTryResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenTryResponse"; }

 protected:
  explicit MsgConnectionOpenTryResponse(::google::protobuf::Arena* arena);
  MsgConnectionOpenTryResponse(::google::protobuf::Arena* arena, const MsgConnectionOpenTryResponse& from);
  MsgConnectionOpenTryResponse(::google::protobuf::Arena* arena, MsgConnectionOpenTryResponse&& from) noexcept
      : MsgConnectionOpenTryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenTryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenTryResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenInitResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenInitResponse) */ {
 public:
  inline MsgConnectionOpenInitResponse() : MsgConnectionOpenInitResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenInitResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenInitResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenInitResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenInitResponse(const MsgConnectionOpenInitResponse& from) : MsgConnectionOpenInitResponse(nullptr, from) {}
  inline MsgConnectionOpenInitResponse(MsgConnectionOpenInitResponse&& from) noexcept
      : MsgConnectionOpenInitResponse(nullptr, std::move(from)) {}
  inline MsgConnectionOpenInitResponse& operator=(const MsgConnectionOpenInitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenInitResponse& operator=(MsgConnectionOpenInitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenInitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenInitResponse* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenInitResponse*>(
        &_MsgConnectionOpenInitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgConnectionOpenInitResponse& a, MsgConnectionOpenInitResponse& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenInitResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenInitResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenInitResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgConnectionOpenInitResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgConnectionOpenInitResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgConnectionOpenInitResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenInitResponse"; }

 protected:
  explicit MsgConnectionOpenInitResponse(::google::protobuf::Arena* arena);
  MsgConnectionOpenInitResponse(::google::protobuf::Arena* arena, const MsgConnectionOpenInitResponse& from);
  MsgConnectionOpenInitResponse(::google::protobuf::Arena* arena, MsgConnectionOpenInitResponse&& from) noexcept
      : MsgConnectionOpenInitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenInitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenInitResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenConfirmResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenConfirmResponse) */ {
 public:
  inline MsgConnectionOpenConfirmResponse() : MsgConnectionOpenConfirmResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenConfirmResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenConfirmResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenConfirmResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenConfirmResponse(const MsgConnectionOpenConfirmResponse& from) : MsgConnectionOpenConfirmResponse(nullptr, from) {}
  inline MsgConnectionOpenConfirmResponse(MsgConnectionOpenConfirmResponse&& from) noexcept
      : MsgConnectionOpenConfirmResponse(nullptr, std::move(from)) {}
  inline MsgConnectionOpenConfirmResponse& operator=(const MsgConnectionOpenConfirmResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenConfirmResponse& operator=(MsgConnectionOpenConfirmResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenConfirmResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenConfirmResponse* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenConfirmResponse*>(
        &_MsgConnectionOpenConfirmResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MsgConnectionOpenConfirmResponse& a, MsgConnectionOpenConfirmResponse& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenConfirmResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenConfirmResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenConfirmResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgConnectionOpenConfirmResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgConnectionOpenConfirmResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgConnectionOpenConfirmResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenConfirmResponse"; }

 protected:
  explicit MsgConnectionOpenConfirmResponse(::google::protobuf::Arena* arena);
  MsgConnectionOpenConfirmResponse(::google::protobuf::Arena* arena, const MsgConnectionOpenConfirmResponse& from);
  MsgConnectionOpenConfirmResponse(::google::protobuf::Arena* arena, MsgConnectionOpenConfirmResponse&& from) noexcept
      : MsgConnectionOpenConfirmResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenConfirmResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenConfirmResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenAckResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenAckResponse) */ {
 public:
  inline MsgConnectionOpenAckResponse() : MsgConnectionOpenAckResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenAckResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenAckResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenAckResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenAckResponse(const MsgConnectionOpenAckResponse& from) : MsgConnectionOpenAckResponse(nullptr, from) {}
  inline MsgConnectionOpenAckResponse(MsgConnectionOpenAckResponse&& from) noexcept
      : MsgConnectionOpenAckResponse(nullptr, std::move(from)) {}
  inline MsgConnectionOpenAckResponse& operator=(const MsgConnectionOpenAckResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenAckResponse& operator=(MsgConnectionOpenAckResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenAckResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenAckResponse* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenAckResponse*>(
        &_MsgConnectionOpenAckResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgConnectionOpenAckResponse& a, MsgConnectionOpenAckResponse& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenAckResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenAckResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenAckResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgConnectionOpenAckResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgConnectionOpenAckResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgConnectionOpenAckResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenAckResponse"; }

 protected:
  explicit MsgConnectionOpenAckResponse(::google::protobuf::Arena* arena);
  MsgConnectionOpenAckResponse(::google::protobuf::Arena* arena, const MsgConnectionOpenAckResponse& from);
  MsgConnectionOpenAckResponse(::google::protobuf::Arena* arena, MsgConnectionOpenAckResponse&& from) noexcept
      : MsgConnectionOpenAckResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenAckResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenAckResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignerFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string signer = 1 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* value);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .ibc.core.connection.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::ibc::core::connection::v1::Params& params() const;
  PROTOBUF_NODISCARD ::ibc::core::connection::v1::Params* release_params();
  ::ibc::core::connection::v1::Params* mutable_params();
  void set_allocated_params(::ibc::core::connection::v1::Params* value);
  void unsafe_arena_set_allocated_params(::ibc::core::connection::v1::Params* value);
  ::ibc::core::connection::v1::Params* unsafe_arena_release_params();

  private:
  const ::ibc::core::connection::v1::Params& _internal_params() const;
  ::ibc::core::connection::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr signer_;
    ::ibc::core::connection::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenConfirm final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenConfirm) */ {
 public:
  inline MsgConnectionOpenConfirm() : MsgConnectionOpenConfirm(nullptr) {}
  ~MsgConnectionOpenConfirm() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenConfirm* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenConfirm));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenConfirm(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenConfirm(const MsgConnectionOpenConfirm& from) : MsgConnectionOpenConfirm(nullptr, from) {}
  inline MsgConnectionOpenConfirm(MsgConnectionOpenConfirm&& from) noexcept
      : MsgConnectionOpenConfirm(nullptr, std::move(from)) {}
  inline MsgConnectionOpenConfirm& operator=(const MsgConnectionOpenConfirm& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenConfirm& operator=(MsgConnectionOpenConfirm&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenConfirm& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenConfirm* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenConfirm*>(
        &_MsgConnectionOpenConfirm_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MsgConnectionOpenConfirm& a, MsgConnectionOpenConfirm& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenConfirm* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenConfirm* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenConfirm* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgConnectionOpenConfirm>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgConnectionOpenConfirm& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgConnectionOpenConfirm& from) { MsgConnectionOpenConfirm::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgConnectionOpenConfirm* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenConfirm"; }

 protected:
  explicit MsgConnectionOpenConfirm(::google::protobuf::Arena* arena);
  MsgConnectionOpenConfirm(::google::protobuf::Arena* arena, const MsgConnectionOpenConfirm& from);
  MsgConnectionOpenConfirm(::google::protobuf::Arena* arena, MsgConnectionOpenConfirm&& from) noexcept
      : MsgConnectionOpenConfirm(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectionIdFieldNumber = 1,
    kProofAckFieldNumber = 2,
    kSignerFieldNumber = 4,
    kProofHeightFieldNumber = 3,
  };
  // string connection_id = 1 [json_name = "connectionId"];
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // bytes proof_ack = 2 [json_name = "proofAck"];
  void clear_proof_ack() ;
  const std::string& proof_ack() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proof_ack(Arg_&& arg, Args_... args);
  std::string* mutable_proof_ack();
  PROTOBUF_NODISCARD std::string* release_proof_ack();
  void set_allocated_proof_ack(std::string* value);

  private:
  const std::string& _internal_proof_ack() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_ack(
      const std::string& value);
  std::string* _internal_mutable_proof_ack();

  public:
  // string signer = 4 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* value);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  bool has_proof_height() const;
  void clear_proof_height() ;
  const ::ibc::core::client::v1::Height& proof_height() const;
  PROTOBUF_NODISCARD ::ibc::core::client::v1::Height* release_proof_height();
  ::ibc::core::client::v1::Height* mutable_proof_height();
  void set_allocated_proof_height(::ibc::core::client::v1::Height* value);
  void unsafe_arena_set_allocated_proof_height(::ibc::core::client::v1::Height* value);
  ::ibc::core::client::v1::Height* unsafe_arena_release_proof_height();

  private:
  const ::ibc::core::client::v1::Height& _internal_proof_height() const;
  ::ibc::core::client::v1::Height* _internal_mutable_proof_height();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenConfirm)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenConfirm& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    ::google::protobuf::internal::ArenaStringPtr proof_ack_;
    ::google::protobuf::internal::ArenaStringPtr signer_;
    ::ibc::core::client::v1::Height* proof_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenAck final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenAck) */ {
 public:
  inline MsgConnectionOpenAck() : MsgConnectionOpenAck(nullptr) {}
  ~MsgConnectionOpenAck() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenAck* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenAck));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenAck(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenAck(const MsgConnectionOpenAck& from) : MsgConnectionOpenAck(nullptr, from) {}
  inline MsgConnectionOpenAck(MsgConnectionOpenAck&& from) noexcept
      : MsgConnectionOpenAck(nullptr, std::move(from)) {}
  inline MsgConnectionOpenAck& operator=(const MsgConnectionOpenAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenAck& operator=(MsgConnectionOpenAck&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenAck* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenAck*>(
        &_MsgConnectionOpenAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgConnectionOpenAck& a, MsgConnectionOpenAck& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenAck* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenAck* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenAck* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgConnectionOpenAck>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgConnectionOpenAck& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgConnectionOpenAck& from) { MsgConnectionOpenAck::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgConnectionOpenAck* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenAck"; }

 protected:
  explicit MsgConnectionOpenAck(::google::protobuf::Arena* arena);
  MsgConnectionOpenAck(::google::protobuf::Arena* arena, const MsgConnectionOpenAck& from);
  MsgConnectionOpenAck(::google::protobuf::Arena* arena, MsgConnectionOpenAck&& from) noexcept
      : MsgConnectionOpenAck(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConnectionIdFieldNumber = 1,
    kCounterpartyConnectionIdFieldNumber = 2,
    kProofTryFieldNumber = 6,
    kProofClientFieldNumber = 7,
    kProofConsensusFieldNumber = 8,
    kSignerFieldNumber = 10,
    kHostConsensusStateProofFieldNumber = 11,
    kVersionFieldNumber = 3,
    kClientStateFieldNumber = 4,
    kProofHeightFieldNumber = 5,
    kConsensusHeightFieldNumber = 9,
  };
  // string connection_id = 1 [json_name = "connectionId"];
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // string counterparty_connection_id = 2 [json_name = "counterpartyConnectionId"];
  void clear_counterparty_connection_id() ;
  const std::string& counterparty_connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_counterparty_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_counterparty_connection_id();
  PROTOBUF_NODISCARD std::string* release_counterparty_connection_id();
  void set_allocated_counterparty_connection_id(std::string* value);

  private:
  const std::string& _internal_counterparty_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_counterparty_connection_id(
      const std::string& value);
  std::string* _internal_mutable_counterparty_connection_id();

  public:
  // bytes proof_try = 6 [json_name = "proofTry"];
  void clear_proof_try() ;
  const std::string& proof_try() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proof_try(Arg_&& arg, Args_... args);
  std::string* mutable_proof_try();
  PROTOBUF_NODISCARD std::string* release_proof_try();
  void set_allocated_proof_try(std::string* value);

  private:
  const std::string& _internal_proof_try() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_try(
      const std::string& value);
  std::string* _internal_mutable_proof_try();

  public:
  // bytes proof_client = 7 [json_name = "proofClient", deprecated = true];
  [[deprecated]]  void clear_proof_client() ;
  [[deprecated]] const std::string& proof_client() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_proof_client(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_proof_client();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_proof_client();
  [[deprecated]] void set_allocated_proof_client(std::string* value);

  private:
  const std::string& _internal_proof_client() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_client(
      const std::string& value);
  std::string* _internal_mutable_proof_client();

  public:
  // bytes proof_consensus = 8 [json_name = "proofConsensus", deprecated = true];
  [[deprecated]]  void clear_proof_consensus() ;
  [[deprecated]] const std::string& proof_consensus() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_proof_consensus(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_proof_consensus();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_proof_consensus();
  [[deprecated]] void set_allocated_proof_consensus(std::string* value);

  private:
  const std::string& _internal_proof_consensus() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_consensus(
      const std::string& value);
  std::string* _internal_mutable_proof_consensus();

  public:
  // string signer = 10 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* value);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // bytes host_consensus_state_proof = 11 [json_name = "hostConsensusStateProof", deprecated = true];
  [[deprecated]]  void clear_host_consensus_state_proof() ;
  [[deprecated]] const std::string& host_consensus_state_proof() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_host_consensus_state_proof(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_host_consensus_state_proof();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_host_consensus_state_proof();
  [[deprecated]] void set_allocated_host_consensus_state_proof(std::string* value);

  private:
  const std::string& _internal_host_consensus_state_proof() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host_consensus_state_proof(
      const std::string& value);
  std::string* _internal_mutable_host_consensus_state_proof();

  public:
  // .ibc.core.connection.v1.Version version = 3 [json_name = "version"];
  bool has_version() const;
  void clear_version() ;
  const ::ibc::core::connection::v1::Version& version() const;
  PROTOBUF_NODISCARD ::ibc::core::connection::v1::Version* release_version();
  ::ibc::core::connection::v1::Version* mutable_version();
  void set_allocated_version(::ibc::core::connection::v1::Version* value);
  void unsafe_arena_set_allocated_version(::ibc::core::connection::v1::Version* value);
  ::ibc::core::connection::v1::Version* unsafe_arena_release_version();

  private:
  const ::ibc::core::connection::v1::Version& _internal_version() const;
  ::ibc::core::connection::v1::Version* _internal_mutable_version();

  public:
  // .google.protobuf.Any client_state = 4 [json_name = "clientState", deprecated = true];
  [[deprecated]]  bool has_client_state() const;
  [[deprecated]]  void clear_client_state() ;
  [[deprecated]] const ::google::protobuf::Any& client_state() const;
  [[deprecated]] PROTOBUF_NODISCARD ::google::protobuf::Any* release_client_state();
  [[deprecated]] ::google::protobuf::Any* mutable_client_state();
  [[deprecated]] void set_allocated_client_state(::google::protobuf::Any* value);
  [[deprecated]] void unsafe_arena_set_allocated_client_state(::google::protobuf::Any* value);
  [[deprecated]] ::google::protobuf::Any* unsafe_arena_release_client_state();

  private:
  const ::google::protobuf::Any& _internal_client_state() const;
  ::google::protobuf::Any* _internal_mutable_client_state();

  public:
  // .ibc.core.client.v1.Height proof_height = 5 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  bool has_proof_height() const;
  void clear_proof_height() ;
  const ::ibc::core::client::v1::Height& proof_height() const;
  PROTOBUF_NODISCARD ::ibc::core::client::v1::Height* release_proof_height();
  ::ibc::core::client::v1::Height* mutable_proof_height();
  void set_allocated_proof_height(::ibc::core::client::v1::Height* value);
  void unsafe_arena_set_allocated_proof_height(::ibc::core::client::v1::Height* value);
  ::ibc::core::client::v1::Height* unsafe_arena_release_proof_height();

  private:
  const ::ibc::core::client::v1::Height& _internal_proof_height() const;
  ::ibc::core::client::v1::Height* _internal_mutable_proof_height();

  public:
  // .ibc.core.client.v1.Height consensus_height = 9 [json_name = "consensusHeight", deprecated = true, (.gogoproto.nullable) = false];
  [[deprecated]]  bool has_consensus_height() const;
  [[deprecated]]  void clear_consensus_height() ;
  [[deprecated]] const ::ibc::core::client::v1::Height& consensus_height() const;
  [[deprecated]] PROTOBUF_NODISCARD ::ibc::core::client::v1::Height* release_consensus_height();
  [[deprecated]] ::ibc::core::client::v1::Height* mutable_consensus_height();
  [[deprecated]] void set_allocated_consensus_height(::ibc::core::client::v1::Height* value);
  [[deprecated]] void unsafe_arena_set_allocated_consensus_height(::ibc::core::client::v1::Height* value);
  [[deprecated]] ::ibc::core::client::v1::Height* unsafe_arena_release_consensus_height();

  private:
  const ::ibc::core::client::v1::Height& _internal_consensus_height() const;
  ::ibc::core::client::v1::Height* _internal_mutable_consensus_height();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenAck)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 4,
      105, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenAck& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    ::google::protobuf::internal::ArenaStringPtr counterparty_connection_id_;
    ::google::protobuf::internal::ArenaStringPtr proof_try_;
    ::google::protobuf::internal::ArenaStringPtr proof_client_;
    ::google::protobuf::internal::ArenaStringPtr proof_consensus_;
    ::google::protobuf::internal::ArenaStringPtr signer_;
    ::google::protobuf::internal::ArenaStringPtr host_consensus_state_proof_;
    ::ibc::core::connection::v1::Version* version_;
    ::google::protobuf::Any* client_state_;
    ::ibc::core::client::v1::Height* proof_height_;
    ::ibc::core::client::v1::Height* consensus_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenTry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenTry) */ {
 public:
  inline MsgConnectionOpenTry() : MsgConnectionOpenTry(nullptr) {}
  ~MsgConnectionOpenTry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenTry* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenTry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenTry(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenTry(const MsgConnectionOpenTry& from) : MsgConnectionOpenTry(nullptr, from) {}
  inline MsgConnectionOpenTry(MsgConnectionOpenTry&& from) noexcept
      : MsgConnectionOpenTry(nullptr, std::move(from)) {}
  inline MsgConnectionOpenTry& operator=(const MsgConnectionOpenTry& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenTry& operator=(MsgConnectionOpenTry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenTry& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenTry* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenTry*>(
        &_MsgConnectionOpenTry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgConnectionOpenTry& a, MsgConnectionOpenTry& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenTry* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenTry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenTry* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgConnectionOpenTry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgConnectionOpenTry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgConnectionOpenTry& from) { MsgConnectionOpenTry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgConnectionOpenTry* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenTry"; }

 protected:
  explicit MsgConnectionOpenTry(::google::protobuf::Arena* arena);
  MsgConnectionOpenTry(::google::protobuf::Arena* arena, const MsgConnectionOpenTry& from);
  MsgConnectionOpenTry(::google::protobuf::Arena* arena, MsgConnectionOpenTry&& from) noexcept
      : MsgConnectionOpenTry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCounterpartyVersionsFieldNumber = 6,
    kClientIdFieldNumber = 1,
    kPreviousConnectionIdFieldNumber = 2,
    kProofInitFieldNumber = 8,
    kProofClientFieldNumber = 9,
    kProofConsensusFieldNumber = 10,
    kSignerFieldNumber = 12,
    kHostConsensusStateProofFieldNumber = 13,
    kClientStateFieldNumber = 3,
    kCounterpartyFieldNumber = 4,
    kProofHeightFieldNumber = 7,
    kConsensusHeightFieldNumber = 11,
    kDelayPeriodFieldNumber = 5,
  };
  // repeated .ibc.core.connection.v1.Version counterparty_versions = 6 [json_name = "counterpartyVersions"];
  int counterparty_versions_size() const;
  private:
  int _internal_counterparty_versions_size() const;

  public:
  void clear_counterparty_versions() ;
  ::ibc::core::connection::v1::Version* mutable_counterparty_versions(int index);
  ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* mutable_counterparty_versions();

  private:
  const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& _internal_counterparty_versions() const;
  ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* _internal_mutable_counterparty_versions();
  public:
  const ::ibc::core::connection::v1::Version& counterparty_versions(int index) const;
  ::ibc::core::connection::v1::Version* add_counterparty_versions();
  const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& counterparty_versions() const;
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // string previous_connection_id = 2 [json_name = "previousConnectionId", deprecated = true];
  [[deprecated]]  void clear_previous_connection_id() ;
  [[deprecated]] const std::string& previous_connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_previous_connection_id(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_previous_connection_id();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_previous_connection_id();
  [[deprecated]] void set_allocated_previous_connection_id(std::string* value);

  private:
  const std::string& _internal_previous_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_previous_connection_id(
      const std::string& value);
  std::string* _internal_mutable_previous_connection_id();

  public:
  // bytes proof_init = 8 [json_name = "proofInit"];
  void clear_proof_init() ;
  const std::string& proof_init() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proof_init(Arg_&& arg, Args_... args);
  std::string* mutable_proof_init();
  PROTOBUF_NODISCARD std::string* release_proof_init();
  void set_allocated_proof_init(std::string* value);

  private:
  const std::string& _internal_proof_init() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_init(
      const std::string& value);
  std::string* _internal_mutable_proof_init();

  public:
  // bytes proof_client = 9 [json_name = "proofClient", deprecated = true];
  [[deprecated]]  void clear_proof_client() ;
  [[deprecated]] const std::string& proof_client() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_proof_client(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_proof_client();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_proof_client();
  [[deprecated]] void set_allocated_proof_client(std::string* value);

  private:
  const std::string& _internal_proof_client() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_client(
      const std::string& value);
  std::string* _internal_mutable_proof_client();

  public:
  // bytes proof_consensus = 10 [json_name = "proofConsensus", deprecated = true];
  [[deprecated]]  void clear_proof_consensus() ;
  [[deprecated]] const std::string& proof_consensus() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_proof_consensus(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_proof_consensus();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_proof_consensus();
  [[deprecated]] void set_allocated_proof_consensus(std::string* value);

  private:
  const std::string& _internal_proof_consensus() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proof_consensus(
      const std::string& value);
  std::string* _internal_mutable_proof_consensus();

  public:
  // string signer = 12 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* value);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // bytes host_consensus_state_proof = 13 [json_name = "hostConsensusStateProof", deprecated = true];
  [[deprecated]]  void clear_host_consensus_state_proof() ;
  [[deprecated]] const std::string& host_consensus_state_proof() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_host_consensus_state_proof(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_host_consensus_state_proof();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_host_consensus_state_proof();
  [[deprecated]] void set_allocated_host_consensus_state_proof(std::string* value);

  private:
  const std::string& _internal_host_consensus_state_proof() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host_consensus_state_proof(
      const std::string& value);
  std::string* _internal_mutable_host_consensus_state_proof();

  public:
  // .google.protobuf.Any client_state = 3 [json_name = "clientState", deprecated = true];
  [[deprecated]]  bool has_client_state() const;
  [[deprecated]]  void clear_client_state() ;
  [[deprecated]] const ::google::protobuf::Any& client_state() const;
  [[deprecated]] PROTOBUF_NODISCARD ::google::protobuf::Any* release_client_state();
  [[deprecated]] ::google::protobuf::Any* mutable_client_state();
  [[deprecated]] void set_allocated_client_state(::google::protobuf::Any* value);
  [[deprecated]] void unsafe_arena_set_allocated_client_state(::google::protobuf::Any* value);
  [[deprecated]] ::google::protobuf::Any* unsafe_arena_release_client_state();

  private:
  const ::google::protobuf::Any& _internal_client_state() const;
  ::google::protobuf::Any* _internal_mutable_client_state();

  public:
  // .ibc.core.connection.v1.Counterparty counterparty = 4 [json_name = "counterparty", (.gogoproto.nullable) = false];
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::ibc::core::connection::v1::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::ibc::core::connection::v1::Counterparty* release_counterparty();
  ::ibc::core::connection::v1::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  ::ibc::core::connection::v1::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::ibc::core::connection::v1::Counterparty& _internal_counterparty() const;
  ::ibc::core::connection::v1::Counterparty* _internal_mutable_counterparty();

  public:
  // .ibc.core.client.v1.Height proof_height = 7 [json_name = "proofHeight", (.gogoproto.nullable) = false];
  bool has_proof_height() const;
  void clear_proof_height() ;
  const ::ibc::core::client::v1::Height& proof_height() const;
  PROTOBUF_NODISCARD ::ibc::core::client::v1::Height* release_proof_height();
  ::ibc::core::client::v1::Height* mutable_proof_height();
  void set_allocated_proof_height(::ibc::core::client::v1::Height* value);
  void unsafe_arena_set_allocated_proof_height(::ibc::core::client::v1::Height* value);
  ::ibc::core::client::v1::Height* unsafe_arena_release_proof_height();

  private:
  const ::ibc::core::client::v1::Height& _internal_proof_height() const;
  ::ibc::core::client::v1::Height* _internal_mutable_proof_height();

  public:
  // .ibc.core.client.v1.Height consensus_height = 11 [json_name = "consensusHeight", deprecated = true, (.gogoproto.nullable) = false];
  [[deprecated]]  bool has_consensus_height() const;
  [[deprecated]]  void clear_consensus_height() ;
  [[deprecated]] const ::ibc::core::client::v1::Height& consensus_height() const;
  [[deprecated]] PROTOBUF_NODISCARD ::ibc::core::client::v1::Height* release_consensus_height();
  [[deprecated]] ::ibc::core::client::v1::Height* mutable_consensus_height();
  [[deprecated]] void set_allocated_consensus_height(::ibc::core::client::v1::Height* value);
  [[deprecated]] void unsafe_arena_set_allocated_consensus_height(::ibc::core::client::v1::Height* value);
  [[deprecated]] ::ibc::core::client::v1::Height* unsafe_arena_release_consensus_height();

  private:
  const ::ibc::core::client::v1::Height& _internal_consensus_height() const;
  ::ibc::core::client::v1::Height* _internal_mutable_consensus_height();

  public:
  // uint64 delay_period = 5 [json_name = "delayPeriod"];
  void clear_delay_period() ;
  ::uint64_t delay_period() const;
  void set_delay_period(::uint64_t value);

  private:
  ::uint64_t _internal_delay_period() const;
  void _internal_set_delay_period(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenTry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 13, 5,
      97, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenTry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ibc::core::connection::v1::Version > counterparty_versions_;
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::google::protobuf::internal::ArenaStringPtr previous_connection_id_;
    ::google::protobuf::internal::ArenaStringPtr proof_init_;
    ::google::protobuf::internal::ArenaStringPtr proof_client_;
    ::google::protobuf::internal::ArenaStringPtr proof_consensus_;
    ::google::protobuf::internal::ArenaStringPtr signer_;
    ::google::protobuf::internal::ArenaStringPtr host_consensus_state_proof_;
    ::google::protobuf::Any* client_state_;
    ::ibc::core::connection::v1::Counterparty* counterparty_;
    ::ibc::core::client::v1::Height* proof_height_;
    ::ibc::core::client::v1::Height* consensus_height_;
    ::uint64_t delay_period_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgConnectionOpenInit final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.MsgConnectionOpenInit) */ {
 public:
  inline MsgConnectionOpenInit() : MsgConnectionOpenInit(nullptr) {}
  ~MsgConnectionOpenInit() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgConnectionOpenInit* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgConnectionOpenInit));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgConnectionOpenInit(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgConnectionOpenInit(const MsgConnectionOpenInit& from) : MsgConnectionOpenInit(nullptr, from) {}
  inline MsgConnectionOpenInit(MsgConnectionOpenInit&& from) noexcept
      : MsgConnectionOpenInit(nullptr, std::move(from)) {}
  inline MsgConnectionOpenInit& operator=(const MsgConnectionOpenInit& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgConnectionOpenInit& operator=(MsgConnectionOpenInit&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgConnectionOpenInit& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgConnectionOpenInit* internal_default_instance() {
    return reinterpret_cast<const MsgConnectionOpenInit*>(
        &_MsgConnectionOpenInit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgConnectionOpenInit& a, MsgConnectionOpenInit& b) { a.Swap(&b); }
  inline void Swap(MsgConnectionOpenInit* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgConnectionOpenInit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgConnectionOpenInit* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgConnectionOpenInit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgConnectionOpenInit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgConnectionOpenInit& from) { MsgConnectionOpenInit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgConnectionOpenInit* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.MsgConnectionOpenInit"; }

 protected:
  explicit MsgConnectionOpenInit(::google::protobuf::Arena* arena);
  MsgConnectionOpenInit(::google::protobuf::Arena* arena, const MsgConnectionOpenInit& from);
  MsgConnectionOpenInit(::google::protobuf::Arena* arena, MsgConnectionOpenInit&& from) noexcept
      : MsgConnectionOpenInit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClientIdFieldNumber = 1,
    kSignerFieldNumber = 5,
    kCounterpartyFieldNumber = 2,
    kVersionFieldNumber = 3,
    kDelayPeriodFieldNumber = 4,
  };
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // string signer = 5 [json_name = "signer"];
  void clear_signer() ;
  const std::string& signer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signer(Arg_&& arg, Args_... args);
  std::string* mutable_signer();
  PROTOBUF_NODISCARD std::string* release_signer();
  void set_allocated_signer(std::string* value);

  private:
  const std::string& _internal_signer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signer(
      const std::string& value);
  std::string* _internal_mutable_signer();

  public:
  // .ibc.core.connection.v1.Counterparty counterparty = 2 [json_name = "counterparty", (.gogoproto.nullable) = false];
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::ibc::core::connection::v1::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::ibc::core::connection::v1::Counterparty* release_counterparty();
  ::ibc::core::connection::v1::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  ::ibc::core::connection::v1::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::ibc::core::connection::v1::Counterparty& _internal_counterparty() const;
  ::ibc::core::connection::v1::Counterparty* _internal_mutable_counterparty();

  public:
  // .ibc.core.connection.v1.Version version = 3 [json_name = "version"];
  bool has_version() const;
  void clear_version() ;
  const ::ibc::core::connection::v1::Version& version() const;
  PROTOBUF_NODISCARD ::ibc::core::connection::v1::Version* release_version();
  ::ibc::core::connection::v1::Version* mutable_version();
  void set_allocated_version(::ibc::core::connection::v1::Version* value);
  void unsafe_arena_set_allocated_version(::ibc::core::connection::v1::Version* value);
  ::ibc::core::connection::v1::Version* unsafe_arena_release_version();

  private:
  const ::ibc::core::connection::v1::Version& _internal_version() const;
  ::ibc::core::connection::v1::Version* _internal_mutable_version();

  public:
  // uint64 delay_period = 4 [json_name = "delayPeriod"];
  void clear_delay_period() ;
  ::uint64_t delay_period() const;
  void set_delay_period(::uint64_t value);

  private:
  ::uint64_t _internal_delay_period() const;
  void _internal_set_delay_period(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.MsgConnectionOpenInit)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgConnectionOpenInit& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::google::protobuf::internal::ArenaStringPtr signer_;
    ::ibc::core::connection::v1::Counterparty* counterparty_;
    ::ibc::core::connection::v1::Version* version_;
    ::uint64_t delay_period_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgConnectionOpenInit

// string client_id = 1 [json_name = "clientId"];
inline void MsgConnectionOpenInit::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenInit::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenInit.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenInit::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenInit.client_id)
}
inline std::string* MsgConnectionOpenInit::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenInit.client_id)
  return _s;
}
inline const std::string& MsgConnectionOpenInit::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void MsgConnectionOpenInit::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenInit::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenInit::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenInit.client_id)
  return _impl_.client_id_.Release();
}
inline void MsgConnectionOpenInit::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_id_.IsDefault()) {
    _impl_.client_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenInit.client_id)
}

// .ibc.core.connection.v1.Counterparty counterparty = 2 [json_name = "counterparty", (.gogoproto.nullable) = false];
inline bool MsgConnectionOpenInit::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline const ::ibc::core::connection::v1::Counterparty& MsgConnectionOpenInit::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::connection::v1::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::connection::v1::Counterparty&>(::ibc::core::connection::v1::_Counterparty_default_instance_);
}
inline const ::ibc::core::connection::v1::Counterparty& MsgConnectionOpenInit::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenInit.counterparty)
  return _internal_counterparty();
}
inline void MsgConnectionOpenInit::unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenInit.counterparty)
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenInit::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenInit::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenInit.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenInit::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::connection::v1::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenInit::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::connection::v1::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenInit.counterparty)
  return _msg;
}
inline void MsgConnectionOpenInit::set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenInit.counterparty)
}

// .ibc.core.connection.v1.Version version = 3 [json_name = "version"];
inline bool MsgConnectionOpenInit::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_ != nullptr);
  return value;
}
inline const ::ibc::core::connection::v1::Version& MsgConnectionOpenInit::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::connection::v1::Version* p = _impl_.version_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::connection::v1::Version&>(::ibc::core::connection::v1::_Version_default_instance_);
}
inline const ::ibc::core::connection::v1::Version& MsgConnectionOpenInit::version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenInit.version)
  return _internal_version();
}
inline void MsgConnectionOpenInit::unsafe_arena_set_allocated_version(::ibc::core::connection::v1::Version* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }
  _impl_.version_ = reinterpret_cast<::ibc::core::connection::v1::Version*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenInit.version)
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenInit::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ibc::core::connection::v1::Version* released = _impl_.version_;
  _impl_.version_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenInit::unsafe_arena_release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenInit.version)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ibc::core::connection::v1::Version* temp = _impl_.version_;
  _impl_.version_ = nullptr;
  return temp;
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenInit::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::connection::v1::Version>(GetArena());
    _impl_.version_ = reinterpret_cast<::ibc::core::connection::v1::Version*>(p);
  }
  return _impl_.version_;
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenInit::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ibc::core::connection::v1::Version* _msg = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenInit.version)
  return _msg;
}
inline void MsgConnectionOpenInit::set_allocated_version(::ibc::core::connection::v1::Version* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.version_ = reinterpret_cast<::ibc::core::connection::v1::Version*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenInit.version)
}

// uint64 delay_period = 4 [json_name = "delayPeriod"];
inline void MsgConnectionOpenInit::clear_delay_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = ::uint64_t{0u};
}
inline ::uint64_t MsgConnectionOpenInit::delay_period() const {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenInit.delay_period)
  return _internal_delay_period();
}
inline void MsgConnectionOpenInit::set_delay_period(::uint64_t value) {
  _internal_set_delay_period(value);
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenInit.delay_period)
}
inline ::uint64_t MsgConnectionOpenInit::_internal_delay_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_period_;
}
inline void MsgConnectionOpenInit::_internal_set_delay_period(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = value;
}

// string signer = 5 [json_name = "signer"];
inline void MsgConnectionOpenInit::clear_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenInit::signer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenInit.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenInit::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenInit.signer)
}
inline std::string* MsgConnectionOpenInit::mutable_signer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenInit.signer)
  return _s;
}
inline const std::string& MsgConnectionOpenInit::_internal_signer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signer_.Get();
}
inline void MsgConnectionOpenInit::_internal_set_signer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenInit::_internal_mutable_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signer_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenInit::release_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenInit.signer)
  return _impl_.signer_.Release();
}
inline void MsgConnectionOpenInit::set_allocated_signer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signer_.IsDefault()) {
    _impl_.signer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenInit.signer)
}

// -------------------------------------------------------------------

// MsgConnectionOpenInitResponse

// -------------------------------------------------------------------

// MsgConnectionOpenTry

// string client_id = 1 [json_name = "clientId"];
inline void MsgConnectionOpenTry::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenTry::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenTry::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.client_id)
}
inline std::string* MsgConnectionOpenTry::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.client_id)
  return _s;
}
inline const std::string& MsgConnectionOpenTry::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void MsgConnectionOpenTry::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenTry::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenTry::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.client_id)
  return _impl_.client_id_.Release();
}
inline void MsgConnectionOpenTry::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_id_.IsDefault()) {
    _impl_.client_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.client_id)
}

// string previous_connection_id = 2 [json_name = "previousConnectionId", deprecated = true];
inline void MsgConnectionOpenTry::clear_previous_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_connection_id_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenTry::previous_connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.previous_connection_id)
  return _internal_previous_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenTry::set_previous_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.previous_connection_id)
}
inline std::string* MsgConnectionOpenTry::mutable_previous_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_previous_connection_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.previous_connection_id)
  return _s;
}
inline const std::string& MsgConnectionOpenTry::_internal_previous_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.previous_connection_id_.Get();
}
inline void MsgConnectionOpenTry::_internal_set_previous_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_connection_id_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenTry::_internal_mutable_previous_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.previous_connection_id_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenTry::release_previous_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.previous_connection_id)
  return _impl_.previous_connection_id_.Release();
}
inline void MsgConnectionOpenTry::set_allocated_previous_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_connection_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.previous_connection_id_.IsDefault()) {
    _impl_.previous_connection_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.previous_connection_id)
}

// .google.protobuf.Any client_state = 3 [json_name = "clientState", deprecated = true];
inline bool MsgConnectionOpenTry::has_client_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_state_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& MsgConnectionOpenTry::_internal_client_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.client_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& MsgConnectionOpenTry::client_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.client_state)
  return _internal_client_state();
}
inline void MsgConnectionOpenTry::unsafe_arena_set_allocated_client_state(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_state_);
  }
  _impl_.client_state_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.client_state)
}
inline ::google::protobuf::Any* MsgConnectionOpenTry::release_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* MsgConnectionOpenTry::unsafe_arena_release_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.client_state)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* MsgConnectionOpenTry::_internal_mutable_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.client_state_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.client_state_;
}
inline ::google::protobuf::Any* MsgConnectionOpenTry::mutable_client_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_client_state();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.client_state)
  return _msg;
}
inline void MsgConnectionOpenTry::set_allocated_client_state(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.client_state_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.client_state)
}

// .ibc.core.connection.v1.Counterparty counterparty = 4 [json_name = "counterparty", (.gogoproto.nullable) = false];
inline bool MsgConnectionOpenTry::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline const ::ibc::core::connection::v1::Counterparty& MsgConnectionOpenTry::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::connection::v1::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::connection::v1::Counterparty&>(::ibc::core::connection::v1::_Counterparty_default_instance_);
}
inline const ::ibc::core::connection::v1::Counterparty& MsgConnectionOpenTry::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty)
  return _internal_counterparty();
}
inline void MsgConnectionOpenTry::unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty)
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenTry::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ibc::core::connection::v1::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenTry::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::ibc::core::connection::v1::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenTry::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::connection::v1::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::ibc::core::connection::v1::Counterparty* MsgConnectionOpenTry::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::ibc::core::connection::v1::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty)
  return _msg;
}
inline void MsgConnectionOpenTry::set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty)
}

// uint64 delay_period = 5 [json_name = "delayPeriod"];
inline void MsgConnectionOpenTry::clear_delay_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = ::uint64_t{0u};
}
inline ::uint64_t MsgConnectionOpenTry::delay_period() const {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.delay_period)
  return _internal_delay_period();
}
inline void MsgConnectionOpenTry::set_delay_period(::uint64_t value) {
  _internal_set_delay_period(value);
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.delay_period)
}
inline ::uint64_t MsgConnectionOpenTry::_internal_delay_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_period_;
}
inline void MsgConnectionOpenTry::_internal_set_delay_period(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = value;
}

// repeated .ibc.core.connection.v1.Version counterparty_versions = 6 [json_name = "counterpartyVersions"];
inline int MsgConnectionOpenTry::_internal_counterparty_versions_size() const {
  return _internal_counterparty_versions().size();
}
inline int MsgConnectionOpenTry::counterparty_versions_size() const {
  return _internal_counterparty_versions_size();
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenTry::mutable_counterparty_versions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty_versions)
  return _internal_mutable_counterparty_versions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* MsgConnectionOpenTry::mutable_counterparty_versions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty_versions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_counterparty_versions();
}
inline const ::ibc::core::connection::v1::Version& MsgConnectionOpenTry::counterparty_versions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty_versions)
  return _internal_counterparty_versions().Get(index);
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenTry::add_counterparty_versions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ibc::core::connection::v1::Version* _add = _internal_mutable_counterparty_versions()->Add();
  // @@protoc_insertion_point(field_add:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty_versions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& MsgConnectionOpenTry::counterparty_versions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.connection.v1.MsgConnectionOpenTry.counterparty_versions)
  return _internal_counterparty_versions();
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>&
MsgConnectionOpenTry::_internal_counterparty_versions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparty_versions_;
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>*
MsgConnectionOpenTry::_internal_mutable_counterparty_versions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.counterparty_versions_;
}

// .ibc.core.client.v1.Height proof_height = 7 [json_name = "proofHeight", (.gogoproto.nullable) = false];
inline bool MsgConnectionOpenTry::has_proof_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.proof_height_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenTry::_internal_proof_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::client::v1::Height* p = _impl_.proof_height_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Height&>(::ibc::core::client::v1::_Height_default_instance_);
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenTry::proof_height() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.proof_height)
  return _internal_proof_height();
}
inline void MsgConnectionOpenTry::unsafe_arena_set_allocated_proof_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proof_height_);
  }
  _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.proof_height)
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::release_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ibc::core::client::v1::Height* released = _impl_.proof_height_;
  _impl_.proof_height_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::unsafe_arena_release_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.proof_height)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ibc::core::client::v1::Height* temp = _impl_.proof_height_;
  _impl_.proof_height_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::_internal_mutable_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proof_height_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::client::v1::Height>(GetArena());
    _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(p);
  }
  return _impl_.proof_height_;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::mutable_proof_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::ibc::core::client::v1::Height* _msg = _internal_mutable_proof_height();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.proof_height)
  return _msg;
}
inline void MsgConnectionOpenTry::set_allocated_proof_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proof_height_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.proof_height)
}

// bytes proof_init = 8 [json_name = "proofInit"];
inline void MsgConnectionOpenTry::clear_proof_init() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_init_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenTry::proof_init() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.proof_init)
  return _internal_proof_init();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenTry::set_proof_init(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_init_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.proof_init)
}
inline std::string* MsgConnectionOpenTry::mutable_proof_init() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proof_init();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.proof_init)
  return _s;
}
inline const std::string& MsgConnectionOpenTry::_internal_proof_init() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proof_init_.Get();
}
inline void MsgConnectionOpenTry::_internal_set_proof_init(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_init_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenTry::_internal_mutable_proof_init() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proof_init_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenTry::release_proof_init() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.proof_init)
  return _impl_.proof_init_.Release();
}
inline void MsgConnectionOpenTry::set_allocated_proof_init(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_init_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proof_init_.IsDefault()) {
    _impl_.proof_init_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.proof_init)
}

// bytes proof_client = 9 [json_name = "proofClient", deprecated = true];
inline void MsgConnectionOpenTry::clear_proof_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenTry::proof_client() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.proof_client)
  return _internal_proof_client();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenTry::set_proof_client(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.proof_client)
}
inline std::string* MsgConnectionOpenTry::mutable_proof_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proof_client();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.proof_client)
  return _s;
}
inline const std::string& MsgConnectionOpenTry::_internal_proof_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proof_client_.Get();
}
inline void MsgConnectionOpenTry::_internal_set_proof_client(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenTry::_internal_mutable_proof_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proof_client_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenTry::release_proof_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.proof_client)
  return _impl_.proof_client_.Release();
}
inline void MsgConnectionOpenTry::set_allocated_proof_client(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proof_client_.IsDefault()) {
    _impl_.proof_client_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.proof_client)
}

// bytes proof_consensus = 10 [json_name = "proofConsensus", deprecated = true];
inline void MsgConnectionOpenTry::clear_proof_consensus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenTry::proof_consensus() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.proof_consensus)
  return _internal_proof_consensus();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenTry::set_proof_consensus(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.proof_consensus)
}
inline std::string* MsgConnectionOpenTry::mutable_proof_consensus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proof_consensus();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.proof_consensus)
  return _s;
}
inline const std::string& MsgConnectionOpenTry::_internal_proof_consensus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proof_consensus_.Get();
}
inline void MsgConnectionOpenTry::_internal_set_proof_consensus(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenTry::_internal_mutable_proof_consensus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proof_consensus_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenTry::release_proof_consensus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.proof_consensus)
  return _impl_.proof_consensus_.Release();
}
inline void MsgConnectionOpenTry::set_allocated_proof_consensus(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proof_consensus_.IsDefault()) {
    _impl_.proof_consensus_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.proof_consensus)
}

// .ibc.core.client.v1.Height consensus_height = 11 [json_name = "consensusHeight", deprecated = true, (.gogoproto.nullable) = false];
inline bool MsgConnectionOpenTry::has_consensus_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.consensus_height_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenTry::_internal_consensus_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::client::v1::Height* p = _impl_.consensus_height_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Height&>(::ibc::core::client::v1::_Height_default_instance_);
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenTry::consensus_height() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.consensus_height)
  return _internal_consensus_height();
}
inline void MsgConnectionOpenTry::unsafe_arena_set_allocated_consensus_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.consensus_height_);
  }
  _impl_.consensus_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.consensus_height)
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::release_consensus_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ibc::core::client::v1::Height* released = _impl_.consensus_height_;
  _impl_.consensus_height_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::unsafe_arena_release_consensus_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.consensus_height)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ibc::core::client::v1::Height* temp = _impl_.consensus_height_;
  _impl_.consensus_height_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::_internal_mutable_consensus_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consensus_height_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::client::v1::Height>(GetArena());
    _impl_.consensus_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(p);
  }
  return _impl_.consensus_height_;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenTry::mutable_consensus_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::ibc::core::client::v1::Height* _msg = _internal_mutable_consensus_height();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.consensus_height)
  return _msg;
}
inline void MsgConnectionOpenTry::set_allocated_consensus_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.consensus_height_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.consensus_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.consensus_height)
}

// string signer = 12 [json_name = "signer"];
inline void MsgConnectionOpenTry::clear_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenTry::signer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenTry::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.signer)
}
inline std::string* MsgConnectionOpenTry::mutable_signer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.signer)
  return _s;
}
inline const std::string& MsgConnectionOpenTry::_internal_signer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signer_.Get();
}
inline void MsgConnectionOpenTry::_internal_set_signer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenTry::_internal_mutable_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signer_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenTry::release_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.signer)
  return _impl_.signer_.Release();
}
inline void MsgConnectionOpenTry::set_allocated_signer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signer_.IsDefault()) {
    _impl_.signer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.signer)
}

// bytes host_consensus_state_proof = 13 [json_name = "hostConsensusStateProof", deprecated = true];
inline void MsgConnectionOpenTry::clear_host_consensus_state_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenTry::host_consensus_state_proof() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenTry.host_consensus_state_proof)
  return _internal_host_consensus_state_proof();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenTry::set_host_consensus_state_proof(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenTry.host_consensus_state_proof)
}
inline std::string* MsgConnectionOpenTry::mutable_host_consensus_state_proof() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host_consensus_state_proof();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenTry.host_consensus_state_proof)
  return _s;
}
inline const std::string& MsgConnectionOpenTry::_internal_host_consensus_state_proof() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_consensus_state_proof_.Get();
}
inline void MsgConnectionOpenTry::_internal_set_host_consensus_state_proof(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenTry::_internal_mutable_host_consensus_state_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_consensus_state_proof_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenTry::release_host_consensus_state_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenTry.host_consensus_state_proof)
  return _impl_.host_consensus_state_proof_.Release();
}
inline void MsgConnectionOpenTry::set_allocated_host_consensus_state_proof(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.host_consensus_state_proof_.IsDefault()) {
    _impl_.host_consensus_state_proof_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenTry.host_consensus_state_proof)
}

// -------------------------------------------------------------------

// MsgConnectionOpenTryResponse

// -------------------------------------------------------------------

// MsgConnectionOpenAck

// string connection_id = 1 [json_name = "connectionId"];
inline void MsgConnectionOpenAck::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenAck::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenAck::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenAck.connection_id)
}
inline std::string* MsgConnectionOpenAck::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.connection_id)
  return _s;
}
inline const std::string& MsgConnectionOpenAck::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void MsgConnectionOpenAck::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenAck::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenAck::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.connection_id)
  return _impl_.connection_id_.Release();
}
inline void MsgConnectionOpenAck::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.connection_id_.IsDefault()) {
    _impl_.connection_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.connection_id)
}

// string counterparty_connection_id = 2 [json_name = "counterpartyConnectionId"];
inline void MsgConnectionOpenAck::clear_counterparty_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_connection_id_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenAck::counterparty_connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.counterparty_connection_id)
  return _internal_counterparty_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenAck::set_counterparty_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenAck.counterparty_connection_id)
}
inline std::string* MsgConnectionOpenAck::mutable_counterparty_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_counterparty_connection_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.counterparty_connection_id)
  return _s;
}
inline const std::string& MsgConnectionOpenAck::_internal_counterparty_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.counterparty_connection_id_.Get();
}
inline void MsgConnectionOpenAck::_internal_set_counterparty_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_connection_id_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenAck::_internal_mutable_counterparty_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.counterparty_connection_id_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenAck::release_counterparty_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.counterparty_connection_id)
  return _impl_.counterparty_connection_id_.Release();
}
inline void MsgConnectionOpenAck::set_allocated_counterparty_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.counterparty_connection_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.counterparty_connection_id_.IsDefault()) {
    _impl_.counterparty_connection_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.counterparty_connection_id)
}

// .ibc.core.connection.v1.Version version = 3 [json_name = "version"];
inline bool MsgConnectionOpenAck::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_ != nullptr);
  return value;
}
inline const ::ibc::core::connection::v1::Version& MsgConnectionOpenAck::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::connection::v1::Version* p = _impl_.version_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::connection::v1::Version&>(::ibc::core::connection::v1::_Version_default_instance_);
}
inline const ::ibc::core::connection::v1::Version& MsgConnectionOpenAck::version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.version)
  return _internal_version();
}
inline void MsgConnectionOpenAck::unsafe_arena_set_allocated_version(::ibc::core::connection::v1::Version* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }
  _impl_.version_ = reinterpret_cast<::ibc::core::connection::v1::Version*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.version)
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenAck::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Version* released = _impl_.version_;
  _impl_.version_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenAck::unsafe_arena_release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.version)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Version* temp = _impl_.version_;
  _impl_.version_ = nullptr;
  return temp;
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenAck::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::connection::v1::Version>(GetArena());
    _impl_.version_ = reinterpret_cast<::ibc::core::connection::v1::Version*>(p);
  }
  return _impl_.version_;
}
inline ::ibc::core::connection::v1::Version* MsgConnectionOpenAck::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::connection::v1::Version* _msg = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.version)
  return _msg;
}
inline void MsgConnectionOpenAck::set_allocated_version(::ibc::core::connection::v1::Version* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.version_ = reinterpret_cast<::ibc::core::connection::v1::Version*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.version)
}

// .google.protobuf.Any client_state = 4 [json_name = "clientState", deprecated = true];
inline bool MsgConnectionOpenAck::has_client_state() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.client_state_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& MsgConnectionOpenAck::_internal_client_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.client_state_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& MsgConnectionOpenAck::client_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.client_state)
  return _internal_client_state();
}
inline void MsgConnectionOpenAck::unsafe_arena_set_allocated_client_state(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_state_);
  }
  _impl_.client_state_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.client_state)
}
inline ::google::protobuf::Any* MsgConnectionOpenAck::release_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Any* released = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* MsgConnectionOpenAck::unsafe_arena_release_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.client_state)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Any* temp = _impl_.client_state_;
  _impl_.client_state_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* MsgConnectionOpenAck::_internal_mutable_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_state_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.client_state_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.client_state_;
}
inline ::google::protobuf::Any* MsgConnectionOpenAck::mutable_client_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Any* _msg = _internal_mutable_client_state();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.client_state)
  return _msg;
}
inline void MsgConnectionOpenAck::set_allocated_client_state(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.client_state_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.client_state_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.client_state)
}

// .ibc.core.client.v1.Height proof_height = 5 [json_name = "proofHeight", (.gogoproto.nullable) = false];
inline bool MsgConnectionOpenAck::has_proof_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.proof_height_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenAck::_internal_proof_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::client::v1::Height* p = _impl_.proof_height_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Height&>(::ibc::core::client::v1::_Height_default_instance_);
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenAck::proof_height() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.proof_height)
  return _internal_proof_height();
}
inline void MsgConnectionOpenAck::unsafe_arena_set_allocated_proof_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proof_height_);
  }
  _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.proof_height)
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::release_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ibc::core::client::v1::Height* released = _impl_.proof_height_;
  _impl_.proof_height_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::unsafe_arena_release_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.proof_height)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::ibc::core::client::v1::Height* temp = _impl_.proof_height_;
  _impl_.proof_height_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::_internal_mutable_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proof_height_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::client::v1::Height>(GetArena());
    _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(p);
  }
  return _impl_.proof_height_;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::mutable_proof_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::ibc::core::client::v1::Height* _msg = _internal_mutable_proof_height();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.proof_height)
  return _msg;
}
inline void MsgConnectionOpenAck::set_allocated_proof_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proof_height_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.proof_height)
}

// bytes proof_try = 6 [json_name = "proofTry"];
inline void MsgConnectionOpenAck::clear_proof_try() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_try_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenAck::proof_try() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.proof_try)
  return _internal_proof_try();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenAck::set_proof_try(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_try_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenAck.proof_try)
}
inline std::string* MsgConnectionOpenAck::mutable_proof_try() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proof_try();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.proof_try)
  return _s;
}
inline const std::string& MsgConnectionOpenAck::_internal_proof_try() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proof_try_.Get();
}
inline void MsgConnectionOpenAck::_internal_set_proof_try(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_try_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenAck::_internal_mutable_proof_try() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proof_try_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenAck::release_proof_try() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.proof_try)
  return _impl_.proof_try_.Release();
}
inline void MsgConnectionOpenAck::set_allocated_proof_try(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_try_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proof_try_.IsDefault()) {
    _impl_.proof_try_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.proof_try)
}

// bytes proof_client = 7 [json_name = "proofClient", deprecated = true];
inline void MsgConnectionOpenAck::clear_proof_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenAck::proof_client() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.proof_client)
  return _internal_proof_client();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenAck::set_proof_client(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenAck.proof_client)
}
inline std::string* MsgConnectionOpenAck::mutable_proof_client() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proof_client();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.proof_client)
  return _s;
}
inline const std::string& MsgConnectionOpenAck::_internal_proof_client() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proof_client_.Get();
}
inline void MsgConnectionOpenAck::_internal_set_proof_client(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenAck::_internal_mutable_proof_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proof_client_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenAck::release_proof_client() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.proof_client)
  return _impl_.proof_client_.Release();
}
inline void MsgConnectionOpenAck::set_allocated_proof_client(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_client_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proof_client_.IsDefault()) {
    _impl_.proof_client_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.proof_client)
}

// bytes proof_consensus = 8 [json_name = "proofConsensus", deprecated = true];
inline void MsgConnectionOpenAck::clear_proof_consensus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenAck::proof_consensus() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.proof_consensus)
  return _internal_proof_consensus();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenAck::set_proof_consensus(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenAck.proof_consensus)
}
inline std::string* MsgConnectionOpenAck::mutable_proof_consensus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proof_consensus();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.proof_consensus)
  return _s;
}
inline const std::string& MsgConnectionOpenAck::_internal_proof_consensus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proof_consensus_.Get();
}
inline void MsgConnectionOpenAck::_internal_set_proof_consensus(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenAck::_internal_mutable_proof_consensus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proof_consensus_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenAck::release_proof_consensus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.proof_consensus)
  return _impl_.proof_consensus_.Release();
}
inline void MsgConnectionOpenAck::set_allocated_proof_consensus(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_consensus_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proof_consensus_.IsDefault()) {
    _impl_.proof_consensus_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.proof_consensus)
}

// .ibc.core.client.v1.Height consensus_height = 9 [json_name = "consensusHeight", deprecated = true, (.gogoproto.nullable) = false];
inline bool MsgConnectionOpenAck::has_consensus_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.consensus_height_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenAck::_internal_consensus_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::client::v1::Height* p = _impl_.consensus_height_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Height&>(::ibc::core::client::v1::_Height_default_instance_);
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenAck::consensus_height() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.consensus_height)
  return _internal_consensus_height();
}
inline void MsgConnectionOpenAck::unsafe_arena_set_allocated_consensus_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.consensus_height_);
  }
  _impl_.consensus_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.consensus_height)
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::release_consensus_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ibc::core::client::v1::Height* released = _impl_.consensus_height_;
  _impl_.consensus_height_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::unsafe_arena_release_consensus_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.consensus_height)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::ibc::core::client::v1::Height* temp = _impl_.consensus_height_;
  _impl_.consensus_height_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::_internal_mutable_consensus_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consensus_height_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::client::v1::Height>(GetArena());
    _impl_.consensus_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(p);
  }
  return _impl_.consensus_height_;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenAck::mutable_consensus_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::ibc::core::client::v1::Height* _msg = _internal_mutable_consensus_height();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.consensus_height)
  return _msg;
}
inline void MsgConnectionOpenAck::set_allocated_consensus_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.consensus_height_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.consensus_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.consensus_height)
}

// string signer = 10 [json_name = "signer"];
inline void MsgConnectionOpenAck::clear_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenAck::signer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenAck::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenAck.signer)
}
inline std::string* MsgConnectionOpenAck::mutable_signer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.signer)
  return _s;
}
inline const std::string& MsgConnectionOpenAck::_internal_signer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signer_.Get();
}
inline void MsgConnectionOpenAck::_internal_set_signer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenAck::_internal_mutable_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signer_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenAck::release_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.signer)
  return _impl_.signer_.Release();
}
inline void MsgConnectionOpenAck::set_allocated_signer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signer_.IsDefault()) {
    _impl_.signer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.signer)
}

// bytes host_consensus_state_proof = 11 [json_name = "hostConsensusStateProof", deprecated = true];
inline void MsgConnectionOpenAck::clear_host_consensus_state_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenAck::host_consensus_state_proof() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenAck.host_consensus_state_proof)
  return _internal_host_consensus_state_proof();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenAck::set_host_consensus_state_proof(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenAck.host_consensus_state_proof)
}
inline std::string* MsgConnectionOpenAck::mutable_host_consensus_state_proof() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host_consensus_state_proof();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenAck.host_consensus_state_proof)
  return _s;
}
inline const std::string& MsgConnectionOpenAck::_internal_host_consensus_state_proof() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_consensus_state_proof_.Get();
}
inline void MsgConnectionOpenAck::_internal_set_host_consensus_state_proof(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenAck::_internal_mutable_host_consensus_state_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_consensus_state_proof_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenAck::release_host_consensus_state_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenAck.host_consensus_state_proof)
  return _impl_.host_consensus_state_proof_.Release();
}
inline void MsgConnectionOpenAck::set_allocated_host_consensus_state_proof(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_consensus_state_proof_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.host_consensus_state_proof_.IsDefault()) {
    _impl_.host_consensus_state_proof_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenAck.host_consensus_state_proof)
}

// -------------------------------------------------------------------

// MsgConnectionOpenAckResponse

// -------------------------------------------------------------------

// MsgConnectionOpenConfirm

// string connection_id = 1 [json_name = "connectionId"];
inline void MsgConnectionOpenConfirm::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenConfirm::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenConfirm.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenConfirm::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenConfirm.connection_id)
}
inline std::string* MsgConnectionOpenConfirm::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenConfirm.connection_id)
  return _s;
}
inline const std::string& MsgConnectionOpenConfirm::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void MsgConnectionOpenConfirm::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenConfirm::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenConfirm::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenConfirm.connection_id)
  return _impl_.connection_id_.Release();
}
inline void MsgConnectionOpenConfirm::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.connection_id_.IsDefault()) {
    _impl_.connection_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenConfirm.connection_id)
}

// bytes proof_ack = 2 [json_name = "proofAck"];
inline void MsgConnectionOpenConfirm::clear_proof_ack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_ack_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenConfirm::proof_ack() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_ack)
  return _internal_proof_ack();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenConfirm::set_proof_ack(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_ack_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_ack)
}
inline std::string* MsgConnectionOpenConfirm::mutable_proof_ack() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proof_ack();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_ack)
  return _s;
}
inline const std::string& MsgConnectionOpenConfirm::_internal_proof_ack() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proof_ack_.Get();
}
inline void MsgConnectionOpenConfirm::_internal_set_proof_ack(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_ack_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenConfirm::_internal_mutable_proof_ack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proof_ack_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenConfirm::release_proof_ack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_ack)
  return _impl_.proof_ack_.Release();
}
inline void MsgConnectionOpenConfirm::set_allocated_proof_ack(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proof_ack_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proof_ack_.IsDefault()) {
    _impl_.proof_ack_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_ack)
}

// .ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];
inline bool MsgConnectionOpenConfirm::has_proof_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.proof_height_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenConfirm::_internal_proof_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::client::v1::Height* p = _impl_.proof_height_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Height&>(::ibc::core::client::v1::_Height_default_instance_);
}
inline const ::ibc::core::client::v1::Height& MsgConnectionOpenConfirm::proof_height() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_height)
  return _internal_proof_height();
}
inline void MsgConnectionOpenConfirm::unsafe_arena_set_allocated_proof_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proof_height_);
  }
  _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_height)
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenConfirm::release_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::client::v1::Height* released = _impl_.proof_height_;
  _impl_.proof_height_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenConfirm::unsafe_arena_release_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_height)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::client::v1::Height* temp = _impl_.proof_height_;
  _impl_.proof_height_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenConfirm::_internal_mutable_proof_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proof_height_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::client::v1::Height>(GetArena());
    _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(p);
  }
  return _impl_.proof_height_;
}
inline ::ibc::core::client::v1::Height* MsgConnectionOpenConfirm::mutable_proof_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::client::v1::Height* _msg = _internal_mutable_proof_height();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_height)
  return _msg;
}
inline void MsgConnectionOpenConfirm::set_allocated_proof_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proof_height_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.proof_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenConfirm.proof_height)
}

// string signer = 4 [json_name = "signer"];
inline void MsgConnectionOpenConfirm::clear_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgConnectionOpenConfirm::signer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgConnectionOpenConfirm.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgConnectionOpenConfirm::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgConnectionOpenConfirm.signer)
}
inline std::string* MsgConnectionOpenConfirm::mutable_signer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgConnectionOpenConfirm.signer)
  return _s;
}
inline const std::string& MsgConnectionOpenConfirm::_internal_signer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signer_.Get();
}
inline void MsgConnectionOpenConfirm::_internal_set_signer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(value, GetArena());
}
inline std::string* MsgConnectionOpenConfirm::_internal_mutable_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signer_.Mutable( GetArena());
}
inline std::string* MsgConnectionOpenConfirm::release_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgConnectionOpenConfirm.signer)
  return _impl_.signer_.Release();
}
inline void MsgConnectionOpenConfirm::set_allocated_signer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signer_.IsDefault()) {
    _impl_.signer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgConnectionOpenConfirm.signer)
}

// -------------------------------------------------------------------

// MsgConnectionOpenConfirmResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string signer = 1 [json_name = "signer"];
inline void MsgUpdateParams::clear_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::signer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgUpdateParams.signer)
  return _internal_signer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_signer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.MsgUpdateParams.signer)
}
inline std::string* MsgUpdateParams::mutable_signer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signer();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgUpdateParams.signer)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_signer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signer_.Get();
}
inline void MsgUpdateParams::_internal_set_signer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signer_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_signer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgUpdateParams.signer)
  return _impl_.signer_.Release();
}
inline void MsgUpdateParams::set_allocated_signer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.signer_.IsDefault()) {
    _impl_.signer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgUpdateParams.signer)
}

// .ibc.core.connection.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::ibc::core::connection::v1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::connection::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::connection::v1::Params&>(::ibc::core::connection::v1::_Params_default_instance_);
}
inline const ::ibc::core::connection::v1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::ibc::core::connection::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::ibc::core::connection::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.MsgUpdateParams.params)
}
inline ::ibc::core::connection::v1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::connection::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::ibc::core::connection::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::connection::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::ibc::core::connection::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::ibc::core::connection::v1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::connection::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::ibc::core::connection::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::ibc::core::connection::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace connection
}  // namespace core
}  // namespace ibc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2fcore_2fconnection_2fv1_2ftx_2eproto_2epb_2eh
