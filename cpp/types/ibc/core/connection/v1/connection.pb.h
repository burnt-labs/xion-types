// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/core/connection/v1/connection.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto_2epb_2eh
#define ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "ibc/core/commitment/v1/commitment.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
namespace ibc {
namespace core {
namespace connection {
namespace v1 {
class ClientPaths;
struct ClientPathsDefaultTypeInternal;
extern ClientPathsDefaultTypeInternal _ClientPaths_default_instance_;
class ConnectionEnd;
struct ConnectionEndDefaultTypeInternal;
extern ConnectionEndDefaultTypeInternal _ConnectionEnd_default_instance_;
class ConnectionPaths;
struct ConnectionPathsDefaultTypeInternal;
extern ConnectionPathsDefaultTypeInternal _ConnectionPaths_default_instance_;
class Counterparty;
struct CounterpartyDefaultTypeInternal;
extern CounterpartyDefaultTypeInternal _Counterparty_default_instance_;
class IdentifiedConnection;
struct IdentifiedConnectionDefaultTypeInternal;
extern IdentifiedConnectionDefaultTypeInternal _IdentifiedConnection_default_instance_;
class Params;
struct ParamsDefaultTypeInternal;
extern ParamsDefaultTypeInternal _Params_default_instance_;
class Version;
struct VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
}  // namespace v1
}  // namespace connection
}  // namespace core
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace core {
namespace connection {
namespace v1 {
enum State : int {
  STATE_UNINITIALIZED_UNSPECIFIED = 0,
  STATE_INIT = 1,
  STATE_TRYOPEN = 2,
  STATE_OPEN = 3,
  State_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  State_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool State_IsValid(int value);
extern const uint32_t State_internal_data_[];
constexpr State State_MIN = static_cast<State>(0);
constexpr State State_MAX = static_cast<State>(3);
constexpr int State_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
State_descriptor();
template <typename T>
const std::string& State_Name(T value) {
  static_assert(std::is_same<T, State>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to State_Name().");
  return State_Name(static_cast<State>(value));
}
template <>
inline const std::string& State_Name(State value) {
  return ::google::protobuf::internal::NameOfDenseEnum<State_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool State_Parse(absl::string_view name, State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<State>(
      State_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Version final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.Version) */ {
 public:
  inline Version() : Version(nullptr) {}
  ~Version() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Version* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Version));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Version(
      ::google::protobuf::internal::ConstantInitialized);

  inline Version(const Version& from) : Version(nullptr, from) {}
  inline Version(Version&& from) noexcept
      : Version(nullptr, std::move(from)) {}
  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  inline Version& operator=(Version&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Version& default_instance() {
    return *internal_default_instance();
  }
  static inline const Version* internal_default_instance() {
    return reinterpret_cast<const Version*>(
        &_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Version& a, Version& b) { a.Swap(&b); }
  inline void Swap(Version* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Version* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Version* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Version>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Version& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Version& from) { Version::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Version* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.Version"; }

 protected:
  explicit Version(::google::protobuf::Arena* arena);
  Version(::google::protobuf::Arena* arena, const Version& from);
  Version(::google::protobuf::Arena* arena, Version&& from) noexcept
      : Version(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeaturesFieldNumber = 2,
    kIdentifierFieldNumber = 1,
  };
  // repeated string features = 2 [json_name = "features"];
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  const std::string& features(int index) const;
  std::string* mutable_features(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_features(int index, Arg_&& value, Args_... args);
  std::string* add_features();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_features(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& features() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_features();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_features() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_features();

  public:
  // string identifier = 1 [json_name = "identifier"];
  void clear_identifier() ;
  const std::string& identifier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identifier(Arg_&& arg, Args_... args);
  std::string* mutable_identifier();
  PROTOBUF_NODISCARD std::string* release_identifier();
  void set_allocated_identifier(std::string* value);

  private:
  const std::string& _internal_identifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identifier(
      const std::string& value);
  std::string* _internal_mutable_identifier();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.Version)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Version& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> features_;
    ::google::protobuf::internal::ArenaStringPtr identifier_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
};
// -------------------------------------------------------------------

class Params final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.Params) */ {
 public:
  inline Params() : Params(nullptr) {}
  ~Params() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Params* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Params));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Params(
      ::google::protobuf::internal::ConstantInitialized);

  inline Params(const Params& from) : Params(nullptr, from) {}
  inline Params(Params&& from) noexcept
      : Params(nullptr, std::move(from)) {}
  inline Params& operator=(const Params& from) {
    CopyFrom(from);
    return *this;
  }
  inline Params& operator=(Params&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Params& default_instance() {
    return *internal_default_instance();
  }
  static inline const Params* internal_default_instance() {
    return reinterpret_cast<const Params*>(
        &_Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Params& a, Params& b) { a.Swap(&b); }
  inline void Swap(Params* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Params* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Params* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Params>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Params& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Params& from) { Params::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Params* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.Params"; }

 protected:
  explicit Params(::google::protobuf::Arena* arena);
  Params(::google::protobuf::Arena* arena, const Params& from);
  Params(::google::protobuf::Arena* arena, Params&& from) noexcept
      : Params(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMaxExpectedTimePerBlockFieldNumber = 1,
  };
  // uint64 max_expected_time_per_block = 1 [json_name = "maxExpectedTimePerBlock"];
  void clear_max_expected_time_per_block() ;
  ::uint64_t max_expected_time_per_block() const;
  void set_max_expected_time_per_block(::uint64_t value);

  private:
  ::uint64_t _internal_max_expected_time_per_block() const;
  void _internal_set_max_expected_time_per_block(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.Params)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Params& from_msg);
    ::uint64_t max_expected_time_per_block_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
};
// -------------------------------------------------------------------

class ConnectionPaths final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.ConnectionPaths) */ {
 public:
  inline ConnectionPaths() : ConnectionPaths(nullptr) {}
  ~ConnectionPaths() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConnectionPaths* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConnectionPaths));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectionPaths(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectionPaths(const ConnectionPaths& from) : ConnectionPaths(nullptr, from) {}
  inline ConnectionPaths(ConnectionPaths&& from) noexcept
      : ConnectionPaths(nullptr, std::move(from)) {}
  inline ConnectionPaths& operator=(const ConnectionPaths& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectionPaths& operator=(ConnectionPaths&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectionPaths& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectionPaths* internal_default_instance() {
    return reinterpret_cast<const ConnectionPaths*>(
        &_ConnectionPaths_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ConnectionPaths& a, ConnectionPaths& b) { a.Swap(&b); }
  inline void Swap(ConnectionPaths* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectionPaths* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectionPaths* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConnectionPaths>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectionPaths& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectionPaths& from) { ConnectionPaths::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConnectionPaths* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.ConnectionPaths"; }

 protected:
  explicit ConnectionPaths(::google::protobuf::Arena* arena);
  ConnectionPaths(::google::protobuf::Arena* arena, const ConnectionPaths& from);
  ConnectionPaths(::google::protobuf::Arena* arena, ConnectionPaths&& from) noexcept
      : ConnectionPaths(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathsFieldNumber = 2,
    kClientIdFieldNumber = 1,
  };
  // repeated string paths = 2 [json_name = "paths"];
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_paths(int index, Arg_&& value, Args_... args);
  std::string* add_paths();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_paths(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_paths();

  public:
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.ConnectionPaths)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectionPaths& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> paths_;
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
};
// -------------------------------------------------------------------

class ClientPaths final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.ClientPaths) */ {
 public:
  inline ClientPaths() : ClientPaths(nullptr) {}
  ~ClientPaths() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClientPaths* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClientPaths));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientPaths(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientPaths(const ClientPaths& from) : ClientPaths(nullptr, from) {}
  inline ClientPaths(ClientPaths&& from) noexcept
      : ClientPaths(nullptr, std::move(from)) {}
  inline ClientPaths& operator=(const ClientPaths& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientPaths& operator=(ClientPaths&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientPaths& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientPaths* internal_default_instance() {
    return reinterpret_cast<const ClientPaths*>(
        &_ClientPaths_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ClientPaths& a, ClientPaths& b) { a.Swap(&b); }
  inline void Swap(ClientPaths* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientPaths* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientPaths* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClientPaths>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientPaths& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientPaths& from) { ClientPaths::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClientPaths* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.ClientPaths"; }

 protected:
  explicit ClientPaths(::google::protobuf::Arena* arena);
  ClientPaths(::google::protobuf::Arena* arena, const ClientPaths& from);
  ClientPaths(::google::protobuf::Arena* arena, ClientPaths&& from) noexcept
      : ClientPaths(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathsFieldNumber = 1,
  };
  // repeated string paths = 1 [json_name = "paths"];
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_paths(int index, Arg_&& value, Args_... args);
  std::string* add_paths();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_paths(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_paths();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.ClientPaths)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientPaths& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> paths_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
};
// -------------------------------------------------------------------

class Counterparty final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.Counterparty) */ {
 public:
  inline Counterparty() : Counterparty(nullptr) {}
  ~Counterparty() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Counterparty* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Counterparty));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Counterparty(
      ::google::protobuf::internal::ConstantInitialized);

  inline Counterparty(const Counterparty& from) : Counterparty(nullptr, from) {}
  inline Counterparty(Counterparty&& from) noexcept
      : Counterparty(nullptr, std::move(from)) {}
  inline Counterparty& operator=(const Counterparty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Counterparty& operator=(Counterparty&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Counterparty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Counterparty* internal_default_instance() {
    return reinterpret_cast<const Counterparty*>(
        &_Counterparty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Counterparty& a, Counterparty& b) { a.Swap(&b); }
  inline void Swap(Counterparty* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Counterparty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Counterparty* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Counterparty>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Counterparty& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Counterparty& from) { Counterparty::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Counterparty* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.Counterparty"; }

 protected:
  explicit Counterparty(::google::protobuf::Arena* arena);
  Counterparty(::google::protobuf::Arena* arena, const Counterparty& from);
  Counterparty(::google::protobuf::Arena* arena, Counterparty&& from) noexcept
      : Counterparty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClientIdFieldNumber = 1,
    kConnectionIdFieldNumber = 2,
    kPrefixFieldNumber = 3,
  };
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // string connection_id = 2 [json_name = "connectionId"];
  void clear_connection_id() ;
  const std::string& connection_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connection_id(Arg_&& arg, Args_... args);
  std::string* mutable_connection_id();
  PROTOBUF_NODISCARD std::string* release_connection_id();
  void set_allocated_connection_id(std::string* value);

  private:
  const std::string& _internal_connection_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connection_id(
      const std::string& value);
  std::string* _internal_mutable_connection_id();

  public:
  // .ibc.core.commitment.v1.MerklePrefix prefix = 3 [json_name = "prefix", (.gogoproto.nullable) = false];
  bool has_prefix() const;
  void clear_prefix() ;
  const ::ibc::core::commitment::v1::MerklePrefix& prefix() const;
  PROTOBUF_NODISCARD ::ibc::core::commitment::v1::MerklePrefix* release_prefix();
  ::ibc::core::commitment::v1::MerklePrefix* mutable_prefix();
  void set_allocated_prefix(::ibc::core::commitment::v1::MerklePrefix* value);
  void unsafe_arena_set_allocated_prefix(::ibc::core::commitment::v1::MerklePrefix* value);
  ::ibc::core::commitment::v1::MerklePrefix* unsafe_arena_release_prefix();

  private:
  const ::ibc::core::commitment::v1::MerklePrefix& _internal_prefix() const;
  ::ibc::core::commitment::v1::MerklePrefix* _internal_mutable_prefix();

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.Counterparty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Counterparty& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::google::protobuf::internal::ArenaStringPtr connection_id_;
    ::ibc::core::commitment::v1::MerklePrefix* prefix_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
};
// -------------------------------------------------------------------

class IdentifiedConnection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.IdentifiedConnection) */ {
 public:
  inline IdentifiedConnection() : IdentifiedConnection(nullptr) {}
  ~IdentifiedConnection() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IdentifiedConnection* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IdentifiedConnection));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IdentifiedConnection(
      ::google::protobuf::internal::ConstantInitialized);

  inline IdentifiedConnection(const IdentifiedConnection& from) : IdentifiedConnection(nullptr, from) {}
  inline IdentifiedConnection(IdentifiedConnection&& from) noexcept
      : IdentifiedConnection(nullptr, std::move(from)) {}
  inline IdentifiedConnection& operator=(const IdentifiedConnection& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdentifiedConnection& operator=(IdentifiedConnection&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdentifiedConnection& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdentifiedConnection* internal_default_instance() {
    return reinterpret_cast<const IdentifiedConnection*>(
        &_IdentifiedConnection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(IdentifiedConnection& a, IdentifiedConnection& b) { a.Swap(&b); }
  inline void Swap(IdentifiedConnection* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdentifiedConnection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdentifiedConnection* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IdentifiedConnection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IdentifiedConnection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IdentifiedConnection& from) { IdentifiedConnection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IdentifiedConnection* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.IdentifiedConnection"; }

 protected:
  explicit IdentifiedConnection(::google::protobuf::Arena* arena);
  IdentifiedConnection(::google::protobuf::Arena* arena, const IdentifiedConnection& from);
  IdentifiedConnection(::google::protobuf::Arena* arena, IdentifiedConnection&& from) noexcept
      : IdentifiedConnection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVersionsFieldNumber = 3,
    kIdFieldNumber = 1,
    kClientIdFieldNumber = 2,
    kCounterpartyFieldNumber = 5,
    kDelayPeriodFieldNumber = 6,
    kStateFieldNumber = 4,
  };
  // repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];
  int versions_size() const;
  private:
  int _internal_versions_size() const;

  public:
  void clear_versions() ;
  ::ibc::core::connection::v1::Version* mutable_versions(int index);
  ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* mutable_versions();

  private:
  const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& _internal_versions() const;
  ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* _internal_mutable_versions();
  public:
  const ::ibc::core::connection::v1::Version& versions(int index) const;
  ::ibc::core::connection::v1::Version* add_versions();
  const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& versions() const;
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string client_id = 2 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // .ibc.core.connection.v1.Counterparty counterparty = 5 [json_name = "counterparty", (.gogoproto.nullable) = false];
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::ibc::core::connection::v1::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::ibc::core::connection::v1::Counterparty* release_counterparty();
  ::ibc::core::connection::v1::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  ::ibc::core::connection::v1::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::ibc::core::connection::v1::Counterparty& _internal_counterparty() const;
  ::ibc::core::connection::v1::Counterparty* _internal_mutable_counterparty();

  public:
  // uint64 delay_period = 6 [json_name = "delayPeriod"];
  void clear_delay_period() ;
  ::uint64_t delay_period() const;
  void set_delay_period(::uint64_t value);

  private:
  ::uint64_t _internal_delay_period() const;
  void _internal_set_delay_period(::uint64_t value);

  public:
  // .ibc.core.connection.v1.State state = 4 [json_name = "state"];
  void clear_state() ;
  ::ibc::core::connection::v1::State state() const;
  void set_state(::ibc::core::connection::v1::State value);

  private:
  ::ibc::core::connection::v1::State _internal_state() const;
  void _internal_set_state(::ibc::core::connection::v1::State value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.IdentifiedConnection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IdentifiedConnection& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ibc::core::connection::v1::Version > versions_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::ibc::core::connection::v1::Counterparty* counterparty_;
    ::uint64_t delay_period_;
    int state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
};
// -------------------------------------------------------------------

class ConnectionEnd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.core.connection.v1.ConnectionEnd) */ {
 public:
  inline ConnectionEnd() : ConnectionEnd(nullptr) {}
  ~ConnectionEnd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConnectionEnd* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConnectionEnd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectionEnd(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectionEnd(const ConnectionEnd& from) : ConnectionEnd(nullptr, from) {}
  inline ConnectionEnd(ConnectionEnd&& from) noexcept
      : ConnectionEnd(nullptr, std::move(from)) {}
  inline ConnectionEnd& operator=(const ConnectionEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectionEnd& operator=(ConnectionEnd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectionEnd& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectionEnd* internal_default_instance() {
    return reinterpret_cast<const ConnectionEnd*>(
        &_ConnectionEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ConnectionEnd& a, ConnectionEnd& b) { a.Swap(&b); }
  inline void Swap(ConnectionEnd* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectionEnd* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectionEnd* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConnectionEnd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectionEnd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectionEnd& from) { ConnectionEnd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConnectionEnd* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.core.connection.v1.ConnectionEnd"; }

 protected:
  explicit ConnectionEnd(::google::protobuf::Arena* arena);
  ConnectionEnd(::google::protobuf::Arena* arena, const ConnectionEnd& from);
  ConnectionEnd(::google::protobuf::Arena* arena, ConnectionEnd&& from) noexcept
      : ConnectionEnd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVersionsFieldNumber = 2,
    kClientIdFieldNumber = 1,
    kCounterpartyFieldNumber = 4,
    kDelayPeriodFieldNumber = 5,
    kStateFieldNumber = 3,
  };
  // repeated .ibc.core.connection.v1.Version versions = 2 [json_name = "versions"];
  int versions_size() const;
  private:
  int _internal_versions_size() const;

  public:
  void clear_versions() ;
  ::ibc::core::connection::v1::Version* mutable_versions(int index);
  ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* mutable_versions();

  private:
  const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& _internal_versions() const;
  ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* _internal_mutable_versions();
  public:
  const ::ibc::core::connection::v1::Version& versions(int index) const;
  ::ibc::core::connection::v1::Version* add_versions();
  const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& versions() const;
  // string client_id = 1 [json_name = "clientId"];
  void clear_client_id() ;
  const std::string& client_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_client_id(Arg_&& arg, Args_... args);
  std::string* mutable_client_id();
  PROTOBUF_NODISCARD std::string* release_client_id();
  void set_allocated_client_id(std::string* value);

  private:
  const std::string& _internal_client_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_client_id(
      const std::string& value);
  std::string* _internal_mutable_client_id();

  public:
  // .ibc.core.connection.v1.Counterparty counterparty = 4 [json_name = "counterparty", (.gogoproto.nullable) = false];
  bool has_counterparty() const;
  void clear_counterparty() ;
  const ::ibc::core::connection::v1::Counterparty& counterparty() const;
  PROTOBUF_NODISCARD ::ibc::core::connection::v1::Counterparty* release_counterparty();
  ::ibc::core::connection::v1::Counterparty* mutable_counterparty();
  void set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  void unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value);
  ::ibc::core::connection::v1::Counterparty* unsafe_arena_release_counterparty();

  private:
  const ::ibc::core::connection::v1::Counterparty& _internal_counterparty() const;
  ::ibc::core::connection::v1::Counterparty* _internal_mutable_counterparty();

  public:
  // uint64 delay_period = 5 [json_name = "delayPeriod"];
  void clear_delay_period() ;
  ::uint64_t delay_period() const;
  void set_delay_period(::uint64_t value);

  private:
  ::uint64_t _internal_delay_period() const;
  void _internal_set_delay_period(::uint64_t value);

  public:
  // .ibc.core.connection.v1.State state = 3 [json_name = "state"];
  void clear_state() ;
  ::ibc::core::connection::v1::State state() const;
  void set_state(::ibc::core::connection::v1::State value);

  private:
  ::ibc::core::connection::v1::State _internal_state() const;
  void _internal_set_state(::ibc::core::connection::v1::State value);

  public:
  // @@protoc_insertion_point(class_scope:ibc.core.connection.v1.ConnectionEnd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectionEnd& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::ibc::core::connection::v1::Version > versions_;
    ::google::protobuf::internal::ArenaStringPtr client_id_;
    ::ibc::core::connection::v1::Counterparty* counterparty_;
    ::uint64_t delay_period_;
    int state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConnectionEnd

// string client_id = 1 [json_name = "clientId"];
inline void ConnectionEnd::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& ConnectionEnd::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ConnectionEnd.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectionEnd::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.ConnectionEnd.client_id)
}
inline std::string* ConnectionEnd::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.ConnectionEnd.client_id)
  return _s;
}
inline const std::string& ConnectionEnd::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void ConnectionEnd::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* ConnectionEnd::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* ConnectionEnd::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.ConnectionEnd.client_id)
  return _impl_.client_id_.Release();
}
inline void ConnectionEnd::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_id_.IsDefault()) {
    _impl_.client_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.ConnectionEnd.client_id)
}

// repeated .ibc.core.connection.v1.Version versions = 2 [json_name = "versions"];
inline int ConnectionEnd::_internal_versions_size() const {
  return _internal_versions().size();
}
inline int ConnectionEnd::versions_size() const {
  return _internal_versions_size();
}
inline void ConnectionEnd::clear_versions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.versions_.Clear();
}
inline ::ibc::core::connection::v1::Version* ConnectionEnd::mutable_versions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.ConnectionEnd.versions)
  return _internal_mutable_versions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* ConnectionEnd::mutable_versions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.connection.v1.ConnectionEnd.versions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_versions();
}
inline const ::ibc::core::connection::v1::Version& ConnectionEnd::versions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ConnectionEnd.versions)
  return _internal_versions().Get(index);
}
inline ::ibc::core::connection::v1::Version* ConnectionEnd::add_versions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ibc::core::connection::v1::Version* _add = _internal_mutable_versions()->Add();
  // @@protoc_insertion_point(field_add:ibc.core.connection.v1.ConnectionEnd.versions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& ConnectionEnd::versions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.connection.v1.ConnectionEnd.versions)
  return _internal_versions();
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>&
ConnectionEnd::_internal_versions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.versions_;
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>*
ConnectionEnd::_internal_mutable_versions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.versions_;
}

// .ibc.core.connection.v1.State state = 3 [json_name = "state"];
inline void ConnectionEnd::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::ibc::core::connection::v1::State ConnectionEnd::state() const {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ConnectionEnd.state)
  return _internal_state();
}
inline void ConnectionEnd::set_state(::ibc::core::connection::v1::State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.ConnectionEnd.state)
}
inline ::ibc::core::connection::v1::State ConnectionEnd::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ibc::core::connection::v1::State>(_impl_.state_);
}
inline void ConnectionEnd::_internal_set_state(::ibc::core::connection::v1::State value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// .ibc.core.connection.v1.Counterparty counterparty = 4 [json_name = "counterparty", (.gogoproto.nullable) = false];
inline bool ConnectionEnd::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline void ConnectionEnd::clear_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ != nullptr) _impl_.counterparty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ibc::core::connection::v1::Counterparty& ConnectionEnd::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::connection::v1::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::connection::v1::Counterparty&>(::ibc::core::connection::v1::_Counterparty_default_instance_);
}
inline const ::ibc::core::connection::v1::Counterparty& ConnectionEnd::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ConnectionEnd.counterparty)
  return _internal_counterparty();
}
inline void ConnectionEnd::unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.ConnectionEnd.counterparty)
}
inline ::ibc::core::connection::v1::Counterparty* ConnectionEnd::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::connection::v1::Counterparty* ConnectionEnd::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.ConnectionEnd.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::ibc::core::connection::v1::Counterparty* ConnectionEnd::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::connection::v1::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::ibc::core::connection::v1::Counterparty* ConnectionEnd::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::connection::v1::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.ConnectionEnd.counterparty)
  return _msg;
}
inline void ConnectionEnd::set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.ConnectionEnd.counterparty)
}

// uint64 delay_period = 5 [json_name = "delayPeriod"];
inline void ConnectionEnd::clear_delay_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = ::uint64_t{0u};
}
inline ::uint64_t ConnectionEnd::delay_period() const {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ConnectionEnd.delay_period)
  return _internal_delay_period();
}
inline void ConnectionEnd::set_delay_period(::uint64_t value) {
  _internal_set_delay_period(value);
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.ConnectionEnd.delay_period)
}
inline ::uint64_t ConnectionEnd::_internal_delay_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_period_;
}
inline void ConnectionEnd::_internal_set_delay_period(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = value;
}

// -------------------------------------------------------------------

// IdentifiedConnection

// string id = 1 [json_name = "id"];
inline void IdentifiedConnection::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& IdentifiedConnection::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.IdentifiedConnection.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IdentifiedConnection::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.IdentifiedConnection.id)
}
inline std::string* IdentifiedConnection::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.IdentifiedConnection.id)
  return _s;
}
inline const std::string& IdentifiedConnection::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void IdentifiedConnection::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* IdentifiedConnection::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* IdentifiedConnection::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.IdentifiedConnection.id)
  return _impl_.id_.Release();
}
inline void IdentifiedConnection::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.IdentifiedConnection.id)
}

// string client_id = 2 [json_name = "clientId"];
inline void IdentifiedConnection::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& IdentifiedConnection::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.IdentifiedConnection.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void IdentifiedConnection::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.IdentifiedConnection.client_id)
}
inline std::string* IdentifiedConnection::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.IdentifiedConnection.client_id)
  return _s;
}
inline const std::string& IdentifiedConnection::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void IdentifiedConnection::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* IdentifiedConnection::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* IdentifiedConnection::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.IdentifiedConnection.client_id)
  return _impl_.client_id_.Release();
}
inline void IdentifiedConnection::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_id_.IsDefault()) {
    _impl_.client_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.IdentifiedConnection.client_id)
}

// repeated .ibc.core.connection.v1.Version versions = 3 [json_name = "versions"];
inline int IdentifiedConnection::_internal_versions_size() const {
  return _internal_versions().size();
}
inline int IdentifiedConnection::versions_size() const {
  return _internal_versions_size();
}
inline void IdentifiedConnection::clear_versions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.versions_.Clear();
}
inline ::ibc::core::connection::v1::Version* IdentifiedConnection::mutable_versions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.IdentifiedConnection.versions)
  return _internal_mutable_versions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>* IdentifiedConnection::mutable_versions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.connection.v1.IdentifiedConnection.versions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_versions();
}
inline const ::ibc::core::connection::v1::Version& IdentifiedConnection::versions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.IdentifiedConnection.versions)
  return _internal_versions().Get(index);
}
inline ::ibc::core::connection::v1::Version* IdentifiedConnection::add_versions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::ibc::core::connection::v1::Version* _add = _internal_mutable_versions()->Add();
  // @@protoc_insertion_point(field_add:ibc.core.connection.v1.IdentifiedConnection.versions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>& IdentifiedConnection::versions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.connection.v1.IdentifiedConnection.versions)
  return _internal_versions();
}
inline const ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>&
IdentifiedConnection::_internal_versions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.versions_;
}
inline ::google::protobuf::RepeatedPtrField<::ibc::core::connection::v1::Version>*
IdentifiedConnection::_internal_mutable_versions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.versions_;
}

// .ibc.core.connection.v1.State state = 4 [json_name = "state"];
inline void IdentifiedConnection::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::ibc::core::connection::v1::State IdentifiedConnection::state() const {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.IdentifiedConnection.state)
  return _internal_state();
}
inline void IdentifiedConnection::set_state(::ibc::core::connection::v1::State value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.IdentifiedConnection.state)
}
inline ::ibc::core::connection::v1::State IdentifiedConnection::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::ibc::core::connection::v1::State>(_impl_.state_);
}
inline void IdentifiedConnection::_internal_set_state(::ibc::core::connection::v1::State value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// .ibc.core.connection.v1.Counterparty counterparty = 5 [json_name = "counterparty", (.gogoproto.nullable) = false];
inline bool IdentifiedConnection::has_counterparty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.counterparty_ != nullptr);
  return value;
}
inline void IdentifiedConnection::clear_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ != nullptr) _impl_.counterparty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ibc::core::connection::v1::Counterparty& IdentifiedConnection::_internal_counterparty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::connection::v1::Counterparty* p = _impl_.counterparty_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::connection::v1::Counterparty&>(::ibc::core::connection::v1::_Counterparty_default_instance_);
}
inline const ::ibc::core::connection::v1::Counterparty& IdentifiedConnection::counterparty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.IdentifiedConnection.counterparty)
  return _internal_counterparty();
}
inline void IdentifiedConnection::unsafe_arena_set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.counterparty_);
  }
  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.IdentifiedConnection.counterparty)
}
inline ::ibc::core::connection::v1::Counterparty* IdentifiedConnection::release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Counterparty* released = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::connection::v1::Counterparty* IdentifiedConnection::unsafe_arena_release_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.IdentifiedConnection.counterparty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::connection::v1::Counterparty* temp = _impl_.counterparty_;
  _impl_.counterparty_ = nullptr;
  return temp;
}
inline ::ibc::core::connection::v1::Counterparty* IdentifiedConnection::_internal_mutable_counterparty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.counterparty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::connection::v1::Counterparty>(GetArena());
    _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(p);
  }
  return _impl_.counterparty_;
}
inline ::ibc::core::connection::v1::Counterparty* IdentifiedConnection::mutable_counterparty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::connection::v1::Counterparty* _msg = _internal_mutable_counterparty();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.IdentifiedConnection.counterparty)
  return _msg;
}
inline void IdentifiedConnection::set_allocated_counterparty(::ibc::core::connection::v1::Counterparty* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.counterparty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.counterparty_ = reinterpret_cast<::ibc::core::connection::v1::Counterparty*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.IdentifiedConnection.counterparty)
}

// uint64 delay_period = 6 [json_name = "delayPeriod"];
inline void IdentifiedConnection::clear_delay_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = ::uint64_t{0u};
}
inline ::uint64_t IdentifiedConnection::delay_period() const {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.IdentifiedConnection.delay_period)
  return _internal_delay_period();
}
inline void IdentifiedConnection::set_delay_period(::uint64_t value) {
  _internal_set_delay_period(value);
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.IdentifiedConnection.delay_period)
}
inline ::uint64_t IdentifiedConnection::_internal_delay_period() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delay_period_;
}
inline void IdentifiedConnection::_internal_set_delay_period(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delay_period_ = value;
}

// -------------------------------------------------------------------

// Counterparty

// string client_id = 1 [json_name = "clientId"];
inline void Counterparty::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& Counterparty::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.Counterparty.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Counterparty::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.Counterparty.client_id)
}
inline std::string* Counterparty::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.Counterparty.client_id)
  return _s;
}
inline const std::string& Counterparty::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void Counterparty::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* Counterparty::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* Counterparty::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.Counterparty.client_id)
  return _impl_.client_id_.Release();
}
inline void Counterparty::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_id_.IsDefault()) {
    _impl_.client_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.Counterparty.client_id)
}

// string connection_id = 2 [json_name = "connectionId"];
inline void Counterparty::clear_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.ClearToEmpty();
}
inline const std::string& Counterparty::connection_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.Counterparty.connection_id)
  return _internal_connection_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Counterparty::set_connection_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.Counterparty.connection_id)
}
inline std::string* Counterparty::mutable_connection_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connection_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.Counterparty.connection_id)
  return _s;
}
inline const std::string& Counterparty::_internal_connection_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connection_id_.Get();
}
inline void Counterparty::_internal_set_connection_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.Set(value, GetArena());
}
inline std::string* Counterparty::_internal_mutable_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connection_id_.Mutable( GetArena());
}
inline std::string* Counterparty::release_connection_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.Counterparty.connection_id)
  return _impl_.connection_id_.Release();
}
inline void Counterparty::set_allocated_connection_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connection_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.connection_id_.IsDefault()) {
    _impl_.connection_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.Counterparty.connection_id)
}

// .ibc.core.commitment.v1.MerklePrefix prefix = 3 [json_name = "prefix", (.gogoproto.nullable) = false];
inline bool Counterparty::has_prefix() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.prefix_ != nullptr);
  return value;
}
inline const ::ibc::core::commitment::v1::MerklePrefix& Counterparty::_internal_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::commitment::v1::MerklePrefix* p = _impl_.prefix_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::commitment::v1::MerklePrefix&>(::ibc::core::commitment::v1::_MerklePrefix_default_instance_);
}
inline const ::ibc::core::commitment::v1::MerklePrefix& Counterparty::prefix() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.Counterparty.prefix)
  return _internal_prefix();
}
inline void Counterparty::unsafe_arena_set_allocated_prefix(::ibc::core::commitment::v1::MerklePrefix* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.prefix_);
  }
  _impl_.prefix_ = reinterpret_cast<::ibc::core::commitment::v1::MerklePrefix*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.core.connection.v1.Counterparty.prefix)
}
inline ::ibc::core::commitment::v1::MerklePrefix* Counterparty::release_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::commitment::v1::MerklePrefix* released = _impl_.prefix_;
  _impl_.prefix_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::commitment::v1::MerklePrefix* Counterparty::unsafe_arena_release_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.Counterparty.prefix)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::commitment::v1::MerklePrefix* temp = _impl_.prefix_;
  _impl_.prefix_ = nullptr;
  return temp;
}
inline ::ibc::core::commitment::v1::MerklePrefix* Counterparty::_internal_mutable_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.prefix_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::commitment::v1::MerklePrefix>(GetArena());
    _impl_.prefix_ = reinterpret_cast<::ibc::core::commitment::v1::MerklePrefix*>(p);
  }
  return _impl_.prefix_;
}
inline ::ibc::core::commitment::v1::MerklePrefix* Counterparty::mutable_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::commitment::v1::MerklePrefix* _msg = _internal_mutable_prefix();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.Counterparty.prefix)
  return _msg;
}
inline void Counterparty::set_allocated_prefix(::ibc::core::commitment::v1::MerklePrefix* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.prefix_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.prefix_ = reinterpret_cast<::ibc::core::commitment::v1::MerklePrefix*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.Counterparty.prefix)
}

// -------------------------------------------------------------------

// ClientPaths

// repeated string paths = 1 [json_name = "paths"];
inline int ClientPaths::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int ClientPaths::paths_size() const {
  return _internal_paths_size();
}
inline void ClientPaths::clear_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paths_.Clear();
}
inline std::string* ClientPaths::add_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:ibc.core.connection.v1.ClientPaths.paths)
  return _s;
}
inline const std::string& ClientPaths::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ClientPaths.paths)
  return _internal_paths().Get(index);
}
inline std::string* ClientPaths::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.ClientPaths.paths)
  return _internal_mutable_paths()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ClientPaths::set_paths(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_paths()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.ClientPaths.paths)
}
template <typename Arg_, typename... Args_>
inline void ClientPaths::add_paths(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_paths(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ibc.core.connection.v1.ClientPaths.paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ClientPaths::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.connection.v1.ClientPaths.paths)
  return _internal_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ClientPaths::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.connection.v1.ClientPaths.paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ClientPaths::_internal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ClientPaths::_internal_mutable_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paths_;
}

// -------------------------------------------------------------------

// ConnectionPaths

// string client_id = 1 [json_name = "clientId"];
inline void ConnectionPaths::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.ClearToEmpty();
}
inline const std::string& ConnectionPaths::client_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ConnectionPaths.client_id)
  return _internal_client_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConnectionPaths::set_client_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.ConnectionPaths.client_id)
}
inline std::string* ConnectionPaths::mutable_client_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_client_id();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.ConnectionPaths.client_id)
  return _s;
}
inline const std::string& ConnectionPaths::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_.Get();
}
inline void ConnectionPaths::_internal_set_client_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.Set(value, GetArena());
}
inline std::string* ConnectionPaths::_internal_mutable_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.client_id_.Mutable( GetArena());
}
inline std::string* ConnectionPaths::release_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.ConnectionPaths.client_id)
  return _impl_.client_id_.Release();
}
inline void ConnectionPaths::set_allocated_client_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.client_id_.IsDefault()) {
    _impl_.client_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.ConnectionPaths.client_id)
}

// repeated string paths = 2 [json_name = "paths"];
inline int ConnectionPaths::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int ConnectionPaths::paths_size() const {
  return _internal_paths_size();
}
inline void ConnectionPaths::clear_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paths_.Clear();
}
inline std::string* ConnectionPaths::add_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:ibc.core.connection.v1.ConnectionPaths.paths)
  return _s;
}
inline const std::string& ConnectionPaths::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.ConnectionPaths.paths)
  return _internal_paths().Get(index);
}
inline std::string* ConnectionPaths::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.ConnectionPaths.paths)
  return _internal_mutable_paths()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConnectionPaths::set_paths(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_paths()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.ConnectionPaths.paths)
}
template <typename Arg_, typename... Args_>
inline void ConnectionPaths::add_paths(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_paths(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ibc.core.connection.v1.ConnectionPaths.paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ConnectionPaths::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.connection.v1.ConnectionPaths.paths)
  return _internal_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ConnectionPaths::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.connection.v1.ConnectionPaths.paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ConnectionPaths::_internal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ConnectionPaths::_internal_mutable_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paths_;
}

// -------------------------------------------------------------------

// Version

// string identifier = 1 [json_name = "identifier"];
inline void Version::clear_identifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.ClearToEmpty();
}
inline const std::string& Version::identifier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.Version.identifier)
  return _internal_identifier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Version::set_identifier(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.Version.identifier)
}
inline std::string* Version::mutable_identifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identifier();
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.Version.identifier)
  return _s;
}
inline const std::string& Version::_internal_identifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identifier_.Get();
}
inline void Version::_internal_set_identifier(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.Set(value, GetArena());
}
inline std::string* Version::_internal_mutable_identifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.identifier_.Mutable( GetArena());
}
inline std::string* Version::release_identifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.core.connection.v1.Version.identifier)
  return _impl_.identifier_.Release();
}
inline void Version::set_allocated_identifier(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.identifier_.IsDefault()) {
    _impl_.identifier_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.core.connection.v1.Version.identifier)
}

// repeated string features = 2 [json_name = "features"];
inline int Version::_internal_features_size() const {
  return _internal_features().size();
}
inline int Version::features_size() const {
  return _internal_features_size();
}
inline void Version::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline std::string* Version::add_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_features()->Add();
  // @@protoc_insertion_point(field_add_mutable:ibc.core.connection.v1.Version.features)
  return _s;
}
inline const std::string& Version::features(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.Version.features)
  return _internal_features().Get(index);
}
inline std::string* Version::mutable_features(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.core.connection.v1.Version.features)
  return _internal_mutable_features()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Version::set_features(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_features()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.Version.features)
}
template <typename Arg_, typename... Args_>
inline void Version::add_features(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_features(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:ibc.core.connection.v1.Version.features)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Version::features() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.core.connection.v1.Version.features)
  return _internal_features();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Version::mutable_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.core.connection.v1.Version.features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_features();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Version::_internal_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Version::_internal_mutable_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.features_;
}

// -------------------------------------------------------------------

// Params

// uint64 max_expected_time_per_block = 1 [json_name = "maxExpectedTimePerBlock"];
inline void Params::clear_max_expected_time_per_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_expected_time_per_block_ = ::uint64_t{0u};
}
inline ::uint64_t Params::max_expected_time_per_block() const {
  // @@protoc_insertion_point(field_get:ibc.core.connection.v1.Params.max_expected_time_per_block)
  return _internal_max_expected_time_per_block();
}
inline void Params::set_max_expected_time_per_block(::uint64_t value) {
  _internal_set_max_expected_time_per_block(value);
  // @@protoc_insertion_point(field_set:ibc.core.connection.v1.Params.max_expected_time_per_block)
}
inline ::uint64_t Params::_internal_max_expected_time_per_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_expected_time_per_block_;
}
inline void Params::_internal_set_max_expected_time_per_block(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_expected_time_per_block_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace connection
}  // namespace core
}  // namespace ibc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ibc::core::connection::v1::State> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ibc::core::connection::v1::State>() {
  return ::ibc::core::connection::v1::State_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto_2epb_2eh
