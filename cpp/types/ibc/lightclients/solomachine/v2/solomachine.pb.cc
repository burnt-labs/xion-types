// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/solomachine/v2/solomachine.proto
// Protobuf C++ Version: 5.29.4

#include "ibc/lightclients/solomachine/v2/solomachine.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ibc {
namespace lightclients {
namespace solomachine {
namespace v2 {

inline constexpr TimestampedSignatureData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : signature_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TimestampedSignatureData::TimestampedSignatureData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TimestampedSignatureDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimestampedSignatureDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimestampedSignatureDataDefaultTypeInternal() {}
  union {
    TimestampedSignatureData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimestampedSignatureDataDefaultTypeInternal _TimestampedSignatureData_default_instance_;

inline constexpr SignatureAndData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{::uint64_t{0u}},
        data_type_{static_cast< ::ibc::lightclients::solomachine::v2::DataType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SignatureAndData::SignatureAndData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignatureAndDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignatureAndDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignatureAndDataDefaultTypeInternal() {}
  union {
    SignatureAndData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignatureAndDataDefaultTypeInternal _SignatureAndData_default_instance_;

inline constexpr SignBytes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : diversifier_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sequence_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}},
        data_type_{static_cast< ::ibc::lightclients::solomachine::v2::DataType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SignBytes::SignBytes(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignBytesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignBytesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignBytesDefaultTypeInternal() {}
  union {
    SignBytes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignBytesDefaultTypeInternal _SignBytes_default_instance_;

inline constexpr PacketReceiptAbsenceData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketReceiptAbsenceData::PacketReceiptAbsenceData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketReceiptAbsenceDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketReceiptAbsenceDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketReceiptAbsenceDataDefaultTypeInternal() {}
  union {
    PacketReceiptAbsenceData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketReceiptAbsenceDataDefaultTypeInternal _PacketReceiptAbsenceData_default_instance_;

inline constexpr PacketCommitmentData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        commitment_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketCommitmentData::PacketCommitmentData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketCommitmentDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketCommitmentDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketCommitmentDataDefaultTypeInternal() {}
  union {
    PacketCommitmentData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketCommitmentDataDefaultTypeInternal _PacketCommitmentData_default_instance_;

inline constexpr PacketAcknowledgementData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        acknowledgement_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PacketAcknowledgementData::PacketAcknowledgementData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PacketAcknowledgementDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketAcknowledgementDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketAcknowledgementDataDefaultTypeInternal() {}
  union {
    PacketAcknowledgementData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketAcknowledgementDataDefaultTypeInternal _PacketAcknowledgementData_default_instance_;

inline constexpr NextSequenceRecvData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_seq_recv_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NextSequenceRecvData::NextSequenceRecvData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NextSequenceRecvDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NextSequenceRecvDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NextSequenceRecvDataDefaultTypeInternal() {}
  union {
    NextSequenceRecvData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NextSequenceRecvDataDefaultTypeInternal _NextSequenceRecvData_default_instance_;

inline constexpr Misbehaviour::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        client_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_one_{nullptr},
        signature_two_{nullptr},
        sequence_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Misbehaviour::Misbehaviour(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MisbehaviourDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MisbehaviourDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MisbehaviourDefaultTypeInternal() {}
  union {
    Misbehaviour _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MisbehaviourDefaultTypeInternal _Misbehaviour_default_instance_;

inline constexpr HeaderData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        new_diversifier_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_pub_key_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HeaderData::HeaderData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeaderDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeaderDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeaderDataDefaultTypeInternal() {}
  union {
    HeaderData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeaderDataDefaultTypeInternal _HeaderData_default_instance_;

inline constexpr Header::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_diversifier_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_public_key_{nullptr},
        sequence_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Header::Header(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HeaderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HeaderDefaultTypeInternal() {}
  union {
    Header _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HeaderDefaultTypeInternal _Header_default_instance_;

inline constexpr ConsensusStateData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        consensus_state_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ConsensusStateData::ConsensusStateData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConsensusStateDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsensusStateDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsensusStateDataDefaultTypeInternal() {}
  union {
    ConsensusStateData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsensusStateDataDefaultTypeInternal _ConsensusStateData_default_instance_;

inline constexpr ConsensusState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        diversifier_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        public_key_{nullptr},
        timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR ConsensusState::ConsensusState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConsensusStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsensusStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsensusStateDefaultTypeInternal() {}
  union {
    ConsensusState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsensusStateDefaultTypeInternal _ConsensusState_default_instance_;

inline constexpr ClientStateData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        client_state_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ClientStateData::ClientStateData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientStateDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientStateDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientStateDataDefaultTypeInternal() {}
  union {
    ClientStateData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientStateDataDefaultTypeInternal _ClientStateData_default_instance_;

inline constexpr ClientState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        consensus_state_{nullptr},
        sequence_{::uint64_t{0u}},
        is_frozen_{false},
        allow_update_after_proposal_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ClientState::ClientState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClientStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientStateDefaultTypeInternal() {}
  union {
    ClientState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientStateDefaultTypeInternal _ClientState_default_instance_;

inline constexpr ChannelStateData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelStateData::ChannelStateData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChannelStateDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelStateDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelStateDataDefaultTypeInternal() {}
  union {
    ChannelStateData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelStateDataDefaultTypeInternal _ChannelStateData_default_instance_;

inline constexpr ConnectionStateData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        connection_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectionStateData::ConnectionStateData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectionStateDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionStateDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionStateDataDefaultTypeInternal() {}
  union {
    ConnectionStateData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionStateDataDefaultTypeInternal _ConnectionStateData_default_instance_;
}  // namespace v2
}  // namespace solomachine
}  // namespace lightclients
}  // namespace ibc
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto = nullptr;
const ::uint32_t
    TableStruct_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientState, _impl_.sequence_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientState, _impl_.is_frozen_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientState, _impl_.consensus_state_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientState, _impl_.allow_update_after_proposal_),
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusState, _impl_.public_key_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusState, _impl_.diversifier_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusState, _impl_.timestamp_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Header, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Header, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Header, _impl_.sequence_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Header, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Header, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Header, _impl_.new_public_key_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Header, _impl_.new_diversifier_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Misbehaviour, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Misbehaviour, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Misbehaviour, _impl_.client_id_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Misbehaviour, _impl_.sequence_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Misbehaviour, _impl_.signature_one_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::Misbehaviour, _impl_.signature_two_),
        ~0u,
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignatureAndData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignatureAndData, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignatureAndData, _impl_.data_type_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignatureAndData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignatureAndData, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::TimestampedSignatureData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::TimestampedSignatureData, _impl_.signature_data_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::TimestampedSignatureData, _impl_.timestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignBytes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignBytes, _impl_.sequence_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignBytes, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignBytes, _impl_.diversifier_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignBytes, _impl_.data_type_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::SignBytes, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::HeaderData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::HeaderData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::HeaderData, _impl_.new_pub_key_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::HeaderData, _impl_.new_diversifier_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientStateData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientStateData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientStateData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ClientStateData, _impl_.client_state_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusStateData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusStateData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusStateData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConsensusStateData, _impl_.consensus_state_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConnectionStateData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConnectionStateData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConnectionStateData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ConnectionStateData, _impl_.connection_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ChannelStateData, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ChannelStateData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ChannelStateData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::ChannelStateData, _impl_.channel_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketCommitmentData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketCommitmentData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketCommitmentData, _impl_.commitment_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketAcknowledgementData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketAcknowledgementData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketAcknowledgementData, _impl_.acknowledgement_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketReceiptAbsenceData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::PacketReceiptAbsenceData, _impl_.path_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::NextSequenceRecvData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::NextSequenceRecvData, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::ibc::lightclients::solomachine::v2::NextSequenceRecvData, _impl_.next_seq_recv_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::ibc::lightclients::solomachine::v2::ClientState)},
        {16, 27, -1, sizeof(::ibc::lightclients::solomachine::v2::ConsensusState)},
        {30, 43, -1, sizeof(::ibc::lightclients::solomachine::v2::Header)},
        {48, 60, -1, sizeof(::ibc::lightclients::solomachine::v2::Misbehaviour)},
        {64, -1, -1, sizeof(::ibc::lightclients::solomachine::v2::SignatureAndData)},
        {76, -1, -1, sizeof(::ibc::lightclients::solomachine::v2::TimestampedSignatureData)},
        {86, -1, -1, sizeof(::ibc::lightclients::solomachine::v2::SignBytes)},
        {99, 109, -1, sizeof(::ibc::lightclients::solomachine::v2::HeaderData)},
        {111, 121, -1, sizeof(::ibc::lightclients::solomachine::v2::ClientStateData)},
        {123, 133, -1, sizeof(::ibc::lightclients::solomachine::v2::ConsensusStateData)},
        {135, 145, -1, sizeof(::ibc::lightclients::solomachine::v2::ConnectionStateData)},
        {147, 157, -1, sizeof(::ibc::lightclients::solomachine::v2::ChannelStateData)},
        {159, -1, -1, sizeof(::ibc::lightclients::solomachine::v2::PacketCommitmentData)},
        {169, -1, -1, sizeof(::ibc::lightclients::solomachine::v2::PacketAcknowledgementData)},
        {179, -1, -1, sizeof(::ibc::lightclients::solomachine::v2::PacketReceiptAbsenceData)},
        {188, -1, -1, sizeof(::ibc::lightclients::solomachine::v2::NextSequenceRecvData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ibc::lightclients::solomachine::v2::_ClientState_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_ConsensusState_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_Header_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_Misbehaviour_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_SignatureAndData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_TimestampedSignatureData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_SignBytes_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_HeaderData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_ClientStateData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_ConsensusStateData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_ConnectionStateData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_ChannelStateData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_PacketCommitmentData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_PacketAcknowledgementData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_PacketReceiptAbsenceData_default_instance_._instance,
    &::ibc::lightclients::solomachine::v2::_NextSequenceRecvData_default_instance_._instance,
};
const char descriptor_table_protodef_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n1ibc/lightclients/solomachine/v2/soloma"
    "chine.proto\022\037ibc.lightclients.solomachin"
    "e.v2\032\'ibc/core/connection/v1/connection."
    "proto\032!ibc/core/channel/v1/channel.proto"
    "\032\024gogoproto/gogo.proto\032\031google/protobuf/"
    "any.proto\"\345\001\n\013ClientState\022\032\n\010sequence\030\001 "
    "\001(\004R\010sequence\022\033\n\tis_frozen\030\002 \001(\010R\010isFroz"
    "en\022X\n\017consensus_state\030\003 \001(\0132/.ibc.lightc"
    "lients.solomachine.v2.ConsensusStateR\016co"
    "nsensusState\022=\n\033allow_update_after_propo"
    "sal\030\004 \001(\010R\030allowUpdateAfterProposal:\004\210\240\037"
    "\000\"\213\001\n\016ConsensusState\0223\n\npublic_key\030\001 \001(\013"
    "2\024.google.protobuf.AnyR\tpublicKey\022 \n\013div"
    "ersifier\030\002 \001(\tR\013diversifier\022\034\n\ttimestamp"
    "\030\003 \001(\004R\ttimestamp:\004\210\240\037\000\"\313\001\n\006Header\022\032\n\010se"
    "quence\030\001 \001(\004R\010sequence\022\034\n\ttimestamp\030\002 \001("
    "\004R\ttimestamp\022\034\n\tsignature\030\003 \001(\014R\tsignatu"
    "re\022:\n\016new_public_key\030\004 \001(\0132\024.google.prot"
    "obuf.AnyR\014newPublicKey\022\'\n\017new_diversifie"
    "r\030\005 \001(\tR\016newDiversifier:\004\210\240\037\000\"\375\001\n\014Misbeh"
    "aviour\022\033\n\tclient_id\030\001 \001(\tR\010clientId\022\032\n\010s"
    "equence\030\002 \001(\004R\010sequence\022V\n\rsignature_one"
    "\030\003 \001(\01321.ibc.lightclients.solomachine.v2"
    ".SignatureAndDataR\014signatureOne\022V\n\rsigna"
    "ture_two\030\004 \001(\01321.ibc.lightclients.soloma"
    "chine.v2.SignatureAndDataR\014signatureTwo:"
    "\004\210\240\037\000\"\260\001\n\020SignatureAndData\022\034\n\tsignature\030"
    "\001 \001(\014R\tsignature\022F\n\tdata_type\030\002 \001(\0162).ib"
    "c.lightclients.solomachine.v2.DataTypeR\010"
    "dataType\022\022\n\004data\030\003 \001(\014R\004data\022\034\n\ttimestam"
    "p\030\004 \001(\004R\ttimestamp:\004\210\240\037\000\"e\n\030TimestampedS"
    "ignatureData\022%\n\016signature_data\030\001 \001(\014R\rsi"
    "gnatureData\022\034\n\ttimestamp\030\002 \001(\004R\ttimestam"
    "p:\004\210\240\037\000\"\311\001\n\tSignBytes\022\032\n\010sequence\030\001 \001(\004R"
    "\010sequence\022\034\n\ttimestamp\030\002 \001(\004R\ttimestamp\022"
    " \n\013diversifier\030\003 \001(\tR\013diversifier\022F\n\tdat"
    "a_type\030\004 \001(\0162).ibc.lightclients.solomach"
    "ine.v2.DataTypeR\010dataType\022\022\n\004data\030\005 \001(\014R"
    "\004data:\004\210\240\037\000\"q\n\nHeaderData\0224\n\013new_pub_key"
    "\030\001 \001(\0132\024.google.protobuf.AnyR\tnewPubKey\022"
    "\'\n\017new_diversifier\030\002 \001(\tR\016newDiversifier"
    ":\004\210\240\037\000\"d\n\017ClientStateData\022\022\n\004path\030\001 \001(\014R"
    "\004path\0227\n\014client_state\030\002 \001(\0132\024.google.pro"
    "tobuf.AnyR\013clientState:\004\210\240\037\000\"m\n\022Consensu"
    "sStateData\022\022\n\004path\030\001 \001(\014R\004path\022=\n\017consen"
    "sus_state\030\002 \001(\0132\024.google.protobuf.AnyR\016c"
    "onsensusState:\004\210\240\037\000\"v\n\023ConnectionStateDa"
    "ta\022\022\n\004path\030\001 \001(\014R\004path\022E\n\nconnection\030\002 \001"
    "(\0132%.ibc.core.connection.v1.ConnectionEn"
    "dR\nconnection:\004\210\240\037\000\"d\n\020ChannelStateData\022"
    "\022\n\004path\030\001 \001(\014R\004path\0226\n\007channel\030\002 \001(\0132\034.i"
    "bc.core.channel.v1.ChannelR\007channel:\004\210\240\037"
    "\000\"J\n\024PacketCommitmentData\022\022\n\004path\030\001 \001(\014R"
    "\004path\022\036\n\ncommitment\030\002 \001(\014R\ncommitment\"Y\n"
    "\031PacketAcknowledgementData\022\022\n\004path\030\001 \001(\014"
    "R\004path\022(\n\017acknowledgement\030\002 \001(\014R\017acknowl"
    "edgement\".\n\030PacketReceiptAbsenceData\022\022\n\004"
    "path\030\001 \001(\014R\004path\"N\n\024NextSequenceRecvData"
    "\022\022\n\004path\030\001 \001(\014R\004path\022\"\n\rnext_seq_recv\030\002 "
    "\001(\004R\013nextSeqRecv*\214\004\n\010DataType\0228\n#DATA_TY"
    "PE_UNINITIALIZED_UNSPECIFIED\020\000\032\017\212\235 \013UNSP"
    "ECIFIED\022&\n\026DATA_TYPE_CLIENT_STATE\020\001\032\n\212\235 "
    "\006CLIENT\022,\n\031DATA_TYPE_CONSENSUS_STATE\020\002\032\r"
    "\212\235 \tCONSENSUS\022.\n\032DATA_TYPE_CONNECTION_ST"
    "ATE\020\003\032\016\212\235 \nCONNECTION\022(\n\027DATA_TYPE_CHANN"
    "EL_STATE\020\004\032\013\212\235 \007CHANNEL\0225\n\033DATA_TYPE_PAC"
    "KET_COMMITMENT\020\005\032\024\212\235 \020PACKETCOMMITMENT\022\?"
    "\n DATA_TYPE_PACKET_ACKNOWLEDGEMENT\020\006\032\031\212\235"
    " \025PACKETACKNOWLEDGEMENT\022>\n DATA_TYPE_PAC"
    "KET_RECEIPT_ABSENCE\020\007\032\030\212\235 \024PACKETRECEIPT"
    "ABSENCE\0226\n\034DATA_TYPE_NEXT_SEQUENCE_RECV\020"
    "\010\032\024\212\235 \020NEXTSEQUENCERECV\022 \n\020DATA_TYPE_HEA"
    "DER\020\t\032\n\212\235 \006HEADER\032\004\210\243\036\000BCZAgithub.com/co"
    "smos/ibc-go/v10/modules/core/02-client/m"
    "igrations/v7b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto_deps[4] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_ibc_2fcore_2fchannel_2fv1_2fchannel_2eproto,
        &::descriptor_table_ibc_2fcore_2fconnection_2fv1_2fconnection_2eproto,
};
static ::absl::once_flag descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto = {
    false,
    false,
    2980,
    descriptor_table_protodef_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    "ibc/lightclients/solomachine/v2/solomachine.proto",
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto_once,
    descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto_deps,
    4,
    16,
    schemas,
    file_default_instances,
    TableStruct_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto::offsets,
    file_level_enum_descriptors_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    file_level_service_descriptors_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
};
namespace ibc {
namespace lightclients {
namespace solomachine {
namespace v2 {
const ::google::protobuf::EnumDescriptor* DataType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto);
  return file_level_enum_descriptors_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t DataType_internal_data_[] = {
    655360u, 0u, };
bool DataType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
// ===================================================================

class ClientState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ClientState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClientState, _impl_._has_bits_);
};

ClientState::ClientState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.ClientState)
}
inline PROTOBUF_NDEBUG_INLINE ClientState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::ClientState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClientState::ClientState(
    ::google::protobuf::Arena* arena,
    const ClientState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.consensus_state_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::lightclients::solomachine::v2::ConsensusState>(
                              arena, *from._impl_.consensus_state_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_),
           offsetof(Impl_, allow_update_after_proposal_) -
               offsetof(Impl_, sequence_) +
               sizeof(Impl_::allow_update_after_proposal_));

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.ClientState)
}
inline PROTOBUF_NDEBUG_INLINE ClientState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ClientState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, consensus_state_),
           0,
           offsetof(Impl_, allow_update_after_proposal_) -
               offsetof(Impl_, consensus_state_) +
               sizeof(Impl_::allow_update_after_proposal_));
}
ClientState::~ClientState() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.ClientState)
  SharedDtor(*this);
}
inline void ClientState::SharedDtor(MessageLite& self) {
  ClientState& this_ = static_cast<ClientState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.consensus_state_;
  this_._impl_.~Impl_();
}

inline void* ClientState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientState(arena);
}
constexpr auto ClientState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClientState),
                                            alignof(ClientState));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientState>(), &ClientState::ByteSizeLong,
            &ClientState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientState, _impl_._cached_size_),
        false,
    },
    &ClientState::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> ClientState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientState, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::ClientState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool allow_update_after_proposal = 4 [json_name = "allowUpdateAfterProposal"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ClientState, _impl_.allow_update_after_proposal_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ClientState, _impl_.allow_update_after_proposal_)}},
    // uint64 sequence = 1 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ClientState, _impl_.sequence_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ClientState, _impl_.sequence_)}},
    // bool is_frozen = 2 [json_name = "isFrozen"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ClientState, _impl_.is_frozen_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ClientState, _impl_.is_frozen_)}},
    // .ibc.lightclients.solomachine.v2.ConsensusState consensus_state = 3 [json_name = "consensusState"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ClientState, _impl_.consensus_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 sequence = 1 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(ClientState, _impl_.sequence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool is_frozen = 2 [json_name = "isFrozen"];
    {PROTOBUF_FIELD_OFFSET(ClientState, _impl_.is_frozen_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .ibc.lightclients.solomachine.v2.ConsensusState consensus_state = 3 [json_name = "consensusState"];
    {PROTOBUF_FIELD_OFFSET(ClientState, _impl_.consensus_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool allow_update_after_proposal = 4 [json_name = "allowUpdateAfterProposal"];
    {PROTOBUF_FIELD_OFFSET(ClientState, _impl_.allow_update_after_proposal_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::ConsensusState>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ClientState::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.ClientState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.consensus_state_ != nullptr);
    _impl_.consensus_state_->Clear();
  }
  ::memset(&_impl_.sequence_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.allow_update_after_proposal_) -
      reinterpret_cast<char*>(&_impl_.sequence_)) + sizeof(_impl_.allow_update_after_proposal_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientState& this_ = static_cast<const ClientState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.ClientState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 sequence = 1 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_sequence(), target);
          }

          // bool is_frozen = 2 [json_name = "isFrozen"];
          if (this_._internal_is_frozen() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_frozen(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.lightclients.solomachine.v2.ConsensusState consensus_state = 3 [json_name = "consensusState"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.consensus_state_, this_._impl_.consensus_state_->GetCachedSize(), target,
                stream);
          }

          // bool allow_update_after_proposal = 4 [json_name = "allowUpdateAfterProposal"];
          if (this_._internal_allow_update_after_proposal() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_allow_update_after_proposal(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.ClientState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientState::ByteSizeLong(const MessageLite& base) {
          const ClientState& this_ = static_cast<const ClientState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientState::ByteSizeLong() const {
          const ClientState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.ClientState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .ibc.lightclients.solomachine.v2.ConsensusState consensus_state = 3 [json_name = "consensusState"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.consensus_state_);
            }
          }
           {
            // uint64 sequence = 1 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
            // bool is_frozen = 2 [json_name = "isFrozen"];
            if (this_._internal_is_frozen() != 0) {
              total_size += 2;
            }
            // bool allow_update_after_proposal = 4 [json_name = "allowUpdateAfterProposal"];
            if (this_._internal_allow_update_after_proposal() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientState*>(&to_msg);
  auto& from = static_cast<const ClientState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.ClientState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.consensus_state_ != nullptr);
    if (_this->_impl_.consensus_state_ == nullptr) {
      _this->_impl_.consensus_state_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::lightclients::solomachine::v2::ConsensusState>(arena, *from._impl_.consensus_state_);
    } else {
      _this->_impl_.consensus_state_->MergeFrom(*from._impl_.consensus_state_);
    }
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  if (from._internal_is_frozen() != 0) {
    _this->_impl_.is_frozen_ = from._impl_.is_frozen_;
  }
  if (from._internal_allow_update_after_proposal() != 0) {
    _this->_impl_.allow_update_after_proposal_ = from._impl_.allow_update_after_proposal_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientState::CopyFrom(const ClientState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.ClientState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientState::InternalSwap(ClientState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClientState, _impl_.allow_update_after_proposal_)
      + sizeof(ClientState::_impl_.allow_update_after_proposal_)
      - PROTOBUF_FIELD_OFFSET(ClientState, _impl_.consensus_state_)>(
          reinterpret_cast<char*>(&_impl_.consensus_state_),
          reinterpret_cast<char*>(&other->_impl_.consensus_state_));
}

::google::protobuf::Metadata ClientState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConsensusState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ConsensusState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_._has_bits_);
};

void ConsensusState::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.public_key_ != nullptr) _impl_.public_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ConsensusState::ConsensusState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.ConsensusState)
}
inline PROTOBUF_NDEBUG_INLINE ConsensusState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::ConsensusState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        diversifier_(arena, from.diversifier_) {}

ConsensusState::ConsensusState(
    ::google::protobuf::Arena* arena,
    const ConsensusState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConsensusState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.public_key_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.public_key_)
                        : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.ConsensusState)
}
inline PROTOBUF_NDEBUG_INLINE ConsensusState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        diversifier_(arena) {}

inline void ConsensusState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, public_key_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, public_key_) +
               sizeof(Impl_::timestamp_));
}
ConsensusState::~ConsensusState() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.ConsensusState)
  SharedDtor(*this);
}
inline void ConsensusState::SharedDtor(MessageLite& self) {
  ConsensusState& this_ = static_cast<ConsensusState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.diversifier_.Destroy();
  delete this_._impl_.public_key_;
  this_._impl_.~Impl_();
}

inline void* ConsensusState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConsensusState(arena);
}
constexpr auto ConsensusState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConsensusState),
                                            alignof(ConsensusState));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConsensusState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConsensusState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConsensusState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConsensusState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConsensusState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConsensusState>(), &ConsensusState::ByteSizeLong,
            &ConsensusState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_._cached_size_),
        false,
    },
    &ConsensusState::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConsensusState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 66, 2> ConsensusState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::ConsensusState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Any public_key = 1 [json_name = "publicKey"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.public_key_)}},
    // string diversifier = 2 [json_name = "diversifier"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.diversifier_)}},
    // uint64 timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConsensusState, _impl_.timestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Any public_key = 1 [json_name = "publicKey"];
    {PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string diversifier = 2 [json_name = "diversifier"];
    {PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.diversifier_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\56\0\13\0\0\0\0\0"
    "ibc.lightclients.solomachine.v2.ConsensusState"
    "diversifier"
  }},
};

PROTOBUF_NOINLINE void ConsensusState::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.ConsensusState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.diversifier_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.public_key_ != nullptr);
    _impl_.public_key_->Clear();
  }
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConsensusState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConsensusState& this_ = static_cast<const ConsensusState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConsensusState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConsensusState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.ConsensusState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any public_key = 1 [json_name = "publicKey"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.public_key_, this_._impl_.public_key_->GetCachedSize(), target,
                stream);
          }

          // string diversifier = 2 [json_name = "diversifier"];
          if (!this_._internal_diversifier().empty()) {
            const std::string& _s = this_._internal_diversifier();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.lightclients.solomachine.v2.ConsensusState.diversifier");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 timestamp = 3 [json_name = "timestamp"];
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.ConsensusState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConsensusState::ByteSizeLong(const MessageLite& base) {
          const ConsensusState& this_ = static_cast<const ConsensusState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConsensusState::ByteSizeLong() const {
          const ConsensusState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.ConsensusState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string diversifier = 2 [json_name = "diversifier"];
            if (!this_._internal_diversifier().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_diversifier());
            }
          }
           {
            // .google.protobuf.Any public_key = 1 [json_name = "publicKey"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.public_key_);
            }
          }
           {
            // uint64 timestamp = 3 [json_name = "timestamp"];
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConsensusState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConsensusState*>(&to_msg);
  auto& from = static_cast<const ConsensusState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.ConsensusState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_diversifier().empty()) {
    _this->_internal_set_diversifier(from._internal_diversifier());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.public_key_ != nullptr);
    if (_this->_impl_.public_key_ == nullptr) {
      _this->_impl_.public_key_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.public_key_);
    } else {
      _this->_impl_.public_key_->MergeFrom(*from._impl_.public_key_);
    }
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConsensusState::CopyFrom(const ConsensusState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.ConsensusState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConsensusState::InternalSwap(ConsensusState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.diversifier_, &other->_impl_.diversifier_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.timestamp_)
      + sizeof(ConsensusState::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(ConsensusState, _impl_.public_key_)>(
          reinterpret_cast<char*>(&_impl_.public_key_),
          reinterpret_cast<char*>(&other->_impl_.public_key_));
}

::google::protobuf::Metadata ConsensusState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Header::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Header>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Header, _impl_._has_bits_);
};

void Header::clear_new_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.new_public_key_ != nullptr) _impl_.new_public_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Header::Header(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.Header)
}
inline PROTOBUF_NDEBUG_INLINE Header::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::Header& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signature_(arena, from.signature_),
        new_diversifier_(arena, from.new_diversifier_) {}

Header::Header(
    ::google::protobuf::Arena* arena,
    const Header& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Header* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.new_public_key_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.new_public_key_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_),
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, sequence_) +
               sizeof(Impl_::timestamp_));

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.Header)
}
inline PROTOBUF_NDEBUG_INLINE Header::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        signature_(arena),
        new_diversifier_(arena) {}

inline void Header::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, new_public_key_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, new_public_key_) +
               sizeof(Impl_::timestamp_));
}
Header::~Header() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.Header)
  SharedDtor(*this);
}
inline void Header::SharedDtor(MessageLite& self) {
  Header& this_ = static_cast<Header&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signature_.Destroy();
  this_._impl_.new_diversifier_.Destroy();
  delete this_._impl_.new_public_key_;
  this_._impl_.~Impl_();
}

inline void* Header::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Header(arena);
}
constexpr auto Header::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Header),
                                            alignof(Header));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Header::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Header_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Header::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Header>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Header::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Header>(), &Header::ByteSizeLong,
            &Header::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Header, _impl_._cached_size_),
        false,
    },
    &Header::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Header::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 62, 2> Header::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Header, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::Header>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 sequence = 1 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Header, _impl_.sequence_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.sequence_)}},
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Header, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.timestamp_)}},
    // bytes signature = 3 [json_name = "signature"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.signature_)}},
    // .google.protobuf.Any new_public_key = 4 [json_name = "newPublicKey"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.new_public_key_)}},
    // string new_diversifier = 5 [json_name = "newDiversifier"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Header, _impl_.new_diversifier_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 sequence = 1 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.sequence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes signature = 3 [json_name = "signature"];
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.signature_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Any new_public_key = 4 [json_name = "newPublicKey"];
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.new_public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string new_diversifier = 5 [json_name = "newDiversifier"];
    {PROTOBUF_FIELD_OFFSET(Header, _impl_.new_diversifier_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\46\0\0\0\0\17\0\0"
    "ibc.lightclients.solomachine.v2.Header"
    "new_diversifier"
  }},
};

PROTOBUF_NOINLINE void Header::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.Header)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signature_.ClearToEmpty();
  _impl_.new_diversifier_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.new_public_key_ != nullptr);
    _impl_.new_public_key_->Clear();
  }
  ::memset(&_impl_.sequence_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.timestamp_) -
      reinterpret_cast<char*>(&_impl_.sequence_)) + sizeof(_impl_.timestamp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Header::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Header& this_ = static_cast<const Header&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Header::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Header& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.Header)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 sequence = 1 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_sequence(), target);
          }

          // uint64 timestamp = 2 [json_name = "timestamp"];
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_timestamp(), target);
          }

          // bytes signature = 3 [json_name = "signature"];
          if (!this_._internal_signature().empty()) {
            const std::string& _s = this_._internal_signature();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any new_public_key = 4 [json_name = "newPublicKey"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.new_public_key_, this_._impl_.new_public_key_->GetCachedSize(), target,
                stream);
          }

          // string new_diversifier = 5 [json_name = "newDiversifier"];
          if (!this_._internal_new_diversifier().empty()) {
            const std::string& _s = this_._internal_new_diversifier();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.lightclients.solomachine.v2.Header.new_diversifier");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.Header)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Header::ByteSizeLong(const MessageLite& base) {
          const Header& this_ = static_cast<const Header&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Header::ByteSizeLong() const {
          const Header& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.Header)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes signature = 3 [json_name = "signature"];
            if (!this_._internal_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_signature());
            }
            // string new_diversifier = 5 [json_name = "newDiversifier"];
            if (!this_._internal_new_diversifier().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_diversifier());
            }
          }
           {
            // .google.protobuf.Any new_public_key = 4 [json_name = "newPublicKey"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.new_public_key_);
            }
          }
           {
            // uint64 sequence = 1 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
            // uint64 timestamp = 2 [json_name = "timestamp"];
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Header::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Header*>(&to_msg);
  auto& from = static_cast<const Header&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.Header)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  if (!from._internal_new_diversifier().empty()) {
    _this->_internal_set_new_diversifier(from._internal_new_diversifier());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.new_public_key_ != nullptr);
    if (_this->_impl_.new_public_key_ == nullptr) {
      _this->_impl_.new_public_key_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.new_public_key_);
    } else {
      _this->_impl_.new_public_key_->MergeFrom(*from._impl_.new_public_key_);
    }
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Header::CopyFrom(const Header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.Header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Header::InternalSwap(Header* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_diversifier_, &other->_impl_.new_diversifier_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Header, _impl_.timestamp_)
      + sizeof(Header::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(Header, _impl_.new_public_key_)>(
          reinterpret_cast<char*>(&_impl_.new_public_key_),
          reinterpret_cast<char*>(&other->_impl_.new_public_key_));
}

::google::protobuf::Metadata Header::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Misbehaviour::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Misbehaviour>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_._has_bits_);
};

Misbehaviour::Misbehaviour(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.Misbehaviour)
}
inline PROTOBUF_NDEBUG_INLINE Misbehaviour::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::Misbehaviour& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        client_id_(arena, from.client_id_) {}

Misbehaviour::Misbehaviour(
    ::google::protobuf::Arena* arena,
    const Misbehaviour& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Misbehaviour* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.signature_one_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::lightclients::solomachine::v2::SignatureAndData>(
                              arena, *from._impl_.signature_one_)
                        : nullptr;
  _impl_.signature_two_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::ibc::lightclients::solomachine::v2::SignatureAndData>(
                              arena, *from._impl_.signature_two_)
                        : nullptr;
  _impl_.sequence_ = from._impl_.sequence_;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.Misbehaviour)
}
inline PROTOBUF_NDEBUG_INLINE Misbehaviour::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        client_id_(arena) {}

inline void Misbehaviour::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, signature_one_),
           0,
           offsetof(Impl_, sequence_) -
               offsetof(Impl_, signature_one_) +
               sizeof(Impl_::sequence_));
}
Misbehaviour::~Misbehaviour() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.Misbehaviour)
  SharedDtor(*this);
}
inline void Misbehaviour::SharedDtor(MessageLite& self) {
  Misbehaviour& this_ = static_cast<Misbehaviour&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.client_id_.Destroy();
  delete this_._impl_.signature_one_;
  delete this_._impl_.signature_two_;
  this_._impl_.~Impl_();
}

inline void* Misbehaviour::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Misbehaviour(arena);
}
constexpr auto Misbehaviour::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Misbehaviour),
                                            alignof(Misbehaviour));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Misbehaviour::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Misbehaviour_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Misbehaviour::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Misbehaviour>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Misbehaviour::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Misbehaviour>(), &Misbehaviour::ByteSizeLong,
            &Misbehaviour::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_._cached_size_),
        false,
    },
    &Misbehaviour::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Misbehaviour::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 62, 2> Misbehaviour::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::Misbehaviour>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ibc.lightclients.solomachine.v2.SignatureAndData signature_two = 4 [json_name = "signatureTwo"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.signature_two_)}},
    // string client_id = 1 [json_name = "clientId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.client_id_)}},
    // uint64 sequence = 2 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Misbehaviour, _impl_.sequence_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.sequence_)}},
    // .ibc.lightclients.solomachine.v2.SignatureAndData signature_one = 3 [json_name = "signatureOne"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.signature_one_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string client_id = 1 [json_name = "clientId"];
    {PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.client_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 sequence = 2 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.sequence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .ibc.lightclients.solomachine.v2.SignatureAndData signature_one = 3 [json_name = "signatureOne"];
    {PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.signature_one_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ibc.lightclients.solomachine.v2.SignatureAndData signature_two = 4 [json_name = "signatureTwo"];
    {PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.signature_two_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::SignatureAndData>()},
    {::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::SignatureAndData>()},
  }}, {{
    "\54\11\0\0\0\0\0\0"
    "ibc.lightclients.solomachine.v2.Misbehaviour"
    "client_id"
  }},
};

PROTOBUF_NOINLINE void Misbehaviour::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.Misbehaviour)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.client_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.signature_one_ != nullptr);
      _impl_.signature_one_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.signature_two_ != nullptr);
      _impl_.signature_two_->Clear();
    }
  }
  _impl_.sequence_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Misbehaviour::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Misbehaviour& this_ = static_cast<const Misbehaviour&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Misbehaviour::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Misbehaviour& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.Misbehaviour)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string client_id = 1 [json_name = "clientId"];
          if (!this_._internal_client_id().empty()) {
            const std::string& _s = this_._internal_client_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.lightclients.solomachine.v2.Misbehaviour.client_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 sequence = 2 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_sequence(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.lightclients.solomachine.v2.SignatureAndData signature_one = 3 [json_name = "signatureOne"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.signature_one_, this_._impl_.signature_one_->GetCachedSize(), target,
                stream);
          }

          // .ibc.lightclients.solomachine.v2.SignatureAndData signature_two = 4 [json_name = "signatureTwo"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.signature_two_, this_._impl_.signature_two_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.Misbehaviour)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Misbehaviour::ByteSizeLong(const MessageLite& base) {
          const Misbehaviour& this_ = static_cast<const Misbehaviour&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Misbehaviour::ByteSizeLong() const {
          const Misbehaviour& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.Misbehaviour)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string client_id = 1 [json_name = "clientId"];
            if (!this_._internal_client_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_client_id());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .ibc.lightclients.solomachine.v2.SignatureAndData signature_one = 3 [json_name = "signatureOne"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_one_);
            }
            // .ibc.lightclients.solomachine.v2.SignatureAndData signature_two = 4 [json_name = "signatureTwo"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_two_);
            }
          }
           {
            // uint64 sequence = 2 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Misbehaviour::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Misbehaviour*>(&to_msg);
  auto& from = static_cast<const Misbehaviour&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.Misbehaviour)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_client_id().empty()) {
    _this->_internal_set_client_id(from._internal_client_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.signature_one_ != nullptr);
      if (_this->_impl_.signature_one_ == nullptr) {
        _this->_impl_.signature_one_ =
            ::google::protobuf::Message::CopyConstruct<::ibc::lightclients::solomachine::v2::SignatureAndData>(arena, *from._impl_.signature_one_);
      } else {
        _this->_impl_.signature_one_->MergeFrom(*from._impl_.signature_one_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.signature_two_ != nullptr);
      if (_this->_impl_.signature_two_ == nullptr) {
        _this->_impl_.signature_two_ =
            ::google::protobuf::Message::CopyConstruct<::ibc::lightclients::solomachine::v2::SignatureAndData>(arena, *from._impl_.signature_two_);
      } else {
        _this->_impl_.signature_two_->MergeFrom(*from._impl_.signature_two_);
      }
    }
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Misbehaviour::CopyFrom(const Misbehaviour& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.Misbehaviour)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Misbehaviour::InternalSwap(Misbehaviour* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.client_id_, &other->_impl_.client_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.sequence_)
      + sizeof(Misbehaviour::_impl_.sequence_)
      - PROTOBUF_FIELD_OFFSET(Misbehaviour, _impl_.signature_one_)>(
          reinterpret_cast<char*>(&_impl_.signature_one_),
          reinterpret_cast<char*>(&other->_impl_.signature_one_));
}

::google::protobuf::Metadata Misbehaviour::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SignatureAndData::_Internal {
 public:
};

SignatureAndData::SignatureAndData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.SignatureAndData)
}
inline PROTOBUF_NDEBUG_INLINE SignatureAndData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::SignatureAndData& from_msg)
      : signature_(arena, from.signature_),
        data_(arena, from.data_),
        _cached_size_{0} {}

SignatureAndData::SignatureAndData(
    ::google::protobuf::Arena* arena,
    const SignatureAndData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SignatureAndData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, data_type_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::data_type_));

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.SignatureAndData)
}
inline PROTOBUF_NDEBUG_INLINE SignatureAndData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : signature_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void SignatureAndData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, data_type_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::data_type_));
}
SignatureAndData::~SignatureAndData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.SignatureAndData)
  SharedDtor(*this);
}
inline void SignatureAndData::SharedDtor(MessageLite& self) {
  SignatureAndData& this_ = static_cast<SignatureAndData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signature_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SignatureAndData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SignatureAndData(arena);
}
constexpr auto SignatureAndData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SignatureAndData),
                                            alignof(SignatureAndData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SignatureAndData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SignatureAndData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SignatureAndData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SignatureAndData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SignatureAndData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SignatureAndData>(), &SignatureAndData::ByteSizeLong,
            &SignatureAndData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_._cached_size_),
        false,
    },
    &SignatureAndData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SignatureAndData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> SignatureAndData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::SignatureAndData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SignatureAndData, _impl_.timestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.timestamp_)}},
    // bytes signature = 1 [json_name = "signature"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.signature_)}},
    // .ibc.lightclients.solomachine.v2.DataType data_type = 2 [json_name = "dataType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SignatureAndData, _impl_.data_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.data_type_)}},
    // bytes data = 3 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes signature = 1 [json_name = "signature"];
    {PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .ibc.lightclients.solomachine.v2.DataType data_type = 2 [json_name = "dataType"];
    {PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes data = 3 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SignatureAndData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.SignatureAndData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signature_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.data_type_) -
      reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.data_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SignatureAndData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SignatureAndData& this_ = static_cast<const SignatureAndData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SignatureAndData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SignatureAndData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.SignatureAndData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes signature = 1 [json_name = "signature"];
          if (!this_._internal_signature().empty()) {
            const std::string& _s = this_._internal_signature();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // .ibc.lightclients.solomachine.v2.DataType data_type = 2 [json_name = "dataType"];
          if (this_._internal_data_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_data_type(), target);
          }

          // bytes data = 3 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // uint64 timestamp = 4 [json_name = "timestamp"];
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.SignatureAndData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SignatureAndData::ByteSizeLong(const MessageLite& base) {
          const SignatureAndData& this_ = static_cast<const SignatureAndData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SignatureAndData::ByteSizeLong() const {
          const SignatureAndData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.SignatureAndData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes signature = 1 [json_name = "signature"];
            if (!this_._internal_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_signature());
            }
            // bytes data = 3 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // uint64 timestamp = 4 [json_name = "timestamp"];
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // .ibc.lightclients.solomachine.v2.DataType data_type = 2 [json_name = "dataType"];
            if (this_._internal_data_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_data_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SignatureAndData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SignatureAndData*>(&to_msg);
  auto& from = static_cast<const SignatureAndData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.SignatureAndData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_data_type() != 0) {
    _this->_impl_.data_type_ = from._impl_.data_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignatureAndData::CopyFrom(const SignatureAndData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.SignatureAndData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SignatureAndData::InternalSwap(SignatureAndData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.data_type_)
      + sizeof(SignatureAndData::_impl_.data_type_)
      - PROTOBUF_FIELD_OFFSET(SignatureAndData, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata SignatureAndData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TimestampedSignatureData::_Internal {
 public:
};

TimestampedSignatureData::TimestampedSignatureData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
}
inline PROTOBUF_NDEBUG_INLINE TimestampedSignatureData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::TimestampedSignatureData& from_msg)
      : signature_data_(arena, from.signature_data_),
        _cached_size_{0} {}

TimestampedSignatureData::TimestampedSignatureData(
    ::google::protobuf::Arena* arena,
    const TimestampedSignatureData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TimestampedSignatureData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
}
inline PROTOBUF_NDEBUG_INLINE TimestampedSignatureData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : signature_data_(arena),
        _cached_size_{0} {}

inline void TimestampedSignatureData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_ = {};
}
TimestampedSignatureData::~TimestampedSignatureData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
  SharedDtor(*this);
}
inline void TimestampedSignatureData::SharedDtor(MessageLite& self) {
  TimestampedSignatureData& this_ = static_cast<TimestampedSignatureData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.signature_data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TimestampedSignatureData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TimestampedSignatureData(arena);
}
constexpr auto TimestampedSignatureData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TimestampedSignatureData),
                                            alignof(TimestampedSignatureData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TimestampedSignatureData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TimestampedSignatureData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TimestampedSignatureData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TimestampedSignatureData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TimestampedSignatureData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TimestampedSignatureData>(), &TimestampedSignatureData::ByteSizeLong,
            &TimestampedSignatureData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TimestampedSignatureData, _impl_._cached_size_),
        false,
    },
    &TimestampedSignatureData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TimestampedSignatureData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TimestampedSignatureData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::TimestampedSignatureData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TimestampedSignatureData, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TimestampedSignatureData, _impl_.timestamp_)}},
    // bytes signature_data = 1 [json_name = "signatureData"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TimestampedSignatureData, _impl_.signature_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes signature_data = 1 [json_name = "signatureData"];
    {PROTOBUF_FIELD_OFFSET(TimestampedSignatureData, _impl_.signature_data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(TimestampedSignatureData, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TimestampedSignatureData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signature_data_.ClearToEmpty();
  _impl_.timestamp_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TimestampedSignatureData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TimestampedSignatureData& this_ = static_cast<const TimestampedSignatureData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TimestampedSignatureData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TimestampedSignatureData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes signature_data = 1 [json_name = "signatureData"];
          if (!this_._internal_signature_data().empty()) {
            const std::string& _s = this_._internal_signature_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // uint64 timestamp = 2 [json_name = "timestamp"];
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_timestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TimestampedSignatureData::ByteSizeLong(const MessageLite& base) {
          const TimestampedSignatureData& this_ = static_cast<const TimestampedSignatureData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TimestampedSignatureData::ByteSizeLong() const {
          const TimestampedSignatureData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes signature_data = 1 [json_name = "signatureData"];
            if (!this_._internal_signature_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_signature_data());
            }
            // uint64 timestamp = 2 [json_name = "timestamp"];
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TimestampedSignatureData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TimestampedSignatureData*>(&to_msg);
  auto& from = static_cast<const TimestampedSignatureData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signature_data().empty()) {
    _this->_internal_set_signature_data(from._internal_signature_data());
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimestampedSignatureData::CopyFrom(const TimestampedSignatureData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.TimestampedSignatureData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TimestampedSignatureData::InternalSwap(TimestampedSignatureData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_data_, &other->_impl_.signature_data_, arena);
        swap(_impl_.timestamp_, other->_impl_.timestamp_);
}

::google::protobuf::Metadata TimestampedSignatureData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SignBytes::_Internal {
 public:
};

SignBytes::SignBytes(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.SignBytes)
}
inline PROTOBUF_NDEBUG_INLINE SignBytes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::SignBytes& from_msg)
      : diversifier_(arena, from.diversifier_),
        data_(arena, from.data_),
        _cached_size_{0} {}

SignBytes::SignBytes(
    ::google::protobuf::Arena* arena,
    const SignBytes& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SignBytes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sequence_),
           offsetof(Impl_, data_type_) -
               offsetof(Impl_, sequence_) +
               sizeof(Impl_::data_type_));

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.SignBytes)
}
inline PROTOBUF_NDEBUG_INLINE SignBytes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : diversifier_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void SignBytes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sequence_),
           0,
           offsetof(Impl_, data_type_) -
               offsetof(Impl_, sequence_) +
               sizeof(Impl_::data_type_));
}
SignBytes::~SignBytes() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.SignBytes)
  SharedDtor(*this);
}
inline void SignBytes::SharedDtor(MessageLite& self) {
  SignBytes& this_ = static_cast<SignBytes&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.diversifier_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SignBytes::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SignBytes(arena);
}
constexpr auto SignBytes::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SignBytes),
                                            alignof(SignBytes));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SignBytes::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SignBytes_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SignBytes::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SignBytes>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SignBytes::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SignBytes>(), &SignBytes::ByteSizeLong,
            &SignBytes::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SignBytes, _impl_._cached_size_),
        false,
    },
    &SignBytes::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SignBytes::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 61, 2> SignBytes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::SignBytes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 sequence = 1 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SignBytes, _impl_.sequence_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.sequence_)}},
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SignBytes, _impl_.timestamp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.timestamp_)}},
    // string diversifier = 3 [json_name = "diversifier"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.diversifier_)}},
    // .ibc.lightclients.solomachine.v2.DataType data_type = 4 [json_name = "dataType"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SignBytes, _impl_.data_type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.data_type_)}},
    // bytes data = 5 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 sequence = 1 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.sequence_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 timestamp = 2 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string diversifier = 3 [json_name = "diversifier"];
    {PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.diversifier_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ibc.lightclients.solomachine.v2.DataType data_type = 4 [json_name = "dataType"];
    {PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.data_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes data = 5 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\0\0\13\0\0\0\0"
    "ibc.lightclients.solomachine.v2.SignBytes"
    "diversifier"
  }},
};

PROTOBUF_NOINLINE void SignBytes::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.SignBytes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.diversifier_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.sequence_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.data_type_) -
      reinterpret_cast<char*>(&_impl_.sequence_)) + sizeof(_impl_.data_type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SignBytes::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SignBytes& this_ = static_cast<const SignBytes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SignBytes::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SignBytes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.SignBytes)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 sequence = 1 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_sequence(), target);
          }

          // uint64 timestamp = 2 [json_name = "timestamp"];
          if (this_._internal_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_timestamp(), target);
          }

          // string diversifier = 3 [json_name = "diversifier"];
          if (!this_._internal_diversifier().empty()) {
            const std::string& _s = this_._internal_diversifier();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.lightclients.solomachine.v2.SignBytes.diversifier");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // .ibc.lightclients.solomachine.v2.DataType data_type = 4 [json_name = "dataType"];
          if (this_._internal_data_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_data_type(), target);
          }

          // bytes data = 5 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.SignBytes)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SignBytes::ByteSizeLong(const MessageLite& base) {
          const SignBytes& this_ = static_cast<const SignBytes&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SignBytes::ByteSizeLong() const {
          const SignBytes& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.SignBytes)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string diversifier = 3 [json_name = "diversifier"];
            if (!this_._internal_diversifier().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_diversifier());
            }
            // bytes data = 5 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // uint64 sequence = 1 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
            // uint64 timestamp = 2 [json_name = "timestamp"];
            if (this_._internal_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_timestamp());
            }
            // .ibc.lightclients.solomachine.v2.DataType data_type = 4 [json_name = "dataType"];
            if (this_._internal_data_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_data_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SignBytes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SignBytes*>(&to_msg);
  auto& from = static_cast<const SignBytes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.SignBytes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_diversifier().empty()) {
    _this->_internal_set_diversifier(from._internal_diversifier());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  if (from._internal_timestamp() != 0) {
    _this->_impl_.timestamp_ = from._impl_.timestamp_;
  }
  if (from._internal_data_type() != 0) {
    _this->_impl_.data_type_ = from._impl_.data_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignBytes::CopyFrom(const SignBytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.SignBytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SignBytes::InternalSwap(SignBytes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.diversifier_, &other->_impl_.diversifier_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.data_type_)
      + sizeof(SignBytes::_impl_.data_type_)
      - PROTOBUF_FIELD_OFFSET(SignBytes, _impl_.sequence_)>(
          reinterpret_cast<char*>(&_impl_.sequence_),
          reinterpret_cast<char*>(&other->_impl_.sequence_));
}

::google::protobuf::Metadata SignBytes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HeaderData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HeaderData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HeaderData, _impl_._has_bits_);
};

void HeaderData::clear_new_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.new_pub_key_ != nullptr) _impl_.new_pub_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HeaderData::HeaderData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.HeaderData)
}
inline PROTOBUF_NDEBUG_INLINE HeaderData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::HeaderData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        new_diversifier_(arena, from.new_diversifier_) {}

HeaderData::HeaderData(
    ::google::protobuf::Arena* arena,
    const HeaderData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HeaderData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.new_pub_key_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.new_pub_key_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.HeaderData)
}
inline PROTOBUF_NDEBUG_INLINE HeaderData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        new_diversifier_(arena) {}

inline void HeaderData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.new_pub_key_ = {};
}
HeaderData::~HeaderData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.HeaderData)
  SharedDtor(*this);
}
inline void HeaderData::SharedDtor(MessageLite& self) {
  HeaderData& this_ = static_cast<HeaderData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.new_diversifier_.Destroy();
  delete this_._impl_.new_pub_key_;
  this_._impl_.~Impl_();
}

inline void* HeaderData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HeaderData(arena);
}
constexpr auto HeaderData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HeaderData),
                                            alignof(HeaderData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HeaderData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HeaderData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HeaderData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HeaderData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HeaderData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HeaderData>(), &HeaderData::ByteSizeLong,
            &HeaderData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HeaderData, _impl_._cached_size_),
        false,
    },
    &HeaderData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HeaderData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 66, 2> HeaderData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HeaderData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::HeaderData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string new_diversifier = 2 [json_name = "newDiversifier"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(HeaderData, _impl_.new_diversifier_)}},
    // .google.protobuf.Any new_pub_key = 1 [json_name = "newPubKey"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HeaderData, _impl_.new_pub_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Any new_pub_key = 1 [json_name = "newPubKey"];
    {PROTOBUF_FIELD_OFFSET(HeaderData, _impl_.new_pub_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string new_diversifier = 2 [json_name = "newDiversifier"];
    {PROTOBUF_FIELD_OFFSET(HeaderData, _impl_.new_diversifier_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\52\0\17\0\0\0\0\0"
    "ibc.lightclients.solomachine.v2.HeaderData"
    "new_diversifier"
  }},
};

PROTOBUF_NOINLINE void HeaderData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.HeaderData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.new_diversifier_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.new_pub_key_ != nullptr);
    _impl_.new_pub_key_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HeaderData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HeaderData& this_ = static_cast<const HeaderData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HeaderData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HeaderData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.HeaderData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any new_pub_key = 1 [json_name = "newPubKey"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.new_pub_key_, this_._impl_.new_pub_key_->GetCachedSize(), target,
                stream);
          }

          // string new_diversifier = 2 [json_name = "newDiversifier"];
          if (!this_._internal_new_diversifier().empty()) {
            const std::string& _s = this_._internal_new_diversifier();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ibc.lightclients.solomachine.v2.HeaderData.new_diversifier");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.HeaderData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HeaderData::ByteSizeLong(const MessageLite& base) {
          const HeaderData& this_ = static_cast<const HeaderData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HeaderData::ByteSizeLong() const {
          const HeaderData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.HeaderData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string new_diversifier = 2 [json_name = "newDiversifier"];
            if (!this_._internal_new_diversifier().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_diversifier());
            }
          }
           {
            // .google.protobuf.Any new_pub_key = 1 [json_name = "newPubKey"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.new_pub_key_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HeaderData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HeaderData*>(&to_msg);
  auto& from = static_cast<const HeaderData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.HeaderData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_new_diversifier().empty()) {
    _this->_internal_set_new_diversifier(from._internal_new_diversifier());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.new_pub_key_ != nullptr);
    if (_this->_impl_.new_pub_key_ == nullptr) {
      _this->_impl_.new_pub_key_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.new_pub_key_);
    } else {
      _this->_impl_.new_pub_key_->MergeFrom(*from._impl_.new_pub_key_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HeaderData::CopyFrom(const HeaderData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.HeaderData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HeaderData::InternalSwap(HeaderData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_diversifier_, &other->_impl_.new_diversifier_, arena);
  swap(_impl_.new_pub_key_, other->_impl_.new_pub_key_);
}

::google::protobuf::Metadata HeaderData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClientStateData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ClientStateData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClientStateData, _impl_._has_bits_);
};

void ClientStateData::clear_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.client_state_ != nullptr) _impl_.client_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ClientStateData::ClientStateData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.ClientStateData)
}
inline PROTOBUF_NDEBUG_INLINE ClientStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::ClientStateData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_) {}

ClientStateData::ClientStateData(
    ::google::protobuf::Arena* arena,
    const ClientStateData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClientStateData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.client_state_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.client_state_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.ClientStateData)
}
inline PROTOBUF_NDEBUG_INLINE ClientStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena) {}

inline void ClientStateData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.client_state_ = {};
}
ClientStateData::~ClientStateData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.ClientStateData)
  SharedDtor(*this);
}
inline void ClientStateData::SharedDtor(MessageLite& self) {
  ClientStateData& this_ = static_cast<ClientStateData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  delete this_._impl_.client_state_;
  this_._impl_.~Impl_();
}

inline void* ClientStateData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClientStateData(arena);
}
constexpr auto ClientStateData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClientStateData),
                                            alignof(ClientStateData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClientStateData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClientStateData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClientStateData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClientStateData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClientStateData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClientStateData>(), &ClientStateData::ByteSizeLong,
            &ClientStateData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClientStateData, _impl_._cached_size_),
        false,
    },
    &ClientStateData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClientStateData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ClientStateData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClientStateData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::ClientStateData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any client_state = 2 [json_name = "clientState"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ClientStateData, _impl_.client_state_)}},
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClientStateData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(ClientStateData, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Any client_state = 2 [json_name = "clientState"];
    {PROTOBUF_FIELD_OFFSET(ClientStateData, _impl_.client_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ClientStateData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.ClientStateData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.client_state_ != nullptr);
    _impl_.client_state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClientStateData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClientStateData& this_ = static_cast<const ClientStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClientStateData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClientStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.ClientStateData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any client_state = 2 [json_name = "clientState"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.client_state_, this_._impl_.client_state_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.ClientStateData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClientStateData::ByteSizeLong(const MessageLite& base) {
          const ClientStateData& this_ = static_cast<const ClientStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClientStateData::ByteSizeLong() const {
          const ClientStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.ClientStateData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
          }
           {
            // .google.protobuf.Any client_state = 2 [json_name = "clientState"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.client_state_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClientStateData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClientStateData*>(&to_msg);
  auto& from = static_cast<const ClientStateData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.ClientStateData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.client_state_ != nullptr);
    if (_this->_impl_.client_state_ == nullptr) {
      _this->_impl_.client_state_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.client_state_);
    } else {
      _this->_impl_.client_state_->MergeFrom(*from._impl_.client_state_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClientStateData::CopyFrom(const ClientStateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.ClientStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClientStateData::InternalSwap(ClientStateData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  swap(_impl_.client_state_, other->_impl_.client_state_);
}

::google::protobuf::Metadata ClientStateData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConsensusStateData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ConsensusStateData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConsensusStateData, _impl_._has_bits_);
};

void ConsensusStateData::clear_consensus_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consensus_state_ != nullptr) _impl_.consensus_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ConsensusStateData::ConsensusStateData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.ConsensusStateData)
}
inline PROTOBUF_NDEBUG_INLINE ConsensusStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::ConsensusStateData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_) {}

ConsensusStateData::ConsensusStateData(
    ::google::protobuf::Arena* arena,
    const ConsensusStateData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConsensusStateData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.consensus_state_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.consensus_state_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.ConsensusStateData)
}
inline PROTOBUF_NDEBUG_INLINE ConsensusStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena) {}

inline void ConsensusStateData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.consensus_state_ = {};
}
ConsensusStateData::~ConsensusStateData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.ConsensusStateData)
  SharedDtor(*this);
}
inline void ConsensusStateData::SharedDtor(MessageLite& self) {
  ConsensusStateData& this_ = static_cast<ConsensusStateData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  delete this_._impl_.consensus_state_;
  this_._impl_.~Impl_();
}

inline void* ConsensusStateData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConsensusStateData(arena);
}
constexpr auto ConsensusStateData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConsensusStateData),
                                            alignof(ConsensusStateData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConsensusStateData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConsensusStateData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConsensusStateData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConsensusStateData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConsensusStateData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConsensusStateData>(), &ConsensusStateData::ByteSizeLong,
            &ConsensusStateData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConsensusStateData, _impl_._cached_size_),
        false,
    },
    &ConsensusStateData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConsensusStateData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ConsensusStateData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConsensusStateData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::ConsensusStateData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any consensus_state = 2 [json_name = "consensusState"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConsensusStateData, _impl_.consensus_state_)}},
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConsensusStateData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(ConsensusStateData, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Any consensus_state = 2 [json_name = "consensusState"];
    {PROTOBUF_FIELD_OFFSET(ConsensusStateData, _impl_.consensus_state_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ConsensusStateData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.ConsensusStateData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.consensus_state_ != nullptr);
    _impl_.consensus_state_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConsensusStateData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConsensusStateData& this_ = static_cast<const ConsensusStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConsensusStateData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConsensusStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.ConsensusStateData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any consensus_state = 2 [json_name = "consensusState"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.consensus_state_, this_._impl_.consensus_state_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.ConsensusStateData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConsensusStateData::ByteSizeLong(const MessageLite& base) {
          const ConsensusStateData& this_ = static_cast<const ConsensusStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConsensusStateData::ByteSizeLong() const {
          const ConsensusStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.ConsensusStateData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
          }
           {
            // .google.protobuf.Any consensus_state = 2 [json_name = "consensusState"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.consensus_state_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConsensusStateData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConsensusStateData*>(&to_msg);
  auto& from = static_cast<const ConsensusStateData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.ConsensusStateData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.consensus_state_ != nullptr);
    if (_this->_impl_.consensus_state_ == nullptr) {
      _this->_impl_.consensus_state_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.consensus_state_);
    } else {
      _this->_impl_.consensus_state_->MergeFrom(*from._impl_.consensus_state_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConsensusStateData::CopyFrom(const ConsensusStateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.ConsensusStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConsensusStateData::InternalSwap(ConsensusStateData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  swap(_impl_.consensus_state_, other->_impl_.consensus_state_);
}

::google::protobuf::Metadata ConsensusStateData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConnectionStateData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ConnectionStateData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConnectionStateData, _impl_._has_bits_);
};

void ConnectionStateData::clear_connection() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.connection_ != nullptr) _impl_.connection_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ConnectionStateData::ConnectionStateData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.ConnectionStateData)
}
inline PROTOBUF_NDEBUG_INLINE ConnectionStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::ConnectionStateData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_) {}

ConnectionStateData::ConnectionStateData(
    ::google::protobuf::Arena* arena,
    const ConnectionStateData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConnectionStateData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.connection_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::core::connection::v1::ConnectionEnd>(
                              arena, *from._impl_.connection_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.ConnectionStateData)
}
inline PROTOBUF_NDEBUG_INLINE ConnectionStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena) {}

inline void ConnectionStateData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.connection_ = {};
}
ConnectionStateData::~ConnectionStateData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.ConnectionStateData)
  SharedDtor(*this);
}
inline void ConnectionStateData::SharedDtor(MessageLite& self) {
  ConnectionStateData& this_ = static_cast<ConnectionStateData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  delete this_._impl_.connection_;
  this_._impl_.~Impl_();
}

inline void* ConnectionStateData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ConnectionStateData(arena);
}
constexpr auto ConnectionStateData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConnectionStateData),
                                            alignof(ConnectionStateData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ConnectionStateData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ConnectionStateData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ConnectionStateData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ConnectionStateData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ConnectionStateData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ConnectionStateData>(), &ConnectionStateData::ByteSizeLong,
            &ConnectionStateData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ConnectionStateData, _impl_._cached_size_),
        false,
    },
    &ConnectionStateData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ConnectionStateData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ConnectionStateData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConnectionStateData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::ConnectionStateData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ibc.core.connection.v1.ConnectionEnd connection = 2 [json_name = "connection"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConnectionStateData, _impl_.connection_)}},
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ConnectionStateData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(ConnectionStateData, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .ibc.core.connection.v1.ConnectionEnd connection = 2 [json_name = "connection"];
    {PROTOBUF_FIELD_OFFSET(ConnectionStateData, _impl_.connection_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::core::connection::v1::ConnectionEnd>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ConnectionStateData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.ConnectionStateData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.connection_ != nullptr);
    _impl_.connection_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ConnectionStateData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ConnectionStateData& this_ = static_cast<const ConnectionStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ConnectionStateData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ConnectionStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.ConnectionStateData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.core.connection.v1.ConnectionEnd connection = 2 [json_name = "connection"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.connection_, this_._impl_.connection_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.ConnectionStateData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ConnectionStateData::ByteSizeLong(const MessageLite& base) {
          const ConnectionStateData& this_ = static_cast<const ConnectionStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ConnectionStateData::ByteSizeLong() const {
          const ConnectionStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.ConnectionStateData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
          }
           {
            // .ibc.core.connection.v1.ConnectionEnd connection = 2 [json_name = "connection"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.connection_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ConnectionStateData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectionStateData*>(&to_msg);
  auto& from = static_cast<const ConnectionStateData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.ConnectionStateData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.connection_ != nullptr);
    if (_this->_impl_.connection_ == nullptr) {
      _this->_impl_.connection_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::core::connection::v1::ConnectionEnd>(arena, *from._impl_.connection_);
    } else {
      _this->_impl_.connection_->MergeFrom(*from._impl_.connection_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectionStateData::CopyFrom(const ConnectionStateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.ConnectionStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConnectionStateData::InternalSwap(ConnectionStateData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  swap(_impl_.connection_, other->_impl_.connection_);
}

::google::protobuf::Metadata ConnectionStateData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChannelStateData::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ChannelStateData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ChannelStateData, _impl_._has_bits_);
};

void ChannelStateData::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ != nullptr) _impl_.channel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ChannelStateData::ChannelStateData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.ChannelStateData)
}
inline PROTOBUF_NDEBUG_INLINE ChannelStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::ChannelStateData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        path_(arena, from.path_) {}

ChannelStateData::ChannelStateData(
    ::google::protobuf::Arena* arena,
    const ChannelStateData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChannelStateData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.channel_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::ibc::core::channel::v1::Channel>(
                              arena, *from._impl_.channel_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.ChannelStateData)
}
inline PROTOBUF_NDEBUG_INLINE ChannelStateData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        path_(arena) {}

inline void ChannelStateData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.channel_ = {};
}
ChannelStateData::~ChannelStateData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.ChannelStateData)
  SharedDtor(*this);
}
inline void ChannelStateData::SharedDtor(MessageLite& self) {
  ChannelStateData& this_ = static_cast<ChannelStateData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  delete this_._impl_.channel_;
  this_._impl_.~Impl_();
}

inline void* ChannelStateData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ChannelStateData(arena);
}
constexpr auto ChannelStateData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ChannelStateData),
                                            alignof(ChannelStateData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ChannelStateData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ChannelStateData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ChannelStateData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ChannelStateData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ChannelStateData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ChannelStateData>(), &ChannelStateData::ByteSizeLong,
            &ChannelStateData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ChannelStateData, _impl_._cached_size_),
        false,
    },
    &ChannelStateData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ChannelStateData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ChannelStateData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ChannelStateData, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::ChannelStateData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .ibc.core.channel.v1.Channel channel = 2 [json_name = "channel"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ChannelStateData, _impl_.channel_)}},
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelStateData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(ChannelStateData, _impl_.path_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .ibc.core.channel.v1.Channel channel = 2 [json_name = "channel"];
    {PROTOBUF_FIELD_OFFSET(ChannelStateData, _impl_.channel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ibc::core::channel::v1::Channel>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ChannelStateData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.ChannelStateData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.channel_ != nullptr);
    _impl_.channel_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ChannelStateData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ChannelStateData& this_ = static_cast<const ChannelStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ChannelStateData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ChannelStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.ChannelStateData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .ibc.core.channel.v1.Channel channel = 2 [json_name = "channel"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.channel_, this_._impl_.channel_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.ChannelStateData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ChannelStateData::ByteSizeLong(const MessageLite& base) {
          const ChannelStateData& this_ = static_cast<const ChannelStateData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ChannelStateData::ByteSizeLong() const {
          const ChannelStateData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.ChannelStateData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
          }
           {
            // .ibc.core.channel.v1.Channel channel = 2 [json_name = "channel"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.channel_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ChannelStateData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelStateData*>(&to_msg);
  auto& from = static_cast<const ChannelStateData&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.ChannelStateData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.channel_ != nullptr);
    if (_this->_impl_.channel_ == nullptr) {
      _this->_impl_.channel_ =
          ::google::protobuf::Message::CopyConstruct<::ibc::core::channel::v1::Channel>(arena, *from._impl_.channel_);
    } else {
      _this->_impl_.channel_->MergeFrom(*from._impl_.channel_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelStateData::CopyFrom(const ChannelStateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.ChannelStateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelStateData::InternalSwap(ChannelStateData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  swap(_impl_.channel_, other->_impl_.channel_);
}

::google::protobuf::Metadata ChannelStateData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketCommitmentData::_Internal {
 public:
};

PacketCommitmentData::PacketCommitmentData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.PacketCommitmentData)
}
inline PROTOBUF_NDEBUG_INLINE PacketCommitmentData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::PacketCommitmentData& from_msg)
      : path_(arena, from.path_),
        commitment_(arena, from.commitment_),
        _cached_size_{0} {}

PacketCommitmentData::PacketCommitmentData(
    ::google::protobuf::Arena* arena,
    const PacketCommitmentData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketCommitmentData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.PacketCommitmentData)
}
inline PROTOBUF_NDEBUG_INLINE PacketCommitmentData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        commitment_(arena),
        _cached_size_{0} {}

inline void PacketCommitmentData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PacketCommitmentData::~PacketCommitmentData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.PacketCommitmentData)
  SharedDtor(*this);
}
inline void PacketCommitmentData::SharedDtor(MessageLite& self) {
  PacketCommitmentData& this_ = static_cast<PacketCommitmentData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.commitment_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketCommitmentData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketCommitmentData(arena);
}
constexpr auto PacketCommitmentData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketCommitmentData),
                                            alignof(PacketCommitmentData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketCommitmentData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketCommitmentData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketCommitmentData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketCommitmentData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketCommitmentData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketCommitmentData>(), &PacketCommitmentData::ByteSizeLong,
            &PacketCommitmentData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketCommitmentData, _impl_._cached_size_),
        false,
    },
    &PacketCommitmentData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketCommitmentData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PacketCommitmentData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::PacketCommitmentData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes commitment = 2 [json_name = "commitment"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PacketCommitmentData, _impl_.commitment_)}},
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PacketCommitmentData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(PacketCommitmentData, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes commitment = 2 [json_name = "commitment"];
    {PROTOBUF_FIELD_OFFSET(PacketCommitmentData, _impl_.commitment_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PacketCommitmentData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.PacketCommitmentData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.commitment_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketCommitmentData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketCommitmentData& this_ = static_cast<const PacketCommitmentData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketCommitmentData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketCommitmentData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.PacketCommitmentData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes commitment = 2 [json_name = "commitment"];
          if (!this_._internal_commitment().empty()) {
            const std::string& _s = this_._internal_commitment();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.PacketCommitmentData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketCommitmentData::ByteSizeLong(const MessageLite& base) {
          const PacketCommitmentData& this_ = static_cast<const PacketCommitmentData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketCommitmentData::ByteSizeLong() const {
          const PacketCommitmentData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.PacketCommitmentData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
            // bytes commitment = 2 [json_name = "commitment"];
            if (!this_._internal_commitment().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_commitment());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketCommitmentData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketCommitmentData*>(&to_msg);
  auto& from = static_cast<const PacketCommitmentData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.PacketCommitmentData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_commitment().empty()) {
    _this->_internal_set_commitment(from._internal_commitment());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketCommitmentData::CopyFrom(const PacketCommitmentData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.PacketCommitmentData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketCommitmentData::InternalSwap(PacketCommitmentData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.commitment_, &other->_impl_.commitment_, arena);
}

::google::protobuf::Metadata PacketCommitmentData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketAcknowledgementData::_Internal {
 public:
};

PacketAcknowledgementData::PacketAcknowledgementData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
}
inline PROTOBUF_NDEBUG_INLINE PacketAcknowledgementData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::PacketAcknowledgementData& from_msg)
      : path_(arena, from.path_),
        acknowledgement_(arena, from.acknowledgement_),
        _cached_size_{0} {}

PacketAcknowledgementData::PacketAcknowledgementData(
    ::google::protobuf::Arena* arena,
    const PacketAcknowledgementData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketAcknowledgementData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
}
inline PROTOBUF_NDEBUG_INLINE PacketAcknowledgementData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        acknowledgement_(arena),
        _cached_size_{0} {}

inline void PacketAcknowledgementData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PacketAcknowledgementData::~PacketAcknowledgementData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
  SharedDtor(*this);
}
inline void PacketAcknowledgementData::SharedDtor(MessageLite& self) {
  PacketAcknowledgementData& this_ = static_cast<PacketAcknowledgementData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.acknowledgement_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketAcknowledgementData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketAcknowledgementData(arena);
}
constexpr auto PacketAcknowledgementData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketAcknowledgementData),
                                            alignof(PacketAcknowledgementData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketAcknowledgementData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketAcknowledgementData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketAcknowledgementData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketAcknowledgementData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketAcknowledgementData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketAcknowledgementData>(), &PacketAcknowledgementData::ByteSizeLong,
            &PacketAcknowledgementData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketAcknowledgementData, _impl_._cached_size_),
        false,
    },
    &PacketAcknowledgementData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketAcknowledgementData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PacketAcknowledgementData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::PacketAcknowledgementData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes acknowledgement = 2 [json_name = "acknowledgement"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PacketAcknowledgementData, _impl_.acknowledgement_)}},
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PacketAcknowledgementData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(PacketAcknowledgementData, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes acknowledgement = 2 [json_name = "acknowledgement"];
    {PROTOBUF_FIELD_OFFSET(PacketAcknowledgementData, _impl_.acknowledgement_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PacketAcknowledgementData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.acknowledgement_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketAcknowledgementData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketAcknowledgementData& this_ = static_cast<const PacketAcknowledgementData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketAcknowledgementData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketAcknowledgementData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes acknowledgement = 2 [json_name = "acknowledgement"];
          if (!this_._internal_acknowledgement().empty()) {
            const std::string& _s = this_._internal_acknowledgement();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketAcknowledgementData::ByteSizeLong(const MessageLite& base) {
          const PacketAcknowledgementData& this_ = static_cast<const PacketAcknowledgementData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketAcknowledgementData::ByteSizeLong() const {
          const PacketAcknowledgementData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
            // bytes acknowledgement = 2 [json_name = "acknowledgement"];
            if (!this_._internal_acknowledgement().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_acknowledgement());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketAcknowledgementData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketAcknowledgementData*>(&to_msg);
  auto& from = static_cast<const PacketAcknowledgementData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_acknowledgement().empty()) {
    _this->_internal_set_acknowledgement(from._internal_acknowledgement());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketAcknowledgementData::CopyFrom(const PacketAcknowledgementData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.PacketAcknowledgementData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketAcknowledgementData::InternalSwap(PacketAcknowledgementData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.acknowledgement_, &other->_impl_.acknowledgement_, arena);
}

::google::protobuf::Metadata PacketAcknowledgementData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PacketReceiptAbsenceData::_Internal {
 public:
};

PacketReceiptAbsenceData::PacketReceiptAbsenceData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
}
inline PROTOBUF_NDEBUG_INLINE PacketReceiptAbsenceData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::PacketReceiptAbsenceData& from_msg)
      : path_(arena, from.path_),
        _cached_size_{0} {}

PacketReceiptAbsenceData::PacketReceiptAbsenceData(
    ::google::protobuf::Arena* arena,
    const PacketReceiptAbsenceData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PacketReceiptAbsenceData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
}
inline PROTOBUF_NDEBUG_INLINE PacketReceiptAbsenceData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        _cached_size_{0} {}

inline void PacketReceiptAbsenceData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PacketReceiptAbsenceData::~PacketReceiptAbsenceData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
  SharedDtor(*this);
}
inline void PacketReceiptAbsenceData::SharedDtor(MessageLite& self) {
  PacketReceiptAbsenceData& this_ = static_cast<PacketReceiptAbsenceData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PacketReceiptAbsenceData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PacketReceiptAbsenceData(arena);
}
constexpr auto PacketReceiptAbsenceData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PacketReceiptAbsenceData),
                                            alignof(PacketReceiptAbsenceData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PacketReceiptAbsenceData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PacketReceiptAbsenceData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PacketReceiptAbsenceData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PacketReceiptAbsenceData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PacketReceiptAbsenceData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PacketReceiptAbsenceData>(), &PacketReceiptAbsenceData::ByteSizeLong,
            &PacketReceiptAbsenceData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PacketReceiptAbsenceData, _impl_._cached_size_),
        false,
    },
    &PacketReceiptAbsenceData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PacketReceiptAbsenceData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PacketReceiptAbsenceData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::PacketReceiptAbsenceData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PacketReceiptAbsenceData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(PacketReceiptAbsenceData, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PacketReceiptAbsenceData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PacketReceiptAbsenceData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PacketReceiptAbsenceData& this_ = static_cast<const PacketReceiptAbsenceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PacketReceiptAbsenceData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PacketReceiptAbsenceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PacketReceiptAbsenceData::ByteSizeLong(const MessageLite& base) {
          const PacketReceiptAbsenceData& this_ = static_cast<const PacketReceiptAbsenceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PacketReceiptAbsenceData::ByteSizeLong() const {
          const PacketReceiptAbsenceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PacketReceiptAbsenceData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PacketReceiptAbsenceData*>(&to_msg);
  auto& from = static_cast<const PacketReceiptAbsenceData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PacketReceiptAbsenceData::CopyFrom(const PacketReceiptAbsenceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.PacketReceiptAbsenceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PacketReceiptAbsenceData::InternalSwap(PacketReceiptAbsenceData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
}

::google::protobuf::Metadata PacketReceiptAbsenceData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NextSequenceRecvData::_Internal {
 public:
};

NextSequenceRecvData::NextSequenceRecvData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
}
inline PROTOBUF_NDEBUG_INLINE NextSequenceRecvData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ibc::lightclients::solomachine::v2::NextSequenceRecvData& from_msg)
      : path_(arena, from.path_),
        _cached_size_{0} {}

NextSequenceRecvData::NextSequenceRecvData(
    ::google::protobuf::Arena* arena,
    const NextSequenceRecvData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NextSequenceRecvData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.next_seq_recv_ = from._impl_.next_seq_recv_;

  // @@protoc_insertion_point(copy_constructor:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
}
inline PROTOBUF_NDEBUG_INLINE NextSequenceRecvData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        _cached_size_{0} {}

inline void NextSequenceRecvData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.next_seq_recv_ = {};
}
NextSequenceRecvData::~NextSequenceRecvData() {
  // @@protoc_insertion_point(destructor:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
  SharedDtor(*this);
}
inline void NextSequenceRecvData::SharedDtor(MessageLite& self) {
  NextSequenceRecvData& this_ = static_cast<NextSequenceRecvData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* NextSequenceRecvData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NextSequenceRecvData(arena);
}
constexpr auto NextSequenceRecvData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NextSequenceRecvData),
                                            alignof(NextSequenceRecvData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NextSequenceRecvData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NextSequenceRecvData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NextSequenceRecvData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NextSequenceRecvData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NextSequenceRecvData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NextSequenceRecvData>(), &NextSequenceRecvData::ByteSizeLong,
            &NextSequenceRecvData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NextSequenceRecvData, _impl_._cached_size_),
        false,
    },
    &NextSequenceRecvData::kDescriptorMethods,
    &descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NextSequenceRecvData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> NextSequenceRecvData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ibc::lightclients::solomachine::v2::NextSequenceRecvData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 next_seq_recv = 2 [json_name = "nextSeqRecv"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(NextSequenceRecvData, _impl_.next_seq_recv_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NextSequenceRecvData, _impl_.next_seq_recv_)}},
    // bytes path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NextSequenceRecvData, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(NextSequenceRecvData, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 next_seq_recv = 2 [json_name = "nextSeqRecv"];
    {PROTOBUF_FIELD_OFFSET(NextSequenceRecvData, _impl_.next_seq_recv_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NextSequenceRecvData::Clear() {
// @@protoc_insertion_point(message_clear_start:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  _impl_.next_seq_recv_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NextSequenceRecvData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NextSequenceRecvData& this_ = static_cast<const NextSequenceRecvData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NextSequenceRecvData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NextSequenceRecvData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes path = 1 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // uint64 next_seq_recv = 2 [json_name = "nextSeqRecv"];
          if (this_._internal_next_seq_recv() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_next_seq_recv(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NextSequenceRecvData::ByteSizeLong(const MessageLite& base) {
          const NextSequenceRecvData& this_ = static_cast<const NextSequenceRecvData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NextSequenceRecvData::ByteSizeLong() const {
          const NextSequenceRecvData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes path = 1 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_path());
            }
            // uint64 next_seq_recv = 2 [json_name = "nextSeqRecv"];
            if (this_._internal_next_seq_recv() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_next_seq_recv());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NextSequenceRecvData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NextSequenceRecvData*>(&to_msg);
  auto& from = static_cast<const NextSequenceRecvData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (from._internal_next_seq_recv() != 0) {
    _this->_impl_.next_seq_recv_ = from._impl_.next_seq_recv_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NextSequenceRecvData::CopyFrom(const NextSequenceRecvData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ibc.lightclients.solomachine.v2.NextSequenceRecvData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NextSequenceRecvData::InternalSwap(NextSequenceRecvData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
        swap(_impl_.next_seq_recv_, other->_impl_.next_seq_recv_);
}

::google::protobuf::Metadata NextSequenceRecvData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace solomachine
}  // namespace lightclients
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ibc_2flightclients_2fsolomachine_2fv2_2fsolomachine_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
