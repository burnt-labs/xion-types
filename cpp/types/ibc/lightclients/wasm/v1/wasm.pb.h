// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ibc/lightclients/wasm/v1/wasm.proto
// Protobuf C++ Version: 5.29.4

#ifndef ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto_2epb_2eh
#define ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "ibc/core/client/v1/client.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto;
namespace ibc {
namespace lightclients {
namespace wasm {
namespace v1 {
class Checksums;
struct ChecksumsDefaultTypeInternal;
extern ChecksumsDefaultTypeInternal _Checksums_default_instance_;
class ClientMessage;
struct ClientMessageDefaultTypeInternal;
extern ClientMessageDefaultTypeInternal _ClientMessage_default_instance_;
class ClientState;
struct ClientStateDefaultTypeInternal;
extern ClientStateDefaultTypeInternal _ClientState_default_instance_;
class ConsensusState;
struct ConsensusStateDefaultTypeInternal;
extern ConsensusStateDefaultTypeInternal _ConsensusState_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace lightclients
}  // namespace ibc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ibc {
namespace lightclients {
namespace wasm {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ConsensusState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.lightclients.wasm.v1.ConsensusState) */ {
 public:
  inline ConsensusState() : ConsensusState(nullptr) {}
  ~ConsensusState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConsensusState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConsensusState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConsensusState(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConsensusState(const ConsensusState& from) : ConsensusState(nullptr, from) {}
  inline ConsensusState(ConsensusState&& from) noexcept
      : ConsensusState(nullptr, std::move(from)) {}
  inline ConsensusState& operator=(const ConsensusState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConsensusState& operator=(ConsensusState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConsensusState& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConsensusState* internal_default_instance() {
    return reinterpret_cast<const ConsensusState*>(
        &_ConsensusState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ConsensusState& a, ConsensusState& b) { a.Swap(&b); }
  inline void Swap(ConsensusState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConsensusState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConsensusState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConsensusState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConsensusState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConsensusState& from) { ConsensusState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConsensusState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.lightclients.wasm.v1.ConsensusState"; }

 protected:
  explicit ConsensusState(::google::protobuf::Arena* arena);
  ConsensusState(::google::protobuf::Arena* arena, const ConsensusState& from);
  ConsensusState(::google::protobuf::Arena* arena, ConsensusState&& from) noexcept
      : ConsensusState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:ibc.lightclients.wasm.v1.ConsensusState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConsensusState& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto;
};
// -------------------------------------------------------------------

class ClientMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.lightclients.wasm.v1.ClientMessage) */ {
 public:
  inline ClientMessage() : ClientMessage(nullptr) {}
  ~ClientMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClientMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClientMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientMessage(const ClientMessage& from) : ClientMessage(nullptr, from) {}
  inline ClientMessage(ClientMessage&& from) noexcept
      : ClientMessage(nullptr, std::move(from)) {}
  inline ClientMessage& operator=(const ClientMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientMessage& operator=(ClientMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientMessage* internal_default_instance() {
    return reinterpret_cast<const ClientMessage*>(
        &_ClientMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ClientMessage& a, ClientMessage& b) { a.Swap(&b); }
  inline void Swap(ClientMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClientMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientMessage& from) { ClientMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClientMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.lightclients.wasm.v1.ClientMessage"; }

 protected:
  explicit ClientMessage(::google::protobuf::Arena* arena);
  ClientMessage(::google::protobuf::Arena* arena, const ClientMessage& from);
  ClientMessage(::google::protobuf::Arena* arena, ClientMessage&& from) noexcept
      : ClientMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:ibc.lightclients.wasm.v1.ClientMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto;
};
// -------------------------------------------------------------------

class Checksums final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.lightclients.wasm.v1.Checksums) */ {
 public:
  inline Checksums() : Checksums(nullptr) {}
  ~Checksums() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Checksums* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Checksums));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Checksums(
      ::google::protobuf::internal::ConstantInitialized);

  inline Checksums(const Checksums& from) : Checksums(nullptr, from) {}
  inline Checksums(Checksums&& from) noexcept
      : Checksums(nullptr, std::move(from)) {}
  inline Checksums& operator=(const Checksums& from) {
    CopyFrom(from);
    return *this;
  }
  inline Checksums& operator=(Checksums&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Checksums& default_instance() {
    return *internal_default_instance();
  }
  static inline const Checksums* internal_default_instance() {
    return reinterpret_cast<const Checksums*>(
        &_Checksums_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Checksums& a, Checksums& b) { a.Swap(&b); }
  inline void Swap(Checksums* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Checksums* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Checksums* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Checksums>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Checksums& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Checksums& from) { Checksums::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Checksums* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.lightclients.wasm.v1.Checksums"; }

 protected:
  explicit Checksums(::google::protobuf::Arena* arena);
  Checksums(::google::protobuf::Arena* arena, const Checksums& from);
  Checksums(::google::protobuf::Arena* arena, Checksums&& from) noexcept
      : Checksums(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChecksumsFieldNumber = 1,
  };
  // repeated bytes checksums = 1 [json_name = "checksums"];
  int checksums_size() const;
  private:
  int _internal_checksums_size() const;

  public:
  void clear_checksums() ;
  const std::string& checksums(int index) const;
  std::string* mutable_checksums(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksums(int index, Arg_&& value, Args_... args);
  std::string* add_checksums();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_checksums(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& checksums() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_checksums();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_checksums() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_checksums();

  public:
  // @@protoc_insertion_point(class_scope:ibc.lightclients.wasm.v1.Checksums)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Checksums& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> checksums_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto;
};
// -------------------------------------------------------------------

class ClientState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:ibc.lightclients.wasm.v1.ClientState) */ {
 public:
  inline ClientState() : ClientState(nullptr) {}
  ~ClientState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClientState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClientState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClientState(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClientState(const ClientState& from) : ClientState(nullptr, from) {}
  inline ClientState(ClientState&& from) noexcept
      : ClientState(nullptr, std::move(from)) {}
  inline ClientState& operator=(const ClientState& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientState& operator=(ClientState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClientState& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClientState* internal_default_instance() {
    return reinterpret_cast<const ClientState*>(
        &_ClientState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ClientState& a, ClientState& b) { a.Swap(&b); }
  inline void Swap(ClientState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClientState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClientState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClientState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClientState& from) { ClientState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClientState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "ibc.lightclients.wasm.v1.ClientState"; }

 protected:
  explicit ClientState(::google::protobuf::Arena* arena);
  ClientState(::google::protobuf::Arena* arena, const ClientState& from);
  ClientState(::google::protobuf::Arena* arena, ClientState&& from) noexcept
      : ClientState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kChecksumFieldNumber = 2,
    kLatestHeightFieldNumber = 3,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // bytes checksum = 2 [json_name = "checksum"];
  void clear_checksum() ;
  const std::string& checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_checksum();
  PROTOBUF_NODISCARD std::string* release_checksum();
  void set_allocated_checksum(std::string* value);

  private:
  const std::string& _internal_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_checksum(
      const std::string& value);
  std::string* _internal_mutable_checksum();

  public:
  // .ibc.core.client.v1.Height latest_height = 3 [json_name = "latestHeight", (.gogoproto.nullable) = false];
  bool has_latest_height() const;
  void clear_latest_height() ;
  const ::ibc::core::client::v1::Height& latest_height() const;
  PROTOBUF_NODISCARD ::ibc::core::client::v1::Height* release_latest_height();
  ::ibc::core::client::v1::Height* mutable_latest_height();
  void set_allocated_latest_height(::ibc::core::client::v1::Height* value);
  void unsafe_arena_set_allocated_latest_height(::ibc::core::client::v1::Height* value);
  ::ibc::core::client::v1::Height* unsafe_arena_release_latest_height();

  private:
  const ::ibc::core::client::v1::Height& _internal_latest_height() const;
  ::ibc::core::client::v1::Height* _internal_mutable_latest_height();

  public:
  // @@protoc_insertion_point(class_scope:ibc.lightclients.wasm.v1.ClientState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClientState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr checksum_;
    ::ibc::core::client::v1::Height* latest_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ClientState

// bytes data = 1 [json_name = "data"];
inline void ClientState::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ClientState::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.lightclients.wasm.v1.ClientState.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientState::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.lightclients.wasm.v1.ClientState.data)
}
inline std::string* ClientState::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:ibc.lightclients.wasm.v1.ClientState.data)
  return _s;
}
inline const std::string& ClientState::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ClientState::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ClientState::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ClientState::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.lightclients.wasm.v1.ClientState.data)
  return _impl_.data_.Release();
}
inline void ClientState::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.lightclients.wasm.v1.ClientState.data)
}

// bytes checksum = 2 [json_name = "checksum"];
inline void ClientState::clear_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.ClearToEmpty();
}
inline const std::string& ClientState::checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.lightclients.wasm.v1.ClientState.checksum)
  return _internal_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientState::set_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.lightclients.wasm.v1.ClientState.checksum)
}
inline std::string* ClientState::mutable_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_checksum();
  // @@protoc_insertion_point(field_mutable:ibc.lightclients.wasm.v1.ClientState.checksum)
  return _s;
}
inline const std::string& ClientState::_internal_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_.Get();
}
inline void ClientState::_internal_set_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.Set(value, GetArena());
}
inline std::string* ClientState::_internal_mutable_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.checksum_.Mutable( GetArena());
}
inline std::string* ClientState::release_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.lightclients.wasm.v1.ClientState.checksum)
  return _impl_.checksum_.Release();
}
inline void ClientState::set_allocated_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.checksum_.IsDefault()) {
    _impl_.checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.lightclients.wasm.v1.ClientState.checksum)
}

// .ibc.core.client.v1.Height latest_height = 3 [json_name = "latestHeight", (.gogoproto.nullable) = false];
inline bool ClientState::has_latest_height() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.latest_height_ != nullptr);
  return value;
}
inline const ::ibc::core::client::v1::Height& ClientState::_internal_latest_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::ibc::core::client::v1::Height* p = _impl_.latest_height_;
  return p != nullptr ? *p : reinterpret_cast<const ::ibc::core::client::v1::Height&>(::ibc::core::client::v1::_Height_default_instance_);
}
inline const ::ibc::core::client::v1::Height& ClientState::latest_height() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.lightclients.wasm.v1.ClientState.latest_height)
  return _internal_latest_height();
}
inline void ClientState::unsafe_arena_set_allocated_latest_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latest_height_);
  }
  _impl_.latest_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ibc.lightclients.wasm.v1.ClientState.latest_height)
}
inline ::ibc::core::client::v1::Height* ClientState::release_latest_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::client::v1::Height* released = _impl_.latest_height_;
  _impl_.latest_height_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::ibc::core::client::v1::Height* ClientState::unsafe_arena_release_latest_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.lightclients.wasm.v1.ClientState.latest_height)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ibc::core::client::v1::Height* temp = _impl_.latest_height_;
  _impl_.latest_height_ = nullptr;
  return temp;
}
inline ::ibc::core::client::v1::Height* ClientState::_internal_mutable_latest_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.latest_height_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::ibc::core::client::v1::Height>(GetArena());
    _impl_.latest_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(p);
  }
  return _impl_.latest_height_;
}
inline ::ibc::core::client::v1::Height* ClientState::mutable_latest_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::ibc::core::client::v1::Height* _msg = _internal_mutable_latest_height();
  // @@protoc_insertion_point(field_mutable:ibc.lightclients.wasm.v1.ClientState.latest_height)
  return _msg;
}
inline void ClientState::set_allocated_latest_height(::ibc::core::client::v1::Height* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.latest_height_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.latest_height_ = reinterpret_cast<::ibc::core::client::v1::Height*>(value);
  // @@protoc_insertion_point(field_set_allocated:ibc.lightclients.wasm.v1.ClientState.latest_height)
}

// -------------------------------------------------------------------

// ConsensusState

// bytes data = 1 [json_name = "data"];
inline void ConsensusState::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ConsensusState::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.lightclients.wasm.v1.ConsensusState.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConsensusState::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.lightclients.wasm.v1.ConsensusState.data)
}
inline std::string* ConsensusState::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:ibc.lightclients.wasm.v1.ConsensusState.data)
  return _s;
}
inline const std::string& ConsensusState::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ConsensusState::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ConsensusState::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ConsensusState::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.lightclients.wasm.v1.ConsensusState.data)
  return _impl_.data_.Release();
}
inline void ConsensusState::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.lightclients.wasm.v1.ConsensusState.data)
}

// -------------------------------------------------------------------

// ClientMessage

// bytes data = 1 [json_name = "data"];
inline void ClientMessage::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ClientMessage::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.lightclients.wasm.v1.ClientMessage.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ClientMessage::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ibc.lightclients.wasm.v1.ClientMessage.data)
}
inline std::string* ClientMessage::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:ibc.lightclients.wasm.v1.ClientMessage.data)
  return _s;
}
inline const std::string& ClientMessage::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ClientMessage::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ClientMessage::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ClientMessage::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:ibc.lightclients.wasm.v1.ClientMessage.data)
  return _impl_.data_.Release();
}
inline void ClientMessage::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:ibc.lightclients.wasm.v1.ClientMessage.data)
}

// -------------------------------------------------------------------

// Checksums

// repeated bytes checksums = 1 [json_name = "checksums"];
inline int Checksums::_internal_checksums_size() const {
  return _internal_checksums().size();
}
inline int Checksums::checksums_size() const {
  return _internal_checksums_size();
}
inline void Checksums::clear_checksums() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksums_.Clear();
}
inline std::string* Checksums::add_checksums() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_checksums()->Add();
  // @@protoc_insertion_point(field_add_mutable:ibc.lightclients.wasm.v1.Checksums.checksums)
  return _s;
}
inline const std::string& Checksums::checksums(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ibc.lightclients.wasm.v1.Checksums.checksums)
  return _internal_checksums().Get(index);
}
inline std::string* Checksums::mutable_checksums(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ibc.lightclients.wasm.v1.Checksums.checksums)
  return _internal_mutable_checksums()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Checksums::set_checksums(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_checksums()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:ibc.lightclients.wasm.v1.Checksums.checksums)
}
template <typename Arg_, typename... Args_>
inline void Checksums::add_checksums(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_checksums(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:ibc.lightclients.wasm.v1.Checksums.checksums)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Checksums::checksums() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ibc.lightclients.wasm.v1.Checksums.checksums)
  return _internal_checksums();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Checksums::mutable_checksums() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ibc.lightclients.wasm.v1.Checksums.checksums)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_checksums();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Checksums::_internal_checksums() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksums_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Checksums::_internal_mutable_checksums() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.checksums_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace lightclients
}  // namespace ibc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ibc_2flightclients_2fwasm_2fv1_2fwasm_2eproto_2epb_2eh
