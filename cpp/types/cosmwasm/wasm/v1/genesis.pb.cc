// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmwasm/wasm/v1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "cosmwasm/wasm/v1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmwasm {
namespace wasm {
namespace v1 {

inline constexpr Sequence::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Sequence::Sequence(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SequenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SequenceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SequenceDefaultTypeInternal() {}
  union {
    Sequence _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SequenceDefaultTypeInternal _Sequence_default_instance_;

inline constexpr Contract::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        contract_state_{},
        contract_code_history_{},
        contract_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Contract::Contract(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContractDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContractDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContractDefaultTypeInternal() {}
  union {
    Contract _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContractDefaultTypeInternal _Contract_default_instance_;

inline constexpr Code::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        code_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_info_{nullptr},
        code_id_{::uint64_t{0u}},
        pinned_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Code::Code(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CodeDefaultTypeInternal() {}
  union {
    Code _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CodeDefaultTypeInternal _Code_default_instance_;

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        codes_{},
        contracts_{},
        sequences_{},
        params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::GenesisState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::GenesisState, _impl_.params_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::GenesisState, _impl_.codes_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::GenesisState, _impl_.contracts_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::GenesisState, _impl_.sequences_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Code, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Code, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Code, _impl_.code_id_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Code, _impl_.code_info_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Code, _impl_.code_bytes_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Code, _impl_.pinned_),
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Contract, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Contract, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Contract, _impl_.contract_address_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Contract, _impl_.contract_info_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Contract, _impl_.contract_state_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Contract, _impl_.contract_code_history_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Sequence, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Sequence, _impl_.id_key_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::Sequence, _impl_.value_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::cosmwasm::wasm::v1::GenesisState)},
        {16, 28, -1, sizeof(::cosmwasm::wasm::v1::Code)},
        {32, 44, -1, sizeof(::cosmwasm::wasm::v1::Contract)},
        {48, -1, -1, sizeof(::cosmwasm::wasm::v1::Sequence)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmwasm::wasm::v1::_GenesisState_default_instance_._instance,
    &::cosmwasm::wasm::v1::_Code_default_instance_._instance,
    &::cosmwasm::wasm::v1::_Contract_default_instance_._instance,
    &::cosmwasm::wasm::v1::_Sequence_default_instance_._instance,
};
const char descriptor_table_protodef_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036cosmwasm/wasm/v1/genesis.proto\022\020cosmwa"
    "sm.wasm.v1\032\024gogoproto/gogo.proto\032\034cosmwa"
    "sm/wasm/v1/types.proto\032\021amino/amino.prot"
    "o\032\031cosmos_proto/cosmos.proto\"\317\002\n\014Genesis"
    "State\022;\n\006params\030\001 \001(\0132\030.cosmwasm.wasm.v1"
    ".ParamsB\t\310\336\037\000\250\347\260*\001R\006params\022J\n\005codes\030\002 \003("
    "\0132\026.cosmwasm.wasm.v1.CodeB\034\310\336\037\000\352\336\037\017codes"
    ",omitempty\250\347\260*\001R\005codes\022Z\n\tcontracts\030\003 \003("
    "\0132\032.cosmwasm.wasm.v1.ContractB \310\336\037\000\352\336\037\023c"
    "ontracts,omitempty\250\347\260*\001R\tcontracts\022Z\n\tse"
    "quences\030\004 \003(\0132\032.cosmwasm.wasm.v1.Sequenc"
    "eB \310\336\037\000\352\336\037\023sequences,omitempty\250\347\260*\001R\tseq"
    "uences\"\246\001\n\004Code\022#\n\007code_id\030\001 \001(\004B\n\342\336\037\006Co"
    "deIDR\006codeId\022B\n\tcode_info\030\002 \001(\0132\032.cosmwa"
    "sm.wasm.v1.CodeInfoB\t\310\336\037\000\250\347\260*\001R\010codeInfo"
    "\022\035\n\ncode_bytes\030\003 \001(\014R\tcodeBytes\022\026\n\006pinne"
    "d\030\004 \001(\010R\006pinned\"\325\002\n\010Contract\022C\n\020contract"
    "_address\030\001 \001(\tB\030\322\264-\024cosmos.AddressString"
    "R\017contractAddress\022N\n\rcontract_info\030\002 \001(\013"
    "2\036.cosmwasm.wasm.v1.ContractInfoB\t\310\336\037\000\250\347"
    "\260*\001R\014contractInfo\022I\n\016contract_state\030\003 \003("
    "\0132\027.cosmwasm.wasm.v1.ModelB\t\310\336\037\000\250\347\260*\001R\rc"
    "ontractState\022i\n\025contract_code_history\030\004 "
    "\003(\0132*.cosmwasm.wasm.v1.ContractCodeHisto"
    "ryEntryB\t\310\336\037\000\250\347\260*\001R\023contractCodeHistory\""
    "B\n\010Sequence\022 \n\006id_key\030\001 \001(\014B\t\342\336\037\005IDKeyR\005"
    "idKey\022\024\n\005value\030\002 \001(\004R\005valueB(Z&github.co"
    "m/CosmWasm/wasmd/x/wasm/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto_deps[4] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_cosmwasm_2fwasm_2fv1_2ftypes_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto = {
    false,
    false,
    1117,
    descriptor_table_protodef_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto,
    "cosmwasm/wasm/v1/genesis.proto",
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto_once,
    descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto_deps,
    4,
    4,
    schemas,
    file_default_instances,
    TableStruct_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto,
    file_level_service_descriptors_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto,
};
namespace cosmwasm {
namespace wasm {
namespace v1 {
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
};

void GenesisState::clear_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::GenesisState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        codes_{visibility, arena, from.codes_},
        contracts_{visibility, arena, from.contracts_},
        sequences_{visibility, arena, from.sequences_} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::Params>(
                              arena, *from._impl_.params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        codes_{visibility, arena},
        contracts_{visibility, arena},
        sequences_{visibility, arena} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.params_ = {};
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.params_;
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.codes_) +
          decltype(GenesisState::_impl_.codes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.contracts_) +
          decltype(GenesisState::_impl_.contracts_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.sequences_) +
          decltype(GenesisState::_impl_.sequences_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> GenesisState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmwasm.wasm.v1.Sequence sequences = 4 [json_name = "sequences", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "sequences,omitempty", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.sequences_)}},
    // .cosmwasm.wasm.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_)}},
    // repeated .cosmwasm.wasm.v1.Code codes = 2 [json_name = "codes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "codes,omitempty", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.codes_)}},
    // repeated .cosmwasm.wasm.v1.Contract contracts = 3 [json_name = "contracts", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "contracts,omitempty", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.contracts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmwasm.wasm.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmwasm.wasm.v1.Code codes = 2 [json_name = "codes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "codes,omitempty", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.codes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmwasm.wasm.v1.Contract contracts = 3 [json_name = "contracts", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "contracts,omitempty", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.contracts_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmwasm.wasm.v1.Sequence sequences = 4 [json_name = "sequences", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "sequences,omitempty", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.sequences_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Params>()},
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Code>()},
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Contract>()},
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Sequence>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.codes_.Clear();
  _impl_.contracts_.Clear();
  _impl_.sequences_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmwasm.wasm.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.params_, this_._impl_.params_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmwasm.wasm.v1.Code codes = 2 [json_name = "codes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "codes,omitempty", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_codes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_codes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmwasm.wasm.v1.Contract contracts = 3 [json_name = "contracts", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "contracts,omitempty", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_contracts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_contracts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmwasm.wasm.v1.Sequence sequences = 4 [json_name = "sequences", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "sequences,omitempty", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sequences_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sequences().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmwasm.wasm.v1.Code codes = 2 [json_name = "codes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "codes,omitempty", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_codes_size();
              for (const auto& msg : this_._internal_codes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmwasm.wasm.v1.Contract contracts = 3 [json_name = "contracts", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "contracts,omitempty", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_contracts_size();
              for (const auto& msg : this_._internal_contracts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmwasm.wasm.v1.Sequence sequences = 4 [json_name = "sequences", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "sequences,omitempty", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_sequences_size();
              for (const auto& msg : this_._internal_sequences()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmwasm.wasm.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.params_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_codes()->MergeFrom(
      from._internal_codes());
  _this->_internal_mutable_contracts()->MergeFrom(
      from._internal_contracts());
  _this->_internal_mutable_sequences()->MergeFrom(
      from._internal_sequences());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.params_ != nullptr);
    if (_this->_impl_.params_ == nullptr) {
      _this->_impl_.params_ =
          ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::Params>(arena, *from._impl_.params_);
    } else {
      _this->_impl_.params_->MergeFrom(*from._impl_.params_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.codes_.InternalSwap(&other->_impl_.codes_);
  _impl_.contracts_.InternalSwap(&other->_impl_.contracts_);
  _impl_.sequences_.InternalSwap(&other->_impl_.sequences_);
  swap(_impl_.params_, other->_impl_.params_);
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Code::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Code>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Code, _impl_._has_bits_);
};

void Code::clear_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ != nullptr) _impl_.code_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Code::Code(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.Code)
}
inline PROTOBUF_NDEBUG_INLINE Code::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::Code& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        code_bytes_(arena, from.code_bytes_) {}

Code::Code(
    ::google::protobuf::Arena* arena,
    const Code& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Code* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::CodeInfo>(
                              arena, *from._impl_.code_info_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, code_id_),
           offsetof(Impl_, pinned_) -
               offsetof(Impl_, code_id_) +
               sizeof(Impl_::pinned_));

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.Code)
}
inline PROTOBUF_NDEBUG_INLINE Code::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        code_bytes_(arena) {}

inline void Code::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_info_),
           0,
           offsetof(Impl_, pinned_) -
               offsetof(Impl_, code_info_) +
               sizeof(Impl_::pinned_));
}
Code::~Code() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.Code)
  SharedDtor(*this);
}
inline void Code::SharedDtor(MessageLite& self) {
  Code& this_ = static_cast<Code&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.code_bytes_.Destroy();
  delete this_._impl_.code_info_;
  this_._impl_.~Impl_();
}

inline void* Code::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Code(arena);
}
constexpr auto Code::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Code),
                                            alignof(Code));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Code::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Code_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Code::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Code>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Code::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Code>(), &Code::ByteSizeLong,
            &Code::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Code, _impl_._cached_size_),
        false,
    },
    &Code::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Code::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> Code::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Code, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Code>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool pinned = 4 [json_name = "pinned"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Code, _impl_.pinned_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Code, _impl_.pinned_)}},
    // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Code, _impl_.code_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Code, _impl_.code_id_)}},
    // .cosmwasm.wasm.v1.CodeInfo code_info = 2 [json_name = "codeInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Code, _impl_.code_info_)}},
    // bytes code_bytes = 3 [json_name = "codeBytes"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Code, _impl_.code_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {PROTOBUF_FIELD_OFFSET(Code, _impl_.code_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmwasm.wasm.v1.CodeInfo code_info = 2 [json_name = "codeInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Code, _impl_.code_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes code_bytes = 3 [json_name = "codeBytes"];
    {PROTOBUF_FIELD_OFFSET(Code, _impl_.code_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool pinned = 4 [json_name = "pinned"];
    {PROTOBUF_FIELD_OFFSET(Code, _impl_.pinned_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::CodeInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Code::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.Code)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_bytes_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.code_info_ != nullptr);
    _impl_.code_info_->Clear();
  }
  ::memset(&_impl_.code_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pinned_) -
      reinterpret_cast<char*>(&_impl_.code_id_)) + sizeof(_impl_.pinned_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Code::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Code& this_ = static_cast<const Code&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Code::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Code& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.Code)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
          if (this_._internal_code_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_code_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmwasm.wasm.v1.CodeInfo code_info = 2 [json_name = "codeInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.code_info_, this_._impl_.code_info_->GetCachedSize(), target,
                stream);
          }

          // bytes code_bytes = 3 [json_name = "codeBytes"];
          if (!this_._internal_code_bytes().empty()) {
            const std::string& _s = this_._internal_code_bytes();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bool pinned = 4 [json_name = "pinned"];
          if (this_._internal_pinned() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_pinned(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.Code)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Code::ByteSizeLong(const MessageLite& base) {
          const Code& this_ = static_cast<const Code&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Code::ByteSizeLong() const {
          const Code& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.Code)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes code_bytes = 3 [json_name = "codeBytes"];
            if (!this_._internal_code_bytes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_code_bytes());
            }
          }
           {
            // .cosmwasm.wasm.v1.CodeInfo code_info = 2 [json_name = "codeInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.code_info_);
            }
          }
           {
            // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
            if (this_._internal_code_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_code_id());
            }
            // bool pinned = 4 [json_name = "pinned"];
            if (this_._internal_pinned() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Code::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Code*>(&to_msg);
  auto& from = static_cast<const Code&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.Code)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code_bytes().empty()) {
    _this->_internal_set_code_bytes(from._internal_code_bytes());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.code_info_ != nullptr);
    if (_this->_impl_.code_info_ == nullptr) {
      _this->_impl_.code_info_ =
          ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::CodeInfo>(arena, *from._impl_.code_info_);
    } else {
      _this->_impl_.code_info_->MergeFrom(*from._impl_.code_info_);
    }
  }
  if (from._internal_code_id() != 0) {
    _this->_impl_.code_id_ = from._impl_.code_id_;
  }
  if (from._internal_pinned() != 0) {
    _this->_impl_.pinned_ = from._impl_.pinned_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Code::CopyFrom(const Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Code::InternalSwap(Code* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_bytes_, &other->_impl_.code_bytes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Code, _impl_.pinned_)
      + sizeof(Code::_impl_.pinned_)
      - PROTOBUF_FIELD_OFFSET(Code, _impl_.code_info_)>(
          reinterpret_cast<char*>(&_impl_.code_info_),
          reinterpret_cast<char*>(&other->_impl_.code_info_));
}

::google::protobuf::Metadata Code::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Contract::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Contract>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Contract, _impl_._has_bits_);
};

void Contract::clear_contract_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contract_info_ != nullptr) _impl_.contract_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Contract::clear_contract_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_state_.Clear();
}
void Contract::clear_contract_code_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_code_history_.Clear();
}
Contract::Contract(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.Contract)
}
inline PROTOBUF_NDEBUG_INLINE Contract::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::Contract& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        contract_state_{visibility, arena, from.contract_state_},
        contract_code_history_{visibility, arena, from.contract_code_history_},
        contract_address_(arena, from.contract_address_) {}

Contract::Contract(
    ::google::protobuf::Arena* arena,
    const Contract& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Contract* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.contract_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::ContractInfo>(
                              arena, *from._impl_.contract_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.Contract)
}
inline PROTOBUF_NDEBUG_INLINE Contract::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        contract_state_{visibility, arena},
        contract_code_history_{visibility, arena},
        contract_address_(arena) {}

inline void Contract::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.contract_info_ = {};
}
Contract::~Contract() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.Contract)
  SharedDtor(*this);
}
inline void Contract::SharedDtor(MessageLite& self) {
  Contract& this_ = static_cast<Contract&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.contract_address_.Destroy();
  delete this_._impl_.contract_info_;
  this_._impl_.~Impl_();
}

inline void* Contract::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Contract(arena);
}
constexpr auto Contract::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_state_) +
          decltype(Contract::_impl_.contract_state_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_code_history_) +
          decltype(Contract::_impl_.contract_code_history_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Contract), alignof(Contract), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Contract::PlacementNew_,
                                 sizeof(Contract),
                                 alignof(Contract));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Contract::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Contract_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Contract::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Contract>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Contract::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Contract>(), &Contract::ByteSizeLong,
            &Contract::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Contract, _impl_._cached_size_),
        false,
    },
    &Contract::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Contract::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 50, 2> Contract::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Contract, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Contract>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmwasm.wasm.v1.ContractCodeHistoryEntry contract_code_history = 4 [json_name = "contractCodeHistory", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_code_history_)}},
    // string contract_address = 1 [json_name = "contractAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_address_)}},
    // .cosmwasm.wasm.v1.ContractInfo contract_info = 2 [json_name = "contractInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_info_)}},
    // repeated .cosmwasm.wasm.v1.Model contract_state = 3 [json_name = "contractState", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string contract_address = 1 [json_name = "contractAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmwasm.wasm.v1.ContractInfo contract_info = 2 [json_name = "contractInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmwasm.wasm.v1.Model contract_state = 3 [json_name = "contractState", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_state_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmwasm.wasm.v1.ContractCodeHistoryEntry contract_code_history = 4 [json_name = "contractCodeHistory", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Contract, _impl_.contract_code_history_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::ContractInfo>()},
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Model>()},
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>()},
  }}, {{
    "\31\20\0\0\0\0\0\0"
    "cosmwasm.wasm.v1.Contract"
    "contract_address"
  }},
};

PROTOBUF_NOINLINE void Contract::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.Contract)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.contract_state_.Clear();
  _impl_.contract_code_history_.Clear();
  _impl_.contract_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.contract_info_ != nullptr);
    _impl_.contract_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Contract::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Contract& this_ = static_cast<const Contract&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Contract::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Contract& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.Contract)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string contract_address = 1 [json_name = "contractAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_contract_address().empty()) {
            const std::string& _s = this_._internal_contract_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.Contract.contract_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmwasm.wasm.v1.ContractInfo contract_info = 2 [json_name = "contractInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.contract_info_, this_._impl_.contract_info_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmwasm.wasm.v1.Model contract_state = 3 [json_name = "contractState", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_contract_state_size());
               i < n; i++) {
            const auto& repfield = this_._internal_contract_state().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmwasm.wasm.v1.ContractCodeHistoryEntry contract_code_history = 4 [json_name = "contractCodeHistory", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_contract_code_history_size());
               i < n; i++) {
            const auto& repfield = this_._internal_contract_code_history().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.Contract)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Contract::ByteSizeLong(const MessageLite& base) {
          const Contract& this_ = static_cast<const Contract&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Contract::ByteSizeLong() const {
          const Contract& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.Contract)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmwasm.wasm.v1.Model contract_state = 3 [json_name = "contractState", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_contract_state_size();
              for (const auto& msg : this_._internal_contract_state()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmwasm.wasm.v1.ContractCodeHistoryEntry contract_code_history = 4 [json_name = "contractCodeHistory", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_contract_code_history_size();
              for (const auto& msg : this_._internal_contract_code_history()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string contract_address = 1 [json_name = "contractAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_contract_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_address());
            }
          }
           {
            // .cosmwasm.wasm.v1.ContractInfo contract_info = 2 [json_name = "contractInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.contract_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Contract::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Contract*>(&to_msg);
  auto& from = static_cast<const Contract&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.Contract)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_contract_state()->MergeFrom(
      from._internal_contract_state());
  _this->_internal_mutable_contract_code_history()->MergeFrom(
      from._internal_contract_code_history());
  if (!from._internal_contract_address().empty()) {
    _this->_internal_set_contract_address(from._internal_contract_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.contract_info_ != nullptr);
    if (_this->_impl_.contract_info_ == nullptr) {
      _this->_impl_.contract_info_ =
          ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::ContractInfo>(arena, *from._impl_.contract_info_);
    } else {
      _this->_impl_.contract_info_->MergeFrom(*from._impl_.contract_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Contract::CopyFrom(const Contract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.Contract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Contract::InternalSwap(Contract* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.contract_state_.InternalSwap(&other->_impl_.contract_state_);
  _impl_.contract_code_history_.InternalSwap(&other->_impl_.contract_code_history_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_address_, &other->_impl_.contract_address_, arena);
  swap(_impl_.contract_info_, other->_impl_.contract_info_);
}

::google::protobuf::Metadata Contract::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Sequence::_Internal {
 public:
};

Sequence::Sequence(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.Sequence)
}
inline PROTOBUF_NDEBUG_INLINE Sequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::Sequence& from_msg)
      : id_key_(arena, from.id_key_),
        _cached_size_{0} {}

Sequence::Sequence(
    ::google::protobuf::Arena* arena,
    const Sequence& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Sequence* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.Sequence)
}
inline PROTOBUF_NDEBUG_INLINE Sequence::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_key_(arena),
        _cached_size_{0} {}

inline void Sequence::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
Sequence::~Sequence() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.Sequence)
  SharedDtor(*this);
}
inline void Sequence::SharedDtor(MessageLite& self) {
  Sequence& this_ = static_cast<Sequence&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Sequence::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Sequence(arena);
}
constexpr auto Sequence::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Sequence),
                                            alignof(Sequence));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Sequence::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Sequence_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Sequence::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Sequence>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Sequence::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Sequence>(), &Sequence::ByteSizeLong,
            &Sequence::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Sequence, _impl_._cached_size_),
        false,
    },
    &Sequence::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Sequence::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Sequence::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::Sequence>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Sequence, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Sequence, _impl_.value_)}},
    // bytes id_key = 1 [json_name = "idKey", (.gogoproto.customname) = "IDKey"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Sequence, _impl_.id_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes id_key = 1 [json_name = "idKey", (.gogoproto.customname) = "IDKey"];
    {PROTOBUF_FIELD_OFFSET(Sequence, _impl_.id_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Sequence, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Sequence::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.Sequence)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_key_.ClearToEmpty();
  _impl_.value_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Sequence::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Sequence& this_ = static_cast<const Sequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Sequence::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Sequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.Sequence)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes id_key = 1 [json_name = "idKey", (.gogoproto.customname) = "IDKey"];
          if (!this_._internal_id_key().empty()) {
            const std::string& _s = this_._internal_id_key();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // uint64 value = 2 [json_name = "value"];
          if (this_._internal_value() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_value(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.Sequence)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Sequence::ByteSizeLong(const MessageLite& base) {
          const Sequence& this_ = static_cast<const Sequence&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Sequence::ByteSizeLong() const {
          const Sequence& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.Sequence)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes id_key = 1 [json_name = "idKey", (.gogoproto.customname) = "IDKey"];
            if (!this_._internal_id_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_id_key());
            }
            // uint64 value = 2 [json_name = "value"];
            if (this_._internal_value() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Sequence::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Sequence*>(&to_msg);
  auto& from = static_cast<const Sequence&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.Sequence)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id_key().empty()) {
    _this->_internal_set_id_key(from._internal_id_key());
  }
  if (from._internal_value() != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Sequence::CopyFrom(const Sequence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.Sequence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Sequence::InternalSwap(Sequence* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_key_, &other->_impl_.id_key_, arena);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata Sequence::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmwasm_2fwasm_2fv1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
