// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmwasm/wasm/v1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmwasm_2fwasm_2fv1_2fquery_2eproto_2epb_2eh
#define cosmwasm_2fwasm_2fv1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmwasm/wasm/v1/types.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "cosmos/query/v1/query.pb.h"
#include "amino/amino.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmwasm_2fwasm_2fv1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
namespace cosmwasm {
namespace wasm {
namespace v1 {
class CodeInfoResponse;
struct CodeInfoResponseDefaultTypeInternal;
extern CodeInfoResponseDefaultTypeInternal _CodeInfoResponse_default_instance_;
class QueryAllContractStateRequest;
struct QueryAllContractStateRequestDefaultTypeInternal;
extern QueryAllContractStateRequestDefaultTypeInternal _QueryAllContractStateRequest_default_instance_;
class QueryAllContractStateResponse;
struct QueryAllContractStateResponseDefaultTypeInternal;
extern QueryAllContractStateResponseDefaultTypeInternal _QueryAllContractStateResponse_default_instance_;
class QueryBuildAddressRequest;
struct QueryBuildAddressRequestDefaultTypeInternal;
extern QueryBuildAddressRequestDefaultTypeInternal _QueryBuildAddressRequest_default_instance_;
class QueryBuildAddressResponse;
struct QueryBuildAddressResponseDefaultTypeInternal;
extern QueryBuildAddressResponseDefaultTypeInternal _QueryBuildAddressResponse_default_instance_;
class QueryCodeInfoRequest;
struct QueryCodeInfoRequestDefaultTypeInternal;
extern QueryCodeInfoRequestDefaultTypeInternal _QueryCodeInfoRequest_default_instance_;
class QueryCodeInfoResponse;
struct QueryCodeInfoResponseDefaultTypeInternal;
extern QueryCodeInfoResponseDefaultTypeInternal _QueryCodeInfoResponse_default_instance_;
class QueryCodeRequest;
struct QueryCodeRequestDefaultTypeInternal;
extern QueryCodeRequestDefaultTypeInternal _QueryCodeRequest_default_instance_;
class QueryCodeResponse;
struct QueryCodeResponseDefaultTypeInternal;
extern QueryCodeResponseDefaultTypeInternal _QueryCodeResponse_default_instance_;
class QueryCodesRequest;
struct QueryCodesRequestDefaultTypeInternal;
extern QueryCodesRequestDefaultTypeInternal _QueryCodesRequest_default_instance_;
class QueryCodesResponse;
struct QueryCodesResponseDefaultTypeInternal;
extern QueryCodesResponseDefaultTypeInternal _QueryCodesResponse_default_instance_;
class QueryContractHistoryRequest;
struct QueryContractHistoryRequestDefaultTypeInternal;
extern QueryContractHistoryRequestDefaultTypeInternal _QueryContractHistoryRequest_default_instance_;
class QueryContractHistoryResponse;
struct QueryContractHistoryResponseDefaultTypeInternal;
extern QueryContractHistoryResponseDefaultTypeInternal _QueryContractHistoryResponse_default_instance_;
class QueryContractInfoRequest;
struct QueryContractInfoRequestDefaultTypeInternal;
extern QueryContractInfoRequestDefaultTypeInternal _QueryContractInfoRequest_default_instance_;
class QueryContractInfoResponse;
struct QueryContractInfoResponseDefaultTypeInternal;
extern QueryContractInfoResponseDefaultTypeInternal _QueryContractInfoResponse_default_instance_;
class QueryContractsByCodeRequest;
struct QueryContractsByCodeRequestDefaultTypeInternal;
extern QueryContractsByCodeRequestDefaultTypeInternal _QueryContractsByCodeRequest_default_instance_;
class QueryContractsByCodeResponse;
struct QueryContractsByCodeResponseDefaultTypeInternal;
extern QueryContractsByCodeResponseDefaultTypeInternal _QueryContractsByCodeResponse_default_instance_;
class QueryContractsByCreatorRequest;
struct QueryContractsByCreatorRequestDefaultTypeInternal;
extern QueryContractsByCreatorRequestDefaultTypeInternal _QueryContractsByCreatorRequest_default_instance_;
class QueryContractsByCreatorResponse;
struct QueryContractsByCreatorResponseDefaultTypeInternal;
extern QueryContractsByCreatorResponseDefaultTypeInternal _QueryContractsByCreatorResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
class QueryPinnedCodesRequest;
struct QueryPinnedCodesRequestDefaultTypeInternal;
extern QueryPinnedCodesRequestDefaultTypeInternal _QueryPinnedCodesRequest_default_instance_;
class QueryPinnedCodesResponse;
struct QueryPinnedCodesResponseDefaultTypeInternal;
extern QueryPinnedCodesResponseDefaultTypeInternal _QueryPinnedCodesResponse_default_instance_;
class QueryRawContractStateRequest;
struct QueryRawContractStateRequestDefaultTypeInternal;
extern QueryRawContractStateRequestDefaultTypeInternal _QueryRawContractStateRequest_default_instance_;
class QueryRawContractStateResponse;
struct QueryRawContractStateResponseDefaultTypeInternal;
extern QueryRawContractStateResponseDefaultTypeInternal _QueryRawContractStateResponse_default_instance_;
class QuerySmartContractStateRequest;
struct QuerySmartContractStateRequestDefaultTypeInternal;
extern QuerySmartContractStateRequestDefaultTypeInternal _QuerySmartContractStateRequest_default_instance_;
class QuerySmartContractStateResponse;
struct QuerySmartContractStateResponseDefaultTypeInternal;
extern QuerySmartContractStateResponseDefaultTypeInternal _QuerySmartContractStateResponse_default_instance_;
class QueryWasmLimitsConfigRequest;
struct QueryWasmLimitsConfigRequestDefaultTypeInternal;
extern QueryWasmLimitsConfigRequestDefaultTypeInternal _QueryWasmLimitsConfigRequest_default_instance_;
class QueryWasmLimitsConfigResponse;
struct QueryWasmLimitsConfigResponseDefaultTypeInternal;
extern QueryWasmLimitsConfigResponseDefaultTypeInternal _QueryWasmLimitsConfigResponse_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmwasm {
namespace wasm {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryWasmLimitsConfigResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse) */ {
 public:
  inline QueryWasmLimitsConfigResponse() : QueryWasmLimitsConfigResponse(nullptr) {}
  ~QueryWasmLimitsConfigResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryWasmLimitsConfigResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryWasmLimitsConfigResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryWasmLimitsConfigResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryWasmLimitsConfigResponse(const QueryWasmLimitsConfigResponse& from) : QueryWasmLimitsConfigResponse(nullptr, from) {}
  inline QueryWasmLimitsConfigResponse(QueryWasmLimitsConfigResponse&& from) noexcept
      : QueryWasmLimitsConfigResponse(nullptr, std::move(from)) {}
  inline QueryWasmLimitsConfigResponse& operator=(const QueryWasmLimitsConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryWasmLimitsConfigResponse& operator=(QueryWasmLimitsConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryWasmLimitsConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryWasmLimitsConfigResponse* internal_default_instance() {
    return reinterpret_cast<const QueryWasmLimitsConfigResponse*>(
        &_QueryWasmLimitsConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(QueryWasmLimitsConfigResponse& a, QueryWasmLimitsConfigResponse& b) { a.Swap(&b); }
  inline void Swap(QueryWasmLimitsConfigResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryWasmLimitsConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryWasmLimitsConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryWasmLimitsConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryWasmLimitsConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryWasmLimitsConfigResponse& from) { QueryWasmLimitsConfigResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryWasmLimitsConfigResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse"; }

 protected:
  explicit QueryWasmLimitsConfigResponse(::google::protobuf::Arena* arena);
  QueryWasmLimitsConfigResponse(::google::protobuf::Arena* arena, const QueryWasmLimitsConfigResponse& from);
  QueryWasmLimitsConfigResponse(::google::protobuf::Arena* arena, QueryWasmLimitsConfigResponse&& from) noexcept
      : QueryWasmLimitsConfigResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfigFieldNumber = 1,
  };
  // string config = 1 [json_name = "config"];
  void clear_config() ;
  const std::string& config() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_config(Arg_&& arg, Args_... args);
  std::string* mutable_config();
  PROTOBUF_NODISCARD std::string* release_config();
  void set_allocated_config(std::string* value);

  private:
  const std::string& _internal_config() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_config(
      const std::string& value);
  std::string* _internal_mutable_config();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryWasmLimitsConfigResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr config_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryWasmLimitsConfigRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryWasmLimitsConfigRequest) */ {
 public:
  inline QueryWasmLimitsConfigRequest() : QueryWasmLimitsConfigRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryWasmLimitsConfigRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryWasmLimitsConfigRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryWasmLimitsConfigRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryWasmLimitsConfigRequest(const QueryWasmLimitsConfigRequest& from) : QueryWasmLimitsConfigRequest(nullptr, from) {}
  inline QueryWasmLimitsConfigRequest(QueryWasmLimitsConfigRequest&& from) noexcept
      : QueryWasmLimitsConfigRequest(nullptr, std::move(from)) {}
  inline QueryWasmLimitsConfigRequest& operator=(const QueryWasmLimitsConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryWasmLimitsConfigRequest& operator=(QueryWasmLimitsConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryWasmLimitsConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryWasmLimitsConfigRequest* internal_default_instance() {
    return reinterpret_cast<const QueryWasmLimitsConfigRequest*>(
        &_QueryWasmLimitsConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(QueryWasmLimitsConfigRequest& a, QueryWasmLimitsConfigRequest& b) { a.Swap(&b); }
  inline void Swap(QueryWasmLimitsConfigRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryWasmLimitsConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryWasmLimitsConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryWasmLimitsConfigRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryWasmLimitsConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryWasmLimitsConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryWasmLimitsConfigRequest"; }

 protected:
  explicit QueryWasmLimitsConfigRequest(::google::protobuf::Arena* arena);
  QueryWasmLimitsConfigRequest(::google::protobuf::Arena* arena, const QueryWasmLimitsConfigRequest& from);
  QueryWasmLimitsConfigRequest(::google::protobuf::Arena* arena, QueryWasmLimitsConfigRequest&& from) noexcept
      : QueryWasmLimitsConfigRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryWasmLimitsConfigRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryWasmLimitsConfigRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QuerySmartContractStateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QuerySmartContractStateResponse) */ {
 public:
  inline QuerySmartContractStateResponse() : QuerySmartContractStateResponse(nullptr) {}
  ~QuerySmartContractStateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QuerySmartContractStateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QuerySmartContractStateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySmartContractStateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuerySmartContractStateResponse(const QuerySmartContractStateResponse& from) : QuerySmartContractStateResponse(nullptr, from) {}
  inline QuerySmartContractStateResponse(QuerySmartContractStateResponse&& from) noexcept
      : QuerySmartContractStateResponse(nullptr, std::move(from)) {}
  inline QuerySmartContractStateResponse& operator=(const QuerySmartContractStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySmartContractStateResponse& operator=(QuerySmartContractStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySmartContractStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySmartContractStateResponse* internal_default_instance() {
    return reinterpret_cast<const QuerySmartContractStateResponse*>(
        &_QuerySmartContractStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(QuerySmartContractStateResponse& a, QuerySmartContractStateResponse& b) { a.Swap(&b); }
  inline void Swap(QuerySmartContractStateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySmartContractStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySmartContractStateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QuerySmartContractStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuerySmartContractStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuerySmartContractStateResponse& from) { QuerySmartContractStateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QuerySmartContractStateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QuerySmartContractStateResponse"; }

 protected:
  explicit QuerySmartContractStateResponse(::google::protobuf::Arena* arena);
  QuerySmartContractStateResponse(::google::protobuf::Arena* arena, const QuerySmartContractStateResponse& from);
  QuerySmartContractStateResponse(::google::protobuf::Arena* arena, QuerySmartContractStateResponse&& from) noexcept
      : QuerySmartContractStateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QuerySmartContractStateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuerySmartContractStateResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QuerySmartContractStateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QuerySmartContractStateRequest) */ {
 public:
  inline QuerySmartContractStateRequest() : QuerySmartContractStateRequest(nullptr) {}
  ~QuerySmartContractStateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QuerySmartContractStateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QuerySmartContractStateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QuerySmartContractStateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QuerySmartContractStateRequest(const QuerySmartContractStateRequest& from) : QuerySmartContractStateRequest(nullptr, from) {}
  inline QuerySmartContractStateRequest(QuerySmartContractStateRequest&& from) noexcept
      : QuerySmartContractStateRequest(nullptr, std::move(from)) {}
  inline QuerySmartContractStateRequest& operator=(const QuerySmartContractStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QuerySmartContractStateRequest& operator=(QuerySmartContractStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QuerySmartContractStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QuerySmartContractStateRequest* internal_default_instance() {
    return reinterpret_cast<const QuerySmartContractStateRequest*>(
        &_QuerySmartContractStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(QuerySmartContractStateRequest& a, QuerySmartContractStateRequest& b) { a.Swap(&b); }
  inline void Swap(QuerySmartContractStateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QuerySmartContractStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QuerySmartContractStateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QuerySmartContractStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QuerySmartContractStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QuerySmartContractStateRequest& from) { QuerySmartContractStateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QuerySmartContractStateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QuerySmartContractStateRequest"; }

 protected:
  explicit QuerySmartContractStateRequest(::google::protobuf::Arena* arena);
  QuerySmartContractStateRequest(::google::protobuf::Arena* arena, const QuerySmartContractStateRequest& from);
  QuerySmartContractStateRequest(::google::protobuf::Arena* arena, QuerySmartContractStateRequest&& from) noexcept
      : QuerySmartContractStateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kQueryDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes query_data = 2 [json_name = "queryData", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_query_data() ;
  const std::string& query_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_query_data(Arg_&& arg, Args_... args);
  std::string* mutable_query_data();
  PROTOBUF_NODISCARD std::string* release_query_data();
  void set_allocated_query_data(std::string* value);

  private:
  const std::string& _internal_query_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_query_data(
      const std::string& value);
  std::string* _internal_mutable_query_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QuerySmartContractStateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QuerySmartContractStateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr query_data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryRawContractStateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryRawContractStateResponse) */ {
 public:
  inline QueryRawContractStateResponse() : QueryRawContractStateResponse(nullptr) {}
  ~QueryRawContractStateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryRawContractStateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryRawContractStateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRawContractStateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRawContractStateResponse(const QueryRawContractStateResponse& from) : QueryRawContractStateResponse(nullptr, from) {}
  inline QueryRawContractStateResponse(QueryRawContractStateResponse&& from) noexcept
      : QueryRawContractStateResponse(nullptr, std::move(from)) {}
  inline QueryRawContractStateResponse& operator=(const QueryRawContractStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRawContractStateResponse& operator=(QueryRawContractStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRawContractStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRawContractStateResponse* internal_default_instance() {
    return reinterpret_cast<const QueryRawContractStateResponse*>(
        &_QueryRawContractStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryRawContractStateResponse& a, QueryRawContractStateResponse& b) { a.Swap(&b); }
  inline void Swap(QueryRawContractStateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRawContractStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRawContractStateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryRawContractStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRawContractStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRawContractStateResponse& from) { QueryRawContractStateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryRawContractStateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryRawContractStateResponse"; }

 protected:
  explicit QueryRawContractStateResponse(::google::protobuf::Arena* arena);
  QueryRawContractStateResponse(::google::protobuf::Arena* arena, const QueryRawContractStateResponse& from);
  QueryRawContractStateResponse(::google::protobuf::Arena* arena, QueryRawContractStateResponse&& from) noexcept
      : QueryRawContractStateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryRawContractStateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRawContractStateResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryRawContractStateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryRawContractStateRequest) */ {
 public:
  inline QueryRawContractStateRequest() : QueryRawContractStateRequest(nullptr) {}
  ~QueryRawContractStateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryRawContractStateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryRawContractStateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRawContractStateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRawContractStateRequest(const QueryRawContractStateRequest& from) : QueryRawContractStateRequest(nullptr, from) {}
  inline QueryRawContractStateRequest(QueryRawContractStateRequest&& from) noexcept
      : QueryRawContractStateRequest(nullptr, std::move(from)) {}
  inline QueryRawContractStateRequest& operator=(const QueryRawContractStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRawContractStateRequest& operator=(QueryRawContractStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRawContractStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRawContractStateRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRawContractStateRequest*>(
        &_QueryRawContractStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryRawContractStateRequest& a, QueryRawContractStateRequest& b) { a.Swap(&b); }
  inline void Swap(QueryRawContractStateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRawContractStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRawContractStateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryRawContractStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRawContractStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRawContractStateRequest& from) { QueryRawContractStateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryRawContractStateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryRawContractStateRequest"; }

 protected:
  explicit QueryRawContractStateRequest(::google::protobuf::Arena* arena);
  QueryRawContractStateRequest(::google::protobuf::Arena* arena, const QueryRawContractStateRequest& from);
  QueryRawContractStateRequest(::google::protobuf::Arena* arena, QueryRawContractStateRequest&& from) noexcept
      : QueryRawContractStateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kQueryDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes query_data = 2 [json_name = "queryData"];
  void clear_query_data() ;
  const std::string& query_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_query_data(Arg_&& arg, Args_... args);
  std::string* mutable_query_data();
  PROTOBUF_NODISCARD std::string* release_query_data();
  void set_allocated_query_data(std::string* value);

  private:
  const std::string& _internal_query_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_query_data(
      const std::string& value);
  std::string* _internal_mutable_query_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryRawContractStateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRawContractStateRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr query_data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractInfoRequest) */ {
 public:
  inline QueryContractInfoRequest() : QueryContractInfoRequest(nullptr) {}
  ~QueryContractInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractInfoRequest(const QueryContractInfoRequest& from) : QueryContractInfoRequest(nullptr, from) {}
  inline QueryContractInfoRequest(QueryContractInfoRequest&& from) noexcept
      : QueryContractInfoRequest(nullptr, std::move(from)) {}
  inline QueryContractInfoRequest& operator=(const QueryContractInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractInfoRequest& operator=(QueryContractInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryContractInfoRequest*>(
        &_QueryContractInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryContractInfoRequest& a, QueryContractInfoRequest& b) { a.Swap(&b); }
  inline void Swap(QueryContractInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractInfoRequest& from) { QueryContractInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractInfoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractInfoRequest"; }

 protected:
  explicit QueryContractInfoRequest(::google::protobuf::Arena* arena);
  QueryContractInfoRequest(::google::protobuf::Arena* arena, const QueryContractInfoRequest& from);
  QueryContractInfoRequest(::google::protobuf::Arena* arena, QueryContractInfoRequest&& from) noexcept
      : QueryContractInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractInfoRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCodeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryCodeRequest) */ {
 public:
  inline QueryCodeRequest() : QueryCodeRequest(nullptr) {}
  ~QueryCodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCodeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCodeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCodeRequest(const QueryCodeRequest& from) : QueryCodeRequest(nullptr, from) {}
  inline QueryCodeRequest(QueryCodeRequest&& from) noexcept
      : QueryCodeRequest(nullptr, std::move(from)) {}
  inline QueryCodeRequest& operator=(const QueryCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCodeRequest& operator=(QueryCodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCodeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCodeRequest* internal_default_instance() {
    return reinterpret_cast<const QueryCodeRequest*>(
        &_QueryCodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(QueryCodeRequest& a, QueryCodeRequest& b) { a.Swap(&b); }
  inline void Swap(QueryCodeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCodeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCodeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCodeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCodeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCodeRequest& from) { QueryCodeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCodeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryCodeRequest"; }

 protected:
  explicit QueryCodeRequest(::google::protobuf::Arena* arena);
  QueryCodeRequest(::google::protobuf::Arena* arena, const QueryCodeRequest& from);
  QueryCodeRequest(::google::protobuf::Arena* arena, QueryCodeRequest&& from) noexcept
      : QueryCodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeIdFieldNumber = 1,
  };
  // uint64 code_id = 1 [json_name = "codeId"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryCodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCodeRequest& from_msg);
    ::uint64_t code_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCodeInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryCodeInfoRequest) */ {
 public:
  inline QueryCodeInfoRequest() : QueryCodeInfoRequest(nullptr) {}
  ~QueryCodeInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCodeInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCodeInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCodeInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCodeInfoRequest(const QueryCodeInfoRequest& from) : QueryCodeInfoRequest(nullptr, from) {}
  inline QueryCodeInfoRequest(QueryCodeInfoRequest&& from) noexcept
      : QueryCodeInfoRequest(nullptr, std::move(from)) {}
  inline QueryCodeInfoRequest& operator=(const QueryCodeInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCodeInfoRequest& operator=(QueryCodeInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCodeInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCodeInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryCodeInfoRequest*>(
        &_QueryCodeInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(QueryCodeInfoRequest& a, QueryCodeInfoRequest& b) { a.Swap(&b); }
  inline void Swap(QueryCodeInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCodeInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCodeInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCodeInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCodeInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCodeInfoRequest& from) { QueryCodeInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCodeInfoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryCodeInfoRequest"; }

 protected:
  explicit QueryCodeInfoRequest(::google::protobuf::Arena* arena);
  QueryCodeInfoRequest(::google::protobuf::Arena* arena, const QueryCodeInfoRequest& from);
  QueryCodeInfoRequest(::google::protobuf::Arena* arena, QueryCodeInfoRequest&& from) noexcept
      : QueryCodeInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeIdFieldNumber = 1,
  };
  // uint64 code_id = 1 [json_name = "codeId"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryCodeInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCodeInfoRequest& from_msg);
    ::uint64_t code_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryBuildAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryBuildAddressResponse) */ {
 public:
  inline QueryBuildAddressResponse() : QueryBuildAddressResponse(nullptr) {}
  ~QueryBuildAddressResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryBuildAddressResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryBuildAddressResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryBuildAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryBuildAddressResponse(const QueryBuildAddressResponse& from) : QueryBuildAddressResponse(nullptr, from) {}
  inline QueryBuildAddressResponse(QueryBuildAddressResponse&& from) noexcept
      : QueryBuildAddressResponse(nullptr, std::move(from)) {}
  inline QueryBuildAddressResponse& operator=(const QueryBuildAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryBuildAddressResponse& operator=(QueryBuildAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryBuildAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryBuildAddressResponse* internal_default_instance() {
    return reinterpret_cast<const QueryBuildAddressResponse*>(
        &_QueryBuildAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(QueryBuildAddressResponse& a, QueryBuildAddressResponse& b) { a.Swap(&b); }
  inline void Swap(QueryBuildAddressResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryBuildAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryBuildAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryBuildAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryBuildAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryBuildAddressResponse& from) { QueryBuildAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryBuildAddressResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryBuildAddressResponse"; }

 protected:
  explicit QueryBuildAddressResponse(::google::protobuf::Arena* arena);
  QueryBuildAddressResponse(::google::protobuf::Arena* arena, const QueryBuildAddressResponse& from);
  QueryBuildAddressResponse(::google::protobuf::Arena* arena, QueryBuildAddressResponse&& from) noexcept
      : QueryBuildAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryBuildAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryBuildAddressResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryBuildAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryBuildAddressRequest) */ {
 public:
  inline QueryBuildAddressRequest() : QueryBuildAddressRequest(nullptr) {}
  ~QueryBuildAddressRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryBuildAddressRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryBuildAddressRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryBuildAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryBuildAddressRequest(const QueryBuildAddressRequest& from) : QueryBuildAddressRequest(nullptr, from) {}
  inline QueryBuildAddressRequest(QueryBuildAddressRequest&& from) noexcept
      : QueryBuildAddressRequest(nullptr, std::move(from)) {}
  inline QueryBuildAddressRequest& operator=(const QueryBuildAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryBuildAddressRequest& operator=(QueryBuildAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryBuildAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryBuildAddressRequest* internal_default_instance() {
    return reinterpret_cast<const QueryBuildAddressRequest*>(
        &_QueryBuildAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(QueryBuildAddressRequest& a, QueryBuildAddressRequest& b) { a.Swap(&b); }
  inline void Swap(QueryBuildAddressRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryBuildAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryBuildAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryBuildAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryBuildAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryBuildAddressRequest& from) { QueryBuildAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryBuildAddressRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryBuildAddressRequest"; }

 protected:
  explicit QueryBuildAddressRequest(::google::protobuf::Arena* arena);
  QueryBuildAddressRequest(::google::protobuf::Arena* arena, const QueryBuildAddressRequest& from);
  QueryBuildAddressRequest(::google::protobuf::Arena* arena, QueryBuildAddressRequest&& from) noexcept
      : QueryBuildAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeHashFieldNumber = 1,
    kCreatorAddressFieldNumber = 2,
    kSaltFieldNumber = 3,
    kInitArgsFieldNumber = 4,
  };
  // string code_hash = 1 [json_name = "codeHash"];
  void clear_code_hash() ;
  const std::string& code_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code_hash(Arg_&& arg, Args_... args);
  std::string* mutable_code_hash();
  PROTOBUF_NODISCARD std::string* release_code_hash();
  void set_allocated_code_hash(std::string* value);

  private:
  const std::string& _internal_code_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code_hash(
      const std::string& value);
  std::string* _internal_mutable_code_hash();

  public:
  // string creator_address = 2 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_creator_address() ;
  const std::string& creator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator_address(Arg_&& arg, Args_... args);
  std::string* mutable_creator_address();
  PROTOBUF_NODISCARD std::string* release_creator_address();
  void set_allocated_creator_address(std::string* value);

  private:
  const std::string& _internal_creator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator_address(
      const std::string& value);
  std::string* _internal_mutable_creator_address();

  public:
  // string salt = 3 [json_name = "salt"];
  void clear_salt() ;
  const std::string& salt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_salt(Arg_&& arg, Args_... args);
  std::string* mutable_salt();
  PROTOBUF_NODISCARD std::string* release_salt();
  void set_allocated_salt(std::string* value);

  private:
  const std::string& _internal_salt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_salt(
      const std::string& value);
  std::string* _internal_mutable_salt();

  public:
  // bytes init_args = 4 [json_name = "initArgs"];
  void clear_init_args() ;
  const std::string& init_args() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_init_args(Arg_&& arg, Args_... args);
  std::string* mutable_init_args();
  PROTOBUF_NODISCARD std::string* release_init_args();
  void set_allocated_init_args(std::string* value);

  private:
  const std::string& _internal_init_args() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_init_args(
      const std::string& value);
  std::string* _internal_mutable_init_args();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryBuildAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryBuildAddressRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr code_hash_;
    ::google::protobuf::internal::ArenaStringPtr creator_address_;
    ::google::protobuf::internal::ArenaStringPtr salt_;
    ::google::protobuf::internal::ArenaStringPtr init_args_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryPinnedCodesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryPinnedCodesResponse) */ {
 public:
  inline QueryPinnedCodesResponse() : QueryPinnedCodesResponse(nullptr) {}
  ~QueryPinnedCodesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryPinnedCodesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryPinnedCodesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryPinnedCodesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryPinnedCodesResponse(const QueryPinnedCodesResponse& from) : QueryPinnedCodesResponse(nullptr, from) {}
  inline QueryPinnedCodesResponse(QueryPinnedCodesResponse&& from) noexcept
      : QueryPinnedCodesResponse(nullptr, std::move(from)) {}
  inline QueryPinnedCodesResponse& operator=(const QueryPinnedCodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryPinnedCodesResponse& operator=(QueryPinnedCodesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryPinnedCodesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryPinnedCodesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryPinnedCodesResponse*>(
        &_QueryPinnedCodesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(QueryPinnedCodesResponse& a, QueryPinnedCodesResponse& b) { a.Swap(&b); }
  inline void Swap(QueryPinnedCodesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryPinnedCodesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryPinnedCodesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryPinnedCodesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryPinnedCodesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryPinnedCodesResponse& from) { QueryPinnedCodesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryPinnedCodesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryPinnedCodesResponse"; }

 protected:
  explicit QueryPinnedCodesResponse(::google::protobuf::Arena* arena);
  QueryPinnedCodesResponse(::google::protobuf::Arena* arena, const QueryPinnedCodesResponse& from);
  QueryPinnedCodesResponse(::google::protobuf::Arena* arena, QueryPinnedCodesResponse&& from) noexcept
      : QueryPinnedCodesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeIdsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated uint64 code_ids = 1 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs"];
  int code_ids_size() const;
  private:
  int _internal_code_ids_size() const;

  public:
  void clear_code_ids() ;
  ::uint64_t code_ids(int index) const;
  void set_code_ids(int index, ::uint64_t value);
  void add_code_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& code_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_code_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_code_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_code_ids();

  public:
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryPinnedCodesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryPinnedCodesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::uint64_t> code_ids_;
    ::google::protobuf::internal::CachedSize _code_ids_cached_byte_size_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryPinnedCodesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryPinnedCodesRequest) */ {
 public:
  inline QueryPinnedCodesRequest() : QueryPinnedCodesRequest(nullptr) {}
  ~QueryPinnedCodesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryPinnedCodesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryPinnedCodesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryPinnedCodesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryPinnedCodesRequest(const QueryPinnedCodesRequest& from) : QueryPinnedCodesRequest(nullptr, from) {}
  inline QueryPinnedCodesRequest(QueryPinnedCodesRequest&& from) noexcept
      : QueryPinnedCodesRequest(nullptr, std::move(from)) {}
  inline QueryPinnedCodesRequest& operator=(const QueryPinnedCodesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryPinnedCodesRequest& operator=(QueryPinnedCodesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryPinnedCodesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryPinnedCodesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryPinnedCodesRequest*>(
        &_QueryPinnedCodesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(QueryPinnedCodesRequest& a, QueryPinnedCodesRequest& b) { a.Swap(&b); }
  inline void Swap(QueryPinnedCodesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryPinnedCodesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryPinnedCodesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryPinnedCodesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryPinnedCodesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryPinnedCodesRequest& from) { QueryPinnedCodesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryPinnedCodesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryPinnedCodesRequest"; }

 protected:
  explicit QueryPinnedCodesRequest(::google::protobuf::Arena* arena);
  QueryPinnedCodesRequest(::google::protobuf::Arena* arena, const QueryPinnedCodesRequest& from);
  QueryPinnedCodesRequest(::google::protobuf::Arena* arena, QueryPinnedCodesRequest&& from) noexcept
      : QueryPinnedCodesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 2,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryPinnedCodesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryPinnedCodesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractsByCreatorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractsByCreatorResponse) */ {
 public:
  inline QueryContractsByCreatorResponse() : QueryContractsByCreatorResponse(nullptr) {}
  ~QueryContractsByCreatorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractsByCreatorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractsByCreatorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractsByCreatorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractsByCreatorResponse(const QueryContractsByCreatorResponse& from) : QueryContractsByCreatorResponse(nullptr, from) {}
  inline QueryContractsByCreatorResponse(QueryContractsByCreatorResponse&& from) noexcept
      : QueryContractsByCreatorResponse(nullptr, std::move(from)) {}
  inline QueryContractsByCreatorResponse& operator=(const QueryContractsByCreatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractsByCreatorResponse& operator=(QueryContractsByCreatorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractsByCreatorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractsByCreatorResponse* internal_default_instance() {
    return reinterpret_cast<const QueryContractsByCreatorResponse*>(
        &_QueryContractsByCreatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(QueryContractsByCreatorResponse& a, QueryContractsByCreatorResponse& b) { a.Swap(&b); }
  inline void Swap(QueryContractsByCreatorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractsByCreatorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractsByCreatorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractsByCreatorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractsByCreatorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractsByCreatorResponse& from) { QueryContractsByCreatorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractsByCreatorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractsByCreatorResponse"; }

 protected:
  explicit QueryContractsByCreatorResponse(::google::protobuf::Arena* arena);
  QueryContractsByCreatorResponse(::google::protobuf::Arena* arena, const QueryContractsByCreatorResponse& from);
  QueryContractsByCreatorResponse(::google::protobuf::Arena* arena, QueryContractsByCreatorResponse&& from) noexcept
      : QueryContractsByCreatorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContractAddressesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated string contract_addresses = 1 [json_name = "contractAddresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  int contract_addresses_size() const;
  private:
  int _internal_contract_addresses_size() const;

  public:
  void clear_contract_addresses() ;
  const std::string& contract_addresses(int index) const;
  std::string* mutable_contract_addresses(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract_addresses(int index, Arg_&& value, Args_... args);
  std::string* add_contract_addresses();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_contract_addresses(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& contract_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_contract_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_contract_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_contract_addresses();

  public:
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractsByCreatorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractsByCreatorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> contract_addresses_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractsByCreatorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractsByCreatorRequest) */ {
 public:
  inline QueryContractsByCreatorRequest() : QueryContractsByCreatorRequest(nullptr) {}
  ~QueryContractsByCreatorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractsByCreatorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractsByCreatorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractsByCreatorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractsByCreatorRequest(const QueryContractsByCreatorRequest& from) : QueryContractsByCreatorRequest(nullptr, from) {}
  inline QueryContractsByCreatorRequest(QueryContractsByCreatorRequest&& from) noexcept
      : QueryContractsByCreatorRequest(nullptr, std::move(from)) {}
  inline QueryContractsByCreatorRequest& operator=(const QueryContractsByCreatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractsByCreatorRequest& operator=(QueryContractsByCreatorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractsByCreatorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractsByCreatorRequest* internal_default_instance() {
    return reinterpret_cast<const QueryContractsByCreatorRequest*>(
        &_QueryContractsByCreatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(QueryContractsByCreatorRequest& a, QueryContractsByCreatorRequest& b) { a.Swap(&b); }
  inline void Swap(QueryContractsByCreatorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractsByCreatorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractsByCreatorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractsByCreatorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractsByCreatorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractsByCreatorRequest& from) { QueryContractsByCreatorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractsByCreatorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractsByCreatorRequest"; }

 protected:
  explicit QueryContractsByCreatorRequest(::google::protobuf::Arena* arena);
  QueryContractsByCreatorRequest(::google::protobuf::Arena* arena, const QueryContractsByCreatorRequest& from);
  QueryContractsByCreatorRequest(::google::protobuf::Arena* arena, QueryContractsByCreatorRequest&& from) noexcept
      : QueryContractsByCreatorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatorAddressFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string creator_address = 1 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_creator_address() ;
  const std::string& creator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator_address(Arg_&& arg, Args_... args);
  std::string* mutable_creator_address();
  PROTOBUF_NODISCARD std::string* release_creator_address();
  void set_allocated_creator_address(std::string* value);

  private:
  const std::string& _internal_creator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator_address(
      const std::string& value);
  std::string* _internal_mutable_creator_address();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractsByCreatorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractsByCreatorRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr creator_address_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractsByCodeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractsByCodeResponse) */ {
 public:
  inline QueryContractsByCodeResponse() : QueryContractsByCodeResponse(nullptr) {}
  ~QueryContractsByCodeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractsByCodeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractsByCodeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractsByCodeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractsByCodeResponse(const QueryContractsByCodeResponse& from) : QueryContractsByCodeResponse(nullptr, from) {}
  inline QueryContractsByCodeResponse(QueryContractsByCodeResponse&& from) noexcept
      : QueryContractsByCodeResponse(nullptr, std::move(from)) {}
  inline QueryContractsByCodeResponse& operator=(const QueryContractsByCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractsByCodeResponse& operator=(QueryContractsByCodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractsByCodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractsByCodeResponse* internal_default_instance() {
    return reinterpret_cast<const QueryContractsByCodeResponse*>(
        &_QueryContractsByCodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryContractsByCodeResponse& a, QueryContractsByCodeResponse& b) { a.Swap(&b); }
  inline void Swap(QueryContractsByCodeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractsByCodeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractsByCodeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractsByCodeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractsByCodeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractsByCodeResponse& from) { QueryContractsByCodeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractsByCodeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractsByCodeResponse"; }

 protected:
  explicit QueryContractsByCodeResponse(::google::protobuf::Arena* arena);
  QueryContractsByCodeResponse(::google::protobuf::Arena* arena, const QueryContractsByCodeResponse& from);
  QueryContractsByCodeResponse(::google::protobuf::Arena* arena, QueryContractsByCodeResponse&& from) noexcept
      : QueryContractsByCodeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContractsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated string contracts = 1 [json_name = "contracts", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  int contracts_size() const;
  private:
  int _internal_contracts_size() const;

  public:
  void clear_contracts() ;
  const std::string& contracts(int index) const;
  std::string* mutable_contracts(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contracts(int index, Arg_&& value, Args_... args);
  std::string* add_contracts();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_contracts(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& contracts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_contracts();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_contracts() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_contracts();

  public:
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractsByCodeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractsByCodeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> contracts_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractsByCodeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractsByCodeRequest) */ {
 public:
  inline QueryContractsByCodeRequest() : QueryContractsByCodeRequest(nullptr) {}
  ~QueryContractsByCodeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractsByCodeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractsByCodeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractsByCodeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractsByCodeRequest(const QueryContractsByCodeRequest& from) : QueryContractsByCodeRequest(nullptr, from) {}
  inline QueryContractsByCodeRequest(QueryContractsByCodeRequest&& from) noexcept
      : QueryContractsByCodeRequest(nullptr, std::move(from)) {}
  inline QueryContractsByCodeRequest& operator=(const QueryContractsByCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractsByCodeRequest& operator=(QueryContractsByCodeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractsByCodeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractsByCodeRequest* internal_default_instance() {
    return reinterpret_cast<const QueryContractsByCodeRequest*>(
        &_QueryContractsByCodeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryContractsByCodeRequest& a, QueryContractsByCodeRequest& b) { a.Swap(&b); }
  inline void Swap(QueryContractsByCodeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractsByCodeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractsByCodeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractsByCodeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractsByCodeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractsByCodeRequest& from) { QueryContractsByCodeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractsByCodeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractsByCodeRequest"; }

 protected:
  explicit QueryContractsByCodeRequest(::google::protobuf::Arena* arena);
  QueryContractsByCodeRequest(::google::protobuf::Arena* arena, const QueryContractsByCodeRequest& from);
  QueryContractsByCodeRequest(::google::protobuf::Arena* arena, QueryContractsByCodeRequest&& from) noexcept
      : QueryContractsByCodeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 2,
    kCodeIdFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // uint64 code_id = 1 [json_name = "codeId"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractsByCodeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractsByCodeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    ::uint64_t code_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractHistoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractHistoryRequest) */ {
 public:
  inline QueryContractHistoryRequest() : QueryContractHistoryRequest(nullptr) {}
  ~QueryContractHistoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractHistoryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractHistoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractHistoryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractHistoryRequest(const QueryContractHistoryRequest& from) : QueryContractHistoryRequest(nullptr, from) {}
  inline QueryContractHistoryRequest(QueryContractHistoryRequest&& from) noexcept
      : QueryContractHistoryRequest(nullptr, std::move(from)) {}
  inline QueryContractHistoryRequest& operator=(const QueryContractHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractHistoryRequest& operator=(QueryContractHistoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractHistoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractHistoryRequest* internal_default_instance() {
    return reinterpret_cast<const QueryContractHistoryRequest*>(
        &_QueryContractHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryContractHistoryRequest& a, QueryContractHistoryRequest& b) { a.Swap(&b); }
  inline void Swap(QueryContractHistoryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractHistoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractHistoryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractHistoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractHistoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractHistoryRequest& from) { QueryContractHistoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractHistoryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractHistoryRequest"; }

 protected:
  explicit QueryContractHistoryRequest(::google::protobuf::Arena* arena);
  QueryContractHistoryRequest(::google::protobuf::Arena* arena, const QueryContractHistoryRequest& from);
  QueryContractHistoryRequest(::google::protobuf::Arena* arena, QueryContractHistoryRequest&& from) noexcept
      : QueryContractHistoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractHistoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractHistoryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCodesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryCodesRequest) */ {
 public:
  inline QueryCodesRequest() : QueryCodesRequest(nullptr) {}
  ~QueryCodesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCodesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCodesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCodesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCodesRequest(const QueryCodesRequest& from) : QueryCodesRequest(nullptr, from) {}
  inline QueryCodesRequest(QueryCodesRequest&& from) noexcept
      : QueryCodesRequest(nullptr, std::move(from)) {}
  inline QueryCodesRequest& operator=(const QueryCodesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCodesRequest& operator=(QueryCodesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCodesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCodesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryCodesRequest*>(
        &_QueryCodesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(QueryCodesRequest& a, QueryCodesRequest& b) { a.Swap(&b); }
  inline void Swap(QueryCodesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCodesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCodesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCodesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCodesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCodesRequest& from) { QueryCodesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCodesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryCodesRequest"; }

 protected:
  explicit QueryCodesRequest(::google::protobuf::Arena* arena);
  QueryCodesRequest(::google::protobuf::Arena* arena, const QueryCodesRequest& from);
  QueryCodesRequest(::google::protobuf::Arena* arena, QueryCodesRequest&& from) noexcept
      : QueryCodesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryCodesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCodesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCodeInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryCodeInfoResponse) */ {
 public:
  inline QueryCodeInfoResponse() : QueryCodeInfoResponse(nullptr) {}
  ~QueryCodeInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCodeInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCodeInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCodeInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCodeInfoResponse(const QueryCodeInfoResponse& from) : QueryCodeInfoResponse(nullptr, from) {}
  inline QueryCodeInfoResponse(QueryCodeInfoResponse&& from) noexcept
      : QueryCodeInfoResponse(nullptr, std::move(from)) {}
  inline QueryCodeInfoResponse& operator=(const QueryCodeInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCodeInfoResponse& operator=(QueryCodeInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCodeInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCodeInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryCodeInfoResponse*>(
        &_QueryCodeInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(QueryCodeInfoResponse& a, QueryCodeInfoResponse& b) { a.Swap(&b); }
  inline void Swap(QueryCodeInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCodeInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCodeInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCodeInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCodeInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCodeInfoResponse& from) { QueryCodeInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCodeInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryCodeInfoResponse"; }

 protected:
  explicit QueryCodeInfoResponse(::google::protobuf::Arena* arena);
  QueryCodeInfoResponse(::google::protobuf::Arena* arena, const QueryCodeInfoResponse& from);
  QueryCodeInfoResponse(::google::protobuf::Arena* arena, QueryCodeInfoResponse&& from) noexcept
      : QueryCodeInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatorFieldNumber = 2,
    kChecksumFieldNumber = 3,
    kInstantiatePermissionFieldNumber = 4,
    kCodeIdFieldNumber = 1,
  };
  // string creator = 2 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_creator() ;
  const std::string& creator() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator(Arg_&& arg, Args_... args);
  std::string* mutable_creator();
  PROTOBUF_NODISCARD std::string* release_creator();
  void set_allocated_creator(std::string* value);

  private:
  const std::string& _internal_creator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator(
      const std::string& value);
  std::string* _internal_mutable_creator();

  public:
  // bytes checksum = 3 [json_name = "checksum", (.gogoproto.casttype) = "github.com/cometbft/cometbft/libs/bytes.HexBytes"];
  void clear_checksum() ;
  const std::string& checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_checksum();
  PROTOBUF_NODISCARD std::string* release_checksum();
  void set_allocated_checksum(std::string* value);

  private:
  const std::string& _internal_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_checksum(
      const std::string& value);
  std::string* _internal_mutable_checksum();

  public:
  // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_instantiate_permission() const;
  void clear_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_instantiate_permission();
  void set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  void unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_instantiate_permission();

  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_instantiate_permission();

  public:
  // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryCodeInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCodeInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr creator_;
    ::google::protobuf::internal::ArenaStringPtr checksum_;
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission_;
    ::uint64_t code_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllContractStateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryAllContractStateResponse) */ {
 public:
  inline QueryAllContractStateResponse() : QueryAllContractStateResponse(nullptr) {}
  ~QueryAllContractStateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllContractStateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllContractStateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllContractStateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllContractStateResponse(const QueryAllContractStateResponse& from) : QueryAllContractStateResponse(nullptr, from) {}
  inline QueryAllContractStateResponse(QueryAllContractStateResponse&& from) noexcept
      : QueryAllContractStateResponse(nullptr, std::move(from)) {}
  inline QueryAllContractStateResponse& operator=(const QueryAllContractStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllContractStateResponse& operator=(QueryAllContractStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllContractStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllContractStateResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAllContractStateResponse*>(
        &_QueryAllContractStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryAllContractStateResponse& a, QueryAllContractStateResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAllContractStateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllContractStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllContractStateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllContractStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllContractStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllContractStateResponse& from) { QueryAllContractStateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllContractStateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryAllContractStateResponse"; }

 protected:
  explicit QueryAllContractStateResponse(::google::protobuf::Arena* arena);
  QueryAllContractStateResponse(::google::protobuf::Arena* arena, const QueryAllContractStateResponse& from);
  QueryAllContractStateResponse(::google::protobuf::Arena* arena, QueryAllContractStateResponse&& from) noexcept
      : QueryAllContractStateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModelsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmwasm.wasm.v1.Model models = 1 [json_name = "models", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int models_size() const;
  private:
  int _internal_models_size() const;

  public:
  void clear_models() ;
  ::cosmwasm::wasm::v1::Model* mutable_models(int index);
  ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>* mutable_models();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>& _internal_models() const;
  ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>* _internal_mutable_models();
  public:
  const ::cosmwasm::wasm::v1::Model& models(int index) const;
  ::cosmwasm::wasm::v1::Model* add_models();
  const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>& models() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryAllContractStateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllContractStateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmwasm::wasm::v1::Model > models_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllContractStateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryAllContractStateRequest) */ {
 public:
  inline QueryAllContractStateRequest() : QueryAllContractStateRequest(nullptr) {}
  ~QueryAllContractStateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllContractStateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllContractStateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllContractStateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllContractStateRequest(const QueryAllContractStateRequest& from) : QueryAllContractStateRequest(nullptr, from) {}
  inline QueryAllContractStateRequest(QueryAllContractStateRequest&& from) noexcept
      : QueryAllContractStateRequest(nullptr, std::move(from)) {}
  inline QueryAllContractStateRequest& operator=(const QueryAllContractStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllContractStateRequest& operator=(QueryAllContractStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllContractStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllContractStateRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAllContractStateRequest*>(
        &_QueryAllContractStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryAllContractStateRequest& a, QueryAllContractStateRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAllContractStateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllContractStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllContractStateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllContractStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllContractStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllContractStateRequest& from) { QueryAllContractStateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllContractStateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryAllContractStateRequest"; }

 protected:
  explicit QueryAllContractStateRequest(::google::protobuf::Arena* arena);
  QueryAllContractStateRequest(::google::protobuf::Arena* arena, const QueryAllContractStateRequest& from);
  QueryAllContractStateRequest(::google::protobuf::Arena* arena, QueryAllContractStateRequest&& from) noexcept
      : QueryAllContractStateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryAllContractStateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllContractStateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class CodeInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.CodeInfoResponse) */ {
 public:
  inline CodeInfoResponse() : CodeInfoResponse(nullptr) {}
  ~CodeInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CodeInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CodeInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CodeInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CodeInfoResponse(const CodeInfoResponse& from) : CodeInfoResponse(nullptr, from) {}
  inline CodeInfoResponse(CodeInfoResponse&& from) noexcept
      : CodeInfoResponse(nullptr, std::move(from)) {}
  inline CodeInfoResponse& operator=(const CodeInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CodeInfoResponse& operator=(CodeInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CodeInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CodeInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CodeInfoResponse*>(
        &_CodeInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(CodeInfoResponse& a, CodeInfoResponse& b) { a.Swap(&b); }
  inline void Swap(CodeInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CodeInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CodeInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CodeInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CodeInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CodeInfoResponse& from) { CodeInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CodeInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.CodeInfoResponse"; }

 protected:
  explicit CodeInfoResponse(::google::protobuf::Arena* arena);
  CodeInfoResponse(::google::protobuf::Arena* arena, const CodeInfoResponse& from);
  CodeInfoResponse(::google::protobuf::Arena* arena, CodeInfoResponse&& from) noexcept
      : CodeInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatorFieldNumber = 2,
    kDataHashFieldNumber = 3,
    kInstantiatePermissionFieldNumber = 6,
    kCodeIdFieldNumber = 1,
  };
  // string creator = 2 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_creator() ;
  const std::string& creator() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_creator(Arg_&& arg, Args_... args);
  std::string* mutable_creator();
  PROTOBUF_NODISCARD std::string* release_creator();
  void set_allocated_creator(std::string* value);

  private:
  const std::string& _internal_creator() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_creator(
      const std::string& value);
  std::string* _internal_mutable_creator();

  public:
  // bytes data_hash = 3 [json_name = "dataHash", (.gogoproto.casttype) = "github.com/cometbft/cometbft/libs/bytes.HexBytes"];
  void clear_data_hash() ;
  const std::string& data_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_hash(Arg_&& arg, Args_... args);
  std::string* mutable_data_hash();
  PROTOBUF_NODISCARD std::string* release_data_hash();
  void set_allocated_data_hash(std::string* value);

  private:
  const std::string& _internal_data_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_hash(
      const std::string& value);
  std::string* _internal_mutable_data_hash();

  public:
  // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 6 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_instantiate_permission() const;
  void clear_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_instantiate_permission();
  void set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  void unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_instantiate_permission();

  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_instantiate_permission();

  public:
  // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID", (.gogoproto.jsontag) = "id"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.CodeInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 1,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CodeInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr creator_;
    ::google::protobuf::internal::ArenaStringPtr data_hash_;
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission_;
    ::uint64_t code_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .cosmwasm.wasm.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmwasm::wasm::v1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::Params* release_params();
  ::cosmwasm::wasm::v1::Params* mutable_params();
  void set_allocated_params(::cosmwasm::wasm::v1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmwasm::wasm::v1::Params* value);
  ::cosmwasm::wasm::v1::Params* unsafe_arena_release_params();

  private:
  const ::cosmwasm::wasm::v1::Params& _internal_params() const;
  ::cosmwasm::wasm::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmwasm::wasm::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractInfoResponse) */ {
 public:
  inline QueryContractInfoResponse() : QueryContractInfoResponse(nullptr) {}
  ~QueryContractInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractInfoResponse(const QueryContractInfoResponse& from) : QueryContractInfoResponse(nullptr, from) {}
  inline QueryContractInfoResponse(QueryContractInfoResponse&& from) noexcept
      : QueryContractInfoResponse(nullptr, std::move(from)) {}
  inline QueryContractInfoResponse& operator=(const QueryContractInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractInfoResponse& operator=(QueryContractInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryContractInfoResponse*>(
        &_QueryContractInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryContractInfoResponse& a, QueryContractInfoResponse& b) { a.Swap(&b); }
  inline void Swap(QueryContractInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractInfoResponse& from) { QueryContractInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractInfoResponse"; }

 protected:
  explicit QueryContractInfoResponse(::google::protobuf::Arena* arena);
  QueryContractInfoResponse(::google::protobuf::Arena* arena, const QueryContractInfoResponse& from);
  QueryContractInfoResponse(::google::protobuf::Arena* arena, QueryContractInfoResponse&& from) noexcept
      : QueryContractInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kContractInfoFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // .cosmwasm.wasm.v1.ContractInfo contract_info = 2 [json_name = "contractInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true, (.gogoproto.jsontag) = "", (.amino.dont_omitempty) = true];
  bool has_contract_info() const;
  void clear_contract_info() ;
  const ::cosmwasm::wasm::v1::ContractInfo& contract_info() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::ContractInfo* release_contract_info();
  ::cosmwasm::wasm::v1::ContractInfo* mutable_contract_info();
  void set_allocated_contract_info(::cosmwasm::wasm::v1::ContractInfo* value);
  void unsafe_arena_set_allocated_contract_info(::cosmwasm::wasm::v1::ContractInfo* value);
  ::cosmwasm::wasm::v1::ContractInfo* unsafe_arena_release_contract_info();

  private:
  const ::cosmwasm::wasm::v1::ContractInfo& _internal_contract_info() const;
  ::cosmwasm::wasm::v1::ContractInfo* _internal_mutable_contract_info();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::cosmwasm::wasm::v1::ContractInfo* contract_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContractHistoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryContractHistoryResponse) */ {
 public:
  inline QueryContractHistoryResponse() : QueryContractHistoryResponse(nullptr) {}
  ~QueryContractHistoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContractHistoryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContractHistoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContractHistoryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContractHistoryResponse(const QueryContractHistoryResponse& from) : QueryContractHistoryResponse(nullptr, from) {}
  inline QueryContractHistoryResponse(QueryContractHistoryResponse&& from) noexcept
      : QueryContractHistoryResponse(nullptr, std::move(from)) {}
  inline QueryContractHistoryResponse& operator=(const QueryContractHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContractHistoryResponse& operator=(QueryContractHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContractHistoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContractHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const QueryContractHistoryResponse*>(
        &_QueryContractHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryContractHistoryResponse& a, QueryContractHistoryResponse& b) { a.Swap(&b); }
  inline void Swap(QueryContractHistoryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContractHistoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContractHistoryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContractHistoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContractHistoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContractHistoryResponse& from) { QueryContractHistoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContractHistoryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryContractHistoryResponse"; }

 protected:
  explicit QueryContractHistoryResponse(::google::protobuf::Arena* arena);
  QueryContractHistoryResponse(::google::protobuf::Arena* arena, const QueryContractHistoryResponse& from);
  QueryContractHistoryResponse(::google::protobuf::Arena* arena, QueryContractHistoryResponse&& from) noexcept
      : QueryContractHistoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmwasm.wasm.v1.ContractCodeHistoryEntry entries = 1 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::cosmwasm::wasm::v1::ContractCodeHistoryEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>* mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>* _internal_mutable_entries();
  public:
  const ::cosmwasm::wasm::v1::ContractCodeHistoryEntry& entries(int index) const;
  ::cosmwasm::wasm::v1::ContractCodeHistoryEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>& entries() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryContractHistoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContractHistoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmwasm::wasm::v1::ContractCodeHistoryEntry > entries_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCodesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryCodesResponse) */ {
 public:
  inline QueryCodesResponse() : QueryCodesResponse(nullptr) {}
  ~QueryCodesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCodesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCodesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCodesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCodesResponse(const QueryCodesResponse& from) : QueryCodesResponse(nullptr, from) {}
  inline QueryCodesResponse(QueryCodesResponse&& from) noexcept
      : QueryCodesResponse(nullptr, std::move(from)) {}
  inline QueryCodesResponse& operator=(const QueryCodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCodesResponse& operator=(QueryCodesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCodesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCodesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryCodesResponse*>(
        &_QueryCodesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(QueryCodesResponse& a, QueryCodesResponse& b) { a.Swap(&b); }
  inline void Swap(QueryCodesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCodesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCodesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCodesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCodesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCodesResponse& from) { QueryCodesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCodesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryCodesResponse"; }

 protected:
  explicit QueryCodesResponse(::google::protobuf::Arena* arena);
  QueryCodesResponse(::google::protobuf::Arena* arena, const QueryCodesResponse& from);
  QueryCodesResponse(::google::protobuf::Arena* arena, QueryCodesResponse&& from) noexcept
      : QueryCodesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeInfosFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmwasm.wasm.v1.CodeInfoResponse code_infos = 1 [json_name = "codeInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int code_infos_size() const;
  private:
  int _internal_code_infos_size() const;

  public:
  void clear_code_infos() ;
  ::cosmwasm::wasm::v1::CodeInfoResponse* mutable_code_infos(int index);
  ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>* mutable_code_infos();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>& _internal_code_infos() const;
  ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>* _internal_mutable_code_infos();
  public:
  const ::cosmwasm::wasm::v1::CodeInfoResponse& code_infos(int index) const;
  ::cosmwasm::wasm::v1::CodeInfoResponse* add_code_infos();
  const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>& code_infos() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryCodesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCodesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmwasm::wasm::v1::CodeInfoResponse > code_infos_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCodeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.QueryCodeResponse) */ {
 public:
  inline QueryCodeResponse() : QueryCodeResponse(nullptr) {}
  ~QueryCodeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCodeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCodeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCodeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCodeResponse(const QueryCodeResponse& from) : QueryCodeResponse(nullptr, from) {}
  inline QueryCodeResponse(QueryCodeResponse&& from) noexcept
      : QueryCodeResponse(nullptr, std::move(from)) {}
  inline QueryCodeResponse& operator=(const QueryCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCodeResponse& operator=(QueryCodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCodeResponse* internal_default_instance() {
    return reinterpret_cast<const QueryCodeResponse*>(
        &_QueryCodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QueryCodeResponse& a, QueryCodeResponse& b) { a.Swap(&b); }
  inline void Swap(QueryCodeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCodeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCodeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCodeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCodeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCodeResponse& from) { QueryCodeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCodeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.QueryCodeResponse"; }

 protected:
  explicit QueryCodeResponse(::google::protobuf::Arena* arena);
  QueryCodeResponse(::google::protobuf::Arena* arena, const QueryCodeResponse& from);
  QueryCodeResponse(::google::protobuf::Arena* arena, QueryCodeResponse&& from) noexcept
      : QueryCodeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kCodeInfoFieldNumber = 1,
  };
  // bytes data = 2 [json_name = "data", (.gogoproto.jsontag) = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // .cosmwasm.wasm.v1.CodeInfoResponse code_info = 1 [json_name = "codeInfo", (.gogoproto.embed) = true, (.gogoproto.jsontag) = ""];
  bool has_code_info() const;
  void clear_code_info() ;
  const ::cosmwasm::wasm::v1::CodeInfoResponse& code_info() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::CodeInfoResponse* release_code_info();
  ::cosmwasm::wasm::v1::CodeInfoResponse* mutable_code_info();
  void set_allocated_code_info(::cosmwasm::wasm::v1::CodeInfoResponse* value);
  void unsafe_arena_set_allocated_code_info(::cosmwasm::wasm::v1::CodeInfoResponse* value);
  ::cosmwasm::wasm::v1::CodeInfoResponse* unsafe_arena_release_code_info();

  private:
  const ::cosmwasm::wasm::v1::CodeInfoResponse& _internal_code_info() const;
  ::cosmwasm::wasm::v1::CodeInfoResponse* _internal_mutable_code_info();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.QueryCodeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCodeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::cosmwasm::wasm::v1::CodeInfoResponse* code_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryContractInfoRequest

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryContractInfoRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryContractInfoRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractInfoRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryContractInfoRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryContractInfoRequest.address)
}
inline std::string* QueryContractInfoRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractInfoRequest.address)
  return _s;
}
inline const std::string& QueryContractInfoRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryContractInfoRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryContractInfoRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryContractInfoRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractInfoRequest.address)
  return _impl_.address_.Release();
}
inline void QueryContractInfoRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractInfoRequest.address)
}

// -------------------------------------------------------------------

// QueryContractInfoResponse

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryContractInfoResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryContractInfoResponse::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractInfoResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryContractInfoResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryContractInfoResponse.address)
}
inline std::string* QueryContractInfoResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractInfoResponse.address)
  return _s;
}
inline const std::string& QueryContractInfoResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryContractInfoResponse::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryContractInfoResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryContractInfoResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractInfoResponse.address)
  return _impl_.address_.Release();
}
inline void QueryContractInfoResponse::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractInfoResponse.address)
}

// .cosmwasm.wasm.v1.ContractInfo contract_info = 2 [json_name = "contractInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true, (.gogoproto.jsontag) = "", (.amino.dont_omitempty) = true];
inline bool QueryContractInfoResponse::has_contract_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.contract_info_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::ContractInfo& QueryContractInfoResponse::_internal_contract_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::ContractInfo* p = _impl_.contract_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::ContractInfo&>(::cosmwasm::wasm::v1::_ContractInfo_default_instance_);
}
inline const ::cosmwasm::wasm::v1::ContractInfo& QueryContractInfoResponse::contract_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractInfoResponse.contract_info)
  return _internal_contract_info();
}
inline void QueryContractInfoResponse::unsafe_arena_set_allocated_contract_info(::cosmwasm::wasm::v1::ContractInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.contract_info_);
  }
  _impl_.contract_info_ = reinterpret_cast<::cosmwasm::wasm::v1::ContractInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryContractInfoResponse.contract_info)
}
inline ::cosmwasm::wasm::v1::ContractInfo* QueryContractInfoResponse::release_contract_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::ContractInfo* released = _impl_.contract_info_;
  _impl_.contract_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::ContractInfo* QueryContractInfoResponse::unsafe_arena_release_contract_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractInfoResponse.contract_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::ContractInfo* temp = _impl_.contract_info_;
  _impl_.contract_info_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::ContractInfo* QueryContractInfoResponse::_internal_mutable_contract_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.contract_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::ContractInfo>(GetArena());
    _impl_.contract_info_ = reinterpret_cast<::cosmwasm::wasm::v1::ContractInfo*>(p);
  }
  return _impl_.contract_info_;
}
inline ::cosmwasm::wasm::v1::ContractInfo* QueryContractInfoResponse::mutable_contract_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::ContractInfo* _msg = _internal_mutable_contract_info();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractInfoResponse.contract_info)
  return _msg;
}
inline void QueryContractInfoResponse::set_allocated_contract_info(::cosmwasm::wasm::v1::ContractInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.contract_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.contract_info_ = reinterpret_cast<::cosmwasm::wasm::v1::ContractInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractInfoResponse.contract_info)
}

// -------------------------------------------------------------------

// QueryContractHistoryRequest

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryContractHistoryRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryContractHistoryRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractHistoryRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryContractHistoryRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryContractHistoryRequest.address)
}
inline std::string* QueryContractHistoryRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractHistoryRequest.address)
  return _s;
}
inline const std::string& QueryContractHistoryRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryContractHistoryRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryContractHistoryRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryContractHistoryRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractHistoryRequest.address)
  return _impl_.address_.Release();
}
inline void QueryContractHistoryRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractHistoryRequest.address)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryContractHistoryRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryContractHistoryRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryContractHistoryRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractHistoryRequest.pagination)
  return _internal_pagination();
}
inline void QueryContractHistoryRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryContractHistoryRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractHistoryRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractHistoryRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractHistoryRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractHistoryRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractHistoryRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractHistoryRequest.pagination)
  return _msg;
}
inline void QueryContractHistoryRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractHistoryRequest.pagination)
}

// -------------------------------------------------------------------

// QueryContractHistoryResponse

// repeated .cosmwasm.wasm.v1.ContractCodeHistoryEntry entries = 1 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryContractHistoryResponse::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int QueryContractHistoryResponse::entries_size() const {
  return _internal_entries_size();
}
inline ::cosmwasm::wasm::v1::ContractCodeHistoryEntry* QueryContractHistoryResponse::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractHistoryResponse.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>* QueryContractHistoryResponse::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.QueryContractHistoryResponse.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::cosmwasm::wasm::v1::ContractCodeHistoryEntry& QueryContractHistoryResponse::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractHistoryResponse.entries)
  return _internal_entries().Get(index);
}
inline ::cosmwasm::wasm::v1::ContractCodeHistoryEntry* QueryContractHistoryResponse::add_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmwasm::wasm::v1::ContractCodeHistoryEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.QueryContractHistoryResponse.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>& QueryContractHistoryResponse::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.QueryContractHistoryResponse.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>&
QueryContractHistoryResponse::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::ContractCodeHistoryEntry>*
QueryContractHistoryResponse::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryContractHistoryResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryContractHistoryResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryContractHistoryResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractHistoryResponse.pagination)
  return _internal_pagination();
}
inline void QueryContractHistoryResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryContractHistoryResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractHistoryResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractHistoryResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractHistoryResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractHistoryResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractHistoryResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractHistoryResponse.pagination)
  return _msg;
}
inline void QueryContractHistoryResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractHistoryResponse.pagination)
}

// -------------------------------------------------------------------

// QueryContractsByCodeRequest

// uint64 code_id = 1 [json_name = "codeId"];
inline void QueryContractsByCodeRequest::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryContractsByCodeRequest::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCodeRequest.code_id)
  return _internal_code_id();
}
inline void QueryContractsByCodeRequest::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryContractsByCodeRequest.code_id)
}
inline ::uint64_t QueryContractsByCodeRequest::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void QueryContractsByCodeRequest::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryContractsByCodeRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryContractsByCodeRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryContractsByCodeRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCodeRequest.pagination)
  return _internal_pagination();
}
inline void QueryContractsByCodeRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryContractsByCodeRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCodeRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCodeRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractsByCodeRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCodeRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCodeRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractsByCodeRequest.pagination)
  return _msg;
}
inline void QueryContractsByCodeRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractsByCodeRequest.pagination)
}

// -------------------------------------------------------------------

// QueryContractsByCodeResponse

// repeated string contracts = 1 [json_name = "contracts", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline int QueryContractsByCodeResponse::_internal_contracts_size() const {
  return _internal_contracts().size();
}
inline int QueryContractsByCodeResponse::contracts_size() const {
  return _internal_contracts_size();
}
inline void QueryContractsByCodeResponse::clear_contracts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contracts_.Clear();
}
inline std::string* QueryContractsByCodeResponse::add_contracts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_contracts()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts)
  return _s;
}
inline const std::string& QueryContractsByCodeResponse::contracts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts)
  return _internal_contracts().Get(index);
}
inline std::string* QueryContractsByCodeResponse::mutable_contracts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts)
  return _internal_mutable_contracts()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void QueryContractsByCodeResponse::set_contracts(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_contracts()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts)
}
template <typename Arg_, typename... Args_>
inline void QueryContractsByCodeResponse::add_contracts(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_contracts(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryContractsByCodeResponse::contracts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts)
  return _internal_contracts();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryContractsByCodeResponse::mutable_contracts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.QueryContractsByCodeResponse.contracts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contracts();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryContractsByCodeResponse::_internal_contracts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contracts_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryContractsByCodeResponse::_internal_mutable_contracts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contracts_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryContractsByCodeResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryContractsByCodeResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryContractsByCodeResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCodeResponse.pagination)
  return _internal_pagination();
}
inline void QueryContractsByCodeResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryContractsByCodeResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCodeResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCodeResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractsByCodeResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCodeResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCodeResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractsByCodeResponse.pagination)
  return _msg;
}
inline void QueryContractsByCodeResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractsByCodeResponse.pagination)
}

// -------------------------------------------------------------------

// QueryAllContractStateRequest

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAllContractStateRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryAllContractStateRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryAllContractStateRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAllContractStateRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryAllContractStateRequest.address)
}
inline std::string* QueryAllContractStateRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryAllContractStateRequest.address)
  return _s;
}
inline const std::string& QueryAllContractStateRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryAllContractStateRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryAllContractStateRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryAllContractStateRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryAllContractStateRequest.address)
  return _impl_.address_.Release();
}
inline void QueryAllContractStateRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryAllContractStateRequest.address)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryAllContractStateRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllContractStateRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllContractStateRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryAllContractStateRequest.pagination)
  return _internal_pagination();
}
inline void QueryAllContractStateRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryAllContractStateRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllContractStateRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllContractStateRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryAllContractStateRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllContractStateRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllContractStateRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryAllContractStateRequest.pagination)
  return _msg;
}
inline void QueryAllContractStateRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryAllContractStateRequest.pagination)
}

// -------------------------------------------------------------------

// QueryAllContractStateResponse

// repeated .cosmwasm.wasm.v1.Model models = 1 [json_name = "models", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryAllContractStateResponse::_internal_models_size() const {
  return _internal_models().size();
}
inline int QueryAllContractStateResponse::models_size() const {
  return _internal_models_size();
}
inline ::cosmwasm::wasm::v1::Model* QueryAllContractStateResponse::mutable_models(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryAllContractStateResponse.models)
  return _internal_mutable_models()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>* QueryAllContractStateResponse::mutable_models()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.QueryAllContractStateResponse.models)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_models();
}
inline const ::cosmwasm::wasm::v1::Model& QueryAllContractStateResponse::models(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryAllContractStateResponse.models)
  return _internal_models().Get(index);
}
inline ::cosmwasm::wasm::v1::Model* QueryAllContractStateResponse::add_models() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmwasm::wasm::v1::Model* _add = _internal_mutable_models()->Add();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.QueryAllContractStateResponse.models)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>& QueryAllContractStateResponse::models() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.QueryAllContractStateResponse.models)
  return _internal_models();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>&
QueryAllContractStateResponse::_internal_models() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.models_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::Model>*
QueryAllContractStateResponse::_internal_mutable_models() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.models_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryAllContractStateResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllContractStateResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllContractStateResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryAllContractStateResponse.pagination)
  return _internal_pagination();
}
inline void QueryAllContractStateResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryAllContractStateResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllContractStateResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllContractStateResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryAllContractStateResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllContractStateResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllContractStateResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryAllContractStateResponse.pagination)
  return _msg;
}
inline void QueryAllContractStateResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryAllContractStateResponse.pagination)
}

// -------------------------------------------------------------------

// QueryRawContractStateRequest

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryRawContractStateRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryRawContractStateRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryRawContractStateRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRawContractStateRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryRawContractStateRequest.address)
}
inline std::string* QueryRawContractStateRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryRawContractStateRequest.address)
  return _s;
}
inline const std::string& QueryRawContractStateRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryRawContractStateRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryRawContractStateRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryRawContractStateRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryRawContractStateRequest.address)
  return _impl_.address_.Release();
}
inline void QueryRawContractStateRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryRawContractStateRequest.address)
}

// bytes query_data = 2 [json_name = "queryData"];
inline void QueryRawContractStateRequest::clear_query_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.ClearToEmpty();
}
inline const std::string& QueryRawContractStateRequest::query_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryRawContractStateRequest.query_data)
  return _internal_query_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRawContractStateRequest::set_query_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryRawContractStateRequest.query_data)
}
inline std::string* QueryRawContractStateRequest::mutable_query_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_query_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryRawContractStateRequest.query_data)
  return _s;
}
inline const std::string& QueryRawContractStateRequest::_internal_query_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.query_data_.Get();
}
inline void QueryRawContractStateRequest::_internal_set_query_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.Set(value, GetArena());
}
inline std::string* QueryRawContractStateRequest::_internal_mutable_query_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.query_data_.Mutable( GetArena());
}
inline std::string* QueryRawContractStateRequest::release_query_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryRawContractStateRequest.query_data)
  return _impl_.query_data_.Release();
}
inline void QueryRawContractStateRequest::set_allocated_query_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.query_data_.IsDefault()) {
    _impl_.query_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryRawContractStateRequest.query_data)
}

// -------------------------------------------------------------------

// QueryRawContractStateResponse

// bytes data = 1 [json_name = "data"];
inline void QueryRawContractStateResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& QueryRawContractStateResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryRawContractStateResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRawContractStateResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryRawContractStateResponse.data)
}
inline std::string* QueryRawContractStateResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryRawContractStateResponse.data)
  return _s;
}
inline const std::string& QueryRawContractStateResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void QueryRawContractStateResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* QueryRawContractStateResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* QueryRawContractStateResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryRawContractStateResponse.data)
  return _impl_.data_.Release();
}
inline void QueryRawContractStateResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryRawContractStateResponse.data)
}

// -------------------------------------------------------------------

// QuerySmartContractStateRequest

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QuerySmartContractStateRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QuerySmartContractStateRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QuerySmartContractStateRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuerySmartContractStateRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QuerySmartContractStateRequest.address)
}
inline std::string* QuerySmartContractStateRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QuerySmartContractStateRequest.address)
  return _s;
}
inline const std::string& QuerySmartContractStateRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QuerySmartContractStateRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QuerySmartContractStateRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QuerySmartContractStateRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QuerySmartContractStateRequest.address)
  return _impl_.address_.Release();
}
inline void QuerySmartContractStateRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QuerySmartContractStateRequest.address)
}

// bytes query_data = 2 [json_name = "queryData", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void QuerySmartContractStateRequest::clear_query_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.ClearToEmpty();
}
inline const std::string& QuerySmartContractStateRequest::query_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QuerySmartContractStateRequest.query_data)
  return _internal_query_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuerySmartContractStateRequest::set_query_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QuerySmartContractStateRequest.query_data)
}
inline std::string* QuerySmartContractStateRequest::mutable_query_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_query_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QuerySmartContractStateRequest.query_data)
  return _s;
}
inline const std::string& QuerySmartContractStateRequest::_internal_query_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.query_data_.Get();
}
inline void QuerySmartContractStateRequest::_internal_set_query_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.Set(value, GetArena());
}
inline std::string* QuerySmartContractStateRequest::_internal_mutable_query_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.query_data_.Mutable( GetArena());
}
inline std::string* QuerySmartContractStateRequest::release_query_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QuerySmartContractStateRequest.query_data)
  return _impl_.query_data_.Release();
}
inline void QuerySmartContractStateRequest::set_allocated_query_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.query_data_.IsDefault()) {
    _impl_.query_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QuerySmartContractStateRequest.query_data)
}

// -------------------------------------------------------------------

// QuerySmartContractStateResponse

// bytes data = 1 [json_name = "data", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void QuerySmartContractStateResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& QuerySmartContractStateResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QuerySmartContractStateResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QuerySmartContractStateResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QuerySmartContractStateResponse.data)
}
inline std::string* QuerySmartContractStateResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QuerySmartContractStateResponse.data)
  return _s;
}
inline const std::string& QuerySmartContractStateResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void QuerySmartContractStateResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* QuerySmartContractStateResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* QuerySmartContractStateResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QuerySmartContractStateResponse.data)
  return _impl_.data_.Release();
}
inline void QuerySmartContractStateResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QuerySmartContractStateResponse.data)
}

// -------------------------------------------------------------------

// QueryCodeRequest

// uint64 code_id = 1 [json_name = "codeId"];
inline void QueryCodeRequest::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryCodeRequest::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeRequest.code_id)
  return _internal_code_id();
}
inline void QueryCodeRequest::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryCodeRequest.code_id)
}
inline ::uint64_t QueryCodeRequest::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void QueryCodeRequest::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// -------------------------------------------------------------------

// QueryCodeInfoRequest

// uint64 code_id = 1 [json_name = "codeId"];
inline void QueryCodeInfoRequest::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryCodeInfoRequest::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeInfoRequest.code_id)
  return _internal_code_id();
}
inline void QueryCodeInfoRequest::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryCodeInfoRequest.code_id)
}
inline ::uint64_t QueryCodeInfoRequest::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void QueryCodeInfoRequest::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// -------------------------------------------------------------------

// QueryCodeInfoResponse

// uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void QueryCodeInfoResponse::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryCodeInfoResponse::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeInfoResponse.code_id)
  return _internal_code_id();
}
inline void QueryCodeInfoResponse::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryCodeInfoResponse.code_id)
}
inline ::uint64_t QueryCodeInfoResponse::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void QueryCodeInfoResponse::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// string creator = 2 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryCodeInfoResponse::clear_creator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.ClearToEmpty();
}
inline const std::string& QueryCodeInfoResponse::creator() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeInfoResponse.creator)
  return _internal_creator();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryCodeInfoResponse::set_creator(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryCodeInfoResponse.creator)
}
inline std::string* QueryCodeInfoResponse::mutable_creator() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodeInfoResponse.creator)
  return _s;
}
inline const std::string& QueryCodeInfoResponse::_internal_creator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_.Get();
}
inline void QueryCodeInfoResponse::_internal_set_creator(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.Set(value, GetArena());
}
inline std::string* QueryCodeInfoResponse::_internal_mutable_creator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_.Mutable( GetArena());
}
inline std::string* QueryCodeInfoResponse::release_creator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryCodeInfoResponse.creator)
  return _impl_.creator_.Release();
}
inline void QueryCodeInfoResponse::set_allocated_creator(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_.IsDefault()) {
    _impl_.creator_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryCodeInfoResponse.creator)
}

// bytes checksum = 3 [json_name = "checksum", (.gogoproto.casttype) = "github.com/cometbft/cometbft/libs/bytes.HexBytes"];
inline void QueryCodeInfoResponse::clear_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.ClearToEmpty();
}
inline const std::string& QueryCodeInfoResponse::checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeInfoResponse.checksum)
  return _internal_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryCodeInfoResponse::set_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryCodeInfoResponse.checksum)
}
inline std::string* QueryCodeInfoResponse::mutable_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_checksum();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodeInfoResponse.checksum)
  return _s;
}
inline const std::string& QueryCodeInfoResponse::_internal_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_.Get();
}
inline void QueryCodeInfoResponse::_internal_set_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.Set(value, GetArena());
}
inline std::string* QueryCodeInfoResponse::_internal_mutable_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.checksum_.Mutable( GetArena());
}
inline std::string* QueryCodeInfoResponse::release_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryCodeInfoResponse.checksum)
  return _impl_.checksum_.Release();
}
inline void QueryCodeInfoResponse::set_allocated_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.checksum_.IsDefault()) {
    _impl_.checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryCodeInfoResponse.checksum)
}

// .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryCodeInfoResponse::has_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& QueryCodeInfoResponse::_internal_instantiate_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& QueryCodeInfoResponse::instantiate_permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeInfoResponse.instantiate_permission)
  return _internal_instantiate_permission();
}
inline void QueryCodeInfoResponse::unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }
  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryCodeInfoResponse.instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* QueryCodeInfoResponse::release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* released = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::AccessConfig* QueryCodeInfoResponse::unsafe_arena_release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryCodeInfoResponse.instantiate_permission)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* QueryCodeInfoResponse::_internal_mutable_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::AccessConfig>(GetArena());
    _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(p);
  }
  return _impl_.instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* QueryCodeInfoResponse::mutable_instantiate_permission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodeInfoResponse.instantiate_permission)
  return _msg;
}
inline void QueryCodeInfoResponse::set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryCodeInfoResponse.instantiate_permission)
}

// -------------------------------------------------------------------

// CodeInfoResponse

// uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID", (.gogoproto.jsontag) = "id"];
inline void CodeInfoResponse::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t CodeInfoResponse::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.CodeInfoResponse.code_id)
  return _internal_code_id();
}
inline void CodeInfoResponse::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.CodeInfoResponse.code_id)
}
inline ::uint64_t CodeInfoResponse::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void CodeInfoResponse::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// string creator = 2 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void CodeInfoResponse::clear_creator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.ClearToEmpty();
}
inline const std::string& CodeInfoResponse::creator() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.CodeInfoResponse.creator)
  return _internal_creator();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CodeInfoResponse::set_creator(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.CodeInfoResponse.creator)
}
inline std::string* CodeInfoResponse::mutable_creator() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.CodeInfoResponse.creator)
  return _s;
}
inline const std::string& CodeInfoResponse::_internal_creator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_.Get();
}
inline void CodeInfoResponse::_internal_set_creator(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.Set(value, GetArena());
}
inline std::string* CodeInfoResponse::_internal_mutable_creator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_.Mutable( GetArena());
}
inline std::string* CodeInfoResponse::release_creator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.CodeInfoResponse.creator)
  return _impl_.creator_.Release();
}
inline void CodeInfoResponse::set_allocated_creator(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_.IsDefault()) {
    _impl_.creator_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.CodeInfoResponse.creator)
}

// bytes data_hash = 3 [json_name = "dataHash", (.gogoproto.casttype) = "github.com/cometbft/cometbft/libs/bytes.HexBytes"];
inline void CodeInfoResponse::clear_data_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.ClearToEmpty();
}
inline const std::string& CodeInfoResponse::data_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.CodeInfoResponse.data_hash)
  return _internal_data_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CodeInfoResponse::set_data_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.CodeInfoResponse.data_hash)
}
inline std::string* CodeInfoResponse::mutable_data_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_hash();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.CodeInfoResponse.data_hash)
  return _s;
}
inline const std::string& CodeInfoResponse::_internal_data_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_hash_.Get();
}
inline void CodeInfoResponse::_internal_set_data_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.Set(value, GetArena());
}
inline std::string* CodeInfoResponse::_internal_mutable_data_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_hash_.Mutable( GetArena());
}
inline std::string* CodeInfoResponse::release_data_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.CodeInfoResponse.data_hash)
  return _impl_.data_hash_.Release();
}
inline void CodeInfoResponse::set_allocated_data_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_hash_.IsDefault()) {
    _impl_.data_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.CodeInfoResponse.data_hash)
}

// .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 6 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool CodeInfoResponse::has_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& CodeInfoResponse::_internal_instantiate_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& CodeInfoResponse::instantiate_permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.CodeInfoResponse.instantiate_permission)
  return _internal_instantiate_permission();
}
inline void CodeInfoResponse::unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }
  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.CodeInfoResponse.instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* CodeInfoResponse::release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* released = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::AccessConfig* CodeInfoResponse::unsafe_arena_release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.CodeInfoResponse.instantiate_permission)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* CodeInfoResponse::_internal_mutable_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::AccessConfig>(GetArena());
    _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(p);
  }
  return _impl_.instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* CodeInfoResponse::mutable_instantiate_permission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.CodeInfoResponse.instantiate_permission)
  return _msg;
}
inline void CodeInfoResponse::set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.CodeInfoResponse.instantiate_permission)
}

// -------------------------------------------------------------------

// QueryCodeResponse

// .cosmwasm.wasm.v1.CodeInfoResponse code_info = 1 [json_name = "codeInfo", (.gogoproto.embed) = true, (.gogoproto.jsontag) = ""];
inline bool QueryCodeResponse::has_code_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.code_info_ != nullptr);
  return value;
}
inline void QueryCodeResponse::clear_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ != nullptr) _impl_.code_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmwasm::wasm::v1::CodeInfoResponse& QueryCodeResponse::_internal_code_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::CodeInfoResponse* p = _impl_.code_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::CodeInfoResponse&>(::cosmwasm::wasm::v1::_CodeInfoResponse_default_instance_);
}
inline const ::cosmwasm::wasm::v1::CodeInfoResponse& QueryCodeResponse::code_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeResponse.code_info)
  return _internal_code_info();
}
inline void QueryCodeResponse::unsafe_arena_set_allocated_code_info(::cosmwasm::wasm::v1::CodeInfoResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.code_info_);
  }
  _impl_.code_info_ = reinterpret_cast<::cosmwasm::wasm::v1::CodeInfoResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryCodeResponse.code_info)
}
inline ::cosmwasm::wasm::v1::CodeInfoResponse* QueryCodeResponse::release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::CodeInfoResponse* released = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::CodeInfoResponse* QueryCodeResponse::unsafe_arena_release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryCodeResponse.code_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::CodeInfoResponse* temp = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::CodeInfoResponse* QueryCodeResponse::_internal_mutable_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::CodeInfoResponse>(GetArena());
    _impl_.code_info_ = reinterpret_cast<::cosmwasm::wasm::v1::CodeInfoResponse*>(p);
  }
  return _impl_.code_info_;
}
inline ::cosmwasm::wasm::v1::CodeInfoResponse* QueryCodeResponse::mutable_code_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::CodeInfoResponse* _msg = _internal_mutable_code_info();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodeResponse.code_info)
  return _msg;
}
inline void QueryCodeResponse::set_allocated_code_info(::cosmwasm::wasm::v1::CodeInfoResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.code_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.code_info_ = reinterpret_cast<::cosmwasm::wasm::v1::CodeInfoResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryCodeResponse.code_info)
}

// bytes data = 2 [json_name = "data", (.gogoproto.jsontag) = "data"];
inline void QueryCodeResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& QueryCodeResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodeResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryCodeResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryCodeResponse.data)
}
inline std::string* QueryCodeResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodeResponse.data)
  return _s;
}
inline const std::string& QueryCodeResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void QueryCodeResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* QueryCodeResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* QueryCodeResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryCodeResponse.data)
  return _impl_.data_.Release();
}
inline void QueryCodeResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryCodeResponse.data)
}

// -------------------------------------------------------------------

// QueryCodesRequest

// .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
inline bool QueryCodesRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryCodesRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryCodesRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodesRequest.pagination)
  return _internal_pagination();
}
inline void QueryCodesRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryCodesRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryCodesRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryCodesRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryCodesRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryCodesRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryCodesRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodesRequest.pagination)
  return _msg;
}
inline void QueryCodesRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryCodesRequest.pagination)
}

// -------------------------------------------------------------------

// QueryCodesResponse

// repeated .cosmwasm.wasm.v1.CodeInfoResponse code_infos = 1 [json_name = "codeInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryCodesResponse::_internal_code_infos_size() const {
  return _internal_code_infos().size();
}
inline int QueryCodesResponse::code_infos_size() const {
  return _internal_code_infos_size();
}
inline void QueryCodesResponse::clear_code_infos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_infos_.Clear();
}
inline ::cosmwasm::wasm::v1::CodeInfoResponse* QueryCodesResponse::mutable_code_infos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodesResponse.code_infos)
  return _internal_mutable_code_infos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>* QueryCodesResponse::mutable_code_infos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.QueryCodesResponse.code_infos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_code_infos();
}
inline const ::cosmwasm::wasm::v1::CodeInfoResponse& QueryCodesResponse::code_infos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodesResponse.code_infos)
  return _internal_code_infos().Get(index);
}
inline ::cosmwasm::wasm::v1::CodeInfoResponse* QueryCodesResponse::add_code_infos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmwasm::wasm::v1::CodeInfoResponse* _add = _internal_mutable_code_infos()->Add();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.QueryCodesResponse.code_infos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>& QueryCodesResponse::code_infos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.QueryCodesResponse.code_infos)
  return _internal_code_infos();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>&
QueryCodesResponse::_internal_code_infos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_infos_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmwasm::wasm::v1::CodeInfoResponse>*
QueryCodesResponse::_internal_mutable_code_infos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.code_infos_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryCodesResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryCodesResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryCodesResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryCodesResponse.pagination)
  return _internal_pagination();
}
inline void QueryCodesResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryCodesResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryCodesResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryCodesResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryCodesResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryCodesResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryCodesResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryCodesResponse.pagination)
  return _msg;
}
inline void QueryCodesResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryCodesResponse.pagination)
}

// -------------------------------------------------------------------

// QueryPinnedCodesRequest

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryPinnedCodesRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryPinnedCodesRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryPinnedCodesRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryPinnedCodesRequest.pagination)
  return _internal_pagination();
}
inline void QueryPinnedCodesRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryPinnedCodesRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryPinnedCodesRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryPinnedCodesRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryPinnedCodesRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryPinnedCodesRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryPinnedCodesRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryPinnedCodesRequest.pagination)
  return _msg;
}
inline void QueryPinnedCodesRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryPinnedCodesRequest.pagination)
}

// -------------------------------------------------------------------

// QueryPinnedCodesResponse

// repeated uint64 code_ids = 1 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs"];
inline int QueryPinnedCodesResponse::_internal_code_ids_size() const {
  return _internal_code_ids().size();
}
inline int QueryPinnedCodesResponse::code_ids_size() const {
  return _internal_code_ids_size();
}
inline void QueryPinnedCodesResponse::clear_code_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ids_.Clear();
}
inline ::uint64_t QueryPinnedCodesResponse::code_ids(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryPinnedCodesResponse.code_ids)
  return _internal_code_ids().Get(index);
}
inline void QueryPinnedCodesResponse::set_code_ids(int index, ::uint64_t value) {
  _internal_mutable_code_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryPinnedCodesResponse.code_ids)
}
inline void QueryPinnedCodesResponse::add_code_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_code_ids()->Add(value);
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.QueryPinnedCodesResponse.code_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& QueryPinnedCodesResponse::code_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.QueryPinnedCodesResponse.code_ids)
  return _internal_code_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* QueryPinnedCodesResponse::mutable_code_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.QueryPinnedCodesResponse.code_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_code_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
QueryPinnedCodesResponse::_internal_code_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* QueryPinnedCodesResponse::_internal_mutable_code_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.code_ids_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryPinnedCodesResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryPinnedCodesResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryPinnedCodesResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryPinnedCodesResponse.pagination)
  return _internal_pagination();
}
inline void QueryPinnedCodesResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryPinnedCodesResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryPinnedCodesResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryPinnedCodesResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryPinnedCodesResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryPinnedCodesResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryPinnedCodesResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryPinnedCodesResponse.pagination)
  return _msg;
}
inline void QueryPinnedCodesResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryPinnedCodesResponse.pagination)
}

// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .cosmwasm.wasm.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::Params&>(::cosmwasm::wasm::v1::_Params_default_instance_);
}
inline const ::cosmwasm::wasm::v1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::cosmwasm::wasm::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmwasm::wasm::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryParamsResponse.params)
}
inline ::cosmwasm::wasm::v1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmwasm::wasm::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmwasm::wasm::v1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::cosmwasm::wasm::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmwasm::wasm::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryContractsByCreatorRequest

// string creator_address = 1 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryContractsByCreatorRequest::clear_creator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.ClearToEmpty();
}
inline const std::string& QueryContractsByCreatorRequest::creator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.creator_address)
  return _internal_creator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryContractsByCreatorRequest::set_creator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.creator_address)
}
inline std::string* QueryContractsByCreatorRequest::mutable_creator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.creator_address)
  return _s;
}
inline const std::string& QueryContractsByCreatorRequest::_internal_creator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_address_.Get();
}
inline void QueryContractsByCreatorRequest::_internal_set_creator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.Set(value, GetArena());
}
inline std::string* QueryContractsByCreatorRequest::_internal_mutable_creator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_address_.Mutable( GetArena());
}
inline std::string* QueryContractsByCreatorRequest::release_creator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.creator_address)
  return _impl_.creator_address_.Release();
}
inline void QueryContractsByCreatorRequest::set_allocated_creator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_address_.IsDefault()) {
    _impl_.creator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.creator_address)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryContractsByCreatorRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryContractsByCreatorRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryContractsByCreatorRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.pagination)
  return _internal_pagination();
}
inline void QueryContractsByCreatorRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCreatorRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCreatorRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCreatorRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryContractsByCreatorRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.pagination)
  return _msg;
}
inline void QueryContractsByCreatorRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractsByCreatorRequest.pagination)
}

// -------------------------------------------------------------------

// QueryContractsByCreatorResponse

// repeated string contract_addresses = 1 [json_name = "contractAddresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline int QueryContractsByCreatorResponse::_internal_contract_addresses_size() const {
  return _internal_contract_addresses().size();
}
inline int QueryContractsByCreatorResponse::contract_addresses_size() const {
  return _internal_contract_addresses_size();
}
inline void QueryContractsByCreatorResponse::clear_contract_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_addresses_.Clear();
}
inline std::string* QueryContractsByCreatorResponse::add_contract_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_contract_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.contract_addresses)
  return _s;
}
inline const std::string& QueryContractsByCreatorResponse::contract_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.contract_addresses)
  return _internal_contract_addresses().Get(index);
}
inline std::string* QueryContractsByCreatorResponse::mutable_contract_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.contract_addresses)
  return _internal_mutable_contract_addresses()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void QueryContractsByCreatorResponse::set_contract_addresses(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_contract_addresses()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.contract_addresses)
}
template <typename Arg_, typename... Args_>
inline void QueryContractsByCreatorResponse::add_contract_addresses(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_contract_addresses(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.contract_addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryContractsByCreatorResponse::contract_addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.contract_addresses)
  return _internal_contract_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryContractsByCreatorResponse::mutable_contract_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.contract_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_contract_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryContractsByCreatorResponse::_internal_contract_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryContractsByCreatorResponse::_internal_mutable_contract_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.contract_addresses_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryContractsByCreatorResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryContractsByCreatorResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryContractsByCreatorResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.pagination)
  return _internal_pagination();
}
inline void QueryContractsByCreatorResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCreatorResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCreatorResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCreatorResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryContractsByCreatorResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.pagination)
  return _msg;
}
inline void QueryContractsByCreatorResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryContractsByCreatorResponse.pagination)
}

// -------------------------------------------------------------------

// QueryWasmLimitsConfigRequest

// -------------------------------------------------------------------

// QueryWasmLimitsConfigResponse

// string config = 1 [json_name = "config"];
inline void QueryWasmLimitsConfigResponse::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_.ClearToEmpty();
}
inline const std::string& QueryWasmLimitsConfigResponse::config() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse.config)
  return _internal_config();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryWasmLimitsConfigResponse::set_config(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse.config)
}
inline std::string* QueryWasmLimitsConfigResponse::mutable_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse.config)
  return _s;
}
inline const std::string& QueryWasmLimitsConfigResponse::_internal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.config_.Get();
}
inline void QueryWasmLimitsConfigResponse::_internal_set_config(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_.Set(value, GetArena());
}
inline std::string* QueryWasmLimitsConfigResponse::_internal_mutable_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.config_.Mutable( GetArena());
}
inline std::string* QueryWasmLimitsConfigResponse::release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse.config)
  return _impl_.config_.Release();
}
inline void QueryWasmLimitsConfigResponse::set_allocated_config(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.config_.IsDefault()) {
    _impl_.config_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryWasmLimitsConfigResponse.config)
}

// -------------------------------------------------------------------

// QueryBuildAddressRequest

// string code_hash = 1 [json_name = "codeHash"];
inline void QueryBuildAddressRequest::clear_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.ClearToEmpty();
}
inline const std::string& QueryBuildAddressRequest::code_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryBuildAddressRequest.code_hash)
  return _internal_code_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryBuildAddressRequest::set_code_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryBuildAddressRequest.code_hash)
}
inline std::string* QueryBuildAddressRequest::mutable_code_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code_hash();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryBuildAddressRequest.code_hash)
  return _s;
}
inline const std::string& QueryBuildAddressRequest::_internal_code_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_hash_.Get();
}
inline void QueryBuildAddressRequest::_internal_set_code_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.Set(value, GetArena());
}
inline std::string* QueryBuildAddressRequest::_internal_mutable_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_hash_.Mutable( GetArena());
}
inline std::string* QueryBuildAddressRequest::release_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryBuildAddressRequest.code_hash)
  return _impl_.code_hash_.Release();
}
inline void QueryBuildAddressRequest::set_allocated_code_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.code_hash_.IsDefault()) {
    _impl_.code_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryBuildAddressRequest.code_hash)
}

// string creator_address = 2 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryBuildAddressRequest::clear_creator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.ClearToEmpty();
}
inline const std::string& QueryBuildAddressRequest::creator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryBuildAddressRequest.creator_address)
  return _internal_creator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryBuildAddressRequest::set_creator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryBuildAddressRequest.creator_address)
}
inline std::string* QueryBuildAddressRequest::mutable_creator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_creator_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryBuildAddressRequest.creator_address)
  return _s;
}
inline const std::string& QueryBuildAddressRequest::_internal_creator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creator_address_.Get();
}
inline void QueryBuildAddressRequest::_internal_set_creator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.Set(value, GetArena());
}
inline std::string* QueryBuildAddressRequest::_internal_mutable_creator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.creator_address_.Mutable( GetArena());
}
inline std::string* QueryBuildAddressRequest::release_creator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryBuildAddressRequest.creator_address)
  return _impl_.creator_address_.Release();
}
inline void QueryBuildAddressRequest::set_allocated_creator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.creator_address_.IsDefault()) {
    _impl_.creator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryBuildAddressRequest.creator_address)
}

// string salt = 3 [json_name = "salt"];
inline void QueryBuildAddressRequest::clear_salt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.ClearToEmpty();
}
inline const std::string& QueryBuildAddressRequest::salt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryBuildAddressRequest.salt)
  return _internal_salt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryBuildAddressRequest::set_salt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryBuildAddressRequest.salt)
}
inline std::string* QueryBuildAddressRequest::mutable_salt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_salt();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryBuildAddressRequest.salt)
  return _s;
}
inline const std::string& QueryBuildAddressRequest::_internal_salt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.salt_.Get();
}
inline void QueryBuildAddressRequest::_internal_set_salt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.Set(value, GetArena());
}
inline std::string* QueryBuildAddressRequest::_internal_mutable_salt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.salt_.Mutable( GetArena());
}
inline std::string* QueryBuildAddressRequest::release_salt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryBuildAddressRequest.salt)
  return _impl_.salt_.Release();
}
inline void QueryBuildAddressRequest::set_allocated_salt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.salt_.IsDefault()) {
    _impl_.salt_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryBuildAddressRequest.salt)
}

// bytes init_args = 4 [json_name = "initArgs"];
inline void QueryBuildAddressRequest::clear_init_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.init_args_.ClearToEmpty();
}
inline const std::string& QueryBuildAddressRequest::init_args() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryBuildAddressRequest.init_args)
  return _internal_init_args();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryBuildAddressRequest::set_init_args(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.init_args_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryBuildAddressRequest.init_args)
}
inline std::string* QueryBuildAddressRequest::mutable_init_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_init_args();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryBuildAddressRequest.init_args)
  return _s;
}
inline const std::string& QueryBuildAddressRequest::_internal_init_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.init_args_.Get();
}
inline void QueryBuildAddressRequest::_internal_set_init_args(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.init_args_.Set(value, GetArena());
}
inline std::string* QueryBuildAddressRequest::_internal_mutable_init_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.init_args_.Mutable( GetArena());
}
inline std::string* QueryBuildAddressRequest::release_init_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryBuildAddressRequest.init_args)
  return _impl_.init_args_.Release();
}
inline void QueryBuildAddressRequest::set_allocated_init_args(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.init_args_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.init_args_.IsDefault()) {
    _impl_.init_args_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryBuildAddressRequest.init_args)
}

// -------------------------------------------------------------------

// QueryBuildAddressResponse

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryBuildAddressResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryBuildAddressResponse::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.QueryBuildAddressResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryBuildAddressResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.QueryBuildAddressResponse.address)
}
inline std::string* QueryBuildAddressResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.QueryBuildAddressResponse.address)
  return _s;
}
inline const std::string& QueryBuildAddressResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryBuildAddressResponse::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryBuildAddressResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryBuildAddressResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.QueryBuildAddressResponse.address)
  return _impl_.address_.Release();
}
inline void QueryBuildAddressResponse::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.QueryBuildAddressResponse.address)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmwasm_2fwasm_2fv1_2fquery_2eproto_2epb_2eh
