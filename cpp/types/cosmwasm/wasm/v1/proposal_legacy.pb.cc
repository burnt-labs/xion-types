// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmwasm/wasm/v1/proposal_legacy.proto
// Protobuf C++ Version: 5.29.4

#include "cosmwasm/wasm/v1/proposal_legacy.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmwasm {
namespace wasm {
namespace v1 {

inline constexpr UpdateAdminProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateAdminProposal::UpdateAdminProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateAdminProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateAdminProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateAdminProposalDefaultTypeInternal() {}
  union {
    UpdateAdminProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateAdminProposalDefaultTypeInternal _UpdateAdminProposal_default_instance_;

inline constexpr UnpinCodesProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_ids_{},
        _code_ids_cached_byte_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnpinCodesProposal::UnpinCodesProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnpinCodesProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnpinCodesProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnpinCodesProposalDefaultTypeInternal() {}
  union {
    UnpinCodesProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnpinCodesProposalDefaultTypeInternal _UnpinCodesProposal_default_instance_;

inline constexpr SudoContractProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SudoContractProposal::SudoContractProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SudoContractProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SudoContractProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SudoContractProposalDefaultTypeInternal() {}
  union {
    SudoContractProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SudoContractProposalDefaultTypeInternal _SudoContractProposal_default_instance_;

inline constexpr PinCodesProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_ids_{},
        _code_ids_cached_byte_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PinCodesProposal::PinCodesProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PinCodesProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PinCodesProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PinCodesProposalDefaultTypeInternal() {}
  union {
    PinCodesProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PinCodesProposalDefaultTypeInternal _PinCodesProposal_default_instance_;

inline constexpr MigrateContractProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MigrateContractProposal::MigrateContractProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MigrateContractProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MigrateContractProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MigrateContractProposalDefaultTypeInternal() {}
  union {
    MigrateContractProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MigrateContractProposalDefaultTypeInternal _MigrateContractProposal_default_instance_;

inline constexpr ClearAdminProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClearAdminProposal::ClearAdminProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClearAdminProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearAdminProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearAdminProposalDefaultTypeInternal() {}
  union {
    ClearAdminProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearAdminProposalDefaultTypeInternal _ClearAdminProposal_default_instance_;

inline constexpr StoreCodeProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        run_as_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        wasm_byte_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        builder_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instantiate_permission_{nullptr},
        unpin_code_{false} {}

template <typename>
PROTOBUF_CONSTEXPR StoreCodeProposal::StoreCodeProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StoreCodeProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreCodeProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreCodeProposalDefaultTypeInternal() {}
  union {
    StoreCodeProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreCodeProposalDefaultTypeInternal _StoreCodeProposal_default_instance_;

inline constexpr StoreAndInstantiateContractProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        funds_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        run_as_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        wasm_byte_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        builder_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        instantiate_permission_{nullptr},
        unpin_code_{false} {}

template <typename>
PROTOBUF_CONSTEXPR StoreAndInstantiateContractProposal::StoreAndInstantiateContractProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StoreAndInstantiateContractProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StoreAndInstantiateContractProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StoreAndInstantiateContractProposalDefaultTypeInternal() {}
  union {
    StoreAndInstantiateContractProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StoreAndInstantiateContractProposalDefaultTypeInternal _StoreAndInstantiateContractProposal_default_instance_;

inline constexpr InstantiateContractProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : funds_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        run_as_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstantiateContractProposal::InstantiateContractProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstantiateContractProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstantiateContractProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstantiateContractProposalDefaultTypeInternal() {}
  union {
    InstantiateContractProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstantiateContractProposalDefaultTypeInternal _InstantiateContractProposal_default_instance_;

inline constexpr InstantiateContract2Proposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : funds_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        run_as_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        label_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        salt_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_id_{::uint64_t{0u}},
        fix_msg_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstantiateContract2Proposal::InstantiateContract2Proposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstantiateContract2ProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstantiateContract2ProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstantiateContract2ProposalDefaultTypeInternal() {}
  union {
    InstantiateContract2Proposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstantiateContract2ProposalDefaultTypeInternal _InstantiateContract2Proposal_default_instance_;

inline constexpr ExecuteContractProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : funds_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        run_as_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExecuteContractProposal::ExecuteContractProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExecuteContractProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecuteContractProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecuteContractProposalDefaultTypeInternal() {}
  union {
    ExecuteContractProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecuteContractProposalDefaultTypeInternal _ExecuteContractProposal_default_instance_;

inline constexpr AccessConfigUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        instantiate_permission_{nullptr},
        code_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR AccessConfigUpdate::AccessConfigUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccessConfigUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccessConfigUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccessConfigUpdateDefaultTypeInternal() {}
  union {
    AccessConfigUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccessConfigUpdateDefaultTypeInternal _AccessConfigUpdate_default_instance_;

inline constexpr UpdateInstantiateConfigProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : access_config_updates_{},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateInstantiateConfigProposal::UpdateInstantiateConfigProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateInstantiateConfigProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateInstantiateConfigProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateInstantiateConfigProposalDefaultTypeInternal() {}
  union {
    UpdateInstantiateConfigProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateInstantiateConfigProposalDefaultTypeInternal _UpdateInstantiateConfigProposal_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.run_as_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.wasm_byte_code_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.instantiate_permission_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.unpin_code_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.builder_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreCodeProposal, _impl_.code_hash_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.run_as_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.admin_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.code_id_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.label_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContractProposal, _impl_.funds_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.run_as_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.admin_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.code_id_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.label_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.funds_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.salt_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::InstantiateContract2Proposal, _impl_.fix_msg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MigrateContractProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MigrateContractProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MigrateContractProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MigrateContractProposal, _impl_.contract_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MigrateContractProposal, _impl_.code_id_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MigrateContractProposal, _impl_.msg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::SudoContractProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::SudoContractProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::SudoContractProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::SudoContractProposal, _impl_.contract_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::SudoContractProposal, _impl_.msg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ExecuteContractProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ExecuteContractProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ExecuteContractProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ExecuteContractProposal, _impl_.run_as_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ExecuteContractProposal, _impl_.contract_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ExecuteContractProposal, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ExecuteContractProposal, _impl_.funds_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateAdminProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateAdminProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateAdminProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateAdminProposal, _impl_.new_admin_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateAdminProposal, _impl_.contract_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ClearAdminProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ClearAdminProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ClearAdminProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::ClearAdminProposal, _impl_.contract_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::PinCodesProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::PinCodesProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::PinCodesProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::PinCodesProposal, _impl_.code_ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UnpinCodesProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UnpinCodesProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UnpinCodesProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UnpinCodesProposal, _impl_.code_ids_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::AccessConfigUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::AccessConfigUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::AccessConfigUpdate, _impl_.code_id_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::AccessConfigUpdate, _impl_.instantiate_permission_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateInstantiateConfigProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateInstantiateConfigProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateInstantiateConfigProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::UpdateInstantiateConfigProposal, _impl_.access_config_updates_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.run_as_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.wasm_byte_code_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.instantiate_permission_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.unpin_code_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.admin_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.label_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.funds_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.source_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.builder_),
        PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal, _impl_.code_hash_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::cosmwasm::wasm::v1::StoreCodeProposal)},
        {26, -1, -1, sizeof(::cosmwasm::wasm::v1::InstantiateContractProposal)},
        {42, -1, -1, sizeof(::cosmwasm::wasm::v1::InstantiateContract2Proposal)},
        {60, -1, -1, sizeof(::cosmwasm::wasm::v1::MigrateContractProposal)},
        {73, -1, -1, sizeof(::cosmwasm::wasm::v1::SudoContractProposal)},
        {85, -1, -1, sizeof(::cosmwasm::wasm::v1::ExecuteContractProposal)},
        {99, -1, -1, sizeof(::cosmwasm::wasm::v1::UpdateAdminProposal)},
        {111, -1, -1, sizeof(::cosmwasm::wasm::v1::ClearAdminProposal)},
        {122, -1, -1, sizeof(::cosmwasm::wasm::v1::PinCodesProposal)},
        {133, -1, -1, sizeof(::cosmwasm::wasm::v1::UnpinCodesProposal)},
        {144, 154, -1, sizeof(::cosmwasm::wasm::v1::AccessConfigUpdate)},
        {156, -1, -1, sizeof(::cosmwasm::wasm::v1::UpdateInstantiateConfigProposal)},
        {167, 188, -1, sizeof(::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmwasm::wasm::v1::_StoreCodeProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_InstantiateContractProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_InstantiateContract2Proposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_MigrateContractProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_SudoContractProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_ExecuteContractProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_UpdateAdminProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_ClearAdminProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_PinCodesProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_UnpinCodesProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_AccessConfigUpdate_default_instance_._instance,
    &::cosmwasm::wasm::v1::_UpdateInstantiateConfigProposal_default_instance_._instance,
    &::cosmwasm::wasm::v1::_StoreAndInstantiateContractProposal_default_instance_._instance,
};
const char descriptor_table_protodef_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&cosmwasm/wasm/v1/proposal_legacy.proto"
    "\022\020cosmwasm.wasm.v1\032\024gogoproto/gogo.proto"
    "\032\031cosmos_proto/cosmos.proto\032\036cosmos/base"
    "/v1beta1/coin.proto\032\034cosmwasm/wasm/v1/ty"
    "pes.proto\032\021amino/amino.proto\"\302\003\n\021StoreCo"
    "deProposal\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013desc"
    "ription\030\002 \001(\tR\013description\022/\n\006run_as\030\003 \001"
    "(\tB\030\322\264-\024cosmos.AddressStringR\005runAs\0226\n\016w"
    "asm_byte_code\030\004 \001(\014B\020\342\336\037\014WASMByteCodeR\014w"
    "asmByteCode\022U\n\026instantiate_permission\030\007 "
    "\001(\0132\036.cosmwasm.wasm.v1.AccessConfigR\025ins"
    "tantiatePermission\022\035\n\nunpin_code\030\010 \001(\010R\t"
    "unpinCode\022\026\n\006source\030\t \001(\tR\006source\022\030\n\007bui"
    "lder\030\n \001(\tR\007builder\022\033\n\tcode_hash\030\013 \001(\014R\010"
    "codeHash:;\030\001\312\264-\032cosmos.gov.v1beta1.Conte"
    "nt\212\347\260*\026wasm/StoreCodeProposalJ\004\010\005\020\006J\004\010\006\020"
    "\007\"\353\003\n\033InstantiateContractProposal\022\024\n\005tit"
    "le\030\001 \001(\tR\005title\022 \n\013description\030\002 \001(\tR\013de"
    "scription\022/\n\006run_as\030\003 \001(\tB\030\322\264-\024cosmos.Ad"
    "dressStringR\005runAs\022.\n\005admin\030\004 \001(\tB\030\322\264-\024c"
    "osmos.AddressStringR\005admin\022#\n\007code_id\030\005 "
    "\001(\004B\n\342\336\037\006CodeIDR\006codeId\022\024\n\005label\030\006 \001(\tR\005"
    "label\0228\n\003msg\030\007 \001(\014B&\372\336\037\022RawContractMessa"
    "ge\232\347\260*\013inline_jsonR\003msg\022w\n\005funds\030\010 \003(\0132\031"
    ".cosmos.base.v1beta1.CoinBF\310\336\037\000\252\337\037(githu"
    "b.com/cosmos/cosmos-sdk/types.Coins\232\347\260*\014"
    "legacy_coins\250\347\260*\001R\005funds:E\030\001\312\264-\032cosmos.g"
    "ov.v1beta1.Content\212\347\260* wasm/InstantiateC"
    "ontractProposal\"\232\004\n\034InstantiateContract2"
    "Proposal\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013descri"
    "ption\030\002 \001(\tR\013description\022/\n\006run_as\030\003 \001(\t"
    "B\030\322\264-\024cosmos.AddressStringR\005runAs\022.\n\005adm"
    "in\030\004 \001(\tB\030\322\264-\024cosmos.AddressStringR\005admi"
    "n\022#\n\007code_id\030\005 \001(\004B\n\342\336\037\006CodeIDR\006codeId\022\024"
    "\n\005label\030\006 \001(\tR\005label\0228\n\003msg\030\007 \001(\014B&\372\336\037\022R"
    "awContractMessage\232\347\260*\013inline_jsonR\003msg\022w"
    "\n\005funds\030\010 \003(\0132\031.cosmos.base.v1beta1.Coin"
    "BF\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/t"
    "ypes.Coins\232\347\260*\014legacy_coins\250\347\260*\001R\005funds\022"
    "\022\n\004salt\030\t \001(\014R\004salt\022\027\n\007fix_msg\030\n \001(\010R\006fi"
    "xMsg:F\030\001\312\264-\032cosmos.gov.v1beta1.Content\212\347"
    "\260*!wasm/InstantiateContract2Proposal\"\251\002\n"
    "\027MigrateContractProposal\022\024\n\005title\030\001 \001(\tR"
    "\005title\022 \n\013description\030\002 \001(\tR\013description"
    "\0224\n\010contract\030\004 \001(\tB\030\322\264-\024cosmos.AddressSt"
    "ringR\010contract\022#\n\007code_id\030\005 \001(\004B\n\342\336\037\006Cod"
    "eIDR\006codeId\0228\n\003msg\030\006 \001(\014B&\372\336\037\022RawContrac"
    "tMessage\232\347\260*\013inline_jsonR\003msg:A\030\001\312\264-\032cos"
    "mos.gov.v1beta1.Content\212\347\260*\034wasm/Migrate"
    "ContractProposal\"\376\001\n\024SudoContractProposa"
    "l\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013description\030\002"
    " \001(\tR\013description\0224\n\010contract\030\003 \001(\tB\030\322\264-"
    "\024cosmos.AddressStringR\010contract\0228\n\003msg\030\004"
    " \001(\014B&\372\336\037\022RawContractMessage\232\347\260*\013inline_"
    "jsonR\003msg:>\030\001\312\264-\032cosmos.gov.v1beta1.Cont"
    "ent\212\347\260*\031wasm/SudoContractProposal\"\256\003\n\027Ex"
    "ecuteContractProposal\022\024\n\005title\030\001 \001(\tR\005ti"
    "tle\022 \n\013description\030\002 \001(\tR\013description\022/\n"
    "\006run_as\030\003 \001(\tB\030\322\264-\024cosmos.AddressStringR"
    "\005runAs\0224\n\010contract\030\004 \001(\tB\030\322\264-\024cosmos.Add"
    "ressStringR\010contract\0228\n\003msg\030\005 \001(\014B&\372\336\037\022R"
    "awContractMessage\232\347\260*\013inline_jsonR\003msg\022w"
    "\n\005funds\030\006 \003(\0132\031.cosmos.base.v1beta1.Coin"
    "BF\310\336\037\000\252\337\037(github.com/cosmos/cosmos-sdk/t"
    "ypes.Coins\232\347\260*\014legacy_coins\250\347\260*\001R\005funds:"
    "A\030\001\312\264-\032cosmos.gov.v1beta1.Content\212\347\260*\034wa"
    "sm/ExecuteContractProposal\"\215\002\n\023UpdateAdm"
    "inProposal\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013desc"
    "ription\030\002 \001(\tR\013description\022I\n\tnew_admin\030"
    "\003 \001(\tB,\362\336\037\020yaml:\"new_admin\"\322\264-\024cosmos.Ad"
    "dressStringR\010newAdmin\0224\n\010contract\030\004 \001(\tB"
    "\030\322\264-\024cosmos.AddressStringR\010contract:=\030\001\312"
    "\264-\032cosmos.gov.v1beta1.Content\212\347\260*\030wasm/U"
    "pdateAdminProposal\"\300\001\n\022ClearAdminProposa"
    "l\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013description\030\002"
    " \001(\tR\013description\0224\n\010contract\030\003 \001(\tB\030\322\264-"
    "\024cosmos.AddressStringR\010contract:<\030\001\312\264-\032c"
    "osmos.gov.v1beta1.Content\212\347\260*\027wasm/Clear"
    "AdminProposal\"\301\001\n\020PinCodesProposal\022\024\n\005ti"
    "tle\030\001 \001(\tR\005title\022 \n\013description\030\002 \001(\tR\013d"
    "escription\0229\n\010code_ids\030\003 \003(\004B\036\342\336\037\007CodeID"
    "s\362\336\037\017yaml:\"code_ids\"R\007codeIds::\030\001\312\264-\032cos"
    "mos.gov.v1beta1.Content\212\347\260*\025wasm/PinCode"
    "sProposal\"\305\001\n\022UnpinCodesProposal\022\024\n\005titl"
    "e\030\001 \001(\tR\005title\022 \n\013description\030\002 \001(\tR\013des"
    "cription\0229\n\010code_ids\030\003 \003(\004B\036\342\336\037\007CodeIDs\362"
    "\336\037\017yaml:\"code_ids\"R\007codeIds:<\030\001\312\264-\032cosmo"
    "s.gov.v1beta1.Content\212\347\260*\027wasm/UnpinCode"
    "sProposal\"\233\001\n\022AccessConfigUpdate\022#\n\007code"
    "_id\030\001 \001(\004B\n\342\336\037\006CodeIDR\006codeId\022`\n\026instant"
    "iate_permission\030\002 \001(\0132\036.cosmwasm.wasm.v1"
    ".AccessConfigB\t\310\336\037\000\250\347\260*\001R\025instantiatePer"
    "mission\"\263\002\n\037UpdateInstantiateConfigPropo"
    "sal\022&\n\005title\030\001 \001(\tB\020\362\336\037\014yaml:\"title\"R\005ti"
    "tle\0228\n\013description\030\002 \001(\tB\026\362\336\037\022yaml:\"desc"
    "ription\"R\013description\022c\n\025access_config_u"
    "pdates\030\003 \003(\0132$.cosmwasm.wasm.v1.AccessCo"
    "nfigUpdateB\t\310\336\037\000\250\347\260*\001R\023accessConfigUpdat"
    "es:I\030\001\312\264-\032cosmos.gov.v1beta1.Content\212\347\260*"
    "$wasm/UpdateInstantiateConfigProposal\"\271\005"
    "\n#StoreAndInstantiateContractProposal\022\024\n"
    "\005title\030\001 \001(\tR\005title\022 \n\013description\030\002 \001(\t"
    "R\013description\022/\n\006run_as\030\003 \001(\tB\030\322\264-\024cosmo"
    "s.AddressStringR\005runAs\0226\n\016wasm_byte_code"
    "\030\004 \001(\014B\020\342\336\037\014WASMByteCodeR\014wasmByteCode\022U"
    "\n\026instantiate_permission\030\005 \001(\0132\036.cosmwas"
    "m.wasm.v1.AccessConfigR\025instantiatePermi"
    "ssion\022\035\n\nunpin_code\030\006 \001(\010R\tunpinCode\022\024\n\005"
    "admin\030\007 \001(\tR\005admin\022\024\n\005label\030\010 \001(\tR\005label"
    "\0228\n\003msg\030\t \001(\014B&\372\336\037\022RawContractMessage\232\347\260"
    "*\013inline_jsonR\003msg\022w\n\005funds\030\n \003(\0132\031.cosm"
    "os.base.v1beta1.CoinBF\310\336\037\000\252\337\037(github.com"
    "/cosmos/cosmos-sdk/types.Coins\232\347\260*\014legac"
    "y_coins\250\347\260*\001R\005funds\022\026\n\006source\030\013 \001(\tR\006sou"
    "rce\022\030\n\007builder\030\014 \001(\tR\007builder\022\033\n\tcode_ha"
    "sh\030\r \001(\014R\010codeHash:M\030\001\312\264-\032cosmos.gov.v1b"
    "eta1.Content\212\347\260*(wasm/StoreAndInstantiat"
    "eContractProposalB4Z&github.com/CosmWasm"
    "/wasmd/x/wasm/types\310\341\036\000\330\341\036\000\250\342\036\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto_deps[5] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_cosmwasm_2fwasm_2fv1_2ftypes_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto = {
    false,
    false,
    4759,
    descriptor_table_protodef_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    "cosmwasm/wasm/v1/proposal_legacy.proto",
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto_once,
    descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto_deps,
    5,
    13,
    schemas,
    file_default_instances,
    TableStruct_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto::offsets,
    file_level_enum_descriptors_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    file_level_service_descriptors_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
};
namespace cosmwasm {
namespace wasm {
namespace v1 {
// ===================================================================

class StoreCodeProposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StoreCodeProposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_._has_bits_);
};

void StoreCodeProposal::clear_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ != nullptr) _impl_.instantiate_permission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
StoreCodeProposal::StoreCodeProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.StoreCodeProposal)
}
inline PROTOBUF_NDEBUG_INLINE StoreCodeProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::StoreCodeProposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        description_(arena, from.description_),
        run_as_(arena, from.run_as_),
        wasm_byte_code_(arena, from.wasm_byte_code_),
        source_(arena, from.source_),
        builder_(arena, from.builder_),
        code_hash_(arena, from.code_hash_) {}

StoreCodeProposal::StoreCodeProposal(
    ::google::protobuf::Arena* arena,
    const StoreCodeProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StoreCodeProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.instantiate_permission_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::AccessConfig>(
                              arena, *from._impl_.instantiate_permission_)
                        : nullptr;
  _impl_.unpin_code_ = from._impl_.unpin_code_;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.StoreCodeProposal)
}
inline PROTOBUF_NDEBUG_INLINE StoreCodeProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        description_(arena),
        run_as_(arena),
        wasm_byte_code_(arena),
        source_(arena),
        builder_(arena),
        code_hash_(arena) {}

inline void StoreCodeProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, instantiate_permission_),
           0,
           offsetof(Impl_, unpin_code_) -
               offsetof(Impl_, instantiate_permission_) +
               sizeof(Impl_::unpin_code_));
}
StoreCodeProposal::~StoreCodeProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.StoreCodeProposal)
  SharedDtor(*this);
}
inline void StoreCodeProposal::SharedDtor(MessageLite& self) {
  StoreCodeProposal& this_ = static_cast<StoreCodeProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.run_as_.Destroy();
  this_._impl_.wasm_byte_code_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.builder_.Destroy();
  this_._impl_.code_hash_.Destroy();
  delete this_._impl_.instantiate_permission_;
  this_._impl_.~Impl_();
}

inline void* StoreCodeProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StoreCodeProposal(arena);
}
constexpr auto StoreCodeProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(StoreCodeProposal),
                                            alignof(StoreCodeProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StoreCodeProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StoreCodeProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StoreCodeProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StoreCodeProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StoreCodeProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StoreCodeProposal>(), &StoreCodeProposal::ByteSizeLong,
            &StoreCodeProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_._cached_size_),
        false,
    },
    &StoreCodeProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StoreCodeProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 86, 2> StoreCodeProposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965296,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::StoreCodeProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.description_)}},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.run_as_)}},
    // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.wasm_byte_code_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.instantiate_permission_)}},
    // bool unpin_code = 8 [json_name = "unpinCode"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StoreCodeProposal, _impl_.unpin_code_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.unpin_code_)}},
    // string source = 9 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.source_)}},
    // string builder = 10 [json_name = "builder"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.builder_)}},
    // bytes code_hash = 11 [json_name = "codeHash"];
    {::_pbi::TcParser::FastBS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.code_hash_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.run_as_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.wasm_byte_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.instantiate_permission_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool unpin_code = 8 [json_name = "unpinCode"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.unpin_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string source = 9 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.source_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string builder = 10 [json_name = "builder"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.builder_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes code_hash = 11 [json_name = "codeHash"];
    {PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.code_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::AccessConfig>()},
  }}, {{
    "\42\5\13\6\0\0\0\6\7\0\0\0\0\0\0\0"
    "cosmwasm.wasm.v1.StoreCodeProposal"
    "title"
    "description"
    "run_as"
    "source"
    "builder"
  }},
};

PROTOBUF_NOINLINE void StoreCodeProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.StoreCodeProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.run_as_.ClearToEmpty();
  _impl_.wasm_byte_code_.ClearToEmpty();
  _impl_.source_.ClearToEmpty();
  _impl_.builder_.ClearToEmpty();
  _impl_.code_hash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.instantiate_permission_ != nullptr);
    _impl_.instantiate_permission_->Clear();
  }
  _impl_.unpin_code_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StoreCodeProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StoreCodeProposal& this_ = static_cast<const StoreCodeProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StoreCodeProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StoreCodeProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.StoreCodeProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreCodeProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreCodeProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_run_as().empty()) {
            const std::string& _s = this_._internal_run_as();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreCodeProposal.run_as");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
          if (!this_._internal_wasm_byte_code().empty()) {
            const std::string& _s = this_._internal_wasm_byte_code();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.instantiate_permission_, this_._impl_.instantiate_permission_->GetCachedSize(), target,
                stream);
          }

          // bool unpin_code = 8 [json_name = "unpinCode"];
          if (this_._internal_unpin_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_unpin_code(), target);
          }

          // string source = 9 [json_name = "source"];
          if (!this_._internal_source().empty()) {
            const std::string& _s = this_._internal_source();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreCodeProposal.source");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // string builder = 10 [json_name = "builder"];
          if (!this_._internal_builder().empty()) {
            const std::string& _s = this_._internal_builder();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreCodeProposal.builder");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // bytes code_hash = 11 [json_name = "codeHash"];
          if (!this_._internal_code_hash().empty()) {
            const std::string& _s = this_._internal_code_hash();
            target = stream->WriteBytesMaybeAliased(11, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.StoreCodeProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StoreCodeProposal::ByteSizeLong(const MessageLite& base) {
          const StoreCodeProposal& this_ = static_cast<const StoreCodeProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StoreCodeProposal::ByteSizeLong() const {
          const StoreCodeProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.StoreCodeProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_run_as().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_run_as());
            }
            // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
            if (!this_._internal_wasm_byte_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_wasm_byte_code());
            }
            // string source = 9 [json_name = "source"];
            if (!this_._internal_source().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source());
            }
            // string builder = 10 [json_name = "builder"];
            if (!this_._internal_builder().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_builder());
            }
            // bytes code_hash = 11 [json_name = "codeHash"];
            if (!this_._internal_code_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_code_hash());
            }
          }
           {
            // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7 [json_name = "instantiatePermission"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.instantiate_permission_);
            }
          }
           {
            // bool unpin_code = 8 [json_name = "unpinCode"];
            if (this_._internal_unpin_code() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StoreCodeProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreCodeProposal*>(&to_msg);
  auto& from = static_cast<const StoreCodeProposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.StoreCodeProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_run_as().empty()) {
    _this->_internal_set_run_as(from._internal_run_as());
  }
  if (!from._internal_wasm_byte_code().empty()) {
    _this->_internal_set_wasm_byte_code(from._internal_wasm_byte_code());
  }
  if (!from._internal_source().empty()) {
    _this->_internal_set_source(from._internal_source());
  }
  if (!from._internal_builder().empty()) {
    _this->_internal_set_builder(from._internal_builder());
  }
  if (!from._internal_code_hash().empty()) {
    _this->_internal_set_code_hash(from._internal_code_hash());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.instantiate_permission_ != nullptr);
    if (_this->_impl_.instantiate_permission_ == nullptr) {
      _this->_impl_.instantiate_permission_ =
          ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::AccessConfig>(arena, *from._impl_.instantiate_permission_);
    } else {
      _this->_impl_.instantiate_permission_->MergeFrom(*from._impl_.instantiate_permission_);
    }
  }
  if (from._internal_unpin_code() != 0) {
    _this->_impl_.unpin_code_ = from._impl_.unpin_code_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreCodeProposal::CopyFrom(const StoreCodeProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.StoreCodeProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StoreCodeProposal::InternalSwap(StoreCodeProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_as_, &other->_impl_.run_as_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wasm_byte_code_, &other->_impl_.wasm_byte_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.builder_, &other->_impl_.builder_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_hash_, &other->_impl_.code_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.unpin_code_)
      + sizeof(StoreCodeProposal::_impl_.unpin_code_)
      - PROTOBUF_FIELD_OFFSET(StoreCodeProposal, _impl_.instantiate_permission_)>(
          reinterpret_cast<char*>(&_impl_.instantiate_permission_),
          reinterpret_cast<char*>(&other->_impl_.instantiate_permission_));
}

::google::protobuf::Metadata StoreCodeProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InstantiateContractProposal::_Internal {
 public:
};

void InstantiateContractProposal::clear_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funds_.Clear();
}
InstantiateContractProposal::InstantiateContractProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.InstantiateContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE InstantiateContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::InstantiateContractProposal& from_msg)
      : funds_{visibility, arena, from.funds_},
        title_(arena, from.title_),
        description_(arena, from.description_),
        run_as_(arena, from.run_as_),
        admin_(arena, from.admin_),
        label_(arena, from.label_),
        msg_(arena, from.msg_),
        _cached_size_{0} {}

InstantiateContractProposal::InstantiateContractProposal(
    ::google::protobuf::Arena* arena,
    const InstantiateContractProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstantiateContractProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.code_id_ = from._impl_.code_id_;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.InstantiateContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE InstantiateContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : funds_{visibility, arena},
        title_(arena),
        description_(arena),
        run_as_(arena),
        admin_(arena),
        label_(arena),
        msg_(arena),
        _cached_size_{0} {}

inline void InstantiateContractProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_id_ = {};
}
InstantiateContractProposal::~InstantiateContractProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.InstantiateContractProposal)
  SharedDtor(*this);
}
inline void InstantiateContractProposal::SharedDtor(MessageLite& self) {
  InstantiateContractProposal& this_ = static_cast<InstantiateContractProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.run_as_.Destroy();
  this_._impl_.admin_.Destroy();
  this_._impl_.label_.Destroy();
  this_._impl_.msg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InstantiateContractProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InstantiateContractProposal(arena);
}
constexpr auto InstantiateContractProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.funds_) +
          decltype(InstantiateContractProposal::_impl_.funds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InstantiateContractProposal), alignof(InstantiateContractProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InstantiateContractProposal::PlacementNew_,
                                 sizeof(InstantiateContractProposal),
                                 alignof(InstantiateContractProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InstantiateContractProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InstantiateContractProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InstantiateContractProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InstantiateContractProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InstantiateContractProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InstantiateContractProposal>(), &InstantiateContractProposal::ByteSizeLong,
            &InstantiateContractProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_._cached_size_),
        false,
    },
    &InstantiateContractProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InstantiateContractProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 93, 2> InstantiateContractProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::InstantiateContractProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.funds_)}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.description_)}},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.run_as_)}},
    // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.admin_)}},
    // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstantiateContractProposal, _impl_.code_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.code_id_)}},
    // string label = 6 [json_name = "label"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.label_)}},
    // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.run_as_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.admin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.code_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string label = 6 [json_name = "label"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.label_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(InstantiateContractProposal, _impl_.funds_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\54\5\13\6\5\0\5\0\0\0\0\0\0\0\0\0"
    "cosmwasm.wasm.v1.InstantiateContractProposal"
    "title"
    "description"
    "run_as"
    "admin"
    "label"
  }},
};

PROTOBUF_NOINLINE void InstantiateContractProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.InstantiateContractProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.funds_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.run_as_.ClearToEmpty();
  _impl_.admin_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.code_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InstantiateContractProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InstantiateContractProposal& this_ = static_cast<const InstantiateContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InstantiateContractProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InstantiateContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.InstantiateContractProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContractProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContractProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_run_as().empty()) {
            const std::string& _s = this_._internal_run_as();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContractProposal.run_as");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContractProposal.admin");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
          if (this_._internal_code_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_code_id(), target);
          }

          // string label = 6 [json_name = "label"];
          if (!this_._internal_label().empty()) {
            const std::string& _s = this_._internal_label();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContractProposal.label");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_funds_size());
               i < n; i++) {
            const auto& repfield = this_._internal_funds().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.InstantiateContractProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InstantiateContractProposal::ByteSizeLong(const MessageLite& base) {
          const InstantiateContractProposal& this_ = static_cast<const InstantiateContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InstantiateContractProposal::ByteSizeLong() const {
          const InstantiateContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.InstantiateContractProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_funds_size();
              for (const auto& msg : this_._internal_funds()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_run_as().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_run_as());
            }
            // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
            // string label = 6 [json_name = "label"];
            if (!this_._internal_label().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label());
            }
            // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
            // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
            if (this_._internal_code_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_code_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InstantiateContractProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstantiateContractProposal*>(&to_msg);
  auto& from = static_cast<const InstantiateContractProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.InstantiateContractProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_funds()->MergeFrom(
      from._internal_funds());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_run_as().empty()) {
    _this->_internal_set_run_as(from._internal_run_as());
  }
  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_code_id() != 0) {
    _this->_impl_.code_id_ = from._impl_.code_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstantiateContractProposal::CopyFrom(const InstantiateContractProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.InstantiateContractProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InstantiateContractProposal::InternalSwap(InstantiateContractProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.funds_.InternalSwap(&other->_impl_.funds_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_as_, &other->_impl_.run_as_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
        swap(_impl_.code_id_, other->_impl_.code_id_);
}

::google::protobuf::Metadata InstantiateContractProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InstantiateContract2Proposal::_Internal {
 public:
};

void InstantiateContract2Proposal::clear_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funds_.Clear();
}
InstantiateContract2Proposal::InstantiateContract2Proposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.InstantiateContract2Proposal)
}
inline PROTOBUF_NDEBUG_INLINE InstantiateContract2Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::InstantiateContract2Proposal& from_msg)
      : funds_{visibility, arena, from.funds_},
        title_(arena, from.title_),
        description_(arena, from.description_),
        run_as_(arena, from.run_as_),
        admin_(arena, from.admin_),
        label_(arena, from.label_),
        msg_(arena, from.msg_),
        salt_(arena, from.salt_),
        _cached_size_{0} {}

InstantiateContract2Proposal::InstantiateContract2Proposal(
    ::google::protobuf::Arena* arena,
    const InstantiateContract2Proposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstantiateContract2Proposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, code_id_),
           offsetof(Impl_, fix_msg_) -
               offsetof(Impl_, code_id_) +
               sizeof(Impl_::fix_msg_));

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.InstantiateContract2Proposal)
}
inline PROTOBUF_NDEBUG_INLINE InstantiateContract2Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : funds_{visibility, arena},
        title_(arena),
        description_(arena),
        run_as_(arena),
        admin_(arena),
        label_(arena),
        msg_(arena),
        salt_(arena),
        _cached_size_{0} {}

inline void InstantiateContract2Proposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_id_),
           0,
           offsetof(Impl_, fix_msg_) -
               offsetof(Impl_, code_id_) +
               sizeof(Impl_::fix_msg_));
}
InstantiateContract2Proposal::~InstantiateContract2Proposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.InstantiateContract2Proposal)
  SharedDtor(*this);
}
inline void InstantiateContract2Proposal::SharedDtor(MessageLite& self) {
  InstantiateContract2Proposal& this_ = static_cast<InstantiateContract2Proposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.run_as_.Destroy();
  this_._impl_.admin_.Destroy();
  this_._impl_.label_.Destroy();
  this_._impl_.msg_.Destroy();
  this_._impl_.salt_.Destroy();
  this_._impl_.~Impl_();
}

inline void* InstantiateContract2Proposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) InstantiateContract2Proposal(arena);
}
constexpr auto InstantiateContract2Proposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.funds_) +
          decltype(InstantiateContract2Proposal::_impl_.funds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InstantiateContract2Proposal), alignof(InstantiateContract2Proposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InstantiateContract2Proposal::PlacementNew_,
                                 sizeof(InstantiateContract2Proposal),
                                 alignof(InstantiateContract2Proposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull InstantiateContract2Proposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_InstantiateContract2Proposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &InstantiateContract2Proposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<InstantiateContract2Proposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &InstantiateContract2Proposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<InstantiateContract2Proposal>(), &InstantiateContract2Proposal::ByteSizeLong,
            &InstantiateContract2Proposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_._cached_size_),
        false,
    },
    &InstantiateContract2Proposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* InstantiateContract2Proposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 1, 94, 2> InstantiateContract2Proposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::InstantiateContract2Proposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.description_)}},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.run_as_)}},
    // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.admin_)}},
    // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InstantiateContract2Proposal, _impl_.code_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.code_id_)}},
    // string label = 6 [json_name = "label"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.label_)}},
    // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.msg_)}},
    // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.funds_)}},
    // bytes salt = 9 [json_name = "salt"];
    {::_pbi::TcParser::FastBS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.salt_)}},
    // bool fix_msg = 10 [json_name = "fixMsg"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InstantiateContract2Proposal, _impl_.fix_msg_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.fix_msg_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.run_as_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.admin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.code_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string label = 6 [json_name = "label"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.label_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.funds_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes salt = 9 [json_name = "salt"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.salt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool fix_msg = 10 [json_name = "fixMsg"];
    {PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.fix_msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\55\5\13\6\5\0\5\0\0\0\0\0\0\0\0\0"
    "cosmwasm.wasm.v1.InstantiateContract2Proposal"
    "title"
    "description"
    "run_as"
    "admin"
    "label"
  }},
};

PROTOBUF_NOINLINE void InstantiateContract2Proposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.InstantiateContract2Proposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.funds_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.run_as_.ClearToEmpty();
  _impl_.admin_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.salt_.ClearToEmpty();
  ::memset(&_impl_.code_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.fix_msg_) -
      reinterpret_cast<char*>(&_impl_.code_id_)) + sizeof(_impl_.fix_msg_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InstantiateContract2Proposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InstantiateContract2Proposal& this_ = static_cast<const InstantiateContract2Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InstantiateContract2Proposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InstantiateContract2Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.InstantiateContract2Proposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContract2Proposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContract2Proposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_run_as().empty()) {
            const std::string& _s = this_._internal_run_as();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContract2Proposal.run_as");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContract2Proposal.admin");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
          if (this_._internal_code_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_code_id(), target);
          }

          // string label = 6 [json_name = "label"];
          if (!this_._internal_label().empty()) {
            const std::string& _s = this_._internal_label();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.InstantiateContract2Proposal.label");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_funds_size());
               i < n; i++) {
            const auto& repfield = this_._internal_funds().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    8, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bytes salt = 9 [json_name = "salt"];
          if (!this_._internal_salt().empty()) {
            const std::string& _s = this_._internal_salt();
            target = stream->WriteBytesMaybeAliased(9, _s, target);
          }

          // bool fix_msg = 10 [json_name = "fixMsg"];
          if (this_._internal_fix_msg() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_fix_msg(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.InstantiateContract2Proposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InstantiateContract2Proposal::ByteSizeLong(const MessageLite& base) {
          const InstantiateContract2Proposal& this_ = static_cast<const InstantiateContract2Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InstantiateContract2Proposal::ByteSizeLong() const {
          const InstantiateContract2Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.InstantiateContract2Proposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin funds = 8 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_funds_size();
              for (const auto& msg : this_._internal_funds()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_run_as().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_run_as());
            }
            // string admin = 4 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
            // string label = 6 [json_name = "label"];
            if (!this_._internal_label().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label());
            }
            // bytes msg = 7 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
            // bytes salt = 9 [json_name = "salt"];
            if (!this_._internal_salt().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_salt());
            }
            // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
            if (this_._internal_code_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_code_id());
            }
            // bool fix_msg = 10 [json_name = "fixMsg"];
            if (this_._internal_fix_msg() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InstantiateContract2Proposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstantiateContract2Proposal*>(&to_msg);
  auto& from = static_cast<const InstantiateContract2Proposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.InstantiateContract2Proposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_funds()->MergeFrom(
      from._internal_funds());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_run_as().empty()) {
    _this->_internal_set_run_as(from._internal_run_as());
  }
  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (!from._internal_salt().empty()) {
    _this->_internal_set_salt(from._internal_salt());
  }
  if (from._internal_code_id() != 0) {
    _this->_impl_.code_id_ = from._impl_.code_id_;
  }
  if (from._internal_fix_msg() != 0) {
    _this->_impl_.fix_msg_ = from._impl_.fix_msg_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstantiateContract2Proposal::CopyFrom(const InstantiateContract2Proposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.InstantiateContract2Proposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InstantiateContract2Proposal::InternalSwap(InstantiateContract2Proposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.funds_.InternalSwap(&other->_impl_.funds_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_as_, &other->_impl_.run_as_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.salt_, &other->_impl_.salt_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.fix_msg_)
      + sizeof(InstantiateContract2Proposal::_impl_.fix_msg_)
      - PROTOBUF_FIELD_OFFSET(InstantiateContract2Proposal, _impl_.code_id_)>(
          reinterpret_cast<char*>(&_impl_.code_id_),
          reinterpret_cast<char*>(&other->_impl_.code_id_));
}

::google::protobuf::Metadata InstantiateContract2Proposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MigrateContractProposal::_Internal {
 public:
};

MigrateContractProposal::MigrateContractProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.MigrateContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE MigrateContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::MigrateContractProposal& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        contract_(arena, from.contract_),
        msg_(arena, from.msg_),
        _cached_size_{0} {}

MigrateContractProposal::MigrateContractProposal(
    ::google::protobuf::Arena* arena,
    const MigrateContractProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MigrateContractProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.code_id_ = from._impl_.code_id_;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.MigrateContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE MigrateContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        contract_(arena),
        msg_(arena),
        _cached_size_{0} {}

inline void MigrateContractProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_id_ = {};
}
MigrateContractProposal::~MigrateContractProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.MigrateContractProposal)
  SharedDtor(*this);
}
inline void MigrateContractProposal::SharedDtor(MessageLite& self) {
  MigrateContractProposal& this_ = static_cast<MigrateContractProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.contract_.Destroy();
  this_._impl_.msg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MigrateContractProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MigrateContractProposal(arena);
}
constexpr auto MigrateContractProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MigrateContractProposal),
                                            alignof(MigrateContractProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MigrateContractProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MigrateContractProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MigrateContractProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MigrateContractProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MigrateContractProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MigrateContractProposal>(), &MigrateContractProposal::ByteSizeLong,
            &MigrateContractProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_._cached_size_),
        false,
    },
    &MigrateContractProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MigrateContractProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 73, 2> MigrateContractProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967236,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::MigrateContractProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.contract_)}},
    // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MigrateContractProposal, _impl_.code_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.code_id_)}},
    // bytes msg = 6 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.msg_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.contract_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.code_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes msg = 6 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {PROTOBUF_FIELD_OFFSET(MigrateContractProposal, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\5\13\10\0\0\0\0"
    "cosmwasm.wasm.v1.MigrateContractProposal"
    "title"
    "description"
    "contract"
  }},
};

PROTOBUF_NOINLINE void MigrateContractProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.MigrateContractProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.contract_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.code_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MigrateContractProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MigrateContractProposal& this_ = static_cast<const MigrateContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MigrateContractProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MigrateContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.MigrateContractProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.MigrateContractProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.MigrateContractProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_contract().empty()) {
            const std::string& _s = this_._internal_contract();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.MigrateContractProposal.contract");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
          if (this_._internal_code_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_code_id(), target);
          }

          // bytes msg = 6 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.MigrateContractProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MigrateContractProposal::ByteSizeLong(const MessageLite& base) {
          const MigrateContractProposal& this_ = static_cast<const MigrateContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MigrateContractProposal::ByteSizeLong() const {
          const MigrateContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.MigrateContractProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_contract().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract());
            }
            // bytes msg = 6 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
            // uint64 code_id = 5 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
            if (this_._internal_code_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_code_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MigrateContractProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MigrateContractProposal*>(&to_msg);
  auto& from = static_cast<const MigrateContractProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.MigrateContractProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_contract().empty()) {
    _this->_internal_set_contract(from._internal_contract());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_code_id() != 0) {
    _this->_impl_.code_id_ = from._impl_.code_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MigrateContractProposal::CopyFrom(const MigrateContractProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.MigrateContractProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MigrateContractProposal::InternalSwap(MigrateContractProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_, &other->_impl_.contract_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
        swap(_impl_.code_id_, other->_impl_.code_id_);
}

::google::protobuf::Metadata MigrateContractProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SudoContractProposal::_Internal {
 public:
};

SudoContractProposal::SudoContractProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.SudoContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE SudoContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::SudoContractProposal& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        contract_(arena, from.contract_),
        msg_(arena, from.msg_),
        _cached_size_{0} {}

SudoContractProposal::SudoContractProposal(
    ::google::protobuf::Arena* arena,
    const SudoContractProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SudoContractProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.SudoContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE SudoContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        contract_(arena),
        msg_(arena),
        _cached_size_{0} {}

inline void SudoContractProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SudoContractProposal::~SudoContractProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.SudoContractProposal)
  SharedDtor(*this);
}
inline void SudoContractProposal::SharedDtor(MessageLite& self) {
  SudoContractProposal& this_ = static_cast<SudoContractProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.contract_.Destroy();
  this_._impl_.msg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SudoContractProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SudoContractProposal(arena);
}
constexpr auto SudoContractProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SudoContractProposal),
                                            alignof(SudoContractProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SudoContractProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SudoContractProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SudoContractProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SudoContractProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SudoContractProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SudoContractProposal>(), &SudoContractProposal::ByteSizeLong,
            &SudoContractProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_._cached_size_),
        false,
    },
    &SudoContractProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SudoContractProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 70, 2> SudoContractProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::SudoContractProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.msg_)}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.description_)}},
    // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.contract_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.contract_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {PROTOBUF_FIELD_OFFSET(SudoContractProposal, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\5\13\10\0\0\0\0"
    "cosmwasm.wasm.v1.SudoContractProposal"
    "title"
    "description"
    "contract"
  }},
};

PROTOBUF_NOINLINE void SudoContractProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.SudoContractProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.contract_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SudoContractProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SudoContractProposal& this_ = static_cast<const SudoContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SudoContractProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SudoContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.SudoContractProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.SudoContractProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.SudoContractProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_contract().empty()) {
            const std::string& _s = this_._internal_contract();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.SudoContractProposal.contract");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.SudoContractProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SudoContractProposal::ByteSizeLong(const MessageLite& base) {
          const SudoContractProposal& this_ = static_cast<const SudoContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SudoContractProposal::ByteSizeLong() const {
          const SudoContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.SudoContractProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_contract().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract());
            }
            // bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SudoContractProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SudoContractProposal*>(&to_msg);
  auto& from = static_cast<const SudoContractProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.SudoContractProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_contract().empty()) {
    _this->_internal_set_contract(from._internal_contract());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SudoContractProposal::CopyFrom(const SudoContractProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.SudoContractProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SudoContractProposal::InternalSwap(SudoContractProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_, &other->_impl_.contract_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
}

::google::protobuf::Metadata SudoContractProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExecuteContractProposal::_Internal {
 public:
};

void ExecuteContractProposal::clear_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funds_.Clear();
}
ExecuteContractProposal::ExecuteContractProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.ExecuteContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE ExecuteContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::ExecuteContractProposal& from_msg)
      : funds_{visibility, arena, from.funds_},
        title_(arena, from.title_),
        description_(arena, from.description_),
        run_as_(arena, from.run_as_),
        contract_(arena, from.contract_),
        msg_(arena, from.msg_),
        _cached_size_{0} {}

ExecuteContractProposal::ExecuteContractProposal(
    ::google::protobuf::Arena* arena,
    const ExecuteContractProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExecuteContractProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.ExecuteContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE ExecuteContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : funds_{visibility, arena},
        title_(arena),
        description_(arena),
        run_as_(arena),
        contract_(arena),
        msg_(arena),
        _cached_size_{0} {}

inline void ExecuteContractProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExecuteContractProposal::~ExecuteContractProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.ExecuteContractProposal)
  SharedDtor(*this);
}
inline void ExecuteContractProposal::SharedDtor(MessageLite& self) {
  ExecuteContractProposal& this_ = static_cast<ExecuteContractProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.run_as_.Destroy();
  this_._impl_.contract_.Destroy();
  this_._impl_.msg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ExecuteContractProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExecuteContractProposal(arena);
}
constexpr auto ExecuteContractProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.funds_) +
          decltype(ExecuteContractProposal::_impl_.funds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ExecuteContractProposal), alignof(ExecuteContractProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExecuteContractProposal::PlacementNew_,
                                 sizeof(ExecuteContractProposal),
                                 alignof(ExecuteContractProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExecuteContractProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExecuteContractProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExecuteContractProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExecuteContractProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExecuteContractProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExecuteContractProposal>(), &ExecuteContractProposal::ByteSizeLong,
            &ExecuteContractProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_._cached_size_),
        false,
    },
    &ExecuteContractProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExecuteContractProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 79, 2> ExecuteContractProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::ExecuteContractProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.description_)}},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.run_as_)}},
    // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.contract_)}},
    // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.msg_)}},
    // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.funds_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.run_as_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.contract_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ExecuteContractProposal, _impl_.funds_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\50\5\13\6\10\0\0\0"
    "cosmwasm.wasm.v1.ExecuteContractProposal"
    "title"
    "description"
    "run_as"
    "contract"
  }},
};

PROTOBUF_NOINLINE void ExecuteContractProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.ExecuteContractProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.funds_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.run_as_.ClearToEmpty();
  _impl_.contract_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExecuteContractProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExecuteContractProposal& this_ = static_cast<const ExecuteContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExecuteContractProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExecuteContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.ExecuteContractProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.ExecuteContractProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.ExecuteContractProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_run_as().empty()) {
            const std::string& _s = this_._internal_run_as();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.ExecuteContractProposal.run_as");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_contract().empty()) {
            const std::string& _s = this_._internal_contract();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.ExecuteContractProposal.contract");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_funds_size());
               i < n; i++) {
            const auto& repfield = this_._internal_funds().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.ExecuteContractProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExecuteContractProposal::ByteSizeLong(const MessageLite& base) {
          const ExecuteContractProposal& this_ = static_cast<const ExecuteContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExecuteContractProposal::ByteSizeLong() const {
          const ExecuteContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.ExecuteContractProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_funds_size();
              for (const auto& msg : this_._internal_funds()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_run_as().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_run_as());
            }
            // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_contract().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract());
            }
            // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExecuteContractProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExecuteContractProposal*>(&to_msg);
  auto& from = static_cast<const ExecuteContractProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.ExecuteContractProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_funds()->MergeFrom(
      from._internal_funds());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_run_as().empty()) {
    _this->_internal_set_run_as(from._internal_run_as());
  }
  if (!from._internal_contract().empty()) {
    _this->_internal_set_contract(from._internal_contract());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExecuteContractProposal::CopyFrom(const ExecuteContractProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.ExecuteContractProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExecuteContractProposal::InternalSwap(ExecuteContractProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.funds_.InternalSwap(&other->_impl_.funds_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_as_, &other->_impl_.run_as_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_, &other->_impl_.contract_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
}

::google::protobuf::Metadata ExecuteContractProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateAdminProposal::_Internal {
 public:
};

UpdateAdminProposal::UpdateAdminProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.UpdateAdminProposal)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAdminProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::UpdateAdminProposal& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        new_admin_(arena, from.new_admin_),
        contract_(arena, from.contract_),
        _cached_size_{0} {}

UpdateAdminProposal::UpdateAdminProposal(
    ::google::protobuf::Arena* arena,
    const UpdateAdminProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateAdminProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.UpdateAdminProposal)
}
inline PROTOBUF_NDEBUG_INLINE UpdateAdminProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        new_admin_(arena),
        contract_(arena),
        _cached_size_{0} {}

inline void UpdateAdminProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateAdminProposal::~UpdateAdminProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.UpdateAdminProposal)
  SharedDtor(*this);
}
inline void UpdateAdminProposal::SharedDtor(MessageLite& self) {
  UpdateAdminProposal& this_ = static_cast<UpdateAdminProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.new_admin_.Destroy();
  this_._impl_.contract_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateAdminProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateAdminProposal(arena);
}
constexpr auto UpdateAdminProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateAdminProposal),
                                            alignof(UpdateAdminProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateAdminProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateAdminProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateAdminProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateAdminProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateAdminProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateAdminProposal>(), &UpdateAdminProposal::ByteSizeLong,
            &UpdateAdminProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_._cached_size_),
        false,
    },
    &UpdateAdminProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateAdminProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 78, 2> UpdateAdminProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::UpdateAdminProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.contract_)}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.description_)}},
    // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\"", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.new_admin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\"", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.new_admin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(UpdateAdminProposal, _impl_.contract_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\5\13\11\10\0\0\0"
    "cosmwasm.wasm.v1.UpdateAdminProposal"
    "title"
    "description"
    "new_admin"
    "contract"
  }},
};

PROTOBUF_NOINLINE void UpdateAdminProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.UpdateAdminProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.new_admin_.ClearToEmpty();
  _impl_.contract_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateAdminProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateAdminProposal& this_ = static_cast<const UpdateAdminProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateAdminProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateAdminProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.UpdateAdminProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UpdateAdminProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UpdateAdminProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\"", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_new_admin().empty()) {
            const std::string& _s = this_._internal_new_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UpdateAdminProposal.new_admin");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_contract().empty()) {
            const std::string& _s = this_._internal_contract();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UpdateAdminProposal.contract");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.UpdateAdminProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateAdminProposal::ByteSizeLong(const MessageLite& base) {
          const UpdateAdminProposal& this_ = static_cast<const UpdateAdminProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateAdminProposal::ByteSizeLong() const {
          const UpdateAdminProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.UpdateAdminProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\"", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_new_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_new_admin());
            }
            // string contract = 4 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_contract().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateAdminProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateAdminProposal*>(&to_msg);
  auto& from = static_cast<const UpdateAdminProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.UpdateAdminProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_new_admin().empty()) {
    _this->_internal_set_new_admin(from._internal_new_admin());
  }
  if (!from._internal_contract().empty()) {
    _this->_internal_set_contract(from._internal_contract());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateAdminProposal::CopyFrom(const UpdateAdminProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.UpdateAdminProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateAdminProposal::InternalSwap(UpdateAdminProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_admin_, &other->_impl_.new_admin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_, &other->_impl_.contract_, arena);
}

::google::protobuf::Metadata UpdateAdminProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClearAdminProposal::_Internal {
 public:
};

ClearAdminProposal::ClearAdminProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.ClearAdminProposal)
}
inline PROTOBUF_NDEBUG_INLINE ClearAdminProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::ClearAdminProposal& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        contract_(arena, from.contract_),
        _cached_size_{0} {}

ClearAdminProposal::ClearAdminProposal(
    ::google::protobuf::Arena* arena,
    const ClearAdminProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClearAdminProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.ClearAdminProposal)
}
inline PROTOBUF_NDEBUG_INLINE ClearAdminProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        contract_(arena),
        _cached_size_{0} {}

inline void ClearAdminProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClearAdminProposal::~ClearAdminProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.ClearAdminProposal)
  SharedDtor(*this);
}
inline void ClearAdminProposal::SharedDtor(MessageLite& self) {
  ClearAdminProposal& this_ = static_cast<ClearAdminProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.contract_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ClearAdminProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ClearAdminProposal(arena);
}
constexpr auto ClearAdminProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ClearAdminProposal),
                                            alignof(ClearAdminProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ClearAdminProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ClearAdminProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ClearAdminProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ClearAdminProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ClearAdminProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ClearAdminProposal>(), &ClearAdminProposal::ByteSizeLong,
            &ClearAdminProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ClearAdminProposal, _impl_._cached_size_),
        false,
    },
    &ClearAdminProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ClearAdminProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 68, 2> ClearAdminProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::ClearAdminProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClearAdminProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ClearAdminProposal, _impl_.description_)}},
    // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ClearAdminProposal, _impl_.contract_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(ClearAdminProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(ClearAdminProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(ClearAdminProposal, _impl_.contract_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\5\13\10\0\0\0\0"
    "cosmwasm.wasm.v1.ClearAdminProposal"
    "title"
    "description"
    "contract"
  }},
};

PROTOBUF_NOINLINE void ClearAdminProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.ClearAdminProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.contract_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ClearAdminProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ClearAdminProposal& this_ = static_cast<const ClearAdminProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ClearAdminProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ClearAdminProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.ClearAdminProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.ClearAdminProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.ClearAdminProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_contract().empty()) {
            const std::string& _s = this_._internal_contract();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.ClearAdminProposal.contract");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.ClearAdminProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ClearAdminProposal::ByteSizeLong(const MessageLite& base) {
          const ClearAdminProposal& this_ = static_cast<const ClearAdminProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ClearAdminProposal::ByteSizeLong() const {
          const ClearAdminProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.ClearAdminProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_contract().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ClearAdminProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClearAdminProposal*>(&to_msg);
  auto& from = static_cast<const ClearAdminProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.ClearAdminProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_contract().empty()) {
    _this->_internal_set_contract(from._internal_contract());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClearAdminProposal::CopyFrom(const ClearAdminProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.ClearAdminProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClearAdminProposal::InternalSwap(ClearAdminProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_, &other->_impl_.contract_, arena);
}

::google::protobuf::Metadata ClearAdminProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PinCodesProposal::_Internal {
 public:
};

PinCodesProposal::PinCodesProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.PinCodesProposal)
}
inline PROTOBUF_NDEBUG_INLINE PinCodesProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::PinCodesProposal& from_msg)
      : code_ids_{visibility, arena, from.code_ids_},
        _code_ids_cached_byte_size_{0},
        title_(arena, from.title_),
        description_(arena, from.description_),
        _cached_size_{0} {}

PinCodesProposal::PinCodesProposal(
    ::google::protobuf::Arena* arena,
    const PinCodesProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PinCodesProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.PinCodesProposal)
}
inline PROTOBUF_NDEBUG_INLINE PinCodesProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_ids_{visibility, arena},
        _code_ids_cached_byte_size_{0},
        title_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void PinCodesProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PinCodesProposal::~PinCodesProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.PinCodesProposal)
  SharedDtor(*this);
}
inline void PinCodesProposal::SharedDtor(MessageLite& self) {
  PinCodesProposal& this_ = static_cast<PinCodesProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PinCodesProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PinCodesProposal(arena);
}
constexpr auto PinCodesProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_.code_ids_) +
          decltype(PinCodesProposal::_impl_.code_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(PinCodesProposal), alignof(PinCodesProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&PinCodesProposal::PlacementNew_,
                                 sizeof(PinCodesProposal),
                                 alignof(PinCodesProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PinCodesProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PinCodesProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PinCodesProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PinCodesProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PinCodesProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PinCodesProposal>(), &PinCodesProposal::ByteSizeLong,
            &PinCodesProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_._cached_size_),
        false,
    },
    &PinCodesProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PinCodesProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 58, 2> PinCodesProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::PinCodesProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_.description_)}},
    // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_.code_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
    {PROTOBUF_FIELD_OFFSET(PinCodesProposal, _impl_.code_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
  }},
  // no aux_entries
  {{
    "\41\5\13\0\0\0\0\0"
    "cosmwasm.wasm.v1.PinCodesProposal"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void PinCodesProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.PinCodesProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_ids_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PinCodesProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PinCodesProposal& this_ = static_cast<const PinCodesProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PinCodesProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PinCodesProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.PinCodesProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.PinCodesProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.PinCodesProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
          {
            int byte_size = this_._impl_._code_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  3, this_._internal_code_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.PinCodesProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PinCodesProposal::ByteSizeLong(const MessageLite& base) {
          const PinCodesProposal& this_ = static_cast<const PinCodesProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PinCodesProposal::ByteSizeLong() const {
          const PinCodesProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.PinCodesProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_code_ids(), 1,
                      this_._impl_._code_ids_cached_byte_size_);
            }
          }
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PinCodesProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PinCodesProposal*>(&to_msg);
  auto& from = static_cast<const PinCodesProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.PinCodesProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_code_ids()->MergeFrom(from._internal_code_ids());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PinCodesProposal::CopyFrom(const PinCodesProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.PinCodesProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PinCodesProposal::InternalSwap(PinCodesProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.code_ids_.InternalSwap(&other->_impl_.code_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata PinCodesProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnpinCodesProposal::_Internal {
 public:
};

UnpinCodesProposal::UnpinCodesProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.UnpinCodesProposal)
}
inline PROTOBUF_NDEBUG_INLINE UnpinCodesProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::UnpinCodesProposal& from_msg)
      : code_ids_{visibility, arena, from.code_ids_},
        _code_ids_cached_byte_size_{0},
        title_(arena, from.title_),
        description_(arena, from.description_),
        _cached_size_{0} {}

UnpinCodesProposal::UnpinCodesProposal(
    ::google::protobuf::Arena* arena,
    const UnpinCodesProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnpinCodesProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.UnpinCodesProposal)
}
inline PROTOBUF_NDEBUG_INLINE UnpinCodesProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_ids_{visibility, arena},
        _code_ids_cached_byte_size_{0},
        title_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void UnpinCodesProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UnpinCodesProposal::~UnpinCodesProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.UnpinCodesProposal)
  SharedDtor(*this);
}
inline void UnpinCodesProposal::SharedDtor(MessageLite& self) {
  UnpinCodesProposal& this_ = static_cast<UnpinCodesProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UnpinCodesProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnpinCodesProposal(arena);
}
constexpr auto UnpinCodesProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_.code_ids_) +
          decltype(UnpinCodesProposal::_impl_.code_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UnpinCodesProposal), alignof(UnpinCodesProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UnpinCodesProposal::PlacementNew_,
                                 sizeof(UnpinCodesProposal),
                                 alignof(UnpinCodesProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnpinCodesProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnpinCodesProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnpinCodesProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnpinCodesProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnpinCodesProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnpinCodesProposal>(), &UnpinCodesProposal::ByteSizeLong,
            &UnpinCodesProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_._cached_size_),
        false,
    },
    &UnpinCodesProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnpinCodesProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 60, 2> UnpinCodesProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::UnpinCodesProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_.description_)}},
    // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_.code_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
    {PROTOBUF_FIELD_OFFSET(UnpinCodesProposal, _impl_.code_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
  }},
  // no aux_entries
  {{
    "\43\5\13\0\0\0\0\0"
    "cosmwasm.wasm.v1.UnpinCodesProposal"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void UnpinCodesProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.UnpinCodesProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_ids_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnpinCodesProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnpinCodesProposal& this_ = static_cast<const UnpinCodesProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnpinCodesProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnpinCodesProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.UnpinCodesProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UnpinCodesProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UnpinCodesProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
          {
            int byte_size = this_._impl_._code_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  3, this_._internal_code_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.UnpinCodesProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnpinCodesProposal::ByteSizeLong(const MessageLite& base) {
          const UnpinCodesProposal& this_ = static_cast<const UnpinCodesProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnpinCodesProposal::ByteSizeLong() const {
          const UnpinCodesProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.UnpinCodesProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint64 code_ids = 3 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_code_ids(), 1,
                      this_._impl_._code_ids_cached_byte_size_);
            }
          }
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnpinCodesProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnpinCodesProposal*>(&to_msg);
  auto& from = static_cast<const UnpinCodesProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.UnpinCodesProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_code_ids()->MergeFrom(from._internal_code_ids());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnpinCodesProposal::CopyFrom(const UnpinCodesProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.UnpinCodesProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnpinCodesProposal::InternalSwap(UnpinCodesProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.code_ids_.InternalSwap(&other->_impl_.code_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata UnpinCodesProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccessConfigUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AccessConfigUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_._has_bits_);
};

void AccessConfigUpdate::clear_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ != nullptr) _impl_.instantiate_permission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AccessConfigUpdate::AccessConfigUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.AccessConfigUpdate)
}
inline PROTOBUF_NDEBUG_INLINE AccessConfigUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::AccessConfigUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AccessConfigUpdate::AccessConfigUpdate(
    ::google::protobuf::Arena* arena,
    const AccessConfigUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AccessConfigUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.instantiate_permission_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::AccessConfig>(
                              arena, *from._impl_.instantiate_permission_)
                        : nullptr;
  _impl_.code_id_ = from._impl_.code_id_;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.AccessConfigUpdate)
}
inline PROTOBUF_NDEBUG_INLINE AccessConfigUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AccessConfigUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, instantiate_permission_),
           0,
           offsetof(Impl_, code_id_) -
               offsetof(Impl_, instantiate_permission_) +
               sizeof(Impl_::code_id_));
}
AccessConfigUpdate::~AccessConfigUpdate() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.AccessConfigUpdate)
  SharedDtor(*this);
}
inline void AccessConfigUpdate::SharedDtor(MessageLite& self) {
  AccessConfigUpdate& this_ = static_cast<AccessConfigUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.instantiate_permission_;
  this_._impl_.~Impl_();
}

inline void* AccessConfigUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AccessConfigUpdate(arena);
}
constexpr auto AccessConfigUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AccessConfigUpdate),
                                            alignof(AccessConfigUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AccessConfigUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AccessConfigUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AccessConfigUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AccessConfigUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AccessConfigUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AccessConfigUpdate>(), &AccessConfigUpdate::ByteSizeLong,
            &AccessConfigUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_._cached_size_),
        false,
    },
    &AccessConfigUpdate::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AccessConfigUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AccessConfigUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::AccessConfigUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_.instantiate_permission_)}},
    // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AccessConfigUpdate, _impl_.code_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_.code_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_.code_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_.instantiate_permission_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::AccessConfig>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AccessConfigUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.AccessConfigUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.instantiate_permission_ != nullptr);
    _impl_.instantiate_permission_->Clear();
  }
  _impl_.code_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AccessConfigUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AccessConfigUpdate& this_ = static_cast<const AccessConfigUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AccessConfigUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AccessConfigUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.AccessConfigUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
          if (this_._internal_code_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_code_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.instantiate_permission_, this_._impl_.instantiate_permission_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.AccessConfigUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AccessConfigUpdate::ByteSizeLong(const MessageLite& base) {
          const AccessConfigUpdate& this_ = static_cast<const AccessConfigUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AccessConfigUpdate::ByteSizeLong() const {
          const AccessConfigUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.AccessConfigUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2 [json_name = "instantiatePermission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.instantiate_permission_);
            }
          }
           {
            // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
            if (this_._internal_code_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_code_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AccessConfigUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccessConfigUpdate*>(&to_msg);
  auto& from = static_cast<const AccessConfigUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.AccessConfigUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.instantiate_permission_ != nullptr);
    if (_this->_impl_.instantiate_permission_ == nullptr) {
      _this->_impl_.instantiate_permission_ =
          ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::AccessConfig>(arena, *from._impl_.instantiate_permission_);
    } else {
      _this->_impl_.instantiate_permission_->MergeFrom(*from._impl_.instantiate_permission_);
    }
  }
  if (from._internal_code_id() != 0) {
    _this->_impl_.code_id_ = from._impl_.code_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccessConfigUpdate::CopyFrom(const AccessConfigUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.AccessConfigUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccessConfigUpdate::InternalSwap(AccessConfigUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_.code_id_)
      + sizeof(AccessConfigUpdate::_impl_.code_id_)
      - PROTOBUF_FIELD_OFFSET(AccessConfigUpdate, _impl_.instantiate_permission_)>(
          reinterpret_cast<char*>(&_impl_.instantiate_permission_),
          reinterpret_cast<char*>(&other->_impl_.instantiate_permission_));
}

::google::protobuf::Metadata AccessConfigUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateInstantiateConfigProposal::_Internal {
 public:
};

UpdateInstantiateConfigProposal::UpdateInstantiateConfigProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
}
inline PROTOBUF_NDEBUG_INLINE UpdateInstantiateConfigProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::UpdateInstantiateConfigProposal& from_msg)
      : access_config_updates_{visibility, arena, from.access_config_updates_},
        title_(arena, from.title_),
        description_(arena, from.description_),
        _cached_size_{0} {}

UpdateInstantiateConfigProposal::UpdateInstantiateConfigProposal(
    ::google::protobuf::Arena* arena,
    const UpdateInstantiateConfigProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateInstantiateConfigProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
}
inline PROTOBUF_NDEBUG_INLINE UpdateInstantiateConfigProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : access_config_updates_{visibility, arena},
        title_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void UpdateInstantiateConfigProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UpdateInstantiateConfigProposal::~UpdateInstantiateConfigProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
  SharedDtor(*this);
}
inline void UpdateInstantiateConfigProposal::SharedDtor(MessageLite& self) {
  UpdateInstantiateConfigProposal& this_ = static_cast<UpdateInstantiateConfigProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UpdateInstantiateConfigProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UpdateInstantiateConfigProposal(arena);
}
constexpr auto UpdateInstantiateConfigProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_.access_config_updates_) +
          decltype(UpdateInstantiateConfigProposal::_impl_.access_config_updates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UpdateInstantiateConfigProposal), alignof(UpdateInstantiateConfigProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UpdateInstantiateConfigProposal::PlacementNew_,
                                 sizeof(UpdateInstantiateConfigProposal),
                                 alignof(UpdateInstantiateConfigProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UpdateInstantiateConfigProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UpdateInstantiateConfigProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UpdateInstantiateConfigProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UpdateInstantiateConfigProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UpdateInstantiateConfigProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UpdateInstantiateConfigProposal>(), &UpdateInstantiateConfigProposal::ByteSizeLong,
            &UpdateInstantiateConfigProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_._cached_size_),
        false,
    },
    &UpdateInstantiateConfigProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UpdateInstantiateConfigProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 73, 2> UpdateInstantiateConfigProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::UpdateInstantiateConfigProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title", (.gogoproto.moretags) = "yaml:\"title\""];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description", (.gogoproto.moretags) = "yaml:\"description\""];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_.description_)}},
    // repeated .cosmwasm.wasm.v1.AccessConfigUpdate access_config_updates = 3 [json_name = "accessConfigUpdates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_.access_config_updates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title", (.gogoproto.moretags) = "yaml:\"title\""];
    {PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description", (.gogoproto.moretags) = "yaml:\"description\""];
    {PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmwasm.wasm.v1.AccessConfigUpdate access_config_updates = 3 [json_name = "accessConfigUpdates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(UpdateInstantiateConfigProposal, _impl_.access_config_updates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::AccessConfigUpdate>()},
  }}, {{
    "\60\5\13\0\0\0\0\0"
    "cosmwasm.wasm.v1.UpdateInstantiateConfigProposal"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void UpdateInstantiateConfigProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.access_config_updates_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UpdateInstantiateConfigProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UpdateInstantiateConfigProposal& this_ = static_cast<const UpdateInstantiateConfigProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UpdateInstantiateConfigProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UpdateInstantiateConfigProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title", (.gogoproto.moretags) = "yaml:\"title\""];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description", (.gogoproto.moretags) = "yaml:\"description\""];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.UpdateInstantiateConfigProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .cosmwasm.wasm.v1.AccessConfigUpdate access_config_updates = 3 [json_name = "accessConfigUpdates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_access_config_updates_size());
               i < n; i++) {
            const auto& repfield = this_._internal_access_config_updates().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UpdateInstantiateConfigProposal::ByteSizeLong(const MessageLite& base) {
          const UpdateInstantiateConfigProposal& this_ = static_cast<const UpdateInstantiateConfigProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UpdateInstantiateConfigProposal::ByteSizeLong() const {
          const UpdateInstantiateConfigProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmwasm.wasm.v1.AccessConfigUpdate access_config_updates = 3 [json_name = "accessConfigUpdates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_access_config_updates_size();
              for (const auto& msg : this_._internal_access_config_updates()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string title = 1 [json_name = "title", (.gogoproto.moretags) = "yaml:\"title\""];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description", (.gogoproto.moretags) = "yaml:\"description\""];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UpdateInstantiateConfigProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateInstantiateConfigProposal*>(&to_msg);
  auto& from = static_cast<const UpdateInstantiateConfigProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_access_config_updates()->MergeFrom(
      from._internal_access_config_updates());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateInstantiateConfigProposal::CopyFrom(const UpdateInstantiateConfigProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.UpdateInstantiateConfigProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateInstantiateConfigProposal::InternalSwap(UpdateInstantiateConfigProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.access_config_updates_.InternalSwap(&other->_impl_.access_config_updates_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata UpdateInstantiateConfigProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StoreAndInstantiateContractProposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StoreAndInstantiateContractProposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_._has_bits_);
};

void StoreAndInstantiateContractProposal::clear_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ != nullptr) _impl_.instantiate_permission_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void StoreAndInstantiateContractProposal::clear_funds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funds_.Clear();
}
StoreAndInstantiateContractProposal::StoreAndInstantiateContractProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE StoreAndInstantiateContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        funds_{visibility, arena, from.funds_},
        title_(arena, from.title_),
        description_(arena, from.description_),
        run_as_(arena, from.run_as_),
        wasm_byte_code_(arena, from.wasm_byte_code_),
        admin_(arena, from.admin_),
        label_(arena, from.label_),
        msg_(arena, from.msg_),
        source_(arena, from.source_),
        builder_(arena, from.builder_),
        code_hash_(arena, from.code_hash_) {}

StoreAndInstantiateContractProposal::StoreAndInstantiateContractProposal(
    ::google::protobuf::Arena* arena,
    const StoreAndInstantiateContractProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StoreAndInstantiateContractProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.instantiate_permission_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::AccessConfig>(
                              arena, *from._impl_.instantiate_permission_)
                        : nullptr;
  _impl_.unpin_code_ = from._impl_.unpin_code_;

  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
}
inline PROTOBUF_NDEBUG_INLINE StoreAndInstantiateContractProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        funds_{visibility, arena},
        title_(arena),
        description_(arena),
        run_as_(arena),
        wasm_byte_code_(arena),
        admin_(arena),
        label_(arena),
        msg_(arena),
        source_(arena),
        builder_(arena),
        code_hash_(arena) {}

inline void StoreAndInstantiateContractProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, instantiate_permission_),
           0,
           offsetof(Impl_, unpin_code_) -
               offsetof(Impl_, instantiate_permission_) +
               sizeof(Impl_::unpin_code_));
}
StoreAndInstantiateContractProposal::~StoreAndInstantiateContractProposal() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
  SharedDtor(*this);
}
inline void StoreAndInstantiateContractProposal::SharedDtor(MessageLite& self) {
  StoreAndInstantiateContractProposal& this_ = static_cast<StoreAndInstantiateContractProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.run_as_.Destroy();
  this_._impl_.wasm_byte_code_.Destroy();
  this_._impl_.admin_.Destroy();
  this_._impl_.label_.Destroy();
  this_._impl_.msg_.Destroy();
  this_._impl_.source_.Destroy();
  this_._impl_.builder_.Destroy();
  this_._impl_.code_hash_.Destroy();
  delete this_._impl_.instantiate_permission_;
  this_._impl_.~Impl_();
}

inline void* StoreAndInstantiateContractProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StoreAndInstantiateContractProposal(arena);
}
constexpr auto StoreAndInstantiateContractProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.funds_) +
          decltype(StoreAndInstantiateContractProposal::_impl_.funds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(StoreAndInstantiateContractProposal), alignof(StoreAndInstantiateContractProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StoreAndInstantiateContractProposal::PlacementNew_,
                                 sizeof(StoreAndInstantiateContractProposal),
                                 alignof(StoreAndInstantiateContractProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StoreAndInstantiateContractProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StoreAndInstantiateContractProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StoreAndInstantiateContractProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StoreAndInstantiateContractProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StoreAndInstantiateContractProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StoreAndInstantiateContractProposal>(), &StoreAndInstantiateContractProposal::ByteSizeLong,
            &StoreAndInstantiateContractProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_._cached_size_),
        false,
    },
    &StoreAndInstantiateContractProposal::kDescriptorMethods,
    &descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StoreAndInstantiateContractProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 2, 114, 2> StoreAndInstantiateContractProposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::StoreAndInstantiateContractProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.description_)}},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.run_as_)}},
    // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.wasm_byte_code_)}},
    // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.instantiate_permission_)}},
    // bool unpin_code = 6 [json_name = "unpinCode"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(StoreAndInstantiateContractProposal, _impl_.unpin_code_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.unpin_code_)}},
    // string admin = 7 [json_name = "admin"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.admin_)}},
    // string label = 8 [json_name = "label"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.label_)}},
    // bytes msg = 9 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {::_pbi::TcParser::FastBS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.msg_)}},
    // repeated .cosmos.base.v1beta1.Coin funds = 10 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {82, 63, 1, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.funds_)}},
    // string source = 11 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.source_)}},
    // string builder = 12 [json_name = "builder"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.builder_)}},
    // bytes code_hash = 13 [json_name = "codeHash"];
    {::_pbi::TcParser::FastBS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.code_hash_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.run_as_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.wasm_byte_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.instantiate_permission_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool unpin_code = 6 [json_name = "unpinCode"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.unpin_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string admin = 7 [json_name = "admin"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.admin_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string label = 8 [json_name = "label"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.label_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes msg = 9 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.msg_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin funds = 10 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.funds_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string source = 11 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.source_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string builder = 12 [json_name = "builder"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.builder_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes code_hash = 13 [json_name = "codeHash"];
    {PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.code_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmwasm::wasm::v1::AccessConfig>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\64\5\13\6\0\0\0\5\5\0\0\6\7\0\0\0"
    "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal"
    "title"
    "description"
    "run_as"
    "admin"
    "label"
    "source"
    "builder"
  }},
};

PROTOBUF_NOINLINE void StoreAndInstantiateContractProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.funds_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.run_as_.ClearToEmpty();
  _impl_.wasm_byte_code_.ClearToEmpty();
  _impl_.admin_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _impl_.msg_.ClearToEmpty();
  _impl_.source_.ClearToEmpty();
  _impl_.builder_.ClearToEmpty();
  _impl_.code_hash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.instantiate_permission_ != nullptr);
    _impl_.instantiate_permission_->Clear();
  }
  _impl_.unpin_code_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StoreAndInstantiateContractProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StoreAndInstantiateContractProposal& this_ = static_cast<const StoreAndInstantiateContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StoreAndInstantiateContractProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StoreAndInstantiateContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_run_as().empty()) {
            const std::string& _s = this_._internal_run_as();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.run_as");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
          if (!this_._internal_wasm_byte_code().empty()) {
            const std::string& _s = this_._internal_wasm_byte_code();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.instantiate_permission_, this_._impl_.instantiate_permission_->GetCachedSize(), target,
                stream);
          }

          // bool unpin_code = 6 [json_name = "unpinCode"];
          if (this_._internal_unpin_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_unpin_code(), target);
          }

          // string admin = 7 [json_name = "admin"];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.admin");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string label = 8 [json_name = "label"];
          if (!this_._internal_label().empty()) {
            const std::string& _s = this_._internal_label();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.label");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // bytes msg = 9 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(9, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin funds = 10 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_funds_size());
               i < n; i++) {
            const auto& repfield = this_._internal_funds().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    10, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string source = 11 [json_name = "source"];
          if (!this_._internal_source().empty()) {
            const std::string& _s = this_._internal_source();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.source");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string builder = 12 [json_name = "builder"];
          if (!this_._internal_builder().empty()) {
            const std::string& _s = this_._internal_builder();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmwasm.wasm.v1.StoreAndInstantiateContractProposal.builder");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // bytes code_hash = 13 [json_name = "codeHash"];
          if (!this_._internal_code_hash().empty()) {
            const std::string& _s = this_._internal_code_hash();
            target = stream->WriteBytesMaybeAliased(13, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StoreAndInstantiateContractProposal::ByteSizeLong(const MessageLite& base) {
          const StoreAndInstantiateContractProposal& this_ = static_cast<const StoreAndInstantiateContractProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StoreAndInstantiateContractProposal::ByteSizeLong() const {
          const StoreAndInstantiateContractProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin funds = 10 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_funds_size();
              for (const auto& msg : this_._internal_funds()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
            // string run_as = 3 [json_name = "runAs", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_run_as().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_run_as());
            }
            // bytes wasm_byte_code = 4 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
            if (!this_._internal_wasm_byte_code().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_wasm_byte_code());
            }
            // string admin = 7 [json_name = "admin"];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
            // string label = 8 [json_name = "label"];
            if (!this_._internal_label().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_label());
            }
            // bytes msg = 9 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
            // string source = 11 [json_name = "source"];
            if (!this_._internal_source().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_source());
            }
            // string builder = 12 [json_name = "builder"];
            if (!this_._internal_builder().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_builder());
            }
            // bytes code_hash = 13 [json_name = "codeHash"];
            if (!this_._internal_code_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_code_hash());
            }
          }
           {
            // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.instantiate_permission_);
            }
          }
           {
            // bool unpin_code = 6 [json_name = "unpinCode"];
            if (this_._internal_unpin_code() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StoreAndInstantiateContractProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StoreAndInstantiateContractProposal*>(&to_msg);
  auto& from = static_cast<const StoreAndInstantiateContractProposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_funds()->MergeFrom(
      from._internal_funds());
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_run_as().empty()) {
    _this->_internal_set_run_as(from._internal_run_as());
  }
  if (!from._internal_wasm_byte_code().empty()) {
    _this->_internal_set_wasm_byte_code(from._internal_wasm_byte_code());
  }
  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (!from._internal_source().empty()) {
    _this->_internal_set_source(from._internal_source());
  }
  if (!from._internal_builder().empty()) {
    _this->_internal_set_builder(from._internal_builder());
  }
  if (!from._internal_code_hash().empty()) {
    _this->_internal_set_code_hash(from._internal_code_hash());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.instantiate_permission_ != nullptr);
    if (_this->_impl_.instantiate_permission_ == nullptr) {
      _this->_impl_.instantiate_permission_ =
          ::google::protobuf::Message::CopyConstruct<::cosmwasm::wasm::v1::AccessConfig>(arena, *from._impl_.instantiate_permission_);
    } else {
      _this->_impl_.instantiate_permission_->MergeFrom(*from._impl_.instantiate_permission_);
    }
  }
  if (from._internal_unpin_code() != 0) {
    _this->_impl_.unpin_code_ = from._impl_.unpin_code_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StoreAndInstantiateContractProposal::CopyFrom(const StoreAndInstantiateContractProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.StoreAndInstantiateContractProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StoreAndInstantiateContractProposal::InternalSwap(StoreAndInstantiateContractProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.funds_.InternalSwap(&other->_impl_.funds_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.run_as_, &other->_impl_.run_as_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wasm_byte_code_, &other->_impl_.wasm_byte_code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.label_, &other->_impl_.label_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.builder_, &other->_impl_.builder_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_hash_, &other->_impl_.code_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.unpin_code_)
      + sizeof(StoreAndInstantiateContractProposal::_impl_.unpin_code_)
      - PROTOBUF_FIELD_OFFSET(StoreAndInstantiateContractProposal, _impl_.instantiate_permission_)>(
          reinterpret_cast<char*>(&_impl_.instantiate_permission_),
          reinterpret_cast<char*>(&other->_impl_.instantiate_permission_));
}

::google::protobuf::Metadata StoreAndInstantiateContractProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmwasm_2fwasm_2fv1_2fproposal_5flegacy_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
