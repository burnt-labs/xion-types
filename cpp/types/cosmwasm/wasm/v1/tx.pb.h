// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmwasm/wasm/v1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmwasm_2fwasm_2fv1_2ftx_2eproto_2epb_2eh
#define cosmwasm_2fwasm_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "gogoproto/gogo.pb.h"
#include "cosmwasm/wasm/v1/types.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmwasm_2fwasm_2fv1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
namespace cosmwasm {
namespace wasm {
namespace v1 {
class MsgAddCodeUploadParamsAddresses;
struct MsgAddCodeUploadParamsAddressesDefaultTypeInternal;
extern MsgAddCodeUploadParamsAddressesDefaultTypeInternal _MsgAddCodeUploadParamsAddresses_default_instance_;
class MsgAddCodeUploadParamsAddressesResponse;
struct MsgAddCodeUploadParamsAddressesResponseDefaultTypeInternal;
extern MsgAddCodeUploadParamsAddressesResponseDefaultTypeInternal _MsgAddCodeUploadParamsAddressesResponse_default_instance_;
class MsgClearAdmin;
struct MsgClearAdminDefaultTypeInternal;
extern MsgClearAdminDefaultTypeInternal _MsgClearAdmin_default_instance_;
class MsgClearAdminResponse;
struct MsgClearAdminResponseDefaultTypeInternal;
extern MsgClearAdminResponseDefaultTypeInternal _MsgClearAdminResponse_default_instance_;
class MsgExecuteContract;
struct MsgExecuteContractDefaultTypeInternal;
extern MsgExecuteContractDefaultTypeInternal _MsgExecuteContract_default_instance_;
class MsgExecuteContractResponse;
struct MsgExecuteContractResponseDefaultTypeInternal;
extern MsgExecuteContractResponseDefaultTypeInternal _MsgExecuteContractResponse_default_instance_;
class MsgInstantiateContract;
struct MsgInstantiateContractDefaultTypeInternal;
extern MsgInstantiateContractDefaultTypeInternal _MsgInstantiateContract_default_instance_;
class MsgInstantiateContract2;
struct MsgInstantiateContract2DefaultTypeInternal;
extern MsgInstantiateContract2DefaultTypeInternal _MsgInstantiateContract2_default_instance_;
class MsgInstantiateContract2Response;
struct MsgInstantiateContract2ResponseDefaultTypeInternal;
extern MsgInstantiateContract2ResponseDefaultTypeInternal _MsgInstantiateContract2Response_default_instance_;
class MsgInstantiateContractResponse;
struct MsgInstantiateContractResponseDefaultTypeInternal;
extern MsgInstantiateContractResponseDefaultTypeInternal _MsgInstantiateContractResponse_default_instance_;
class MsgMigrateContract;
struct MsgMigrateContractDefaultTypeInternal;
extern MsgMigrateContractDefaultTypeInternal _MsgMigrateContract_default_instance_;
class MsgMigrateContractResponse;
struct MsgMigrateContractResponseDefaultTypeInternal;
extern MsgMigrateContractResponseDefaultTypeInternal _MsgMigrateContractResponse_default_instance_;
class MsgPinCodes;
struct MsgPinCodesDefaultTypeInternal;
extern MsgPinCodesDefaultTypeInternal _MsgPinCodes_default_instance_;
class MsgPinCodesResponse;
struct MsgPinCodesResponseDefaultTypeInternal;
extern MsgPinCodesResponseDefaultTypeInternal _MsgPinCodesResponse_default_instance_;
class MsgRemoveCodeUploadParamsAddresses;
struct MsgRemoveCodeUploadParamsAddressesDefaultTypeInternal;
extern MsgRemoveCodeUploadParamsAddressesDefaultTypeInternal _MsgRemoveCodeUploadParamsAddresses_default_instance_;
class MsgRemoveCodeUploadParamsAddressesResponse;
struct MsgRemoveCodeUploadParamsAddressesResponseDefaultTypeInternal;
extern MsgRemoveCodeUploadParamsAddressesResponseDefaultTypeInternal _MsgRemoveCodeUploadParamsAddressesResponse_default_instance_;
class MsgStoreAndInstantiateContract;
struct MsgStoreAndInstantiateContractDefaultTypeInternal;
extern MsgStoreAndInstantiateContractDefaultTypeInternal _MsgStoreAndInstantiateContract_default_instance_;
class MsgStoreAndInstantiateContractResponse;
struct MsgStoreAndInstantiateContractResponseDefaultTypeInternal;
extern MsgStoreAndInstantiateContractResponseDefaultTypeInternal _MsgStoreAndInstantiateContractResponse_default_instance_;
class MsgStoreAndMigrateContract;
struct MsgStoreAndMigrateContractDefaultTypeInternal;
extern MsgStoreAndMigrateContractDefaultTypeInternal _MsgStoreAndMigrateContract_default_instance_;
class MsgStoreAndMigrateContractResponse;
struct MsgStoreAndMigrateContractResponseDefaultTypeInternal;
extern MsgStoreAndMigrateContractResponseDefaultTypeInternal _MsgStoreAndMigrateContractResponse_default_instance_;
class MsgStoreCode;
struct MsgStoreCodeDefaultTypeInternal;
extern MsgStoreCodeDefaultTypeInternal _MsgStoreCode_default_instance_;
class MsgStoreCodeResponse;
struct MsgStoreCodeResponseDefaultTypeInternal;
extern MsgStoreCodeResponseDefaultTypeInternal _MsgStoreCodeResponse_default_instance_;
class MsgSudoContract;
struct MsgSudoContractDefaultTypeInternal;
extern MsgSudoContractDefaultTypeInternal _MsgSudoContract_default_instance_;
class MsgSudoContractResponse;
struct MsgSudoContractResponseDefaultTypeInternal;
extern MsgSudoContractResponseDefaultTypeInternal _MsgSudoContractResponse_default_instance_;
class MsgUnpinCodes;
struct MsgUnpinCodesDefaultTypeInternal;
extern MsgUnpinCodesDefaultTypeInternal _MsgUnpinCodes_default_instance_;
class MsgUnpinCodesResponse;
struct MsgUnpinCodesResponseDefaultTypeInternal;
extern MsgUnpinCodesResponseDefaultTypeInternal _MsgUnpinCodesResponse_default_instance_;
class MsgUpdateAdmin;
struct MsgUpdateAdminDefaultTypeInternal;
extern MsgUpdateAdminDefaultTypeInternal _MsgUpdateAdmin_default_instance_;
class MsgUpdateAdminResponse;
struct MsgUpdateAdminResponseDefaultTypeInternal;
extern MsgUpdateAdminResponseDefaultTypeInternal _MsgUpdateAdminResponse_default_instance_;
class MsgUpdateContractLabel;
struct MsgUpdateContractLabelDefaultTypeInternal;
extern MsgUpdateContractLabelDefaultTypeInternal _MsgUpdateContractLabel_default_instance_;
class MsgUpdateContractLabelResponse;
struct MsgUpdateContractLabelResponseDefaultTypeInternal;
extern MsgUpdateContractLabelResponseDefaultTypeInternal _MsgUpdateContractLabelResponse_default_instance_;
class MsgUpdateInstantiateConfig;
struct MsgUpdateInstantiateConfigDefaultTypeInternal;
extern MsgUpdateInstantiateConfigDefaultTypeInternal _MsgUpdateInstantiateConfig_default_instance_;
class MsgUpdateInstantiateConfigResponse;
struct MsgUpdateInstantiateConfigResponseDefaultTypeInternal;
extern MsgUpdateInstantiateConfigResponseDefaultTypeInternal _MsgUpdateInstantiateConfigResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmwasm {
namespace wasm {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateInstantiateConfigResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse) */ {
 public:
  inline MsgUpdateInstantiateConfigResponse() : MsgUpdateInstantiateConfigResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateInstantiateConfigResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateInstantiateConfigResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateInstantiateConfigResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateInstantiateConfigResponse(const MsgUpdateInstantiateConfigResponse& from) : MsgUpdateInstantiateConfigResponse(nullptr, from) {}
  inline MsgUpdateInstantiateConfigResponse(MsgUpdateInstantiateConfigResponse&& from) noexcept
      : MsgUpdateInstantiateConfigResponse(nullptr, std::move(from)) {}
  inline MsgUpdateInstantiateConfigResponse& operator=(const MsgUpdateInstantiateConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateInstantiateConfigResponse& operator=(MsgUpdateInstantiateConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateInstantiateConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateInstantiateConfigResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateInstantiateConfigResponse*>(
        &_MsgUpdateInstantiateConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(MsgUpdateInstantiateConfigResponse& a, MsgUpdateInstantiateConfigResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateInstantiateConfigResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateInstantiateConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateInstantiateConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateInstantiateConfigResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateInstantiateConfigResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateInstantiateConfigResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse"; }

 protected:
  explicit MsgUpdateInstantiateConfigResponse(::google::protobuf::Arena* arena);
  MsgUpdateInstantiateConfigResponse(::google::protobuf::Arena* arena, const MsgUpdateInstantiateConfigResponse& from);
  MsgUpdateInstantiateConfigResponse(::google::protobuf::Arena* arena, MsgUpdateInstantiateConfigResponse&& from) noexcept
      : MsgUpdateInstantiateConfigResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateInstantiateConfigResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateContractLabelResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateContractLabelResponse) */ {
 public:
  inline MsgUpdateContractLabelResponse() : MsgUpdateContractLabelResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateContractLabelResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateContractLabelResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateContractLabelResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateContractLabelResponse(const MsgUpdateContractLabelResponse& from) : MsgUpdateContractLabelResponse(nullptr, from) {}
  inline MsgUpdateContractLabelResponse(MsgUpdateContractLabelResponse&& from) noexcept
      : MsgUpdateContractLabelResponse(nullptr, std::move(from)) {}
  inline MsgUpdateContractLabelResponse& operator=(const MsgUpdateContractLabelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateContractLabelResponse& operator=(MsgUpdateContractLabelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateContractLabelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateContractLabelResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateContractLabelResponse*>(
        &_MsgUpdateContractLabelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(MsgUpdateContractLabelResponse& a, MsgUpdateContractLabelResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateContractLabelResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateContractLabelResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateContractLabelResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateContractLabelResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateContractLabelResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateContractLabelResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateContractLabelResponse"; }

 protected:
  explicit MsgUpdateContractLabelResponse(::google::protobuf::Arena* arena);
  MsgUpdateContractLabelResponse(::google::protobuf::Arena* arena, const MsgUpdateContractLabelResponse& from);
  MsgUpdateContractLabelResponse(::google::protobuf::Arena* arena, MsgUpdateContractLabelResponse&& from) noexcept
      : MsgUpdateContractLabelResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateContractLabelResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateContractLabelResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateContractLabel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateContractLabel) */ {
 public:
  inline MsgUpdateContractLabel() : MsgUpdateContractLabel(nullptr) {}
  ~MsgUpdateContractLabel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateContractLabel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateContractLabel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateContractLabel(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateContractLabel(const MsgUpdateContractLabel& from) : MsgUpdateContractLabel(nullptr, from) {}
  inline MsgUpdateContractLabel(MsgUpdateContractLabel&& from) noexcept
      : MsgUpdateContractLabel(nullptr, std::move(from)) {}
  inline MsgUpdateContractLabel& operator=(const MsgUpdateContractLabel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateContractLabel& operator=(MsgUpdateContractLabel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateContractLabel& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateContractLabel* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateContractLabel*>(
        &_MsgUpdateContractLabel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(MsgUpdateContractLabel& a, MsgUpdateContractLabel& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateContractLabel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateContractLabel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateContractLabel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateContractLabel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateContractLabel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateContractLabel& from) { MsgUpdateContractLabel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateContractLabel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateContractLabel"; }

 protected:
  explicit MsgUpdateContractLabel(::google::protobuf::Arena* arena);
  MsgUpdateContractLabel(::google::protobuf::Arena* arena, const MsgUpdateContractLabel& from);
  MsgUpdateContractLabel(::google::protobuf::Arena* arena, MsgUpdateContractLabel&& from) noexcept
      : MsgUpdateContractLabel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kNewLabelFieldNumber = 2,
    kContractFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string new_label = 2 [json_name = "newLabel"];
  void clear_new_label() ;
  const std::string& new_label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_label(Arg_&& arg, Args_... args);
  std::string* mutable_new_label();
  PROTOBUF_NODISCARD std::string* release_new_label();
  void set_allocated_new_label(std::string* value);

  private:
  const std::string& _internal_new_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_label(
      const std::string& value);
  std::string* _internal_mutable_new_label();

  public:
  // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_contract() ;
  const std::string& contract() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* value);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateContractLabel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateContractLabel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr new_label_;
    ::google::protobuf::internal::ArenaStringPtr contract_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateAdminResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateAdminResponse) */ {
 public:
  inline MsgUpdateAdminResponse() : MsgUpdateAdminResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateAdminResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateAdminResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateAdminResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateAdminResponse(const MsgUpdateAdminResponse& from) : MsgUpdateAdminResponse(nullptr, from) {}
  inline MsgUpdateAdminResponse(MsgUpdateAdminResponse&& from) noexcept
      : MsgUpdateAdminResponse(nullptr, std::move(from)) {}
  inline MsgUpdateAdminResponse& operator=(const MsgUpdateAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateAdminResponse& operator=(MsgUpdateAdminResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateAdminResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateAdminResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateAdminResponse*>(
        &_MsgUpdateAdminResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MsgUpdateAdminResponse& a, MsgUpdateAdminResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateAdminResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateAdminResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateAdminResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateAdminResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateAdminResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateAdminResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateAdminResponse"; }

 protected:
  explicit MsgUpdateAdminResponse(::google::protobuf::Arena* arena);
  MsgUpdateAdminResponse(::google::protobuf::Arena* arena, const MsgUpdateAdminResponse& from);
  MsgUpdateAdminResponse(::google::protobuf::Arena* arena, MsgUpdateAdminResponse&& from) noexcept
      : MsgUpdateAdminResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateAdminResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateAdminResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateAdmin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateAdmin) */ {
 public:
  inline MsgUpdateAdmin() : MsgUpdateAdmin(nullptr) {}
  ~MsgUpdateAdmin() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateAdmin* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateAdmin));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateAdmin(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateAdmin(const MsgUpdateAdmin& from) : MsgUpdateAdmin(nullptr, from) {}
  inline MsgUpdateAdmin(MsgUpdateAdmin&& from) noexcept
      : MsgUpdateAdmin(nullptr, std::move(from)) {}
  inline MsgUpdateAdmin& operator=(const MsgUpdateAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateAdmin& operator=(MsgUpdateAdmin&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateAdmin& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateAdmin* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateAdmin*>(
        &_MsgUpdateAdmin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MsgUpdateAdmin& a, MsgUpdateAdmin& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateAdmin* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateAdmin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateAdmin* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateAdmin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateAdmin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateAdmin& from) { MsgUpdateAdmin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateAdmin* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateAdmin"; }

 protected:
  explicit MsgUpdateAdmin(::google::protobuf::Arena* arena);
  MsgUpdateAdmin(::google::protobuf::Arena* arena, const MsgUpdateAdmin& from);
  MsgUpdateAdmin(::google::protobuf::Arena* arena, MsgUpdateAdmin&& from) noexcept
      : MsgUpdateAdmin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kNewAdminFieldNumber = 2,
    kContractFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string new_admin = 2 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_new_admin() ;
  const std::string& new_admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_admin(Arg_&& arg, Args_... args);
  std::string* mutable_new_admin();
  PROTOBUF_NODISCARD std::string* release_new_admin();
  void set_allocated_new_admin(std::string* value);

  private:
  const std::string& _internal_new_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_admin(
      const std::string& value);
  std::string* _internal_mutable_new_admin();

  public:
  // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_contract() ;
  const std::string& contract() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* value);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateAdmin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateAdmin& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr new_admin_;
    ::google::protobuf::internal::ArenaStringPtr contract_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUnpinCodesResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUnpinCodesResponse) */ {
 public:
  inline MsgUnpinCodesResponse() : MsgUnpinCodesResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUnpinCodesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUnpinCodesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUnpinCodesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUnpinCodesResponse(const MsgUnpinCodesResponse& from) : MsgUnpinCodesResponse(nullptr, from) {}
  inline MsgUnpinCodesResponse(MsgUnpinCodesResponse&& from) noexcept
      : MsgUnpinCodesResponse(nullptr, std::move(from)) {}
  inline MsgUnpinCodesResponse& operator=(const MsgUnpinCodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUnpinCodesResponse& operator=(MsgUnpinCodesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUnpinCodesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUnpinCodesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUnpinCodesResponse*>(
        &_MsgUnpinCodesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(MsgUnpinCodesResponse& a, MsgUnpinCodesResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUnpinCodesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUnpinCodesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUnpinCodesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUnpinCodesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUnpinCodesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUnpinCodesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUnpinCodesResponse"; }

 protected:
  explicit MsgUnpinCodesResponse(::google::protobuf::Arena* arena);
  MsgUnpinCodesResponse(::google::protobuf::Arena* arena, const MsgUnpinCodesResponse& from);
  MsgUnpinCodesResponse(::google::protobuf::Arena* arena, MsgUnpinCodesResponse&& from) noexcept
      : MsgUnpinCodesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUnpinCodesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUnpinCodesResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUnpinCodes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUnpinCodes) */ {
 public:
  inline MsgUnpinCodes() : MsgUnpinCodes(nullptr) {}
  ~MsgUnpinCodes() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUnpinCodes* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUnpinCodes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUnpinCodes(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUnpinCodes(const MsgUnpinCodes& from) : MsgUnpinCodes(nullptr, from) {}
  inline MsgUnpinCodes(MsgUnpinCodes&& from) noexcept
      : MsgUnpinCodes(nullptr, std::move(from)) {}
  inline MsgUnpinCodes& operator=(const MsgUnpinCodes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUnpinCodes& operator=(MsgUnpinCodes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUnpinCodes& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUnpinCodes* internal_default_instance() {
    return reinterpret_cast<const MsgUnpinCodes*>(
        &_MsgUnpinCodes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(MsgUnpinCodes& a, MsgUnpinCodes& b) { a.Swap(&b); }
  inline void Swap(MsgUnpinCodes* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUnpinCodes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUnpinCodes* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUnpinCodes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUnpinCodes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUnpinCodes& from) { MsgUnpinCodes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUnpinCodes* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUnpinCodes"; }

 protected:
  explicit MsgUnpinCodes(::google::protobuf::Arena* arena);
  MsgUnpinCodes(::google::protobuf::Arena* arena, const MsgUnpinCodes& from);
  MsgUnpinCodes(::google::protobuf::Arena* arena, MsgUnpinCodes&& from) noexcept
      : MsgUnpinCodes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeIdsFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
  int code_ids_size() const;
  private:
  int _internal_code_ids_size() const;

  public:
  void clear_code_ids() ;
  ::uint64_t code_ids(int index) const;
  void set_code_ids(int index, ::uint64_t value);
  void add_code_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& code_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_code_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_code_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_code_ids();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUnpinCodes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUnpinCodes& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> code_ids_;
    ::google::protobuf::internal::CachedSize _code_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSudoContractResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgSudoContractResponse) */ {
 public:
  inline MsgSudoContractResponse() : MsgSudoContractResponse(nullptr) {}
  ~MsgSudoContractResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSudoContractResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSudoContractResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSudoContractResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSudoContractResponse(const MsgSudoContractResponse& from) : MsgSudoContractResponse(nullptr, from) {}
  inline MsgSudoContractResponse(MsgSudoContractResponse&& from) noexcept
      : MsgSudoContractResponse(nullptr, std::move(from)) {}
  inline MsgSudoContractResponse& operator=(const MsgSudoContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSudoContractResponse& operator=(MsgSudoContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSudoContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSudoContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSudoContractResponse*>(
        &_MsgSudoContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(MsgSudoContractResponse& a, MsgSudoContractResponse& b) { a.Swap(&b); }
  inline void Swap(MsgSudoContractResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSudoContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSudoContractResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSudoContractResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSudoContractResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSudoContractResponse& from) { MsgSudoContractResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSudoContractResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgSudoContractResponse"; }

 protected:
  explicit MsgSudoContractResponse(::google::protobuf::Arena* arena);
  MsgSudoContractResponse(::google::protobuf::Arena* arena, const MsgSudoContractResponse& from);
  MsgSudoContractResponse(::google::protobuf::Arena* arena, MsgSudoContractResponse&& from) noexcept
      : MsgSudoContractResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgSudoContractResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSudoContractResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSudoContract final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgSudoContract) */ {
 public:
  inline MsgSudoContract() : MsgSudoContract(nullptr) {}
  ~MsgSudoContract() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSudoContract* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSudoContract));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSudoContract(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSudoContract(const MsgSudoContract& from) : MsgSudoContract(nullptr, from) {}
  inline MsgSudoContract(MsgSudoContract&& from) noexcept
      : MsgSudoContract(nullptr, std::move(from)) {}
  inline MsgSudoContract& operator=(const MsgSudoContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSudoContract& operator=(MsgSudoContract&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSudoContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSudoContract* internal_default_instance() {
    return reinterpret_cast<const MsgSudoContract*>(
        &_MsgSudoContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(MsgSudoContract& a, MsgSudoContract& b) { a.Swap(&b); }
  inline void Swap(MsgSudoContract* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSudoContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSudoContract* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSudoContract>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSudoContract& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSudoContract& from) { MsgSudoContract::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSudoContract* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgSudoContract"; }

 protected:
  explicit MsgSudoContract(::google::protobuf::Arena* arena);
  MsgSudoContract(::google::protobuf::Arena* arena, const MsgSudoContract& from);
  MsgSudoContract(::google::protobuf::Arena* arena, MsgSudoContract&& from) noexcept
      : MsgSudoContract(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kContractFieldNumber = 2,
    kMsgFieldNumber = 3,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_contract() ;
  const std::string& contract() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* value);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgSudoContract)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSudoContract& from_msg);
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::ArenaStringPtr contract_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgStoreCodeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreCodeResponse) */ {
 public:
  inline MsgStoreCodeResponse() : MsgStoreCodeResponse(nullptr) {}
  ~MsgStoreCodeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgStoreCodeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgStoreCodeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreCodeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgStoreCodeResponse(const MsgStoreCodeResponse& from) : MsgStoreCodeResponse(nullptr, from) {}
  inline MsgStoreCodeResponse(MsgStoreCodeResponse&& from) noexcept
      : MsgStoreCodeResponse(nullptr, std::move(from)) {}
  inline MsgStoreCodeResponse& operator=(const MsgStoreCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreCodeResponse& operator=(MsgStoreCodeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreCodeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreCodeResponse* internal_default_instance() {
    return reinterpret_cast<const MsgStoreCodeResponse*>(
        &_MsgStoreCodeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgStoreCodeResponse& a, MsgStoreCodeResponse& b) { a.Swap(&b); }
  inline void Swap(MsgStoreCodeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreCodeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreCodeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgStoreCodeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgStoreCodeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgStoreCodeResponse& from) { MsgStoreCodeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgStoreCodeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgStoreCodeResponse"; }

 protected:
  explicit MsgStoreCodeResponse(::google::protobuf::Arena* arena);
  MsgStoreCodeResponse(::google::protobuf::Arena* arena, const MsgStoreCodeResponse& from);
  MsgStoreCodeResponse(::google::protobuf::Arena* arena, MsgStoreCodeResponse&& from) noexcept
      : MsgStoreCodeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChecksumFieldNumber = 2,
    kCodeIdFieldNumber = 1,
  };
  // bytes checksum = 2 [json_name = "checksum"];
  void clear_checksum() ;
  const std::string& checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_checksum();
  PROTOBUF_NODISCARD std::string* release_checksum();
  void set_allocated_checksum(std::string* value);

  private:
  const std::string& _internal_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_checksum(
      const std::string& value);
  std::string* _internal_mutable_checksum();

  public:
  // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreCodeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgStoreCodeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr checksum_;
    ::uint64_t code_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgStoreAndMigrateContractResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse) */ {
 public:
  inline MsgStoreAndMigrateContractResponse() : MsgStoreAndMigrateContractResponse(nullptr) {}
  ~MsgStoreAndMigrateContractResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgStoreAndMigrateContractResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgStoreAndMigrateContractResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreAndMigrateContractResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgStoreAndMigrateContractResponse(const MsgStoreAndMigrateContractResponse& from) : MsgStoreAndMigrateContractResponse(nullptr, from) {}
  inline MsgStoreAndMigrateContractResponse(MsgStoreAndMigrateContractResponse&& from) noexcept
      : MsgStoreAndMigrateContractResponse(nullptr, std::move(from)) {}
  inline MsgStoreAndMigrateContractResponse& operator=(const MsgStoreAndMigrateContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreAndMigrateContractResponse& operator=(MsgStoreAndMigrateContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreAndMigrateContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreAndMigrateContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgStoreAndMigrateContractResponse*>(
        &_MsgStoreAndMigrateContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(MsgStoreAndMigrateContractResponse& a, MsgStoreAndMigrateContractResponse& b) { a.Swap(&b); }
  inline void Swap(MsgStoreAndMigrateContractResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreAndMigrateContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreAndMigrateContractResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgStoreAndMigrateContractResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgStoreAndMigrateContractResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgStoreAndMigrateContractResponse& from) { MsgStoreAndMigrateContractResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgStoreAndMigrateContractResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse"; }

 protected:
  explicit MsgStoreAndMigrateContractResponse(::google::protobuf::Arena* arena);
  MsgStoreAndMigrateContractResponse(::google::protobuf::Arena* arena, const MsgStoreAndMigrateContractResponse& from);
  MsgStoreAndMigrateContractResponse(::google::protobuf::Arena* arena, MsgStoreAndMigrateContractResponse&& from) noexcept
      : MsgStoreAndMigrateContractResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChecksumFieldNumber = 2,
    kDataFieldNumber = 3,
    kCodeIdFieldNumber = 1,
  };
  // bytes checksum = 2 [json_name = "checksum"];
  void clear_checksum() ;
  const std::string& checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_checksum();
  PROTOBUF_NODISCARD std::string* release_checksum();
  void set_allocated_checksum(std::string* value);

  private:
  const std::string& _internal_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_checksum(
      const std::string& value);
  std::string* _internal_mutable_checksum();

  public:
  // bytes data = 3 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgStoreAndMigrateContractResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr checksum_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t code_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgStoreAndInstantiateContractResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse) */ {
 public:
  inline MsgStoreAndInstantiateContractResponse() : MsgStoreAndInstantiateContractResponse(nullptr) {}
  ~MsgStoreAndInstantiateContractResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgStoreAndInstantiateContractResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgStoreAndInstantiateContractResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreAndInstantiateContractResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgStoreAndInstantiateContractResponse(const MsgStoreAndInstantiateContractResponse& from) : MsgStoreAndInstantiateContractResponse(nullptr, from) {}
  inline MsgStoreAndInstantiateContractResponse(MsgStoreAndInstantiateContractResponse&& from) noexcept
      : MsgStoreAndInstantiateContractResponse(nullptr, std::move(from)) {}
  inline MsgStoreAndInstantiateContractResponse& operator=(const MsgStoreAndInstantiateContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreAndInstantiateContractResponse& operator=(MsgStoreAndInstantiateContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreAndInstantiateContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreAndInstantiateContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgStoreAndInstantiateContractResponse*>(
        &_MsgStoreAndInstantiateContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(MsgStoreAndInstantiateContractResponse& a, MsgStoreAndInstantiateContractResponse& b) { a.Swap(&b); }
  inline void Swap(MsgStoreAndInstantiateContractResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreAndInstantiateContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreAndInstantiateContractResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgStoreAndInstantiateContractResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgStoreAndInstantiateContractResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgStoreAndInstantiateContractResponse& from) { MsgStoreAndInstantiateContractResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgStoreAndInstantiateContractResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse"; }

 protected:
  explicit MsgStoreAndInstantiateContractResponse(::google::protobuf::Arena* arena);
  MsgStoreAndInstantiateContractResponse(::google::protobuf::Arena* arena, const MsgStoreAndInstantiateContractResponse& from);
  MsgStoreAndInstantiateContractResponse(::google::protobuf::Arena* arena, MsgStoreAndInstantiateContractResponse&& from) noexcept
      : MsgStoreAndInstantiateContractResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgStoreAndInstantiateContractResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRemoveCodeUploadParamsAddressesResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse) */ {
 public:
  inline MsgRemoveCodeUploadParamsAddressesResponse() : MsgRemoveCodeUploadParamsAddressesResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRemoveCodeUploadParamsAddressesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRemoveCodeUploadParamsAddressesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRemoveCodeUploadParamsAddressesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRemoveCodeUploadParamsAddressesResponse(const MsgRemoveCodeUploadParamsAddressesResponse& from) : MsgRemoveCodeUploadParamsAddressesResponse(nullptr, from) {}
  inline MsgRemoveCodeUploadParamsAddressesResponse(MsgRemoveCodeUploadParamsAddressesResponse&& from) noexcept
      : MsgRemoveCodeUploadParamsAddressesResponse(nullptr, std::move(from)) {}
  inline MsgRemoveCodeUploadParamsAddressesResponse& operator=(const MsgRemoveCodeUploadParamsAddressesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRemoveCodeUploadParamsAddressesResponse& operator=(MsgRemoveCodeUploadParamsAddressesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRemoveCodeUploadParamsAddressesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRemoveCodeUploadParamsAddressesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveCodeUploadParamsAddressesResponse*>(
        &_MsgRemoveCodeUploadParamsAddressesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(MsgRemoveCodeUploadParamsAddressesResponse& a, MsgRemoveCodeUploadParamsAddressesResponse& b) { a.Swap(&b); }
  inline void Swap(MsgRemoveCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRemoveCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRemoveCodeUploadParamsAddressesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgRemoveCodeUploadParamsAddressesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgRemoveCodeUploadParamsAddressesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgRemoveCodeUploadParamsAddressesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse"; }

 protected:
  explicit MsgRemoveCodeUploadParamsAddressesResponse(::google::protobuf::Arena* arena);
  MsgRemoveCodeUploadParamsAddressesResponse(::google::protobuf::Arena* arena, const MsgRemoveCodeUploadParamsAddressesResponse& from);
  MsgRemoveCodeUploadParamsAddressesResponse(::google::protobuf::Arena* arena, MsgRemoveCodeUploadParamsAddressesResponse&& from) noexcept
      : MsgRemoveCodeUploadParamsAddressesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddressesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRemoveCodeUploadParamsAddressesResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRemoveCodeUploadParamsAddresses final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses) */ {
 public:
  inline MsgRemoveCodeUploadParamsAddresses() : MsgRemoveCodeUploadParamsAddresses(nullptr) {}
  ~MsgRemoveCodeUploadParamsAddresses() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRemoveCodeUploadParamsAddresses* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRemoveCodeUploadParamsAddresses));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRemoveCodeUploadParamsAddresses(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRemoveCodeUploadParamsAddresses(const MsgRemoveCodeUploadParamsAddresses& from) : MsgRemoveCodeUploadParamsAddresses(nullptr, from) {}
  inline MsgRemoveCodeUploadParamsAddresses(MsgRemoveCodeUploadParamsAddresses&& from) noexcept
      : MsgRemoveCodeUploadParamsAddresses(nullptr, std::move(from)) {}
  inline MsgRemoveCodeUploadParamsAddresses& operator=(const MsgRemoveCodeUploadParamsAddresses& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRemoveCodeUploadParamsAddresses& operator=(MsgRemoveCodeUploadParamsAddresses&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRemoveCodeUploadParamsAddresses& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRemoveCodeUploadParamsAddresses* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveCodeUploadParamsAddresses*>(
        &_MsgRemoveCodeUploadParamsAddresses_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(MsgRemoveCodeUploadParamsAddresses& a, MsgRemoveCodeUploadParamsAddresses& b) { a.Swap(&b); }
  inline void Swap(MsgRemoveCodeUploadParamsAddresses* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRemoveCodeUploadParamsAddresses* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRemoveCodeUploadParamsAddresses* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgRemoveCodeUploadParamsAddresses>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgRemoveCodeUploadParamsAddresses& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgRemoveCodeUploadParamsAddresses& from) { MsgRemoveCodeUploadParamsAddresses::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgRemoveCodeUploadParamsAddresses* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses"; }

 protected:
  explicit MsgRemoveCodeUploadParamsAddresses(::google::protobuf::Arena* arena);
  MsgRemoveCodeUploadParamsAddresses(::google::protobuf::Arena* arena, const MsgRemoveCodeUploadParamsAddresses& from);
  MsgRemoveCodeUploadParamsAddresses(::google::protobuf::Arena* arena, MsgRemoveCodeUploadParamsAddresses&& from) noexcept
      : MsgRemoveCodeUploadParamsAddresses(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  const std::string& addresses(int index) const;
  std::string* mutable_addresses(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addresses(int index, Arg_&& value, Args_... args);
  std::string* add_addresses();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_addresses(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_addresses();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRemoveCodeUploadParamsAddresses& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> addresses_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgPinCodesResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgPinCodesResponse) */ {
 public:
  inline MsgPinCodesResponse() : MsgPinCodesResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgPinCodesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgPinCodesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgPinCodesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgPinCodesResponse(const MsgPinCodesResponse& from) : MsgPinCodesResponse(nullptr, from) {}
  inline MsgPinCodesResponse(MsgPinCodesResponse&& from) noexcept
      : MsgPinCodesResponse(nullptr, std::move(from)) {}
  inline MsgPinCodesResponse& operator=(const MsgPinCodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPinCodesResponse& operator=(MsgPinCodesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgPinCodesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgPinCodesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgPinCodesResponse*>(
        &_MsgPinCodesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(MsgPinCodesResponse& a, MsgPinCodesResponse& b) { a.Swap(&b); }
  inline void Swap(MsgPinCodesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPinCodesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgPinCodesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgPinCodesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgPinCodesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgPinCodesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgPinCodesResponse"; }

 protected:
  explicit MsgPinCodesResponse(::google::protobuf::Arena* arena);
  MsgPinCodesResponse(::google::protobuf::Arena* arena, const MsgPinCodesResponse& from);
  MsgPinCodesResponse(::google::protobuf::Arena* arena, MsgPinCodesResponse&& from) noexcept
      : MsgPinCodesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgPinCodesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgPinCodesResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgPinCodes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgPinCodes) */ {
 public:
  inline MsgPinCodes() : MsgPinCodes(nullptr) {}
  ~MsgPinCodes() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgPinCodes* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgPinCodes));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgPinCodes(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgPinCodes(const MsgPinCodes& from) : MsgPinCodes(nullptr, from) {}
  inline MsgPinCodes(MsgPinCodes&& from) noexcept
      : MsgPinCodes(nullptr, std::move(from)) {}
  inline MsgPinCodes& operator=(const MsgPinCodes& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPinCodes& operator=(MsgPinCodes&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgPinCodes& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgPinCodes* internal_default_instance() {
    return reinterpret_cast<const MsgPinCodes*>(
        &_MsgPinCodes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(MsgPinCodes& a, MsgPinCodes& b) { a.Swap(&b); }
  inline void Swap(MsgPinCodes* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPinCodes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgPinCodes* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgPinCodes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgPinCodes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgPinCodes& from) { MsgPinCodes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgPinCodes* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgPinCodes"; }

 protected:
  explicit MsgPinCodes(::google::protobuf::Arena* arena);
  MsgPinCodes(::google::protobuf::Arena* arena, const MsgPinCodes& from);
  MsgPinCodes(::google::protobuf::Arena* arena, MsgPinCodes&& from) noexcept
      : MsgPinCodes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeIdsFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
  int code_ids_size() const;
  private:
  int _internal_code_ids_size() const;

  public:
  void clear_code_ids() ;
  ::uint64_t code_ids(int index) const;
  void set_code_ids(int index, ::uint64_t value);
  void add_code_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& code_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_code_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_code_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_code_ids();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgPinCodes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgPinCodes& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> code_ids_;
    ::google::protobuf::internal::CachedSize _code_ids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgMigrateContractResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgMigrateContractResponse) */ {
 public:
  inline MsgMigrateContractResponse() : MsgMigrateContractResponse(nullptr) {}
  ~MsgMigrateContractResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgMigrateContractResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgMigrateContractResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMigrateContractResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgMigrateContractResponse(const MsgMigrateContractResponse& from) : MsgMigrateContractResponse(nullptr, from) {}
  inline MsgMigrateContractResponse(MsgMigrateContractResponse&& from) noexcept
      : MsgMigrateContractResponse(nullptr, std::move(from)) {}
  inline MsgMigrateContractResponse& operator=(const MsgMigrateContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMigrateContractResponse& operator=(MsgMigrateContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMigrateContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMigrateContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgMigrateContractResponse*>(
        &_MsgMigrateContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MsgMigrateContractResponse& a, MsgMigrateContractResponse& b) { a.Swap(&b); }
  inline void Swap(MsgMigrateContractResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMigrateContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMigrateContractResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgMigrateContractResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgMigrateContractResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgMigrateContractResponse& from) { MsgMigrateContractResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgMigrateContractResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgMigrateContractResponse"; }

 protected:
  explicit MsgMigrateContractResponse(::google::protobuf::Arena* arena);
  MsgMigrateContractResponse(::google::protobuf::Arena* arena, const MsgMigrateContractResponse& from);
  MsgMigrateContractResponse(::google::protobuf::Arena* arena, MsgMigrateContractResponse&& from) noexcept
      : MsgMigrateContractResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgMigrateContractResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgMigrateContractResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgMigrateContract final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgMigrateContract) */ {
 public:
  inline MsgMigrateContract() : MsgMigrateContract(nullptr) {}
  ~MsgMigrateContract() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgMigrateContract* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgMigrateContract));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMigrateContract(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgMigrateContract(const MsgMigrateContract& from) : MsgMigrateContract(nullptr, from) {}
  inline MsgMigrateContract(MsgMigrateContract&& from) noexcept
      : MsgMigrateContract(nullptr, std::move(from)) {}
  inline MsgMigrateContract& operator=(const MsgMigrateContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMigrateContract& operator=(MsgMigrateContract&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMigrateContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMigrateContract* internal_default_instance() {
    return reinterpret_cast<const MsgMigrateContract*>(
        &_MsgMigrateContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MsgMigrateContract& a, MsgMigrateContract& b) { a.Swap(&b); }
  inline void Swap(MsgMigrateContract* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMigrateContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMigrateContract* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgMigrateContract>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgMigrateContract& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgMigrateContract& from) { MsgMigrateContract::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgMigrateContract* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgMigrateContract"; }

 protected:
  explicit MsgMigrateContract(::google::protobuf::Arena* arena);
  MsgMigrateContract(::google::protobuf::Arena* arena, const MsgMigrateContract& from);
  MsgMigrateContract(::google::protobuf::Arena* arena, MsgMigrateContract&& from) noexcept
      : MsgMigrateContract(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kContractFieldNumber = 2,
    kMsgFieldNumber = 4,
    kCodeIdFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_contract() ;
  const std::string& contract() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* value);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgMigrateContract)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgMigrateContract& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr contract_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::uint64_t code_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgInstantiateContractResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContractResponse) */ {
 public:
  inline MsgInstantiateContractResponse() : MsgInstantiateContractResponse(nullptr) {}
  ~MsgInstantiateContractResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgInstantiateContractResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgInstantiateContractResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContractResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgInstantiateContractResponse(const MsgInstantiateContractResponse& from) : MsgInstantiateContractResponse(nullptr, from) {}
  inline MsgInstantiateContractResponse(MsgInstantiateContractResponse&& from) noexcept
      : MsgInstantiateContractResponse(nullptr, std::move(from)) {}
  inline MsgInstantiateContractResponse& operator=(const MsgInstantiateContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContractResponse& operator=(MsgInstantiateContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContractResponse*>(
        &_MsgInstantiateContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgInstantiateContractResponse& a, MsgInstantiateContractResponse& b) { a.Swap(&b); }
  inline void Swap(MsgInstantiateContractResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContractResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgInstantiateContractResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContractResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgInstantiateContractResponse& from) { MsgInstantiateContractResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgInstantiateContractResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgInstantiateContractResponse"; }

 protected:
  explicit MsgInstantiateContractResponse(::google::protobuf::Arena* arena);
  MsgInstantiateContractResponse(::google::protobuf::Arena* arena, const MsgInstantiateContractResponse& from);
  MsgInstantiateContractResponse(::google::protobuf::Arena* arena, MsgInstantiateContractResponse&& from) noexcept
      : MsgInstantiateContractResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContractResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgInstantiateContractResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgInstantiateContract2Response final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContract2Response) */ {
 public:
  inline MsgInstantiateContract2Response() : MsgInstantiateContract2Response(nullptr) {}
  ~MsgInstantiateContract2Response() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgInstantiateContract2Response* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgInstantiateContract2Response));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContract2Response(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgInstantiateContract2Response(const MsgInstantiateContract2Response& from) : MsgInstantiateContract2Response(nullptr, from) {}
  inline MsgInstantiateContract2Response(MsgInstantiateContract2Response&& from) noexcept
      : MsgInstantiateContract2Response(nullptr, std::move(from)) {}
  inline MsgInstantiateContract2Response& operator=(const MsgInstantiateContract2Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContract2Response& operator=(MsgInstantiateContract2Response&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContract2Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContract2Response* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContract2Response*>(
        &_MsgInstantiateContract2Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgInstantiateContract2Response& a, MsgInstantiateContract2Response& b) { a.Swap(&b); }
  inline void Swap(MsgInstantiateContract2Response* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContract2Response* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContract2Response* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgInstantiateContract2Response>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContract2Response& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgInstantiateContract2Response& from) { MsgInstantiateContract2Response::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgInstantiateContract2Response* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgInstantiateContract2Response"; }

 protected:
  explicit MsgInstantiateContract2Response(::google::protobuf::Arena* arena);
  MsgInstantiateContract2Response(::google::protobuf::Arena* arena, const MsgInstantiateContract2Response& from);
  MsgInstantiateContract2Response(::google::protobuf::Arena* arena, MsgInstantiateContract2Response&& from) noexcept
      : MsgInstantiateContract2Response(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kDataFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes data = 2 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContract2Response)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgInstantiateContract2Response& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgExecuteContractResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgExecuteContractResponse) */ {
 public:
  inline MsgExecuteContractResponse() : MsgExecuteContractResponse(nullptr) {}
  ~MsgExecuteContractResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgExecuteContractResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgExecuteContractResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecuteContractResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgExecuteContractResponse(const MsgExecuteContractResponse& from) : MsgExecuteContractResponse(nullptr, from) {}
  inline MsgExecuteContractResponse(MsgExecuteContractResponse&& from) noexcept
      : MsgExecuteContractResponse(nullptr, std::move(from)) {}
  inline MsgExecuteContractResponse& operator=(const MsgExecuteContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecuteContractResponse& operator=(MsgExecuteContractResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecuteContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecuteContractResponse* internal_default_instance() {
    return reinterpret_cast<const MsgExecuteContractResponse*>(
        &_MsgExecuteContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MsgExecuteContractResponse& a, MsgExecuteContractResponse& b) { a.Swap(&b); }
  inline void Swap(MsgExecuteContractResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecuteContractResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecuteContractResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgExecuteContractResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgExecuteContractResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgExecuteContractResponse& from) { MsgExecuteContractResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgExecuteContractResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgExecuteContractResponse"; }

 protected:
  explicit MsgExecuteContractResponse(::google::protobuf::Arena* arena);
  MsgExecuteContractResponse(::google::protobuf::Arena* arena, const MsgExecuteContractResponse& from);
  MsgExecuteContractResponse(::google::protobuf::Arena* arena, MsgExecuteContractResponse&& from) noexcept
      : MsgExecuteContractResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgExecuteContractResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgExecuteContractResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgClearAdminResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgClearAdminResponse) */ {
 public:
  inline MsgClearAdminResponse() : MsgClearAdminResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgClearAdminResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgClearAdminResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgClearAdminResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgClearAdminResponse(const MsgClearAdminResponse& from) : MsgClearAdminResponse(nullptr, from) {}
  inline MsgClearAdminResponse(MsgClearAdminResponse&& from) noexcept
      : MsgClearAdminResponse(nullptr, std::move(from)) {}
  inline MsgClearAdminResponse& operator=(const MsgClearAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgClearAdminResponse& operator=(MsgClearAdminResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgClearAdminResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgClearAdminResponse* internal_default_instance() {
    return reinterpret_cast<const MsgClearAdminResponse*>(
        &_MsgClearAdminResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MsgClearAdminResponse& a, MsgClearAdminResponse& b) { a.Swap(&b); }
  inline void Swap(MsgClearAdminResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgClearAdminResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgClearAdminResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgClearAdminResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgClearAdminResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgClearAdminResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgClearAdminResponse"; }

 protected:
  explicit MsgClearAdminResponse(::google::protobuf::Arena* arena);
  MsgClearAdminResponse(::google::protobuf::Arena* arena, const MsgClearAdminResponse& from);
  MsgClearAdminResponse(::google::protobuf::Arena* arena, MsgClearAdminResponse&& from) noexcept
      : MsgClearAdminResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgClearAdminResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgClearAdminResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgClearAdmin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgClearAdmin) */ {
 public:
  inline MsgClearAdmin() : MsgClearAdmin(nullptr) {}
  ~MsgClearAdmin() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgClearAdmin* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgClearAdmin));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgClearAdmin(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgClearAdmin(const MsgClearAdmin& from) : MsgClearAdmin(nullptr, from) {}
  inline MsgClearAdmin(MsgClearAdmin&& from) noexcept
      : MsgClearAdmin(nullptr, std::move(from)) {}
  inline MsgClearAdmin& operator=(const MsgClearAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgClearAdmin& operator=(MsgClearAdmin&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgClearAdmin& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgClearAdmin* internal_default_instance() {
    return reinterpret_cast<const MsgClearAdmin*>(
        &_MsgClearAdmin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MsgClearAdmin& a, MsgClearAdmin& b) { a.Swap(&b); }
  inline void Swap(MsgClearAdmin* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgClearAdmin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgClearAdmin* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgClearAdmin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgClearAdmin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgClearAdmin& from) { MsgClearAdmin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgClearAdmin* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgClearAdmin"; }

 protected:
  explicit MsgClearAdmin(::google::protobuf::Arena* arena);
  MsgClearAdmin(::google::protobuf::Arena* arena, const MsgClearAdmin& from);
  MsgClearAdmin(::google::protobuf::Arena* arena, MsgClearAdmin&& from) noexcept
      : MsgClearAdmin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kContractFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_contract() ;
  const std::string& contract() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* value);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgClearAdmin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 2, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgClearAdmin& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr contract_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgAddCodeUploadParamsAddressesResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse) */ {
 public:
  inline MsgAddCodeUploadParamsAddressesResponse() : MsgAddCodeUploadParamsAddressesResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgAddCodeUploadParamsAddressesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgAddCodeUploadParamsAddressesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddCodeUploadParamsAddressesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgAddCodeUploadParamsAddressesResponse(const MsgAddCodeUploadParamsAddressesResponse& from) : MsgAddCodeUploadParamsAddressesResponse(nullptr, from) {}
  inline MsgAddCodeUploadParamsAddressesResponse(MsgAddCodeUploadParamsAddressesResponse&& from) noexcept
      : MsgAddCodeUploadParamsAddressesResponse(nullptr, std::move(from)) {}
  inline MsgAddCodeUploadParamsAddressesResponse& operator=(const MsgAddCodeUploadParamsAddressesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddCodeUploadParamsAddressesResponse& operator=(MsgAddCodeUploadParamsAddressesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddCodeUploadParamsAddressesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddCodeUploadParamsAddressesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgAddCodeUploadParamsAddressesResponse*>(
        &_MsgAddCodeUploadParamsAddressesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(MsgAddCodeUploadParamsAddressesResponse& a, MsgAddCodeUploadParamsAddressesResponse& b) { a.Swap(&b); }
  inline void Swap(MsgAddCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddCodeUploadParamsAddressesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddCodeUploadParamsAddressesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgAddCodeUploadParamsAddressesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgAddCodeUploadParamsAddressesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgAddCodeUploadParamsAddressesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse"; }

 protected:
  explicit MsgAddCodeUploadParamsAddressesResponse(::google::protobuf::Arena* arena);
  MsgAddCodeUploadParamsAddressesResponse(::google::protobuf::Arena* arena, const MsgAddCodeUploadParamsAddressesResponse& from);
  MsgAddCodeUploadParamsAddressesResponse(::google::protobuf::Arena* arena, MsgAddCodeUploadParamsAddressesResponse&& from) noexcept
      : MsgAddCodeUploadParamsAddressesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddressesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgAddCodeUploadParamsAddressesResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgAddCodeUploadParamsAddresses final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses) */ {
 public:
  inline MsgAddCodeUploadParamsAddresses() : MsgAddCodeUploadParamsAddresses(nullptr) {}
  ~MsgAddCodeUploadParamsAddresses() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgAddCodeUploadParamsAddresses* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgAddCodeUploadParamsAddresses));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgAddCodeUploadParamsAddresses(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgAddCodeUploadParamsAddresses(const MsgAddCodeUploadParamsAddresses& from) : MsgAddCodeUploadParamsAddresses(nullptr, from) {}
  inline MsgAddCodeUploadParamsAddresses(MsgAddCodeUploadParamsAddresses&& from) noexcept
      : MsgAddCodeUploadParamsAddresses(nullptr, std::move(from)) {}
  inline MsgAddCodeUploadParamsAddresses& operator=(const MsgAddCodeUploadParamsAddresses& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgAddCodeUploadParamsAddresses& operator=(MsgAddCodeUploadParamsAddresses&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgAddCodeUploadParamsAddresses& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgAddCodeUploadParamsAddresses* internal_default_instance() {
    return reinterpret_cast<const MsgAddCodeUploadParamsAddresses*>(
        &_MsgAddCodeUploadParamsAddresses_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(MsgAddCodeUploadParamsAddresses& a, MsgAddCodeUploadParamsAddresses& b) { a.Swap(&b); }
  inline void Swap(MsgAddCodeUploadParamsAddresses* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgAddCodeUploadParamsAddresses* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgAddCodeUploadParamsAddresses* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgAddCodeUploadParamsAddresses>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgAddCodeUploadParamsAddresses& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgAddCodeUploadParamsAddresses& from) { MsgAddCodeUploadParamsAddresses::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgAddCodeUploadParamsAddresses* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses"; }

 protected:
  explicit MsgAddCodeUploadParamsAddresses(::google::protobuf::Arena* arena);
  MsgAddCodeUploadParamsAddresses(::google::protobuf::Arena* arena, const MsgAddCodeUploadParamsAddresses& from);
  MsgAddCodeUploadParamsAddresses(::google::protobuf::Arena* arena, MsgAddCodeUploadParamsAddresses&& from) noexcept
      : MsgAddCodeUploadParamsAddresses(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 2,
    kAuthorityFieldNumber = 1,
  };
  // repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  const std::string& addresses(int index) const;
  std::string* mutable_addresses(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addresses(int index, Arg_&& value, Args_... args);
  std::string* add_addresses();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_addresses(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_addresses();

  public:
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgAddCodeUploadParamsAddresses& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> addresses_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateInstantiateConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig) */ {
 public:
  inline MsgUpdateInstantiateConfig() : MsgUpdateInstantiateConfig(nullptr) {}
  ~MsgUpdateInstantiateConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateInstantiateConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateInstantiateConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateInstantiateConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateInstantiateConfig(const MsgUpdateInstantiateConfig& from) : MsgUpdateInstantiateConfig(nullptr, from) {}
  inline MsgUpdateInstantiateConfig(MsgUpdateInstantiateConfig&& from) noexcept
      : MsgUpdateInstantiateConfig(nullptr, std::move(from)) {}
  inline MsgUpdateInstantiateConfig& operator=(const MsgUpdateInstantiateConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateInstantiateConfig& operator=(MsgUpdateInstantiateConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateInstantiateConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateInstantiateConfig* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateInstantiateConfig*>(
        &_MsgUpdateInstantiateConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(MsgUpdateInstantiateConfig& a, MsgUpdateInstantiateConfig& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateInstantiateConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateInstantiateConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateInstantiateConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateInstantiateConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateInstantiateConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateInstantiateConfig& from) { MsgUpdateInstantiateConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateInstantiateConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateInstantiateConfig"; }

 protected:
  explicit MsgUpdateInstantiateConfig(::google::protobuf::Arena* arena);
  MsgUpdateInstantiateConfig(::google::protobuf::Arena* arena, const MsgUpdateInstantiateConfig& from);
  MsgUpdateInstantiateConfig(::google::protobuf::Arena* arena, MsgUpdateInstantiateConfig&& from) noexcept
      : MsgUpdateInstantiateConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kNewInstantiatePermissionFieldNumber = 3,
    kCodeIdFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // .cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3 [json_name = "newInstantiatePermission"];
  bool has_new_instantiate_permission() const;
  void clear_new_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& new_instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_new_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_new_instantiate_permission();
  void set_allocated_new_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  void unsafe_arena_set_allocated_new_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_new_instantiate_permission();

  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_new_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_new_instantiate_permission();

  public:
  // uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateInstantiateConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::cosmwasm::wasm::v1::AccessConfig* new_instantiate_permission_;
    ::uint64_t code_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgStoreCode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreCode) */ {
 public:
  inline MsgStoreCode() : MsgStoreCode(nullptr) {}
  ~MsgStoreCode() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgStoreCode* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgStoreCode));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreCode(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgStoreCode(const MsgStoreCode& from) : MsgStoreCode(nullptr, from) {}
  inline MsgStoreCode(MsgStoreCode&& from) noexcept
      : MsgStoreCode(nullptr, std::move(from)) {}
  inline MsgStoreCode& operator=(const MsgStoreCode& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreCode& operator=(MsgStoreCode&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreCode& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreCode* internal_default_instance() {
    return reinterpret_cast<const MsgStoreCode*>(
        &_MsgStoreCode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgStoreCode& a, MsgStoreCode& b) { a.Swap(&b); }
  inline void Swap(MsgStoreCode* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreCode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreCode* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgStoreCode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgStoreCode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgStoreCode& from) { MsgStoreCode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgStoreCode* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgStoreCode"; }

 protected:
  explicit MsgStoreCode(::google::protobuf::Arena* arena);
  MsgStoreCode(::google::protobuf::Arena* arena, const MsgStoreCode& from);
  MsgStoreCode(::google::protobuf::Arena* arena, MsgStoreCode&& from) noexcept
      : MsgStoreCode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kWasmByteCodeFieldNumber = 2,
    kInstantiatePermissionFieldNumber = 5,
  };
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
  void clear_wasm_byte_code() ;
  const std::string& wasm_byte_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wasm_byte_code(Arg_&& arg, Args_... args);
  std::string* mutable_wasm_byte_code();
  PROTOBUF_NODISCARD std::string* release_wasm_byte_code();
  void set_allocated_wasm_byte_code(std::string* value);

  private:
  const std::string& _internal_wasm_byte_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wasm_byte_code(
      const std::string& value);
  std::string* _internal_mutable_wasm_byte_code();

  public:
  // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
  bool has_instantiate_permission() const;
  void clear_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_instantiate_permission();
  void set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  void unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_instantiate_permission();

  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_instantiate_permission();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreCode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgStoreCode& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr wasm_byte_code_;
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgStoreAndMigrateContract final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreAndMigrateContract) */ {
 public:
  inline MsgStoreAndMigrateContract() : MsgStoreAndMigrateContract(nullptr) {}
  ~MsgStoreAndMigrateContract() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgStoreAndMigrateContract* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgStoreAndMigrateContract));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreAndMigrateContract(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgStoreAndMigrateContract(const MsgStoreAndMigrateContract& from) : MsgStoreAndMigrateContract(nullptr, from) {}
  inline MsgStoreAndMigrateContract(MsgStoreAndMigrateContract&& from) noexcept
      : MsgStoreAndMigrateContract(nullptr, std::move(from)) {}
  inline MsgStoreAndMigrateContract& operator=(const MsgStoreAndMigrateContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreAndMigrateContract& operator=(MsgStoreAndMigrateContract&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreAndMigrateContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreAndMigrateContract* internal_default_instance() {
    return reinterpret_cast<const MsgStoreAndMigrateContract*>(
        &_MsgStoreAndMigrateContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(MsgStoreAndMigrateContract& a, MsgStoreAndMigrateContract& b) { a.Swap(&b); }
  inline void Swap(MsgStoreAndMigrateContract* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreAndMigrateContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreAndMigrateContract* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgStoreAndMigrateContract>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgStoreAndMigrateContract& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgStoreAndMigrateContract& from) { MsgStoreAndMigrateContract::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgStoreAndMigrateContract* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgStoreAndMigrateContract"; }

 protected:
  explicit MsgStoreAndMigrateContract(::google::protobuf::Arena* arena);
  MsgStoreAndMigrateContract(::google::protobuf::Arena* arena, const MsgStoreAndMigrateContract& from);
  MsgStoreAndMigrateContract(::google::protobuf::Arena* arena, MsgStoreAndMigrateContract&& from) noexcept
      : MsgStoreAndMigrateContract(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kWasmByteCodeFieldNumber = 2,
    kContractFieldNumber = 4,
    kMsgFieldNumber = 5,
    kInstantiatePermissionFieldNumber = 3,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
  void clear_wasm_byte_code() ;
  const std::string& wasm_byte_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wasm_byte_code(Arg_&& arg, Args_... args);
  std::string* mutable_wasm_byte_code();
  PROTOBUF_NODISCARD std::string* release_wasm_byte_code();
  void set_allocated_wasm_byte_code(std::string* value);

  private:
  const std::string& _internal_wasm_byte_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wasm_byte_code(
      const std::string& value);
  std::string* _internal_mutable_wasm_byte_code();

  public:
  // string contract = 4 [json_name = "contract"];
  void clear_contract() ;
  const std::string& contract() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* value);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 3 [json_name = "instantiatePermission"];
  bool has_instantiate_permission() const;
  void clear_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_instantiate_permission();
  void set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  void unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_instantiate_permission();

  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_instantiate_permission();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreAndMigrateContract)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgStoreAndMigrateContract& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::ArenaStringPtr wasm_byte_code_;
    ::google::protobuf::internal::ArenaStringPtr contract_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgStoreAndInstantiateContract final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract) */ {
 public:
  inline MsgStoreAndInstantiateContract() : MsgStoreAndInstantiateContract(nullptr) {}
  ~MsgStoreAndInstantiateContract() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgStoreAndInstantiateContract* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgStoreAndInstantiateContract));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgStoreAndInstantiateContract(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgStoreAndInstantiateContract(const MsgStoreAndInstantiateContract& from) : MsgStoreAndInstantiateContract(nullptr, from) {}
  inline MsgStoreAndInstantiateContract(MsgStoreAndInstantiateContract&& from) noexcept
      : MsgStoreAndInstantiateContract(nullptr, std::move(from)) {}
  inline MsgStoreAndInstantiateContract& operator=(const MsgStoreAndInstantiateContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgStoreAndInstantiateContract& operator=(MsgStoreAndInstantiateContract&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgStoreAndInstantiateContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgStoreAndInstantiateContract* internal_default_instance() {
    return reinterpret_cast<const MsgStoreAndInstantiateContract*>(
        &_MsgStoreAndInstantiateContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(MsgStoreAndInstantiateContract& a, MsgStoreAndInstantiateContract& b) { a.Swap(&b); }
  inline void Swap(MsgStoreAndInstantiateContract* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgStoreAndInstantiateContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgStoreAndInstantiateContract* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgStoreAndInstantiateContract>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgStoreAndInstantiateContract& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgStoreAndInstantiateContract& from) { MsgStoreAndInstantiateContract::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgStoreAndInstantiateContract* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgStoreAndInstantiateContract"; }

 protected:
  explicit MsgStoreAndInstantiateContract(::google::protobuf::Arena* arena);
  MsgStoreAndInstantiateContract(::google::protobuf::Arena* arena, const MsgStoreAndInstantiateContract& from);
  MsgStoreAndInstantiateContract(::google::protobuf::Arena* arena, MsgStoreAndInstantiateContract&& from) noexcept
      : MsgStoreAndInstantiateContract(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundsFieldNumber = 9,
    kAuthorityFieldNumber = 1,
    kWasmByteCodeFieldNumber = 3,
    kAdminFieldNumber = 6,
    kLabelFieldNumber = 7,
    kMsgFieldNumber = 8,
    kSourceFieldNumber = 10,
    kBuilderFieldNumber = 11,
    kCodeHashFieldNumber = 12,
    kInstantiatePermissionFieldNumber = 4,
    kUnpinCodeFieldNumber = 5,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 9 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_funds();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& funds() const;
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // bytes wasm_byte_code = 3 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
  void clear_wasm_byte_code() ;
  const std::string& wasm_byte_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_wasm_byte_code(Arg_&& arg, Args_... args);
  std::string* mutable_wasm_byte_code();
  PROTOBUF_NODISCARD std::string* release_wasm_byte_code();
  void set_allocated_wasm_byte_code(std::string* value);

  private:
  const std::string& _internal_wasm_byte_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_wasm_byte_code(
      const std::string& value);
  std::string* _internal_mutable_wasm_byte_code();

  public:
  // string admin = 6 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string label = 7 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bytes msg = 8 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // string source = 10 [json_name = "source"];
  void clear_source() ;
  const std::string& source() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  std::string* mutable_source();
  PROTOBUF_NODISCARD std::string* release_source();
  void set_allocated_source(std::string* value);

  private:
  const std::string& _internal_source() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source(
      const std::string& value);
  std::string* _internal_mutable_source();

  public:
  // string builder = 11 [json_name = "builder"];
  void clear_builder() ;
  const std::string& builder() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_builder(Arg_&& arg, Args_... args);
  std::string* mutable_builder();
  PROTOBUF_NODISCARD std::string* release_builder();
  void set_allocated_builder(std::string* value);

  private:
  const std::string& _internal_builder() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_builder(
      const std::string& value);
  std::string* _internal_mutable_builder();

  public:
  // bytes code_hash = 12 [json_name = "codeHash"];
  void clear_code_hash() ;
  const std::string& code_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code_hash(Arg_&& arg, Args_... args);
  std::string* mutable_code_hash();
  PROTOBUF_NODISCARD std::string* release_code_hash();
  void set_allocated_code_hash(std::string* value);

  private:
  const std::string& _internal_code_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code_hash(
      const std::string& value);
  std::string* _internal_mutable_code_hash();

  public:
  // .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission"];
  bool has_instantiate_permission() const;
  void clear_instantiate_permission() ;
  const ::cosmwasm::wasm::v1::AccessConfig& instantiate_permission() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::AccessConfig* release_instantiate_permission();
  ::cosmwasm::wasm::v1::AccessConfig* mutable_instantiate_permission();
  void set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  void unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value);
  ::cosmwasm::wasm::v1::AccessConfig* unsafe_arena_release_instantiate_permission();

  private:
  const ::cosmwasm::wasm::v1::AccessConfig& _internal_instantiate_permission() const;
  ::cosmwasm::wasm::v1::AccessConfig* _internal_mutable_instantiate_permission();

  public:
  // bool unpin_code = 5 [json_name = "unpinCode"];
  void clear_unpin_code() ;
  bool unpin_code() const;
  void set_unpin_code(bool value);

  private:
  bool _internal_unpin_code() const;
  void _internal_set_unpin_code(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 2,
      96, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgStoreAndInstantiateContract& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::internal::ArenaStringPtr wasm_byte_code_;
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    ::google::protobuf::internal::ArenaStringPtr builder_;
    ::google::protobuf::internal::ArenaStringPtr code_hash_;
    ::cosmwasm::wasm::v1::AccessConfig* instantiate_permission_;
    bool unpin_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgInstantiateContract2 final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContract2) */ {
 public:
  inline MsgInstantiateContract2() : MsgInstantiateContract2(nullptr) {}
  ~MsgInstantiateContract2() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgInstantiateContract2* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgInstantiateContract2));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContract2(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgInstantiateContract2(const MsgInstantiateContract2& from) : MsgInstantiateContract2(nullptr, from) {}
  inline MsgInstantiateContract2(MsgInstantiateContract2&& from) noexcept
      : MsgInstantiateContract2(nullptr, std::move(from)) {}
  inline MsgInstantiateContract2& operator=(const MsgInstantiateContract2& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContract2& operator=(MsgInstantiateContract2&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContract2& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContract2* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContract2*>(
        &_MsgInstantiateContract2_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgInstantiateContract2& a, MsgInstantiateContract2& b) { a.Swap(&b); }
  inline void Swap(MsgInstantiateContract2* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContract2* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContract2* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgInstantiateContract2>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContract2& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgInstantiateContract2& from) { MsgInstantiateContract2::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgInstantiateContract2* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgInstantiateContract2"; }

 protected:
  explicit MsgInstantiateContract2(::google::protobuf::Arena* arena);
  MsgInstantiateContract2(::google::protobuf::Arena* arena, const MsgInstantiateContract2& from);
  MsgInstantiateContract2(::google::protobuf::Arena* arena, MsgInstantiateContract2&& from) noexcept
      : MsgInstantiateContract2(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundsFieldNumber = 6,
    kSenderFieldNumber = 1,
    kAdminFieldNumber = 2,
    kLabelFieldNumber = 4,
    kMsgFieldNumber = 5,
    kSaltFieldNumber = 7,
    kCodeIdFieldNumber = 3,
    kFixMsgFieldNumber = 8,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_funds();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& funds() const;
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string label = 4 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bytes salt = 7 [json_name = "salt"];
  void clear_salt() ;
  const std::string& salt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_salt(Arg_&& arg, Args_... args);
  std::string* mutable_salt();
  PROTOBUF_NODISCARD std::string* release_salt();
  void set_allocated_salt(std::string* value);

  private:
  const std::string& _internal_salt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_salt(
      const std::string& value);
  std::string* _internal_mutable_salt();

  public:
  // uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // bool fix_msg = 8 [json_name = "fixMsg"];
  void clear_fix_msg() ;
  bool fix_msg() const;
  void set_fix_msg(bool value);

  private:
  bool _internal_fix_msg() const;
  void _internal_set_fix_msg(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContract2)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      73, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgInstantiateContract2& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::ArenaStringPtr salt_;
    ::uint64_t code_id_;
    bool fix_msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgInstantiateContract final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgInstantiateContract) */ {
 public:
  inline MsgInstantiateContract() : MsgInstantiateContract(nullptr) {}
  ~MsgInstantiateContract() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgInstantiateContract* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgInstantiateContract));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgInstantiateContract(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgInstantiateContract(const MsgInstantiateContract& from) : MsgInstantiateContract(nullptr, from) {}
  inline MsgInstantiateContract(MsgInstantiateContract&& from) noexcept
      : MsgInstantiateContract(nullptr, std::move(from)) {}
  inline MsgInstantiateContract& operator=(const MsgInstantiateContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgInstantiateContract& operator=(MsgInstantiateContract&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgInstantiateContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgInstantiateContract* internal_default_instance() {
    return reinterpret_cast<const MsgInstantiateContract*>(
        &_MsgInstantiateContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgInstantiateContract& a, MsgInstantiateContract& b) { a.Swap(&b); }
  inline void Swap(MsgInstantiateContract* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgInstantiateContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgInstantiateContract* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgInstantiateContract>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgInstantiateContract& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgInstantiateContract& from) { MsgInstantiateContract::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgInstantiateContract* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgInstantiateContract"; }

 protected:
  explicit MsgInstantiateContract(::google::protobuf::Arena* arena);
  MsgInstantiateContract(::google::protobuf::Arena* arena, const MsgInstantiateContract& from);
  MsgInstantiateContract(::google::protobuf::Arena* arena, MsgInstantiateContract&& from) noexcept
      : MsgInstantiateContract(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundsFieldNumber = 6,
    kSenderFieldNumber = 1,
    kAdminFieldNumber = 2,
    kLabelFieldNumber = 4,
    kMsgFieldNumber = 5,
    kCodeIdFieldNumber = 3,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_funds();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& funds() const;
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_admin() ;
  const std::string& admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_admin(Arg_&& arg, Args_... args);
  std::string* mutable_admin();
  PROTOBUF_NODISCARD std::string* release_admin();
  void set_allocated_admin(std::string* value);

  private:
  const std::string& _internal_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_admin(
      const std::string& value);
  std::string* _internal_mutable_admin();

  public:
  // string label = 4 [json_name = "label"];
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
  void clear_code_id() ;
  ::uint64_t code_id() const;
  void set_code_id(::uint64_t value);

  private:
  ::uint64_t _internal_code_id() const;
  void _internal_set_code_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgInstantiateContract)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgInstantiateContract& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr admin_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::uint64_t code_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgExecuteContract final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgExecuteContract) */ {
 public:
  inline MsgExecuteContract() : MsgExecuteContract(nullptr) {}
  ~MsgExecuteContract() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgExecuteContract* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgExecuteContract));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecuteContract(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgExecuteContract(const MsgExecuteContract& from) : MsgExecuteContract(nullptr, from) {}
  inline MsgExecuteContract(MsgExecuteContract&& from) noexcept
      : MsgExecuteContract(nullptr, std::move(from)) {}
  inline MsgExecuteContract& operator=(const MsgExecuteContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecuteContract& operator=(MsgExecuteContract&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecuteContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecuteContract* internal_default_instance() {
    return reinterpret_cast<const MsgExecuteContract*>(
        &_MsgExecuteContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MsgExecuteContract& a, MsgExecuteContract& b) { a.Swap(&b); }
  inline void Swap(MsgExecuteContract* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecuteContract* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecuteContract* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgExecuteContract>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgExecuteContract& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgExecuteContract& from) { MsgExecuteContract::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgExecuteContract* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgExecuteContract"; }

 protected:
  explicit MsgExecuteContract(::google::protobuf::Arena* arena);
  MsgExecuteContract(::google::protobuf::Arena* arena, const MsgExecuteContract& from);
  MsgExecuteContract(::google::protobuf::Arena* arena, MsgExecuteContract&& from) noexcept
      : MsgExecuteContract(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundsFieldNumber = 5,
    kSenderFieldNumber = 1,
    kContractFieldNumber = 2,
    kMsgFieldNumber = 3,
  };
  // repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int funds_size() const;
  private:
  int _internal_funds_size() const;

  public:
  void clear_funds() ;
  ::cosmos::base::v1beta1::Coin* mutable_funds(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_funds();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_funds() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_funds();
  public:
  const ::cosmos::base::v1beta1::Coin& funds(int index) const;
  ::cosmos::base::v1beta1::Coin* add_funds();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& funds() const;
  // string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_contract() ;
  const std::string& contract() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_contract(Arg_&& arg, Args_... args);
  std::string* mutable_contract();
  PROTOBUF_NODISCARD std::string* release_contract();
  void set_allocated_contract(std::string* value);

  private:
  const std::string& _internal_contract() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_contract(
      const std::string& value);
  std::string* _internal_mutable_contract();

  public:
  // bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgExecuteContract)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 1,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgExecuteContract& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > funds_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr contract_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .cosmwasm.wasm.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmwasm::wasm::v1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmwasm::wasm::v1::Params* release_params();
  ::cosmwasm::wasm::v1::Params* mutable_params();
  void set_allocated_params(::cosmwasm::wasm::v1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmwasm::wasm::v1::Params* value);
  ::cosmwasm::wasm::v1::Params* unsafe_arena_release_params();

  private:
  const ::cosmwasm::wasm::v1::Params& _internal_params() const;
  ::cosmwasm::wasm::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::cosmwasm::wasm::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgStoreCode

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgStoreCode::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgStoreCode::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCode.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreCode::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCode.sender)
}
inline std::string* MsgStoreCode::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCode.sender)
  return _s;
}
inline const std::string& MsgStoreCode::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgStoreCode::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgStoreCode::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgStoreCode::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCode.sender)
  return _impl_.sender_.Release();
}
inline void MsgStoreCode::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.sender)
}

// bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
inline void MsgStoreCode::clear_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.ClearToEmpty();
}
inline const std::string& MsgStoreCode::wasm_byte_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
  return _internal_wasm_byte_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreCode::set_wasm_byte_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
}
inline std::string* MsgStoreCode::mutable_wasm_byte_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wasm_byte_code();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
  return _s;
}
inline const std::string& MsgStoreCode::_internal_wasm_byte_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wasm_byte_code_.Get();
}
inline void MsgStoreCode::_internal_set_wasm_byte_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.Set(value, GetArena());
}
inline std::string* MsgStoreCode::_internal_mutable_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wasm_byte_code_.Mutable( GetArena());
}
inline std::string* MsgStoreCode::release_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
  return _impl_.wasm_byte_code_.Release();
}
inline void MsgStoreCode::set_allocated_wasm_byte_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.wasm_byte_code_.IsDefault()) {
    _impl_.wasm_byte_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.wasm_byte_code)
}

// .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5 [json_name = "instantiatePermission"];
inline bool MsgStoreCode::has_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreCode::_internal_instantiate_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreCode::instantiate_permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
  return _internal_instantiate_permission();
}
inline void MsgStoreCode::unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }
  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* released = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::unsafe_arena_release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::_internal_mutable_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::AccessConfig>(GetArena());
    _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(p);
  }
  return _impl_.instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreCode::mutable_instantiate_permission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
  return _msg;
}
inline void MsgStoreCode::set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCode.instantiate_permission)
}

// -------------------------------------------------------------------

// MsgStoreCodeResponse

// uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgStoreCodeResponse::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgStoreCodeResponse::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCodeResponse.code_id)
  return _internal_code_id();
}
inline void MsgStoreCodeResponse::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCodeResponse.code_id)
}
inline ::uint64_t MsgStoreCodeResponse::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void MsgStoreCodeResponse::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// bytes checksum = 2 [json_name = "checksum"];
inline void MsgStoreCodeResponse::clear_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.ClearToEmpty();
}
inline const std::string& MsgStoreCodeResponse::checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
  return _internal_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreCodeResponse::set_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
}
inline std::string* MsgStoreCodeResponse::mutable_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_checksum();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
  return _s;
}
inline const std::string& MsgStoreCodeResponse::_internal_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_.Get();
}
inline void MsgStoreCodeResponse::_internal_set_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.Set(value, GetArena());
}
inline std::string* MsgStoreCodeResponse::_internal_mutable_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.checksum_.Mutable( GetArena());
}
inline std::string* MsgStoreCodeResponse::release_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
  return _impl_.checksum_.Release();
}
inline void MsgStoreCodeResponse::set_allocated_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.checksum_.IsDefault()) {
    _impl_.checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreCodeResponse.checksum)
}

// -------------------------------------------------------------------

// MsgInstantiateContract

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgInstantiateContract::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
}
inline std::string* MsgInstantiateContract::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgInstantiateContract::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
  return _impl_.sender_.Release();
}
inline void MsgInstantiateContract::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.sender)
}

// string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgInstantiateContract::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
}
inline std::string* MsgInstantiateContract::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgInstantiateContract::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
  return _impl_.admin_.Release();
}
inline void MsgInstantiateContract::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.admin)
}

// uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgInstantiateContract::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgInstantiateContract::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.code_id)
  return _internal_code_id();
}
inline void MsgInstantiateContract::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.code_id)
}
inline ::uint64_t MsgInstantiateContract::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void MsgInstantiateContract::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// string label = 4 [json_name = "label"];
inline void MsgInstantiateContract::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.label)
}
inline std::string* MsgInstantiateContract::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.label)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void MsgInstantiateContract::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.label)
  return _impl_.label_.Release();
}
inline void MsgInstantiateContract::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.label_.IsDefault()) {
    _impl_.label_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.label)
}

// bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void MsgInstantiateContract::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
}
inline std::string* MsgInstantiateContract::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
  return _s;
}
inline const std::string& MsgInstantiateContract::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void MsgInstantiateContract::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgInstantiateContract::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int MsgInstantiateContract::_internal_funds_size() const {
  return _internal_funds().size();
}
inline int MsgInstantiateContract::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract::mutable_funds(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgInstantiateContract::mutable_funds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgInstantiateContract::funds(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _internal_funds().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract::add_funds() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_funds()->Add();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgInstantiateContract::funds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgInstantiateContract.funds)
  return _internal_funds();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgInstantiateContract::_internal_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funds_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgInstantiateContract::_internal_mutable_funds() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.funds_;
}

// -------------------------------------------------------------------

// MsgInstantiateContractResponse

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgInstantiateContractResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContractResponse::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContractResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
}
inline std::string* MsgInstantiateContractResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
  return _s;
}
inline const std::string& MsgInstantiateContractResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void MsgInstantiateContractResponse::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContractResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContractResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
  return _impl_.address_.Release();
}
inline void MsgInstantiateContractResponse::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContractResponse.address)
}

// bytes data = 2 [json_name = "data"];
inline void MsgInstantiateContractResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContractResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
}
inline std::string* MsgInstantiateContractResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
  return _s;
}
inline const std::string& MsgInstantiateContractResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgInstantiateContractResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContractResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContractResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgInstantiateContractResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContractResponse.data)
}

// -------------------------------------------------------------------

// MsgInstantiateContract2

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgInstantiateContract2::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
}
inline std::string* MsgInstantiateContract2::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgInstantiateContract2::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract2::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
  return _impl_.sender_.Release();
}
inline void MsgInstantiateContract2::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.sender)
}

// string admin = 2 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgInstantiateContract2::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
}
inline std::string* MsgInstantiateContract2::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgInstantiateContract2::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract2::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
  return _impl_.admin_.Release();
}
inline void MsgInstantiateContract2::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.admin)
}

// uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgInstantiateContract2::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgInstantiateContract2::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.code_id)
  return _internal_code_id();
}
inline void MsgInstantiateContract2::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.code_id)
}
inline ::uint64_t MsgInstantiateContract2::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void MsgInstantiateContract2::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// string label = 4 [json_name = "label"];
inline void MsgInstantiateContract2::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
}
inline std::string* MsgInstantiateContract2::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void MsgInstantiateContract2::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract2::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
  return _impl_.label_.Release();
}
inline void MsgInstantiateContract2::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.label_.IsDefault()) {
    _impl_.label_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.label)
}

// bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void MsgInstantiateContract2::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
}
inline std::string* MsgInstantiateContract2::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void MsgInstantiateContract2::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract2::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
  return _impl_.msg_.Release();
}
inline void MsgInstantiateContract2::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 6 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int MsgInstantiateContract2::_internal_funds_size() const {
  return _internal_funds().size();
}
inline int MsgInstantiateContract2::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract2::mutable_funds(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgInstantiateContract2::mutable_funds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgInstantiateContract2::funds(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _internal_funds().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgInstantiateContract2::add_funds() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_funds()->Add();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgInstantiateContract2::funds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgInstantiateContract2.funds)
  return _internal_funds();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgInstantiateContract2::_internal_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funds_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgInstantiateContract2::_internal_mutable_funds() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.funds_;
}

// bytes salt = 7 [json_name = "salt"];
inline void MsgInstantiateContract2::clear_salt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2::salt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
  return _internal_salt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2::set_salt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
}
inline std::string* MsgInstantiateContract2::mutable_salt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_salt();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
  return _s;
}
inline const std::string& MsgInstantiateContract2::_internal_salt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.salt_.Get();
}
inline void MsgInstantiateContract2::_internal_set_salt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract2::_internal_mutable_salt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.salt_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract2::release_salt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
  return _impl_.salt_.Release();
}
inline void MsgInstantiateContract2::set_allocated_salt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.salt_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.salt_.IsDefault()) {
    _impl_.salt_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2.salt)
}

// bool fix_msg = 8 [json_name = "fixMsg"];
inline void MsgInstantiateContract2::clear_fix_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fix_msg_ = false;
}
inline bool MsgInstantiateContract2::fix_msg() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2.fix_msg)
  return _internal_fix_msg();
}
inline void MsgInstantiateContract2::set_fix_msg(bool value) {
  _internal_set_fix_msg(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2.fix_msg)
}
inline bool MsgInstantiateContract2::_internal_fix_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fix_msg_;
}
inline void MsgInstantiateContract2::_internal_set_fix_msg(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fix_msg_ = value;
}

// -------------------------------------------------------------------

// MsgInstantiateContract2Response

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgInstantiateContract2Response::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2Response::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2Response::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
}
inline std::string* MsgInstantiateContract2Response::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
  return _s;
}
inline const std::string& MsgInstantiateContract2Response::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void MsgInstantiateContract2Response::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract2Response::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract2Response::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
  return _impl_.address_.Release();
}
inline void MsgInstantiateContract2Response::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2Response.address)
}

// bytes data = 2 [json_name = "data"];
inline void MsgInstantiateContract2Response::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgInstantiateContract2Response::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgInstantiateContract2Response::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
}
inline std::string* MsgInstantiateContract2Response::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
  return _s;
}
inline const std::string& MsgInstantiateContract2Response::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgInstantiateContract2Response::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgInstantiateContract2Response::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgInstantiateContract2Response::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
  return _impl_.data_.Release();
}
inline void MsgInstantiateContract2Response::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgInstantiateContract2Response.data)
}

// -------------------------------------------------------------------

// MsgExecuteContract

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgExecuteContract::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgExecuteContract::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContract::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContract.sender)
}
inline std::string* MsgExecuteContract::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.sender)
  return _s;
}
inline const std::string& MsgExecuteContract::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgExecuteContract::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgExecuteContract::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgExecuteContract::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContract.sender)
  return _impl_.sender_.Release();
}
inline void MsgExecuteContract::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContract.sender)
}

// string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgExecuteContract::clear_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgExecuteContract::contract() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContract::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContract.contract)
}
inline std::string* MsgExecuteContract::mutable_contract() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.contract)
  return _s;
}
inline const std::string& MsgExecuteContract::_internal_contract() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_.Get();
}
inline void MsgExecuteContract::_internal_set_contract(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(value, GetArena());
}
inline std::string* MsgExecuteContract::_internal_mutable_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_.Mutable( GetArena());
}
inline std::string* MsgExecuteContract::release_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContract.contract)
  return _impl_.contract_.Release();
}
inline void MsgExecuteContract::set_allocated_contract(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_.IsDefault()) {
    _impl_.contract_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContract.contract)
}

// bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void MsgExecuteContract::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgExecuteContract::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContract.msg)
}
inline std::string* MsgExecuteContract::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.msg)
  return _s;
}
inline const std::string& MsgExecuteContract::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void MsgExecuteContract::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* MsgExecuteContract::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* MsgExecuteContract::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgExecuteContract::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContract.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int MsgExecuteContract::_internal_funds_size() const {
  return _internal_funds().size();
}
inline int MsgExecuteContract::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgExecuteContract::mutable_funds(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgExecuteContract::mutable_funds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgExecuteContract::funds(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _internal_funds().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgExecuteContract::add_funds() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_funds()->Add();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgExecuteContract::funds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgExecuteContract.funds)
  return _internal_funds();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgExecuteContract::_internal_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funds_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgExecuteContract::_internal_mutable_funds() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.funds_;
}

// -------------------------------------------------------------------

// MsgExecuteContractResponse

// bytes data = 1 [json_name = "data"];
inline void MsgExecuteContractResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgExecuteContractResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecuteContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
}
inline std::string* MsgExecuteContractResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
  return _s;
}
inline const std::string& MsgExecuteContractResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgExecuteContractResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgExecuteContractResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgExecuteContractResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgExecuteContractResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgExecuteContractResponse.data)
}

// -------------------------------------------------------------------

// MsgMigrateContract

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgMigrateContract::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgMigrateContract::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContract::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.sender)
}
inline std::string* MsgMigrateContract::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContract.sender)
  return _s;
}
inline const std::string& MsgMigrateContract::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgMigrateContract::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgMigrateContract::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgMigrateContract::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContract.sender)
  return _impl_.sender_.Release();
}
inline void MsgMigrateContract::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContract.sender)
}

// string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgMigrateContract::clear_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgMigrateContract::contract() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContract::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.contract)
}
inline std::string* MsgMigrateContract::mutable_contract() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContract.contract)
  return _s;
}
inline const std::string& MsgMigrateContract::_internal_contract() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_.Get();
}
inline void MsgMigrateContract::_internal_set_contract(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(value, GetArena());
}
inline std::string* MsgMigrateContract::_internal_mutable_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_.Mutable( GetArena());
}
inline std::string* MsgMigrateContract::release_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContract.contract)
  return _impl_.contract_.Release();
}
inline void MsgMigrateContract::set_allocated_contract(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_.IsDefault()) {
    _impl_.contract_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContract.contract)
}

// uint64 code_id = 3 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgMigrateContract::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgMigrateContract::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.code_id)
  return _internal_code_id();
}
inline void MsgMigrateContract::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.code_id)
}
inline ::uint64_t MsgMigrateContract::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void MsgMigrateContract::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// bytes msg = 4 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void MsgMigrateContract::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgMigrateContract::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContract.msg)
}
inline std::string* MsgMigrateContract::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContract.msg)
  return _s;
}
inline const std::string& MsgMigrateContract::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void MsgMigrateContract::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* MsgMigrateContract::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* MsgMigrateContract::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgMigrateContract::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContract.msg)
}

// -------------------------------------------------------------------

// MsgMigrateContractResponse

// bytes data = 1 [json_name = "data"];
inline void MsgMigrateContractResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgMigrateContractResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMigrateContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
}
inline std::string* MsgMigrateContractResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
  return _s;
}
inline const std::string& MsgMigrateContractResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgMigrateContractResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgMigrateContractResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgMigrateContractResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgMigrateContractResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgMigrateContractResponse.data)
}

// -------------------------------------------------------------------

// MsgUpdateAdmin

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateAdmin::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgUpdateAdmin::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAdmin::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
}
inline std::string* MsgUpdateAdmin::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
  return _s;
}
inline const std::string& MsgUpdateAdmin::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgUpdateAdmin::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgUpdateAdmin::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgUpdateAdmin::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
  return _impl_.sender_.Release();
}
inline void MsgUpdateAdmin::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateAdmin.sender)
}

// string new_admin = 2 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateAdmin::clear_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.ClearToEmpty();
}
inline const std::string& MsgUpdateAdmin::new_admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
  return _internal_new_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAdmin::set_new_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
}
inline std::string* MsgUpdateAdmin::mutable_new_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
  return _s;
}
inline const std::string& MsgUpdateAdmin::_internal_new_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_admin_.Get();
}
inline void MsgUpdateAdmin::_internal_set_new_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.Set(value, GetArena());
}
inline std::string* MsgUpdateAdmin::_internal_mutable_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_admin_.Mutable( GetArena());
}
inline std::string* MsgUpdateAdmin::release_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
  return _impl_.new_admin_.Release();
}
inline void MsgUpdateAdmin::set_allocated_new_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_admin_.IsDefault()) {
    _impl_.new_admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateAdmin.new_admin)
}

// string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateAdmin::clear_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgUpdateAdmin::contract() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateAdmin::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
}
inline std::string* MsgUpdateAdmin::mutable_contract() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
  return _s;
}
inline const std::string& MsgUpdateAdmin::_internal_contract() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_.Get();
}
inline void MsgUpdateAdmin::_internal_set_contract(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(value, GetArena());
}
inline std::string* MsgUpdateAdmin::_internal_mutable_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_.Mutable( GetArena());
}
inline std::string* MsgUpdateAdmin::release_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
  return _impl_.contract_.Release();
}
inline void MsgUpdateAdmin::set_allocated_contract(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_.IsDefault()) {
    _impl_.contract_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateAdmin.contract)
}

// -------------------------------------------------------------------

// MsgUpdateAdminResponse

// -------------------------------------------------------------------

// MsgClearAdmin

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgClearAdmin::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgClearAdmin::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgClearAdmin.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgClearAdmin::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgClearAdmin.sender)
}
inline std::string* MsgClearAdmin::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgClearAdmin.sender)
  return _s;
}
inline const std::string& MsgClearAdmin::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgClearAdmin::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgClearAdmin::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgClearAdmin::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgClearAdmin.sender)
  return _impl_.sender_.Release();
}
inline void MsgClearAdmin::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgClearAdmin.sender)
}

// string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgClearAdmin::clear_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgClearAdmin::contract() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgClearAdmin.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgClearAdmin::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgClearAdmin.contract)
}
inline std::string* MsgClearAdmin::mutable_contract() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgClearAdmin.contract)
  return _s;
}
inline const std::string& MsgClearAdmin::_internal_contract() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_.Get();
}
inline void MsgClearAdmin::_internal_set_contract(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(value, GetArena());
}
inline std::string* MsgClearAdmin::_internal_mutable_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_.Mutable( GetArena());
}
inline std::string* MsgClearAdmin::release_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgClearAdmin.contract)
  return _impl_.contract_.Release();
}
inline void MsgClearAdmin::set_allocated_contract(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_.IsDefault()) {
    _impl_.contract_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgClearAdmin.contract)
}

// -------------------------------------------------------------------

// MsgClearAdminResponse

// -------------------------------------------------------------------

// MsgUpdateInstantiateConfig

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateInstantiateConfig::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgUpdateInstantiateConfig::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateInstantiateConfig::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
}
inline std::string* MsgUpdateInstantiateConfig::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
  return _s;
}
inline const std::string& MsgUpdateInstantiateConfig::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgUpdateInstantiateConfig::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgUpdateInstantiateConfig::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgUpdateInstantiateConfig::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
  return _impl_.sender_.Release();
}
inline void MsgUpdateInstantiateConfig::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.sender)
}

// uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgUpdateInstantiateConfig::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgUpdateInstantiateConfig::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.code_id)
  return _internal_code_id();
}
inline void MsgUpdateInstantiateConfig::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.code_id)
}
inline ::uint64_t MsgUpdateInstantiateConfig::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void MsgUpdateInstantiateConfig::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// .cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3 [json_name = "newInstantiatePermission"];
inline bool MsgUpdateInstantiateConfig::has_new_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.new_instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgUpdateInstantiateConfig::_internal_new_instantiate_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.new_instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgUpdateInstantiateConfig::new_instantiate_permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
  return _internal_new_instantiate_permission();
}
inline void MsgUpdateInstantiateConfig::unsafe_arena_set_allocated_new_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.new_instantiate_permission_);
  }
  _impl_.new_instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::release_new_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* released = _impl_.new_instantiate_permission_;
  _impl_.new_instantiate_permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::unsafe_arena_release_new_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.new_instantiate_permission_;
  _impl_.new_instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::_internal_mutable_new_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.new_instantiate_permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::AccessConfig>(GetArena());
    _impl_.new_instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(p);
  }
  return _impl_.new_instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgUpdateInstantiateConfig::mutable_new_instantiate_permission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_new_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
  return _msg;
}
inline void MsgUpdateInstantiateConfig::set_allocated_new_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.new_instantiate_permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.new_instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateInstantiateConfig.new_instantiate_permission)
}

// -------------------------------------------------------------------

// MsgUpdateInstantiateConfigResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateParams.authority)
}

// .cosmwasm.wasm.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::Params&>(::cosmwasm::wasm::v1::_Params_default_instance_);
}
inline const ::cosmwasm::wasm::v1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::cosmwasm::wasm::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmwasm::wasm::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgUpdateParams.params)
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmwasm::wasm::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmwasm::wasm::v1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::cosmwasm::wasm::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmwasm::wasm::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

// -------------------------------------------------------------------

// MsgSudoContract

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSudoContract::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgSudoContract::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContract.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContract::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContract.authority)
}
inline std::string* MsgSudoContract::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContract.authority)
  return _s;
}
inline const std::string& MsgSudoContract::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgSudoContract::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgSudoContract::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgSudoContract::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContract.authority)
  return _impl_.authority_.Release();
}
inline void MsgSudoContract::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContract.authority)
}

// string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSudoContract::clear_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgSudoContract::contract() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContract.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContract::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContract.contract)
}
inline std::string* MsgSudoContract::mutable_contract() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContract.contract)
  return _s;
}
inline const std::string& MsgSudoContract::_internal_contract() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_.Get();
}
inline void MsgSudoContract::_internal_set_contract(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(value, GetArena());
}
inline std::string* MsgSudoContract::_internal_mutable_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_.Mutable( GetArena());
}
inline std::string* MsgSudoContract::release_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContract.contract)
  return _impl_.contract_.Release();
}
inline void MsgSudoContract::set_allocated_contract(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_.IsDefault()) {
    _impl_.contract_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContract.contract)
}

// bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void MsgSudoContract::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgSudoContract::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContract.msg)
}
inline std::string* MsgSudoContract::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContract.msg)
  return _s;
}
inline const std::string& MsgSudoContract::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void MsgSudoContract::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* MsgSudoContract::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* MsgSudoContract::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgSudoContract::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContract.msg)
}

// -------------------------------------------------------------------

// MsgSudoContractResponse

// bytes data = 1 [json_name = "data"];
inline void MsgSudoContractResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgSudoContractResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSudoContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
}
inline std::string* MsgSudoContractResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
  return _s;
}
inline const std::string& MsgSudoContractResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgSudoContractResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgSudoContractResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgSudoContractResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgSudoContractResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgSudoContractResponse.data)
}

// -------------------------------------------------------------------

// MsgPinCodes

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgPinCodes::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgPinCodes::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgPinCodes.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgPinCodes::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgPinCodes.authority)
}
inline std::string* MsgPinCodes::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgPinCodes.authority)
  return _s;
}
inline const std::string& MsgPinCodes::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgPinCodes::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgPinCodes::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgPinCodes::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgPinCodes.authority)
  return _impl_.authority_.Release();
}
inline void MsgPinCodes::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgPinCodes.authority)
}

// repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
inline int MsgPinCodes::_internal_code_ids_size() const {
  return _internal_code_ids().size();
}
inline int MsgPinCodes::code_ids_size() const {
  return _internal_code_ids_size();
}
inline void MsgPinCodes::clear_code_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ids_.Clear();
}
inline ::uint64_t MsgPinCodes::code_ids(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
  return _internal_code_ids().Get(index);
}
inline void MsgPinCodes::set_code_ids(int index, ::uint64_t value) {
  _internal_mutable_code_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
}
inline void MsgPinCodes::add_code_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_code_ids()->Add(value);
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& MsgPinCodes::code_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
  return _internal_code_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* MsgPinCodes::mutable_code_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgPinCodes.code_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_code_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
MsgPinCodes::_internal_code_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* MsgPinCodes::_internal_mutable_code_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.code_ids_;
}

// -------------------------------------------------------------------

// MsgPinCodesResponse

// -------------------------------------------------------------------

// MsgUnpinCodes

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUnpinCodes::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUnpinCodes::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUnpinCodes::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
}
inline std::string* MsgUnpinCodes::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
  return _s;
}
inline const std::string& MsgUnpinCodes::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgUnpinCodes::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgUnpinCodes::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgUnpinCodes::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
  return _impl_.authority_.Release();
}
inline void MsgUnpinCodes::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUnpinCodes.authority)
}

// repeated uint64 code_ids = 2 [json_name = "codeIds", (.gogoproto.customname) = "CodeIDs", (.gogoproto.moretags) = "yaml:\"code_ids\""];
inline int MsgUnpinCodes::_internal_code_ids_size() const {
  return _internal_code_ids().size();
}
inline int MsgUnpinCodes::code_ids_size() const {
  return _internal_code_ids_size();
}
inline void MsgUnpinCodes::clear_code_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ids_.Clear();
}
inline ::uint64_t MsgUnpinCodes::code_ids(int index) const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
  return _internal_code_ids().Get(index);
}
inline void MsgUnpinCodes::set_code_ids(int index, ::uint64_t value) {
  _internal_mutable_code_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
}
inline void MsgUnpinCodes::add_code_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_code_ids()->Add(value);
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& MsgUnpinCodes::code_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
  return _internal_code_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* MsgUnpinCodes::mutable_code_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgUnpinCodes.code_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_code_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
MsgUnpinCodes::_internal_code_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* MsgUnpinCodes::_internal_mutable_code_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.code_ids_;
}

// -------------------------------------------------------------------

// MsgUnpinCodesResponse

// -------------------------------------------------------------------

// MsgStoreAndInstantiateContract

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgStoreAndInstantiateContract::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
  return _impl_.authority_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.authority)
}

// bytes wasm_byte_code = 3 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
inline void MsgStoreAndInstantiateContract::clear_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::wasm_byte_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
  return _internal_wasm_byte_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_wasm_byte_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_wasm_byte_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wasm_byte_code();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_wasm_byte_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wasm_byte_code_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_wasm_byte_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wasm_byte_code_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
  return _impl_.wasm_byte_code_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_wasm_byte_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.wasm_byte_code_.IsDefault()) {
    _impl_.wasm_byte_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.wasm_byte_code)
}

// .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 4 [json_name = "instantiatePermission"];
inline bool MsgStoreAndInstantiateContract::has_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreAndInstantiateContract::_internal_instantiate_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreAndInstantiateContract::instantiate_permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
  return _internal_instantiate_permission();
}
inline void MsgStoreAndInstantiateContract::unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }
  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* released = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::unsafe_arena_release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::_internal_mutable_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::AccessConfig>(GetArena());
    _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(p);
  }
  return _impl_.instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndInstantiateContract::mutable_instantiate_permission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
  return _msg;
}
inline void MsgStoreAndInstantiateContract::set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.instantiate_permission)
}

// bool unpin_code = 5 [json_name = "unpinCode"];
inline void MsgStoreAndInstantiateContract::clear_unpin_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpin_code_ = false;
}
inline bool MsgStoreAndInstantiateContract::unpin_code() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.unpin_code)
  return _internal_unpin_code();
}
inline void MsgStoreAndInstantiateContract::set_unpin_code(bool value) {
  _internal_set_unpin_code(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.unpin_code)
}
inline bool MsgStoreAndInstantiateContract::_internal_unpin_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unpin_code_;
}
inline void MsgStoreAndInstantiateContract::_internal_set_unpin_code(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unpin_code_ = value;
}

// string admin = 6 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgStoreAndInstantiateContract::clear_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
  return _internal_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_admin();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.admin_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.admin_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
  return _impl_.admin_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.admin_.IsDefault()) {
    _impl_.admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.admin)
}

// string label = 7 [json_name = "label"];
inline void MsgStoreAndInstantiateContract::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
  return _impl_.label_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.label_.IsDefault()) {
    _impl_.label_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.label)
}

// bytes msg = 8 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void MsgStoreAndInstantiateContract::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.msg)
}

// repeated .cosmos.base.v1beta1.Coin funds = 9 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int MsgStoreAndInstantiateContract::_internal_funds_size() const {
  return _internal_funds().size();
}
inline int MsgStoreAndInstantiateContract::funds_size() const {
  return _internal_funds_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgStoreAndInstantiateContract::mutable_funds(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _internal_mutable_funds()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgStoreAndInstantiateContract::mutable_funds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_funds();
}
inline const ::cosmos::base::v1beta1::Coin& MsgStoreAndInstantiateContract::funds(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _internal_funds().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgStoreAndInstantiateContract::add_funds() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_funds()->Add();
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgStoreAndInstantiateContract::funds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.funds)
  return _internal_funds();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgStoreAndInstantiateContract::_internal_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funds_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgStoreAndInstantiateContract::_internal_mutable_funds() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.funds_;
}

// string source = 10 [json_name = "source"];
inline void MsgStoreAndInstantiateContract::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_source(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_source(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
  return _impl_.source_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_source(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_.IsDefault()) {
    _impl_.source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.source)
}

// string builder = 11 [json_name = "builder"];
inline void MsgStoreAndInstantiateContract::clear_builder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.builder_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::builder() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
  return _internal_builder();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_builder(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.builder_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_builder() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_builder();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_builder() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.builder_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_builder(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.builder_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_builder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.builder_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_builder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
  return _impl_.builder_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_builder(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.builder_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.builder_.IsDefault()) {
    _impl_.builder_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.builder)
}

// bytes code_hash = 12 [json_name = "codeHash"];
inline void MsgStoreAndInstantiateContract::clear_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContract::code_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
  return _internal_code_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContract::set_code_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
}
inline std::string* MsgStoreAndInstantiateContract::mutable_code_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code_hash();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContract::_internal_code_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_hash_.Get();
}
inline void MsgStoreAndInstantiateContract::_internal_set_code_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::_internal_mutable_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_hash_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContract::release_code_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
  return _impl_.code_hash_.Release();
}
inline void MsgStoreAndInstantiateContract::set_allocated_code_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.code_hash_.IsDefault()) {
    _impl_.code_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContract.code_hash)
}

// -------------------------------------------------------------------

// MsgStoreAndInstantiateContractResponse

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgStoreAndInstantiateContractResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContractResponse::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContractResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
}
inline std::string* MsgStoreAndInstantiateContractResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContractResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void MsgStoreAndInstantiateContractResponse::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContractResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContractResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
  return _impl_.address_.Release();
}
inline void MsgStoreAndInstantiateContractResponse::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.address)
}

// bytes data = 2 [json_name = "data"];
inline void MsgStoreAndInstantiateContractResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgStoreAndInstantiateContractResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndInstantiateContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
}
inline std::string* MsgStoreAndInstantiateContractResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
  return _s;
}
inline const std::string& MsgStoreAndInstantiateContractResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgStoreAndInstantiateContractResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgStoreAndInstantiateContractResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgStoreAndInstantiateContractResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgStoreAndInstantiateContractResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndInstantiateContractResponse.data)
}

// -------------------------------------------------------------------

// MsgAddCodeUploadParamsAddresses

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgAddCodeUploadParamsAddresses::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgAddCodeUploadParamsAddresses::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgAddCodeUploadParamsAddresses::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
}
inline std::string* MsgAddCodeUploadParamsAddresses::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
  return _s;
}
inline const std::string& MsgAddCodeUploadParamsAddresses::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgAddCodeUploadParamsAddresses::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgAddCodeUploadParamsAddresses::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgAddCodeUploadParamsAddresses::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
  return _impl_.authority_.Release();
}
inline void MsgAddCodeUploadParamsAddresses::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.authority)
}

// repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
inline int MsgAddCodeUploadParamsAddresses::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int MsgAddCodeUploadParamsAddresses::addresses_size() const {
  return _internal_addresses_size();
}
inline void MsgAddCodeUploadParamsAddresses::clear_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addresses_.Clear();
}
inline std::string* MsgAddCodeUploadParamsAddresses::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _s;
}
inline const std::string& MsgAddCodeUploadParamsAddresses::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _internal_addresses().Get(index);
}
inline std::string* MsgAddCodeUploadParamsAddresses::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void MsgAddCodeUploadParamsAddresses::set_addresses(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_addresses()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
template <typename Arg_, typename... Args_>
inline void MsgAddCodeUploadParamsAddresses::add_addresses(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_addresses(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MsgAddCodeUploadParamsAddresses::addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  return _internal_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MsgAddCodeUploadParamsAddresses::mutable_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgAddCodeUploadParamsAddresses.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MsgAddCodeUploadParamsAddresses::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MsgAddCodeUploadParamsAddresses::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// -------------------------------------------------------------------

// MsgAddCodeUploadParamsAddressesResponse

// -------------------------------------------------------------------

// MsgRemoveCodeUploadParamsAddresses

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRemoveCodeUploadParamsAddresses::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgRemoveCodeUploadParamsAddresses::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRemoveCodeUploadParamsAddresses::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
  return _s;
}
inline const std::string& MsgRemoveCodeUploadParamsAddresses::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgRemoveCodeUploadParamsAddresses::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
  return _impl_.authority_.Release();
}
inline void MsgRemoveCodeUploadParamsAddresses::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.authority)
}

// repeated string addresses = 2 [json_name = "addresses", (.gogoproto.moretags) = "yaml:\"addresses\""];
inline int MsgRemoveCodeUploadParamsAddresses::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int MsgRemoveCodeUploadParamsAddresses::addresses_size() const {
  return _internal_addresses_size();
}
inline void MsgRemoveCodeUploadParamsAddresses::clear_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addresses_.Clear();
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _s;
}
inline const std::string& MsgRemoveCodeUploadParamsAddresses::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _internal_addresses().Get(index);
}
inline std::string* MsgRemoveCodeUploadParamsAddresses::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void MsgRemoveCodeUploadParamsAddresses::set_addresses(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_addresses()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
template <typename Arg_, typename... Args_>
inline void MsgRemoveCodeUploadParamsAddresses::add_addresses(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_addresses(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MsgRemoveCodeUploadParamsAddresses::addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  return _internal_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MsgRemoveCodeUploadParamsAddresses::mutable_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmwasm.wasm.v1.MsgRemoveCodeUploadParamsAddresses.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MsgRemoveCodeUploadParamsAddresses::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MsgRemoveCodeUploadParamsAddresses::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// -------------------------------------------------------------------

// MsgRemoveCodeUploadParamsAddressesResponse

// -------------------------------------------------------------------

// MsgStoreAndMigrateContract

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgStoreAndMigrateContract::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgStoreAndMigrateContract::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndMigrateContract::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.authority)
}
inline std::string* MsgStoreAndMigrateContract::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.authority)
  return _s;
}
inline const std::string& MsgStoreAndMigrateContract::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgStoreAndMigrateContract::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgStoreAndMigrateContract::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgStoreAndMigrateContract::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.authority)
  return _impl_.authority_.Release();
}
inline void MsgStoreAndMigrateContract::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.authority)
}

// bytes wasm_byte_code = 2 [json_name = "wasmByteCode", (.gogoproto.customname) = "WASMByteCode"];
inline void MsgStoreAndMigrateContract::clear_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.ClearToEmpty();
}
inline const std::string& MsgStoreAndMigrateContract::wasm_byte_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.wasm_byte_code)
  return _internal_wasm_byte_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndMigrateContract::set_wasm_byte_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.wasm_byte_code)
}
inline std::string* MsgStoreAndMigrateContract::mutable_wasm_byte_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_wasm_byte_code();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.wasm_byte_code)
  return _s;
}
inline const std::string& MsgStoreAndMigrateContract::_internal_wasm_byte_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wasm_byte_code_.Get();
}
inline void MsgStoreAndMigrateContract::_internal_set_wasm_byte_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.Set(value, GetArena());
}
inline std::string* MsgStoreAndMigrateContract::_internal_mutable_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.wasm_byte_code_.Mutable( GetArena());
}
inline std::string* MsgStoreAndMigrateContract::release_wasm_byte_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.wasm_byte_code)
  return _impl_.wasm_byte_code_.Release();
}
inline void MsgStoreAndMigrateContract::set_allocated_wasm_byte_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wasm_byte_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.wasm_byte_code_.IsDefault()) {
    _impl_.wasm_byte_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.wasm_byte_code)
}

// .cosmwasm.wasm.v1.AccessConfig instantiate_permission = 3 [json_name = "instantiatePermission"];
inline bool MsgStoreAndMigrateContract::has_instantiate_permission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.instantiate_permission_ != nullptr);
  return value;
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreAndMigrateContract::_internal_instantiate_permission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmwasm::wasm::v1::AccessConfig* p = _impl_.instantiate_permission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmwasm::wasm::v1::AccessConfig&>(::cosmwasm::wasm::v1::_AccessConfig_default_instance_);
}
inline const ::cosmwasm::wasm::v1::AccessConfig& MsgStoreAndMigrateContract::instantiate_permission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.instantiate_permission)
  return _internal_instantiate_permission();
}
inline void MsgStoreAndMigrateContract::unsafe_arena_set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }
  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.instantiate_permission)
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndMigrateContract::release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* released = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndMigrateContract::unsafe_arena_release_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.instantiate_permission)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* temp = _impl_.instantiate_permission_;
  _impl_.instantiate_permission_ = nullptr;
  return temp;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndMigrateContract::_internal_mutable_instantiate_permission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.instantiate_permission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmwasm::wasm::v1::AccessConfig>(GetArena());
    _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(p);
  }
  return _impl_.instantiate_permission_;
}
inline ::cosmwasm::wasm::v1::AccessConfig* MsgStoreAndMigrateContract::mutable_instantiate_permission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmwasm::wasm::v1::AccessConfig* _msg = _internal_mutable_instantiate_permission();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.instantiate_permission)
  return _msg;
}
inline void MsgStoreAndMigrateContract::set_allocated_instantiate_permission(::cosmwasm::wasm::v1::AccessConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.instantiate_permission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.instantiate_permission_ = reinterpret_cast<::cosmwasm::wasm::v1::AccessConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.instantiate_permission)
}

// string contract = 4 [json_name = "contract"];
inline void MsgStoreAndMigrateContract::clear_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgStoreAndMigrateContract::contract() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndMigrateContract::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.contract)
}
inline std::string* MsgStoreAndMigrateContract::mutable_contract() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.contract)
  return _s;
}
inline const std::string& MsgStoreAndMigrateContract::_internal_contract() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_.Get();
}
inline void MsgStoreAndMigrateContract::_internal_set_contract(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(value, GetArena());
}
inline std::string* MsgStoreAndMigrateContract::_internal_mutable_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_.Mutable( GetArena());
}
inline std::string* MsgStoreAndMigrateContract::release_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.contract)
  return _impl_.contract_.Release();
}
inline void MsgStoreAndMigrateContract::set_allocated_contract(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_.IsDefault()) {
    _impl_.contract_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.contract)
}

// bytes msg = 5 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];
inline void MsgStoreAndMigrateContract::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& MsgStoreAndMigrateContract::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndMigrateContract::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.msg)
}
inline std::string* MsgStoreAndMigrateContract::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.msg)
  return _s;
}
inline const std::string& MsgStoreAndMigrateContract::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void MsgStoreAndMigrateContract::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* MsgStoreAndMigrateContract::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* MsgStoreAndMigrateContract::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.msg)
  return _impl_.msg_.Release();
}
inline void MsgStoreAndMigrateContract::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContract.msg)
}

// -------------------------------------------------------------------

// MsgStoreAndMigrateContractResponse

// uint64 code_id = 1 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
inline void MsgStoreAndMigrateContractResponse::clear_code_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgStoreAndMigrateContractResponse::code_id() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.code_id)
  return _internal_code_id();
}
inline void MsgStoreAndMigrateContractResponse::set_code_id(::uint64_t value) {
  _internal_set_code_id(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.code_id)
}
inline ::uint64_t MsgStoreAndMigrateContractResponse::_internal_code_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_id_;
}
inline void MsgStoreAndMigrateContractResponse::_internal_set_code_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_id_ = value;
}

// bytes checksum = 2 [json_name = "checksum"];
inline void MsgStoreAndMigrateContractResponse::clear_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.ClearToEmpty();
}
inline const std::string& MsgStoreAndMigrateContractResponse::checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.checksum)
  return _internal_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndMigrateContractResponse::set_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.checksum)
}
inline std::string* MsgStoreAndMigrateContractResponse::mutable_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_checksum();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.checksum)
  return _s;
}
inline const std::string& MsgStoreAndMigrateContractResponse::_internal_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_.Get();
}
inline void MsgStoreAndMigrateContractResponse::_internal_set_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.Set(value, GetArena());
}
inline std::string* MsgStoreAndMigrateContractResponse::_internal_mutable_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.checksum_.Mutable( GetArena());
}
inline std::string* MsgStoreAndMigrateContractResponse::release_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.checksum)
  return _impl_.checksum_.Release();
}
inline void MsgStoreAndMigrateContractResponse::set_allocated_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.checksum_.IsDefault()) {
    _impl_.checksum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.checksum)
}

// bytes data = 3 [json_name = "data"];
inline void MsgStoreAndMigrateContractResponse::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgStoreAndMigrateContractResponse::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgStoreAndMigrateContractResponse::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.data)
}
inline std::string* MsgStoreAndMigrateContractResponse::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.data)
  return _s;
}
inline const std::string& MsgStoreAndMigrateContractResponse::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgStoreAndMigrateContractResponse::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgStoreAndMigrateContractResponse::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgStoreAndMigrateContractResponse::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.data)
  return _impl_.data_.Release();
}
inline void MsgStoreAndMigrateContractResponse::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgStoreAndMigrateContractResponse.data)
}

// -------------------------------------------------------------------

// MsgUpdateContractLabel

// string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateContractLabel::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgUpdateContractLabel::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateContractLabel.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateContractLabel::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateContractLabel.sender)
}
inline std::string* MsgUpdateContractLabel::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateContractLabel.sender)
  return _s;
}
inline const std::string& MsgUpdateContractLabel::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgUpdateContractLabel::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgUpdateContractLabel::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgUpdateContractLabel::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateContractLabel.sender)
  return _impl_.sender_.Release();
}
inline void MsgUpdateContractLabel::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateContractLabel.sender)
}

// string new_label = 2 [json_name = "newLabel"];
inline void MsgUpdateContractLabel::clear_new_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_label_.ClearToEmpty();
}
inline const std::string& MsgUpdateContractLabel::new_label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateContractLabel.new_label)
  return _internal_new_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateContractLabel::set_new_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateContractLabel.new_label)
}
inline std::string* MsgUpdateContractLabel::mutable_new_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_label();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateContractLabel.new_label)
  return _s;
}
inline const std::string& MsgUpdateContractLabel::_internal_new_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_label_.Get();
}
inline void MsgUpdateContractLabel::_internal_set_new_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_label_.Set(value, GetArena());
}
inline std::string* MsgUpdateContractLabel::_internal_mutable_new_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_label_.Mutable( GetArena());
}
inline std::string* MsgUpdateContractLabel::release_new_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateContractLabel.new_label)
  return _impl_.new_label_.Release();
}
inline void MsgUpdateContractLabel::set_allocated_new_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_label_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_label_.IsDefault()) {
    _impl_.new_label_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateContractLabel.new_label)
}

// string contract = 3 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateContractLabel::clear_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.ClearToEmpty();
}
inline const std::string& MsgUpdateContractLabel::contract() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgUpdateContractLabel.contract)
  return _internal_contract();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateContractLabel::set_contract(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgUpdateContractLabel.contract)
}
inline std::string* MsgUpdateContractLabel::mutable_contract() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_contract();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgUpdateContractLabel.contract)
  return _s;
}
inline const std::string& MsgUpdateContractLabel::_internal_contract() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.contract_.Get();
}
inline void MsgUpdateContractLabel::_internal_set_contract(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.Set(value, GetArena());
}
inline std::string* MsgUpdateContractLabel::_internal_mutable_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.contract_.Mutable( GetArena());
}
inline std::string* MsgUpdateContractLabel::release_contract() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgUpdateContractLabel.contract)
  return _impl_.contract_.Release();
}
inline void MsgUpdateContractLabel::set_allocated_contract(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.contract_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.contract_.IsDefault()) {
    _impl_.contract_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgUpdateContractLabel.contract)
}

// -------------------------------------------------------------------

// MsgUpdateContractLabelResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmwasm_2fwasm_2fv1_2ftx_2eproto_2epb_2eh
