// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmwasm/wasm/v1/ibc.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmwasm_2fwasm_2fv1_2fibc_2eproto_2epb_2eh
#define cosmwasm_2fwasm_2fv1_2fibc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmwasm_2fwasm_2fv1_2fibc_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmwasm_2fwasm_2fv1_2fibc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmwasm_2fwasm_2fv1_2fibc_2eproto;
namespace cosmwasm {
namespace wasm {
namespace v1 {
class MsgIBCCloseChannel;
struct MsgIBCCloseChannelDefaultTypeInternal;
extern MsgIBCCloseChannelDefaultTypeInternal _MsgIBCCloseChannel_default_instance_;
class MsgIBCSend;
struct MsgIBCSendDefaultTypeInternal;
extern MsgIBCSendDefaultTypeInternal _MsgIBCSend_default_instance_;
class MsgIBCSendResponse;
struct MsgIBCSendResponseDefaultTypeInternal;
extern MsgIBCSendResponseDefaultTypeInternal _MsgIBCSendResponse_default_instance_;
class MsgIBCWriteAcknowledgementResponse;
struct MsgIBCWriteAcknowledgementResponseDefaultTypeInternal;
extern MsgIBCWriteAcknowledgementResponseDefaultTypeInternal _MsgIBCWriteAcknowledgementResponse_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmwasm {
namespace wasm {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgIBCWriteAcknowledgementResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgIBCWriteAcknowledgementResponse) */ {
 public:
  inline MsgIBCWriteAcknowledgementResponse() : MsgIBCWriteAcknowledgementResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgIBCWriteAcknowledgementResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgIBCWriteAcknowledgementResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgIBCWriteAcknowledgementResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgIBCWriteAcknowledgementResponse(const MsgIBCWriteAcknowledgementResponse& from) : MsgIBCWriteAcknowledgementResponse(nullptr, from) {}
  inline MsgIBCWriteAcknowledgementResponse(MsgIBCWriteAcknowledgementResponse&& from) noexcept
      : MsgIBCWriteAcknowledgementResponse(nullptr, std::move(from)) {}
  inline MsgIBCWriteAcknowledgementResponse& operator=(const MsgIBCWriteAcknowledgementResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgIBCWriteAcknowledgementResponse& operator=(MsgIBCWriteAcknowledgementResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgIBCWriteAcknowledgementResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgIBCWriteAcknowledgementResponse* internal_default_instance() {
    return reinterpret_cast<const MsgIBCWriteAcknowledgementResponse*>(
        &_MsgIBCWriteAcknowledgementResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgIBCWriteAcknowledgementResponse& a, MsgIBCWriteAcknowledgementResponse& b) { a.Swap(&b); }
  inline void Swap(MsgIBCWriteAcknowledgementResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgIBCWriteAcknowledgementResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgIBCWriteAcknowledgementResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgIBCWriteAcknowledgementResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgIBCWriteAcknowledgementResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgIBCWriteAcknowledgementResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgIBCWriteAcknowledgementResponse"; }

 protected:
  explicit MsgIBCWriteAcknowledgementResponse(::google::protobuf::Arena* arena);
  MsgIBCWriteAcknowledgementResponse(::google::protobuf::Arena* arena, const MsgIBCWriteAcknowledgementResponse& from);
  MsgIBCWriteAcknowledgementResponse(::google::protobuf::Arena* arena, MsgIBCWriteAcknowledgementResponse&& from) noexcept
      : MsgIBCWriteAcknowledgementResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgIBCWriteAcknowledgementResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgIBCWriteAcknowledgementResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fibc_2eproto;
};
// -------------------------------------------------------------------

class MsgIBCSendResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgIBCSendResponse) */ {
 public:
  inline MsgIBCSendResponse() : MsgIBCSendResponse(nullptr) {}
  ~MsgIBCSendResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgIBCSendResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgIBCSendResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgIBCSendResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgIBCSendResponse(const MsgIBCSendResponse& from) : MsgIBCSendResponse(nullptr, from) {}
  inline MsgIBCSendResponse(MsgIBCSendResponse&& from) noexcept
      : MsgIBCSendResponse(nullptr, std::move(from)) {}
  inline MsgIBCSendResponse& operator=(const MsgIBCSendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgIBCSendResponse& operator=(MsgIBCSendResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgIBCSendResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgIBCSendResponse* internal_default_instance() {
    return reinterpret_cast<const MsgIBCSendResponse*>(
        &_MsgIBCSendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgIBCSendResponse& a, MsgIBCSendResponse& b) { a.Swap(&b); }
  inline void Swap(MsgIBCSendResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgIBCSendResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgIBCSendResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgIBCSendResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgIBCSendResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgIBCSendResponse& from) { MsgIBCSendResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgIBCSendResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgIBCSendResponse"; }

 protected:
  explicit MsgIBCSendResponse(::google::protobuf::Arena* arena);
  MsgIBCSendResponse(::google::protobuf::Arena* arena, const MsgIBCSendResponse& from);
  MsgIBCSendResponse(::google::protobuf::Arena* arena, MsgIBCSendResponse&& from) noexcept
      : MsgIBCSendResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSequenceFieldNumber = 1,
  };
  // uint64 sequence = 1 [json_name = "sequence"];
  void clear_sequence() ;
  ::uint64_t sequence() const;
  void set_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_sequence() const;
  void _internal_set_sequence(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgIBCSendResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgIBCSendResponse& from_msg);
    ::uint64_t sequence_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fibc_2eproto;
};
// -------------------------------------------------------------------

class MsgIBCSend final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgIBCSend) */ {
 public:
  inline MsgIBCSend() : MsgIBCSend(nullptr) {}
  ~MsgIBCSend() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgIBCSend* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgIBCSend));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgIBCSend(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgIBCSend(const MsgIBCSend& from) : MsgIBCSend(nullptr, from) {}
  inline MsgIBCSend(MsgIBCSend&& from) noexcept
      : MsgIBCSend(nullptr, std::move(from)) {}
  inline MsgIBCSend& operator=(const MsgIBCSend& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgIBCSend& operator=(MsgIBCSend&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgIBCSend& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgIBCSend* internal_default_instance() {
    return reinterpret_cast<const MsgIBCSend*>(
        &_MsgIBCSend_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgIBCSend& a, MsgIBCSend& b) { a.Swap(&b); }
  inline void Swap(MsgIBCSend* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgIBCSend* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgIBCSend* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgIBCSend>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgIBCSend& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgIBCSend& from) { MsgIBCSend::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgIBCSend* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgIBCSend"; }

 protected:
  explicit MsgIBCSend(::google::protobuf::Arena* arena);
  MsgIBCSend(::google::protobuf::Arena* arena, const MsgIBCSend& from);
  MsgIBCSend(::google::protobuf::Arena* arena, MsgIBCSend&& from) noexcept
      : MsgIBCSend(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelFieldNumber = 2,
    kDataFieldNumber = 6,
    kTimeoutHeightFieldNumber = 4,
    kTimeoutTimestampFieldNumber = 5,
  };
  // string channel = 2 [json_name = "channel", (.gogoproto.moretags) = "yaml:\"source_channel\""];
  void clear_channel() ;
  const std::string& channel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel(Arg_&& arg, Args_... args);
  std::string* mutable_channel();
  PROTOBUF_NODISCARD std::string* release_channel();
  void set_allocated_channel(std::string* value);

  private:
  const std::string& _internal_channel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel(
      const std::string& value);
  std::string* _internal_mutable_channel();

  public:
  // bytes data = 6 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint64 timeout_height = 4 [json_name = "timeoutHeight", (.gogoproto.moretags) = "yaml:\"timeout_height\""];
  void clear_timeout_height() ;
  ::uint64_t timeout_height() const;
  void set_timeout_height(::uint64_t value);

  private:
  ::uint64_t _internal_timeout_height() const;
  void _internal_set_timeout_height(::uint64_t value);

  public:
  // uint64 timeout_timestamp = 5 [json_name = "timeoutTimestamp", (.gogoproto.moretags) = "yaml:\"timeout_timestamp\""];
  void clear_timeout_timestamp() ;
  ::uint64_t timeout_timestamp() const;
  void set_timeout_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timeout_timestamp() const;
  void _internal_set_timeout_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgIBCSend)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgIBCSend& from_msg);
    ::google::protobuf::internal::ArenaStringPtr channel_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t timeout_height_;
    ::uint64_t timeout_timestamp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fibc_2eproto;
};
// -------------------------------------------------------------------

class MsgIBCCloseChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmwasm.wasm.v1.MsgIBCCloseChannel) */ {
 public:
  inline MsgIBCCloseChannel() : MsgIBCCloseChannel(nullptr) {}
  ~MsgIBCCloseChannel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgIBCCloseChannel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgIBCCloseChannel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgIBCCloseChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgIBCCloseChannel(const MsgIBCCloseChannel& from) : MsgIBCCloseChannel(nullptr, from) {}
  inline MsgIBCCloseChannel(MsgIBCCloseChannel&& from) noexcept
      : MsgIBCCloseChannel(nullptr, std::move(from)) {}
  inline MsgIBCCloseChannel& operator=(const MsgIBCCloseChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgIBCCloseChannel& operator=(MsgIBCCloseChannel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgIBCCloseChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgIBCCloseChannel* internal_default_instance() {
    return reinterpret_cast<const MsgIBCCloseChannel*>(
        &_MsgIBCCloseChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgIBCCloseChannel& a, MsgIBCCloseChannel& b) { a.Swap(&b); }
  inline void Swap(MsgIBCCloseChannel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgIBCCloseChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgIBCCloseChannel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgIBCCloseChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgIBCCloseChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgIBCCloseChannel& from) { MsgIBCCloseChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgIBCCloseChannel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmwasm.wasm.v1.MsgIBCCloseChannel"; }

 protected:
  explicit MsgIBCCloseChannel(::google::protobuf::Arena* arena);
  MsgIBCCloseChannel(::google::protobuf::Arena* arena, const MsgIBCCloseChannel& from);
  MsgIBCCloseChannel(::google::protobuf::Arena* arena, MsgIBCCloseChannel&& from) noexcept
      : MsgIBCCloseChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelFieldNumber = 2,
  };
  // string channel = 2 [json_name = "channel", (.gogoproto.moretags) = "yaml:\"source_channel\""];
  void clear_channel() ;
  const std::string& channel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel(Arg_&& arg, Args_... args);
  std::string* mutable_channel();
  PROTOBUF_NODISCARD std::string* release_channel();
  void set_allocated_channel(std::string* value);

  private:
  const std::string& _internal_channel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel(
      const std::string& value);
  std::string* _internal_mutable_channel();

  public:
  // @@protoc_insertion_point(class_scope:cosmwasm.wasm.v1.MsgIBCCloseChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgIBCCloseChannel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr channel_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmwasm_2fwasm_2fv1_2fibc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgIBCSend

// string channel = 2 [json_name = "channel", (.gogoproto.moretags) = "yaml:\"source_channel\""];
inline void MsgIBCSend::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.ClearToEmpty();
}
inline const std::string& MsgIBCSend::channel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgIBCSend.channel)
  return _internal_channel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgIBCSend::set_channel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgIBCSend.channel)
}
inline std::string* MsgIBCSend::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgIBCSend.channel)
  return _s;
}
inline const std::string& MsgIBCSend::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_.Get();
}
inline void MsgIBCSend::_internal_set_channel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(value, GetArena());
}
inline std::string* MsgIBCSend::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_.Mutable( GetArena());
}
inline std::string* MsgIBCSend::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgIBCSend.channel)
  return _impl_.channel_.Release();
}
inline void MsgIBCSend::set_allocated_channel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.channel_.IsDefault()) {
    _impl_.channel_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgIBCSend.channel)
}

// uint64 timeout_height = 4 [json_name = "timeoutHeight", (.gogoproto.moretags) = "yaml:\"timeout_height\""];
inline void MsgIBCSend::clear_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_height_ = ::uint64_t{0u};
}
inline ::uint64_t MsgIBCSend::timeout_height() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgIBCSend.timeout_height)
  return _internal_timeout_height();
}
inline void MsgIBCSend::set_timeout_height(::uint64_t value) {
  _internal_set_timeout_height(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgIBCSend.timeout_height)
}
inline ::uint64_t MsgIBCSend::_internal_timeout_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_height_;
}
inline void MsgIBCSend::_internal_set_timeout_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_height_ = value;
}

// uint64 timeout_timestamp = 5 [json_name = "timeoutTimestamp", (.gogoproto.moretags) = "yaml:\"timeout_timestamp\""];
inline void MsgIBCSend::clear_timeout_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t MsgIBCSend::timeout_timestamp() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgIBCSend.timeout_timestamp)
  return _internal_timeout_timestamp();
}
inline void MsgIBCSend::set_timeout_timestamp(::uint64_t value) {
  _internal_set_timeout_timestamp(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgIBCSend.timeout_timestamp)
}
inline ::uint64_t MsgIBCSend::_internal_timeout_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_timestamp_;
}
inline void MsgIBCSend::_internal_set_timeout_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_timestamp_ = value;
}

// bytes data = 6 [json_name = "data"];
inline void MsgIBCSend::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& MsgIBCSend::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgIBCSend.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgIBCSend::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgIBCSend.data)
}
inline std::string* MsgIBCSend::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgIBCSend.data)
  return _s;
}
inline const std::string& MsgIBCSend::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void MsgIBCSend::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* MsgIBCSend::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* MsgIBCSend::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgIBCSend.data)
  return _impl_.data_.Release();
}
inline void MsgIBCSend::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgIBCSend.data)
}

// -------------------------------------------------------------------

// MsgIBCSendResponse

// uint64 sequence = 1 [json_name = "sequence"];
inline void MsgIBCSendResponse::clear_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = ::uint64_t{0u};
}
inline ::uint64_t MsgIBCSendResponse::sequence() const {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgIBCSendResponse.sequence)
  return _internal_sequence();
}
inline void MsgIBCSendResponse::set_sequence(::uint64_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgIBCSendResponse.sequence)
}
inline ::uint64_t MsgIBCSendResponse::_internal_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_;
}
inline void MsgIBCSendResponse::_internal_set_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = value;
}

// -------------------------------------------------------------------

// MsgIBCWriteAcknowledgementResponse

// -------------------------------------------------------------------

// MsgIBCCloseChannel

// string channel = 2 [json_name = "channel", (.gogoproto.moretags) = "yaml:\"source_channel\""];
inline void MsgIBCCloseChannel::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.ClearToEmpty();
}
inline const std::string& MsgIBCCloseChannel::channel() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmwasm.wasm.v1.MsgIBCCloseChannel.channel)
  return _internal_channel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgIBCCloseChannel::set_channel(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmwasm.wasm.v1.MsgIBCCloseChannel.channel)
}
inline std::string* MsgIBCCloseChannel::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:cosmwasm.wasm.v1.MsgIBCCloseChannel.channel)
  return _s;
}
inline const std::string& MsgIBCCloseChannel::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_.Get();
}
inline void MsgIBCCloseChannel::_internal_set_channel(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.Set(value, GetArena());
}
inline std::string* MsgIBCCloseChannel::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_.Mutable( GetArena());
}
inline std::string* MsgIBCCloseChannel::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmwasm.wasm.v1.MsgIBCCloseChannel.channel)
  return _impl_.channel_.Release();
}
inline void MsgIBCCloseChannel::set_allocated_channel(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.channel_.IsDefault()) {
    _impl_.channel_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmwasm.wasm.v1.MsgIBCCloseChannel.channel)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmwasm_2fwasm_2fv1_2fibc_2eproto_2epb_2eh
