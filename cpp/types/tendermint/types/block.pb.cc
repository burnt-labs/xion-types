// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/types/block.proto
// Protobuf C++ Version: 5.29.4

#include "tendermint/types/block.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tendermint {
namespace types {

inline constexpr Block::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        header_{nullptr},
        data_{nullptr},
        evidence_{nullptr},
        last_commit_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Block::Block(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockDefaultTypeInternal() {}
  union {
    Block _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockDefaultTypeInternal _Block_default_instance_;
}  // namespace types
}  // namespace tendermint
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_tendermint_2ftypes_2fblock_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tendermint_2ftypes_2fblock_2eproto = nullptr;
const ::uint32_t
    TableStruct_tendermint_2ftypes_2fblock_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::tendermint::types::Block, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::types::Block, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::types::Block, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::tendermint::types::Block, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tendermint::types::Block, _impl_.evidence_),
        PROTOBUF_FIELD_OFFSET(::tendermint::types::Block, _impl_.last_commit_),
        0,
        1,
        2,
        3,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::tendermint::types::Block)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tendermint::types::_Block_default_instance_._instance,
};
const char descriptor_table_protodef_tendermint_2ftypes_2fblock_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034tendermint/types/block.proto\022\020tendermi"
    "nt.types\032\024gogoproto/gogo.proto\032\034tendermi"
    "nt/types/types.proto\032\037tendermint/types/e"
    "vidence.proto\"\356\001\n\005Block\0226\n\006header\030\001 \001(\0132"
    "\030.tendermint.types.HeaderB\004\310\336\037\000R\006header\022"
    "0\n\004data\030\002 \001(\0132\026.tendermint.types.DataB\004\310"
    "\336\037\000R\004data\022@\n\010evidence\030\003 \001(\0132\036.tendermint"
    ".types.EvidenceListB\004\310\336\037\000R\010evidence\0229\n\013l"
    "ast_commit\030\004 \001(\0132\030.tendermint.types.Comm"
    "itR\nlastCommitB5Z3github.com/cometbft/co"
    "metbft/proto/tendermint/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tendermint_2ftypes_2fblock_2eproto_deps[3] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_tendermint_2ftypes_2fevidence_2eproto,
        &::descriptor_table_tendermint_2ftypes_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_tendermint_2ftypes_2fblock_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tendermint_2ftypes_2fblock_2eproto = {
    false,
    false,
    437,
    descriptor_table_protodef_tendermint_2ftypes_2fblock_2eproto,
    "tendermint/types/block.proto",
    &descriptor_table_tendermint_2ftypes_2fblock_2eproto_once,
    descriptor_table_tendermint_2ftypes_2fblock_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_tendermint_2ftypes_2fblock_2eproto::offsets,
    file_level_enum_descriptors_tendermint_2ftypes_2fblock_2eproto,
    file_level_service_descriptors_tendermint_2ftypes_2fblock_2eproto,
};
namespace tendermint {
namespace types {
// ===================================================================

class Block::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Block>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Block, _impl_._has_bits_);
};

void Block::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Block::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.data_ != nullptr) _impl_.data_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Block::clear_evidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evidence_ != nullptr) _impl_.evidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Block::clear_last_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.last_commit_ != nullptr) _impl_.last_commit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
Block::Block(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.types.Block)
}
inline PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::types::Block& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Block::Block(
    ::google::protobuf::Arena* arena,
    const Block& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Block* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::Header>(
                              arena, *from._impl_.header_)
                        : nullptr;
  _impl_.data_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::Data>(
                              arena, *from._impl_.data_)
                        : nullptr;
  _impl_.evidence_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::EvidenceList>(
                              arena, *from._impl_.evidence_)
                        : nullptr;
  _impl_.last_commit_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::Commit>(
                              arena, *from._impl_.last_commit_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tendermint.types.Block)
}
inline PROTOBUF_NDEBUG_INLINE Block::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Block::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, header_),
           0,
           offsetof(Impl_, last_commit_) -
               offsetof(Impl_, header_) +
               sizeof(Impl_::last_commit_));
}
Block::~Block() {
  // @@protoc_insertion_point(destructor:tendermint.types.Block)
  SharedDtor(*this);
}
inline void Block::SharedDtor(MessageLite& self) {
  Block& this_ = static_cast<Block&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  delete this_._impl_.data_;
  delete this_._impl_.evidence_;
  delete this_._impl_.last_commit_;
  this_._impl_.~Impl_();
}

inline void* Block::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Block(arena);
}
constexpr auto Block::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Block),
                                            alignof(Block));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Block::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Block_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Block::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Block>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Block::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Block>(), &Block::ByteSizeLong,
            &Block::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Block, _impl_._cached_size_),
        false,
    },
    &Block::kDescriptorMethods,
    &descriptor_table_tendermint_2ftypes_2fblock_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Block::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2> Block::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Block, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::types::Block>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.types.Commit last_commit = 4 [json_name = "lastCommit"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(Block, _impl_.last_commit_)}},
    // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Block, _impl_.header_)}},
    // .tendermint.types.Data data = 2 [json_name = "data", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Block, _impl_.data_)}},
    // .tendermint.types.EvidenceList evidence = 3 [json_name = "evidence", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Block, _impl_.evidence_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.types.Data data = 2 [json_name = "data", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.data_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.types.EvidenceList evidence = 3 [json_name = "evidence", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.evidence_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.types.Commit last_commit = 4 [json_name = "lastCommit"];
    {PROTOBUF_FIELD_OFFSET(Block, _impl_.last_commit_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::types::Header>()},
    {::_pbi::TcParser::GetTable<::tendermint::types::Data>()},
    {::_pbi::TcParser::GetTable<::tendermint::types::EvidenceList>()},
    {::_pbi::TcParser::GetTable<::tendermint::types::Commit>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.types.Block)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.header_ != nullptr);
      _impl_.header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.data_ != nullptr);
      _impl_.data_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.evidence_ != nullptr);
      _impl_.evidence_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.last_commit_ != nullptr);
      _impl_.last_commit_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Block::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Block& this_ = static_cast<const Block&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Block::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Block& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.types.Block)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // .tendermint.types.Data data = 2 [json_name = "data", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.data_, this_._impl_.data_->GetCachedSize(), target,
                stream);
          }

          // .tendermint.types.EvidenceList evidence = 3 [json_name = "evidence", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.evidence_, this_._impl_.evidence_->GetCachedSize(), target,
                stream);
          }

          // .tendermint.types.Commit last_commit = 4 [json_name = "lastCommit"];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.last_commit_, this_._impl_.last_commit_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.types.Block)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Block::ByteSizeLong(const MessageLite& base) {
          const Block& this_ = static_cast<const Block&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Block::ByteSizeLong() const {
          const Block& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.types.Block)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
            // .tendermint.types.Data data = 2 [json_name = "data", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.data_);
            }
            // .tendermint.types.EvidenceList evidence = 3 [json_name = "evidence", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.evidence_);
            }
            // .tendermint.types.Commit last_commit = 4 [json_name = "lastCommit"];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.last_commit_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Block::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Block*>(&to_msg);
  auto& from = static_cast<const Block&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.types.Block)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.header_ != nullptr);
      if (_this->_impl_.header_ == nullptr) {
        _this->_impl_.header_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::types::Header>(arena, *from._impl_.header_);
      } else {
        _this->_impl_.header_->MergeFrom(*from._impl_.header_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.data_ != nullptr);
      if (_this->_impl_.data_ == nullptr) {
        _this->_impl_.data_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::types::Data>(arena, *from._impl_.data_);
      } else {
        _this->_impl_.data_->MergeFrom(*from._impl_.data_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.evidence_ != nullptr);
      if (_this->_impl_.evidence_ == nullptr) {
        _this->_impl_.evidence_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::types::EvidenceList>(arena, *from._impl_.evidence_);
      } else {
        _this->_impl_.evidence_->MergeFrom(*from._impl_.evidence_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.last_commit_ != nullptr);
      if (_this->_impl_.last_commit_ == nullptr) {
        _this->_impl_.last_commit_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::types::Commit>(arena, *from._impl_.last_commit_);
      } else {
        _this->_impl_.last_commit_->MergeFrom(*from._impl_.last_commit_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.types.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Block::InternalSwap(Block* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Block, _impl_.last_commit_)
      + sizeof(Block::_impl_.last_commit_)
      - PROTOBUF_FIELD_OFFSET(Block, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::google::protobuf::Metadata Block::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace tendermint
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tendermint_2ftypes_2fblock_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
