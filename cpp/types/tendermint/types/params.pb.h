// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/types/params.proto
// Protobuf C++ Version: 5.29.4

#ifndef tendermint_2ftypes_2fparams_2eproto_2epb_2eh
#define tendermint_2ftypes_2fparams_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/duration.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tendermint_2ftypes_2fparams_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tendermint_2ftypes_2fparams_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tendermint_2ftypes_2fparams_2eproto;
namespace tendermint {
namespace types {
class ABCIParams;
struct ABCIParamsDefaultTypeInternal;
extern ABCIParamsDefaultTypeInternal _ABCIParams_default_instance_;
class BlockParams;
struct BlockParamsDefaultTypeInternal;
extern BlockParamsDefaultTypeInternal _BlockParams_default_instance_;
class ConsensusParams;
struct ConsensusParamsDefaultTypeInternal;
extern ConsensusParamsDefaultTypeInternal _ConsensusParams_default_instance_;
class EvidenceParams;
struct EvidenceParamsDefaultTypeInternal;
extern EvidenceParamsDefaultTypeInternal _EvidenceParams_default_instance_;
class HashedParams;
struct HashedParamsDefaultTypeInternal;
extern HashedParamsDefaultTypeInternal _HashedParams_default_instance_;
class ValidatorParams;
struct ValidatorParamsDefaultTypeInternal;
extern ValidatorParamsDefaultTypeInternal _ValidatorParams_default_instance_;
class VersionParams;
struct VersionParamsDefaultTypeInternal;
extern VersionParamsDefaultTypeInternal _VersionParams_default_instance_;
}  // namespace types
}  // namespace tendermint
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tendermint {
namespace types {

// ===================================================================


// -------------------------------------------------------------------

class VersionParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.types.VersionParams) */ {
 public:
  inline VersionParams() : VersionParams(nullptr) {}
  ~VersionParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VersionParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VersionParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VersionParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline VersionParams(const VersionParams& from) : VersionParams(nullptr, from) {}
  inline VersionParams(VersionParams&& from) noexcept
      : VersionParams(nullptr, std::move(from)) {}
  inline VersionParams& operator=(const VersionParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline VersionParams& operator=(VersionParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VersionParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const VersionParams* internal_default_instance() {
    return reinterpret_cast<const VersionParams*>(
        &_VersionParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(VersionParams& a, VersionParams& b) { a.Swap(&b); }
  inline void Swap(VersionParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VersionParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VersionParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VersionParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VersionParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VersionParams& from) { VersionParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VersionParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.types.VersionParams"; }

 protected:
  explicit VersionParams(::google::protobuf::Arena* arena);
  VersionParams(::google::protobuf::Arena* arena, const VersionParams& from);
  VersionParams(::google::protobuf::Arena* arena, VersionParams&& from) noexcept
      : VersionParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppFieldNumber = 1,
  };
  // uint64 app = 1 [json_name = "app"];
  void clear_app() ;
  ::uint64_t app() const;
  void set_app(::uint64_t value);

  private:
  ::uint64_t _internal_app() const;
  void _internal_set_app(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tendermint.types.VersionParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VersionParams& from_msg);
    ::uint64_t app_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2ftypes_2fparams_2eproto;
};
// -------------------------------------------------------------------

class ValidatorParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.types.ValidatorParams) */ {
 public:
  inline ValidatorParams() : ValidatorParams(nullptr) {}
  ~ValidatorParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidatorParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidatorParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidatorParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidatorParams(const ValidatorParams& from) : ValidatorParams(nullptr, from) {}
  inline ValidatorParams(ValidatorParams&& from) noexcept
      : ValidatorParams(nullptr, std::move(from)) {}
  inline ValidatorParams& operator=(const ValidatorParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidatorParams& operator=(ValidatorParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidatorParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidatorParams* internal_default_instance() {
    return reinterpret_cast<const ValidatorParams*>(
        &_ValidatorParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ValidatorParams& a, ValidatorParams& b) { a.Swap(&b); }
  inline void Swap(ValidatorParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidatorParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidatorParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidatorParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidatorParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidatorParams& from) { ValidatorParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidatorParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.types.ValidatorParams"; }

 protected:
  explicit ValidatorParams(::google::protobuf::Arena* arena);
  ValidatorParams(::google::protobuf::Arena* arena, const ValidatorParams& from);
  ValidatorParams(::google::protobuf::Arena* arena, ValidatorParams&& from) noexcept
      : ValidatorParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPubKeyTypesFieldNumber = 1,
  };
  // repeated string pub_key_types = 1 [json_name = "pubKeyTypes"];
  int pub_key_types_size() const;
  private:
  int _internal_pub_key_types_size() const;

  public:
  void clear_pub_key_types() ;
  const std::string& pub_key_types(int index) const;
  std::string* mutable_pub_key_types(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key_types(int index, Arg_&& value, Args_... args);
  std::string* add_pub_key_types();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_pub_key_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& pub_key_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_pub_key_types();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_pub_key_types() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_pub_key_types();

  public:
  // @@protoc_insertion_point(class_scope:tendermint.types.ValidatorParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidatorParams& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> pub_key_types_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2ftypes_2fparams_2eproto;
};
// -------------------------------------------------------------------

class HashedParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.types.HashedParams) */ {
 public:
  inline HashedParams() : HashedParams(nullptr) {}
  ~HashedParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HashedParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HashedParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HashedParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline HashedParams(const HashedParams& from) : HashedParams(nullptr, from) {}
  inline HashedParams(HashedParams&& from) noexcept
      : HashedParams(nullptr, std::move(from)) {}
  inline HashedParams& operator=(const HashedParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline HashedParams& operator=(HashedParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HashedParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const HashedParams* internal_default_instance() {
    return reinterpret_cast<const HashedParams*>(
        &_HashedParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(HashedParams& a, HashedParams& b) { a.Swap(&b); }
  inline void Swap(HashedParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HashedParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HashedParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HashedParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HashedParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HashedParams& from) { HashedParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HashedParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.types.HashedParams"; }

 protected:
  explicit HashedParams(::google::protobuf::Arena* arena);
  HashedParams(::google::protobuf::Arena* arena, const HashedParams& from);
  HashedParams(::google::protobuf::Arena* arena, HashedParams&& from) noexcept
      : HashedParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockMaxBytesFieldNumber = 1,
    kBlockMaxGasFieldNumber = 2,
  };
  // int64 block_max_bytes = 1 [json_name = "blockMaxBytes"];
  void clear_block_max_bytes() ;
  ::int64_t block_max_bytes() const;
  void set_block_max_bytes(::int64_t value);

  private:
  ::int64_t _internal_block_max_bytes() const;
  void _internal_set_block_max_bytes(::int64_t value);

  public:
  // int64 block_max_gas = 2 [json_name = "blockMaxGas"];
  void clear_block_max_gas() ;
  ::int64_t block_max_gas() const;
  void set_block_max_gas(::int64_t value);

  private:
  ::int64_t _internal_block_max_gas() const;
  void _internal_set_block_max_gas(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tendermint.types.HashedParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HashedParams& from_msg);
    ::int64_t block_max_bytes_;
    ::int64_t block_max_gas_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2ftypes_2fparams_2eproto;
};
// -------------------------------------------------------------------

class BlockParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.types.BlockParams) */ {
 public:
  inline BlockParams() : BlockParams(nullptr) {}
  ~BlockParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlockParams(const BlockParams& from) : BlockParams(nullptr, from) {}
  inline BlockParams(BlockParams&& from) noexcept
      : BlockParams(nullptr, std::move(from)) {}
  inline BlockParams& operator=(const BlockParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockParams& operator=(BlockParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockParams* internal_default_instance() {
    return reinterpret_cast<const BlockParams*>(
        &_BlockParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BlockParams& a, BlockParams& b) { a.Swap(&b); }
  inline void Swap(BlockParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockParams& from) { BlockParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.types.BlockParams"; }

 protected:
  explicit BlockParams(::google::protobuf::Arena* arena);
  BlockParams(::google::protobuf::Arena* arena, const BlockParams& from);
  BlockParams(::google::protobuf::Arena* arena, BlockParams&& from) noexcept
      : BlockParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMaxBytesFieldNumber = 1,
    kMaxGasFieldNumber = 2,
  };
  // int64 max_bytes = 1 [json_name = "maxBytes"];
  void clear_max_bytes() ;
  ::int64_t max_bytes() const;
  void set_max_bytes(::int64_t value);

  private:
  ::int64_t _internal_max_bytes() const;
  void _internal_set_max_bytes(::int64_t value);

  public:
  // int64 max_gas = 2 [json_name = "maxGas"];
  void clear_max_gas() ;
  ::int64_t max_gas() const;
  void set_max_gas(::int64_t value);

  private:
  ::int64_t _internal_max_gas() const;
  void _internal_set_max_gas(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tendermint.types.BlockParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlockParams& from_msg);
    ::int64_t max_bytes_;
    ::int64_t max_gas_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2ftypes_2fparams_2eproto;
};
// -------------------------------------------------------------------

class ABCIParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.types.ABCIParams) */ {
 public:
  inline ABCIParams() : ABCIParams(nullptr) {}
  ~ABCIParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ABCIParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ABCIParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ABCIParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline ABCIParams(const ABCIParams& from) : ABCIParams(nullptr, from) {}
  inline ABCIParams(ABCIParams&& from) noexcept
      : ABCIParams(nullptr, std::move(from)) {}
  inline ABCIParams& operator=(const ABCIParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ABCIParams& operator=(ABCIParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ABCIParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ABCIParams* internal_default_instance() {
    return reinterpret_cast<const ABCIParams*>(
        &_ABCIParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ABCIParams& a, ABCIParams& b) { a.Swap(&b); }
  inline void Swap(ABCIParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ABCIParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ABCIParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ABCIParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ABCIParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ABCIParams& from) { ABCIParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ABCIParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.types.ABCIParams"; }

 protected:
  explicit ABCIParams(::google::protobuf::Arena* arena);
  ABCIParams(::google::protobuf::Arena* arena, const ABCIParams& from);
  ABCIParams(::google::protobuf::Arena* arena, ABCIParams&& from) noexcept
      : ABCIParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVoteExtensionsEnableHeightFieldNumber = 1,
  };
  // int64 vote_extensions_enable_height = 1 [json_name = "voteExtensionsEnableHeight"];
  void clear_vote_extensions_enable_height() ;
  ::int64_t vote_extensions_enable_height() const;
  void set_vote_extensions_enable_height(::int64_t value);

  private:
  ::int64_t _internal_vote_extensions_enable_height() const;
  void _internal_set_vote_extensions_enable_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tendermint.types.ABCIParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ABCIParams& from_msg);
    ::int64_t vote_extensions_enable_height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2ftypes_2fparams_2eproto;
};
// -------------------------------------------------------------------

class EvidenceParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.types.EvidenceParams) */ {
 public:
  inline EvidenceParams() : EvidenceParams(nullptr) {}
  ~EvidenceParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EvidenceParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EvidenceParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EvidenceParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline EvidenceParams(const EvidenceParams& from) : EvidenceParams(nullptr, from) {}
  inline EvidenceParams(EvidenceParams&& from) noexcept
      : EvidenceParams(nullptr, std::move(from)) {}
  inline EvidenceParams& operator=(const EvidenceParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvidenceParams& operator=(EvidenceParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EvidenceParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const EvidenceParams* internal_default_instance() {
    return reinterpret_cast<const EvidenceParams*>(
        &_EvidenceParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(EvidenceParams& a, EvidenceParams& b) { a.Swap(&b); }
  inline void Swap(EvidenceParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EvidenceParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EvidenceParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EvidenceParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EvidenceParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EvidenceParams& from) { EvidenceParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EvidenceParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.types.EvidenceParams"; }

 protected:
  explicit EvidenceParams(::google::protobuf::Arena* arena);
  EvidenceParams(::google::protobuf::Arena* arena, const EvidenceParams& from);
  EvidenceParams(::google::protobuf::Arena* arena, EvidenceParams&& from) noexcept
      : EvidenceParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMaxAgeDurationFieldNumber = 2,
    kMaxAgeNumBlocksFieldNumber = 1,
    kMaxBytesFieldNumber = 3,
  };
  // .google.protobuf.Duration max_age_duration = 2 [json_name = "maxAgeDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  bool has_max_age_duration() const;
  void clear_max_age_duration() ;
  const ::google::protobuf::Duration& max_age_duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_max_age_duration();
  ::google::protobuf::Duration* mutable_max_age_duration();
  void set_allocated_max_age_duration(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_max_age_duration(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_max_age_duration();

  private:
  const ::google::protobuf::Duration& _internal_max_age_duration() const;
  ::google::protobuf::Duration* _internal_mutable_max_age_duration();

  public:
  // int64 max_age_num_blocks = 1 [json_name = "maxAgeNumBlocks"];
  void clear_max_age_num_blocks() ;
  ::int64_t max_age_num_blocks() const;
  void set_max_age_num_blocks(::int64_t value);

  private:
  ::int64_t _internal_max_age_num_blocks() const;
  void _internal_set_max_age_num_blocks(::int64_t value);

  public:
  // int64 max_bytes = 3 [json_name = "maxBytes"];
  void clear_max_bytes() ;
  ::int64_t max_bytes() const;
  void set_max_bytes(::int64_t value);

  private:
  ::int64_t _internal_max_bytes() const;
  void _internal_set_max_bytes(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tendermint.types.EvidenceParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EvidenceParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Duration* max_age_duration_;
    ::int64_t max_age_num_blocks_;
    ::int64_t max_bytes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2ftypes_2fparams_2eproto;
};
// -------------------------------------------------------------------

class ConsensusParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.types.ConsensusParams) */ {
 public:
  inline ConsensusParams() : ConsensusParams(nullptr) {}
  ~ConsensusParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConsensusParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConsensusParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConsensusParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConsensusParams(const ConsensusParams& from) : ConsensusParams(nullptr, from) {}
  inline ConsensusParams(ConsensusParams&& from) noexcept
      : ConsensusParams(nullptr, std::move(from)) {}
  inline ConsensusParams& operator=(const ConsensusParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConsensusParams& operator=(ConsensusParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConsensusParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConsensusParams* internal_default_instance() {
    return reinterpret_cast<const ConsensusParams*>(
        &_ConsensusParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ConsensusParams& a, ConsensusParams& b) { a.Swap(&b); }
  inline void Swap(ConsensusParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConsensusParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConsensusParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConsensusParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConsensusParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConsensusParams& from) { ConsensusParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConsensusParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.types.ConsensusParams"; }

 protected:
  explicit ConsensusParams(::google::protobuf::Arena* arena);
  ConsensusParams(::google::protobuf::Arena* arena, const ConsensusParams& from);
  ConsensusParams(::google::protobuf::Arena* arena, ConsensusParams&& from) noexcept
      : ConsensusParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockFieldNumber = 1,
    kEvidenceFieldNumber = 2,
    kValidatorFieldNumber = 3,
    kVersionFieldNumber = 4,
    kAbciFieldNumber = 5,
  };
  // .tendermint.types.BlockParams block = 1 [json_name = "block"];
  bool has_block() const;
  void clear_block() ;
  const ::tendermint::types::BlockParams& block() const;
  PROTOBUF_NODISCARD ::tendermint::types::BlockParams* release_block();
  ::tendermint::types::BlockParams* mutable_block();
  void set_allocated_block(::tendermint::types::BlockParams* value);
  void unsafe_arena_set_allocated_block(::tendermint::types::BlockParams* value);
  ::tendermint::types::BlockParams* unsafe_arena_release_block();

  private:
  const ::tendermint::types::BlockParams& _internal_block() const;
  ::tendermint::types::BlockParams* _internal_mutable_block();

  public:
  // .tendermint.types.EvidenceParams evidence = 2 [json_name = "evidence"];
  bool has_evidence() const;
  void clear_evidence() ;
  const ::tendermint::types::EvidenceParams& evidence() const;
  PROTOBUF_NODISCARD ::tendermint::types::EvidenceParams* release_evidence();
  ::tendermint::types::EvidenceParams* mutable_evidence();
  void set_allocated_evidence(::tendermint::types::EvidenceParams* value);
  void unsafe_arena_set_allocated_evidence(::tendermint::types::EvidenceParams* value);
  ::tendermint::types::EvidenceParams* unsafe_arena_release_evidence();

  private:
  const ::tendermint::types::EvidenceParams& _internal_evidence() const;
  ::tendermint::types::EvidenceParams* _internal_mutable_evidence();

  public:
  // .tendermint.types.ValidatorParams validator = 3 [json_name = "validator"];
  bool has_validator() const;
  void clear_validator() ;
  const ::tendermint::types::ValidatorParams& validator() const;
  PROTOBUF_NODISCARD ::tendermint::types::ValidatorParams* release_validator();
  ::tendermint::types::ValidatorParams* mutable_validator();
  void set_allocated_validator(::tendermint::types::ValidatorParams* value);
  void unsafe_arena_set_allocated_validator(::tendermint::types::ValidatorParams* value);
  ::tendermint::types::ValidatorParams* unsafe_arena_release_validator();

  private:
  const ::tendermint::types::ValidatorParams& _internal_validator() const;
  ::tendermint::types::ValidatorParams* _internal_mutable_validator();

  public:
  // .tendermint.types.VersionParams version = 4 [json_name = "version"];
  bool has_version() const;
  void clear_version() ;
  const ::tendermint::types::VersionParams& version() const;
  PROTOBUF_NODISCARD ::tendermint::types::VersionParams* release_version();
  ::tendermint::types::VersionParams* mutable_version();
  void set_allocated_version(::tendermint::types::VersionParams* value);
  void unsafe_arena_set_allocated_version(::tendermint::types::VersionParams* value);
  ::tendermint::types::VersionParams* unsafe_arena_release_version();

  private:
  const ::tendermint::types::VersionParams& _internal_version() const;
  ::tendermint::types::VersionParams* _internal_mutable_version();

  public:
  // .tendermint.types.ABCIParams abci = 5 [json_name = "abci"];
  bool has_abci() const;
  void clear_abci() ;
  const ::tendermint::types::ABCIParams& abci() const;
  PROTOBUF_NODISCARD ::tendermint::types::ABCIParams* release_abci();
  ::tendermint::types::ABCIParams* mutable_abci();
  void set_allocated_abci(::tendermint::types::ABCIParams* value);
  void unsafe_arena_set_allocated_abci(::tendermint::types::ABCIParams* value);
  ::tendermint::types::ABCIParams* unsafe_arena_release_abci();

  private:
  const ::tendermint::types::ABCIParams& _internal_abci() const;
  ::tendermint::types::ABCIParams* _internal_mutable_abci();

  public:
  // @@protoc_insertion_point(class_scope:tendermint.types.ConsensusParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 5,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConsensusParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tendermint::types::BlockParams* block_;
    ::tendermint::types::EvidenceParams* evidence_;
    ::tendermint::types::ValidatorParams* validator_;
    ::tendermint::types::VersionParams* version_;
    ::tendermint::types::ABCIParams* abci_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2ftypes_2fparams_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConsensusParams

// .tendermint.types.BlockParams block = 1 [json_name = "block"];
inline bool ConsensusParams::has_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_ != nullptr);
  return value;
}
inline void ConsensusParams::clear_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_ != nullptr) _impl_.block_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::tendermint::types::BlockParams& ConsensusParams::_internal_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::BlockParams* p = _impl_.block_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::BlockParams&>(::tendermint::types::_BlockParams_default_instance_);
}
inline const ::tendermint::types::BlockParams& ConsensusParams::block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.types.ConsensusParams.block)
  return _internal_block();
}
inline void ConsensusParams::unsafe_arena_set_allocated_block(::tendermint::types::BlockParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_);
  }
  _impl_.block_ = reinterpret_cast<::tendermint::types::BlockParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tendermint.types.ConsensusParams.block)
}
inline ::tendermint::types::BlockParams* ConsensusParams::release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockParams* released = _impl_.block_;
  _impl_.block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::BlockParams* ConsensusParams::unsafe_arena_release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tendermint.types.ConsensusParams.block)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockParams* temp = _impl_.block_;
  _impl_.block_ = nullptr;
  return temp;
}
inline ::tendermint::types::BlockParams* ConsensusParams::_internal_mutable_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::BlockParams>(GetArena());
    _impl_.block_ = reinterpret_cast<::tendermint::types::BlockParams*>(p);
  }
  return _impl_.block_;
}
inline ::tendermint::types::BlockParams* ConsensusParams::mutable_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::types::BlockParams* _msg = _internal_mutable_block();
  // @@protoc_insertion_point(field_mutable:tendermint.types.ConsensusParams.block)
  return _msg;
}
inline void ConsensusParams::set_allocated_block(::tendermint::types::BlockParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.block_ = reinterpret_cast<::tendermint::types::BlockParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:tendermint.types.ConsensusParams.block)
}

// .tendermint.types.EvidenceParams evidence = 2 [json_name = "evidence"];
inline bool ConsensusParams::has_evidence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.evidence_ != nullptr);
  return value;
}
inline void ConsensusParams::clear_evidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evidence_ != nullptr) _impl_.evidence_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::tendermint::types::EvidenceParams& ConsensusParams::_internal_evidence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::EvidenceParams* p = _impl_.evidence_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::EvidenceParams&>(::tendermint::types::_EvidenceParams_default_instance_);
}
inline const ::tendermint::types::EvidenceParams& ConsensusParams::evidence() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.types.ConsensusParams.evidence)
  return _internal_evidence();
}
inline void ConsensusParams::unsafe_arena_set_allocated_evidence(::tendermint::types::EvidenceParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.evidence_);
  }
  _impl_.evidence_ = reinterpret_cast<::tendermint::types::EvidenceParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tendermint.types.ConsensusParams.evidence)
}
inline ::tendermint::types::EvidenceParams* ConsensusParams::release_evidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::EvidenceParams* released = _impl_.evidence_;
  _impl_.evidence_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::EvidenceParams* ConsensusParams::unsafe_arena_release_evidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tendermint.types.ConsensusParams.evidence)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::EvidenceParams* temp = _impl_.evidence_;
  _impl_.evidence_ = nullptr;
  return temp;
}
inline ::tendermint::types::EvidenceParams* ConsensusParams::_internal_mutable_evidence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.evidence_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::EvidenceParams>(GetArena());
    _impl_.evidence_ = reinterpret_cast<::tendermint::types::EvidenceParams*>(p);
  }
  return _impl_.evidence_;
}
inline ::tendermint::types::EvidenceParams* ConsensusParams::mutable_evidence() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tendermint::types::EvidenceParams* _msg = _internal_mutable_evidence();
  // @@protoc_insertion_point(field_mutable:tendermint.types.ConsensusParams.evidence)
  return _msg;
}
inline void ConsensusParams::set_allocated_evidence(::tendermint::types::EvidenceParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.evidence_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.evidence_ = reinterpret_cast<::tendermint::types::EvidenceParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:tendermint.types.ConsensusParams.evidence)
}

// .tendermint.types.ValidatorParams validator = 3 [json_name = "validator"];
inline bool ConsensusParams::has_validator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.validator_ != nullptr);
  return value;
}
inline void ConsensusParams::clear_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validator_ != nullptr) _impl_.validator_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::tendermint::types::ValidatorParams& ConsensusParams::_internal_validator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::ValidatorParams* p = _impl_.validator_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::ValidatorParams&>(::tendermint::types::_ValidatorParams_default_instance_);
}
inline const ::tendermint::types::ValidatorParams& ConsensusParams::validator() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.types.ConsensusParams.validator)
  return _internal_validator();
}
inline void ConsensusParams::unsafe_arena_set_allocated_validator(::tendermint::types::ValidatorParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validator_);
  }
  _impl_.validator_ = reinterpret_cast<::tendermint::types::ValidatorParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tendermint.types.ConsensusParams.validator)
}
inline ::tendermint::types::ValidatorParams* ConsensusParams::release_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tendermint::types::ValidatorParams* released = _impl_.validator_;
  _impl_.validator_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::ValidatorParams* ConsensusParams::unsafe_arena_release_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tendermint.types.ConsensusParams.validator)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::tendermint::types::ValidatorParams* temp = _impl_.validator_;
  _impl_.validator_ = nullptr;
  return temp;
}
inline ::tendermint::types::ValidatorParams* ConsensusParams::_internal_mutable_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validator_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::ValidatorParams>(GetArena());
    _impl_.validator_ = reinterpret_cast<::tendermint::types::ValidatorParams*>(p);
  }
  return _impl_.validator_;
}
inline ::tendermint::types::ValidatorParams* ConsensusParams::mutable_validator() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::tendermint::types::ValidatorParams* _msg = _internal_mutable_validator();
  // @@protoc_insertion_point(field_mutable:tendermint.types.ConsensusParams.validator)
  return _msg;
}
inline void ConsensusParams::set_allocated_validator(::tendermint::types::ValidatorParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.validator_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.validator_ = reinterpret_cast<::tendermint::types::ValidatorParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:tendermint.types.ConsensusParams.validator)
}

// .tendermint.types.VersionParams version = 4 [json_name = "version"];
inline bool ConsensusParams::has_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.version_ != nullptr);
  return value;
}
inline void ConsensusParams::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_ != nullptr) _impl_.version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::tendermint::types::VersionParams& ConsensusParams::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::VersionParams* p = _impl_.version_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::VersionParams&>(::tendermint::types::_VersionParams_default_instance_);
}
inline const ::tendermint::types::VersionParams& ConsensusParams::version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.types.ConsensusParams.version)
  return _internal_version();
}
inline void ConsensusParams::unsafe_arena_set_allocated_version(::tendermint::types::VersionParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.version_);
  }
  _impl_.version_ = reinterpret_cast<::tendermint::types::VersionParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tendermint.types.ConsensusParams.version)
}
inline ::tendermint::types::VersionParams* ConsensusParams::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tendermint::types::VersionParams* released = _impl_.version_;
  _impl_.version_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::VersionParams* ConsensusParams::unsafe_arena_release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tendermint.types.ConsensusParams.version)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::tendermint::types::VersionParams* temp = _impl_.version_;
  _impl_.version_ = nullptr;
  return temp;
}
inline ::tendermint::types::VersionParams* ConsensusParams::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.version_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::VersionParams>(GetArena());
    _impl_.version_ = reinterpret_cast<::tendermint::types::VersionParams*>(p);
  }
  return _impl_.version_;
}
inline ::tendermint::types::VersionParams* ConsensusParams::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::tendermint::types::VersionParams* _msg = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:tendermint.types.ConsensusParams.version)
  return _msg;
}
inline void ConsensusParams::set_allocated_version(::tendermint::types::VersionParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.version_ = reinterpret_cast<::tendermint::types::VersionParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:tendermint.types.ConsensusParams.version)
}

// .tendermint.types.ABCIParams abci = 5 [json_name = "abci"];
inline bool ConsensusParams::has_abci() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.abci_ != nullptr);
  return value;
}
inline void ConsensusParams::clear_abci() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.abci_ != nullptr) _impl_.abci_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::tendermint::types::ABCIParams& ConsensusParams::_internal_abci() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::ABCIParams* p = _impl_.abci_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::ABCIParams&>(::tendermint::types::_ABCIParams_default_instance_);
}
inline const ::tendermint::types::ABCIParams& ConsensusParams::abci() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.types.ConsensusParams.abci)
  return _internal_abci();
}
inline void ConsensusParams::unsafe_arena_set_allocated_abci(::tendermint::types::ABCIParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.abci_);
  }
  _impl_.abci_ = reinterpret_cast<::tendermint::types::ABCIParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tendermint.types.ConsensusParams.abci)
}
inline ::tendermint::types::ABCIParams* ConsensusParams::release_abci() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tendermint::types::ABCIParams* released = _impl_.abci_;
  _impl_.abci_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::ABCIParams* ConsensusParams::unsafe_arena_release_abci() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tendermint.types.ConsensusParams.abci)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::tendermint::types::ABCIParams* temp = _impl_.abci_;
  _impl_.abci_ = nullptr;
  return temp;
}
inline ::tendermint::types::ABCIParams* ConsensusParams::_internal_mutable_abci() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.abci_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::ABCIParams>(GetArena());
    _impl_.abci_ = reinterpret_cast<::tendermint::types::ABCIParams*>(p);
  }
  return _impl_.abci_;
}
inline ::tendermint::types::ABCIParams* ConsensusParams::mutable_abci() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::tendermint::types::ABCIParams* _msg = _internal_mutable_abci();
  // @@protoc_insertion_point(field_mutable:tendermint.types.ConsensusParams.abci)
  return _msg;
}
inline void ConsensusParams::set_allocated_abci(::tendermint::types::ABCIParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.abci_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.abci_ = reinterpret_cast<::tendermint::types::ABCIParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:tendermint.types.ConsensusParams.abci)
}

// -------------------------------------------------------------------

// BlockParams

// int64 max_bytes = 1 [json_name = "maxBytes"];
inline void BlockParams::clear_max_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bytes_ = ::int64_t{0};
}
inline ::int64_t BlockParams::max_bytes() const {
  // @@protoc_insertion_point(field_get:tendermint.types.BlockParams.max_bytes)
  return _internal_max_bytes();
}
inline void BlockParams::set_max_bytes(::int64_t value) {
  _internal_set_max_bytes(value);
  // @@protoc_insertion_point(field_set:tendermint.types.BlockParams.max_bytes)
}
inline ::int64_t BlockParams::_internal_max_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_bytes_;
}
inline void BlockParams::_internal_set_max_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bytes_ = value;
}

// int64 max_gas = 2 [json_name = "maxGas"];
inline void BlockParams::clear_max_gas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_gas_ = ::int64_t{0};
}
inline ::int64_t BlockParams::max_gas() const {
  // @@protoc_insertion_point(field_get:tendermint.types.BlockParams.max_gas)
  return _internal_max_gas();
}
inline void BlockParams::set_max_gas(::int64_t value) {
  _internal_set_max_gas(value);
  // @@protoc_insertion_point(field_set:tendermint.types.BlockParams.max_gas)
}
inline ::int64_t BlockParams::_internal_max_gas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_gas_;
}
inline void BlockParams::_internal_set_max_gas(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_gas_ = value;
}

// -------------------------------------------------------------------

// EvidenceParams

// int64 max_age_num_blocks = 1 [json_name = "maxAgeNumBlocks"];
inline void EvidenceParams::clear_max_age_num_blocks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_age_num_blocks_ = ::int64_t{0};
}
inline ::int64_t EvidenceParams::max_age_num_blocks() const {
  // @@protoc_insertion_point(field_get:tendermint.types.EvidenceParams.max_age_num_blocks)
  return _internal_max_age_num_blocks();
}
inline void EvidenceParams::set_max_age_num_blocks(::int64_t value) {
  _internal_set_max_age_num_blocks(value);
  // @@protoc_insertion_point(field_set:tendermint.types.EvidenceParams.max_age_num_blocks)
}
inline ::int64_t EvidenceParams::_internal_max_age_num_blocks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_age_num_blocks_;
}
inline void EvidenceParams::_internal_set_max_age_num_blocks(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_age_num_blocks_ = value;
}

// .google.protobuf.Duration max_age_duration = 2 [json_name = "maxAgeDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
inline bool EvidenceParams::has_max_age_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_age_duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& EvidenceParams::_internal_max_age_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.max_age_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& EvidenceParams::max_age_duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.types.EvidenceParams.max_age_duration)
  return _internal_max_age_duration();
}
inline void EvidenceParams::unsafe_arena_set_allocated_max_age_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_age_duration_);
  }
  _impl_.max_age_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tendermint.types.EvidenceParams.max_age_duration)
}
inline ::google::protobuf::Duration* EvidenceParams::release_max_age_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.max_age_duration_;
  _impl_.max_age_duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* EvidenceParams::unsafe_arena_release_max_age_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tendermint.types.EvidenceParams.max_age_duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.max_age_duration_;
  _impl_.max_age_duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* EvidenceParams::_internal_mutable_max_age_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_age_duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.max_age_duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.max_age_duration_;
}
inline ::google::protobuf::Duration* EvidenceParams::mutable_max_age_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_max_age_duration();
  // @@protoc_insertion_point(field_mutable:tendermint.types.EvidenceParams.max_age_duration)
  return _msg;
}
inline void EvidenceParams::set_allocated_max_age_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_age_duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.max_age_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:tendermint.types.EvidenceParams.max_age_duration)
}

// int64 max_bytes = 3 [json_name = "maxBytes"];
inline void EvidenceParams::clear_max_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bytes_ = ::int64_t{0};
}
inline ::int64_t EvidenceParams::max_bytes() const {
  // @@protoc_insertion_point(field_get:tendermint.types.EvidenceParams.max_bytes)
  return _internal_max_bytes();
}
inline void EvidenceParams::set_max_bytes(::int64_t value) {
  _internal_set_max_bytes(value);
  // @@protoc_insertion_point(field_set:tendermint.types.EvidenceParams.max_bytes)
}
inline ::int64_t EvidenceParams::_internal_max_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_bytes_;
}
inline void EvidenceParams::_internal_set_max_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_bytes_ = value;
}

// -------------------------------------------------------------------

// ValidatorParams

// repeated string pub_key_types = 1 [json_name = "pubKeyTypes"];
inline int ValidatorParams::_internal_pub_key_types_size() const {
  return _internal_pub_key_types().size();
}
inline int ValidatorParams::pub_key_types_size() const {
  return _internal_pub_key_types_size();
}
inline void ValidatorParams::clear_pub_key_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_types_.Clear();
}
inline std::string* ValidatorParams::add_pub_key_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_pub_key_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:tendermint.types.ValidatorParams.pub_key_types)
  return _s;
}
inline const std::string& ValidatorParams::pub_key_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.types.ValidatorParams.pub_key_types)
  return _internal_pub_key_types().Get(index);
}
inline std::string* ValidatorParams::mutable_pub_key_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:tendermint.types.ValidatorParams.pub_key_types)
  return _internal_mutable_pub_key_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ValidatorParams::set_pub_key_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_pub_key_types()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:tendermint.types.ValidatorParams.pub_key_types)
}
template <typename Arg_, typename... Args_>
inline void ValidatorParams::add_pub_key_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_pub_key_types(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:tendermint.types.ValidatorParams.pub_key_types)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ValidatorParams::pub_key_types() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:tendermint.types.ValidatorParams.pub_key_types)
  return _internal_pub_key_types();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ValidatorParams::mutable_pub_key_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:tendermint.types.ValidatorParams.pub_key_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pub_key_types();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ValidatorParams::_internal_pub_key_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_types_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ValidatorParams::_internal_mutable_pub_key_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pub_key_types_;
}

// -------------------------------------------------------------------

// VersionParams

// uint64 app = 1 [json_name = "app"];
inline void VersionParams::clear_app() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_ = ::uint64_t{0u};
}
inline ::uint64_t VersionParams::app() const {
  // @@protoc_insertion_point(field_get:tendermint.types.VersionParams.app)
  return _internal_app();
}
inline void VersionParams::set_app(::uint64_t value) {
  _internal_set_app(value);
  // @@protoc_insertion_point(field_set:tendermint.types.VersionParams.app)
}
inline ::uint64_t VersionParams::_internal_app() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.app_;
}
inline void VersionParams::_internal_set_app(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_ = value;
}

// -------------------------------------------------------------------

// HashedParams

// int64 block_max_bytes = 1 [json_name = "blockMaxBytes"];
inline void HashedParams::clear_block_max_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_max_bytes_ = ::int64_t{0};
}
inline ::int64_t HashedParams::block_max_bytes() const {
  // @@protoc_insertion_point(field_get:tendermint.types.HashedParams.block_max_bytes)
  return _internal_block_max_bytes();
}
inline void HashedParams::set_block_max_bytes(::int64_t value) {
  _internal_set_block_max_bytes(value);
  // @@protoc_insertion_point(field_set:tendermint.types.HashedParams.block_max_bytes)
}
inline ::int64_t HashedParams::_internal_block_max_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_max_bytes_;
}
inline void HashedParams::_internal_set_block_max_bytes(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_max_bytes_ = value;
}

// int64 block_max_gas = 2 [json_name = "blockMaxGas"];
inline void HashedParams::clear_block_max_gas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_max_gas_ = ::int64_t{0};
}
inline ::int64_t HashedParams::block_max_gas() const {
  // @@protoc_insertion_point(field_get:tendermint.types.HashedParams.block_max_gas)
  return _internal_block_max_gas();
}
inline void HashedParams::set_block_max_gas(::int64_t value) {
  _internal_set_block_max_gas(value);
  // @@protoc_insertion_point(field_set:tendermint.types.HashedParams.block_max_gas)
}
inline ::int64_t HashedParams::_internal_block_max_gas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_max_gas_;
}
inline void HashedParams::_internal_set_block_max_gas(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_max_gas_ = value;
}

// -------------------------------------------------------------------

// ABCIParams

// int64 vote_extensions_enable_height = 1 [json_name = "voteExtensionsEnableHeight"];
inline void ABCIParams::clear_vote_extensions_enable_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vote_extensions_enable_height_ = ::int64_t{0};
}
inline ::int64_t ABCIParams::vote_extensions_enable_height() const {
  // @@protoc_insertion_point(field_get:tendermint.types.ABCIParams.vote_extensions_enable_height)
  return _internal_vote_extensions_enable_height();
}
inline void ABCIParams::set_vote_extensions_enable_height(::int64_t value) {
  _internal_set_vote_extensions_enable_height(value);
  // @@protoc_insertion_point(field_set:tendermint.types.ABCIParams.vote_extensions_enable_height)
}
inline ::int64_t ABCIParams::_internal_vote_extensions_enable_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vote_extensions_enable_height_;
}
inline void ABCIParams::_internal_set_vote_extensions_enable_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vote_extensions_enable_height_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace types
}  // namespace tendermint


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tendermint_2ftypes_2fparams_2eproto_2epb_2eh
