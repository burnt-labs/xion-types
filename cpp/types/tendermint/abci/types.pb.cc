// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/abci/types.proto
// Protobuf C++ Version: 5.29.4

#include "tendermint/abci/types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace tendermint {
namespace abci {

inline constexpr Validator::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        power_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Validator::Validator(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorDefaultTypeInternal() {}
  union {
    Validator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorDefaultTypeInternal _Validator_default_instance_;

inline constexpr Snapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        height_{::uint64_t{0u}},
        format_{0u},
        chunks_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Snapshot::Snapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotDefaultTypeInternal() {}
  union {
    Snapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotDefaultTypeInternal _Snapshot_default_instance_;

inline constexpr ResponseVerifyVoteExtension::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{static_cast< ::tendermint::abci::ResponseVerifyVoteExtension_VerifyStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseVerifyVoteExtension::ResponseVerifyVoteExtension(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseVerifyVoteExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseVerifyVoteExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseVerifyVoteExtensionDefaultTypeInternal() {}
  union {
    ResponseVerifyVoteExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseVerifyVoteExtensionDefaultTypeInternal _ResponseVerifyVoteExtension_default_instance_;

inline constexpr ResponseProcessProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : status_{static_cast< ::tendermint::abci::ResponseProcessProposal_ProposalStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseProcessProposal::ResponseProcessProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseProcessProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseProcessProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseProcessProposalDefaultTypeInternal() {}
  union {
    ResponseProcessProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseProcessProposalDefaultTypeInternal _ResponseProcessProposal_default_instance_;

inline constexpr ResponsePrepareProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : txs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponsePrepareProposal::ResponsePrepareProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponsePrepareProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponsePrepareProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponsePrepareProposalDefaultTypeInternal() {}
  union {
    ResponsePrepareProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponsePrepareProposalDefaultTypeInternal _ResponsePrepareProposal_default_instance_;

inline constexpr ResponseOfferSnapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : result_{static_cast< ::tendermint::abci::ResponseOfferSnapshot_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseOfferSnapshot::ResponseOfferSnapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseOfferSnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseOfferSnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseOfferSnapshotDefaultTypeInternal() {}
  union {
    ResponseOfferSnapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseOfferSnapshotDefaultTypeInternal _ResponseOfferSnapshot_default_instance_;

inline constexpr ResponseLoadSnapshotChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : chunk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseLoadSnapshotChunk::ResponseLoadSnapshotChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseLoadSnapshotChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseLoadSnapshotChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseLoadSnapshotChunkDefaultTypeInternal() {}
  union {
    ResponseLoadSnapshotChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseLoadSnapshotChunkDefaultTypeInternal _ResponseLoadSnapshotChunk_default_instance_;

inline constexpr ResponseInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        last_block_app_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        app_version_{::uint64_t{0u}},
        last_block_height_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseInfo::ResponseInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseInfoDefaultTypeInternal() {}
  union {
    ResponseInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseInfoDefaultTypeInternal _ResponseInfo_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ResponseFlush::ResponseFlush(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ResponseFlushDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseFlushDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseFlushDefaultTypeInternal() {}
  union {
    ResponseFlush _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseFlushDefaultTypeInternal _ResponseFlush_default_instance_;

inline constexpr ResponseExtendVote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : vote_extension_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseExtendVote::ResponseExtendVote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseExtendVoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseExtendVoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseExtendVoteDefaultTypeInternal() {}
  union {
    ResponseExtendVote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseExtendVoteDefaultTypeInternal _ResponseExtendVote_default_instance_;

inline constexpr ResponseException::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseException::ResponseException(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseExceptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseExceptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseExceptionDefaultTypeInternal() {}
  union {
    ResponseException _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseExceptionDefaultTypeInternal _ResponseException_default_instance_;

inline constexpr ResponseEcho::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseEcho::ResponseEcho(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseEchoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseEchoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseEchoDefaultTypeInternal() {}
  union {
    ResponseEcho _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseEchoDefaultTypeInternal _ResponseEcho_default_instance_;

inline constexpr ResponseCommit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : retain_height_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseCommit::ResponseCommit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseCommitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseCommitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseCommitDefaultTypeInternal() {}
  union {
    ResponseCommit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseCommitDefaultTypeInternal _ResponseCommit_default_instance_;

inline constexpr ResponseApplySnapshotChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : refetch_chunks_{},
        _refetch_chunks_cached_byte_size_{0},
        reject_senders_{},
        result_{static_cast< ::tendermint::abci::ResponseApplySnapshotChunk_Result >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseApplySnapshotChunk::ResponseApplySnapshotChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseApplySnapshotChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseApplySnapshotChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseApplySnapshotChunkDefaultTypeInternal() {}
  union {
    ResponseApplySnapshotChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseApplySnapshotChunkDefaultTypeInternal _ResponseApplySnapshotChunk_default_instance_;

inline constexpr RequestVerifyVoteExtension::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        vote_extension_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        height_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestVerifyVoteExtension::RequestVerifyVoteExtension(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestVerifyVoteExtensionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestVerifyVoteExtensionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestVerifyVoteExtensionDefaultTypeInternal() {}
  union {
    RequestVerifyVoteExtension _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestVerifyVoteExtensionDefaultTypeInternal _RequestVerifyVoteExtension_default_instance_;

inline constexpr RequestQuery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        height_{::int64_t{0}},
        prove_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestQuery::RequestQuery(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestQueryDefaultTypeInternal() {}
  union {
    RequestQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestQueryDefaultTypeInternal _RequestQuery_default_instance_;

inline constexpr RequestLoadSnapshotChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : height_{::uint64_t{0u}},
        format_{0u},
        chunk_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestLoadSnapshotChunk::RequestLoadSnapshotChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestLoadSnapshotChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestLoadSnapshotChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestLoadSnapshotChunkDefaultTypeInternal() {}
  union {
    RequestLoadSnapshotChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestLoadSnapshotChunkDefaultTypeInternal _RequestLoadSnapshotChunk_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RequestListSnapshots::RequestListSnapshots(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RequestListSnapshotsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestListSnapshotsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestListSnapshotsDefaultTypeInternal() {}
  union {
    RequestListSnapshots _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestListSnapshotsDefaultTypeInternal _RequestListSnapshots_default_instance_;

inline constexpr RequestInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        abci_version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        block_version_{::uint64_t{0u}},
        p2p_version_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestInfo::RequestInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestInfoDefaultTypeInternal() {}
  union {
    RequestInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestInfoDefaultTypeInternal _RequestInfo_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RequestFlush::RequestFlush(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RequestFlushDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestFlushDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestFlushDefaultTypeInternal() {}
  union {
    RequestFlush _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestFlushDefaultTypeInternal _RequestFlush_default_instance_;

inline constexpr RequestEcho::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestEcho::RequestEcho(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestEchoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestEchoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestEchoDefaultTypeInternal() {}
  union {
    RequestEcho _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestEchoDefaultTypeInternal _RequestEcho_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RequestCommit::RequestCommit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RequestCommitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestCommitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestCommitDefaultTypeInternal() {}
  union {
    RequestCommit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestCommitDefaultTypeInternal _RequestCommit_default_instance_;

inline constexpr RequestCheckTx::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tx_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::tendermint::abci::CheckTxType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestCheckTx::RequestCheckTx(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestCheckTxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestCheckTxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestCheckTxDefaultTypeInternal() {}
  union {
    RequestCheckTx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestCheckTxDefaultTypeInternal _RequestCheckTx_default_instance_;

inline constexpr RequestApplySnapshotChunk::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : chunk_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RequestApplySnapshotChunk::RequestApplySnapshotChunk(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestApplySnapshotChunkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestApplySnapshotChunkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestApplySnapshotChunkDefaultTypeInternal() {}
  union {
    RequestApplySnapshotChunk _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestApplySnapshotChunkDefaultTypeInternal _RequestApplySnapshotChunk_default_instance_;

inline constexpr EventAttribute::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventAttribute::EventAttribute(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventAttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventAttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventAttributeDefaultTypeInternal() {}
  union {
    EventAttribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventAttributeDefaultTypeInternal _EventAttribute_default_instance_;

inline constexpr VoteInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validator_{nullptr},
        block_id_flag_{static_cast< ::tendermint::types::BlockIDFlag >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR VoteInfo::VoteInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoteInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoteInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoteInfoDefaultTypeInternal() {}
  union {
    VoteInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoteInfoDefaultTypeInternal _VoteInfo_default_instance_;

inline constexpr ValidatorUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        pub_key_{nullptr},
        power_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorUpdate::ValidatorUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorUpdateDefaultTypeInternal() {}
  union {
    ValidatorUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorUpdateDefaultTypeInternal _ValidatorUpdate_default_instance_;

inline constexpr ResponseListSnapshots::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : snapshots_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseListSnapshots::ResponseListSnapshots(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseListSnapshotsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseListSnapshotsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseListSnapshotsDefaultTypeInternal() {}
  union {
    ResponseListSnapshots _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseListSnapshotsDefaultTypeInternal _ResponseListSnapshots_default_instance_;

inline constexpr RequestOfferSnapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        app_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        snapshot_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RequestOfferSnapshot::RequestOfferSnapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestOfferSnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestOfferSnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestOfferSnapshotDefaultTypeInternal() {}
  union {
    RequestOfferSnapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestOfferSnapshotDefaultTypeInternal _RequestOfferSnapshot_default_instance_;

inline constexpr Misbehavior::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validator_{nullptr},
        time_{nullptr},
        height_{::int64_t{0}},
        total_voting_power_{::int64_t{0}},
        type_{static_cast< ::tendermint::abci::MisbehaviorType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Misbehavior::Misbehavior(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MisbehaviorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MisbehaviorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MisbehaviorDefaultTypeInternal() {}
  union {
    Misbehavior _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MisbehaviorDefaultTypeInternal _Misbehavior_default_instance_;

inline constexpr ExtendedVoteInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        vote_extension_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extension_signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_{nullptr},
        block_id_flag_{static_cast< ::tendermint::types::BlockIDFlag >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ExtendedVoteInfo::ExtendedVoteInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtendedVoteInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtendedVoteInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtendedVoteInfoDefaultTypeInternal() {}
  union {
    ExtendedVoteInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtendedVoteInfoDefaultTypeInternal _ExtendedVoteInfo_default_instance_;

inline constexpr Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attributes_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Event::Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;

inline constexpr ResponseQuery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        log_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        codespace_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proof_ops_{nullptr},
        index_{::int64_t{0}},
        height_{::int64_t{0}},
        code_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseQuery::ResponseQuery(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseQueryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseQueryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseQueryDefaultTypeInternal() {}
  union {
    ResponseQuery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseQueryDefaultTypeInternal _ResponseQuery_default_instance_;

inline constexpr ResponseCheckTx::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : events_{},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        codespace_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gas_wanted_{::int64_t{0}},
        gas_used_{::int64_t{0}},
        code_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseCheckTx::ResponseCheckTx(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseCheckTxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseCheckTxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseCheckTxDefaultTypeInternal() {}
  union {
    ResponseCheckTx _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseCheckTxDefaultTypeInternal _ResponseCheckTx_default_instance_;

inline constexpr ExtendedCommitInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : votes_{},
        round_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExtendedCommitInfo::ExtendedCommitInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExtendedCommitInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExtendedCommitInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExtendedCommitInfoDefaultTypeInternal() {}
  union {
    ExtendedCommitInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExtendedCommitInfoDefaultTypeInternal _ExtendedCommitInfo_default_instance_;

inline constexpr ExecTxResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : events_{},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        codespace_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gas_wanted_{::int64_t{0}},
        gas_used_{::int64_t{0}},
        code_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExecTxResult::ExecTxResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExecTxResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecTxResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecTxResultDefaultTypeInternal() {}
  union {
    ExecTxResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecTxResultDefaultTypeInternal _ExecTxResult_default_instance_;

inline constexpr CommitInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : votes_{},
        round_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommitInfo::CommitInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommitInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommitInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommitInfoDefaultTypeInternal() {}
  union {
    CommitInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommitInfoDefaultTypeInternal _CommitInfo_default_instance_;

inline constexpr TxResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tx_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        result_{nullptr},
        height_{::int64_t{0}},
        index_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TxResult::TxResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TxResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxResultDefaultTypeInternal() {}
  union {
    TxResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxResultDefaultTypeInternal _TxResult_default_instance_;

inline constexpr ResponseInitChain::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validators_{},
        app_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        consensus_params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseInitChain::ResponseInitChain(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseInitChainDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseInitChainDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseInitChainDefaultTypeInternal() {}
  union {
    ResponseInitChain _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseInitChainDefaultTypeInternal _ResponseInitChain_default_instance_;

inline constexpr ResponseFinalizeBlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        events_{},
        tx_results_{},
        validator_updates_{},
        app_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        consensus_param_updates_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResponseFinalizeBlock::ResponseFinalizeBlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseFinalizeBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseFinalizeBlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseFinalizeBlockDefaultTypeInternal() {}
  union {
    ResponseFinalizeBlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseFinalizeBlockDefaultTypeInternal _ResponseFinalizeBlock_default_instance_;

inline constexpr RequestProcessProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        txs_{},
        misbehavior_{},
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_validators_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposer_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposed_last_commit_{nullptr},
        time_{nullptr},
        height_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RequestProcessProposal::RequestProcessProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestProcessProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestProcessProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestProcessProposalDefaultTypeInternal() {}
  union {
    RequestProcessProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestProcessProposalDefaultTypeInternal _RequestProcessProposal_default_instance_;

inline constexpr RequestPrepareProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        txs_{},
        misbehavior_{},
        next_validators_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposer_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        local_last_commit_{nullptr},
        time_{nullptr},
        max_tx_bytes_{::int64_t{0}},
        height_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RequestPrepareProposal::RequestPrepareProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestPrepareProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestPrepareProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestPrepareProposalDefaultTypeInternal() {}
  union {
    RequestPrepareProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestPrepareProposalDefaultTypeInternal _RequestPrepareProposal_default_instance_;

inline constexpr RequestInitChain::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        validators_{},
        chain_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        app_state_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        consensus_params_{nullptr},
        initial_height_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RequestInitChain::RequestInitChain(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestInitChainDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestInitChainDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestInitChainDefaultTypeInternal() {}
  union {
    RequestInitChain _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestInitChainDefaultTypeInternal _RequestInitChain_default_instance_;

inline constexpr RequestFinalizeBlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        txs_{},
        misbehavior_{},
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_validators_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposer_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        decided_last_commit_{nullptr},
        time_{nullptr},
        height_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RequestFinalizeBlock::RequestFinalizeBlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestFinalizeBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestFinalizeBlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestFinalizeBlockDefaultTypeInternal() {}
  union {
    RequestFinalizeBlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestFinalizeBlockDefaultTypeInternal _RequestFinalizeBlock_default_instance_;

inline constexpr RequestExtendVote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        txs_{},
        misbehavior_{},
        hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        next_validators_hash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposer_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        proposed_last_commit_{nullptr},
        height_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RequestExtendVote::RequestExtendVote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestExtendVoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestExtendVoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestExtendVoteDefaultTypeInternal() {}
  union {
    RequestExtendVote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestExtendVoteDefaultTypeInternal _RequestExtendVote_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;

inline constexpr Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Request::Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDefaultTypeInternal() {}
  union {
    Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDefaultTypeInternal _Request_default_instance_;
}  // namespace abci
}  // namespace tendermint
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_tendermint_2fabci_2ftypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_tendermint_2fabci_2ftypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Request, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Request, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Request, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestEcho, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestEcho, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFlush, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInfo, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInfo, _impl_.block_version_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInfo, _impl_.p2p_version_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInfo, _impl_.abci_version_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _impl_.chain_id_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _impl_.consensus_params_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _impl_.validators_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _impl_.app_state_bytes_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestInitChain, _impl_.initial_height_),
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestQuery, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestQuery, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestQuery, _impl_.path_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestQuery, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestQuery, _impl_.prove_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestCheckTx, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestCheckTx, _impl_.tx_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestCheckTx, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestCommit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestListSnapshots, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestOfferSnapshot, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestOfferSnapshot, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestOfferSnapshot, _impl_.snapshot_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestOfferSnapshot, _impl_.app_hash_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestLoadSnapshotChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestLoadSnapshotChunk, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestLoadSnapshotChunk, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestLoadSnapshotChunk, _impl_.chunk_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestApplySnapshotChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestApplySnapshotChunk, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestApplySnapshotChunk, _impl_.chunk_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestApplySnapshotChunk, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.max_tx_bytes_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.txs_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.local_last_commit_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.misbehavior_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.next_validators_hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestPrepareProposal, _impl_.proposer_address_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.txs_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.proposed_last_commit_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.misbehavior_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.next_validators_hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestProcessProposal, _impl_.proposer_address_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.txs_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.proposed_last_commit_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.misbehavior_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.next_validators_hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestExtendVote, _impl_.proposer_address_),
        ~0u,
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestVerifyVoteExtension, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestVerifyVoteExtension, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestVerifyVoteExtension, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestVerifyVoteExtension, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestVerifyVoteExtension, _impl_.vote_extension_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.txs_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.decided_last_commit_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.misbehavior_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.next_validators_hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::RequestFinalizeBlock, _impl_.proposer_address_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Response, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Response, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Response, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseException, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseException, _impl_.error_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseEcho, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseEcho, _impl_.message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFlush, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInfo, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInfo, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInfo, _impl_.app_version_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInfo, _impl_.last_block_height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInfo, _impl_.last_block_app_hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInitChain, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInitChain, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInitChain, _impl_.consensus_params_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInitChain, _impl_.validators_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseInitChain, _impl_.app_hash_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.log_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.proof_ops_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseQuery, _impl_.codespace_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.log_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.gas_wanted_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.gas_used_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.events_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCheckTx, _impl_.codespace_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCommit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseCommit, _impl_.retain_height_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseListSnapshots, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseListSnapshots, _impl_.snapshots_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseOfferSnapshot, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseOfferSnapshot, _impl_.result_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseLoadSnapshotChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseLoadSnapshotChunk, _impl_.chunk_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseApplySnapshotChunk, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseApplySnapshotChunk, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseApplySnapshotChunk, _impl_.refetch_chunks_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseApplySnapshotChunk, _impl_.reject_senders_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponsePrepareProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponsePrepareProposal, _impl_.txs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseProcessProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseProcessProposal, _impl_.status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseExtendVote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseExtendVote, _impl_.vote_extension_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseVerifyVoteExtension, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseVerifyVoteExtension, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFinalizeBlock, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFinalizeBlock, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFinalizeBlock, _impl_.events_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFinalizeBlock, _impl_.tx_results_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFinalizeBlock, _impl_.validator_updates_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFinalizeBlock, _impl_.consensus_param_updates_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ResponseFinalizeBlock, _impl_.app_hash_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::CommitInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::CommitInfo, _impl_.round_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::CommitInfo, _impl_.votes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedCommitInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedCommitInfo, _impl_.round_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedCommitInfo, _impl_.votes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Event, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Event, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Event, _impl_.attributes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::EventAttribute, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::EventAttribute, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::EventAttribute, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::EventAttribute, _impl_.index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.log_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.gas_wanted_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.gas_used_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.events_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExecTxResult, _impl_.codespace_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::TxResult, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::TxResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::TxResult, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::TxResult, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::TxResult, _impl_.tx_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::TxResult, _impl_.result_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Validator, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Validator, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Validator, _impl_.power_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ValidatorUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ValidatorUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ValidatorUpdate, _impl_.pub_key_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ValidatorUpdate, _impl_.power_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::VoteInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::VoteInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::VoteInfo, _impl_.validator_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::VoteInfo, _impl_.block_id_flag_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedVoteInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedVoteInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedVoteInfo, _impl_.validator_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedVoteInfo, _impl_.vote_extension_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedVoteInfo, _impl_.extension_signature_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::ExtendedVoteInfo, _impl_.block_id_flag_),
        0,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Misbehavior, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Misbehavior, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Misbehavior, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Misbehavior, _impl_.validator_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Misbehavior, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Misbehavior, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Misbehavior, _impl_.total_voting_power_),
        ~0u,
        0,
        ~0u,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Snapshot, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Snapshot, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Snapshot, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Snapshot, _impl_.chunks_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Snapshot, _impl_.hash_),
        PROTOBUF_FIELD_OFFSET(::tendermint::abci::Snapshot, _impl_.metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::tendermint::abci::Request)},
        {25, -1, -1, sizeof(::tendermint::abci::RequestEcho)},
        {34, -1, -1, sizeof(::tendermint::abci::RequestFlush)},
        {42, -1, -1, sizeof(::tendermint::abci::RequestInfo)},
        {54, 68, -1, sizeof(::tendermint::abci::RequestInitChain)},
        {74, -1, -1, sizeof(::tendermint::abci::RequestQuery)},
        {86, -1, -1, sizeof(::tendermint::abci::RequestCheckTx)},
        {96, -1, -1, sizeof(::tendermint::abci::RequestCommit)},
        {104, -1, -1, sizeof(::tendermint::abci::RequestListSnapshots)},
        {112, 122, -1, sizeof(::tendermint::abci::RequestOfferSnapshot)},
        {124, -1, -1, sizeof(::tendermint::abci::RequestLoadSnapshotChunk)},
        {135, -1, -1, sizeof(::tendermint::abci::RequestApplySnapshotChunk)},
        {146, 162, -1, sizeof(::tendermint::abci::RequestPrepareProposal)},
        {170, 186, -1, sizeof(::tendermint::abci::RequestProcessProposal)},
        {194, 210, -1, sizeof(::tendermint::abci::RequestExtendVote)},
        {218, -1, -1, sizeof(::tendermint::abci::RequestVerifyVoteExtension)},
        {230, 246, -1, sizeof(::tendermint::abci::RequestFinalizeBlock)},
        {254, -1, -1, sizeof(::tendermint::abci::Response)},
        {280, -1, -1, sizeof(::tendermint::abci::ResponseException)},
        {289, -1, -1, sizeof(::tendermint::abci::ResponseEcho)},
        {298, -1, -1, sizeof(::tendermint::abci::ResponseFlush)},
        {306, -1, -1, sizeof(::tendermint::abci::ResponseInfo)},
        {319, 330, -1, sizeof(::tendermint::abci::ResponseInitChain)},
        {333, 350, -1, sizeof(::tendermint::abci::ResponseQuery)},
        {359, -1, -1, sizeof(::tendermint::abci::ResponseCheckTx)},
        {375, -1, -1, sizeof(::tendermint::abci::ResponseCommit)},
        {384, -1, -1, sizeof(::tendermint::abci::ResponseListSnapshots)},
        {393, -1, -1, sizeof(::tendermint::abci::ResponseOfferSnapshot)},
        {402, -1, -1, sizeof(::tendermint::abci::ResponseLoadSnapshotChunk)},
        {411, -1, -1, sizeof(::tendermint::abci::ResponseApplySnapshotChunk)},
        {422, -1, -1, sizeof(::tendermint::abci::ResponsePrepareProposal)},
        {431, -1, -1, sizeof(::tendermint::abci::ResponseProcessProposal)},
        {440, -1, -1, sizeof(::tendermint::abci::ResponseExtendVote)},
        {449, -1, -1, sizeof(::tendermint::abci::ResponseVerifyVoteExtension)},
        {458, 471, -1, sizeof(::tendermint::abci::ResponseFinalizeBlock)},
        {476, -1, -1, sizeof(::tendermint::abci::CommitInfo)},
        {486, -1, -1, sizeof(::tendermint::abci::ExtendedCommitInfo)},
        {496, -1, -1, sizeof(::tendermint::abci::Event)},
        {506, -1, -1, sizeof(::tendermint::abci::EventAttribute)},
        {517, -1, -1, sizeof(::tendermint::abci::ExecTxResult)},
        {533, 545, -1, sizeof(::tendermint::abci::TxResult)},
        {549, -1, -1, sizeof(::tendermint::abci::Validator)},
        {559, 569, -1, sizeof(::tendermint::abci::ValidatorUpdate)},
        {571, 581, -1, sizeof(::tendermint::abci::VoteInfo)},
        {583, 595, -1, sizeof(::tendermint::abci::ExtendedVoteInfo)},
        {599, 612, -1, sizeof(::tendermint::abci::Misbehavior)},
        {617, -1, -1, sizeof(::tendermint::abci::Snapshot)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::tendermint::abci::_Request_default_instance_._instance,
    &::tendermint::abci::_RequestEcho_default_instance_._instance,
    &::tendermint::abci::_RequestFlush_default_instance_._instance,
    &::tendermint::abci::_RequestInfo_default_instance_._instance,
    &::tendermint::abci::_RequestInitChain_default_instance_._instance,
    &::tendermint::abci::_RequestQuery_default_instance_._instance,
    &::tendermint::abci::_RequestCheckTx_default_instance_._instance,
    &::tendermint::abci::_RequestCommit_default_instance_._instance,
    &::tendermint::abci::_RequestListSnapshots_default_instance_._instance,
    &::tendermint::abci::_RequestOfferSnapshot_default_instance_._instance,
    &::tendermint::abci::_RequestLoadSnapshotChunk_default_instance_._instance,
    &::tendermint::abci::_RequestApplySnapshotChunk_default_instance_._instance,
    &::tendermint::abci::_RequestPrepareProposal_default_instance_._instance,
    &::tendermint::abci::_RequestProcessProposal_default_instance_._instance,
    &::tendermint::abci::_RequestExtendVote_default_instance_._instance,
    &::tendermint::abci::_RequestVerifyVoteExtension_default_instance_._instance,
    &::tendermint::abci::_RequestFinalizeBlock_default_instance_._instance,
    &::tendermint::abci::_Response_default_instance_._instance,
    &::tendermint::abci::_ResponseException_default_instance_._instance,
    &::tendermint::abci::_ResponseEcho_default_instance_._instance,
    &::tendermint::abci::_ResponseFlush_default_instance_._instance,
    &::tendermint::abci::_ResponseInfo_default_instance_._instance,
    &::tendermint::abci::_ResponseInitChain_default_instance_._instance,
    &::tendermint::abci::_ResponseQuery_default_instance_._instance,
    &::tendermint::abci::_ResponseCheckTx_default_instance_._instance,
    &::tendermint::abci::_ResponseCommit_default_instance_._instance,
    &::tendermint::abci::_ResponseListSnapshots_default_instance_._instance,
    &::tendermint::abci::_ResponseOfferSnapshot_default_instance_._instance,
    &::tendermint::abci::_ResponseLoadSnapshotChunk_default_instance_._instance,
    &::tendermint::abci::_ResponseApplySnapshotChunk_default_instance_._instance,
    &::tendermint::abci::_ResponsePrepareProposal_default_instance_._instance,
    &::tendermint::abci::_ResponseProcessProposal_default_instance_._instance,
    &::tendermint::abci::_ResponseExtendVote_default_instance_._instance,
    &::tendermint::abci::_ResponseVerifyVoteExtension_default_instance_._instance,
    &::tendermint::abci::_ResponseFinalizeBlock_default_instance_._instance,
    &::tendermint::abci::_CommitInfo_default_instance_._instance,
    &::tendermint::abci::_ExtendedCommitInfo_default_instance_._instance,
    &::tendermint::abci::_Event_default_instance_._instance,
    &::tendermint::abci::_EventAttribute_default_instance_._instance,
    &::tendermint::abci::_ExecTxResult_default_instance_._instance,
    &::tendermint::abci::_TxResult_default_instance_._instance,
    &::tendermint::abci::_Validator_default_instance_._instance,
    &::tendermint::abci::_ValidatorUpdate_default_instance_._instance,
    &::tendermint::abci::_VoteInfo_default_instance_._instance,
    &::tendermint::abci::_ExtendedVoteInfo_default_instance_._instance,
    &::tendermint::abci::_Misbehavior_default_instance_._instance,
    &::tendermint::abci::_Snapshot_default_instance_._instance,
};
const char descriptor_table_protodef_tendermint_2fabci_2ftypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033tendermint/abci/types.proto\022\017tendermin"
    "t.abci\032\035tendermint/crypto/proof.proto\032\034t"
    "endermint/crypto/keys.proto\032\035tendermint/"
    "types/params.proto\032 tendermint/types/val"
    "idator.proto\032\037google/protobuf/timestamp."
    "proto\032\024gogoproto/gogo.proto\"\277\t\n\007Request\022"
    "2\n\004echo\030\001 \001(\0132\034.tendermint.abci.RequestE"
    "choH\000R\004echo\0225\n\005flush\030\002 \001(\0132\035.tendermint."
    "abci.RequestFlushH\000R\005flush\0222\n\004info\030\003 \001(\013"
    "2\034.tendermint.abci.RequestInfoH\000R\004info\022B"
    "\n\ninit_chain\030\005 \001(\0132!.tendermint.abci.Req"
    "uestInitChainH\000R\tinitChain\0225\n\005query\030\006 \001("
    "\0132\035.tendermint.abci.RequestQueryH\000R\005quer"
    "y\022<\n\010check_tx\030\010 \001(\0132\037.tendermint.abci.Re"
    "questCheckTxH\000R\007checkTx\0228\n\006commit\030\013 \001(\0132"
    "\036.tendermint.abci.RequestCommitH\000R\006commi"
    "t\022N\n\016list_snapshots\030\014 \001(\0132%.tendermint.a"
    "bci.RequestListSnapshotsH\000R\rlistSnapshot"
    "s\022N\n\016offer_snapshot\030\r \001(\0132%.tendermint.a"
    "bci.RequestOfferSnapshotH\000R\rofferSnapsho"
    "t\022[\n\023load_snapshot_chunk\030\016 \001(\0132).tenderm"
    "int.abci.RequestLoadSnapshotChunkH\000R\021loa"
    "dSnapshotChunk\022^\n\024apply_snapshot_chunk\030\017"
    " \001(\0132*.tendermint.abci.RequestApplySnaps"
    "hotChunkH\000R\022applySnapshotChunk\022T\n\020prepar"
    "e_proposal\030\020 \001(\0132\'.tendermint.abci.Reque"
    "stPrepareProposalH\000R\017prepareProposal\022T\n\020"
    "process_proposal\030\021 \001(\0132\'.tendermint.abci"
    ".RequestProcessProposalH\000R\017processPropos"
    "al\022E\n\013extend_vote\030\022 \001(\0132\".tendermint.abc"
    "i.RequestExtendVoteH\000R\nextendVote\022a\n\025ver"
    "ify_vote_extension\030\023 \001(\0132+.tendermint.ab"
    "ci.RequestVerifyVoteExtensionH\000R\023verifyV"
    "oteExtension\022N\n\016finalize_block\030\024 \001(\0132%.t"
    "endermint.abci.RequestFinalizeBlockH\000R\rf"
    "inalizeBlockB\007\n\005valueJ\004\010\004\020\005J\004\010\007\020\010J\004\010\t\020\nJ"
    "\004\010\n\020\013\"\'\n\013RequestEcho\022\030\n\007message\030\001 \001(\tR\007m"
    "essage\"\016\n\014RequestFlush\"\220\001\n\013RequestInfo\022\030"
    "\n\007version\030\001 \001(\tR\007version\022#\n\rblock_versio"
    "n\030\002 \001(\004R\014blockVersion\022\037\n\013p2p_version\030\003 \001"
    "(\004R\np2pVersion\022!\n\014abci_version\030\004 \001(\tR\013ab"
    "ciVersion\"\314\002\n\020RequestInitChain\0228\n\004time\030\001"
    " \001(\0132\032.google.protobuf.TimestampB\010\310\336\037\000\220\337"
    "\037\001R\004time\022\031\n\010chain_id\030\002 \001(\tR\007chainId\022L\n\020c"
    "onsensus_params\030\003 \001(\0132!.tendermint.types"
    ".ConsensusParamsR\017consensusParams\022F\n\nval"
    "idators\030\004 \003(\0132 .tendermint.abci.Validato"
    "rUpdateB\004\310\336\037\000R\nvalidators\022&\n\017app_state_b"
    "ytes\030\005 \001(\014R\rappStateBytes\022%\n\016initial_hei"
    "ght\030\006 \001(\003R\rinitialHeight\"d\n\014RequestQuery"
    "\022\022\n\004data\030\001 \001(\014R\004data\022\022\n\004path\030\002 \001(\tR\004path"
    "\022\026\n\006height\030\003 \001(\003R\006height\022\024\n\005prove\030\004 \001(\010R"
    "\005prove\"R\n\016RequestCheckTx\022\016\n\002tx\030\001 \001(\014R\002tx"
    "\0220\n\004type\030\002 \001(\0162\034.tendermint.abci.CheckTx"
    "TypeR\004type\"\017\n\rRequestCommit\"\026\n\024RequestLi"
    "stSnapshots\"h\n\024RequestOfferSnapshot\0225\n\010s"
    "napshot\030\001 \001(\0132\031.tendermint.abci.Snapshot"
    "R\010snapshot\022\031\n\010app_hash\030\002 \001(\014R\007appHash\"`\n"
    "\030RequestLoadSnapshotChunk\022\026\n\006height\030\001 \001("
    "\004R\006height\022\026\n\006format\030\002 \001(\rR\006format\022\024\n\005chu"
    "nk\030\003 \001(\rR\005chunk\"_\n\031RequestApplySnapshotC"
    "hunk\022\024\n\005index\030\001 \001(\rR\005index\022\024\n\005chunk\030\002 \001("
    "\014R\005chunk\022\026\n\006sender\030\003 \001(\tR\006sender\"\230\003\n\026Req"
    "uestPrepareProposal\022 \n\014max_tx_bytes\030\001 \001("
    "\003R\nmaxTxBytes\022\020\n\003txs\030\002 \003(\014R\003txs\022U\n\021local"
    "_last_commit\030\003 \001(\0132#.tendermint.abci.Ext"
    "endedCommitInfoB\004\310\336\037\000R\017localLastCommit\022D"
    "\n\013misbehavior\030\004 \003(\0132\034.tendermint.abci.Mi"
    "sbehaviorB\004\310\336\037\000R\013misbehavior\022\026\n\006height\030\005"
    " \001(\003R\006height\0228\n\004time\030\006 \001(\0132\032.google.prot"
    "obuf.TimestampB\010\310\336\037\000\220\337\037\001R\004time\0220\n\024next_v"
    "alidators_hash\030\007 \001(\014R\022nextValidatorsHash"
    "\022)\n\020proposer_address\030\010 \001(\014R\017proposerAddr"
    "ess\"\210\003\n\026RequestProcessProposal\022\020\n\003txs\030\001 "
    "\003(\014R\003txs\022S\n\024proposed_last_commit\030\002 \001(\0132\033"
    ".tendermint.abci.CommitInfoB\004\310\336\037\000R\022propo"
    "sedLastCommit\022D\n\013misbehavior\030\003 \003(\0132\034.ten"
    "dermint.abci.MisbehaviorB\004\310\336\037\000R\013misbehav"
    "ior\022\022\n\004hash\030\004 \001(\014R\004hash\022\026\n\006height\030\005 \001(\003R"
    "\006height\0228\n\004time\030\006 \001(\0132\032.google.protobuf."
    "TimestampB\010\310\336\037\000\220\337\037\001R\004time\0220\n\024next_valida"
    "tors_hash\030\007 \001(\014R\022nextValidatorsHash\022)\n\020p"
    "roposer_address\030\010 \001(\014R\017proposerAddress\"\203"
    "\003\n\021RequestExtendVote\022\022\n\004hash\030\001 \001(\014R\004hash"
    "\022\026\n\006height\030\002 \001(\003R\006height\0228\n\004time\030\003 \001(\0132\032"
    ".google.protobuf.TimestampB\010\310\336\037\000\220\337\037\001R\004ti"
    "me\022\020\n\003txs\030\004 \003(\014R\003txs\022S\n\024proposed_last_co"
    "mmit\030\005 \001(\0132\033.tendermint.abci.CommitInfoB"
    "\004\310\336\037\000R\022proposedLastCommit\022D\n\013misbehavior"
    "\030\006 \003(\0132\034.tendermint.abci.MisbehaviorB\004\310\336"
    "\037\000R\013misbehavior\0220\n\024next_validators_hash\030"
    "\007 \001(\014R\022nextValidatorsHash\022)\n\020proposer_ad"
    "dress\030\010 \001(\014R\017proposerAddress\"\234\001\n\032Request"
    "VerifyVoteExtension\022\022\n\004hash\030\001 \001(\014R\004hash\022"
    "+\n\021validator_address\030\002 \001(\014R\020validatorAdd"
    "ress\022\026\n\006height\030\003 \001(\003R\006height\022%\n\016vote_ext"
    "ension\030\004 \001(\014R\rvoteExtension\"\204\003\n\024RequestF"
    "inalizeBlock\022\020\n\003txs\030\001 \003(\014R\003txs\022Q\n\023decide"
    "d_last_commit\030\002 \001(\0132\033.tendermint.abci.Co"
    "mmitInfoB\004\310\336\037\000R\021decidedLastCommit\022D\n\013mis"
    "behavior\030\003 \003(\0132\034.tendermint.abci.Misbeha"
    "viorB\004\310\336\037\000R\013misbehavior\022\022\n\004hash\030\004 \001(\014R\004h"
    "ash\022\026\n\006height\030\005 \001(\003R\006height\0228\n\004time\030\006 \001("
    "\0132\032.google.protobuf.TimestampB\010\310\336\037\000\220\337\037\001R"
    "\004time\0220\n\024next_validators_hash\030\007 \001(\014R\022nex"
    "tValidatorsHash\022)\n\020proposer_address\030\010 \001("
    "\014R\017proposerAddress\"\224\n\n\010Response\022B\n\texcep"
    "tion\030\001 \001(\0132\".tendermint.abci.ResponseExc"
    "eptionH\000R\texception\0223\n\004echo\030\002 \001(\0132\035.tend"
    "ermint.abci.ResponseEchoH\000R\004echo\0226\n\005flus"
    "h\030\003 \001(\0132\036.tendermint.abci.ResponseFlushH"
    "\000R\005flush\0223\n\004info\030\004 \001(\0132\035.tendermint.abci"
    ".ResponseInfoH\000R\004info\022C\n\ninit_chain\030\006 \001("
    "\0132\".tendermint.abci.ResponseInitChainH\000R"
    "\tinitChain\0226\n\005query\030\007 \001(\0132\036.tendermint.a"
    "bci.ResponseQueryH\000R\005query\022=\n\010check_tx\030\t"
    " \001(\0132 .tendermint.abci.ResponseCheckTxH\000"
    "R\007checkTx\0229\n\006commit\030\014 \001(\0132\037.tendermint.a"
    "bci.ResponseCommitH\000R\006commit\022O\n\016list_sna"
    "pshots\030\r \001(\0132&.tendermint.abci.ResponseL"
    "istSnapshotsH\000R\rlistSnapshots\022O\n\016offer_s"
    "napshot\030\016 \001(\0132&.tendermint.abci.Response"
    "OfferSnapshotH\000R\rofferSnapshot\022\\\n\023load_s"
    "napshot_chunk\030\017 \001(\0132*.tendermint.abci.Re"
    "sponseLoadSnapshotChunkH\000R\021loadSnapshotC"
    "hunk\022_\n\024apply_snapshot_chunk\030\020 \001(\0132+.ten"
    "dermint.abci.ResponseApplySnapshotChunkH"
    "\000R\022applySnapshotChunk\022U\n\020prepare_proposa"
    "l\030\021 \001(\0132(.tendermint.abci.ResponsePrepar"
    "eProposalH\000R\017prepareProposal\022U\n\020process_"
    "proposal\030\022 \001(\0132(.tendermint.abci.Respons"
    "eProcessProposalH\000R\017processProposal\022F\n\013e"
    "xtend_vote\030\023 \001(\0132#.tendermint.abci.Respo"
    "nseExtendVoteH\000R\nextendVote\022b\n\025verify_vo"
    "te_extension\030\024 \001(\0132,.tendermint.abci.Res"
    "ponseVerifyVoteExtensionH\000R\023verifyVoteEx"
    "tension\022O\n\016finalize_block\030\025 \001(\0132&.tender"
    "mint.abci.ResponseFinalizeBlockH\000R\rfinal"
    "izeBlockB\007\n\005valueJ\004\010\005\020\006J\004\010\010\020\tJ\004\010\n\020\013J\004\010\013\020"
    "\014\")\n\021ResponseException\022\024\n\005error\030\001 \001(\tR\005e"
    "rror\"(\n\014ResponseEcho\022\030\n\007message\030\001 \001(\tR\007m"
    "essage\"\017\n\rResponseFlush\"\270\001\n\014ResponseInfo"
    "\022\022\n\004data\030\001 \001(\tR\004data\022\030\n\007version\030\002 \001(\tR\007v"
    "ersion\022\037\n\013app_version\030\003 \001(\004R\nappVersion\022"
    "*\n\021last_block_height\030\004 \001(\003R\017lastBlockHei"
    "ght\022-\n\023last_block_app_hash\030\005 \001(\014R\020lastBl"
    "ockAppHash\"\304\001\n\021ResponseInitChain\022L\n\020cons"
    "ensus_params\030\001 \001(\0132!.tendermint.types.Co"
    "nsensusParamsR\017consensusParams\022F\n\nvalida"
    "tors\030\002 \003(\0132 .tendermint.abci.ValidatorUp"
    "dateB\004\310\336\037\000R\nvalidators\022\031\n\010app_hash\030\003 \001(\014"
    "R\007appHash\"\367\001\n\rResponseQuery\022\022\n\004code\030\001 \001("
    "\rR\004code\022\020\n\003log\030\003 \001(\tR\003log\022\022\n\004info\030\004 \001(\tR"
    "\004info\022\024\n\005index\030\005 \001(\003R\005index\022\020\n\003key\030\006 \001(\014"
    "R\003key\022\024\n\005value\030\007 \001(\014R\005value\0228\n\tproof_ops"
    "\030\010 \001(\0132\033.tendermint.crypto.ProofOpsR\010pro"
    "ofOps\022\026\n\006height\030\t \001(\003R\006height\022\034\n\tcodespa"
    "ce\030\n \001(\tR\tcodespace\"\252\002\n\017ResponseCheckTx\022"
    "\022\n\004code\030\001 \001(\rR\004code\022\022\n\004data\030\002 \001(\014R\004data\022"
    "\020\n\003log\030\003 \001(\tR\003log\022\022\n\004info\030\004 \001(\tR\004info\022\036\n"
    "\ngas_wanted\030\005 \001(\003R\ngas_wanted\022\032\n\010gas_use"
    "d\030\006 \001(\003R\010gas_used\022H\n\006events\030\007 \003(\0132\026.tend"
    "ermint.abci.EventB\030\310\336\037\000\352\336\037\020events,omitem"
    "ptyR\006events\022\034\n\tcodespace\030\010 \001(\tR\tcodespac"
    "eJ\004\010\t\020\014R\006senderR\010priorityR\rmempool_error"
    "\"A\n\016ResponseCommit\022#\n\rretain_height\030\003 \001("
    "\003R\014retainHeightJ\004\010\001\020\002J\004\010\002\020\003\"P\n\025ResponseL"
    "istSnapshots\0227\n\tsnapshots\030\001 \003(\0132\031.tender"
    "mint.abci.SnapshotR\tsnapshots\"\276\001\n\025Respon"
    "seOfferSnapshot\022E\n\006result\030\001 \001(\0162-.tender"
    "mint.abci.ResponseOfferSnapshot.ResultR\006"
    "result\"^\n\006Result\022\013\n\007UNKNOWN\020\000\022\n\n\006ACCEPT\020"
    "\001\022\t\n\005ABORT\020\002\022\n\n\006REJECT\020\003\022\021\n\rREJECT_FORMA"
    "T\020\004\022\021\n\rREJECT_SENDER\020\005\"1\n\031ResponseLoadSn"
    "apshotChunk\022\024\n\005chunk\030\001 \001(\014R\005chunk\"\230\002\n\032Re"
    "sponseApplySnapshotChunk\022J\n\006result\030\001 \001(\016"
    "22.tendermint.abci.ResponseApplySnapshot"
    "Chunk.ResultR\006result\022%\n\016refetch_chunks\030\002"
    " \003(\rR\rrefetchChunks\022%\n\016reject_senders\030\003 "
    "\003(\tR\rrejectSenders\"`\n\006Result\022\013\n\007UNKNOWN\020"
    "\000\022\n\n\006ACCEPT\020\001\022\t\n\005ABORT\020\002\022\t\n\005RETRY\020\003\022\022\n\016R"
    "ETRY_SNAPSHOT\020\004\022\023\n\017REJECT_SNAPSHOT\020\005\"+\n\027"
    "ResponsePrepareProposal\022\020\n\003txs\030\001 \003(\014R\003tx"
    "s\"\241\001\n\027ResponseProcessProposal\022O\n\006status\030"
    "\001 \001(\01627.tendermint.abci.ResponseProcessP"
    "roposal.ProposalStatusR\006status\"5\n\016Propos"
    "alStatus\022\013\n\007UNKNOWN\020\000\022\n\n\006ACCEPT\020\001\022\n\n\006REJ"
    "ECT\020\002\";\n\022ResponseExtendVote\022%\n\016vote_exte"
    "nsion\030\001 \001(\014R\rvoteExtension\"\245\001\n\033ResponseV"
    "erifyVoteExtension\022Q\n\006status\030\001 \001(\01629.ten"
    "dermint.abci.ResponseVerifyVoteExtension"
    ".VerifyStatusR\006status\"3\n\014VerifyStatus\022\013\n"
    "\007UNKNOWN\020\000\022\n\n\006ACCEPT\020\001\022\n\n\006REJECT\020\002\"\352\002\n\025R"
    "esponseFinalizeBlock\022H\n\006events\030\001 \003(\0132\026.t"
    "endermint.abci.EventB\030\310\336\037\000\352\336\037\020events,omi"
    "temptyR\006events\022<\n\ntx_results\030\002 \003(\0132\035.ten"
    "dermint.abci.ExecTxResultR\ttxResults\022S\n\021"
    "validator_updates\030\003 \003(\0132 .tendermint.abc"
    "i.ValidatorUpdateB\004\310\336\037\000R\020validatorUpdate"
    "s\022Y\n\027consensus_param_updates\030\004 \001(\0132!.ten"
    "dermint.types.ConsensusParamsR\025consensus"
    "ParamUpdates\022\031\n\010app_hash\030\005 \001(\014R\007appHash\""
    "Y\n\nCommitInfo\022\024\n\005round\030\001 \001(\005R\005round\0225\n\005v"
    "otes\030\002 \003(\0132\031.tendermint.abci.VoteInfoB\004\310"
    "\336\037\000R\005votes\"i\n\022ExtendedCommitInfo\022\024\n\005roun"
    "d\030\001 \001(\005R\005round\022=\n\005votes\030\002 \003(\0132!.tendermi"
    "nt.abci.ExtendedVoteInfoB\004\310\336\037\000R\005votes\"z\n"
    "\005Event\022\022\n\004type\030\001 \001(\tR\004type\022]\n\nattributes"
    "\030\002 \003(\0132\037.tendermint.abci.EventAttributeB"
    "\034\310\336\037\000\352\336\037\024attributes,omitemptyR\nattribute"
    "s\"N\n\016EventAttribute\022\020\n\003key\030\001 \001(\tR\003key\022\024\n"
    "\005value\030\002 \001(\tR\005value\022\024\n\005index\030\003 \001(\010R\005inde"
    "x\"\200\002\n\014ExecTxResult\022\022\n\004code\030\001 \001(\rR\004code\022\022"
    "\n\004data\030\002 \001(\014R\004data\022\020\n\003log\030\003 \001(\tR\003log\022\022\n\004"
    "info\030\004 \001(\tR\004info\022\036\n\ngas_wanted\030\005 \001(\003R\nga"
    "s_wanted\022\032\n\010gas_used\030\006 \001(\003R\010gas_used\022H\n\006"
    "events\030\007 \003(\0132\026.tendermint.abci.EventB\030\310\336"
    "\037\000\352\336\037\020events,omitemptyR\006events\022\034\n\tcodesp"
    "ace\030\010 \001(\tR\tcodespace\"\205\001\n\010TxResult\022\026\n\006hei"
    "ght\030\001 \001(\003R\006height\022\024\n\005index\030\002 \001(\rR\005index\022"
    "\016\n\002tx\030\003 \001(\014R\002tx\022;\n\006result\030\004 \001(\0132\035.tender"
    "mint.abci.ExecTxResultB\004\310\336\037\000R\006result\";\n\t"
    "Validator\022\030\n\007address\030\001 \001(\014R\007address\022\024\n\005p"
    "ower\030\003 \001(\003R\005power\"d\n\017ValidatorUpdate\022;\n\007"
    "pub_key\030\001 \001(\0132\034.tendermint.crypto.Public"
    "KeyB\004\310\336\037\000R\006pubKey\022\024\n\005power\030\002 \001(\003R\005power\""
    "\223\001\n\010VoteInfo\022>\n\tvalidator\030\001 \001(\0132\032.tender"
    "mint.abci.ValidatorB\004\310\336\037\000R\tvalidator\022A\n\r"
    "block_id_flag\030\003 \001(\0162\035.tendermint.types.B"
    "lockIDFlagR\013blockIdFlagJ\004\010\002\020\003\"\363\001\n\020Extend"
    "edVoteInfo\022>\n\tvalidator\030\001 \001(\0132\032.tendermi"
    "nt.abci.ValidatorB\004\310\336\037\000R\tvalidator\022%\n\016vo"
    "te_extension\030\003 \001(\014R\rvoteExtension\022/\n\023ext"
    "ension_signature\030\004 \001(\014R\022extensionSignatu"
    "re\022A\n\rblock_id_flag\030\005 \001(\0162\035.tendermint.t"
    "ypes.BlockIDFlagR\013blockIdFlagJ\004\010\002\020\003\"\203\002\n\013"
    "Misbehavior\0224\n\004type\030\001 \001(\0162 .tendermint.a"
    "bci.MisbehaviorTypeR\004type\022>\n\tvalidator\030\002"
    " \001(\0132\032.tendermint.abci.ValidatorB\004\310\336\037\000R\t"
    "validator\022\026\n\006height\030\003 \001(\003R\006height\0228\n\004tim"
    "e\030\004 \001(\0132\032.google.protobuf.TimestampB\010\310\336\037"
    "\000\220\337\037\001R\004time\022,\n\022total_voting_power\030\005 \001(\003R"
    "\020totalVotingPower\"\202\001\n\010Snapshot\022\026\n\006height"
    "\030\001 \001(\004R\006height\022\026\n\006format\030\002 \001(\rR\006format\022\026"
    "\n\006chunks\030\003 \001(\rR\006chunks\022\022\n\004hash\030\004 \001(\014R\004ha"
    "sh\022\032\n\010metadata\030\005 \001(\014R\010metadata*9\n\013CheckT"
    "xType\022\020\n\003NEW\020\000\032\007\212\235 \003New\022\030\n\007RECHECK\020\001\032\013\212\235"
    " \007Recheck*K\n\017MisbehaviorType\022\013\n\007UNKNOWN\020"
    "\000\022\022\n\016DUPLICATE_VOTE\020\001\022\027\n\023LIGHT_CLIENT_AT"
    "TACK\020\0022\235\013\n\004ABCI\022C\n\004Echo\022\034.tendermint.abc"
    "i.RequestEcho\032\035.tendermint.abci.Response"
    "Echo\022F\n\005Flush\022\035.tendermint.abci.RequestF"
    "lush\032\036.tendermint.abci.ResponseFlush\022C\n\004"
    "Info\022\034.tendermint.abci.RequestInfo\032\035.ten"
    "dermint.abci.ResponseInfo\022L\n\007CheckTx\022\037.t"
    "endermint.abci.RequestCheckTx\032 .tendermi"
    "nt.abci.ResponseCheckTx\022F\n\005Query\022\035.tende"
    "rmint.abci.RequestQuery\032\036.tendermint.abc"
    "i.ResponseQuery\022I\n\006Commit\022\036.tendermint.a"
    "bci.RequestCommit\032\037.tendermint.abci.Resp"
    "onseCommit\022R\n\tInitChain\022!.tendermint.abc"
    "i.RequestInitChain\032\".tendermint.abci.Res"
    "ponseInitChain\022^\n\rListSnapshots\022%.tender"
    "mint.abci.RequestListSnapshots\032&.tenderm"
    "int.abci.ResponseListSnapshots\022^\n\rOfferS"
    "napshot\022%.tendermint.abci.RequestOfferSn"
    "apshot\032&.tendermint.abci.ResponseOfferSn"
    "apshot\022j\n\021LoadSnapshotChunk\022).tendermint"
    ".abci.RequestLoadSnapshotChunk\032*.tenderm"
    "int.abci.ResponseLoadSnapshotChunk\022m\n\022Ap"
    "plySnapshotChunk\022*.tendermint.abci.Reque"
    "stApplySnapshotChunk\032+.tendermint.abci.R"
    "esponseApplySnapshotChunk\022d\n\017PrepareProp"
    "osal\022\'.tendermint.abci.RequestPreparePro"
    "posal\032(.tendermint.abci.ResponsePrepareP"
    "roposal\022d\n\017ProcessProposal\022\'.tendermint."
    "abci.RequestProcessProposal\032(.tendermint"
    ".abci.ResponseProcessProposal\022U\n\nExtendV"
    "ote\022\".tendermint.abci.RequestExtendVote\032"
    "#.tendermint.abci.ResponseExtendVote\022p\n\023"
    "VerifyVoteExtension\022+.tendermint.abci.Re"
    "questVerifyVoteExtension\032,.tendermint.ab"
    "ci.ResponseVerifyVoteExtension\022^\n\rFinali"
    "zeBlock\022%.tendermint.abci.RequestFinaliz"
    "eBlock\032&.tendermint.abci.ResponseFinaliz"
    "eBlockB)Z\'github.com/cometbft/cometbft/a"
    "bci/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_tendermint_2fabci_2ftypes_2eproto_deps[6] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_tendermint_2fcrypto_2fkeys_2eproto,
        &::descriptor_table_tendermint_2fcrypto_2fproof_2eproto,
        &::descriptor_table_tendermint_2ftypes_2fparams_2eproto,
        &::descriptor_table_tendermint_2ftypes_2fvalidator_2eproto,
};
static ::absl::once_flag descriptor_table_tendermint_2fabci_2ftypes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_tendermint_2fabci_2ftypes_2eproto = {
    false,
    false,
    11457,
    descriptor_table_protodef_tendermint_2fabci_2ftypes_2eproto,
    "tendermint/abci/types.proto",
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto_once,
    descriptor_table_tendermint_2fabci_2ftypes_2eproto_deps,
    6,
    47,
    schemas,
    file_default_instances,
    TableStruct_tendermint_2fabci_2ftypes_2eproto::offsets,
    file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto,
    file_level_service_descriptors_tendermint_2fabci_2ftypes_2eproto,
};
namespace tendermint {
namespace abci {
const ::google::protobuf::EnumDescriptor* ResponseOfferSnapshot_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tendermint_2fabci_2ftypes_2eproto);
  return file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ResponseOfferSnapshot_Result_internal_data_[] = {
    393216u, 0u, };
bool ResponseOfferSnapshot_Result_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::UNKNOWN;
constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::ACCEPT;
constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::ABORT;
constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::REJECT;
constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::REJECT_FORMAT;
constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::REJECT_SENDER;
constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::Result_MIN;
constexpr ResponseOfferSnapshot_Result ResponseOfferSnapshot::Result_MAX;
constexpr int ResponseOfferSnapshot::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ResponseApplySnapshotChunk_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tendermint_2fabci_2ftypes_2eproto);
  return file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ResponseApplySnapshotChunk_Result_internal_data_[] = {
    393216u, 0u, };
bool ResponseApplySnapshotChunk_Result_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::UNKNOWN;
constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::ACCEPT;
constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::ABORT;
constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::RETRY;
constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::RETRY_SNAPSHOT;
constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::REJECT_SNAPSHOT;
constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::Result_MIN;
constexpr ResponseApplySnapshotChunk_Result ResponseApplySnapshotChunk::Result_MAX;
constexpr int ResponseApplySnapshotChunk::Result_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ResponseProcessProposal_ProposalStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tendermint_2fabci_2ftypes_2eproto);
  return file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t ResponseProcessProposal_ProposalStatus_internal_data_[] = {
    196608u, 0u, };
bool ResponseProcessProposal_ProposalStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ResponseProcessProposal_ProposalStatus ResponseProcessProposal::UNKNOWN;
constexpr ResponseProcessProposal_ProposalStatus ResponseProcessProposal::ACCEPT;
constexpr ResponseProcessProposal_ProposalStatus ResponseProcessProposal::REJECT;
constexpr ResponseProcessProposal_ProposalStatus ResponseProcessProposal::ProposalStatus_MIN;
constexpr ResponseProcessProposal_ProposalStatus ResponseProcessProposal::ProposalStatus_MAX;
constexpr int ResponseProcessProposal::ProposalStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ResponseVerifyVoteExtension_VerifyStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tendermint_2fabci_2ftypes_2eproto);
  return file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ResponseVerifyVoteExtension_VerifyStatus_internal_data_[] = {
    196608u, 0u, };
bool ResponseVerifyVoteExtension_VerifyStatus_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ResponseVerifyVoteExtension_VerifyStatus ResponseVerifyVoteExtension::UNKNOWN;
constexpr ResponseVerifyVoteExtension_VerifyStatus ResponseVerifyVoteExtension::ACCEPT;
constexpr ResponseVerifyVoteExtension_VerifyStatus ResponseVerifyVoteExtension::REJECT;
constexpr ResponseVerifyVoteExtension_VerifyStatus ResponseVerifyVoteExtension::VerifyStatus_MIN;
constexpr ResponseVerifyVoteExtension_VerifyStatus ResponseVerifyVoteExtension::VerifyStatus_MAX;
constexpr int ResponseVerifyVoteExtension::VerifyStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* CheckTxType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tendermint_2fabci_2ftypes_2eproto);
  return file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t CheckTxType_internal_data_[] = {
    131072u, 0u, };
bool CheckTxType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* MisbehaviorType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_tendermint_2fabci_2ftypes_2eproto);
  return file_level_enum_descriptors_tendermint_2fabci_2ftypes_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t MisbehaviorType_internal_data_[] = {
    196608u, 0u, };
bool MisbehaviorType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Request::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tendermint::abci::Request, _impl_._oneof_case_);
};

void Request::set_allocated_echo(::tendermint::abci::RequestEcho* echo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (echo) {
    ::google::protobuf::Arena* submessage_arena = echo->GetArena();
    if (message_arena != submessage_arena) {
      echo = ::google::protobuf::internal::GetOwnedMessage(message_arena, echo, submessage_arena);
    }
    set_has_echo();
    _impl_.value_.echo_ = echo;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.echo)
}
void Request::set_allocated_flush(::tendermint::abci::RequestFlush* flush) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (flush) {
    ::google::protobuf::Arena* submessage_arena = flush->GetArena();
    if (message_arena != submessage_arena) {
      flush = ::google::protobuf::internal::GetOwnedMessage(message_arena, flush, submessage_arena);
    }
    set_has_flush();
    _impl_.value_.flush_ = flush;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.flush)
}
void Request::set_allocated_info(::tendermint::abci::RequestInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (info) {
    ::google::protobuf::Arena* submessage_arena = info->GetArena();
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(message_arena, info, submessage_arena);
    }
    set_has_info();
    _impl_.value_.info_ = info;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.info)
}
void Request::set_allocated_init_chain(::tendermint::abci::RequestInitChain* init_chain) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (init_chain) {
    ::google::protobuf::Arena* submessage_arena = init_chain->GetArena();
    if (message_arena != submessage_arena) {
      init_chain = ::google::protobuf::internal::GetOwnedMessage(message_arena, init_chain, submessage_arena);
    }
    set_has_init_chain();
    _impl_.value_.init_chain_ = init_chain;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.init_chain)
}
void Request::set_allocated_query(::tendermint::abci::RequestQuery* query) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (query) {
    ::google::protobuf::Arena* submessage_arena = query->GetArena();
    if (message_arena != submessage_arena) {
      query = ::google::protobuf::internal::GetOwnedMessage(message_arena, query, submessage_arena);
    }
    set_has_query();
    _impl_.value_.query_ = query;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.query)
}
void Request::set_allocated_check_tx(::tendermint::abci::RequestCheckTx* check_tx) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (check_tx) {
    ::google::protobuf::Arena* submessage_arena = check_tx->GetArena();
    if (message_arena != submessage_arena) {
      check_tx = ::google::protobuf::internal::GetOwnedMessage(message_arena, check_tx, submessage_arena);
    }
    set_has_check_tx();
    _impl_.value_.check_tx_ = check_tx;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.check_tx)
}
void Request::set_allocated_commit(::tendermint::abci::RequestCommit* commit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (commit) {
    ::google::protobuf::Arena* submessage_arena = commit->GetArena();
    if (message_arena != submessage_arena) {
      commit = ::google::protobuf::internal::GetOwnedMessage(message_arena, commit, submessage_arena);
    }
    set_has_commit();
    _impl_.value_.commit_ = commit;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.commit)
}
void Request::set_allocated_list_snapshots(::tendermint::abci::RequestListSnapshots* list_snapshots) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (list_snapshots) {
    ::google::protobuf::Arena* submessage_arena = list_snapshots->GetArena();
    if (message_arena != submessage_arena) {
      list_snapshots = ::google::protobuf::internal::GetOwnedMessage(message_arena, list_snapshots, submessage_arena);
    }
    set_has_list_snapshots();
    _impl_.value_.list_snapshots_ = list_snapshots;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.list_snapshots)
}
void Request::set_allocated_offer_snapshot(::tendermint::abci::RequestOfferSnapshot* offer_snapshot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (offer_snapshot) {
    ::google::protobuf::Arena* submessage_arena = offer_snapshot->GetArena();
    if (message_arena != submessage_arena) {
      offer_snapshot = ::google::protobuf::internal::GetOwnedMessage(message_arena, offer_snapshot, submessage_arena);
    }
    set_has_offer_snapshot();
    _impl_.value_.offer_snapshot_ = offer_snapshot;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.offer_snapshot)
}
void Request::set_allocated_load_snapshot_chunk(::tendermint::abci::RequestLoadSnapshotChunk* load_snapshot_chunk) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (load_snapshot_chunk) {
    ::google::protobuf::Arena* submessage_arena = load_snapshot_chunk->GetArena();
    if (message_arena != submessage_arena) {
      load_snapshot_chunk = ::google::protobuf::internal::GetOwnedMessage(message_arena, load_snapshot_chunk, submessage_arena);
    }
    set_has_load_snapshot_chunk();
    _impl_.value_.load_snapshot_chunk_ = load_snapshot_chunk;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.load_snapshot_chunk)
}
void Request::set_allocated_apply_snapshot_chunk(::tendermint::abci::RequestApplySnapshotChunk* apply_snapshot_chunk) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (apply_snapshot_chunk) {
    ::google::protobuf::Arena* submessage_arena = apply_snapshot_chunk->GetArena();
    if (message_arena != submessage_arena) {
      apply_snapshot_chunk = ::google::protobuf::internal::GetOwnedMessage(message_arena, apply_snapshot_chunk, submessage_arena);
    }
    set_has_apply_snapshot_chunk();
    _impl_.value_.apply_snapshot_chunk_ = apply_snapshot_chunk;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.apply_snapshot_chunk)
}
void Request::set_allocated_prepare_proposal(::tendermint::abci::RequestPrepareProposal* prepare_proposal) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (prepare_proposal) {
    ::google::protobuf::Arena* submessage_arena = prepare_proposal->GetArena();
    if (message_arena != submessage_arena) {
      prepare_proposal = ::google::protobuf::internal::GetOwnedMessage(message_arena, prepare_proposal, submessage_arena);
    }
    set_has_prepare_proposal();
    _impl_.value_.prepare_proposal_ = prepare_proposal;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.prepare_proposal)
}
void Request::set_allocated_process_proposal(::tendermint::abci::RequestProcessProposal* process_proposal) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (process_proposal) {
    ::google::protobuf::Arena* submessage_arena = process_proposal->GetArena();
    if (message_arena != submessage_arena) {
      process_proposal = ::google::protobuf::internal::GetOwnedMessage(message_arena, process_proposal, submessage_arena);
    }
    set_has_process_proposal();
    _impl_.value_.process_proposal_ = process_proposal;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.process_proposal)
}
void Request::set_allocated_extend_vote(::tendermint::abci::RequestExtendVote* extend_vote) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (extend_vote) {
    ::google::protobuf::Arena* submessage_arena = extend_vote->GetArena();
    if (message_arena != submessage_arena) {
      extend_vote = ::google::protobuf::internal::GetOwnedMessage(message_arena, extend_vote, submessage_arena);
    }
    set_has_extend_vote();
    _impl_.value_.extend_vote_ = extend_vote;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.extend_vote)
}
void Request::set_allocated_verify_vote_extension(::tendermint::abci::RequestVerifyVoteExtension* verify_vote_extension) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (verify_vote_extension) {
    ::google::protobuf::Arena* submessage_arena = verify_vote_extension->GetArena();
    if (message_arena != submessage_arena) {
      verify_vote_extension = ::google::protobuf::internal::GetOwnedMessage(message_arena, verify_vote_extension, submessage_arena);
    }
    set_has_verify_vote_extension();
    _impl_.value_.verify_vote_extension_ = verify_vote_extension;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.verify_vote_extension)
}
void Request::set_allocated_finalize_block(::tendermint::abci::RequestFinalizeBlock* finalize_block) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (finalize_block) {
    ::google::protobuf::Arena* submessage_arena = finalize_block->GetArena();
    if (message_arena != submessage_arena) {
      finalize_block = ::google::protobuf::internal::GetOwnedMessage(message_arena, finalize_block, submessage_arena);
    }
    set_has_finalize_block();
    _impl_.value_.finalize_block_ = finalize_block;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Request.finalize_block)
}
Request::Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::Request& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Request::Request(
    ::google::protobuf::Arena* arena,
    const Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kEcho:
        _impl_.value_.echo_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestEcho>(arena, *from._impl_.value_.echo_);
        break;
      case kFlush:
        _impl_.value_.flush_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFlush>(arena, *from._impl_.value_.flush_);
        break;
      case kInfo:
        _impl_.value_.info_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestInfo>(arena, *from._impl_.value_.info_);
        break;
      case kInitChain:
        _impl_.value_.init_chain_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestInitChain>(arena, *from._impl_.value_.init_chain_);
        break;
      case kQuery:
        _impl_.value_.query_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestQuery>(arena, *from._impl_.value_.query_);
        break;
      case kCheckTx:
        _impl_.value_.check_tx_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestCheckTx>(arena, *from._impl_.value_.check_tx_);
        break;
      case kCommit:
        _impl_.value_.commit_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestCommit>(arena, *from._impl_.value_.commit_);
        break;
      case kListSnapshots:
        _impl_.value_.list_snapshots_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestListSnapshots>(arena, *from._impl_.value_.list_snapshots_);
        break;
      case kOfferSnapshot:
        _impl_.value_.offer_snapshot_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestOfferSnapshot>(arena, *from._impl_.value_.offer_snapshot_);
        break;
      case kLoadSnapshotChunk:
        _impl_.value_.load_snapshot_chunk_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestLoadSnapshotChunk>(arena, *from._impl_.value_.load_snapshot_chunk_);
        break;
      case kApplySnapshotChunk:
        _impl_.value_.apply_snapshot_chunk_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestApplySnapshotChunk>(arena, *from._impl_.value_.apply_snapshot_chunk_);
        break;
      case kPrepareProposal:
        _impl_.value_.prepare_proposal_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestPrepareProposal>(arena, *from._impl_.value_.prepare_proposal_);
        break;
      case kProcessProposal:
        _impl_.value_.process_proposal_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestProcessProposal>(arena, *from._impl_.value_.process_proposal_);
        break;
      case kExtendVote:
        _impl_.value_.extend_vote_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestExtendVote>(arena, *from._impl_.value_.extend_vote_);
        break;
      case kVerifyVoteExtension:
        _impl_.value_.verify_vote_extension_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestVerifyVoteExtension>(arena, *from._impl_.value_.verify_vote_extension_);
        break;
      case kFinalizeBlock:
        _impl_.value_.finalize_block_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFinalizeBlock>(arena, *from._impl_.value_.finalize_block_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Request::~Request() {
  // @@protoc_insertion_point(destructor:tendermint.abci.Request)
  SharedDtor(*this);
}
inline void Request::SharedDtor(MessageLite& self) {
  Request& this_ = static_cast<Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void Request::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:tendermint.abci.Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kEcho: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.echo_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.echo_);
      }
      break;
    }
    case kFlush: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.flush_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.flush_);
      }
      break;
    }
    case kInfo: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.info_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.info_);
      }
      break;
    }
    case kInitChain: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.init_chain_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.init_chain_);
      }
      break;
    }
    case kQuery: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.query_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.query_);
      }
      break;
    }
    case kCheckTx: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.check_tx_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.check_tx_);
      }
      break;
    }
    case kCommit: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.commit_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.commit_);
      }
      break;
    }
    case kListSnapshots: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.list_snapshots_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.list_snapshots_);
      }
      break;
    }
    case kOfferSnapshot: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.offer_snapshot_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.offer_snapshot_);
      }
      break;
    }
    case kLoadSnapshotChunk: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.load_snapshot_chunk_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.load_snapshot_chunk_);
      }
      break;
    }
    case kApplySnapshotChunk: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.apply_snapshot_chunk_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.apply_snapshot_chunk_);
      }
      break;
    }
    case kPrepareProposal: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.prepare_proposal_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.prepare_proposal_);
      }
      break;
    }
    case kProcessProposal: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.process_proposal_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.process_proposal_);
      }
      break;
    }
    case kExtendVote: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.extend_vote_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.extend_vote_);
      }
      break;
    }
    case kVerifyVoteExtension: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.verify_vote_extension_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.verify_vote_extension_);
      }
      break;
    }
    case kFinalizeBlock: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.finalize_block_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.finalize_block_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Request(arena);
}
constexpr auto Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Request),
                                            alignof(Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Request>(), &Request::ByteSizeLong,
            &Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Request, _impl_._cached_size_),
        false,
    },
    &Request::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 16, 16, 0, 2> Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    20, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293919560,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    16,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.RequestEcho echo = 1 [json_name = "echo"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.echo_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestFlush flush = 2 [json_name = "flush"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.flush_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestInfo info = 3 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.info_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestInitChain init_chain = 5 [json_name = "initChain"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.init_chain_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestQuery query = 6 [json_name = "query"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.query_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestCheckTx check_tx = 8 [json_name = "checkTx"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.check_tx_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestCommit commit = 11 [json_name = "commit"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.commit_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestListSnapshots list_snapshots = 12 [json_name = "listSnapshots"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.list_snapshots_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestOfferSnapshot offer_snapshot = 13 [json_name = "offerSnapshot"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.offer_snapshot_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestLoadSnapshotChunk load_snapshot_chunk = 14 [json_name = "loadSnapshotChunk"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.load_snapshot_chunk_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestApplySnapshotChunk apply_snapshot_chunk = 15 [json_name = "applySnapshotChunk"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.apply_snapshot_chunk_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestPrepareProposal prepare_proposal = 16 [json_name = "prepareProposal"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.prepare_proposal_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestProcessProposal process_proposal = 17 [json_name = "processProposal"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.process_proposal_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestExtendVote extend_vote = 18 [json_name = "extendVote"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.extend_vote_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestVerifyVoteExtension verify_vote_extension = 19 [json_name = "verifyVoteExtension"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.verify_vote_extension_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.RequestFinalizeBlock finalize_block = 20 [json_name = "finalizeBlock"];
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.value_.finalize_block_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestEcho>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestFlush>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestInfo>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestInitChain>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestQuery>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestCheckTx>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestCommit>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestListSnapshots>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestOfferSnapshot>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestLoadSnapshotChunk>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestApplySnapshotChunk>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestPrepareProposal>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestProcessProposal>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestExtendVote>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestVerifyVoteExtension>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestFinalizeBlock>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Request& this_ = static_cast<const Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kEcho: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.echo_, this_._impl_.value_.echo_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFlush: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.flush_, this_._impl_.value_.flush_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kInfo: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.value_.info_, this_._impl_.value_.info_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kInitChain: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.value_.init_chain_, this_._impl_.value_.init_chain_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kQuery: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.value_.query_, this_._impl_.value_.query_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCheckTx: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.value_.check_tx_, this_._impl_.value_.check_tx_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCommit: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.value_.commit_, this_._impl_.value_.commit_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kListSnapshots: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.value_.list_snapshots_, this_._impl_.value_.list_snapshots_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOfferSnapshot: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.value_.offer_snapshot_, this_._impl_.value_.offer_snapshot_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLoadSnapshotChunk: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  14, *this_._impl_.value_.load_snapshot_chunk_, this_._impl_.value_.load_snapshot_chunk_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kApplySnapshotChunk: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.value_.apply_snapshot_chunk_, this_._impl_.value_.apply_snapshot_chunk_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPrepareProposal: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  16, *this_._impl_.value_.prepare_proposal_, this_._impl_.value_.prepare_proposal_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kProcessProposal: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  17, *this_._impl_.value_.process_proposal_, this_._impl_.value_.process_proposal_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kExtendVote: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  18, *this_._impl_.value_.extend_vote_, this_._impl_.value_.extend_vote_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kVerifyVoteExtension: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  19, *this_._impl_.value_.verify_vote_extension_, this_._impl_.value_.verify_vote_extension_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFinalizeBlock: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  20, *this_._impl_.value_.finalize_block_, this_._impl_.value_.finalize_block_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Request::ByteSizeLong(const MessageLite& base) {
          const Request& this_ = static_cast<const Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Request::ByteSizeLong() const {
          const Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .tendermint.abci.RequestEcho echo = 1 [json_name = "echo"];
            case kEcho: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.echo_);
              break;
            }
            // .tendermint.abci.RequestFlush flush = 2 [json_name = "flush"];
            case kFlush: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.flush_);
              break;
            }
            // .tendermint.abci.RequestInfo info = 3 [json_name = "info"];
            case kInfo: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.info_);
              break;
            }
            // .tendermint.abci.RequestInitChain init_chain = 5 [json_name = "initChain"];
            case kInitChain: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.init_chain_);
              break;
            }
            // .tendermint.abci.RequestQuery query = 6 [json_name = "query"];
            case kQuery: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.query_);
              break;
            }
            // .tendermint.abci.RequestCheckTx check_tx = 8 [json_name = "checkTx"];
            case kCheckTx: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.check_tx_);
              break;
            }
            // .tendermint.abci.RequestCommit commit = 11 [json_name = "commit"];
            case kCommit: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.commit_);
              break;
            }
            // .tendermint.abci.RequestListSnapshots list_snapshots = 12 [json_name = "listSnapshots"];
            case kListSnapshots: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.list_snapshots_);
              break;
            }
            // .tendermint.abci.RequestOfferSnapshot offer_snapshot = 13 [json_name = "offerSnapshot"];
            case kOfferSnapshot: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.offer_snapshot_);
              break;
            }
            // .tendermint.abci.RequestLoadSnapshotChunk load_snapshot_chunk = 14 [json_name = "loadSnapshotChunk"];
            case kLoadSnapshotChunk: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.load_snapshot_chunk_);
              break;
            }
            // .tendermint.abci.RequestApplySnapshotChunk apply_snapshot_chunk = 15 [json_name = "applySnapshotChunk"];
            case kApplySnapshotChunk: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.apply_snapshot_chunk_);
              break;
            }
            // .tendermint.abci.RequestPrepareProposal prepare_proposal = 16 [json_name = "prepareProposal"];
            case kPrepareProposal: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.prepare_proposal_);
              break;
            }
            // .tendermint.abci.RequestProcessProposal process_proposal = 17 [json_name = "processProposal"];
            case kProcessProposal: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.process_proposal_);
              break;
            }
            // .tendermint.abci.RequestExtendVote extend_vote = 18 [json_name = "extendVote"];
            case kExtendVote: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.extend_vote_);
              break;
            }
            // .tendermint.abci.RequestVerifyVoteExtension verify_vote_extension = 19 [json_name = "verifyVoteExtension"];
            case kVerifyVoteExtension: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.verify_vote_extension_);
              break;
            }
            // .tendermint.abci.RequestFinalizeBlock finalize_block = 20 [json_name = "finalizeBlock"];
            case kFinalizeBlock: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.finalize_block_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Request*>(&to_msg);
  auto& from = static_cast<const Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kEcho: {
        if (oneof_needs_init) {
          _this->_impl_.value_.echo_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestEcho>(arena, *from._impl_.value_.echo_);
        } else {
          _this->_impl_.value_.echo_->MergeFrom(from._internal_echo());
        }
        break;
      }
      case kFlush: {
        if (oneof_needs_init) {
          _this->_impl_.value_.flush_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFlush>(arena, *from._impl_.value_.flush_);
        } else {
          _this->_impl_.value_.flush_->MergeFrom(from._internal_flush());
        }
        break;
      }
      case kInfo: {
        if (oneof_needs_init) {
          _this->_impl_.value_.info_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestInfo>(arena, *from._impl_.value_.info_);
        } else {
          _this->_impl_.value_.info_->MergeFrom(from._internal_info());
        }
        break;
      }
      case kInitChain: {
        if (oneof_needs_init) {
          _this->_impl_.value_.init_chain_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestInitChain>(arena, *from._impl_.value_.init_chain_);
        } else {
          _this->_impl_.value_.init_chain_->MergeFrom(from._internal_init_chain());
        }
        break;
      }
      case kQuery: {
        if (oneof_needs_init) {
          _this->_impl_.value_.query_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestQuery>(arena, *from._impl_.value_.query_);
        } else {
          _this->_impl_.value_.query_->MergeFrom(from._internal_query());
        }
        break;
      }
      case kCheckTx: {
        if (oneof_needs_init) {
          _this->_impl_.value_.check_tx_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestCheckTx>(arena, *from._impl_.value_.check_tx_);
        } else {
          _this->_impl_.value_.check_tx_->MergeFrom(from._internal_check_tx());
        }
        break;
      }
      case kCommit: {
        if (oneof_needs_init) {
          _this->_impl_.value_.commit_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestCommit>(arena, *from._impl_.value_.commit_);
        } else {
          _this->_impl_.value_.commit_->MergeFrom(from._internal_commit());
        }
        break;
      }
      case kListSnapshots: {
        if (oneof_needs_init) {
          _this->_impl_.value_.list_snapshots_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestListSnapshots>(arena, *from._impl_.value_.list_snapshots_);
        } else {
          _this->_impl_.value_.list_snapshots_->MergeFrom(from._internal_list_snapshots());
        }
        break;
      }
      case kOfferSnapshot: {
        if (oneof_needs_init) {
          _this->_impl_.value_.offer_snapshot_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestOfferSnapshot>(arena, *from._impl_.value_.offer_snapshot_);
        } else {
          _this->_impl_.value_.offer_snapshot_->MergeFrom(from._internal_offer_snapshot());
        }
        break;
      }
      case kLoadSnapshotChunk: {
        if (oneof_needs_init) {
          _this->_impl_.value_.load_snapshot_chunk_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestLoadSnapshotChunk>(arena, *from._impl_.value_.load_snapshot_chunk_);
        } else {
          _this->_impl_.value_.load_snapshot_chunk_->MergeFrom(from._internal_load_snapshot_chunk());
        }
        break;
      }
      case kApplySnapshotChunk: {
        if (oneof_needs_init) {
          _this->_impl_.value_.apply_snapshot_chunk_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestApplySnapshotChunk>(arena, *from._impl_.value_.apply_snapshot_chunk_);
        } else {
          _this->_impl_.value_.apply_snapshot_chunk_->MergeFrom(from._internal_apply_snapshot_chunk());
        }
        break;
      }
      case kPrepareProposal: {
        if (oneof_needs_init) {
          _this->_impl_.value_.prepare_proposal_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestPrepareProposal>(arena, *from._impl_.value_.prepare_proposal_);
        } else {
          _this->_impl_.value_.prepare_proposal_->MergeFrom(from._internal_prepare_proposal());
        }
        break;
      }
      case kProcessProposal: {
        if (oneof_needs_init) {
          _this->_impl_.value_.process_proposal_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestProcessProposal>(arena, *from._impl_.value_.process_proposal_);
        } else {
          _this->_impl_.value_.process_proposal_->MergeFrom(from._internal_process_proposal());
        }
        break;
      }
      case kExtendVote: {
        if (oneof_needs_init) {
          _this->_impl_.value_.extend_vote_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestExtendVote>(arena, *from._impl_.value_.extend_vote_);
        } else {
          _this->_impl_.value_.extend_vote_->MergeFrom(from._internal_extend_vote());
        }
        break;
      }
      case kVerifyVoteExtension: {
        if (oneof_needs_init) {
          _this->_impl_.value_.verify_vote_extension_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestVerifyVoteExtension>(arena, *from._impl_.value_.verify_vote_extension_);
        } else {
          _this->_impl_.value_.verify_vote_extension_->MergeFrom(from._internal_verify_vote_extension());
        }
        break;
      }
      case kFinalizeBlock: {
        if (oneof_needs_init) {
          _this->_impl_.value_.finalize_block_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFinalizeBlock>(arena, *from._impl_.value_.finalize_block_);
        } else {
          _this->_impl_.value_.finalize_block_->MergeFrom(from._internal_finalize_block());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Request::InternalSwap(Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestEcho::_Internal {
 public:
};

RequestEcho::RequestEcho(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestEcho)
}
inline PROTOBUF_NDEBUG_INLINE RequestEcho::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestEcho& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

RequestEcho::RequestEcho(
    ::google::protobuf::Arena* arena,
    const RequestEcho& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestEcho* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestEcho)
}
inline PROTOBUF_NDEBUG_INLINE RequestEcho::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void RequestEcho::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RequestEcho::~RequestEcho() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestEcho)
  SharedDtor(*this);
}
inline void RequestEcho::SharedDtor(MessageLite& self) {
  RequestEcho& this_ = static_cast<RequestEcho&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RequestEcho::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestEcho(arena);
}
constexpr auto RequestEcho::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestEcho),
                                            alignof(RequestEcho));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestEcho::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestEcho_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestEcho::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestEcho>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestEcho::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestEcho>(), &RequestEcho::ByteSizeLong,
            &RequestEcho::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestEcho, _impl_._cached_size_),
        false,
    },
    &RequestEcho::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestEcho::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 43, 2> RequestEcho::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestEcho>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestEcho, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(RequestEcho, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\7\0\0\0\0\0\0"
    "tendermint.abci.RequestEcho"
    "message"
  }},
};

PROTOBUF_NOINLINE void RequestEcho::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestEcho)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestEcho::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestEcho& this_ = static_cast<const RequestEcho&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestEcho::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestEcho& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestEcho)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message = 1 [json_name = "message"];
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.RequestEcho.message");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestEcho)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestEcho::ByteSizeLong(const MessageLite& base) {
          const RequestEcho& this_ = static_cast<const RequestEcho&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestEcho::ByteSizeLong() const {
          const RequestEcho& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestEcho)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string message = 1 [json_name = "message"];
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestEcho::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestEcho*>(&to_msg);
  auto& from = static_cast<const RequestEcho&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestEcho)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestEcho::CopyFrom(const RequestEcho& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestEcho)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestEcho::InternalSwap(RequestEcho* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata RequestEcho::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestFlush::_Internal {
 public:
};

RequestFlush::RequestFlush(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestFlush)
}
RequestFlush::RequestFlush(
    ::google::protobuf::Arena* arena,
    const RequestFlush& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestFlush* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestFlush)
}

inline void* RequestFlush::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestFlush(arena);
}
constexpr auto RequestFlush::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestFlush),
                                            alignof(RequestFlush));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestFlush::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestFlush_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestFlush::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<RequestFlush>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestFlush::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<RequestFlush>(), &RequestFlush::ByteSizeLong,
            &RequestFlush::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestFlush, _impl_._cached_size_),
        false,
    },
    &RequestFlush::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestFlush::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> RequestFlush::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestFlush>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata RequestFlush::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestInfo::_Internal {
 public:
};

RequestInfo::RequestInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestInfo)
}
inline PROTOBUF_NDEBUG_INLINE RequestInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestInfo& from_msg)
      : version_(arena, from.version_),
        abci_version_(arena, from.abci_version_),
        _cached_size_{0} {}

RequestInfo::RequestInfo(
    ::google::protobuf::Arena* arena,
    const RequestInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, block_version_),
           offsetof(Impl_, p2p_version_) -
               offsetof(Impl_, block_version_) +
               sizeof(Impl_::p2p_version_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestInfo)
}
inline PROTOBUF_NDEBUG_INLINE RequestInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : version_(arena),
        abci_version_(arena),
        _cached_size_{0} {}

inline void RequestInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, block_version_),
           0,
           offsetof(Impl_, p2p_version_) -
               offsetof(Impl_, block_version_) +
               sizeof(Impl_::p2p_version_));
}
RequestInfo::~RequestInfo() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestInfo)
  SharedDtor(*this);
}
inline void RequestInfo::SharedDtor(MessageLite& self) {
  RequestInfo& this_ = static_cast<RequestInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.version_.Destroy();
  this_._impl_.abci_version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RequestInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestInfo(arena);
}
constexpr auto RequestInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestInfo),
                                            alignof(RequestInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestInfo>(), &RequestInfo::ByteSizeLong,
            &RequestInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_._cached_size_),
        false,
    },
    &RequestInfo::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 55, 2> RequestInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string abci_version = 4 [json_name = "abciVersion"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.abci_version_)}},
    // string version = 1 [json_name = "version"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.version_)}},
    // uint64 block_version = 2 [json_name = "blockVersion"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestInfo, _impl_.block_version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.block_version_)}},
    // uint64 p2p_version = 3 [json_name = "p2pVersion"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestInfo, _impl_.p2p_version_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.p2p_version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string version = 1 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 block_version = 2 [json_name = "blockVersion"];
    {PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.block_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 p2p_version = 3 [json_name = "p2pVersion"];
    {PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.p2p_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string abci_version = 4 [json_name = "abciVersion"];
    {PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.abci_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\7\0\0\14\0\0\0"
    "tendermint.abci.RequestInfo"
    "version"
    "abci_version"
  }},
};

PROTOBUF_NOINLINE void RequestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.version_.ClearToEmpty();
  _impl_.abci_version_.ClearToEmpty();
  ::memset(&_impl_.block_version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.p2p_version_) -
      reinterpret_cast<char*>(&_impl_.block_version_)) + sizeof(_impl_.p2p_version_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestInfo& this_ = static_cast<const RequestInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string version = 1 [json_name = "version"];
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.RequestInfo.version");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 block_version = 2 [json_name = "blockVersion"];
          if (this_._internal_block_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_block_version(), target);
          }

          // uint64 p2p_version = 3 [json_name = "p2pVersion"];
          if (this_._internal_p2p_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_p2p_version(), target);
          }

          // string abci_version = 4 [json_name = "abciVersion"];
          if (!this_._internal_abci_version().empty()) {
            const std::string& _s = this_._internal_abci_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.RequestInfo.abci_version");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestInfo::ByteSizeLong(const MessageLite& base) {
          const RequestInfo& this_ = static_cast<const RequestInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestInfo::ByteSizeLong() const {
          const RequestInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string version = 1 [json_name = "version"];
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // string abci_version = 4 [json_name = "abciVersion"];
            if (!this_._internal_abci_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_abci_version());
            }
            // uint64 block_version = 2 [json_name = "blockVersion"];
            if (this_._internal_block_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_block_version());
            }
            // uint64 p2p_version = 3 [json_name = "p2pVersion"];
            if (this_._internal_p2p_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_p2p_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestInfo*>(&to_msg);
  auto& from = static_cast<const RequestInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_abci_version().empty()) {
    _this->_internal_set_abci_version(from._internal_abci_version());
  }
  if (from._internal_block_version() != 0) {
    _this->_impl_.block_version_ = from._impl_.block_version_;
  }
  if (from._internal_p2p_version() != 0) {
    _this->_impl_.p2p_version_ = from._impl_.p2p_version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestInfo::CopyFrom(const RequestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestInfo::InternalSwap(RequestInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.abci_version_, &other->_impl_.abci_version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.p2p_version_)
      + sizeof(RequestInfo::_impl_.p2p_version_)
      - PROTOBUF_FIELD_OFFSET(RequestInfo, _impl_.block_version_)>(
          reinterpret_cast<char*>(&_impl_.block_version_),
          reinterpret_cast<char*>(&other->_impl_.block_version_));
}

::google::protobuf::Metadata RequestInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestInitChain::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestInitChain>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_._has_bits_);
};

void RequestInitChain::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void RequestInitChain::clear_consensus_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consensus_params_ != nullptr) _impl_.consensus_params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RequestInitChain::RequestInitChain(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestInitChain)
}
inline PROTOBUF_NDEBUG_INLINE RequestInitChain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestInitChain& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validators_{visibility, arena, from.validators_},
        chain_id_(arena, from.chain_id_),
        app_state_bytes_(arena, from.app_state_bytes_) {}

RequestInitChain::RequestInitChain(
    ::google::protobuf::Arena* arena,
    const RequestInitChain& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestInitChain* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.consensus_params_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::ConsensusParams>(
                              arena, *from._impl_.consensus_params_)
                        : nullptr;
  _impl_.initial_height_ = from._impl_.initial_height_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestInitChain)
}
inline PROTOBUF_NDEBUG_INLINE RequestInitChain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validators_{visibility, arena},
        chain_id_(arena),
        app_state_bytes_(arena) {}

inline void RequestInitChain::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, initial_height_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::initial_height_));
}
RequestInitChain::~RequestInitChain() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestInitChain)
  SharedDtor(*this);
}
inline void RequestInitChain::SharedDtor(MessageLite& self) {
  RequestInitChain& this_ = static_cast<RequestInitChain&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chain_id_.Destroy();
  this_._impl_.app_state_bytes_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.consensus_params_;
  this_._impl_.~Impl_();
}

inline void* RequestInitChain::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestInitChain(arena);
}
constexpr auto RequestInitChain::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.validators_) +
          decltype(RequestInitChain::_impl_.validators_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RequestInitChain), alignof(RequestInitChain), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RequestInitChain::PlacementNew_,
                                 sizeof(RequestInitChain),
                                 alignof(RequestInitChain));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestInitChain::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestInitChain_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestInitChain::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestInitChain>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestInitChain::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestInitChain>(), &RequestInitChain::ByteSizeLong,
            &RequestInitChain::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_._cached_size_),
        false,
    },
    &RequestInitChain::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestInitChain::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 49, 2> RequestInitChain::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestInitChain>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Timestamp time = 1 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.time_)}},
    // string chain_id = 2 [json_name = "chainId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.chain_id_)}},
    // .tendermint.types.ConsensusParams consensus_params = 3 [json_name = "consensusParams"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.consensus_params_)}},
    // repeated .tendermint.abci.ValidatorUpdate validators = 4 [json_name = "validators", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.validators_)}},
    // bytes app_state_bytes = 5 [json_name = "appStateBytes"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.app_state_bytes_)}},
    // int64 initial_height = 6 [json_name = "initialHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestInitChain, _impl_.initial_height_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.initial_height_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp time = 1 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string chain_id = 2 [json_name = "chainId"];
    {PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.chain_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .tendermint.types.ConsensusParams consensus_params = 3 [json_name = "consensusParams"];
    {PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.consensus_params_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.ValidatorUpdate validators = 4 [json_name = "validators", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.validators_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes app_state_bytes = 5 [json_name = "appStateBytes"];
    {PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.app_state_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 initial_height = 6 [json_name = "initialHeight"];
    {PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.initial_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tendermint::types::ConsensusParams>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ValidatorUpdate>()},
  }}, {{
    "\40\0\10\0\0\0\0\0"
    "tendermint.abci.RequestInitChain"
    "chain_id"
  }},
};

PROTOBUF_NOINLINE void RequestInitChain::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestInitChain)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validators_.Clear();
  _impl_.chain_id_.ClearToEmpty();
  _impl_.app_state_bytes_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.consensus_params_ != nullptr);
      _impl_.consensus_params_->Clear();
    }
  }
  _impl_.initial_height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestInitChain::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestInitChain& this_ = static_cast<const RequestInitChain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestInitChain::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestInitChain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestInitChain)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp time = 1 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // string chain_id = 2 [json_name = "chainId"];
          if (!this_._internal_chain_id().empty()) {
            const std::string& _s = this_._internal_chain_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.RequestInitChain.chain_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .tendermint.types.ConsensusParams consensus_params = 3 [json_name = "consensusParams"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.consensus_params_, this_._impl_.consensus_params_->GetCachedSize(), target,
                stream);
          }

          // repeated .tendermint.abci.ValidatorUpdate validators = 4 [json_name = "validators", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validators_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validators().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bytes app_state_bytes = 5 [json_name = "appStateBytes"];
          if (!this_._internal_app_state_bytes().empty()) {
            const std::string& _s = this_._internal_app_state_bytes();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          // int64 initial_height = 6 [json_name = "initialHeight"];
          if (this_._internal_initial_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_initial_height(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestInitChain)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestInitChain::ByteSizeLong(const MessageLite& base) {
          const RequestInitChain& this_ = static_cast<const RequestInitChain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestInitChain::ByteSizeLong() const {
          const RequestInitChain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestInitChain)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.ValidatorUpdate validators = 4 [json_name = "validators", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_validators_size();
              for (const auto& msg : this_._internal_validators()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string chain_id = 2 [json_name = "chainId"];
            if (!this_._internal_chain_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_chain_id());
            }
            // bytes app_state_bytes = 5 [json_name = "appStateBytes"];
            if (!this_._internal_app_state_bytes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_app_state_bytes());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp time = 1 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
            // .tendermint.types.ConsensusParams consensus_params = 3 [json_name = "consensusParams"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.consensus_params_);
            }
          }
           {
            // int64 initial_height = 6 [json_name = "initialHeight"];
            if (this_._internal_initial_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_initial_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestInitChain::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestInitChain*>(&to_msg);
  auto& from = static_cast<const RequestInitChain&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestInitChain)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validators()->MergeFrom(
      from._internal_validators());
  if (!from._internal_chain_id().empty()) {
    _this->_internal_set_chain_id(from._internal_chain_id());
  }
  if (!from._internal_app_state_bytes().empty()) {
    _this->_internal_set_app_state_bytes(from._internal_app_state_bytes());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.consensus_params_ != nullptr);
      if (_this->_impl_.consensus_params_ == nullptr) {
        _this->_impl_.consensus_params_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::types::ConsensusParams>(arena, *from._impl_.consensus_params_);
      } else {
        _this->_impl_.consensus_params_->MergeFrom(*from._impl_.consensus_params_);
      }
    }
  }
  if (from._internal_initial_height() != 0) {
    _this->_impl_.initial_height_ = from._impl_.initial_height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestInitChain::CopyFrom(const RequestInitChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestInitChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestInitChain::InternalSwap(RequestInitChain* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.validators_.InternalSwap(&other->_impl_.validators_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chain_id_, &other->_impl_.chain_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_state_bytes_, &other->_impl_.app_state_bytes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.initial_height_)
      + sizeof(RequestInitChain::_impl_.initial_height_)
      - PROTOBUF_FIELD_OFFSET(RequestInitChain, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata RequestInitChain::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestQuery::_Internal {
 public:
};

RequestQuery::RequestQuery(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestQuery)
}
inline PROTOBUF_NDEBUG_INLINE RequestQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestQuery& from_msg)
      : data_(arena, from.data_),
        path_(arena, from.path_),
        _cached_size_{0} {}

RequestQuery::RequestQuery(
    ::google::protobuf::Arena* arena,
    const RequestQuery& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestQuery* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, prove_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::prove_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestQuery)
}
inline PROTOBUF_NDEBUG_INLINE RequestQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        path_(arena),
        _cached_size_{0} {}

inline void RequestQuery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, prove_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::prove_));
}
RequestQuery::~RequestQuery() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestQuery)
  SharedDtor(*this);
}
inline void RequestQuery::SharedDtor(MessageLite& self) {
  RequestQuery& this_ = static_cast<RequestQuery&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RequestQuery::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestQuery(arena);
}
constexpr auto RequestQuery::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestQuery),
                                            alignof(RequestQuery));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestQuery::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestQuery_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestQuery::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestQuery>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestQuery::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestQuery>(), &RequestQuery::ByteSizeLong,
            &RequestQuery::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_._cached_size_),
        false,
    },
    &RequestQuery::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestQuery::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 41, 2> RequestQuery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestQuery>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool prove = 4 [json_name = "prove"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RequestQuery, _impl_.prove_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.prove_)}},
    // bytes data = 1 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.data_)}},
    // string path = 2 [json_name = "path"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.path_)}},
    // int64 height = 3 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestQuery, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string path = 2 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 height = 3 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool prove = 4 [json_name = "prove"];
    {PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.prove_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\34\0\4\0\0\0\0\0"
    "tendermint.abci.RequestQuery"
    "path"
  }},
};

PROTOBUF_NOINLINE void RequestQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestQuery)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.path_.ClearToEmpty();
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.prove_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.prove_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestQuery::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestQuery& this_ = static_cast<const RequestQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestQuery::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestQuery)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // string path = 2 [json_name = "path"];
          if (!this_._internal_path().empty()) {
            const std::string& _s = this_._internal_path();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.RequestQuery.path");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 height = 3 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_height(), target);
          }

          // bool prove = 4 [json_name = "prove"];
          if (this_._internal_prove() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_prove(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestQuery)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestQuery::ByteSizeLong(const MessageLite& base) {
          const RequestQuery& this_ = static_cast<const RequestQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestQuery::ByteSizeLong() const {
          const RequestQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestQuery)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes data = 1 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string path = 2 [json_name = "path"];
            if (!this_._internal_path().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_path());
            }
            // int64 height = 3 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
            // bool prove = 4 [json_name = "prove"];
            if (this_._internal_prove() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestQuery::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestQuery*>(&to_msg);
  auto& from = static_cast<const RequestQuery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_prove() != 0) {
    _this->_impl_.prove_ = from._impl_.prove_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestQuery::CopyFrom(const RequestQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestQuery::InternalSwap(RequestQuery* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.prove_)
      + sizeof(RequestQuery::_impl_.prove_)
      - PROTOBUF_FIELD_OFFSET(RequestQuery, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata RequestQuery::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestCheckTx::_Internal {
 public:
};

RequestCheckTx::RequestCheckTx(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestCheckTx)
}
inline PROTOBUF_NDEBUG_INLINE RequestCheckTx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestCheckTx& from_msg)
      : tx_(arena, from.tx_),
        _cached_size_{0} {}

RequestCheckTx::RequestCheckTx(
    ::google::protobuf::Arena* arena,
    const RequestCheckTx& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestCheckTx* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestCheckTx)
}
inline PROTOBUF_NDEBUG_INLINE RequestCheckTx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tx_(arena),
        _cached_size_{0} {}

inline void RequestCheckTx::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
RequestCheckTx::~RequestCheckTx() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestCheckTx)
  SharedDtor(*this);
}
inline void RequestCheckTx::SharedDtor(MessageLite& self) {
  RequestCheckTx& this_ = static_cast<RequestCheckTx&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tx_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RequestCheckTx::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestCheckTx(arena);
}
constexpr auto RequestCheckTx::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestCheckTx),
                                            alignof(RequestCheckTx));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestCheckTx::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestCheckTx_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestCheckTx::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestCheckTx>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestCheckTx::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestCheckTx>(), &RequestCheckTx::ByteSizeLong,
            &RequestCheckTx::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestCheckTx, _impl_._cached_size_),
        false,
    },
    &RequestCheckTx::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestCheckTx::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> RequestCheckTx::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestCheckTx>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.abci.CheckTxType type = 2 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestCheckTx, _impl_.type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestCheckTx, _impl_.type_)}},
    // bytes tx = 1 [json_name = "tx"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestCheckTx, _impl_.tx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes tx = 1 [json_name = "tx"];
    {PROTOBUF_FIELD_OFFSET(RequestCheckTx, _impl_.tx_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tendermint.abci.CheckTxType type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(RequestCheckTx, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RequestCheckTx::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestCheckTx)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tx_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestCheckTx::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestCheckTx& this_ = static_cast<const RequestCheckTx&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestCheckTx::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestCheckTx& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestCheckTx)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes tx = 1 [json_name = "tx"];
          if (!this_._internal_tx().empty()) {
            const std::string& _s = this_._internal_tx();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // .tendermint.abci.CheckTxType type = 2 [json_name = "type"];
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestCheckTx)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestCheckTx::ByteSizeLong(const MessageLite& base) {
          const RequestCheckTx& this_ = static_cast<const RequestCheckTx&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestCheckTx::ByteSizeLong() const {
          const RequestCheckTx& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestCheckTx)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes tx = 1 [json_name = "tx"];
            if (!this_._internal_tx().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tx());
            }
            // .tendermint.abci.CheckTxType type = 2 [json_name = "type"];
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestCheckTx::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestCheckTx*>(&to_msg);
  auto& from = static_cast<const RequestCheckTx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestCheckTx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tx().empty()) {
    _this->_internal_set_tx(from._internal_tx());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestCheckTx::CopyFrom(const RequestCheckTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestCheckTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestCheckTx::InternalSwap(RequestCheckTx* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tx_, &other->_impl_.tx_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata RequestCheckTx::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestCommit::_Internal {
 public:
};

RequestCommit::RequestCommit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestCommit)
}
RequestCommit::RequestCommit(
    ::google::protobuf::Arena* arena,
    const RequestCommit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestCommit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestCommit)
}

inline void* RequestCommit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestCommit(arena);
}
constexpr auto RequestCommit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestCommit),
                                            alignof(RequestCommit));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestCommit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestCommit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestCommit::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<RequestCommit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestCommit::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<RequestCommit>(), &RequestCommit::ByteSizeLong,
            &RequestCommit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestCommit, _impl_._cached_size_),
        false,
    },
    &RequestCommit::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestCommit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> RequestCommit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestCommit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata RequestCommit::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestListSnapshots::_Internal {
 public:
};

RequestListSnapshots::RequestListSnapshots(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestListSnapshots)
}
RequestListSnapshots::RequestListSnapshots(
    ::google::protobuf::Arena* arena,
    const RequestListSnapshots& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestListSnapshots* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestListSnapshots)
}

inline void* RequestListSnapshots::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestListSnapshots(arena);
}
constexpr auto RequestListSnapshots::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestListSnapshots),
                                            alignof(RequestListSnapshots));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestListSnapshots::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestListSnapshots_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestListSnapshots::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<RequestListSnapshots>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestListSnapshots::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<RequestListSnapshots>(), &RequestListSnapshots::ByteSizeLong,
            &RequestListSnapshots::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestListSnapshots, _impl_._cached_size_),
        false,
    },
    &RequestListSnapshots::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestListSnapshots::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> RequestListSnapshots::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestListSnapshots>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata RequestListSnapshots::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestOfferSnapshot::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestOfferSnapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestOfferSnapshot, _impl_._has_bits_);
};

RequestOfferSnapshot::RequestOfferSnapshot(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestOfferSnapshot)
}
inline PROTOBUF_NDEBUG_INLINE RequestOfferSnapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestOfferSnapshot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        app_hash_(arena, from.app_hash_) {}

RequestOfferSnapshot::RequestOfferSnapshot(
    ::google::protobuf::Arena* arena,
    const RequestOfferSnapshot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestOfferSnapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.snapshot_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Snapshot>(
                              arena, *from._impl_.snapshot_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestOfferSnapshot)
}
inline PROTOBUF_NDEBUG_INLINE RequestOfferSnapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        app_hash_(arena) {}

inline void RequestOfferSnapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.snapshot_ = {};
}
RequestOfferSnapshot::~RequestOfferSnapshot() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestOfferSnapshot)
  SharedDtor(*this);
}
inline void RequestOfferSnapshot::SharedDtor(MessageLite& self) {
  RequestOfferSnapshot& this_ = static_cast<RequestOfferSnapshot&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.app_hash_.Destroy();
  delete this_._impl_.snapshot_;
  this_._impl_.~Impl_();
}

inline void* RequestOfferSnapshot::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestOfferSnapshot(arena);
}
constexpr auto RequestOfferSnapshot::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestOfferSnapshot),
                                            alignof(RequestOfferSnapshot));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestOfferSnapshot::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestOfferSnapshot_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestOfferSnapshot::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestOfferSnapshot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestOfferSnapshot::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestOfferSnapshot>(), &RequestOfferSnapshot::ByteSizeLong,
            &RequestOfferSnapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestOfferSnapshot, _impl_._cached_size_),
        false,
    },
    &RequestOfferSnapshot::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestOfferSnapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> RequestOfferSnapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestOfferSnapshot, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestOfferSnapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes app_hash = 2 [json_name = "appHash"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RequestOfferSnapshot, _impl_.app_hash_)}},
    // .tendermint.abci.Snapshot snapshot = 1 [json_name = "snapshot"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RequestOfferSnapshot, _impl_.snapshot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.Snapshot snapshot = 1 [json_name = "snapshot"];
    {PROTOBUF_FIELD_OFFSET(RequestOfferSnapshot, _impl_.snapshot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes app_hash = 2 [json_name = "appHash"];
    {PROTOBUF_FIELD_OFFSET(RequestOfferSnapshot, _impl_.app_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Snapshot>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RequestOfferSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestOfferSnapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_hash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.snapshot_ != nullptr);
    _impl_.snapshot_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestOfferSnapshot::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestOfferSnapshot& this_ = static_cast<const RequestOfferSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestOfferSnapshot::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestOfferSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestOfferSnapshot)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.Snapshot snapshot = 1 [json_name = "snapshot"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.snapshot_, this_._impl_.snapshot_->GetCachedSize(), target,
                stream);
          }

          // bytes app_hash = 2 [json_name = "appHash"];
          if (!this_._internal_app_hash().empty()) {
            const std::string& _s = this_._internal_app_hash();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestOfferSnapshot)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestOfferSnapshot::ByteSizeLong(const MessageLite& base) {
          const RequestOfferSnapshot& this_ = static_cast<const RequestOfferSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestOfferSnapshot::ByteSizeLong() const {
          const RequestOfferSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestOfferSnapshot)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes app_hash = 2 [json_name = "appHash"];
            if (!this_._internal_app_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_app_hash());
            }
          }
           {
            // .tendermint.abci.Snapshot snapshot = 1 [json_name = "snapshot"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.snapshot_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestOfferSnapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestOfferSnapshot*>(&to_msg);
  auto& from = static_cast<const RequestOfferSnapshot&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestOfferSnapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_hash().empty()) {
    _this->_internal_set_app_hash(from._internal_app_hash());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.snapshot_ != nullptr);
    if (_this->_impl_.snapshot_ == nullptr) {
      _this->_impl_.snapshot_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Snapshot>(arena, *from._impl_.snapshot_);
    } else {
      _this->_impl_.snapshot_->MergeFrom(*from._impl_.snapshot_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestOfferSnapshot::CopyFrom(const RequestOfferSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestOfferSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestOfferSnapshot::InternalSwap(RequestOfferSnapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_hash_, &other->_impl_.app_hash_, arena);
  swap(_impl_.snapshot_, other->_impl_.snapshot_);
}

::google::protobuf::Metadata RequestOfferSnapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestLoadSnapshotChunk::_Internal {
 public:
};

RequestLoadSnapshotChunk::RequestLoadSnapshotChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestLoadSnapshotChunk)
}
RequestLoadSnapshotChunk::RequestLoadSnapshotChunk(
    ::google::protobuf::Arena* arena, const RequestLoadSnapshotChunk& from)
    : RequestLoadSnapshotChunk(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RequestLoadSnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RequestLoadSnapshotChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, chunk_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::chunk_));
}
RequestLoadSnapshotChunk::~RequestLoadSnapshotChunk() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestLoadSnapshotChunk)
  SharedDtor(*this);
}
inline void RequestLoadSnapshotChunk::SharedDtor(MessageLite& self) {
  RequestLoadSnapshotChunk& this_ = static_cast<RequestLoadSnapshotChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* RequestLoadSnapshotChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestLoadSnapshotChunk(arena);
}
constexpr auto RequestLoadSnapshotChunk::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RequestLoadSnapshotChunk),
                                            alignof(RequestLoadSnapshotChunk));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestLoadSnapshotChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestLoadSnapshotChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestLoadSnapshotChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestLoadSnapshotChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestLoadSnapshotChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestLoadSnapshotChunk>(), &RequestLoadSnapshotChunk::ByteSizeLong,
            &RequestLoadSnapshotChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_._cached_size_),
        false,
    },
    &RequestLoadSnapshotChunk::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestLoadSnapshotChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> RequestLoadSnapshotChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestLoadSnapshotChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 height = 1 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestLoadSnapshotChunk, _impl_.height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.height_)}},
    // uint32 format = 2 [json_name = "format"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestLoadSnapshotChunk, _impl_.format_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.format_)}},
    // uint32 chunk = 3 [json_name = "chunk"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestLoadSnapshotChunk, _impl_.chunk_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.chunk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 height = 1 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 format = 2 [json_name = "format"];
    {PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 chunk = 3 [json_name = "chunk"];
    {PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RequestLoadSnapshotChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestLoadSnapshotChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.chunk_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.chunk_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestLoadSnapshotChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestLoadSnapshotChunk& this_ = static_cast<const RequestLoadSnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestLoadSnapshotChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestLoadSnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestLoadSnapshotChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 height = 1 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_height(), target);
          }

          // uint32 format = 2 [json_name = "format"];
          if (this_._internal_format() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_format(), target);
          }

          // uint32 chunk = 3 [json_name = "chunk"];
          if (this_._internal_chunk() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_chunk(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestLoadSnapshotChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestLoadSnapshotChunk::ByteSizeLong(const MessageLite& base) {
          const RequestLoadSnapshotChunk& this_ = static_cast<const RequestLoadSnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestLoadSnapshotChunk::ByteSizeLong() const {
          const RequestLoadSnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestLoadSnapshotChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 height = 1 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_height());
            }
            // uint32 format = 2 [json_name = "format"];
            if (this_._internal_format() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_format());
            }
            // uint32 chunk = 3 [json_name = "chunk"];
            if (this_._internal_chunk() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_chunk());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestLoadSnapshotChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestLoadSnapshotChunk*>(&to_msg);
  auto& from = static_cast<const RequestLoadSnapshotChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestLoadSnapshotChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_format() != 0) {
    _this->_impl_.format_ = from._impl_.format_;
  }
  if (from._internal_chunk() != 0) {
    _this->_impl_.chunk_ = from._impl_.chunk_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestLoadSnapshotChunk::CopyFrom(const RequestLoadSnapshotChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestLoadSnapshotChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestLoadSnapshotChunk::InternalSwap(RequestLoadSnapshotChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.chunk_)
      + sizeof(RequestLoadSnapshotChunk::_impl_.chunk_)
      - PROTOBUF_FIELD_OFFSET(RequestLoadSnapshotChunk, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata RequestLoadSnapshotChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestApplySnapshotChunk::_Internal {
 public:
};

RequestApplySnapshotChunk::RequestApplySnapshotChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestApplySnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE RequestApplySnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestApplySnapshotChunk& from_msg)
      : chunk_(arena, from.chunk_),
        sender_(arena, from.sender_),
        _cached_size_{0} {}

RequestApplySnapshotChunk::RequestApplySnapshotChunk(
    ::google::protobuf::Arena* arena,
    const RequestApplySnapshotChunk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestApplySnapshotChunk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestApplySnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE RequestApplySnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : chunk_(arena),
        sender_(arena),
        _cached_size_{0} {}

inline void RequestApplySnapshotChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
RequestApplySnapshotChunk::~RequestApplySnapshotChunk() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestApplySnapshotChunk)
  SharedDtor(*this);
}
inline void RequestApplySnapshotChunk::SharedDtor(MessageLite& self) {
  RequestApplySnapshotChunk& this_ = static_cast<RequestApplySnapshotChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chunk_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RequestApplySnapshotChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestApplySnapshotChunk(arena);
}
constexpr auto RequestApplySnapshotChunk::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestApplySnapshotChunk),
                                            alignof(RequestApplySnapshotChunk));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestApplySnapshotChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestApplySnapshotChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestApplySnapshotChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestApplySnapshotChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestApplySnapshotChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestApplySnapshotChunk>(), &RequestApplySnapshotChunk::ByteSizeLong,
            &RequestApplySnapshotChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestApplySnapshotChunk, _impl_._cached_size_),
        false,
    },
    &RequestApplySnapshotChunk::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestApplySnapshotChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2> RequestApplySnapshotChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestApplySnapshotChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 index = 1 [json_name = "index"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RequestApplySnapshotChunk, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestApplySnapshotChunk, _impl_.index_)}},
    // bytes chunk = 2 [json_name = "chunk"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RequestApplySnapshotChunk, _impl_.chunk_)}},
    // string sender = 3 [json_name = "sender"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RequestApplySnapshotChunk, _impl_.sender_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 index = 1 [json_name = "index"];
    {PROTOBUF_FIELD_OFFSET(RequestApplySnapshotChunk, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes chunk = 2 [json_name = "chunk"];
    {PROTOBUF_FIELD_OFFSET(RequestApplySnapshotChunk, _impl_.chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string sender = 3 [json_name = "sender"];
    {PROTOBUF_FIELD_OFFSET(RequestApplySnapshotChunk, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\0\0\6\0\0\0\0"
    "tendermint.abci.RequestApplySnapshotChunk"
    "sender"
  }},
};

PROTOBUF_NOINLINE void RequestApplySnapshotChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestApplySnapshotChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chunk_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  _impl_.index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestApplySnapshotChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestApplySnapshotChunk& this_ = static_cast<const RequestApplySnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestApplySnapshotChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestApplySnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestApplySnapshotChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 index = 1 [json_name = "index"];
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_index(), target);
          }

          // bytes chunk = 2 [json_name = "chunk"];
          if (!this_._internal_chunk().empty()) {
            const std::string& _s = this_._internal_chunk();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // string sender = 3 [json_name = "sender"];
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.RequestApplySnapshotChunk.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestApplySnapshotChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestApplySnapshotChunk::ByteSizeLong(const MessageLite& base) {
          const RequestApplySnapshotChunk& this_ = static_cast<const RequestApplySnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestApplySnapshotChunk::ByteSizeLong() const {
          const RequestApplySnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestApplySnapshotChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes chunk = 2 [json_name = "chunk"];
            if (!this_._internal_chunk().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_chunk());
            }
            // string sender = 3 [json_name = "sender"];
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // uint32 index = 1 [json_name = "index"];
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestApplySnapshotChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestApplySnapshotChunk*>(&to_msg);
  auto& from = static_cast<const RequestApplySnapshotChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestApplySnapshotChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_chunk().empty()) {
    _this->_internal_set_chunk(from._internal_chunk());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestApplySnapshotChunk::CopyFrom(const RequestApplySnapshotChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestApplySnapshotChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestApplySnapshotChunk::InternalSwap(RequestApplySnapshotChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chunk_, &other->_impl_.chunk_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata RequestApplySnapshotChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestPrepareProposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestPrepareProposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_._has_bits_);
};

void RequestPrepareProposal::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RequestPrepareProposal::RequestPrepareProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestPrepareProposal)
}
inline PROTOBUF_NDEBUG_INLINE RequestPrepareProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestPrepareProposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        txs_{visibility, arena, from.txs_},
        misbehavior_{visibility, arena, from.misbehavior_},
        next_validators_hash_(arena, from.next_validators_hash_),
        proposer_address_(arena, from.proposer_address_) {}

RequestPrepareProposal::RequestPrepareProposal(
    ::google::protobuf::Arena* arena,
    const RequestPrepareProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestPrepareProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.local_last_commit_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ExtendedCommitInfo>(
                              arena, *from._impl_.local_last_commit_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_tx_bytes_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_tx_bytes_),
           offsetof(Impl_, height_) -
               offsetof(Impl_, max_tx_bytes_) +
               sizeof(Impl_::height_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestPrepareProposal)
}
inline PROTOBUF_NDEBUG_INLINE RequestPrepareProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        txs_{visibility, arena},
        misbehavior_{visibility, arena},
        next_validators_hash_(arena),
        proposer_address_(arena) {}

inline void RequestPrepareProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, local_last_commit_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, local_last_commit_) +
               sizeof(Impl_::height_));
}
RequestPrepareProposal::~RequestPrepareProposal() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestPrepareProposal)
  SharedDtor(*this);
}
inline void RequestPrepareProposal::SharedDtor(MessageLite& self) {
  RequestPrepareProposal& this_ = static_cast<RequestPrepareProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_validators_hash_.Destroy();
  this_._impl_.proposer_address_.Destroy();
  delete this_._impl_.local_last_commit_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* RequestPrepareProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestPrepareProposal(arena);
}
constexpr auto RequestPrepareProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.txs_) +
          decltype(RequestPrepareProposal::_impl_.txs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.misbehavior_) +
          decltype(RequestPrepareProposal::_impl_.misbehavior_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RequestPrepareProposal), alignof(RequestPrepareProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RequestPrepareProposal::PlacementNew_,
                                 sizeof(RequestPrepareProposal),
                                 alignof(RequestPrepareProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestPrepareProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestPrepareProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestPrepareProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestPrepareProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestPrepareProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestPrepareProposal>(), &RequestPrepareProposal::ByteSizeLong,
            &RequestPrepareProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_._cached_size_),
        false,
    },
    &RequestPrepareProposal::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestPrepareProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> RequestPrepareProposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestPrepareProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.proposer_address_)}},
    // int64 max_tx_bytes = 1 [json_name = "maxTxBytes"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestPrepareProposal, _impl_.max_tx_bytes_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.max_tx_bytes_)}},
    // repeated bytes txs = 2 [json_name = "txs"];
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.txs_)}},
    // .tendermint.abci.ExtendedCommitInfo local_last_commit = 3 [json_name = "localLastCommit", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.local_last_commit_)}},
    // repeated .tendermint.abci.Misbehavior misbehavior = 4 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.misbehavior_)}},
    // int64 height = 5 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestPrepareProposal, _impl_.height_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.height_)}},
    // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 2, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.time_)}},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.next_validators_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 max_tx_bytes = 1 [json_name = "maxTxBytes"];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.max_tx_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated bytes txs = 2 [json_name = "txs"];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.txs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // .tendermint.abci.ExtendedCommitInfo local_last_commit = 3 [json_name = "localLastCommit", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.local_last_commit_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.Misbehavior misbehavior = 4 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.misbehavior_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 height = 5 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.time_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.next_validators_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.proposer_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ExtendedCommitInfo>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::Misbehavior>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RequestPrepareProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestPrepareProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  _impl_.misbehavior_.Clear();
  _impl_.next_validators_hash_.ClearToEmpty();
  _impl_.proposer_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.local_last_commit_ != nullptr);
      _impl_.local_last_commit_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  ::memset(&_impl_.max_tx_bytes_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.max_tx_bytes_)) + sizeof(_impl_.height_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestPrepareProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestPrepareProposal& this_ = static_cast<const RequestPrepareProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestPrepareProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestPrepareProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestPrepareProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 max_tx_bytes = 1 [json_name = "maxTxBytes"];
          if (this_._internal_max_tx_bytes() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_max_tx_bytes(), target);
          }

          // repeated bytes txs = 2 [json_name = "txs"];
          for (int i = 0, n = this_._internal_txs_size(); i < n; ++i) {
            const auto& s = this_._internal_txs().Get(i);
            target = stream->WriteBytes(2, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.ExtendedCommitInfo local_last_commit = 3 [json_name = "localLastCommit", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.local_last_commit_, this_._impl_.local_last_commit_->GetCachedSize(), target,
                stream);
          }

          // repeated .tendermint.abci.Misbehavior misbehavior = 4 [json_name = "misbehavior", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_misbehavior_size());
               i < n; i++) {
            const auto& repfield = this_._internal_misbehavior().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int64 height = 5 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_height(), target);
          }

          // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
          if (!this_._internal_next_validators_hash().empty()) {
            const std::string& _s = this_._internal_next_validators_hash();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // bytes proposer_address = 8 [json_name = "proposerAddress"];
          if (!this_._internal_proposer_address().empty()) {
            const std::string& _s = this_._internal_proposer_address();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestPrepareProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestPrepareProposal::ByteSizeLong(const MessageLite& base) {
          const RequestPrepareProposal& this_ = static_cast<const RequestPrepareProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestPrepareProposal::ByteSizeLong() const {
          const RequestPrepareProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestPrepareProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes txs = 2 [json_name = "txs"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_txs().size());
              for (int i = 0, n = this_._internal_txs().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_txs().Get(i));
              }
            }
            // repeated .tendermint.abci.Misbehavior misbehavior = 4 [json_name = "misbehavior", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_misbehavior_size();
              for (const auto& msg : this_._internal_misbehavior()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
            if (!this_._internal_next_validators_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_next_validators_hash());
            }
            // bytes proposer_address = 8 [json_name = "proposerAddress"];
            if (!this_._internal_proposer_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_proposer_address());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tendermint.abci.ExtendedCommitInfo local_last_commit = 3 [json_name = "localLastCommit", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.local_last_commit_);
            }
            // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // int64 max_tx_bytes = 1 [json_name = "maxTxBytes"];
            if (this_._internal_max_tx_bytes() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_max_tx_bytes());
            }
            // int64 height = 5 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestPrepareProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestPrepareProposal*>(&to_msg);
  auto& from = static_cast<const RequestPrepareProposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestPrepareProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(from._internal_txs());
  _this->_internal_mutable_misbehavior()->MergeFrom(
      from._internal_misbehavior());
  if (!from._internal_next_validators_hash().empty()) {
    _this->_internal_set_next_validators_hash(from._internal_next_validators_hash());
  }
  if (!from._internal_proposer_address().empty()) {
    _this->_internal_set_proposer_address(from._internal_proposer_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.local_last_commit_ != nullptr);
      if (_this->_impl_.local_last_commit_ == nullptr) {
        _this->_impl_.local_last_commit_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ExtendedCommitInfo>(arena, *from._impl_.local_last_commit_);
      } else {
        _this->_impl_.local_last_commit_->MergeFrom(*from._impl_.local_last_commit_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_max_tx_bytes() != 0) {
    _this->_impl_.max_tx_bytes_ = from._impl_.max_tx_bytes_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestPrepareProposal::CopyFrom(const RequestPrepareProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestPrepareProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestPrepareProposal::InternalSwap(RequestPrepareProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
  _impl_.misbehavior_.InternalSwap(&other->_impl_.misbehavior_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_validators_hash_, &other->_impl_.next_validators_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposer_address_, &other->_impl_.proposer_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.height_)
      + sizeof(RequestPrepareProposal::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(RequestPrepareProposal, _impl_.local_last_commit_)>(
          reinterpret_cast<char*>(&_impl_.local_last_commit_),
          reinterpret_cast<char*>(&other->_impl_.local_last_commit_));
}

::google::protobuf::Metadata RequestPrepareProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestProcessProposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestProcessProposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_._has_bits_);
};

void RequestProcessProposal::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RequestProcessProposal::RequestProcessProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestProcessProposal)
}
inline PROTOBUF_NDEBUG_INLINE RequestProcessProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestProcessProposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        txs_{visibility, arena, from.txs_},
        misbehavior_{visibility, arena, from.misbehavior_},
        hash_(arena, from.hash_),
        next_validators_hash_(arena, from.next_validators_hash_),
        proposer_address_(arena, from.proposer_address_) {}

RequestProcessProposal::RequestProcessProposal(
    ::google::protobuf::Arena* arena,
    const RequestProcessProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestProcessProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proposed_last_commit_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::CommitInfo>(
                              arena, *from._impl_.proposed_last_commit_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.height_ = from._impl_.height_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestProcessProposal)
}
inline PROTOBUF_NDEBUG_INLINE RequestProcessProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        txs_{visibility, arena},
        misbehavior_{visibility, arena},
        hash_(arena),
        next_validators_hash_(arena),
        proposer_address_(arena) {}

inline void RequestProcessProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposed_last_commit_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, proposed_last_commit_) +
               sizeof(Impl_::height_));
}
RequestProcessProposal::~RequestProcessProposal() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestProcessProposal)
  SharedDtor(*this);
}
inline void RequestProcessProposal::SharedDtor(MessageLite& self) {
  RequestProcessProposal& this_ = static_cast<RequestProcessProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.next_validators_hash_.Destroy();
  this_._impl_.proposer_address_.Destroy();
  delete this_._impl_.proposed_last_commit_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* RequestProcessProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestProcessProposal(arena);
}
constexpr auto RequestProcessProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.txs_) +
          decltype(RequestProcessProposal::_impl_.txs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.misbehavior_) +
          decltype(RequestProcessProposal::_impl_.misbehavior_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RequestProcessProposal), alignof(RequestProcessProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RequestProcessProposal::PlacementNew_,
                                 sizeof(RequestProcessProposal),
                                 alignof(RequestProcessProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestProcessProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestProcessProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestProcessProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestProcessProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestProcessProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestProcessProposal>(), &RequestProcessProposal::ByteSizeLong,
            &RequestProcessProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_._cached_size_),
        false,
    },
    &RequestProcessProposal::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestProcessProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> RequestProcessProposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestProcessProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.proposer_address_)}},
    // repeated bytes txs = 1 [json_name = "txs"];
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.txs_)}},
    // .tendermint.abci.CommitInfo proposed_last_commit = 2 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.proposed_last_commit_)}},
    // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.misbehavior_)}},
    // bytes hash = 4 [json_name = "hash"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.hash_)}},
    // int64 height = 5 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestProcessProposal, _impl_.height_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.height_)}},
    // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 2, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.time_)}},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.next_validators_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes txs = 1 [json_name = "txs"];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.txs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // .tendermint.abci.CommitInfo proposed_last_commit = 2 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.proposed_last_commit_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.misbehavior_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes hash = 4 [json_name = "hash"];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 height = 5 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.time_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.next_validators_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.proposer_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::CommitInfo>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::Misbehavior>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RequestProcessProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestProcessProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  _impl_.misbehavior_.Clear();
  _impl_.hash_.ClearToEmpty();
  _impl_.next_validators_hash_.ClearToEmpty();
  _impl_.proposer_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.proposed_last_commit_ != nullptr);
      _impl_.proposed_last_commit_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  _impl_.height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestProcessProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestProcessProposal& this_ = static_cast<const RequestProcessProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestProcessProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestProcessProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestProcessProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated bytes txs = 1 [json_name = "txs"];
          for (int i = 0, n = this_._internal_txs_size(); i < n; ++i) {
            const auto& s = this_._internal_txs().Get(i);
            target = stream->WriteBytes(1, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.CommitInfo proposed_last_commit = 2 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.proposed_last_commit_, this_._impl_.proposed_last_commit_->GetCachedSize(), target,
                stream);
          }

          // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_misbehavior_size());
               i < n; i++) {
            const auto& repfield = this_._internal_misbehavior().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bytes hash = 4 [json_name = "hash"];
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // int64 height = 5 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_height(), target);
          }

          // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
          if (!this_._internal_next_validators_hash().empty()) {
            const std::string& _s = this_._internal_next_validators_hash();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // bytes proposer_address = 8 [json_name = "proposerAddress"];
          if (!this_._internal_proposer_address().empty()) {
            const std::string& _s = this_._internal_proposer_address();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestProcessProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestProcessProposal::ByteSizeLong(const MessageLite& base) {
          const RequestProcessProposal& this_ = static_cast<const RequestProcessProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestProcessProposal::ByteSizeLong() const {
          const RequestProcessProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestProcessProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes txs = 1 [json_name = "txs"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_txs().size());
              for (int i = 0, n = this_._internal_txs().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_txs().Get(i));
              }
            }
            // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_misbehavior_size();
              for (const auto& msg : this_._internal_misbehavior()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes hash = 4 [json_name = "hash"];
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash());
            }
            // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
            if (!this_._internal_next_validators_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_next_validators_hash());
            }
            // bytes proposer_address = 8 [json_name = "proposerAddress"];
            if (!this_._internal_proposer_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_proposer_address());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tendermint.abci.CommitInfo proposed_last_commit = 2 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proposed_last_commit_);
            }
            // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // int64 height = 5 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestProcessProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestProcessProposal*>(&to_msg);
  auto& from = static_cast<const RequestProcessProposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestProcessProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(from._internal_txs());
  _this->_internal_mutable_misbehavior()->MergeFrom(
      from._internal_misbehavior());
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_next_validators_hash().empty()) {
    _this->_internal_set_next_validators_hash(from._internal_next_validators_hash());
  }
  if (!from._internal_proposer_address().empty()) {
    _this->_internal_set_proposer_address(from._internal_proposer_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.proposed_last_commit_ != nullptr);
      if (_this->_impl_.proposed_last_commit_ == nullptr) {
        _this->_impl_.proposed_last_commit_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::CommitInfo>(arena, *from._impl_.proposed_last_commit_);
      } else {
        _this->_impl_.proposed_last_commit_->MergeFrom(*from._impl_.proposed_last_commit_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestProcessProposal::CopyFrom(const RequestProcessProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestProcessProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestProcessProposal::InternalSwap(RequestProcessProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
  _impl_.misbehavior_.InternalSwap(&other->_impl_.misbehavior_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_validators_hash_, &other->_impl_.next_validators_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposer_address_, &other->_impl_.proposer_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.height_)
      + sizeof(RequestProcessProposal::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(RequestProcessProposal, _impl_.proposed_last_commit_)>(
          reinterpret_cast<char*>(&_impl_.proposed_last_commit_),
          reinterpret_cast<char*>(&other->_impl_.proposed_last_commit_));
}

::google::protobuf::Metadata RequestProcessProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestExtendVote::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestExtendVote>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_._has_bits_);
};

void RequestExtendVote::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RequestExtendVote::RequestExtendVote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestExtendVote)
}
inline PROTOBUF_NDEBUG_INLINE RequestExtendVote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestExtendVote& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        txs_{visibility, arena, from.txs_},
        misbehavior_{visibility, arena, from.misbehavior_},
        hash_(arena, from.hash_),
        next_validators_hash_(arena, from.next_validators_hash_),
        proposer_address_(arena, from.proposer_address_) {}

RequestExtendVote::RequestExtendVote(
    ::google::protobuf::Arena* arena,
    const RequestExtendVote& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestExtendVote* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.proposed_last_commit_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::CommitInfo>(
                              arena, *from._impl_.proposed_last_commit_)
                        : nullptr;
  _impl_.height_ = from._impl_.height_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestExtendVote)
}
inline PROTOBUF_NDEBUG_INLINE RequestExtendVote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        txs_{visibility, arena},
        misbehavior_{visibility, arena},
        hash_(arena),
        next_validators_hash_(arena),
        proposer_address_(arena) {}

inline void RequestExtendVote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::height_));
}
RequestExtendVote::~RequestExtendVote() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestExtendVote)
  SharedDtor(*this);
}
inline void RequestExtendVote::SharedDtor(MessageLite& self) {
  RequestExtendVote& this_ = static_cast<RequestExtendVote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.next_validators_hash_.Destroy();
  this_._impl_.proposer_address_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.proposed_last_commit_;
  this_._impl_.~Impl_();
}

inline void* RequestExtendVote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestExtendVote(arena);
}
constexpr auto RequestExtendVote::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.txs_) +
          decltype(RequestExtendVote::_impl_.txs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.misbehavior_) +
          decltype(RequestExtendVote::_impl_.misbehavior_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RequestExtendVote), alignof(RequestExtendVote), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RequestExtendVote::PlacementNew_,
                                 sizeof(RequestExtendVote),
                                 alignof(RequestExtendVote));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestExtendVote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestExtendVote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestExtendVote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestExtendVote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestExtendVote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestExtendVote>(), &RequestExtendVote::ByteSizeLong,
            &RequestExtendVote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_._cached_size_),
        false,
    },
    &RequestExtendVote::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestExtendVote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> RequestExtendVote::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestExtendVote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.proposer_address_)}},
    // bytes hash = 1 [json_name = "hash"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.hash_)}},
    // int64 height = 2 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestExtendVote, _impl_.height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.height_)}},
    // .google.protobuf.Timestamp time = 3 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.time_)}},
    // repeated bytes txs = 4 [json_name = "txs"];
    {::_pbi::TcParser::FastBR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.txs_)}},
    // .tendermint.abci.CommitInfo proposed_last_commit = 5 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.proposed_last_commit_)}},
    // repeated .tendermint.abci.Misbehavior misbehavior = 6 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.misbehavior_)}},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.next_validators_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes hash = 1 [json_name = "hash"];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 height = 2 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 3 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated bytes txs = 4 [json_name = "txs"];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.txs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // .tendermint.abci.CommitInfo proposed_last_commit = 5 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.proposed_last_commit_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.Misbehavior misbehavior = 6 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.misbehavior_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.next_validators_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.proposer_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::CommitInfo>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::Misbehavior>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RequestExtendVote::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestExtendVote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  _impl_.misbehavior_.Clear();
  _impl_.hash_.ClearToEmpty();
  _impl_.next_validators_hash_.ClearToEmpty();
  _impl_.proposer_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.proposed_last_commit_ != nullptr);
      _impl_.proposed_last_commit_->Clear();
    }
  }
  _impl_.height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestExtendVote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestExtendVote& this_ = static_cast<const RequestExtendVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestExtendVote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestExtendVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestExtendVote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes hash = 1 [json_name = "hash"];
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // int64 height = 2 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_height(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp time = 3 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // repeated bytes txs = 4 [json_name = "txs"];
          for (int i = 0, n = this_._internal_txs_size(); i < n; ++i) {
            const auto& s = this_._internal_txs().Get(i);
            target = stream->WriteBytes(4, s, target);
          }

          // .tendermint.abci.CommitInfo proposed_last_commit = 5 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.proposed_last_commit_, this_._impl_.proposed_last_commit_->GetCachedSize(), target,
                stream);
          }

          // repeated .tendermint.abci.Misbehavior misbehavior = 6 [json_name = "misbehavior", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_misbehavior_size());
               i < n; i++) {
            const auto& repfield = this_._internal_misbehavior().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
          if (!this_._internal_next_validators_hash().empty()) {
            const std::string& _s = this_._internal_next_validators_hash();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // bytes proposer_address = 8 [json_name = "proposerAddress"];
          if (!this_._internal_proposer_address().empty()) {
            const std::string& _s = this_._internal_proposer_address();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestExtendVote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestExtendVote::ByteSizeLong(const MessageLite& base) {
          const RequestExtendVote& this_ = static_cast<const RequestExtendVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestExtendVote::ByteSizeLong() const {
          const RequestExtendVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestExtendVote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes txs = 4 [json_name = "txs"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_txs().size());
              for (int i = 0, n = this_._internal_txs().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_txs().Get(i));
              }
            }
            // repeated .tendermint.abci.Misbehavior misbehavior = 6 [json_name = "misbehavior", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_misbehavior_size();
              for (const auto& msg : this_._internal_misbehavior()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes hash = 1 [json_name = "hash"];
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash());
            }
            // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
            if (!this_._internal_next_validators_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_next_validators_hash());
            }
            // bytes proposer_address = 8 [json_name = "proposerAddress"];
            if (!this_._internal_proposer_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_proposer_address());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp time = 3 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
            // .tendermint.abci.CommitInfo proposed_last_commit = 5 [json_name = "proposedLastCommit", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proposed_last_commit_);
            }
          }
           {
            // int64 height = 2 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestExtendVote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestExtendVote*>(&to_msg);
  auto& from = static_cast<const RequestExtendVote&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestExtendVote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(from._internal_txs());
  _this->_internal_mutable_misbehavior()->MergeFrom(
      from._internal_misbehavior());
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_next_validators_hash().empty()) {
    _this->_internal_set_next_validators_hash(from._internal_next_validators_hash());
  }
  if (!from._internal_proposer_address().empty()) {
    _this->_internal_set_proposer_address(from._internal_proposer_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.proposed_last_commit_ != nullptr);
      if (_this->_impl_.proposed_last_commit_ == nullptr) {
        _this->_impl_.proposed_last_commit_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::CommitInfo>(arena, *from._impl_.proposed_last_commit_);
      } else {
        _this->_impl_.proposed_last_commit_->MergeFrom(*from._impl_.proposed_last_commit_);
      }
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestExtendVote::CopyFrom(const RequestExtendVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestExtendVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestExtendVote::InternalSwap(RequestExtendVote* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
  _impl_.misbehavior_.InternalSwap(&other->_impl_.misbehavior_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_validators_hash_, &other->_impl_.next_validators_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposer_address_, &other->_impl_.proposer_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.height_)
      + sizeof(RequestExtendVote::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(RequestExtendVote, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata RequestExtendVote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestVerifyVoteExtension::_Internal {
 public:
};

RequestVerifyVoteExtension::RequestVerifyVoteExtension(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestVerifyVoteExtension)
}
inline PROTOBUF_NDEBUG_INLINE RequestVerifyVoteExtension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestVerifyVoteExtension& from_msg)
      : hash_(arena, from.hash_),
        validator_address_(arena, from.validator_address_),
        vote_extension_(arena, from.vote_extension_),
        _cached_size_{0} {}

RequestVerifyVoteExtension::RequestVerifyVoteExtension(
    ::google::protobuf::Arena* arena,
    const RequestVerifyVoteExtension& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestVerifyVoteExtension* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.height_ = from._impl_.height_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestVerifyVoteExtension)
}
inline PROTOBUF_NDEBUG_INLINE RequestVerifyVoteExtension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hash_(arena),
        validator_address_(arena),
        vote_extension_(arena),
        _cached_size_{0} {}

inline void RequestVerifyVoteExtension::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.height_ = {};
}
RequestVerifyVoteExtension::~RequestVerifyVoteExtension() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestVerifyVoteExtension)
  SharedDtor(*this);
}
inline void RequestVerifyVoteExtension::SharedDtor(MessageLite& self) {
  RequestVerifyVoteExtension& this_ = static_cast<RequestVerifyVoteExtension&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.validator_address_.Destroy();
  this_._impl_.vote_extension_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RequestVerifyVoteExtension::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestVerifyVoteExtension(arena);
}
constexpr auto RequestVerifyVoteExtension::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RequestVerifyVoteExtension),
                                            alignof(RequestVerifyVoteExtension));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestVerifyVoteExtension::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestVerifyVoteExtension_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestVerifyVoteExtension::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestVerifyVoteExtension>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestVerifyVoteExtension::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestVerifyVoteExtension>(), &RequestVerifyVoteExtension::ByteSizeLong,
            &RequestVerifyVoteExtension::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_._cached_size_),
        false,
    },
    &RequestVerifyVoteExtension::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestVerifyVoteExtension::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> RequestVerifyVoteExtension::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestVerifyVoteExtension>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes vote_extension = 4 [json_name = "voteExtension"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.vote_extension_)}},
    // bytes hash = 1 [json_name = "hash"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.hash_)}},
    // bytes validator_address = 2 [json_name = "validatorAddress"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.validator_address_)}},
    // int64 height = 3 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestVerifyVoteExtension, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes hash = 1 [json_name = "hash"];
    {PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes validator_address = 2 [json_name = "validatorAddress"];
    {PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.validator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 height = 3 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes vote_extension = 4 [json_name = "voteExtension"];
    {PROTOBUF_FIELD_OFFSET(RequestVerifyVoteExtension, _impl_.vote_extension_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void RequestVerifyVoteExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestVerifyVoteExtension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  _impl_.vote_extension_.ClearToEmpty();
  _impl_.height_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestVerifyVoteExtension::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestVerifyVoteExtension& this_ = static_cast<const RequestVerifyVoteExtension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestVerifyVoteExtension::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestVerifyVoteExtension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestVerifyVoteExtension)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes hash = 1 [json_name = "hash"];
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes validator_address = 2 [json_name = "validatorAddress"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // int64 height = 3 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_height(), target);
          }

          // bytes vote_extension = 4 [json_name = "voteExtension"];
          if (!this_._internal_vote_extension().empty()) {
            const std::string& _s = this_._internal_vote_extension();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestVerifyVoteExtension)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestVerifyVoteExtension::ByteSizeLong(const MessageLite& base) {
          const RequestVerifyVoteExtension& this_ = static_cast<const RequestVerifyVoteExtension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestVerifyVoteExtension::ByteSizeLong() const {
          const RequestVerifyVoteExtension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestVerifyVoteExtension)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes hash = 1 [json_name = "hash"];
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash());
            }
            // bytes validator_address = 2 [json_name = "validatorAddress"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_validator_address());
            }
            // bytes vote_extension = 4 [json_name = "voteExtension"];
            if (!this_._internal_vote_extension().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_vote_extension());
            }
            // int64 height = 3 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestVerifyVoteExtension::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestVerifyVoteExtension*>(&to_msg);
  auto& from = static_cast<const RequestVerifyVoteExtension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestVerifyVoteExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_vote_extension().empty()) {
    _this->_internal_set_vote_extension(from._internal_vote_extension());
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestVerifyVoteExtension::CopyFrom(const RequestVerifyVoteExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestVerifyVoteExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestVerifyVoteExtension::InternalSwap(RequestVerifyVoteExtension* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vote_extension_, &other->_impl_.vote_extension_, arena);
        swap(_impl_.height_, other->_impl_.height_);
}

::google::protobuf::Metadata RequestVerifyVoteExtension::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RequestFinalizeBlock::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RequestFinalizeBlock>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_._has_bits_);
};

void RequestFinalizeBlock::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RequestFinalizeBlock::RequestFinalizeBlock(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.RequestFinalizeBlock)
}
inline PROTOBUF_NDEBUG_INLINE RequestFinalizeBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::RequestFinalizeBlock& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        txs_{visibility, arena, from.txs_},
        misbehavior_{visibility, arena, from.misbehavior_},
        hash_(arena, from.hash_),
        next_validators_hash_(arena, from.next_validators_hash_),
        proposer_address_(arena, from.proposer_address_) {}

RequestFinalizeBlock::RequestFinalizeBlock(
    ::google::protobuf::Arena* arena,
    const RequestFinalizeBlock& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RequestFinalizeBlock* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.decided_last_commit_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::CommitInfo>(
                              arena, *from._impl_.decided_last_commit_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.height_ = from._impl_.height_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.RequestFinalizeBlock)
}
inline PROTOBUF_NDEBUG_INLINE RequestFinalizeBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        txs_{visibility, arena},
        misbehavior_{visibility, arena},
        hash_(arena),
        next_validators_hash_(arena),
        proposer_address_(arena) {}

inline void RequestFinalizeBlock::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, decided_last_commit_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, decided_last_commit_) +
               sizeof(Impl_::height_));
}
RequestFinalizeBlock::~RequestFinalizeBlock() {
  // @@protoc_insertion_point(destructor:tendermint.abci.RequestFinalizeBlock)
  SharedDtor(*this);
}
inline void RequestFinalizeBlock::SharedDtor(MessageLite& self) {
  RequestFinalizeBlock& this_ = static_cast<RequestFinalizeBlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.next_validators_hash_.Destroy();
  this_._impl_.proposer_address_.Destroy();
  delete this_._impl_.decided_last_commit_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* RequestFinalizeBlock::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RequestFinalizeBlock(arena);
}
constexpr auto RequestFinalizeBlock::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.txs_) +
          decltype(RequestFinalizeBlock::_impl_.txs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.misbehavior_) +
          decltype(RequestFinalizeBlock::_impl_.misbehavior_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RequestFinalizeBlock), alignof(RequestFinalizeBlock), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RequestFinalizeBlock::PlacementNew_,
                                 sizeof(RequestFinalizeBlock),
                                 alignof(RequestFinalizeBlock));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RequestFinalizeBlock::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RequestFinalizeBlock_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RequestFinalizeBlock::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RequestFinalizeBlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RequestFinalizeBlock::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RequestFinalizeBlock>(), &RequestFinalizeBlock::ByteSizeLong,
            &RequestFinalizeBlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_._cached_size_),
        false,
    },
    &RequestFinalizeBlock::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RequestFinalizeBlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> RequestFinalizeBlock::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::RequestFinalizeBlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {::_pbi::TcParser::FastBS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.proposer_address_)}},
    // repeated bytes txs = 1 [json_name = "txs"];
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.txs_)}},
    // .tendermint.abci.CommitInfo decided_last_commit = 2 [json_name = "decidedLastCommit", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.decided_last_commit_)}},
    // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.misbehavior_)}},
    // bytes hash = 4 [json_name = "hash"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.hash_)}},
    // int64 height = 5 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RequestFinalizeBlock, _impl_.height_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.height_)}},
    // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 2, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.time_)}},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.next_validators_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes txs = 1 [json_name = "txs"];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.txs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // .tendermint.abci.CommitInfo decided_last_commit = 2 [json_name = "decidedLastCommit", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.decided_last_commit_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.misbehavior_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes hash = 4 [json_name = "hash"];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 height = 5 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.time_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.next_validators_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes proposer_address = 8 [json_name = "proposerAddress"];
    {PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.proposer_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::CommitInfo>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::Misbehavior>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RequestFinalizeBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.RequestFinalizeBlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  _impl_.misbehavior_.Clear();
  _impl_.hash_.ClearToEmpty();
  _impl_.next_validators_hash_.ClearToEmpty();
  _impl_.proposer_address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.decided_last_commit_ != nullptr);
      _impl_.decided_last_commit_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  _impl_.height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RequestFinalizeBlock::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RequestFinalizeBlock& this_ = static_cast<const RequestFinalizeBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RequestFinalizeBlock::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RequestFinalizeBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.RequestFinalizeBlock)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated bytes txs = 1 [json_name = "txs"];
          for (int i = 0, n = this_._internal_txs_size(); i < n; ++i) {
            const auto& s = this_._internal_txs().Get(i);
            target = stream->WriteBytes(1, s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.CommitInfo decided_last_commit = 2 [json_name = "decidedLastCommit", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.decided_last_commit_, this_._impl_.decided_last_commit_->GetCachedSize(), target,
                stream);
          }

          // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_misbehavior_size());
               i < n; i++) {
            const auto& repfield = this_._internal_misbehavior().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bytes hash = 4 [json_name = "hash"];
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // int64 height = 5 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_height(), target);
          }

          // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
          if (!this_._internal_next_validators_hash().empty()) {
            const std::string& _s = this_._internal_next_validators_hash();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          // bytes proposer_address = 8 [json_name = "proposerAddress"];
          if (!this_._internal_proposer_address().empty()) {
            const std::string& _s = this_._internal_proposer_address();
            target = stream->WriteBytesMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.RequestFinalizeBlock)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RequestFinalizeBlock::ByteSizeLong(const MessageLite& base) {
          const RequestFinalizeBlock& this_ = static_cast<const RequestFinalizeBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RequestFinalizeBlock::ByteSizeLong() const {
          const RequestFinalizeBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.RequestFinalizeBlock)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes txs = 1 [json_name = "txs"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_txs().size());
              for (int i = 0, n = this_._internal_txs().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_txs().Get(i));
              }
            }
            // repeated .tendermint.abci.Misbehavior misbehavior = 3 [json_name = "misbehavior", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_misbehavior_size();
              for (const auto& msg : this_._internal_misbehavior()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes hash = 4 [json_name = "hash"];
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash());
            }
            // bytes next_validators_hash = 7 [json_name = "nextValidatorsHash"];
            if (!this_._internal_next_validators_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_next_validators_hash());
            }
            // bytes proposer_address = 8 [json_name = "proposerAddress"];
            if (!this_._internal_proposer_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_proposer_address());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tendermint.abci.CommitInfo decided_last_commit = 2 [json_name = "decidedLastCommit", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.decided_last_commit_);
            }
            // .google.protobuf.Timestamp time = 6 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // int64 height = 5 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RequestFinalizeBlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RequestFinalizeBlock*>(&to_msg);
  auto& from = static_cast<const RequestFinalizeBlock&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.RequestFinalizeBlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(from._internal_txs());
  _this->_internal_mutable_misbehavior()->MergeFrom(
      from._internal_misbehavior());
  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_next_validators_hash().empty()) {
    _this->_internal_set_next_validators_hash(from._internal_next_validators_hash());
  }
  if (!from._internal_proposer_address().empty()) {
    _this->_internal_set_proposer_address(from._internal_proposer_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.decided_last_commit_ != nullptr);
      if (_this->_impl_.decided_last_commit_ == nullptr) {
        _this->_impl_.decided_last_commit_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::CommitInfo>(arena, *from._impl_.decided_last_commit_);
      } else {
        _this->_impl_.decided_last_commit_->MergeFrom(*from._impl_.decided_last_commit_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RequestFinalizeBlock::CopyFrom(const RequestFinalizeBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.RequestFinalizeBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RequestFinalizeBlock::InternalSwap(RequestFinalizeBlock* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
  _impl_.misbehavior_.InternalSwap(&other->_impl_.misbehavior_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_validators_hash_, &other->_impl_.next_validators_hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposer_address_, &other->_impl_.proposer_address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.height_)
      + sizeof(RequestFinalizeBlock::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(RequestFinalizeBlock, _impl_.decided_last_commit_)>(
          reinterpret_cast<char*>(&_impl_.decided_last_commit_),
          reinterpret_cast<char*>(&other->_impl_.decided_last_commit_));
}

::google::protobuf::Metadata RequestFinalizeBlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Response::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::tendermint::abci::Response, _impl_._oneof_case_);
};

void Response::set_allocated_exception(::tendermint::abci::ResponseException* exception) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (exception) {
    ::google::protobuf::Arena* submessage_arena = exception->GetArena();
    if (message_arena != submessage_arena) {
      exception = ::google::protobuf::internal::GetOwnedMessage(message_arena, exception, submessage_arena);
    }
    set_has_exception();
    _impl_.value_.exception_ = exception;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.exception)
}
void Response::set_allocated_echo(::tendermint::abci::ResponseEcho* echo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (echo) {
    ::google::protobuf::Arena* submessage_arena = echo->GetArena();
    if (message_arena != submessage_arena) {
      echo = ::google::protobuf::internal::GetOwnedMessage(message_arena, echo, submessage_arena);
    }
    set_has_echo();
    _impl_.value_.echo_ = echo;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.echo)
}
void Response::set_allocated_flush(::tendermint::abci::ResponseFlush* flush) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (flush) {
    ::google::protobuf::Arena* submessage_arena = flush->GetArena();
    if (message_arena != submessage_arena) {
      flush = ::google::protobuf::internal::GetOwnedMessage(message_arena, flush, submessage_arena);
    }
    set_has_flush();
    _impl_.value_.flush_ = flush;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.flush)
}
void Response::set_allocated_info(::tendermint::abci::ResponseInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (info) {
    ::google::protobuf::Arena* submessage_arena = info->GetArena();
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(message_arena, info, submessage_arena);
    }
    set_has_info();
    _impl_.value_.info_ = info;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.info)
}
void Response::set_allocated_init_chain(::tendermint::abci::ResponseInitChain* init_chain) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (init_chain) {
    ::google::protobuf::Arena* submessage_arena = init_chain->GetArena();
    if (message_arena != submessage_arena) {
      init_chain = ::google::protobuf::internal::GetOwnedMessage(message_arena, init_chain, submessage_arena);
    }
    set_has_init_chain();
    _impl_.value_.init_chain_ = init_chain;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.init_chain)
}
void Response::set_allocated_query(::tendermint::abci::ResponseQuery* query) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (query) {
    ::google::protobuf::Arena* submessage_arena = query->GetArena();
    if (message_arena != submessage_arena) {
      query = ::google::protobuf::internal::GetOwnedMessage(message_arena, query, submessage_arena);
    }
    set_has_query();
    _impl_.value_.query_ = query;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.query)
}
void Response::set_allocated_check_tx(::tendermint::abci::ResponseCheckTx* check_tx) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (check_tx) {
    ::google::protobuf::Arena* submessage_arena = check_tx->GetArena();
    if (message_arena != submessage_arena) {
      check_tx = ::google::protobuf::internal::GetOwnedMessage(message_arena, check_tx, submessage_arena);
    }
    set_has_check_tx();
    _impl_.value_.check_tx_ = check_tx;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.check_tx)
}
void Response::set_allocated_commit(::tendermint::abci::ResponseCommit* commit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (commit) {
    ::google::protobuf::Arena* submessage_arena = commit->GetArena();
    if (message_arena != submessage_arena) {
      commit = ::google::protobuf::internal::GetOwnedMessage(message_arena, commit, submessage_arena);
    }
    set_has_commit();
    _impl_.value_.commit_ = commit;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.commit)
}
void Response::set_allocated_list_snapshots(::tendermint::abci::ResponseListSnapshots* list_snapshots) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (list_snapshots) {
    ::google::protobuf::Arena* submessage_arena = list_snapshots->GetArena();
    if (message_arena != submessage_arena) {
      list_snapshots = ::google::protobuf::internal::GetOwnedMessage(message_arena, list_snapshots, submessage_arena);
    }
    set_has_list_snapshots();
    _impl_.value_.list_snapshots_ = list_snapshots;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.list_snapshots)
}
void Response::set_allocated_offer_snapshot(::tendermint::abci::ResponseOfferSnapshot* offer_snapshot) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (offer_snapshot) {
    ::google::protobuf::Arena* submessage_arena = offer_snapshot->GetArena();
    if (message_arena != submessage_arena) {
      offer_snapshot = ::google::protobuf::internal::GetOwnedMessage(message_arena, offer_snapshot, submessage_arena);
    }
    set_has_offer_snapshot();
    _impl_.value_.offer_snapshot_ = offer_snapshot;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.offer_snapshot)
}
void Response::set_allocated_load_snapshot_chunk(::tendermint::abci::ResponseLoadSnapshotChunk* load_snapshot_chunk) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (load_snapshot_chunk) {
    ::google::protobuf::Arena* submessage_arena = load_snapshot_chunk->GetArena();
    if (message_arena != submessage_arena) {
      load_snapshot_chunk = ::google::protobuf::internal::GetOwnedMessage(message_arena, load_snapshot_chunk, submessage_arena);
    }
    set_has_load_snapshot_chunk();
    _impl_.value_.load_snapshot_chunk_ = load_snapshot_chunk;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.load_snapshot_chunk)
}
void Response::set_allocated_apply_snapshot_chunk(::tendermint::abci::ResponseApplySnapshotChunk* apply_snapshot_chunk) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (apply_snapshot_chunk) {
    ::google::protobuf::Arena* submessage_arena = apply_snapshot_chunk->GetArena();
    if (message_arena != submessage_arena) {
      apply_snapshot_chunk = ::google::protobuf::internal::GetOwnedMessage(message_arena, apply_snapshot_chunk, submessage_arena);
    }
    set_has_apply_snapshot_chunk();
    _impl_.value_.apply_snapshot_chunk_ = apply_snapshot_chunk;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.apply_snapshot_chunk)
}
void Response::set_allocated_prepare_proposal(::tendermint::abci::ResponsePrepareProposal* prepare_proposal) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (prepare_proposal) {
    ::google::protobuf::Arena* submessage_arena = prepare_proposal->GetArena();
    if (message_arena != submessage_arena) {
      prepare_proposal = ::google::protobuf::internal::GetOwnedMessage(message_arena, prepare_proposal, submessage_arena);
    }
    set_has_prepare_proposal();
    _impl_.value_.prepare_proposal_ = prepare_proposal;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.prepare_proposal)
}
void Response::set_allocated_process_proposal(::tendermint::abci::ResponseProcessProposal* process_proposal) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (process_proposal) {
    ::google::protobuf::Arena* submessage_arena = process_proposal->GetArena();
    if (message_arena != submessage_arena) {
      process_proposal = ::google::protobuf::internal::GetOwnedMessage(message_arena, process_proposal, submessage_arena);
    }
    set_has_process_proposal();
    _impl_.value_.process_proposal_ = process_proposal;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.process_proposal)
}
void Response::set_allocated_extend_vote(::tendermint::abci::ResponseExtendVote* extend_vote) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (extend_vote) {
    ::google::protobuf::Arena* submessage_arena = extend_vote->GetArena();
    if (message_arena != submessage_arena) {
      extend_vote = ::google::protobuf::internal::GetOwnedMessage(message_arena, extend_vote, submessage_arena);
    }
    set_has_extend_vote();
    _impl_.value_.extend_vote_ = extend_vote;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.extend_vote)
}
void Response::set_allocated_verify_vote_extension(::tendermint::abci::ResponseVerifyVoteExtension* verify_vote_extension) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (verify_vote_extension) {
    ::google::protobuf::Arena* submessage_arena = verify_vote_extension->GetArena();
    if (message_arena != submessage_arena) {
      verify_vote_extension = ::google::protobuf::internal::GetOwnedMessage(message_arena, verify_vote_extension, submessage_arena);
    }
    set_has_verify_vote_extension();
    _impl_.value_.verify_vote_extension_ = verify_vote_extension;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.verify_vote_extension)
}
void Response::set_allocated_finalize_block(::tendermint::abci::ResponseFinalizeBlock* finalize_block) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (finalize_block) {
    ::google::protobuf::Arena* submessage_arena = finalize_block->GetArena();
    if (message_arena != submessage_arena) {
      finalize_block = ::google::protobuf::internal::GetOwnedMessage(message_arena, finalize_block, submessage_arena);
    }
    set_has_finalize_block();
    _impl_.value_.finalize_block_ = finalize_block;
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.abci.Response.finalize_block)
}
Response::Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::Response& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kException:
        _impl_.value_.exception_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseException>(arena, *from._impl_.value_.exception_);
        break;
      case kEcho:
        _impl_.value_.echo_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseEcho>(arena, *from._impl_.value_.echo_);
        break;
      case kFlush:
        _impl_.value_.flush_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFlush>(arena, *from._impl_.value_.flush_);
        break;
      case kInfo:
        _impl_.value_.info_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseInfo>(arena, *from._impl_.value_.info_);
        break;
      case kInitChain:
        _impl_.value_.init_chain_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseInitChain>(arena, *from._impl_.value_.init_chain_);
        break;
      case kQuery:
        _impl_.value_.query_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseQuery>(arena, *from._impl_.value_.query_);
        break;
      case kCheckTx:
        _impl_.value_.check_tx_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCheckTx>(arena, *from._impl_.value_.check_tx_);
        break;
      case kCommit:
        _impl_.value_.commit_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCommit>(arena, *from._impl_.value_.commit_);
        break;
      case kListSnapshots:
        _impl_.value_.list_snapshots_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseListSnapshots>(arena, *from._impl_.value_.list_snapshots_);
        break;
      case kOfferSnapshot:
        _impl_.value_.offer_snapshot_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseOfferSnapshot>(arena, *from._impl_.value_.offer_snapshot_);
        break;
      case kLoadSnapshotChunk:
        _impl_.value_.load_snapshot_chunk_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseLoadSnapshotChunk>(arena, *from._impl_.value_.load_snapshot_chunk_);
        break;
      case kApplySnapshotChunk:
        _impl_.value_.apply_snapshot_chunk_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseApplySnapshotChunk>(arena, *from._impl_.value_.apply_snapshot_chunk_);
        break;
      case kPrepareProposal:
        _impl_.value_.prepare_proposal_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponsePrepareProposal>(arena, *from._impl_.value_.prepare_proposal_);
        break;
      case kProcessProposal:
        _impl_.value_.process_proposal_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseProcessProposal>(arena, *from._impl_.value_.process_proposal_);
        break;
      case kExtendVote:
        _impl_.value_.extend_vote_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseExtendVote>(arena, *from._impl_.value_.extend_vote_);
        break;
      case kVerifyVoteExtension:
        _impl_.value_.verify_vote_extension_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseVerifyVoteExtension>(arena, *from._impl_.value_.verify_vote_extension_);
        break;
      case kFinalizeBlock:
        _impl_.value_.finalize_block_ = ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFinalizeBlock>(arena, *from._impl_.value_.finalize_block_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:tendermint.abci.Response)
  SharedDtor(*this);
}
inline void Response::SharedDtor(MessageLite& self) {
  Response& this_ = static_cast<Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_value()) {
    this_.clear_value();
  }
  this_._impl_.~Impl_();
}

void Response::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:tendermint.abci.Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kException: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.exception_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.exception_);
      }
      break;
    }
    case kEcho: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.echo_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.echo_);
      }
      break;
    }
    case kFlush: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.flush_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.flush_);
      }
      break;
    }
    case kInfo: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.info_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.info_);
      }
      break;
    }
    case kInitChain: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.init_chain_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.init_chain_);
      }
      break;
    }
    case kQuery: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.query_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.query_);
      }
      break;
    }
    case kCheckTx: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.check_tx_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.check_tx_);
      }
      break;
    }
    case kCommit: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.commit_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.commit_);
      }
      break;
    }
    case kListSnapshots: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.list_snapshots_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.list_snapshots_);
      }
      break;
    }
    case kOfferSnapshot: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.offer_snapshot_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.offer_snapshot_);
      }
      break;
    }
    case kLoadSnapshotChunk: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.load_snapshot_chunk_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.load_snapshot_chunk_);
      }
      break;
    }
    case kApplySnapshotChunk: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.apply_snapshot_chunk_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.apply_snapshot_chunk_);
      }
      break;
    }
    case kPrepareProposal: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.prepare_proposal_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.prepare_proposal_);
      }
      break;
    }
    case kProcessProposal: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.process_proposal_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.process_proposal_);
      }
      break;
    }
    case kExtendVote: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.extend_vote_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.extend_vote_);
      }
      break;
    }
    case kVerifyVoteExtension: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.verify_vote_extension_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.verify_vote_extension_);
      }
      break;
    }
    case kFinalizeBlock: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.finalize_block_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.finalize_block_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


inline void* Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Response(arena);
}
constexpr auto Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Response),
                                            alignof(Response));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Response>(), &Response::ByteSizeLong,
            &Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Response, _impl_._cached_size_),
        false,
    },
    &Response::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 17, 17, 0, 2> Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    21, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4292871824,  // skipmap
    offsetof(decltype(_table_), field_entries),
    17,  // num_field_entries
    17,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.ResponseException exception = 1 [json_name = "exception"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.exception_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseEcho echo = 2 [json_name = "echo"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.echo_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseFlush flush = 3 [json_name = "flush"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.flush_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseInfo info = 4 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.info_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseInitChain init_chain = 6 [json_name = "initChain"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.init_chain_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseQuery query = 7 [json_name = "query"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.query_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseCheckTx check_tx = 9 [json_name = "checkTx"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.check_tx_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseCommit commit = 12 [json_name = "commit"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.commit_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseListSnapshots list_snapshots = 13 [json_name = "listSnapshots"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.list_snapshots_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseOfferSnapshot offer_snapshot = 14 [json_name = "offerSnapshot"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.offer_snapshot_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseLoadSnapshotChunk load_snapshot_chunk = 15 [json_name = "loadSnapshotChunk"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.load_snapshot_chunk_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseApplySnapshotChunk apply_snapshot_chunk = 16 [json_name = "applySnapshotChunk"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.apply_snapshot_chunk_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponsePrepareProposal prepare_proposal = 17 [json_name = "prepareProposal"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.prepare_proposal_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseProcessProposal process_proposal = 18 [json_name = "processProposal"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.process_proposal_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseExtendVote extend_vote = 19 [json_name = "extendVote"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.extend_vote_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseVerifyVoteExtension verify_vote_extension = 20 [json_name = "verifyVoteExtension"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.verify_vote_extension_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseFinalizeBlock finalize_block = 21 [json_name = "finalizeBlock"];
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.value_.finalize_block_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseException>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseEcho>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseFlush>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseInfo>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseInitChain>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseQuery>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseCheckTx>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseCommit>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseListSnapshots>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseOfferSnapshot>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseLoadSnapshotChunk>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseApplySnapshotChunk>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponsePrepareProposal>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseProcessProposal>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseExtendVote>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseVerifyVoteExtension>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseFinalizeBlock>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.value_case()) {
            case kException: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.value_.exception_, this_._impl_.value_.exception_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kEcho: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.value_.echo_, this_._impl_.value_.echo_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFlush: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.value_.flush_, this_._impl_.value_.flush_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kInfo: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.value_.info_, this_._impl_.value_.info_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kInitChain: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.value_.init_chain_, this_._impl_.value_.init_chain_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kQuery: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.value_.query_, this_._impl_.value_.query_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCheckTx: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.value_.check_tx_, this_._impl_.value_.check_tx_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCommit: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.value_.commit_, this_._impl_.value_.commit_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kListSnapshots: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.value_.list_snapshots_, this_._impl_.value_.list_snapshots_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOfferSnapshot: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  14, *this_._impl_.value_.offer_snapshot_, this_._impl_.value_.offer_snapshot_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLoadSnapshotChunk: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.value_.load_snapshot_chunk_, this_._impl_.value_.load_snapshot_chunk_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kApplySnapshotChunk: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  16, *this_._impl_.value_.apply_snapshot_chunk_, this_._impl_.value_.apply_snapshot_chunk_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPrepareProposal: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  17, *this_._impl_.value_.prepare_proposal_, this_._impl_.value_.prepare_proposal_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kProcessProposal: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  18, *this_._impl_.value_.process_proposal_, this_._impl_.value_.process_proposal_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kExtendVote: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  19, *this_._impl_.value_.extend_vote_, this_._impl_.value_.extend_vote_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kVerifyVoteExtension: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  20, *this_._impl_.value_.verify_vote_extension_, this_._impl_.value_.verify_vote_extension_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFinalizeBlock: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  21, *this_._impl_.value_.finalize_block_, this_._impl_.value_.finalize_block_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Response::ByteSizeLong(const MessageLite& base) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Response::ByteSizeLong() const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.value_case()) {
            // .tendermint.abci.ResponseException exception = 1 [json_name = "exception"];
            case kException: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.exception_);
              break;
            }
            // .tendermint.abci.ResponseEcho echo = 2 [json_name = "echo"];
            case kEcho: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.echo_);
              break;
            }
            // .tendermint.abci.ResponseFlush flush = 3 [json_name = "flush"];
            case kFlush: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.flush_);
              break;
            }
            // .tendermint.abci.ResponseInfo info = 4 [json_name = "info"];
            case kInfo: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.info_);
              break;
            }
            // .tendermint.abci.ResponseInitChain init_chain = 6 [json_name = "initChain"];
            case kInitChain: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.init_chain_);
              break;
            }
            // .tendermint.abci.ResponseQuery query = 7 [json_name = "query"];
            case kQuery: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.query_);
              break;
            }
            // .tendermint.abci.ResponseCheckTx check_tx = 9 [json_name = "checkTx"];
            case kCheckTx: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.check_tx_);
              break;
            }
            // .tendermint.abci.ResponseCommit commit = 12 [json_name = "commit"];
            case kCommit: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.commit_);
              break;
            }
            // .tendermint.abci.ResponseListSnapshots list_snapshots = 13 [json_name = "listSnapshots"];
            case kListSnapshots: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.list_snapshots_);
              break;
            }
            // .tendermint.abci.ResponseOfferSnapshot offer_snapshot = 14 [json_name = "offerSnapshot"];
            case kOfferSnapshot: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.offer_snapshot_);
              break;
            }
            // .tendermint.abci.ResponseLoadSnapshotChunk load_snapshot_chunk = 15 [json_name = "loadSnapshotChunk"];
            case kLoadSnapshotChunk: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.load_snapshot_chunk_);
              break;
            }
            // .tendermint.abci.ResponseApplySnapshotChunk apply_snapshot_chunk = 16 [json_name = "applySnapshotChunk"];
            case kApplySnapshotChunk: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.apply_snapshot_chunk_);
              break;
            }
            // .tendermint.abci.ResponsePrepareProposal prepare_proposal = 17 [json_name = "prepareProposal"];
            case kPrepareProposal: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.prepare_proposal_);
              break;
            }
            // .tendermint.abci.ResponseProcessProposal process_proposal = 18 [json_name = "processProposal"];
            case kProcessProposal: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.process_proposal_);
              break;
            }
            // .tendermint.abci.ResponseExtendVote extend_vote = 19 [json_name = "extendVote"];
            case kExtendVote: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.extend_vote_);
              break;
            }
            // .tendermint.abci.ResponseVerifyVoteExtension verify_vote_extension = 20 [json_name = "verifyVoteExtension"];
            case kVerifyVoteExtension: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.verify_vote_extension_);
              break;
            }
            // .tendermint.abci.ResponseFinalizeBlock finalize_block = 21 [json_name = "finalizeBlock"];
            case kFinalizeBlock: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.finalize_block_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kException: {
        if (oneof_needs_init) {
          _this->_impl_.value_.exception_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseException>(arena, *from._impl_.value_.exception_);
        } else {
          _this->_impl_.value_.exception_->MergeFrom(from._internal_exception());
        }
        break;
      }
      case kEcho: {
        if (oneof_needs_init) {
          _this->_impl_.value_.echo_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseEcho>(arena, *from._impl_.value_.echo_);
        } else {
          _this->_impl_.value_.echo_->MergeFrom(from._internal_echo());
        }
        break;
      }
      case kFlush: {
        if (oneof_needs_init) {
          _this->_impl_.value_.flush_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFlush>(arena, *from._impl_.value_.flush_);
        } else {
          _this->_impl_.value_.flush_->MergeFrom(from._internal_flush());
        }
        break;
      }
      case kInfo: {
        if (oneof_needs_init) {
          _this->_impl_.value_.info_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseInfo>(arena, *from._impl_.value_.info_);
        } else {
          _this->_impl_.value_.info_->MergeFrom(from._internal_info());
        }
        break;
      }
      case kInitChain: {
        if (oneof_needs_init) {
          _this->_impl_.value_.init_chain_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseInitChain>(arena, *from._impl_.value_.init_chain_);
        } else {
          _this->_impl_.value_.init_chain_->MergeFrom(from._internal_init_chain());
        }
        break;
      }
      case kQuery: {
        if (oneof_needs_init) {
          _this->_impl_.value_.query_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseQuery>(arena, *from._impl_.value_.query_);
        } else {
          _this->_impl_.value_.query_->MergeFrom(from._internal_query());
        }
        break;
      }
      case kCheckTx: {
        if (oneof_needs_init) {
          _this->_impl_.value_.check_tx_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCheckTx>(arena, *from._impl_.value_.check_tx_);
        } else {
          _this->_impl_.value_.check_tx_->MergeFrom(from._internal_check_tx());
        }
        break;
      }
      case kCommit: {
        if (oneof_needs_init) {
          _this->_impl_.value_.commit_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCommit>(arena, *from._impl_.value_.commit_);
        } else {
          _this->_impl_.value_.commit_->MergeFrom(from._internal_commit());
        }
        break;
      }
      case kListSnapshots: {
        if (oneof_needs_init) {
          _this->_impl_.value_.list_snapshots_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseListSnapshots>(arena, *from._impl_.value_.list_snapshots_);
        } else {
          _this->_impl_.value_.list_snapshots_->MergeFrom(from._internal_list_snapshots());
        }
        break;
      }
      case kOfferSnapshot: {
        if (oneof_needs_init) {
          _this->_impl_.value_.offer_snapshot_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseOfferSnapshot>(arena, *from._impl_.value_.offer_snapshot_);
        } else {
          _this->_impl_.value_.offer_snapshot_->MergeFrom(from._internal_offer_snapshot());
        }
        break;
      }
      case kLoadSnapshotChunk: {
        if (oneof_needs_init) {
          _this->_impl_.value_.load_snapshot_chunk_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseLoadSnapshotChunk>(arena, *from._impl_.value_.load_snapshot_chunk_);
        } else {
          _this->_impl_.value_.load_snapshot_chunk_->MergeFrom(from._internal_load_snapshot_chunk());
        }
        break;
      }
      case kApplySnapshotChunk: {
        if (oneof_needs_init) {
          _this->_impl_.value_.apply_snapshot_chunk_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseApplySnapshotChunk>(arena, *from._impl_.value_.apply_snapshot_chunk_);
        } else {
          _this->_impl_.value_.apply_snapshot_chunk_->MergeFrom(from._internal_apply_snapshot_chunk());
        }
        break;
      }
      case kPrepareProposal: {
        if (oneof_needs_init) {
          _this->_impl_.value_.prepare_proposal_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponsePrepareProposal>(arena, *from._impl_.value_.prepare_proposal_);
        } else {
          _this->_impl_.value_.prepare_proposal_->MergeFrom(from._internal_prepare_proposal());
        }
        break;
      }
      case kProcessProposal: {
        if (oneof_needs_init) {
          _this->_impl_.value_.process_proposal_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseProcessProposal>(arena, *from._impl_.value_.process_proposal_);
        } else {
          _this->_impl_.value_.process_proposal_->MergeFrom(from._internal_process_proposal());
        }
        break;
      }
      case kExtendVote: {
        if (oneof_needs_init) {
          _this->_impl_.value_.extend_vote_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseExtendVote>(arena, *from._impl_.value_.extend_vote_);
        } else {
          _this->_impl_.value_.extend_vote_->MergeFrom(from._internal_extend_vote());
        }
        break;
      }
      case kVerifyVoteExtension: {
        if (oneof_needs_init) {
          _this->_impl_.value_.verify_vote_extension_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseVerifyVoteExtension>(arena, *from._impl_.value_.verify_vote_extension_);
        } else {
          _this->_impl_.value_.verify_vote_extension_->MergeFrom(from._internal_verify_vote_extension());
        }
        break;
      }
      case kFinalizeBlock: {
        if (oneof_needs_init) {
          _this->_impl_.value_.finalize_block_ =
              ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFinalizeBlock>(arena, *from._impl_.value_.finalize_block_);
        } else {
          _this->_impl_.value_.finalize_block_->MergeFrom(from._internal_finalize_block());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseException::_Internal {
 public:
};

ResponseException::ResponseException(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseException)
}
inline PROTOBUF_NDEBUG_INLINE ResponseException::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseException& from_msg)
      : error_(arena, from.error_),
        _cached_size_{0} {}

ResponseException::ResponseException(
    ::google::protobuf::Arena* arena,
    const ResponseException& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseException* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseException)
}
inline PROTOBUF_NDEBUG_INLINE ResponseException::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_(arena),
        _cached_size_{0} {}

inline void ResponseException::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResponseException::~ResponseException() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseException)
  SharedDtor(*this);
}
inline void ResponseException::SharedDtor(MessageLite& self) {
  ResponseException& this_ = static_cast<ResponseException&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ResponseException::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseException(arena);
}
constexpr auto ResponseException::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseException),
                                            alignof(ResponseException));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseException::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseException_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseException::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseException>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseException::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseException>(), &ResponseException::ByteSizeLong,
            &ResponseException::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseException, _impl_._cached_size_),
        false,
    },
    &ResponseException::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseException::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> ResponseException::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseException>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error = 1 [json_name = "error"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseException, _impl_.error_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string error = 1 [json_name = "error"];
    {PROTOBUF_FIELD_OFFSET(ResponseException, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\5\0\0\0\0\0\0"
    "tendermint.abci.ResponseException"
    "error"
  }},
};

PROTOBUF_NOINLINE void ResponseException::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseException)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseException::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseException& this_ = static_cast<const ResponseException&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseException::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseException& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseException)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string error = 1 [json_name = "error"];
          if (!this_._internal_error().empty()) {
            const std::string& _s = this_._internal_error();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseException.error");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseException)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseException::ByteSizeLong(const MessageLite& base) {
          const ResponseException& this_ = static_cast<const ResponseException&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseException::ByteSizeLong() const {
          const ResponseException& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseException)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string error = 1 [json_name = "error"];
            if (!this_._internal_error().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseException::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseException*>(&to_msg);
  auto& from = static_cast<const ResponseException&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseException)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseException::CopyFrom(const ResponseException& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseException)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseException::InternalSwap(ResponseException* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
}

::google::protobuf::Metadata ResponseException::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseEcho::_Internal {
 public:
};

ResponseEcho::ResponseEcho(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseEcho)
}
inline PROTOBUF_NDEBUG_INLINE ResponseEcho::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseEcho& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

ResponseEcho::ResponseEcho(
    ::google::protobuf::Arena* arena,
    const ResponseEcho& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseEcho* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseEcho)
}
inline PROTOBUF_NDEBUG_INLINE ResponseEcho::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void ResponseEcho::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResponseEcho::~ResponseEcho() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseEcho)
  SharedDtor(*this);
}
inline void ResponseEcho::SharedDtor(MessageLite& self) {
  ResponseEcho& this_ = static_cast<ResponseEcho&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ResponseEcho::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseEcho(arena);
}
constexpr auto ResponseEcho::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseEcho),
                                            alignof(ResponseEcho));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseEcho::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseEcho_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseEcho::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseEcho>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseEcho::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseEcho>(), &ResponseEcho::ByteSizeLong,
            &ResponseEcho::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseEcho, _impl_._cached_size_),
        false,
    },
    &ResponseEcho::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseEcho::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> ResponseEcho::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseEcho>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseEcho, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(ResponseEcho, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\7\0\0\0\0\0\0"
    "tendermint.abci.ResponseEcho"
    "message"
  }},
};

PROTOBUF_NOINLINE void ResponseEcho::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseEcho)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseEcho::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseEcho& this_ = static_cast<const ResponseEcho&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseEcho::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseEcho& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseEcho)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string message = 1 [json_name = "message"];
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseEcho.message");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseEcho)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseEcho::ByteSizeLong(const MessageLite& base) {
          const ResponseEcho& this_ = static_cast<const ResponseEcho&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseEcho::ByteSizeLong() const {
          const ResponseEcho& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseEcho)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string message = 1 [json_name = "message"];
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseEcho::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseEcho*>(&to_msg);
  auto& from = static_cast<const ResponseEcho&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseEcho)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseEcho::CopyFrom(const ResponseEcho& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseEcho)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseEcho::InternalSwap(ResponseEcho* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata ResponseEcho::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseFlush::_Internal {
 public:
};

ResponseFlush::ResponseFlush(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseFlush)
}
ResponseFlush::ResponseFlush(
    ::google::protobuf::Arena* arena,
    const ResponseFlush& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseFlush* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseFlush)
}

inline void* ResponseFlush::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseFlush(arena);
}
constexpr auto ResponseFlush::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResponseFlush),
                                            alignof(ResponseFlush));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseFlush::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseFlush_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseFlush::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ResponseFlush>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseFlush::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ResponseFlush>(), &ResponseFlush::ByteSizeLong,
            &ResponseFlush::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseFlush, _impl_._cached_size_),
        false,
    },
    &ResponseFlush::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseFlush::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ResponseFlush::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseFlush>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ResponseFlush::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseInfo::_Internal {
 public:
};

ResponseInfo::ResponseInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseInfo)
}
inline PROTOBUF_NDEBUG_INLINE ResponseInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseInfo& from_msg)
      : data_(arena, from.data_),
        version_(arena, from.version_),
        last_block_app_hash_(arena, from.last_block_app_hash_),
        _cached_size_{0} {}

ResponseInfo::ResponseInfo(
    ::google::protobuf::Arena* arena,
    const ResponseInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, app_version_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, app_version_),
           offsetof(Impl_, last_block_height_) -
               offsetof(Impl_, app_version_) +
               sizeof(Impl_::last_block_height_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseInfo)
}
inline PROTOBUF_NDEBUG_INLINE ResponseInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        version_(arena),
        last_block_app_hash_(arena),
        _cached_size_{0} {}

inline void ResponseInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, app_version_),
           0,
           offsetof(Impl_, last_block_height_) -
               offsetof(Impl_, app_version_) +
               sizeof(Impl_::last_block_height_));
}
ResponseInfo::~ResponseInfo() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseInfo)
  SharedDtor(*this);
}
inline void ResponseInfo::SharedDtor(MessageLite& self) {
  ResponseInfo& this_ = static_cast<ResponseInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.last_block_app_hash_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ResponseInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseInfo(arena);
}
constexpr auto ResponseInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseInfo),
                                            alignof(ResponseInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseInfo>(), &ResponseInfo::ByteSizeLong,
            &ResponseInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_._cached_size_),
        false,
    },
    &ResponseInfo::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 48, 2> ResponseInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string data = 1 [json_name = "data"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.data_)}},
    // string version = 2 [json_name = "version"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.version_)}},
    // uint64 app_version = 3 [json_name = "appVersion"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseInfo, _impl_.app_version_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.app_version_)}},
    // int64 last_block_height = 4 [json_name = "lastBlockHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseInfo, _impl_.last_block_height_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.last_block_height_)}},
    // bytes last_block_app_hash = 5 [json_name = "lastBlockAppHash"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.last_block_app_hash_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string data = 1 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 2 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 app_version = 3 [json_name = "appVersion"];
    {PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.app_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int64 last_block_height = 4 [json_name = "lastBlockHeight"];
    {PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.last_block_height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes last_block_app_hash = 5 [json_name = "lastBlockAppHash"];
    {PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.last_block_app_hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\4\7\0\0\0\0\0"
    "tendermint.abci.ResponseInfo"
    "data"
    "version"
  }},
};

PROTOBUF_NOINLINE void ResponseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.last_block_app_hash_.ClearToEmpty();
  ::memset(&_impl_.app_version_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.last_block_height_) -
      reinterpret_cast<char*>(&_impl_.app_version_)) + sizeof(_impl_.last_block_height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseInfo& this_ = static_cast<const ResponseInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string data = 1 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseInfo.data");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string version = 2 [json_name = "version"];
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseInfo.version");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 app_version = 3 [json_name = "appVersion"];
          if (this_._internal_app_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_app_version(), target);
          }

          // int64 last_block_height = 4 [json_name = "lastBlockHeight"];
          if (this_._internal_last_block_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_last_block_height(), target);
          }

          // bytes last_block_app_hash = 5 [json_name = "lastBlockAppHash"];
          if (!this_._internal_last_block_app_hash().empty()) {
            const std::string& _s = this_._internal_last_block_app_hash();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseInfo::ByteSizeLong(const MessageLite& base) {
          const ResponseInfo& this_ = static_cast<const ResponseInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseInfo::ByteSizeLong() const {
          const ResponseInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string data = 1 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data());
            }
            // string version = 2 [json_name = "version"];
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // bytes last_block_app_hash = 5 [json_name = "lastBlockAppHash"];
            if (!this_._internal_last_block_app_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_last_block_app_hash());
            }
            // uint64 app_version = 3 [json_name = "appVersion"];
            if (this_._internal_app_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_app_version());
            }
            // int64 last_block_height = 4 [json_name = "lastBlockHeight"];
            if (this_._internal_last_block_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_last_block_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseInfo*>(&to_msg);
  auto& from = static_cast<const ResponseInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_last_block_app_hash().empty()) {
    _this->_internal_set_last_block_app_hash(from._internal_last_block_app_hash());
  }
  if (from._internal_app_version() != 0) {
    _this->_impl_.app_version_ = from._impl_.app_version_;
  }
  if (from._internal_last_block_height() != 0) {
    _this->_impl_.last_block_height_ = from._impl_.last_block_height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseInfo::CopyFrom(const ResponseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseInfo::InternalSwap(ResponseInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.last_block_app_hash_, &other->_impl_.last_block_app_hash_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.last_block_height_)
      + sizeof(ResponseInfo::_impl_.last_block_height_)
      - PROTOBUF_FIELD_OFFSET(ResponseInfo, _impl_.app_version_)>(
          reinterpret_cast<char*>(&_impl_.app_version_),
          reinterpret_cast<char*>(&other->_impl_.app_version_));
}

::google::protobuf::Metadata ResponseInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseInitChain::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResponseInitChain>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_._has_bits_);
};

void ResponseInitChain::clear_consensus_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consensus_params_ != nullptr) _impl_.consensus_params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ResponseInitChain::ResponseInitChain(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseInitChain)
}
inline PROTOBUF_NDEBUG_INLINE ResponseInitChain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseInitChain& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        validators_{visibility, arena, from.validators_},
        app_hash_(arena, from.app_hash_) {}

ResponseInitChain::ResponseInitChain(
    ::google::protobuf::Arena* arena,
    const ResponseInitChain& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseInitChain* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.consensus_params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::ConsensusParams>(
                              arena, *from._impl_.consensus_params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseInitChain)
}
inline PROTOBUF_NDEBUG_INLINE ResponseInitChain::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        validators_{visibility, arena},
        app_hash_(arena) {}

inline void ResponseInitChain::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.consensus_params_ = {};
}
ResponseInitChain::~ResponseInitChain() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseInitChain)
  SharedDtor(*this);
}
inline void ResponseInitChain::SharedDtor(MessageLite& self) {
  ResponseInitChain& this_ = static_cast<ResponseInitChain&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.app_hash_.Destroy();
  delete this_._impl_.consensus_params_;
  this_._impl_.~Impl_();
}

inline void* ResponseInitChain::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseInitChain(arena);
}
constexpr auto ResponseInitChain::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_.validators_) +
          decltype(ResponseInitChain::_impl_.validators_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ResponseInitChain), alignof(ResponseInitChain), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResponseInitChain::PlacementNew_,
                                 sizeof(ResponseInitChain),
                                 alignof(ResponseInitChain));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseInitChain::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseInitChain_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseInitChain::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseInitChain>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseInitChain::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseInitChain>(), &ResponseInitChain::ByteSizeLong,
            &ResponseInitChain::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_._cached_size_),
        false,
    },
    &ResponseInitChain::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseInitChain::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> ResponseInitChain::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseInitChain>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tendermint.types.ConsensusParams consensus_params = 1 [json_name = "consensusParams"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_.consensus_params_)}},
    // repeated .tendermint.abci.ValidatorUpdate validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_.validators_)}},
    // bytes app_hash = 3 [json_name = "appHash"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_.app_hash_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.types.ConsensusParams consensus_params = 1 [json_name = "consensusParams"];
    {PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_.consensus_params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.ValidatorUpdate validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_.validators_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes app_hash = 3 [json_name = "appHash"];
    {PROTOBUF_FIELD_OFFSET(ResponseInitChain, _impl_.app_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::types::ConsensusParams>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ValidatorUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ResponseInitChain::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseInitChain)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.validators_.Clear();
  _impl_.app_hash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.consensus_params_ != nullptr);
    _impl_.consensus_params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseInitChain::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseInitChain& this_ = static_cast<const ResponseInitChain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseInitChain::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseInitChain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseInitChain)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.types.ConsensusParams consensus_params = 1 [json_name = "consensusParams"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.consensus_params_, this_._impl_.consensus_params_->GetCachedSize(), target,
                stream);
          }

          // repeated .tendermint.abci.ValidatorUpdate validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validators_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validators().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bytes app_hash = 3 [json_name = "appHash"];
          if (!this_._internal_app_hash().empty()) {
            const std::string& _s = this_._internal_app_hash();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseInitChain)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseInitChain::ByteSizeLong(const MessageLite& base) {
          const ResponseInitChain& this_ = static_cast<const ResponseInitChain&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseInitChain::ByteSizeLong() const {
          const ResponseInitChain& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseInitChain)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.ValidatorUpdate validators = 2 [json_name = "validators", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_validators_size();
              for (const auto& msg : this_._internal_validators()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes app_hash = 3 [json_name = "appHash"];
            if (!this_._internal_app_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_app_hash());
            }
          }
           {
            // .tendermint.types.ConsensusParams consensus_params = 1 [json_name = "consensusParams"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.consensus_params_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseInitChain::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseInitChain*>(&to_msg);
  auto& from = static_cast<const ResponseInitChain&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseInitChain)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_validators()->MergeFrom(
      from._internal_validators());
  if (!from._internal_app_hash().empty()) {
    _this->_internal_set_app_hash(from._internal_app_hash());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.consensus_params_ != nullptr);
    if (_this->_impl_.consensus_params_ == nullptr) {
      _this->_impl_.consensus_params_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::types::ConsensusParams>(arena, *from._impl_.consensus_params_);
    } else {
      _this->_impl_.consensus_params_->MergeFrom(*from._impl_.consensus_params_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseInitChain::CopyFrom(const ResponseInitChain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseInitChain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseInitChain::InternalSwap(ResponseInitChain* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.validators_.InternalSwap(&other->_impl_.validators_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_hash_, &other->_impl_.app_hash_, arena);
  swap(_impl_.consensus_params_, other->_impl_.consensus_params_);
}

::google::protobuf::Metadata ResponseInitChain::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseQuery::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResponseQuery>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_._has_bits_);
};

void ResponseQuery::clear_proof_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proof_ops_ != nullptr) _impl_.proof_ops_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ResponseQuery::ResponseQuery(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseQuery)
}
inline PROTOBUF_NDEBUG_INLINE ResponseQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseQuery& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        log_(arena, from.log_),
        info_(arena, from.info_),
        key_(arena, from.key_),
        value_(arena, from.value_),
        codespace_(arena, from.codespace_) {}

ResponseQuery::ResponseQuery(
    ::google::protobuf::Arena* arena,
    const ResponseQuery& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseQuery* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.proof_ops_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::crypto::ProofOps>(
                              arena, *from._impl_.proof_ops_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, code_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::code_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseQuery)
}
inline PROTOBUF_NDEBUG_INLINE ResponseQuery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        log_(arena),
        info_(arena),
        key_(arena),
        value_(arena),
        codespace_(arena) {}

inline void ResponseQuery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proof_ops_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, proof_ops_) +
               sizeof(Impl_::code_));
}
ResponseQuery::~ResponseQuery() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseQuery)
  SharedDtor(*this);
}
inline void ResponseQuery::SharedDtor(MessageLite& self) {
  ResponseQuery& this_ = static_cast<ResponseQuery&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_.Destroy();
  this_._impl_.info_.Destroy();
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.codespace_.Destroy();
  delete this_._impl_.proof_ops_;
  this_._impl_.~Impl_();
}

inline void* ResponseQuery::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseQuery(arena);
}
constexpr auto ResponseQuery::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseQuery),
                                            alignof(ResponseQuery));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseQuery::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseQuery_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseQuery::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseQuery>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseQuery::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseQuery>(), &ResponseQuery::ByteSizeLong,
            &ResponseQuery::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_._cached_size_),
        false,
    },
    &ResponseQuery::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseQuery::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 1, 62, 2> ResponseQuery::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966274,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseQuery>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 code = 1 [json_name = "code"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseQuery, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.code_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string log = 3 [json_name = "log"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.log_)}},
    // string info = 4 [json_name = "info"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.info_)}},
    // int64 index = 5 [json_name = "index"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseQuery, _impl_.index_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.index_)}},
    // bytes key = 6 [json_name = "key"];
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.key_)}},
    // bytes value = 7 [json_name = "value"];
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.value_)}},
    // .tendermint.crypto.ProofOps proof_ops = 8 [json_name = "proofOps"];
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.proof_ops_)}},
    // int64 height = 9 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseQuery, _impl_.height_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.height_)}},
    // string codespace = 10 [json_name = "codespace"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.codespace_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 code = 1 [json_name = "code"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string log = 3 [json_name = "log"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.log_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string info = 4 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.info_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 index = 5 [json_name = "index"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes key = 6 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes value = 7 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tendermint.crypto.ProofOps proof_ops = 8 [json_name = "proofOps"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.proof_ops_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 height = 9 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string codespace = 10 [json_name = "codespace"];
    {PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.codespace_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::crypto::ProofOps>()},
  }}, {{
    "\35\0\3\4\0\0\0\0\0\11\0\0\0\0\0\0"
    "tendermint.abci.ResponseQuery"
    "log"
    "info"
    "codespace"
  }},
};

PROTOBUF_NOINLINE void ResponseQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseQuery)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.log_.ClearToEmpty();
  _impl_.info_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.codespace_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.proof_ops_ != nullptr);
    _impl_.proof_ops_->Clear();
  }
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.code_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.code_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseQuery::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseQuery& this_ = static_cast<const ResponseQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseQuery::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseQuery)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 code = 1 [json_name = "code"];
          if (this_._internal_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_code(), target);
          }

          // string log = 3 [json_name = "log"];
          if (!this_._internal_log().empty()) {
            const std::string& _s = this_._internal_log();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseQuery.log");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string info = 4 [json_name = "info"];
          if (!this_._internal_info().empty()) {
            const std::string& _s = this_._internal_info();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseQuery.info");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int64 index = 5 [json_name = "index"];
          if (this_._internal_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_index(), target);
          }

          // bytes key = 6 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
          }

          // bytes value = 7 [json_name = "value"];
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.crypto.ProofOps proof_ops = 8 [json_name = "proofOps"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.proof_ops_, this_._impl_.proof_ops_->GetCachedSize(), target,
                stream);
          }

          // int64 height = 9 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_height(), target);
          }

          // string codespace = 10 [json_name = "codespace"];
          if (!this_._internal_codespace().empty()) {
            const std::string& _s = this_._internal_codespace();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseQuery.codespace");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseQuery)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseQuery::ByteSizeLong(const MessageLite& base) {
          const ResponseQuery& this_ = static_cast<const ResponseQuery&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseQuery::ByteSizeLong() const {
          const ResponseQuery& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseQuery)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string log = 3 [json_name = "log"];
            if (!this_._internal_log().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log());
            }
            // string info = 4 [json_name = "info"];
            if (!this_._internal_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_info());
            }
            // bytes key = 6 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_key());
            }
            // bytes value = 7 [json_name = "value"];
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_value());
            }
            // string codespace = 10 [json_name = "codespace"];
            if (!this_._internal_codespace().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_codespace());
            }
          }
           {
            // .tendermint.crypto.ProofOps proof_ops = 8 [json_name = "proofOps"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.proof_ops_);
            }
          }
           {
            // int64 index = 5 [json_name = "index"];
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_index());
            }
            // int64 height = 9 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
            // uint32 code = 1 [json_name = "code"];
            if (this_._internal_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseQuery::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseQuery*>(&to_msg);
  auto& from = static_cast<const ResponseQuery&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseQuery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_log().empty()) {
    _this->_internal_set_log(from._internal_log());
  }
  if (!from._internal_info().empty()) {
    _this->_internal_set_info(from._internal_info());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (!from._internal_codespace().empty()) {
    _this->_internal_set_codespace(from._internal_codespace());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.proof_ops_ != nullptr);
    if (_this->_impl_.proof_ops_ == nullptr) {
      _this->_impl_.proof_ops_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::crypto::ProofOps>(arena, *from._impl_.proof_ops_);
    } else {
      _this->_impl_.proof_ops_->MergeFrom(*from._impl_.proof_ops_);
    }
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseQuery::CopyFrom(const ResponseQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseQuery::InternalSwap(ResponseQuery* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_, &other->_impl_.log_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, &other->_impl_.info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.codespace_, &other->_impl_.codespace_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.code_)
      + sizeof(ResponseQuery::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(ResponseQuery, _impl_.proof_ops_)>(
          reinterpret_cast<char*>(&_impl_.proof_ops_),
          reinterpret_cast<char*>(&other->_impl_.proof_ops_));
}

::google::protobuf::Metadata ResponseQuery::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseCheckTx::_Internal {
 public:
};

ResponseCheckTx::ResponseCheckTx(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseCheckTx)
}
inline PROTOBUF_NDEBUG_INLINE ResponseCheckTx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseCheckTx& from_msg)
      : events_{visibility, arena, from.events_},
        data_(arena, from.data_),
        log_(arena, from.log_),
        info_(arena, from.info_),
        codespace_(arena, from.codespace_),
        _cached_size_{0} {}

ResponseCheckTx::ResponseCheckTx(
    ::google::protobuf::Arena* arena,
    const ResponseCheckTx& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseCheckTx* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gas_wanted_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gas_wanted_),
           offsetof(Impl_, code_) -
               offsetof(Impl_, gas_wanted_) +
               sizeof(Impl_::code_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseCheckTx)
}
inline PROTOBUF_NDEBUG_INLINE ResponseCheckTx::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : events_{visibility, arena},
        data_(arena),
        log_(arena),
        info_(arena),
        codespace_(arena),
        _cached_size_{0} {}

inline void ResponseCheckTx::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gas_wanted_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, gas_wanted_) +
               sizeof(Impl_::code_));
}
ResponseCheckTx::~ResponseCheckTx() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseCheckTx)
  SharedDtor(*this);
}
inline void ResponseCheckTx::SharedDtor(MessageLite& self) {
  ResponseCheckTx& this_ = static_cast<ResponseCheckTx&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.log_.Destroy();
  this_._impl_.info_.Destroy();
  this_._impl_.codespace_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ResponseCheckTx::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseCheckTx(arena);
}
constexpr auto ResponseCheckTx::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.events_) +
          decltype(ResponseCheckTx::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ResponseCheckTx), alignof(ResponseCheckTx), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResponseCheckTx::PlacementNew_,
                                 sizeof(ResponseCheckTx),
                                 alignof(ResponseCheckTx));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseCheckTx::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseCheckTx_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseCheckTx::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseCheckTx>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseCheckTx::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseCheckTx>(), &ResponseCheckTx::ByteSizeLong,
            &ResponseCheckTx::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_._cached_size_),
        false,
    },
    &ResponseCheckTx::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseCheckTx::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 64, 2> ResponseCheckTx::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseCheckTx>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string codespace = 8 [json_name = "codespace"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.codespace_)}},
    // uint32 code = 1 [json_name = "code"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseCheckTx, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.code_)}},
    // bytes data = 2 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.data_)}},
    // string log = 3 [json_name = "log"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.log_)}},
    // string info = 4 [json_name = "info"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.info_)}},
    // int64 gas_wanted = 5 [json_name = "gas_wanted"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseCheckTx, _impl_.gas_wanted_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.gas_wanted_)}},
    // int64 gas_used = 6 [json_name = "gas_used"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseCheckTx, _impl_.gas_used_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.gas_used_)}},
    // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 code = 1 [json_name = "code"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes data = 2 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string log = 3 [json_name = "log"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.log_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string info = 4 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 gas_wanted = 5 [json_name = "gas_wanted"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.gas_wanted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 gas_used = 6 [json_name = "gas_used"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.gas_used_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string codespace = 8 [json_name = "codespace"];
    {PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.codespace_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Event>()},
  }}, {{
    "\37\0\0\3\4\0\0\0\11\0\0\0\0\0\0\0"
    "tendermint.abci.ResponseCheckTx"
    "log"
    "info"
    "codespace"
  }},
};

PROTOBUF_NOINLINE void ResponseCheckTx::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseCheckTx)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _impl_.data_.ClearToEmpty();
  _impl_.log_.ClearToEmpty();
  _impl_.info_.ClearToEmpty();
  _impl_.codespace_.ClearToEmpty();
  ::memset(&_impl_.gas_wanted_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.code_) -
      reinterpret_cast<char*>(&_impl_.gas_wanted_)) + sizeof(_impl_.code_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseCheckTx::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseCheckTx& this_ = static_cast<const ResponseCheckTx&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseCheckTx::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseCheckTx& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseCheckTx)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 code = 1 [json_name = "code"];
          if (this_._internal_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_code(), target);
          }

          // bytes data = 2 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // string log = 3 [json_name = "log"];
          if (!this_._internal_log().empty()) {
            const std::string& _s = this_._internal_log();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseCheckTx.log");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string info = 4 [json_name = "info"];
          if (!this_._internal_info().empty()) {
            const std::string& _s = this_._internal_info();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseCheckTx.info");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int64 gas_wanted = 5 [json_name = "gas_wanted"];
          if (this_._internal_gas_wanted() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_gas_wanted(), target);
          }

          // int64 gas_used = 6 [json_name = "gas_used"];
          if (this_._internal_gas_used() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_gas_used(), target);
          }

          // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string codespace = 8 [json_name = "codespace"];
          if (!this_._internal_codespace().empty()) {
            const std::string& _s = this_._internal_codespace();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseCheckTx.codespace");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseCheckTx)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseCheckTx::ByteSizeLong(const MessageLite& base) {
          const ResponseCheckTx& this_ = static_cast<const ResponseCheckTx&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseCheckTx::ByteSizeLong() const {
          const ResponseCheckTx& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseCheckTx)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
            {
              total_size += 1UL * this_._internal_events_size();
              for (const auto& msg : this_._internal_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes data = 2 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string log = 3 [json_name = "log"];
            if (!this_._internal_log().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log());
            }
            // string info = 4 [json_name = "info"];
            if (!this_._internal_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_info());
            }
            // string codespace = 8 [json_name = "codespace"];
            if (!this_._internal_codespace().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_codespace());
            }
            // int64 gas_wanted = 5 [json_name = "gas_wanted"];
            if (this_._internal_gas_wanted() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_gas_wanted());
            }
            // int64 gas_used = 6 [json_name = "gas_used"];
            if (this_._internal_gas_used() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_gas_used());
            }
            // uint32 code = 1 [json_name = "code"];
            if (this_._internal_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseCheckTx::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseCheckTx*>(&to_msg);
  auto& from = static_cast<const ResponseCheckTx&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseCheckTx)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_log().empty()) {
    _this->_internal_set_log(from._internal_log());
  }
  if (!from._internal_info().empty()) {
    _this->_internal_set_info(from._internal_info());
  }
  if (!from._internal_codespace().empty()) {
    _this->_internal_set_codespace(from._internal_codespace());
  }
  if (from._internal_gas_wanted() != 0) {
    _this->_impl_.gas_wanted_ = from._impl_.gas_wanted_;
  }
  if (from._internal_gas_used() != 0) {
    _this->_impl_.gas_used_ = from._impl_.gas_used_;
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseCheckTx::CopyFrom(const ResponseCheckTx& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseCheckTx)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseCheckTx::InternalSwap(ResponseCheckTx* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_, &other->_impl_.log_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, &other->_impl_.info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.codespace_, &other->_impl_.codespace_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.code_)
      + sizeof(ResponseCheckTx::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(ResponseCheckTx, _impl_.gas_wanted_)>(
          reinterpret_cast<char*>(&_impl_.gas_wanted_),
          reinterpret_cast<char*>(&other->_impl_.gas_wanted_));
}

::google::protobuf::Metadata ResponseCheckTx::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseCommit::_Internal {
 public:
};

ResponseCommit::ResponseCommit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseCommit)
}
ResponseCommit::ResponseCommit(
    ::google::protobuf::Arena* arena, const ResponseCommit& from)
    : ResponseCommit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResponseCommit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResponseCommit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.retain_height_ = {};
}
ResponseCommit::~ResponseCommit() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseCommit)
  SharedDtor(*this);
}
inline void ResponseCommit::SharedDtor(MessageLite& self) {
  ResponseCommit& this_ = static_cast<ResponseCommit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResponseCommit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseCommit(arena);
}
constexpr auto ResponseCommit::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResponseCommit),
                                            alignof(ResponseCommit));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseCommit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseCommit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseCommit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseCommit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseCommit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseCommit>(), &ResponseCommit::ByteSizeLong,
            &ResponseCommit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseCommit, _impl_._cached_size_),
        false,
    },
    &ResponseCommit::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseCommit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResponseCommit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967291,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseCommit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 retain_height = 3 [json_name = "retainHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResponseCommit, _impl_.retain_height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseCommit, _impl_.retain_height_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 retain_height = 3 [json_name = "retainHeight"];
    {PROTOBUF_FIELD_OFFSET(ResponseCommit, _impl_.retain_height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResponseCommit::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseCommit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.retain_height_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseCommit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseCommit& this_ = static_cast<const ResponseCommit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseCommit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseCommit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseCommit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 retain_height = 3 [json_name = "retainHeight"];
          if (this_._internal_retain_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_retain_height(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseCommit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseCommit::ByteSizeLong(const MessageLite& base) {
          const ResponseCommit& this_ = static_cast<const ResponseCommit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseCommit::ByteSizeLong() const {
          const ResponseCommit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseCommit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 retain_height = 3 [json_name = "retainHeight"];
            if (this_._internal_retain_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_retain_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseCommit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseCommit*>(&to_msg);
  auto& from = static_cast<const ResponseCommit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseCommit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_retain_height() != 0) {
    _this->_impl_.retain_height_ = from._impl_.retain_height_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseCommit::CopyFrom(const ResponseCommit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseCommit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseCommit::InternalSwap(ResponseCommit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.retain_height_, other->_impl_.retain_height_);
}

::google::protobuf::Metadata ResponseCommit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseListSnapshots::_Internal {
 public:
};

ResponseListSnapshots::ResponseListSnapshots(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseListSnapshots)
}
inline PROTOBUF_NDEBUG_INLINE ResponseListSnapshots::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseListSnapshots& from_msg)
      : snapshots_{visibility, arena, from.snapshots_},
        _cached_size_{0} {}

ResponseListSnapshots::ResponseListSnapshots(
    ::google::protobuf::Arena* arena,
    const ResponseListSnapshots& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseListSnapshots* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseListSnapshots)
}
inline PROTOBUF_NDEBUG_INLINE ResponseListSnapshots::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : snapshots_{visibility, arena},
        _cached_size_{0} {}

inline void ResponseListSnapshots::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResponseListSnapshots::~ResponseListSnapshots() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseListSnapshots)
  SharedDtor(*this);
}
inline void ResponseListSnapshots::SharedDtor(MessageLite& self) {
  ResponseListSnapshots& this_ = static_cast<ResponseListSnapshots&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResponseListSnapshots::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseListSnapshots(arena);
}
constexpr auto ResponseListSnapshots::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResponseListSnapshots, _impl_.snapshots_) +
          decltype(ResponseListSnapshots::_impl_.snapshots_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ResponseListSnapshots), alignof(ResponseListSnapshots), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResponseListSnapshots::PlacementNew_,
                                 sizeof(ResponseListSnapshots),
                                 alignof(ResponseListSnapshots));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseListSnapshots::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseListSnapshots_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseListSnapshots::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseListSnapshots>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseListSnapshots::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseListSnapshots>(), &ResponseListSnapshots::ByteSizeLong,
            &ResponseListSnapshots::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseListSnapshots, _impl_._cached_size_),
        false,
    },
    &ResponseListSnapshots::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseListSnapshots::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ResponseListSnapshots::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseListSnapshots>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tendermint.abci.Snapshot snapshots = 1 [json_name = "snapshots"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseListSnapshots, _impl_.snapshots_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tendermint.abci.Snapshot snapshots = 1 [json_name = "snapshots"];
    {PROTOBUF_FIELD_OFFSET(ResponseListSnapshots, _impl_.snapshots_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Snapshot>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ResponseListSnapshots::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseListSnapshots)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.snapshots_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseListSnapshots::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseListSnapshots& this_ = static_cast<const ResponseListSnapshots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseListSnapshots::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseListSnapshots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseListSnapshots)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tendermint.abci.Snapshot snapshots = 1 [json_name = "snapshots"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_snapshots_size());
               i < n; i++) {
            const auto& repfield = this_._internal_snapshots().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseListSnapshots)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseListSnapshots::ByteSizeLong(const MessageLite& base) {
          const ResponseListSnapshots& this_ = static_cast<const ResponseListSnapshots&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseListSnapshots::ByteSizeLong() const {
          const ResponseListSnapshots& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseListSnapshots)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.Snapshot snapshots = 1 [json_name = "snapshots"];
            {
              total_size += 1UL * this_._internal_snapshots_size();
              for (const auto& msg : this_._internal_snapshots()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseListSnapshots::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseListSnapshots*>(&to_msg);
  auto& from = static_cast<const ResponseListSnapshots&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseListSnapshots)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_snapshots()->MergeFrom(
      from._internal_snapshots());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseListSnapshots::CopyFrom(const ResponseListSnapshots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseListSnapshots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseListSnapshots::InternalSwap(ResponseListSnapshots* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.snapshots_.InternalSwap(&other->_impl_.snapshots_);
}

::google::protobuf::Metadata ResponseListSnapshots::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseOfferSnapshot::_Internal {
 public:
};

ResponseOfferSnapshot::ResponseOfferSnapshot(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseOfferSnapshot)
}
ResponseOfferSnapshot::ResponseOfferSnapshot(
    ::google::protobuf::Arena* arena, const ResponseOfferSnapshot& from)
    : ResponseOfferSnapshot(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResponseOfferSnapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResponseOfferSnapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
ResponseOfferSnapshot::~ResponseOfferSnapshot() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseOfferSnapshot)
  SharedDtor(*this);
}
inline void ResponseOfferSnapshot::SharedDtor(MessageLite& self) {
  ResponseOfferSnapshot& this_ = static_cast<ResponseOfferSnapshot&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResponseOfferSnapshot::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseOfferSnapshot(arena);
}
constexpr auto ResponseOfferSnapshot::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResponseOfferSnapshot),
                                            alignof(ResponseOfferSnapshot));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseOfferSnapshot::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseOfferSnapshot_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseOfferSnapshot::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseOfferSnapshot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseOfferSnapshot::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseOfferSnapshot>(), &ResponseOfferSnapshot::ByteSizeLong,
            &ResponseOfferSnapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseOfferSnapshot, _impl_._cached_size_),
        false,
    },
    &ResponseOfferSnapshot::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseOfferSnapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResponseOfferSnapshot::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseOfferSnapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.abci.ResponseOfferSnapshot.Result result = 1 [json_name = "result"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseOfferSnapshot, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseOfferSnapshot, _impl_.result_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.ResponseOfferSnapshot.Result result = 1 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(ResponseOfferSnapshot, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResponseOfferSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseOfferSnapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseOfferSnapshot::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseOfferSnapshot& this_ = static_cast<const ResponseOfferSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseOfferSnapshot::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseOfferSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseOfferSnapshot)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tendermint.abci.ResponseOfferSnapshot.Result result = 1 [json_name = "result"];
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_result(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseOfferSnapshot)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseOfferSnapshot::ByteSizeLong(const MessageLite& base) {
          const ResponseOfferSnapshot& this_ = static_cast<const ResponseOfferSnapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseOfferSnapshot::ByteSizeLong() const {
          const ResponseOfferSnapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseOfferSnapshot)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .tendermint.abci.ResponseOfferSnapshot.Result result = 1 [json_name = "result"];
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseOfferSnapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseOfferSnapshot*>(&to_msg);
  auto& from = static_cast<const ResponseOfferSnapshot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseOfferSnapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseOfferSnapshot::CopyFrom(const ResponseOfferSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseOfferSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseOfferSnapshot::InternalSwap(ResponseOfferSnapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata ResponseOfferSnapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseLoadSnapshotChunk::_Internal {
 public:
};

ResponseLoadSnapshotChunk::ResponseLoadSnapshotChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseLoadSnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE ResponseLoadSnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseLoadSnapshotChunk& from_msg)
      : chunk_(arena, from.chunk_),
        _cached_size_{0} {}

ResponseLoadSnapshotChunk::ResponseLoadSnapshotChunk(
    ::google::protobuf::Arena* arena,
    const ResponseLoadSnapshotChunk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseLoadSnapshotChunk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseLoadSnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE ResponseLoadSnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : chunk_(arena),
        _cached_size_{0} {}

inline void ResponseLoadSnapshotChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResponseLoadSnapshotChunk::~ResponseLoadSnapshotChunk() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseLoadSnapshotChunk)
  SharedDtor(*this);
}
inline void ResponseLoadSnapshotChunk::SharedDtor(MessageLite& self) {
  ResponseLoadSnapshotChunk& this_ = static_cast<ResponseLoadSnapshotChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.chunk_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ResponseLoadSnapshotChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseLoadSnapshotChunk(arena);
}
constexpr auto ResponseLoadSnapshotChunk::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseLoadSnapshotChunk),
                                            alignof(ResponseLoadSnapshotChunk));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseLoadSnapshotChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseLoadSnapshotChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseLoadSnapshotChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseLoadSnapshotChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseLoadSnapshotChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseLoadSnapshotChunk>(), &ResponseLoadSnapshotChunk::ByteSizeLong,
            &ResponseLoadSnapshotChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseLoadSnapshotChunk, _impl_._cached_size_),
        false,
    },
    &ResponseLoadSnapshotChunk::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseLoadSnapshotChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResponseLoadSnapshotChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseLoadSnapshotChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes chunk = 1 [json_name = "chunk"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseLoadSnapshotChunk, _impl_.chunk_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes chunk = 1 [json_name = "chunk"];
    {PROTOBUF_FIELD_OFFSET(ResponseLoadSnapshotChunk, _impl_.chunk_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResponseLoadSnapshotChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseLoadSnapshotChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.chunk_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseLoadSnapshotChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseLoadSnapshotChunk& this_ = static_cast<const ResponseLoadSnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseLoadSnapshotChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseLoadSnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseLoadSnapshotChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes chunk = 1 [json_name = "chunk"];
          if (!this_._internal_chunk().empty()) {
            const std::string& _s = this_._internal_chunk();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseLoadSnapshotChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseLoadSnapshotChunk::ByteSizeLong(const MessageLite& base) {
          const ResponseLoadSnapshotChunk& this_ = static_cast<const ResponseLoadSnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseLoadSnapshotChunk::ByteSizeLong() const {
          const ResponseLoadSnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseLoadSnapshotChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes chunk = 1 [json_name = "chunk"];
            if (!this_._internal_chunk().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_chunk());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseLoadSnapshotChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseLoadSnapshotChunk*>(&to_msg);
  auto& from = static_cast<const ResponseLoadSnapshotChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseLoadSnapshotChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_chunk().empty()) {
    _this->_internal_set_chunk(from._internal_chunk());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseLoadSnapshotChunk::CopyFrom(const ResponseLoadSnapshotChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseLoadSnapshotChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseLoadSnapshotChunk::InternalSwap(ResponseLoadSnapshotChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.chunk_, &other->_impl_.chunk_, arena);
}

::google::protobuf::Metadata ResponseLoadSnapshotChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseApplySnapshotChunk::_Internal {
 public:
};

ResponseApplySnapshotChunk::ResponseApplySnapshotChunk(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseApplySnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE ResponseApplySnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseApplySnapshotChunk& from_msg)
      : refetch_chunks_{visibility, arena, from.refetch_chunks_},
        _refetch_chunks_cached_byte_size_{0},
        reject_senders_{visibility, arena, from.reject_senders_},
        _cached_size_{0} {}

ResponseApplySnapshotChunk::ResponseApplySnapshotChunk(
    ::google::protobuf::Arena* arena,
    const ResponseApplySnapshotChunk& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseApplySnapshotChunk* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.result_ = from._impl_.result_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseApplySnapshotChunk)
}
inline PROTOBUF_NDEBUG_INLINE ResponseApplySnapshotChunk::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : refetch_chunks_{visibility, arena},
        _refetch_chunks_cached_byte_size_{0},
        reject_senders_{visibility, arena},
        _cached_size_{0} {}

inline void ResponseApplySnapshotChunk::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.result_ = {};
}
ResponseApplySnapshotChunk::~ResponseApplySnapshotChunk() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseApplySnapshotChunk)
  SharedDtor(*this);
}
inline void ResponseApplySnapshotChunk::SharedDtor(MessageLite& self) {
  ResponseApplySnapshotChunk& this_ = static_cast<ResponseApplySnapshotChunk&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResponseApplySnapshotChunk::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseApplySnapshotChunk(arena);
}
constexpr auto ResponseApplySnapshotChunk::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.refetch_chunks_) +
          decltype(ResponseApplySnapshotChunk::_impl_.refetch_chunks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.reject_senders_) +
          decltype(ResponseApplySnapshotChunk::_impl_.reject_senders_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ResponseApplySnapshotChunk), alignof(ResponseApplySnapshotChunk), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResponseApplySnapshotChunk::PlacementNew_,
                                 sizeof(ResponseApplySnapshotChunk),
                                 alignof(ResponseApplySnapshotChunk));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseApplySnapshotChunk::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseApplySnapshotChunk_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseApplySnapshotChunk::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseApplySnapshotChunk>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseApplySnapshotChunk::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseApplySnapshotChunk>(), &ResponseApplySnapshotChunk::ByteSizeLong,
            &ResponseApplySnapshotChunk::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_._cached_size_),
        false,
    },
    &ResponseApplySnapshotChunk::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseApplySnapshotChunk::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 65, 2> ResponseApplySnapshotChunk::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseApplySnapshotChunk>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseApplySnapshotChunk, _impl_.result_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.result_)}},
    // repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.refetch_chunks_)}},
    // repeated string reject_senders = 3 [json_name = "rejectSenders"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.reject_senders_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.result_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];
    {PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.refetch_chunks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated string reject_senders = 3 [json_name = "rejectSenders"];
    {PROTOBUF_FIELD_OFFSET(ResponseApplySnapshotChunk, _impl_.reject_senders_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\52\0\0\16\0\0\0\0"
    "tendermint.abci.ResponseApplySnapshotChunk"
    "reject_senders"
  }},
};

PROTOBUF_NOINLINE void ResponseApplySnapshotChunk::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseApplySnapshotChunk)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.refetch_chunks_.Clear();
  _impl_.reject_senders_.Clear();
  _impl_.result_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseApplySnapshotChunk::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseApplySnapshotChunk& this_ = static_cast<const ResponseApplySnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseApplySnapshotChunk::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseApplySnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseApplySnapshotChunk)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];
          if (this_._internal_result() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_result(), target);
          }

          // repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];
          {
            int byte_size = this_._impl_._refetch_chunks_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt32Packed(
                  2, this_._internal_refetch_chunks(), byte_size, target);
            }
          }

          // repeated string reject_senders = 3 [json_name = "rejectSenders"];
          for (int i = 0, n = this_._internal_reject_senders_size(); i < n; ++i) {
            const auto& s = this_._internal_reject_senders().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ResponseApplySnapshotChunk.reject_senders");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseApplySnapshotChunk)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseApplySnapshotChunk::ByteSizeLong(const MessageLite& base) {
          const ResponseApplySnapshotChunk& this_ = static_cast<const ResponseApplySnapshotChunk&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseApplySnapshotChunk::ByteSizeLong() const {
          const ResponseApplySnapshotChunk& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseApplySnapshotChunk)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
                      this_._internal_refetch_chunks(), 1,
                      this_._impl_._refetch_chunks_cached_byte_size_);
            }
            // repeated string reject_senders = 3 [json_name = "rejectSenders"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_reject_senders().size());
              for (int i = 0, n = this_._internal_reject_senders().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_reject_senders().Get(i));
              }
            }
          }
           {
            // .tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];
            if (this_._internal_result() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_result());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseApplySnapshotChunk::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseApplySnapshotChunk*>(&to_msg);
  auto& from = static_cast<const ResponseApplySnapshotChunk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseApplySnapshotChunk)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_refetch_chunks()->MergeFrom(from._internal_refetch_chunks());
  _this->_internal_mutable_reject_senders()->MergeFrom(from._internal_reject_senders());
  if (from._internal_result() != 0) {
    _this->_impl_.result_ = from._impl_.result_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseApplySnapshotChunk::CopyFrom(const ResponseApplySnapshotChunk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseApplySnapshotChunk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseApplySnapshotChunk::InternalSwap(ResponseApplySnapshotChunk* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.refetch_chunks_.InternalSwap(&other->_impl_.refetch_chunks_);
  _impl_.reject_senders_.InternalSwap(&other->_impl_.reject_senders_);
  swap(_impl_.result_, other->_impl_.result_);
}

::google::protobuf::Metadata ResponseApplySnapshotChunk::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponsePrepareProposal::_Internal {
 public:
};

ResponsePrepareProposal::ResponsePrepareProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponsePrepareProposal)
}
inline PROTOBUF_NDEBUG_INLINE ResponsePrepareProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponsePrepareProposal& from_msg)
      : txs_{visibility, arena, from.txs_},
        _cached_size_{0} {}

ResponsePrepareProposal::ResponsePrepareProposal(
    ::google::protobuf::Arena* arena,
    const ResponsePrepareProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponsePrepareProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponsePrepareProposal)
}
inline PROTOBUF_NDEBUG_INLINE ResponsePrepareProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : txs_{visibility, arena},
        _cached_size_{0} {}

inline void ResponsePrepareProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResponsePrepareProposal::~ResponsePrepareProposal() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponsePrepareProposal)
  SharedDtor(*this);
}
inline void ResponsePrepareProposal::SharedDtor(MessageLite& self) {
  ResponsePrepareProposal& this_ = static_cast<ResponsePrepareProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResponsePrepareProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponsePrepareProposal(arena);
}
constexpr auto ResponsePrepareProposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResponsePrepareProposal, _impl_.txs_) +
          decltype(ResponsePrepareProposal::_impl_.txs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ResponsePrepareProposal), alignof(ResponsePrepareProposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResponsePrepareProposal::PlacementNew_,
                                 sizeof(ResponsePrepareProposal),
                                 alignof(ResponsePrepareProposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponsePrepareProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponsePrepareProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponsePrepareProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponsePrepareProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponsePrepareProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponsePrepareProposal>(), &ResponsePrepareProposal::ByteSizeLong,
            &ResponsePrepareProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponsePrepareProposal, _impl_._cached_size_),
        false,
    },
    &ResponsePrepareProposal::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponsePrepareProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResponsePrepareProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponsePrepareProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes txs = 1 [json_name = "txs"];
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponsePrepareProposal, _impl_.txs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes txs = 1 [json_name = "txs"];
    {PROTOBUF_FIELD_OFFSET(ResponsePrepareProposal, _impl_.txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResponsePrepareProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponsePrepareProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponsePrepareProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponsePrepareProposal& this_ = static_cast<const ResponsePrepareProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponsePrepareProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponsePrepareProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponsePrepareProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated bytes txs = 1 [json_name = "txs"];
          for (int i = 0, n = this_._internal_txs_size(); i < n; ++i) {
            const auto& s = this_._internal_txs().Get(i);
            target = stream->WriteBytes(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponsePrepareProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponsePrepareProposal::ByteSizeLong(const MessageLite& base) {
          const ResponsePrepareProposal& this_ = static_cast<const ResponsePrepareProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponsePrepareProposal::ByteSizeLong() const {
          const ResponsePrepareProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponsePrepareProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes txs = 1 [json_name = "txs"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_txs().size());
              for (int i = 0, n = this_._internal_txs().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_txs().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponsePrepareProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponsePrepareProposal*>(&to_msg);
  auto& from = static_cast<const ResponsePrepareProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponsePrepareProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(from._internal_txs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponsePrepareProposal::CopyFrom(const ResponsePrepareProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponsePrepareProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponsePrepareProposal::InternalSwap(ResponsePrepareProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
}

::google::protobuf::Metadata ResponsePrepareProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseProcessProposal::_Internal {
 public:
};

ResponseProcessProposal::ResponseProcessProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseProcessProposal)
}
ResponseProcessProposal::ResponseProcessProposal(
    ::google::protobuf::Arena* arena, const ResponseProcessProposal& from)
    : ResponseProcessProposal(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResponseProcessProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResponseProcessProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ResponseProcessProposal::~ResponseProcessProposal() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseProcessProposal)
  SharedDtor(*this);
}
inline void ResponseProcessProposal::SharedDtor(MessageLite& self) {
  ResponseProcessProposal& this_ = static_cast<ResponseProcessProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResponseProcessProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseProcessProposal(arena);
}
constexpr auto ResponseProcessProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResponseProcessProposal),
                                            alignof(ResponseProcessProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseProcessProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseProcessProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseProcessProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseProcessProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseProcessProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseProcessProposal>(), &ResponseProcessProposal::ByteSizeLong,
            &ResponseProcessProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseProcessProposal, _impl_._cached_size_),
        false,
    },
    &ResponseProcessProposal::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseProcessProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResponseProcessProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseProcessProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.abci.ResponseProcessProposal.ProposalStatus status = 1 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseProcessProposal, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseProcessProposal, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.ResponseProcessProposal.ProposalStatus status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ResponseProcessProposal, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResponseProcessProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseProcessProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseProcessProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseProcessProposal& this_ = static_cast<const ResponseProcessProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseProcessProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseProcessProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseProcessProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tendermint.abci.ResponseProcessProposal.ProposalStatus status = 1 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseProcessProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseProcessProposal::ByteSizeLong(const MessageLite& base) {
          const ResponseProcessProposal& this_ = static_cast<const ResponseProcessProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseProcessProposal::ByteSizeLong() const {
          const ResponseProcessProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseProcessProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .tendermint.abci.ResponseProcessProposal.ProposalStatus status = 1 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseProcessProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseProcessProposal*>(&to_msg);
  auto& from = static_cast<const ResponseProcessProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseProcessProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseProcessProposal::CopyFrom(const ResponseProcessProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseProcessProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseProcessProposal::InternalSwap(ResponseProcessProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ResponseProcessProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseExtendVote::_Internal {
 public:
};

ResponseExtendVote::ResponseExtendVote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseExtendVote)
}
inline PROTOBUF_NDEBUG_INLINE ResponseExtendVote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseExtendVote& from_msg)
      : vote_extension_(arena, from.vote_extension_),
        _cached_size_{0} {}

ResponseExtendVote::ResponseExtendVote(
    ::google::protobuf::Arena* arena,
    const ResponseExtendVote& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseExtendVote* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseExtendVote)
}
inline PROTOBUF_NDEBUG_INLINE ResponseExtendVote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : vote_extension_(arena),
        _cached_size_{0} {}

inline void ResponseExtendVote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResponseExtendVote::~ResponseExtendVote() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseExtendVote)
  SharedDtor(*this);
}
inline void ResponseExtendVote::SharedDtor(MessageLite& self) {
  ResponseExtendVote& this_ = static_cast<ResponseExtendVote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.vote_extension_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ResponseExtendVote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseExtendVote(arena);
}
constexpr auto ResponseExtendVote::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ResponseExtendVote),
                                            alignof(ResponseExtendVote));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseExtendVote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseExtendVote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseExtendVote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseExtendVote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseExtendVote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseExtendVote>(), &ResponseExtendVote::ByteSizeLong,
            &ResponseExtendVote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseExtendVote, _impl_._cached_size_),
        false,
    },
    &ResponseExtendVote::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseExtendVote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResponseExtendVote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseExtendVote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes vote_extension = 1 [json_name = "voteExtension"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseExtendVote, _impl_.vote_extension_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes vote_extension = 1 [json_name = "voteExtension"];
    {PROTOBUF_FIELD_OFFSET(ResponseExtendVote, _impl_.vote_extension_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResponseExtendVote::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseExtendVote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vote_extension_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseExtendVote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseExtendVote& this_ = static_cast<const ResponseExtendVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseExtendVote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseExtendVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseExtendVote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes vote_extension = 1 [json_name = "voteExtension"];
          if (!this_._internal_vote_extension().empty()) {
            const std::string& _s = this_._internal_vote_extension();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseExtendVote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseExtendVote::ByteSizeLong(const MessageLite& base) {
          const ResponseExtendVote& this_ = static_cast<const ResponseExtendVote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseExtendVote::ByteSizeLong() const {
          const ResponseExtendVote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseExtendVote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes vote_extension = 1 [json_name = "voteExtension"];
            if (!this_._internal_vote_extension().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_vote_extension());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseExtendVote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseExtendVote*>(&to_msg);
  auto& from = static_cast<const ResponseExtendVote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseExtendVote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vote_extension().empty()) {
    _this->_internal_set_vote_extension(from._internal_vote_extension());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseExtendVote::CopyFrom(const ResponseExtendVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseExtendVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseExtendVote::InternalSwap(ResponseExtendVote* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vote_extension_, &other->_impl_.vote_extension_, arena);
}

::google::protobuf::Metadata ResponseExtendVote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseVerifyVoteExtension::_Internal {
 public:
};

ResponseVerifyVoteExtension::ResponseVerifyVoteExtension(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseVerifyVoteExtension)
}
ResponseVerifyVoteExtension::ResponseVerifyVoteExtension(
    ::google::protobuf::Arena* arena, const ResponseVerifyVoteExtension& from)
    : ResponseVerifyVoteExtension(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResponseVerifyVoteExtension::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResponseVerifyVoteExtension::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ResponseVerifyVoteExtension::~ResponseVerifyVoteExtension() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseVerifyVoteExtension)
  SharedDtor(*this);
}
inline void ResponseVerifyVoteExtension::SharedDtor(MessageLite& self) {
  ResponseVerifyVoteExtension& this_ = static_cast<ResponseVerifyVoteExtension&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResponseVerifyVoteExtension::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseVerifyVoteExtension(arena);
}
constexpr auto ResponseVerifyVoteExtension::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResponseVerifyVoteExtension),
                                            alignof(ResponseVerifyVoteExtension));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseVerifyVoteExtension::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseVerifyVoteExtension_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseVerifyVoteExtension::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseVerifyVoteExtension>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseVerifyVoteExtension::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseVerifyVoteExtension>(), &ResponseVerifyVoteExtension::ByteSizeLong,
            &ResponseVerifyVoteExtension::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseVerifyVoteExtension, _impl_._cached_size_),
        false,
    },
    &ResponseVerifyVoteExtension::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseVerifyVoteExtension::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResponseVerifyVoteExtension::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseVerifyVoteExtension>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus status = 1 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ResponseVerifyVoteExtension, _impl_.status_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseVerifyVoteExtension, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ResponseVerifyVoteExtension, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResponseVerifyVoteExtension::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseVerifyVoteExtension)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseVerifyVoteExtension::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseVerifyVoteExtension& this_ = static_cast<const ResponseVerifyVoteExtension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseVerifyVoteExtension::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseVerifyVoteExtension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseVerifyVoteExtension)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus status = 1 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseVerifyVoteExtension)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseVerifyVoteExtension::ByteSizeLong(const MessageLite& base) {
          const ResponseVerifyVoteExtension& this_ = static_cast<const ResponseVerifyVoteExtension&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseVerifyVoteExtension::ByteSizeLong() const {
          const ResponseVerifyVoteExtension& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseVerifyVoteExtension)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .tendermint.abci.ResponseVerifyVoteExtension.VerifyStatus status = 1 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseVerifyVoteExtension::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseVerifyVoteExtension*>(&to_msg);
  auto& from = static_cast<const ResponseVerifyVoteExtension&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseVerifyVoteExtension)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseVerifyVoteExtension::CopyFrom(const ResponseVerifyVoteExtension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseVerifyVoteExtension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseVerifyVoteExtension::InternalSwap(ResponseVerifyVoteExtension* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ResponseVerifyVoteExtension::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResponseFinalizeBlock::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResponseFinalizeBlock>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_._has_bits_);
};

void ResponseFinalizeBlock::clear_consensus_param_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consensus_param_updates_ != nullptr) _impl_.consensus_param_updates_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ResponseFinalizeBlock::ResponseFinalizeBlock(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ResponseFinalizeBlock)
}
inline PROTOBUF_NDEBUG_INLINE ResponseFinalizeBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ResponseFinalizeBlock& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        events_{visibility, arena, from.events_},
        tx_results_{visibility, arena, from.tx_results_},
        validator_updates_{visibility, arena, from.validator_updates_},
        app_hash_(arena, from.app_hash_) {}

ResponseFinalizeBlock::ResponseFinalizeBlock(
    ::google::protobuf::Arena* arena,
    const ResponseFinalizeBlock& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResponseFinalizeBlock* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.consensus_param_updates_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::ConsensusParams>(
                              arena, *from._impl_.consensus_param_updates_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ResponseFinalizeBlock)
}
inline PROTOBUF_NDEBUG_INLINE ResponseFinalizeBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        events_{visibility, arena},
        tx_results_{visibility, arena},
        validator_updates_{visibility, arena},
        app_hash_(arena) {}

inline void ResponseFinalizeBlock::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.consensus_param_updates_ = {};
}
ResponseFinalizeBlock::~ResponseFinalizeBlock() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ResponseFinalizeBlock)
  SharedDtor(*this);
}
inline void ResponseFinalizeBlock::SharedDtor(MessageLite& self) {
  ResponseFinalizeBlock& this_ = static_cast<ResponseFinalizeBlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.app_hash_.Destroy();
  delete this_._impl_.consensus_param_updates_;
  this_._impl_.~Impl_();
}

inline void* ResponseFinalizeBlock::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResponseFinalizeBlock(arena);
}
constexpr auto ResponseFinalizeBlock::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.events_) +
          decltype(ResponseFinalizeBlock::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.tx_results_) +
          decltype(ResponseFinalizeBlock::_impl_.tx_results_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.validator_updates_) +
          decltype(ResponseFinalizeBlock::_impl_.validator_updates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ResponseFinalizeBlock), alignof(ResponseFinalizeBlock), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResponseFinalizeBlock::PlacementNew_,
                                 sizeof(ResponseFinalizeBlock),
                                 alignof(ResponseFinalizeBlock));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResponseFinalizeBlock::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResponseFinalizeBlock_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResponseFinalizeBlock::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResponseFinalizeBlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResponseFinalizeBlock::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResponseFinalizeBlock>(), &ResponseFinalizeBlock::ByteSizeLong,
            &ResponseFinalizeBlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_._cached_size_),
        false,
    },
    &ResponseFinalizeBlock::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResponseFinalizeBlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 4, 0, 2> ResponseFinalizeBlock::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ResponseFinalizeBlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .tendermint.abci.Event events = 1 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.events_)}},
    // repeated .tendermint.abci.ExecTxResult tx_results = 2 [json_name = "txResults"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.tx_results_)}},
    // repeated .tendermint.abci.ValidatorUpdate validator_updates = 3 [json_name = "validatorUpdates", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.validator_updates_)}},
    // .tendermint.types.ConsensusParams consensus_param_updates = 4 [json_name = "consensusParamUpdates"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 3, PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.consensus_param_updates_)}},
    // bytes app_hash = 5 [json_name = "appHash"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.app_hash_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tendermint.abci.Event events = 1 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
    {PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.events_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.ExecTxResult tx_results = 2 [json_name = "txResults"];
    {PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.tx_results_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .tendermint.abci.ValidatorUpdate validator_updates = 3 [json_name = "validatorUpdates", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.validator_updates_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.types.ConsensusParams consensus_param_updates = 4 [json_name = "consensusParamUpdates"];
    {PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.consensus_param_updates_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes app_hash = 5 [json_name = "appHash"];
    {PROTOBUF_FIELD_OFFSET(ResponseFinalizeBlock, _impl_.app_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Event>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ExecTxResult>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ValidatorUpdate>()},
    {::_pbi::TcParser::GetTable<::tendermint::types::ConsensusParams>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ResponseFinalizeBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ResponseFinalizeBlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _impl_.tx_results_.Clear();
  _impl_.validator_updates_.Clear();
  _impl_.app_hash_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.consensus_param_updates_ != nullptr);
    _impl_.consensus_param_updates_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResponseFinalizeBlock::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResponseFinalizeBlock& this_ = static_cast<const ResponseFinalizeBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResponseFinalizeBlock::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResponseFinalizeBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ResponseFinalizeBlock)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tendermint.abci.Event events = 1 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tendermint.abci.ExecTxResult tx_results = 2 [json_name = "txResults"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tx_results_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tx_results().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .tendermint.abci.ValidatorUpdate validator_updates = 3 [json_name = "validatorUpdates", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_validator_updates_size());
               i < n; i++) {
            const auto& repfield = this_._internal_validator_updates().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.types.ConsensusParams consensus_param_updates = 4 [json_name = "consensusParamUpdates"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.consensus_param_updates_, this_._impl_.consensus_param_updates_->GetCachedSize(), target,
                stream);
          }

          // bytes app_hash = 5 [json_name = "appHash"];
          if (!this_._internal_app_hash().empty()) {
            const std::string& _s = this_._internal_app_hash();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ResponseFinalizeBlock)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResponseFinalizeBlock::ByteSizeLong(const MessageLite& base) {
          const ResponseFinalizeBlock& this_ = static_cast<const ResponseFinalizeBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResponseFinalizeBlock::ByteSizeLong() const {
          const ResponseFinalizeBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ResponseFinalizeBlock)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.Event events = 1 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
            {
              total_size += 1UL * this_._internal_events_size();
              for (const auto& msg : this_._internal_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tendermint.abci.ExecTxResult tx_results = 2 [json_name = "txResults"];
            {
              total_size += 1UL * this_._internal_tx_results_size();
              for (const auto& msg : this_._internal_tx_results()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tendermint.abci.ValidatorUpdate validator_updates = 3 [json_name = "validatorUpdates", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_validator_updates_size();
              for (const auto& msg : this_._internal_validator_updates()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes app_hash = 5 [json_name = "appHash"];
            if (!this_._internal_app_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_app_hash());
            }
          }
           {
            // .tendermint.types.ConsensusParams consensus_param_updates = 4 [json_name = "consensusParamUpdates"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.consensus_param_updates_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResponseFinalizeBlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResponseFinalizeBlock*>(&to_msg);
  auto& from = static_cast<const ResponseFinalizeBlock&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ResponseFinalizeBlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  _this->_internal_mutable_tx_results()->MergeFrom(
      from._internal_tx_results());
  _this->_internal_mutable_validator_updates()->MergeFrom(
      from._internal_validator_updates());
  if (!from._internal_app_hash().empty()) {
    _this->_internal_set_app_hash(from._internal_app_hash());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.consensus_param_updates_ != nullptr);
    if (_this->_impl_.consensus_param_updates_ == nullptr) {
      _this->_impl_.consensus_param_updates_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::types::ConsensusParams>(arena, *from._impl_.consensus_param_updates_);
    } else {
      _this->_impl_.consensus_param_updates_->MergeFrom(*from._impl_.consensus_param_updates_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseFinalizeBlock::CopyFrom(const ResponseFinalizeBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ResponseFinalizeBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResponseFinalizeBlock::InternalSwap(ResponseFinalizeBlock* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  _impl_.tx_results_.InternalSwap(&other->_impl_.tx_results_);
  _impl_.validator_updates_.InternalSwap(&other->_impl_.validator_updates_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_hash_, &other->_impl_.app_hash_, arena);
  swap(_impl_.consensus_param_updates_, other->_impl_.consensus_param_updates_);
}

::google::protobuf::Metadata ResponseFinalizeBlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommitInfo::_Internal {
 public:
};

CommitInfo::CommitInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.CommitInfo)
}
inline PROTOBUF_NDEBUG_INLINE CommitInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::CommitInfo& from_msg)
      : votes_{visibility, arena, from.votes_},
        _cached_size_{0} {}

CommitInfo::CommitInfo(
    ::google::protobuf::Arena* arena,
    const CommitInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommitInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.round_ = from._impl_.round_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.CommitInfo)
}
inline PROTOBUF_NDEBUG_INLINE CommitInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : votes_{visibility, arena},
        _cached_size_{0} {}

inline void CommitInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.round_ = {};
}
CommitInfo::~CommitInfo() {
  // @@protoc_insertion_point(destructor:tendermint.abci.CommitInfo)
  SharedDtor(*this);
}
inline void CommitInfo::SharedDtor(MessageLite& self) {
  CommitInfo& this_ = static_cast<CommitInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* CommitInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommitInfo(arena);
}
constexpr auto CommitInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CommitInfo, _impl_.votes_) +
          decltype(CommitInfo::_impl_.votes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CommitInfo), alignof(CommitInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CommitInfo::PlacementNew_,
                                 sizeof(CommitInfo),
                                 alignof(CommitInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommitInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommitInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommitInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommitInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommitInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommitInfo>(), &CommitInfo::ByteSizeLong,
            &CommitInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommitInfo, _impl_._cached_size_),
        false,
    },
    &CommitInfo::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommitInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> CommitInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::CommitInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tendermint.abci.VoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommitInfo, _impl_.votes_)}},
    // int32 round = 1 [json_name = "round"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CommitInfo, _impl_.round_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CommitInfo, _impl_.round_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 round = 1 [json_name = "round"];
    {PROTOBUF_FIELD_OFFSET(CommitInfo, _impl_.round_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .tendermint.abci.VoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(CommitInfo, _impl_.votes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::VoteInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void CommitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.CommitInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.votes_.Clear();
  _impl_.round_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommitInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommitInfo& this_ = static_cast<const CommitInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommitInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommitInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.CommitInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 round = 1 [json_name = "round"];
          if (this_._internal_round() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_round(), target);
          }

          // repeated .tendermint.abci.VoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_votes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_votes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.CommitInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommitInfo::ByteSizeLong(const MessageLite& base) {
          const CommitInfo& this_ = static_cast<const CommitInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommitInfo::ByteSizeLong() const {
          const CommitInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.CommitInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.VoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_votes_size();
              for (const auto& msg : this_._internal_votes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 round = 1 [json_name = "round"];
            if (this_._internal_round() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_round());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommitInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommitInfo*>(&to_msg);
  auto& from = static_cast<const CommitInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.CommitInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_votes()->MergeFrom(
      from._internal_votes());
  if (from._internal_round() != 0) {
    _this->_impl_.round_ = from._impl_.round_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommitInfo::CopyFrom(const CommitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.CommitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommitInfo::InternalSwap(CommitInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.votes_.InternalSwap(&other->_impl_.votes_);
        swap(_impl_.round_, other->_impl_.round_);
}

::google::protobuf::Metadata CommitInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExtendedCommitInfo::_Internal {
 public:
};

ExtendedCommitInfo::ExtendedCommitInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ExtendedCommitInfo)
}
inline PROTOBUF_NDEBUG_INLINE ExtendedCommitInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ExtendedCommitInfo& from_msg)
      : votes_{visibility, arena, from.votes_},
        _cached_size_{0} {}

ExtendedCommitInfo::ExtendedCommitInfo(
    ::google::protobuf::Arena* arena,
    const ExtendedCommitInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExtendedCommitInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.round_ = from._impl_.round_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ExtendedCommitInfo)
}
inline PROTOBUF_NDEBUG_INLINE ExtendedCommitInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : votes_{visibility, arena},
        _cached_size_{0} {}

inline void ExtendedCommitInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.round_ = {};
}
ExtendedCommitInfo::~ExtendedCommitInfo() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ExtendedCommitInfo)
  SharedDtor(*this);
}
inline void ExtendedCommitInfo::SharedDtor(MessageLite& self) {
  ExtendedCommitInfo& this_ = static_cast<ExtendedCommitInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ExtendedCommitInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExtendedCommitInfo(arena);
}
constexpr auto ExtendedCommitInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExtendedCommitInfo, _impl_.votes_) +
          decltype(ExtendedCommitInfo::_impl_.votes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExtendedCommitInfo), alignof(ExtendedCommitInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExtendedCommitInfo::PlacementNew_,
                                 sizeof(ExtendedCommitInfo),
                                 alignof(ExtendedCommitInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExtendedCommitInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExtendedCommitInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExtendedCommitInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExtendedCommitInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExtendedCommitInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExtendedCommitInfo>(), &ExtendedCommitInfo::ByteSizeLong,
            &ExtendedCommitInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExtendedCommitInfo, _impl_._cached_size_),
        false,
    },
    &ExtendedCommitInfo::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExtendedCommitInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ExtendedCommitInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ExtendedCommitInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tendermint.abci.ExtendedVoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ExtendedCommitInfo, _impl_.votes_)}},
    // int32 round = 1 [json_name = "round"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExtendedCommitInfo, _impl_.round_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExtendedCommitInfo, _impl_.round_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 round = 1 [json_name = "round"];
    {PROTOBUF_FIELD_OFFSET(ExtendedCommitInfo, _impl_.round_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .tendermint.abci.ExtendedVoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(ExtendedCommitInfo, _impl_.votes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ExtendedVoteInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExtendedCommitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ExtendedCommitInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.votes_.Clear();
  _impl_.round_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExtendedCommitInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExtendedCommitInfo& this_ = static_cast<const ExtendedCommitInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExtendedCommitInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExtendedCommitInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ExtendedCommitInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 round = 1 [json_name = "round"];
          if (this_._internal_round() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_round(), target);
          }

          // repeated .tendermint.abci.ExtendedVoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_votes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_votes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ExtendedCommitInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExtendedCommitInfo::ByteSizeLong(const MessageLite& base) {
          const ExtendedCommitInfo& this_ = static_cast<const ExtendedCommitInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExtendedCommitInfo::ByteSizeLong() const {
          const ExtendedCommitInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ExtendedCommitInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.ExtendedVoteInfo votes = 2 [json_name = "votes", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_votes_size();
              for (const auto& msg : this_._internal_votes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int32 round = 1 [json_name = "round"];
            if (this_._internal_round() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_round());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExtendedCommitInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExtendedCommitInfo*>(&to_msg);
  auto& from = static_cast<const ExtendedCommitInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ExtendedCommitInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_votes()->MergeFrom(
      from._internal_votes());
  if (from._internal_round() != 0) {
    _this->_impl_.round_ = from._impl_.round_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExtendedCommitInfo::CopyFrom(const ExtendedCommitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ExtendedCommitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExtendedCommitInfo::InternalSwap(ExtendedCommitInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.votes_.InternalSwap(&other->_impl_.votes_);
        swap(_impl_.round_, other->_impl_.round_);
}

::google::protobuf::Metadata ExtendedCommitInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Event::_Internal {
 public:
};

Event::Event(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::Event& from_msg)
      : attributes_{visibility, arena, from.attributes_},
        type_(arena, from.type_),
        _cached_size_{0} {}

Event::Event(
    ::google::protobuf::Arena* arena,
    const Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : attributes_{visibility, arena},
        type_(arena),
        _cached_size_{0} {}

inline void Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Event::~Event() {
  // @@protoc_insertion_point(destructor:tendermint.abci.Event)
  SharedDtor(*this);
}
inline void Event::SharedDtor(MessageLite& self) {
  Event& this_ = static_cast<Event&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Event::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Event(arena);
}
constexpr auto Event::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Event, _impl_.attributes_) +
          decltype(Event::_impl_.attributes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Event), alignof(Event), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Event::PlacementNew_,
                                 sizeof(Event),
                                 alignof(Event));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Event::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Event_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Event::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Event>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Event::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Event>(), &Event::ByteSizeLong,
            &Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Event, _impl_._cached_size_),
        false,
    },
    &Event::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 34, 2> Event::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tendermint.abci.EventAttribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "attributes,omitempty"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.attributes_)}},
    // string type = 1 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tendermint.abci.EventAttribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "attributes,omitempty"];
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.attributes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::EventAttribute>()},
  }}, {{
    "\25\4\0\0\0\0\0\0"
    "tendermint.abci.Event"
    "type"
  }},
};

PROTOBUF_NOINLINE void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.Clear();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Event::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Event::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.Event)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1 [json_name = "type"];
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.Event.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .tendermint.abci.EventAttribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "attributes,omitempty"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_attributes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_attributes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.Event)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Event::ByteSizeLong(const MessageLite& base) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Event::ByteSizeLong() const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.Event)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.EventAttribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "attributes,omitempty"];
            {
              total_size += 1UL * this_._internal_attributes_size();
              for (const auto& msg : this_._internal_attributes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string type = 1 [json_name = "type"];
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Event*>(&to_msg);
  auto& from = static_cast<const Event&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(
      from._internal_attributes());
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Event::InternalSwap(Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventAttribute::_Internal {
 public:
};

EventAttribute::EventAttribute(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.EventAttribute)
}
inline PROTOBUF_NDEBUG_INLINE EventAttribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::EventAttribute& from_msg)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        _cached_size_{0} {}

EventAttribute::EventAttribute(
    ::google::protobuf::Arena* arena,
    const EventAttribute& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventAttribute* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.EventAttribute)
}
inline PROTOBUF_NDEBUG_INLINE EventAttribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void EventAttribute::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
EventAttribute::~EventAttribute() {
  // @@protoc_insertion_point(destructor:tendermint.abci.EventAttribute)
  SharedDtor(*this);
}
inline void EventAttribute::SharedDtor(MessageLite& self) {
  EventAttribute& this_ = static_cast<EventAttribute&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventAttribute::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventAttribute(arena);
}
constexpr auto EventAttribute::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventAttribute),
                                            alignof(EventAttribute));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventAttribute::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventAttribute_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventAttribute::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventAttribute>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventAttribute::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventAttribute>(), &EventAttribute::ByteSizeLong,
            &EventAttribute::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventAttribute, _impl_._cached_size_),
        false,
    },
    &EventAttribute::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventAttribute::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2> EventAttribute::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::EventAttribute>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventAttribute, _impl_.key_)}},
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventAttribute, _impl_.value_)}},
    // bool index = 3 [json_name = "index"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EventAttribute, _impl_.index_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(EventAttribute, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(EventAttribute, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(EventAttribute, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool index = 3 [json_name = "index"];
    {PROTOBUF_FIELD_OFFSET(EventAttribute, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\36\3\5\0\0\0\0\0"
    "tendermint.abci.EventAttribute"
    "key"
    "value"
  }},
};

PROTOBUF_NOINLINE void EventAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.EventAttribute)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _impl_.index_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventAttribute::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventAttribute& this_ = static_cast<const EventAttribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventAttribute::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventAttribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.EventAttribute)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string key = 1 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.EventAttribute.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string value = 2 [json_name = "value"];
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.EventAttribute.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // bool index = 3 [json_name = "index"];
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.EventAttribute)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventAttribute::ByteSizeLong(const MessageLite& base) {
          const EventAttribute& this_ = static_cast<const EventAttribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventAttribute::ByteSizeLong() const {
          const EventAttribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.EventAttribute)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string key = 1 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // string value = 2 [json_name = "value"];
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
            // bool index = 3 [json_name = "index"];
            if (this_._internal_index() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventAttribute::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventAttribute*>(&to_msg);
  auto& from = static_cast<const EventAttribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.EventAttribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventAttribute::CopyFrom(const EventAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.EventAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventAttribute::InternalSwap(EventAttribute* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata EventAttribute::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExecTxResult::_Internal {
 public:
};

ExecTxResult::ExecTxResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ExecTxResult)
}
inline PROTOBUF_NDEBUG_INLINE ExecTxResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ExecTxResult& from_msg)
      : events_{visibility, arena, from.events_},
        data_(arena, from.data_),
        log_(arena, from.log_),
        info_(arena, from.info_),
        codespace_(arena, from.codespace_),
        _cached_size_{0} {}

ExecTxResult::ExecTxResult(
    ::google::protobuf::Arena* arena,
    const ExecTxResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExecTxResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gas_wanted_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gas_wanted_),
           offsetof(Impl_, code_) -
               offsetof(Impl_, gas_wanted_) +
               sizeof(Impl_::code_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ExecTxResult)
}
inline PROTOBUF_NDEBUG_INLINE ExecTxResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : events_{visibility, arena},
        data_(arena),
        log_(arena),
        info_(arena),
        codespace_(arena),
        _cached_size_{0} {}

inline void ExecTxResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gas_wanted_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, gas_wanted_) +
               sizeof(Impl_::code_));
}
ExecTxResult::~ExecTxResult() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ExecTxResult)
  SharedDtor(*this);
}
inline void ExecTxResult::SharedDtor(MessageLite& self) {
  ExecTxResult& this_ = static_cast<ExecTxResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.log_.Destroy();
  this_._impl_.info_.Destroy();
  this_._impl_.codespace_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ExecTxResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExecTxResult(arena);
}
constexpr auto ExecTxResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.events_) +
          decltype(ExecTxResult::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ExecTxResult), alignof(ExecTxResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExecTxResult::PlacementNew_,
                                 sizeof(ExecTxResult),
                                 alignof(ExecTxResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExecTxResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExecTxResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExecTxResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExecTxResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExecTxResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExecTxResult>(), &ExecTxResult::ByteSizeLong,
            &ExecTxResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_._cached_size_),
        false,
    },
    &ExecTxResult::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExecTxResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 61, 2> ExecTxResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ExecTxResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string codespace = 8 [json_name = "codespace"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.codespace_)}},
    // uint32 code = 1 [json_name = "code"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExecTxResult, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.code_)}},
    // bytes data = 2 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.data_)}},
    // string log = 3 [json_name = "log"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.log_)}},
    // string info = 4 [json_name = "info"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.info_)}},
    // int64 gas_wanted = 5 [json_name = "gas_wanted"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExecTxResult, _impl_.gas_wanted_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.gas_wanted_)}},
    // int64 gas_used = 6 [json_name = "gas_used"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExecTxResult, _impl_.gas_used_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.gas_used_)}},
    // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 code = 1 [json_name = "code"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes data = 2 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string log = 3 [json_name = "log"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.log_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string info = 4 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.info_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 gas_wanted = 5 [json_name = "gas_wanted"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.gas_wanted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 gas_used = 6 [json_name = "gas_used"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.gas_used_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string codespace = 8 [json_name = "codespace"];
    {PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.codespace_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Event>()},
  }}, {{
    "\34\0\0\3\4\0\0\0\11\0\0\0\0\0\0\0"
    "tendermint.abci.ExecTxResult"
    "log"
    "info"
    "codespace"
  }},
};

PROTOBUF_NOINLINE void ExecTxResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ExecTxResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _impl_.data_.ClearToEmpty();
  _impl_.log_.ClearToEmpty();
  _impl_.info_.ClearToEmpty();
  _impl_.codespace_.ClearToEmpty();
  ::memset(&_impl_.gas_wanted_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.code_) -
      reinterpret_cast<char*>(&_impl_.gas_wanted_)) + sizeof(_impl_.code_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExecTxResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExecTxResult& this_ = static_cast<const ExecTxResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExecTxResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExecTxResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ExecTxResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 code = 1 [json_name = "code"];
          if (this_._internal_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_code(), target);
          }

          // bytes data = 2 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // string log = 3 [json_name = "log"];
          if (!this_._internal_log().empty()) {
            const std::string& _s = this_._internal_log();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ExecTxResult.log");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string info = 4 [json_name = "info"];
          if (!this_._internal_info().empty()) {
            const std::string& _s = this_._internal_info();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ExecTxResult.info");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // int64 gas_wanted = 5 [json_name = "gas_wanted"];
          if (this_._internal_gas_wanted() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_gas_wanted(), target);
          }

          // int64 gas_used = 6 [json_name = "gas_used"];
          if (this_._internal_gas_used() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_gas_used(), target);
          }

          // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string codespace = 8 [json_name = "codespace"];
          if (!this_._internal_codespace().empty()) {
            const std::string& _s = this_._internal_codespace();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "tendermint.abci.ExecTxResult.codespace");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ExecTxResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExecTxResult::ByteSizeLong(const MessageLite& base) {
          const ExecTxResult& this_ = static_cast<const ExecTxResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExecTxResult::ByteSizeLong() const {
          const ExecTxResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ExecTxResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.Event events = 7 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "events,omitempty"];
            {
              total_size += 1UL * this_._internal_events_size();
              for (const auto& msg : this_._internal_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes data = 2 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string log = 3 [json_name = "log"];
            if (!this_._internal_log().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log());
            }
            // string info = 4 [json_name = "info"];
            if (!this_._internal_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_info());
            }
            // string codespace = 8 [json_name = "codespace"];
            if (!this_._internal_codespace().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_codespace());
            }
            // int64 gas_wanted = 5 [json_name = "gas_wanted"];
            if (this_._internal_gas_wanted() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_gas_wanted());
            }
            // int64 gas_used = 6 [json_name = "gas_used"];
            if (this_._internal_gas_used() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_gas_used());
            }
            // uint32 code = 1 [json_name = "code"];
            if (this_._internal_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExecTxResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExecTxResult*>(&to_msg);
  auto& from = static_cast<const ExecTxResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ExecTxResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_log().empty()) {
    _this->_internal_set_log(from._internal_log());
  }
  if (!from._internal_info().empty()) {
    _this->_internal_set_info(from._internal_info());
  }
  if (!from._internal_codespace().empty()) {
    _this->_internal_set_codespace(from._internal_codespace());
  }
  if (from._internal_gas_wanted() != 0) {
    _this->_impl_.gas_wanted_ = from._impl_.gas_wanted_;
  }
  if (from._internal_gas_used() != 0) {
    _this->_impl_.gas_used_ = from._impl_.gas_used_;
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExecTxResult::CopyFrom(const ExecTxResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ExecTxResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExecTxResult::InternalSwap(ExecTxResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_, &other->_impl_.log_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, &other->_impl_.info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.codespace_, &other->_impl_.codespace_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.code_)
      + sizeof(ExecTxResult::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(ExecTxResult, _impl_.gas_wanted_)>(
          reinterpret_cast<char*>(&_impl_.gas_wanted_),
          reinterpret_cast<char*>(&other->_impl_.gas_wanted_));
}

::google::protobuf::Metadata ExecTxResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TxResult::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TxResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TxResult, _impl_._has_bits_);
};

TxResult::TxResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.TxResult)
}
inline PROTOBUF_NDEBUG_INLINE TxResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::TxResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tx_(arena, from.tx_) {}

TxResult::TxResult(
    ::google::protobuf::Arena* arena,
    const TxResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TxResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ExecTxResult>(
                              arena, *from._impl_.result_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, index_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::index_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.TxResult)
}
inline PROTOBUF_NDEBUG_INLINE TxResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tx_(arena) {}

inline void TxResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::index_));
}
TxResult::~TxResult() {
  // @@protoc_insertion_point(destructor:tendermint.abci.TxResult)
  SharedDtor(*this);
}
inline void TxResult::SharedDtor(MessageLite& self) {
  TxResult& this_ = static_cast<TxResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.tx_.Destroy();
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* TxResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TxResult(arena);
}
constexpr auto TxResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TxResult),
                                            alignof(TxResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TxResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TxResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TxResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TxResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TxResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TxResult>(), &TxResult::ByteSizeLong,
            &TxResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TxResult, _impl_._cached_size_),
        false,
    },
    &TxResult::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TxResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> TxResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TxResult, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::TxResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.abci.ExecTxResult result = 4 [json_name = "result", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(TxResult, _impl_.result_)}},
    // int64 height = 1 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TxResult, _impl_.height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TxResult, _impl_.height_)}},
    // uint32 index = 2 [json_name = "index"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TxResult, _impl_.index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TxResult, _impl_.index_)}},
    // bytes tx = 3 [json_name = "tx"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TxResult, _impl_.tx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 height = 1 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(TxResult, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // uint32 index = 2 [json_name = "index"];
    {PROTOBUF_FIELD_OFFSET(TxResult, _impl_.index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes tx = 3 [json_name = "tx"];
    {PROTOBUF_FIELD_OFFSET(TxResult, _impl_.tx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tendermint.abci.ExecTxResult result = 4 [json_name = "result", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(TxResult, _impl_.result_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ExecTxResult>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TxResult::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.TxResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tx_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.result_ != nullptr);
    _impl_.result_->Clear();
  }
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.index_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TxResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TxResult& this_ = static_cast<const TxResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TxResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TxResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.TxResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 height = 1 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_height(), target);
          }

          // uint32 index = 2 [json_name = "index"];
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_index(), target);
          }

          // bytes tx = 3 [json_name = "tx"];
          if (!this_._internal_tx().empty()) {
            const std::string& _s = this_._internal_tx();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.ExecTxResult result = 4 [json_name = "result", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.TxResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TxResult::ByteSizeLong(const MessageLite& base) {
          const TxResult& this_ = static_cast<const TxResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TxResult::ByteSizeLong() const {
          const TxResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.TxResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes tx = 3 [json_name = "tx"];
            if (!this_._internal_tx().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tx());
            }
          }
           {
            // .tendermint.abci.ExecTxResult result = 4 [json_name = "result", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
           {
            // int64 height = 1 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
            // uint32 index = 2 [json_name = "index"];
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TxResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TxResult*>(&to_msg);
  auto& from = static_cast<const TxResult&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.TxResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tx().empty()) {
    _this->_internal_set_tx(from._internal_tx());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.result_ != nullptr);
    if (_this->_impl_.result_ == nullptr) {
      _this->_impl_.result_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ExecTxResult>(arena, *from._impl_.result_);
    } else {
      _this->_impl_.result_->MergeFrom(*from._impl_.result_);
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxResult::CopyFrom(const TxResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.TxResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TxResult::InternalSwap(TxResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tx_, &other->_impl_.tx_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TxResult, _impl_.index_)
      + sizeof(TxResult::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(TxResult, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata TxResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Validator::_Internal {
 public:
};

Validator::Validator(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.Validator)
}
inline PROTOBUF_NDEBUG_INLINE Validator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::Validator& from_msg)
      : address_(arena, from.address_),
        _cached_size_{0} {}

Validator::Validator(
    ::google::protobuf::Arena* arena,
    const Validator& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Validator* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.power_ = from._impl_.power_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.Validator)
}
inline PROTOBUF_NDEBUG_INLINE Validator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        _cached_size_{0} {}

inline void Validator::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.power_ = {};
}
Validator::~Validator() {
  // @@protoc_insertion_point(destructor:tendermint.abci.Validator)
  SharedDtor(*this);
}
inline void Validator::SharedDtor(MessageLite& self) {
  Validator& this_ = static_cast<Validator&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Validator::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Validator(arena);
}
constexpr auto Validator::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Validator),
                                            alignof(Validator));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Validator::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Validator_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Validator::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Validator>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Validator::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Validator>(), &Validator::ByteSizeLong,
            &Validator::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Validator, _impl_._cached_size_),
        false,
    },
    &Validator::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Validator::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 0, 2> Validator::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::Validator>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes address = 1 [json_name = "address"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.address_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 power = 3 [json_name = "power"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Validator, _impl_.power_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.power_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes address = 1 [json_name = "address"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 power = 3 [json_name = "power"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.power_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Validator::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.Validator)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.power_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Validator::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Validator& this_ = static_cast<const Validator&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Validator::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Validator& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.Validator)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes address = 1 [json_name = "address"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // int64 power = 3 [json_name = "power"];
          if (this_._internal_power() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_power(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.Validator)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Validator::ByteSizeLong(const MessageLite& base) {
          const Validator& this_ = static_cast<const Validator&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Validator::ByteSizeLong() const {
          const Validator& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.Validator)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes address = 1 [json_name = "address"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_address());
            }
            // int64 power = 3 [json_name = "power"];
            if (this_._internal_power() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_power());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Validator::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Validator*>(&to_msg);
  auto& from = static_cast<const Validator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.Validator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_power() != 0) {
    _this->_impl_.power_ = from._impl_.power_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Validator::CopyFrom(const Validator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.Validator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Validator::InternalSwap(Validator* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
        swap(_impl_.power_, other->_impl_.power_);
}

::google::protobuf::Metadata Validator::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ValidatorUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_._has_bits_);
};

void ValidatorUpdate::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pub_key_ != nullptr) _impl_.pub_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ValidatorUpdate::ValidatorUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ValidatorUpdate)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ValidatorUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ValidatorUpdate::ValidatorUpdate(
    ::google::protobuf::Arena* arena,
    const ValidatorUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pub_key_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::crypto::PublicKey>(
                              arena, *from._impl_.pub_key_)
                        : nullptr;
  _impl_.power_ = from._impl_.power_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ValidatorUpdate)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ValidatorUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_key_),
           0,
           offsetof(Impl_, power_) -
               offsetof(Impl_, pub_key_) +
               sizeof(Impl_::power_));
}
ValidatorUpdate::~ValidatorUpdate() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ValidatorUpdate)
  SharedDtor(*this);
}
inline void ValidatorUpdate::SharedDtor(MessageLite& self) {
  ValidatorUpdate& this_ = static_cast<ValidatorUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.pub_key_;
  this_._impl_.~Impl_();
}

inline void* ValidatorUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorUpdate(arena);
}
constexpr auto ValidatorUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ValidatorUpdate),
                                            alignof(ValidatorUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorUpdate>(), &ValidatorUpdate::ByteSizeLong,
            &ValidatorUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_._cached_size_),
        false,
    },
    &ValidatorUpdate::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ValidatorUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ValidatorUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 power = 2 [json_name = "power"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorUpdate, _impl_.power_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_.power_)}},
    // .tendermint.crypto.PublicKey pub_key = 1 [json_name = "pubKey", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_.pub_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.crypto.PublicKey pub_key = 1 [json_name = "pubKey", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_.pub_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 power = 2 [json_name = "power"];
    {PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_.power_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::crypto::PublicKey>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ValidatorUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ValidatorUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pub_key_ != nullptr);
    _impl_.pub_key_->Clear();
  }
  _impl_.power_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorUpdate& this_ = static_cast<const ValidatorUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ValidatorUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.crypto.PublicKey pub_key = 1 [json_name = "pubKey", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pub_key_, this_._impl_.pub_key_->GetCachedSize(), target,
                stream);
          }

          // int64 power = 2 [json_name = "power"];
          if (this_._internal_power() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_power(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ValidatorUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorUpdate::ByteSizeLong(const MessageLite& base) {
          const ValidatorUpdate& this_ = static_cast<const ValidatorUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorUpdate::ByteSizeLong() const {
          const ValidatorUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ValidatorUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tendermint.crypto.PublicKey pub_key = 1 [json_name = "pubKey", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pub_key_);
            }
          }
           {
            // int64 power = 2 [json_name = "power"];
            if (this_._internal_power() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_power());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorUpdate*>(&to_msg);
  auto& from = static_cast<const ValidatorUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ValidatorUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pub_key_ != nullptr);
    if (_this->_impl_.pub_key_ == nullptr) {
      _this->_impl_.pub_key_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::crypto::PublicKey>(arena, *from._impl_.pub_key_);
    } else {
      _this->_impl_.pub_key_->MergeFrom(*from._impl_.pub_key_);
    }
  }
  if (from._internal_power() != 0) {
    _this->_impl_.power_ = from._impl_.power_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorUpdate::CopyFrom(const ValidatorUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ValidatorUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorUpdate::InternalSwap(ValidatorUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_.power_)
      + sizeof(ValidatorUpdate::_impl_.power_)
      - PROTOBUF_FIELD_OFFSET(ValidatorUpdate, _impl_.pub_key_)>(
          reinterpret_cast<char*>(&_impl_.pub_key_),
          reinterpret_cast<char*>(&other->_impl_.pub_key_));
}

::google::protobuf::Metadata ValidatorUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VoteInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VoteInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_._has_bits_);
};

VoteInfo::VoteInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.VoteInfo)
}
inline PROTOBUF_NDEBUG_INLINE VoteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::VoteInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VoteInfo::VoteInfo(
    ::google::protobuf::Arena* arena,
    const VoteInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VoteInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validator_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Validator>(
                              arena, *from._impl_.validator_)
                        : nullptr;
  _impl_.block_id_flag_ = from._impl_.block_id_flag_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.VoteInfo)
}
inline PROTOBUF_NDEBUG_INLINE VoteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VoteInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validator_),
           0,
           offsetof(Impl_, block_id_flag_) -
               offsetof(Impl_, validator_) +
               sizeof(Impl_::block_id_flag_));
}
VoteInfo::~VoteInfo() {
  // @@protoc_insertion_point(destructor:tendermint.abci.VoteInfo)
  SharedDtor(*this);
}
inline void VoteInfo::SharedDtor(MessageLite& self) {
  VoteInfo& this_ = static_cast<VoteInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.validator_;
  this_._impl_.~Impl_();
}

inline void* VoteInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VoteInfo(arena);
}
constexpr auto VoteInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VoteInfo),
                                            alignof(VoteInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VoteInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VoteInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VoteInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VoteInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VoteInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VoteInfo>(), &VoteInfo::ByteSizeLong,
            &VoteInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_._cached_size_),
        false,
    },
    &VoteInfo::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VoteInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 1, 0, 2> VoteInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::VoteInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_.validator_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // .tendermint.types.BlockIDFlag block_id_flag = 3 [json_name = "blockIdFlag"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VoteInfo, _impl_.block_id_flag_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_.block_id_flag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_.validator_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.types.BlockIDFlag block_id_flag = 3 [json_name = "blockIdFlag"];
    {PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_.block_id_flag_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Validator>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void VoteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.VoteInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.validator_ != nullptr);
    _impl_.validator_->Clear();
  }
  _impl_.block_id_flag_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VoteInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VoteInfo& this_ = static_cast<const VoteInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VoteInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VoteInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.VoteInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.validator_, this_._impl_.validator_->GetCachedSize(), target,
                stream);
          }

          // .tendermint.types.BlockIDFlag block_id_flag = 3 [json_name = "blockIdFlag"];
          if (this_._internal_block_id_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_block_id_flag(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.VoteInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VoteInfo::ByteSizeLong(const MessageLite& base) {
          const VoteInfo& this_ = static_cast<const VoteInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VoteInfo::ByteSizeLong() const {
          const VoteInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.VoteInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validator_);
            }
          }
           {
            // .tendermint.types.BlockIDFlag block_id_flag = 3 [json_name = "blockIdFlag"];
            if (this_._internal_block_id_flag() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_block_id_flag());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VoteInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VoteInfo*>(&to_msg);
  auto& from = static_cast<const VoteInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.VoteInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.validator_ != nullptr);
    if (_this->_impl_.validator_ == nullptr) {
      _this->_impl_.validator_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Validator>(arena, *from._impl_.validator_);
    } else {
      _this->_impl_.validator_->MergeFrom(*from._impl_.validator_);
    }
  }
  if (from._internal_block_id_flag() != 0) {
    _this->_impl_.block_id_flag_ = from._impl_.block_id_flag_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VoteInfo::CopyFrom(const VoteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.VoteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VoteInfo::InternalSwap(VoteInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_.block_id_flag_)
      + sizeof(VoteInfo::_impl_.block_id_flag_)
      - PROTOBUF_FIELD_OFFSET(VoteInfo, _impl_.validator_)>(
          reinterpret_cast<char*>(&_impl_.validator_),
          reinterpret_cast<char*>(&other->_impl_.validator_));
}

::google::protobuf::Metadata VoteInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExtendedVoteInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExtendedVoteInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_._has_bits_);
};

ExtendedVoteInfo::ExtendedVoteInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.ExtendedVoteInfo)
}
inline PROTOBUF_NDEBUG_INLINE ExtendedVoteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::ExtendedVoteInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        vote_extension_(arena, from.vote_extension_),
        extension_signature_(arena, from.extension_signature_) {}

ExtendedVoteInfo::ExtendedVoteInfo(
    ::google::protobuf::Arena* arena,
    const ExtendedVoteInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExtendedVoteInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validator_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Validator>(
                              arena, *from._impl_.validator_)
                        : nullptr;
  _impl_.block_id_flag_ = from._impl_.block_id_flag_;

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.ExtendedVoteInfo)
}
inline PROTOBUF_NDEBUG_INLINE ExtendedVoteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        vote_extension_(arena),
        extension_signature_(arena) {}

inline void ExtendedVoteInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validator_),
           0,
           offsetof(Impl_, block_id_flag_) -
               offsetof(Impl_, validator_) +
               sizeof(Impl_::block_id_flag_));
}
ExtendedVoteInfo::~ExtendedVoteInfo() {
  // @@protoc_insertion_point(destructor:tendermint.abci.ExtendedVoteInfo)
  SharedDtor(*this);
}
inline void ExtendedVoteInfo::SharedDtor(MessageLite& self) {
  ExtendedVoteInfo& this_ = static_cast<ExtendedVoteInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.vote_extension_.Destroy();
  this_._impl_.extension_signature_.Destroy();
  delete this_._impl_.validator_;
  this_._impl_.~Impl_();
}

inline void* ExtendedVoteInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExtendedVoteInfo(arena);
}
constexpr auto ExtendedVoteInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExtendedVoteInfo),
                                            alignof(ExtendedVoteInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExtendedVoteInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExtendedVoteInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExtendedVoteInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExtendedVoteInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExtendedVoteInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExtendedVoteInfo>(), &ExtendedVoteInfo::ByteSizeLong,
            &ExtendedVoteInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_._cached_size_),
        false,
    },
    &ExtendedVoteInfo::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExtendedVoteInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 1, 0, 2> ExtendedVoteInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967266,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::ExtendedVoteInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.validator_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bytes vote_extension = 3 [json_name = "voteExtension"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.vote_extension_)}},
    // bytes extension_signature = 4 [json_name = "extensionSignature"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.extension_signature_)}},
    // .tendermint.types.BlockIDFlag block_id_flag = 5 [json_name = "blockIdFlag"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExtendedVoteInfo, _impl_.block_id_flag_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.block_id_flag_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.validator_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes vote_extension = 3 [json_name = "voteExtension"];
    {PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.vote_extension_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes extension_signature = 4 [json_name = "extensionSignature"];
    {PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.extension_signature_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .tendermint.types.BlockIDFlag block_id_flag = 5 [json_name = "blockIdFlag"];
    {PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.block_id_flag_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Validator>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExtendedVoteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.ExtendedVoteInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.vote_extension_.ClearToEmpty();
  _impl_.extension_signature_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.validator_ != nullptr);
    _impl_.validator_->Clear();
  }
  _impl_.block_id_flag_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExtendedVoteInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExtendedVoteInfo& this_ = static_cast<const ExtendedVoteInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExtendedVoteInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExtendedVoteInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.ExtendedVoteInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.validator_, this_._impl_.validator_->GetCachedSize(), target,
                stream);
          }

          // bytes vote_extension = 3 [json_name = "voteExtension"];
          if (!this_._internal_vote_extension().empty()) {
            const std::string& _s = this_._internal_vote_extension();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bytes extension_signature = 4 [json_name = "extensionSignature"];
          if (!this_._internal_extension_signature().empty()) {
            const std::string& _s = this_._internal_extension_signature();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // .tendermint.types.BlockIDFlag block_id_flag = 5 [json_name = "blockIdFlag"];
          if (this_._internal_block_id_flag() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_block_id_flag(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.ExtendedVoteInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExtendedVoteInfo::ByteSizeLong(const MessageLite& base) {
          const ExtendedVoteInfo& this_ = static_cast<const ExtendedVoteInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExtendedVoteInfo::ByteSizeLong() const {
          const ExtendedVoteInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.ExtendedVoteInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes vote_extension = 3 [json_name = "voteExtension"];
            if (!this_._internal_vote_extension().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_vote_extension());
            }
            // bytes extension_signature = 4 [json_name = "extensionSignature"];
            if (!this_._internal_extension_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_extension_signature());
            }
          }
           {
            // .tendermint.abci.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validator_);
            }
          }
           {
            // .tendermint.types.BlockIDFlag block_id_flag = 5 [json_name = "blockIdFlag"];
            if (this_._internal_block_id_flag() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_block_id_flag());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExtendedVoteInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExtendedVoteInfo*>(&to_msg);
  auto& from = static_cast<const ExtendedVoteInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.ExtendedVoteInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_vote_extension().empty()) {
    _this->_internal_set_vote_extension(from._internal_vote_extension());
  }
  if (!from._internal_extension_signature().empty()) {
    _this->_internal_set_extension_signature(from._internal_extension_signature());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.validator_ != nullptr);
    if (_this->_impl_.validator_ == nullptr) {
      _this->_impl_.validator_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Validator>(arena, *from._impl_.validator_);
    } else {
      _this->_impl_.validator_->MergeFrom(*from._impl_.validator_);
    }
  }
  if (from._internal_block_id_flag() != 0) {
    _this->_impl_.block_id_flag_ = from._impl_.block_id_flag_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExtendedVoteInfo::CopyFrom(const ExtendedVoteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.ExtendedVoteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExtendedVoteInfo::InternalSwap(ExtendedVoteInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.vote_extension_, &other->_impl_.vote_extension_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extension_signature_, &other->_impl_.extension_signature_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.block_id_flag_)
      + sizeof(ExtendedVoteInfo::_impl_.block_id_flag_)
      - PROTOBUF_FIELD_OFFSET(ExtendedVoteInfo, _impl_.validator_)>(
          reinterpret_cast<char*>(&_impl_.validator_),
          reinterpret_cast<char*>(&other->_impl_.validator_));
}

::google::protobuf::Metadata ExtendedVoteInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Misbehavior::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Misbehavior>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_._has_bits_);
};

void Misbehavior::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Misbehavior::Misbehavior(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.Misbehavior)
}
inline PROTOBUF_NDEBUG_INLINE Misbehavior::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::Misbehavior& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Misbehavior::Misbehavior(
    ::google::protobuf::Arena* arena,
    const Misbehavior& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Misbehavior* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validator_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Validator>(
                              arena, *from._impl_.validator_)
                        : nullptr;
  _impl_.time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.Misbehavior)
}
inline PROTOBUF_NDEBUG_INLINE Misbehavior::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Misbehavior::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, validator_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, validator_) +
               sizeof(Impl_::type_));
}
Misbehavior::~Misbehavior() {
  // @@protoc_insertion_point(destructor:tendermint.abci.Misbehavior)
  SharedDtor(*this);
}
inline void Misbehavior::SharedDtor(MessageLite& self) {
  Misbehavior& this_ = static_cast<Misbehavior&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.validator_;
  delete this_._impl_.time_;
  this_._impl_.~Impl_();
}

inline void* Misbehavior::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Misbehavior(arena);
}
constexpr auto Misbehavior::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Misbehavior),
                                            alignof(Misbehavior));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Misbehavior::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Misbehavior_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Misbehavior::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Misbehavior>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Misbehavior::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Misbehavior>(), &Misbehavior::ByteSizeLong,
            &Misbehavior::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_._cached_size_),
        false,
    },
    &Misbehavior::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Misbehavior::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2> Misbehavior::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::Misbehavior>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .tendermint.abci.MisbehaviorType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Misbehavior, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.type_)}},
    // .tendermint.abci.Validator validator = 2 [json_name = "validator", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.validator_)}},
    // int64 height = 3 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Misbehavior, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.height_)}},
    // .google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.time_)}},
    // int64 total_voting_power = 5 [json_name = "totalVotingPower"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Misbehavior, _impl_.total_voting_power_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.total_voting_power_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.MisbehaviorType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .tendermint.abci.Validator validator = 2 [json_name = "validator", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.validator_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 height = 3 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 total_voting_power = 5 [json_name = "totalVotingPower"];
    {PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.total_voting_power_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Validator>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Misbehavior::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.Misbehavior)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.validator_ != nullptr);
      _impl_.validator_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
  }
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Misbehavior::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Misbehavior& this_ = static_cast<const Misbehavior&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Misbehavior::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Misbehavior& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.Misbehavior)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .tendermint.abci.MisbehaviorType type = 1 [json_name = "type"];
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.Validator validator = 2 [json_name = "validator", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.validator_, this_._impl_.validator_->GetCachedSize(), target,
                stream);
          }

          // int64 height = 3 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_height(), target);
          }

          // .google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // int64 total_voting_power = 5 [json_name = "totalVotingPower"];
          if (this_._internal_total_voting_power() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_total_voting_power(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.Misbehavior)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Misbehavior::ByteSizeLong(const MessageLite& base) {
          const Misbehavior& this_ = static_cast<const Misbehavior&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Misbehavior::ByteSizeLong() const {
          const Misbehavior& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.Misbehavior)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tendermint.abci.Validator validator = 2 [json_name = "validator", (.gogoproto.nullable) = false];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validator_);
            }
            // .google.protobuf.Timestamp time = 4 [json_name = "time", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
          }
           {
            // int64 height = 3 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
            // int64 total_voting_power = 5 [json_name = "totalVotingPower"];
            if (this_._internal_total_voting_power() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_total_voting_power());
            }
            // .tendermint.abci.MisbehaviorType type = 1 [json_name = "type"];
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Misbehavior::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Misbehavior*>(&to_msg);
  auto& from = static_cast<const Misbehavior&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.Misbehavior)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.validator_ != nullptr);
      if (_this->_impl_.validator_ == nullptr) {
        _this->_impl_.validator_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::Validator>(arena, *from._impl_.validator_);
      } else {
        _this->_impl_.validator_->MergeFrom(*from._impl_.validator_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_total_voting_power() != 0) {
    _this->_impl_.total_voting_power_ = from._impl_.total_voting_power_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Misbehavior::CopyFrom(const Misbehavior& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.Misbehavior)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Misbehavior::InternalSwap(Misbehavior* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.type_)
      + sizeof(Misbehavior::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(Misbehavior, _impl_.validator_)>(
          reinterpret_cast<char*>(&_impl_.validator_),
          reinterpret_cast<char*>(&other->_impl_.validator_));
}

::google::protobuf::Metadata Misbehavior::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Snapshot::_Internal {
 public:
};

Snapshot::Snapshot(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:tendermint.abci.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::tendermint::abci::Snapshot& from_msg)
      : hash_(arena, from.hash_),
        metadata_(arena, from.metadata_),
        _cached_size_{0} {}

Snapshot::Snapshot(
    ::google::protobuf::Arena* arena,
    const Snapshot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Snapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, chunks_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::chunks_));

  // @@protoc_insertion_point(copy_constructor:tendermint.abci.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : hash_(arena),
        metadata_(arena),
        _cached_size_{0} {}

inline void Snapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           0,
           offsetof(Impl_, chunks_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::chunks_));
}
Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:tendermint.abci.Snapshot)
  SharedDtor(*this);
}
inline void Snapshot::SharedDtor(MessageLite& self) {
  Snapshot& this_ = static_cast<Snapshot&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.hash_.Destroy();
  this_._impl_.metadata_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Snapshot::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Snapshot(arena);
}
constexpr auto Snapshot::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Snapshot),
                                            alignof(Snapshot));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Snapshot::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Snapshot_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Snapshot::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Snapshot>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Snapshot::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Snapshot>(), &Snapshot::ByteSizeLong,
            &Snapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._cached_size_),
        false,
    },
    &Snapshot::kDescriptorMethods,
    &descriptor_table_tendermint_2fabci_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Snapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Snapshot::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::tendermint::abci::Snapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 height = 1 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Snapshot, _impl_.height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.height_)}},
    // uint32 format = 2 [json_name = "format"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Snapshot, _impl_.format_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.format_)}},
    // uint32 chunks = 3 [json_name = "chunks"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Snapshot, _impl_.chunks_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.chunks_)}},
    // bytes hash = 4 [json_name = "hash"];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.hash_)}},
    // bytes metadata = 5 [json_name = "metadata"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 height = 1 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 format = 2 [json_name = "format"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 chunks = 3 [json_name = "chunks"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.chunks_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes hash = 4 [json_name = "hash"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.hash_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes metadata = 5 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:tendermint.abci.Snapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.hash_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.chunks_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.chunks_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Snapshot::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Snapshot& this_ = static_cast<const Snapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Snapshot::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Snapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:tendermint.abci.Snapshot)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 height = 1 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_height(), target);
          }

          // uint32 format = 2 [json_name = "format"];
          if (this_._internal_format() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_format(), target);
          }

          // uint32 chunks = 3 [json_name = "chunks"];
          if (this_._internal_chunks() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_chunks(), target);
          }

          // bytes hash = 4 [json_name = "hash"];
          if (!this_._internal_hash().empty()) {
            const std::string& _s = this_._internal_hash();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bytes metadata = 5 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:tendermint.abci.Snapshot)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Snapshot::ByteSizeLong(const MessageLite& base) {
          const Snapshot& this_ = static_cast<const Snapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Snapshot::ByteSizeLong() const {
          const Snapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:tendermint.abci.Snapshot)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes hash = 4 [json_name = "hash"];
            if (!this_._internal_hash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_hash());
            }
            // bytes metadata = 5 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_metadata());
            }
            // uint64 height = 1 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_height());
            }
            // uint32 format = 2 [json_name = "format"];
            if (this_._internal_format() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_format());
            }
            // uint32 chunks = 3 [json_name = "chunks"];
            if (this_._internal_chunks() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_chunks());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Snapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Snapshot*>(&to_msg);
  auto& from = static_cast<const Snapshot&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:tendermint.abci.Snapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_hash().empty()) {
    _this->_internal_set_hash(from._internal_hash());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_format() != 0) {
    _this->_impl_.format_ = from._impl_.format_;
  }
  if (from._internal_chunks() != 0) {
    _this->_impl_.chunks_ = from._impl_.chunks_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tendermint.abci.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Snapshot::InternalSwap(Snapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.hash_, &other->_impl_.hash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.chunks_)
      + sizeof(Snapshot::_impl_.chunks_)
      - PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.height_)>(
          reinterpret_cast<char*>(&_impl_.height_),
          reinterpret_cast<char*>(&other->_impl_.height_));
}

::google::protobuf::Metadata Snapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace abci
}  // namespace tendermint
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_tendermint_2fabci_2ftypes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
