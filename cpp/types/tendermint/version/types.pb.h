// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tendermint/version/types.proto
// Protobuf C++ Version: 5.29.4

#ifndef tendermint_2fversion_2ftypes_2eproto_2epb_2eh
#define tendermint_2fversion_2ftypes_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tendermint_2fversion_2ftypes_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tendermint_2fversion_2ftypes_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tendermint_2fversion_2ftypes_2eproto;
namespace tendermint {
namespace version {
class App;
struct AppDefaultTypeInternal;
extern AppDefaultTypeInternal _App_default_instance_;
class Consensus;
struct ConsensusDefaultTypeInternal;
extern ConsensusDefaultTypeInternal _Consensus_default_instance_;
}  // namespace version
}  // namespace tendermint
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace tendermint {
namespace version {

// ===================================================================


// -------------------------------------------------------------------

class Consensus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.version.Consensus) */ {
 public:
  inline Consensus() : Consensus(nullptr) {}
  ~Consensus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Consensus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Consensus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Consensus(
      ::google::protobuf::internal::ConstantInitialized);

  inline Consensus(const Consensus& from) : Consensus(nullptr, from) {}
  inline Consensus(Consensus&& from) noexcept
      : Consensus(nullptr, std::move(from)) {}
  inline Consensus& operator=(const Consensus& from) {
    CopyFrom(from);
    return *this;
  }
  inline Consensus& operator=(Consensus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Consensus& default_instance() {
    return *internal_default_instance();
  }
  static inline const Consensus* internal_default_instance() {
    return reinterpret_cast<const Consensus*>(
        &_Consensus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Consensus& a, Consensus& b) { a.Swap(&b); }
  inline void Swap(Consensus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Consensus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Consensus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Consensus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Consensus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Consensus& from) { Consensus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Consensus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.version.Consensus"; }

 protected:
  explicit Consensus(::google::protobuf::Arena* arena);
  Consensus(::google::protobuf::Arena* arena, const Consensus& from);
  Consensus(::google::protobuf::Arena* arena, Consensus&& from) noexcept
      : Consensus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockFieldNumber = 1,
    kAppFieldNumber = 2,
  };
  // uint64 block = 1 [json_name = "block"];
  void clear_block() ;
  ::uint64_t block() const;
  void set_block(::uint64_t value);

  private:
  ::uint64_t _internal_block() const;
  void _internal_set_block(::uint64_t value);

  public:
  // uint64 app = 2 [json_name = "app"];
  void clear_app() ;
  ::uint64_t app() const;
  void set_app(::uint64_t value);

  private:
  ::uint64_t _internal_app() const;
  void _internal_set_app(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tendermint.version.Consensus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Consensus& from_msg);
    ::uint64_t block_;
    ::uint64_t app_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2fversion_2ftypes_2eproto;
};
// -------------------------------------------------------------------

class App final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:tendermint.version.App) */ {
 public:
  inline App() : App(nullptr) {}
  ~App() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(App* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(App));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR App(
      ::google::protobuf::internal::ConstantInitialized);

  inline App(const App& from) : App(nullptr, from) {}
  inline App(App&& from) noexcept
      : App(nullptr, std::move(from)) {}
  inline App& operator=(const App& from) {
    CopyFrom(from);
    return *this;
  }
  inline App& operator=(App&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const App& default_instance() {
    return *internal_default_instance();
  }
  static inline const App* internal_default_instance() {
    return reinterpret_cast<const App*>(
        &_App_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(App& a, App& b) { a.Swap(&b); }
  inline void Swap(App* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(App* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  App* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<App>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const App& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const App& from) { App::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(App* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "tendermint.version.App"; }

 protected:
  explicit App(::google::protobuf::Arena* arena);
  App(::google::protobuf::Arena* arena, const App& from);
  App(::google::protobuf::Arena* arena, App&& from) noexcept
      : App(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSoftwareFieldNumber = 2,
    kProtocolFieldNumber = 1,
  };
  // string software = 2 [json_name = "software"];
  void clear_software() ;
  const std::string& software() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_software(Arg_&& arg, Args_... args);
  std::string* mutable_software();
  PROTOBUF_NODISCARD std::string* release_software();
  void set_allocated_software(std::string* value);

  private:
  const std::string& _internal_software() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_software(
      const std::string& value);
  std::string* _internal_mutable_software();

  public:
  // uint64 protocol = 1 [json_name = "protocol"];
  void clear_protocol() ;
  ::uint64_t protocol() const;
  void set_protocol(::uint64_t value);

  private:
  ::uint64_t _internal_protocol() const;
  void _internal_set_protocol(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:tendermint.version.App)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const App& from_msg);
    ::google::protobuf::internal::ArenaStringPtr software_;
    ::uint64_t protocol_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tendermint_2fversion_2ftypes_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// App

// uint64 protocol = 1 [json_name = "protocol"];
inline void App::clear_protocol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = ::uint64_t{0u};
}
inline ::uint64_t App::protocol() const {
  // @@protoc_insertion_point(field_get:tendermint.version.App.protocol)
  return _internal_protocol();
}
inline void App::set_protocol(::uint64_t value) {
  _internal_set_protocol(value);
  // @@protoc_insertion_point(field_set:tendermint.version.App.protocol)
}
inline ::uint64_t App::_internal_protocol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.protocol_;
}
inline void App::_internal_set_protocol(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.protocol_ = value;
}

// string software = 2 [json_name = "software"];
inline void App::clear_software() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.software_.ClearToEmpty();
}
inline const std::string& App::software() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:tendermint.version.App.software)
  return _internal_software();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void App::set_software(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.software_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:tendermint.version.App.software)
}
inline std::string* App::mutable_software() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_software();
  // @@protoc_insertion_point(field_mutable:tendermint.version.App.software)
  return _s;
}
inline const std::string& App::_internal_software() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.software_.Get();
}
inline void App::_internal_set_software(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.software_.Set(value, GetArena());
}
inline std::string* App::_internal_mutable_software() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.software_.Mutable( GetArena());
}
inline std::string* App::release_software() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:tendermint.version.App.software)
  return _impl_.software_.Release();
}
inline void App::set_allocated_software(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.software_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.software_.IsDefault()) {
    _impl_.software_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:tendermint.version.App.software)
}

// -------------------------------------------------------------------

// Consensus

// uint64 block = 1 [json_name = "block"];
inline void Consensus::clear_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_ = ::uint64_t{0u};
}
inline ::uint64_t Consensus::block() const {
  // @@protoc_insertion_point(field_get:tendermint.version.Consensus.block)
  return _internal_block();
}
inline void Consensus::set_block(::uint64_t value) {
  _internal_set_block(value);
  // @@protoc_insertion_point(field_set:tendermint.version.Consensus.block)
}
inline ::uint64_t Consensus::_internal_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_;
}
inline void Consensus::_internal_set_block(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_ = value;
}

// uint64 app = 2 [json_name = "app"];
inline void Consensus::clear_app() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_ = ::uint64_t{0u};
}
inline ::uint64_t Consensus::app() const {
  // @@protoc_insertion_point(field_get:tendermint.version.Consensus.app)
  return _internal_app();
}
inline void Consensus::set_app(::uint64_t value) {
  _internal_set_app(value);
  // @@protoc_insertion_point(field_set:tendermint.version.Consensus.app)
}
inline ::uint64_t Consensus::_internal_app() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.app_;
}
inline void Consensus::_internal_set_app(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace version
}  // namespace tendermint


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // tendermint_2fversion_2ftypes_2eproto_2epb_2eh
