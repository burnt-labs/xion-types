// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: packetforward/v1/genesis.proto
// Protobuf C++ Version: 5.29.4

#ifndef packetforward_2fv1_2fgenesis_2eproto_2epb_2eh
#define packetforward_2fv1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_packetforward_2fv1_2fgenesis_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_packetforward_2fv1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_packetforward_2fv1_2fgenesis_2eproto;
namespace packetforward {
namespace v1 {
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
class GenesisState_InFlightPacketsEntry_DoNotUse;
struct GenesisState_InFlightPacketsEntry_DoNotUseDefaultTypeInternal;
extern GenesisState_InFlightPacketsEntry_DoNotUseDefaultTypeInternal _GenesisState_InFlightPacketsEntry_DoNotUse_default_instance_;
class InFlightPacket;
struct InFlightPacketDefaultTypeInternal;
extern InFlightPacketDefaultTypeInternal _InFlightPacket_default_instance_;
}  // namespace v1
}  // namespace packetforward
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace packetforward {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class InFlightPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:packetforward.v1.InFlightPacket) */ {
 public:
  inline InFlightPacket() : InFlightPacket(nullptr) {}
  ~InFlightPacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InFlightPacket* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InFlightPacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InFlightPacket(
      ::google::protobuf::internal::ConstantInitialized);

  inline InFlightPacket(const InFlightPacket& from) : InFlightPacket(nullptr, from) {}
  inline InFlightPacket(InFlightPacket&& from) noexcept
      : InFlightPacket(nullptr, std::move(from)) {}
  inline InFlightPacket& operator=(const InFlightPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline InFlightPacket& operator=(InFlightPacket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InFlightPacket& default_instance() {
    return *internal_default_instance();
  }
  static inline const InFlightPacket* internal_default_instance() {
    return reinterpret_cast<const InFlightPacket*>(
        &_InFlightPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(InFlightPacket& a, InFlightPacket& b) { a.Swap(&b); }
  inline void Swap(InFlightPacket* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InFlightPacket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InFlightPacket* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InFlightPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InFlightPacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InFlightPacket& from) { InFlightPacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InFlightPacket* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "packetforward.v1.InFlightPacket"; }

 protected:
  explicit InFlightPacket(::google::protobuf::Arena* arena);
  InFlightPacket(::google::protobuf::Arena* arena, const InFlightPacket& from);
  InFlightPacket(::google::protobuf::Arena* arena, InFlightPacket&& from) noexcept
      : InFlightPacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOriginalSenderAddressFieldNumber = 1,
    kRefundChannelIdFieldNumber = 2,
    kRefundPortIdFieldNumber = 3,
    kPacketSrcChannelIdFieldNumber = 4,
    kPacketSrcPortIdFieldNumber = 5,
    kPacketTimeoutHeightFieldNumber = 7,
    kPacketDataFieldNumber = 8,
    kPacketTimeoutTimestampFieldNumber = 6,
    kRefundSequenceFieldNumber = 9,
    kTimeoutFieldNumber = 11,
    kRetriesRemainingFieldNumber = 10,
    kNonrefundableFieldNumber = 12,
  };
  // string original_sender_address = 1 [json_name = "originalSenderAddress"];
  void clear_original_sender_address() ;
  const std::string& original_sender_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_original_sender_address(Arg_&& arg, Args_... args);
  std::string* mutable_original_sender_address();
  PROTOBUF_NODISCARD std::string* release_original_sender_address();
  void set_allocated_original_sender_address(std::string* value);

  private:
  const std::string& _internal_original_sender_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_original_sender_address(
      const std::string& value);
  std::string* _internal_mutable_original_sender_address();

  public:
  // string refund_channel_id = 2 [json_name = "refundChannelId"];
  void clear_refund_channel_id() ;
  const std::string& refund_channel_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_refund_channel_id(Arg_&& arg, Args_... args);
  std::string* mutable_refund_channel_id();
  PROTOBUF_NODISCARD std::string* release_refund_channel_id();
  void set_allocated_refund_channel_id(std::string* value);

  private:
  const std::string& _internal_refund_channel_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_refund_channel_id(
      const std::string& value);
  std::string* _internal_mutable_refund_channel_id();

  public:
  // string refund_port_id = 3 [json_name = "refundPortId"];
  void clear_refund_port_id() ;
  const std::string& refund_port_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_refund_port_id(Arg_&& arg, Args_... args);
  std::string* mutable_refund_port_id();
  PROTOBUF_NODISCARD std::string* release_refund_port_id();
  void set_allocated_refund_port_id(std::string* value);

  private:
  const std::string& _internal_refund_port_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_refund_port_id(
      const std::string& value);
  std::string* _internal_mutable_refund_port_id();

  public:
  // string packet_src_channel_id = 4 [json_name = "packetSrcChannelId"];
  void clear_packet_src_channel_id() ;
  const std::string& packet_src_channel_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_packet_src_channel_id(Arg_&& arg, Args_... args);
  std::string* mutable_packet_src_channel_id();
  PROTOBUF_NODISCARD std::string* release_packet_src_channel_id();
  void set_allocated_packet_src_channel_id(std::string* value);

  private:
  const std::string& _internal_packet_src_channel_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_packet_src_channel_id(
      const std::string& value);
  std::string* _internal_mutable_packet_src_channel_id();

  public:
  // string packet_src_port_id = 5 [json_name = "packetSrcPortId"];
  void clear_packet_src_port_id() ;
  const std::string& packet_src_port_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_packet_src_port_id(Arg_&& arg, Args_... args);
  std::string* mutable_packet_src_port_id();
  PROTOBUF_NODISCARD std::string* release_packet_src_port_id();
  void set_allocated_packet_src_port_id(std::string* value);

  private:
  const std::string& _internal_packet_src_port_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_packet_src_port_id(
      const std::string& value);
  std::string* _internal_mutable_packet_src_port_id();

  public:
  // string packet_timeout_height = 7 [json_name = "packetTimeoutHeight"];
  void clear_packet_timeout_height() ;
  const std::string& packet_timeout_height() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_packet_timeout_height(Arg_&& arg, Args_... args);
  std::string* mutable_packet_timeout_height();
  PROTOBUF_NODISCARD std::string* release_packet_timeout_height();
  void set_allocated_packet_timeout_height(std::string* value);

  private:
  const std::string& _internal_packet_timeout_height() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_packet_timeout_height(
      const std::string& value);
  std::string* _internal_mutable_packet_timeout_height();

  public:
  // bytes packet_data = 8 [json_name = "packetData"];
  void clear_packet_data() ;
  const std::string& packet_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_packet_data(Arg_&& arg, Args_... args);
  std::string* mutable_packet_data();
  PROTOBUF_NODISCARD std::string* release_packet_data();
  void set_allocated_packet_data(std::string* value);

  private:
  const std::string& _internal_packet_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_packet_data(
      const std::string& value);
  std::string* _internal_mutable_packet_data();

  public:
  // uint64 packet_timeout_timestamp = 6 [json_name = "packetTimeoutTimestamp"];
  void clear_packet_timeout_timestamp() ;
  ::uint64_t packet_timeout_timestamp() const;
  void set_packet_timeout_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_packet_timeout_timestamp() const;
  void _internal_set_packet_timeout_timestamp(::uint64_t value);

  public:
  // uint64 refund_sequence = 9 [json_name = "refundSequence"];
  void clear_refund_sequence() ;
  ::uint64_t refund_sequence() const;
  void set_refund_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_refund_sequence() const;
  void _internal_set_refund_sequence(::uint64_t value);

  public:
  // uint64 timeout = 11 [json_name = "timeout"];
  void clear_timeout() ;
  ::uint64_t timeout() const;
  void set_timeout(::uint64_t value);

  private:
  ::uint64_t _internal_timeout() const;
  void _internal_set_timeout(::uint64_t value);

  public:
  // int32 retries_remaining = 10 [json_name = "retriesRemaining"];
  void clear_retries_remaining() ;
  ::int32_t retries_remaining() const;
  void set_retries_remaining(::int32_t value);

  private:
  ::int32_t _internal_retries_remaining() const;
  void _internal_set_retries_remaining(::int32_t value);

  public:
  // bool nonrefundable = 12 [json_name = "nonrefundable"];
  void clear_nonrefundable() ;
  bool nonrefundable() const;
  void set_nonrefundable(bool value);

  private:
  bool _internal_nonrefundable() const;
  void _internal_set_nonrefundable(bool value);

  public:
  // @@protoc_insertion_point(class_scope:packetforward.v1.InFlightPacket)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      162, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InFlightPacket& from_msg);
    ::google::protobuf::internal::ArenaStringPtr original_sender_address_;
    ::google::protobuf::internal::ArenaStringPtr refund_channel_id_;
    ::google::protobuf::internal::ArenaStringPtr refund_port_id_;
    ::google::protobuf::internal::ArenaStringPtr packet_src_channel_id_;
    ::google::protobuf::internal::ArenaStringPtr packet_src_port_id_;
    ::google::protobuf::internal::ArenaStringPtr packet_timeout_height_;
    ::google::protobuf::internal::ArenaStringPtr packet_data_;
    ::uint64_t packet_timeout_timestamp_;
    ::uint64_t refund_sequence_;
    ::uint64_t timeout_;
    ::int32_t retries_remaining_;
    bool nonrefundable_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_packetforward_2fv1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class GenesisState_InFlightPacketsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GenesisState_InFlightPacketsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState_InFlightPacketsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GenesisState_InFlightPacketsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GenesisState_InFlightPacketsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GenesisState_InFlightPacketsEntry_DoNotUse*>(
        &_GenesisState_InFlightPacketsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_packetforward_2fv1_2fgenesis_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      62, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class GenesisState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:packetforward.v1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenesisState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenesisState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenesisState(const GenesisState& from) : GenesisState(nullptr, from) {}
  inline GenesisState(GenesisState&& from) noexcept
      : GenesisState(nullptr, std::move(from)) {}
  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
        &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GenesisState& a, GenesisState& b) { a.Swap(&b); }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenesisState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenesisState& from) { GenesisState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenesisState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "packetforward.v1.GenesisState"; }

 protected:
  explicit GenesisState(::google::protobuf::Arena* arena);
  GenesisState(::google::protobuf::Arena* arena, const GenesisState& from);
  GenesisState(::google::protobuf::Arena* arena, GenesisState&& from) noexcept
      : GenesisState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInFlightPacketsFieldNumber = 2,
  };
  // map<string, .packetforward.v1.InFlightPacket> in_flight_packets = 2 [json_name = "inFlightPackets", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"in_flight_packets\""];
  int in_flight_packets_size() const;
  private:
  int _internal_in_flight_packets_size() const;

  public:
  void clear_in_flight_packets() ;
  const ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>& in_flight_packets() const;
  ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>* mutable_in_flight_packets();

  private:
  const ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>& _internal_in_flight_packets() const;
  ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>* _internal_mutable_in_flight_packets();

  public:
  // @@protoc_insertion_point(class_scope:packetforward.v1.GenesisState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenesisState& from_msg);
    ::google::protobuf::internal::MapField<GenesisState_InFlightPacketsEntry_DoNotUse, std::string, ::packetforward::v1::InFlightPacket,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        in_flight_packets_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_packetforward_2fv1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GenesisState

// map<string, .packetforward.v1.InFlightPacket> in_flight_packets = 2 [json_name = "inFlightPackets", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"in_flight_packets\""];
inline int GenesisState::_internal_in_flight_packets_size() const {
  return _internal_in_flight_packets().size();
}
inline int GenesisState::in_flight_packets_size() const {
  return _internal_in_flight_packets_size();
}
inline void GenesisState::clear_in_flight_packets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_flight_packets_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>& GenesisState::_internal_in_flight_packets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.in_flight_packets_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>& GenesisState::in_flight_packets() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:packetforward.v1.GenesisState.in_flight_packets)
  return _internal_in_flight_packets();
}
inline ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>* GenesisState::_internal_mutable_in_flight_packets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.in_flight_packets_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::packetforward::v1::InFlightPacket>* GenesisState::mutable_in_flight_packets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:packetforward.v1.GenesisState.in_flight_packets)
  return _internal_mutable_in_flight_packets();
}

// -------------------------------------------------------------------

// InFlightPacket

// string original_sender_address = 1 [json_name = "originalSenderAddress"];
inline void InFlightPacket::clear_original_sender_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_sender_address_.ClearToEmpty();
}
inline const std::string& InFlightPacket::original_sender_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.original_sender_address)
  return _internal_original_sender_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InFlightPacket::set_original_sender_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_sender_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.original_sender_address)
}
inline std::string* InFlightPacket::mutable_original_sender_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_original_sender_address();
  // @@protoc_insertion_point(field_mutable:packetforward.v1.InFlightPacket.original_sender_address)
  return _s;
}
inline const std::string& InFlightPacket::_internal_original_sender_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.original_sender_address_.Get();
}
inline void InFlightPacket::_internal_set_original_sender_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_sender_address_.Set(value, GetArena());
}
inline std::string* InFlightPacket::_internal_mutable_original_sender_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.original_sender_address_.Mutable( GetArena());
}
inline std::string* InFlightPacket::release_original_sender_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:packetforward.v1.InFlightPacket.original_sender_address)
  return _impl_.original_sender_address_.Release();
}
inline void InFlightPacket::set_allocated_original_sender_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.original_sender_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.original_sender_address_.IsDefault()) {
    _impl_.original_sender_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:packetforward.v1.InFlightPacket.original_sender_address)
}

// string refund_channel_id = 2 [json_name = "refundChannelId"];
inline void InFlightPacket::clear_refund_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_channel_id_.ClearToEmpty();
}
inline const std::string& InFlightPacket::refund_channel_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.refund_channel_id)
  return _internal_refund_channel_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InFlightPacket::set_refund_channel_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.refund_channel_id)
}
inline std::string* InFlightPacket::mutable_refund_channel_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_refund_channel_id();
  // @@protoc_insertion_point(field_mutable:packetforward.v1.InFlightPacket.refund_channel_id)
  return _s;
}
inline const std::string& InFlightPacket::_internal_refund_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refund_channel_id_.Get();
}
inline void InFlightPacket::_internal_set_refund_channel_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_channel_id_.Set(value, GetArena());
}
inline std::string* InFlightPacket::_internal_mutable_refund_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.refund_channel_id_.Mutable( GetArena());
}
inline std::string* InFlightPacket::release_refund_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:packetforward.v1.InFlightPacket.refund_channel_id)
  return _impl_.refund_channel_id_.Release();
}
inline void InFlightPacket::set_allocated_refund_channel_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_channel_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.refund_channel_id_.IsDefault()) {
    _impl_.refund_channel_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:packetforward.v1.InFlightPacket.refund_channel_id)
}

// string refund_port_id = 3 [json_name = "refundPortId"];
inline void InFlightPacket::clear_refund_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_port_id_.ClearToEmpty();
}
inline const std::string& InFlightPacket::refund_port_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.refund_port_id)
  return _internal_refund_port_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InFlightPacket::set_refund_port_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_port_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.refund_port_id)
}
inline std::string* InFlightPacket::mutable_refund_port_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_refund_port_id();
  // @@protoc_insertion_point(field_mutable:packetforward.v1.InFlightPacket.refund_port_id)
  return _s;
}
inline const std::string& InFlightPacket::_internal_refund_port_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refund_port_id_.Get();
}
inline void InFlightPacket::_internal_set_refund_port_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_port_id_.Set(value, GetArena());
}
inline std::string* InFlightPacket::_internal_mutable_refund_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.refund_port_id_.Mutable( GetArena());
}
inline std::string* InFlightPacket::release_refund_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:packetforward.v1.InFlightPacket.refund_port_id)
  return _impl_.refund_port_id_.Release();
}
inline void InFlightPacket::set_allocated_refund_port_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_port_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.refund_port_id_.IsDefault()) {
    _impl_.refund_port_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:packetforward.v1.InFlightPacket.refund_port_id)
}

// string packet_src_channel_id = 4 [json_name = "packetSrcChannelId"];
inline void InFlightPacket::clear_packet_src_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_channel_id_.ClearToEmpty();
}
inline const std::string& InFlightPacket::packet_src_channel_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.packet_src_channel_id)
  return _internal_packet_src_channel_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InFlightPacket::set_packet_src_channel_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_channel_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.packet_src_channel_id)
}
inline std::string* InFlightPacket::mutable_packet_src_channel_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_packet_src_channel_id();
  // @@protoc_insertion_point(field_mutable:packetforward.v1.InFlightPacket.packet_src_channel_id)
  return _s;
}
inline const std::string& InFlightPacket::_internal_packet_src_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_src_channel_id_.Get();
}
inline void InFlightPacket::_internal_set_packet_src_channel_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_channel_id_.Set(value, GetArena());
}
inline std::string* InFlightPacket::_internal_mutable_packet_src_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.packet_src_channel_id_.Mutable( GetArena());
}
inline std::string* InFlightPacket::release_packet_src_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:packetforward.v1.InFlightPacket.packet_src_channel_id)
  return _impl_.packet_src_channel_id_.Release();
}
inline void InFlightPacket::set_allocated_packet_src_channel_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_channel_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.packet_src_channel_id_.IsDefault()) {
    _impl_.packet_src_channel_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:packetforward.v1.InFlightPacket.packet_src_channel_id)
}

// string packet_src_port_id = 5 [json_name = "packetSrcPortId"];
inline void InFlightPacket::clear_packet_src_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_port_id_.ClearToEmpty();
}
inline const std::string& InFlightPacket::packet_src_port_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.packet_src_port_id)
  return _internal_packet_src_port_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InFlightPacket::set_packet_src_port_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_port_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.packet_src_port_id)
}
inline std::string* InFlightPacket::mutable_packet_src_port_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_packet_src_port_id();
  // @@protoc_insertion_point(field_mutable:packetforward.v1.InFlightPacket.packet_src_port_id)
  return _s;
}
inline const std::string& InFlightPacket::_internal_packet_src_port_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_src_port_id_.Get();
}
inline void InFlightPacket::_internal_set_packet_src_port_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_port_id_.Set(value, GetArena());
}
inline std::string* InFlightPacket::_internal_mutable_packet_src_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.packet_src_port_id_.Mutable( GetArena());
}
inline std::string* InFlightPacket::release_packet_src_port_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:packetforward.v1.InFlightPacket.packet_src_port_id)
  return _impl_.packet_src_port_id_.Release();
}
inline void InFlightPacket::set_allocated_packet_src_port_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_src_port_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.packet_src_port_id_.IsDefault()) {
    _impl_.packet_src_port_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:packetforward.v1.InFlightPacket.packet_src_port_id)
}

// uint64 packet_timeout_timestamp = 6 [json_name = "packetTimeoutTimestamp"];
inline void InFlightPacket::clear_packet_timeout_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_timeout_timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t InFlightPacket::packet_timeout_timestamp() const {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.packet_timeout_timestamp)
  return _internal_packet_timeout_timestamp();
}
inline void InFlightPacket::set_packet_timeout_timestamp(::uint64_t value) {
  _internal_set_packet_timeout_timestamp(value);
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.packet_timeout_timestamp)
}
inline ::uint64_t InFlightPacket::_internal_packet_timeout_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_timeout_timestamp_;
}
inline void InFlightPacket::_internal_set_packet_timeout_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_timeout_timestamp_ = value;
}

// string packet_timeout_height = 7 [json_name = "packetTimeoutHeight"];
inline void InFlightPacket::clear_packet_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_timeout_height_.ClearToEmpty();
}
inline const std::string& InFlightPacket::packet_timeout_height() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.packet_timeout_height)
  return _internal_packet_timeout_height();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InFlightPacket::set_packet_timeout_height(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_timeout_height_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.packet_timeout_height)
}
inline std::string* InFlightPacket::mutable_packet_timeout_height() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_packet_timeout_height();
  // @@protoc_insertion_point(field_mutable:packetforward.v1.InFlightPacket.packet_timeout_height)
  return _s;
}
inline const std::string& InFlightPacket::_internal_packet_timeout_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_timeout_height_.Get();
}
inline void InFlightPacket::_internal_set_packet_timeout_height(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_timeout_height_.Set(value, GetArena());
}
inline std::string* InFlightPacket::_internal_mutable_packet_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.packet_timeout_height_.Mutable( GetArena());
}
inline std::string* InFlightPacket::release_packet_timeout_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:packetforward.v1.InFlightPacket.packet_timeout_height)
  return _impl_.packet_timeout_height_.Release();
}
inline void InFlightPacket::set_allocated_packet_timeout_height(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_timeout_height_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.packet_timeout_height_.IsDefault()) {
    _impl_.packet_timeout_height_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:packetforward.v1.InFlightPacket.packet_timeout_height)
}

// bytes packet_data = 8 [json_name = "packetData"];
inline void InFlightPacket::clear_packet_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_data_.ClearToEmpty();
}
inline const std::string& InFlightPacket::packet_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.packet_data)
  return _internal_packet_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InFlightPacket::set_packet_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.packet_data)
}
inline std::string* InFlightPacket::mutable_packet_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_packet_data();
  // @@protoc_insertion_point(field_mutable:packetforward.v1.InFlightPacket.packet_data)
  return _s;
}
inline const std::string& InFlightPacket::_internal_packet_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.packet_data_.Get();
}
inline void InFlightPacket::_internal_set_packet_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_data_.Set(value, GetArena());
}
inline std::string* InFlightPacket::_internal_mutable_packet_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.packet_data_.Mutable( GetArena());
}
inline std::string* InFlightPacket::release_packet_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:packetforward.v1.InFlightPacket.packet_data)
  return _impl_.packet_data_.Release();
}
inline void InFlightPacket::set_allocated_packet_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.packet_data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.packet_data_.IsDefault()) {
    _impl_.packet_data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:packetforward.v1.InFlightPacket.packet_data)
}

// uint64 refund_sequence = 9 [json_name = "refundSequence"];
inline void InFlightPacket::clear_refund_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_sequence_ = ::uint64_t{0u};
}
inline ::uint64_t InFlightPacket::refund_sequence() const {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.refund_sequence)
  return _internal_refund_sequence();
}
inline void InFlightPacket::set_refund_sequence(::uint64_t value) {
  _internal_set_refund_sequence(value);
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.refund_sequence)
}
inline ::uint64_t InFlightPacket::_internal_refund_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refund_sequence_;
}
inline void InFlightPacket::_internal_set_refund_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refund_sequence_ = value;
}

// int32 retries_remaining = 10 [json_name = "retriesRemaining"];
inline void InFlightPacket::clear_retries_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retries_remaining_ = 0;
}
inline ::int32_t InFlightPacket::retries_remaining() const {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.retries_remaining)
  return _internal_retries_remaining();
}
inline void InFlightPacket::set_retries_remaining(::int32_t value) {
  _internal_set_retries_remaining(value);
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.retries_remaining)
}
inline ::int32_t InFlightPacket::_internal_retries_remaining() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.retries_remaining_;
}
inline void InFlightPacket::_internal_set_retries_remaining(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.retries_remaining_ = value;
}

// uint64 timeout = 11 [json_name = "timeout"];
inline void InFlightPacket::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = ::uint64_t{0u};
}
inline ::uint64_t InFlightPacket::timeout() const {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.timeout)
  return _internal_timeout();
}
inline void InFlightPacket::set_timeout(::uint64_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.timeout)
}
inline ::uint64_t InFlightPacket::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void InFlightPacket::_internal_set_timeout(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// bool nonrefundable = 12 [json_name = "nonrefundable"];
inline void InFlightPacket::clear_nonrefundable() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nonrefundable_ = false;
}
inline bool InFlightPacket::nonrefundable() const {
  // @@protoc_insertion_point(field_get:packetforward.v1.InFlightPacket.nonrefundable)
  return _internal_nonrefundable();
}
inline void InFlightPacket::set_nonrefundable(bool value) {
  _internal_set_nonrefundable(value);
  // @@protoc_insertion_point(field_set:packetforward.v1.InFlightPacket.nonrefundable)
}
inline bool InFlightPacket::_internal_nonrefundable() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nonrefundable_;
}
inline void InFlightPacket::_internal_set_nonrefundable(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nonrefundable_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace packetforward


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // packetforward_2fv1_2fgenesis_2eproto_2epb_2eh
