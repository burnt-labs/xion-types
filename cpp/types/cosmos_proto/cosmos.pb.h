// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos_proto/cosmos.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_5fproto_2fcosmos_2eproto_2epb_2eh
#define cosmos_5fproto_2fcosmos_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_5fproto_2fcosmos_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_5fproto_2fcosmos_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_5fproto_2fcosmos_2eproto;
namespace cosmos_proto {
class InterfaceDescriptor;
struct InterfaceDescriptorDefaultTypeInternal;
extern InterfaceDescriptorDefaultTypeInternal _InterfaceDescriptor_default_instance_;
class ScalarDescriptor;
struct ScalarDescriptorDefaultTypeInternal;
extern ScalarDescriptorDefaultTypeInternal _ScalarDescriptor_default_instance_;
}  // namespace cosmos_proto
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos_proto {
enum ScalarType : int {
  SCALAR_TYPE_UNSPECIFIED = 0,
  SCALAR_TYPE_STRING = 1,
  SCALAR_TYPE_BYTES = 2,
  ScalarType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ScalarType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ScalarType_IsValid(int value);
extern const uint32_t ScalarType_internal_data_[];
constexpr ScalarType ScalarType_MIN = static_cast<ScalarType>(0);
constexpr ScalarType ScalarType_MAX = static_cast<ScalarType>(2);
constexpr int ScalarType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
ScalarType_descriptor();
template <typename T>
const std::string& ScalarType_Name(T value) {
  static_assert(std::is_same<T, ScalarType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ScalarType_Name().");
  return ScalarType_Name(static_cast<ScalarType>(value));
}
template <>
inline const std::string& ScalarType_Name(ScalarType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ScalarType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool ScalarType_Parse(absl::string_view name, ScalarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScalarType>(
      ScalarType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class ScalarDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos_proto.ScalarDescriptor) */ {
 public:
  inline ScalarDescriptor() : ScalarDescriptor(nullptr) {}
  ~ScalarDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ScalarDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ScalarDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScalarDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScalarDescriptor(const ScalarDescriptor& from) : ScalarDescriptor(nullptr, from) {}
  inline ScalarDescriptor(ScalarDescriptor&& from) noexcept
      : ScalarDescriptor(nullptr, std::move(from)) {}
  inline ScalarDescriptor& operator=(const ScalarDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScalarDescriptor& operator=(ScalarDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScalarDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScalarDescriptor* internal_default_instance() {
    return reinterpret_cast<const ScalarDescriptor*>(
        &_ScalarDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ScalarDescriptor& a, ScalarDescriptor& b) { a.Swap(&b); }
  inline void Swap(ScalarDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScalarDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScalarDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ScalarDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScalarDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScalarDescriptor& from) { ScalarDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ScalarDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos_proto.ScalarDescriptor"; }

 protected:
  explicit ScalarDescriptor(::google::protobuf::Arena* arena);
  ScalarDescriptor(::google::protobuf::Arena* arena, const ScalarDescriptor& from);
  ScalarDescriptor(::google::protobuf::Arena* arena, ScalarDescriptor&& from) noexcept
      : ScalarDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldTypeFieldNumber = 3,
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // repeated .cosmos_proto.ScalarType field_type = 3 [json_name = "fieldType"];
  int field_type_size() const;
  private:
  int _internal_field_type_size() const;

  public:
  void clear_field_type() ;
  public:
  ::cosmos_proto::ScalarType field_type(int index) const;
  void set_field_type(int index, ::cosmos_proto::ScalarType value);
  void add_field_type(::cosmos_proto::ScalarType value);
  const ::google::protobuf::RepeatedField<int>& field_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_field_type();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_field_type() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_field_type();

  public:
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 2 [json_name = "description"];
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:cosmos_proto.ScalarDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScalarDescriptor& from_msg);
    ::google::protobuf::RepeatedField<int> field_type_;
    ::google::protobuf::internal::CachedSize _field_type_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_5fproto_2fcosmos_2eproto;
};
// -------------------------------------------------------------------

class InterfaceDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos_proto.InterfaceDescriptor) */ {
 public:
  inline InterfaceDescriptor() : InterfaceDescriptor(nullptr) {}
  ~InterfaceDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceDescriptor(const InterfaceDescriptor& from) : InterfaceDescriptor(nullptr, from) {}
  inline InterfaceDescriptor(InterfaceDescriptor&& from) noexcept
      : InterfaceDescriptor(nullptr, std::move(from)) {}
  inline InterfaceDescriptor& operator=(const InterfaceDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceDescriptor& operator=(InterfaceDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceDescriptor* internal_default_instance() {
    return reinterpret_cast<const InterfaceDescriptor*>(
        &_InterfaceDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(InterfaceDescriptor& a, InterfaceDescriptor& b) { a.Swap(&b); }
  inline void Swap(InterfaceDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceDescriptor& from) { InterfaceDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos_proto.InterfaceDescriptor"; }

 protected:
  explicit InterfaceDescriptor(::google::protobuf::Arena* arena);
  InterfaceDescriptor(::google::protobuf::Arena* arena, const InterfaceDescriptor& from);
  InterfaceDescriptor(::google::protobuf::Arena* arena, InterfaceDescriptor&& from) noexcept
      : InterfaceDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string description = 2 [json_name = "description"];
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:cosmos_proto.InterfaceDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceDescriptor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_5fproto_2fcosmos_2eproto;
};

// ===================================================================



static const int kMethodAddedInFieldNumber = 93001;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MethodOptions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    method_added_in;
static const int kImplementsInterfaceFieldNumber = 93001;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::RepeatedStringTypeTraits, 9,
    false>
    implements_interface;
static const int kMessageAddedInFieldNumber = 93002;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    message_added_in;
static const int kAcceptsInterfaceFieldNumber = 93001;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    accepts_interface;
static const int kScalarFieldNumber = 93002;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    scalar;
static const int kFieldAddedInFieldNumber = 93003;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FieldOptions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    field_added_in;
static const int kDeclareInterfaceFieldNumber = 793021;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FileOptions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::cosmos_proto::InterfaceDescriptor >, 11,
    false>
    declare_interface;
static const int kDeclareScalarFieldNumber = 793022;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FileOptions, ::google::protobuf::internal::RepeatedMessageTypeTraits< ::cosmos_proto::ScalarDescriptor >, 11,
    false>
    declare_scalar;
static const int kFileAddedInFieldNumber = 793023;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::FileOptions, ::google::protobuf::internal::StringTypeTraits, 9,
    false>
    file_added_in;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// InterfaceDescriptor

// string name = 1 [json_name = "name"];
inline void InterfaceDescriptor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& InterfaceDescriptor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos_proto.InterfaceDescriptor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceDescriptor::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos_proto.InterfaceDescriptor.name)
}
inline std::string* InterfaceDescriptor::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos_proto.InterfaceDescriptor.name)
  return _s;
}
inline const std::string& InterfaceDescriptor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void InterfaceDescriptor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* InterfaceDescriptor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* InterfaceDescriptor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos_proto.InterfaceDescriptor.name)
  return _impl_.name_.Release();
}
inline void InterfaceDescriptor::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos_proto.InterfaceDescriptor.name)
}

// string description = 2 [json_name = "description"];
inline void InterfaceDescriptor::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& InterfaceDescriptor::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos_proto.InterfaceDescriptor.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceDescriptor::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos_proto.InterfaceDescriptor.description)
}
inline std::string* InterfaceDescriptor::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:cosmos_proto.InterfaceDescriptor.description)
  return _s;
}
inline const std::string& InterfaceDescriptor::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void InterfaceDescriptor::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* InterfaceDescriptor::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* InterfaceDescriptor::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos_proto.InterfaceDescriptor.description)
  return _impl_.description_.Release();
}
inline void InterfaceDescriptor::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos_proto.InterfaceDescriptor.description)
}

// -------------------------------------------------------------------

// ScalarDescriptor

// string name = 1 [json_name = "name"];
inline void ScalarDescriptor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ScalarDescriptor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos_proto.ScalarDescriptor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScalarDescriptor::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos_proto.ScalarDescriptor.name)
}
inline std::string* ScalarDescriptor::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos_proto.ScalarDescriptor.name)
  return _s;
}
inline const std::string& ScalarDescriptor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ScalarDescriptor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ScalarDescriptor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ScalarDescriptor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos_proto.ScalarDescriptor.name)
  return _impl_.name_.Release();
}
inline void ScalarDescriptor::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos_proto.ScalarDescriptor.name)
}

// string description = 2 [json_name = "description"];
inline void ScalarDescriptor::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& ScalarDescriptor::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos_proto.ScalarDescriptor.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScalarDescriptor::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos_proto.ScalarDescriptor.description)
}
inline std::string* ScalarDescriptor::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:cosmos_proto.ScalarDescriptor.description)
  return _s;
}
inline const std::string& ScalarDescriptor::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ScalarDescriptor::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* ScalarDescriptor::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* ScalarDescriptor::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos_proto.ScalarDescriptor.description)
  return _impl_.description_.Release();
}
inline void ScalarDescriptor::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos_proto.ScalarDescriptor.description)
}

// repeated .cosmos_proto.ScalarType field_type = 3 [json_name = "fieldType"];
inline int ScalarDescriptor::_internal_field_type_size() const {
  return _internal_field_type().size();
}
inline int ScalarDescriptor::field_type_size() const {
  return _internal_field_type_size();
}
inline void ScalarDescriptor::clear_field_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_type_.Clear();
}
inline ::cosmos_proto::ScalarType ScalarDescriptor::field_type(int index) const {
  // @@protoc_insertion_point(field_get:cosmos_proto.ScalarDescriptor.field_type)
  return static_cast<::cosmos_proto::ScalarType>(_internal_field_type().Get(index));
}
inline void ScalarDescriptor::set_field_type(int index, ::cosmos_proto::ScalarType value) {
  _internal_mutable_field_type()->Set(index, value);
  // @@protoc_insertion_point(field_set:cosmos_proto.ScalarDescriptor.field_type)
}
inline void ScalarDescriptor::add_field_type(::cosmos_proto::ScalarType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_field_type()->Add(value);
  // @@protoc_insertion_point(field_add:cosmos_proto.ScalarDescriptor.field_type)
}
inline const ::google::protobuf::RepeatedField<int>& ScalarDescriptor::field_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos_proto.ScalarDescriptor.field_type)
  return _internal_field_type();
}
inline ::google::protobuf::RepeatedField<int>* ScalarDescriptor::mutable_field_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos_proto.ScalarDescriptor.field_type)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_field_type();
}
inline const ::google::protobuf::RepeatedField<int>& ScalarDescriptor::_internal_field_type()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_type_;
}
inline ::google::protobuf::RepeatedField<int>* ScalarDescriptor::_internal_mutable_field_type() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.field_type_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace cosmos_proto


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::cosmos_proto::ScalarType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::cosmos_proto::ScalarType>() {
  return ::cosmos_proto::ScalarType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_5fproto_2fcosmos_2eproto_2epb_2eh
