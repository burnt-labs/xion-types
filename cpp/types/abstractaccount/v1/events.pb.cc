// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: abstractaccount/v1/events.proto
// Protobuf C++ Version: 5.29.4

#include "abstractaccount/v1/events.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace abstractaccount {
namespace v1 {

inline constexpr EventAccountRegistered::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : creator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        contract_addr_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_id_{::uint64_t{0u}},
        account_number_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventAccountRegistered::EventAccountRegistered(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventAccountRegisteredDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventAccountRegisteredDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventAccountRegisteredDefaultTypeInternal() {}
  union {
    EventAccountRegistered _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventAccountRegisteredDefaultTypeInternal _EventAccountRegistered_default_instance_;
}  // namespace v1
}  // namespace abstractaccount
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_abstractaccount_2fv1_2fevents_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_abstractaccount_2fv1_2fevents_2eproto = nullptr;
const ::uint32_t
    TableStruct_abstractaccount_2fv1_2fevents_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::abstractaccount::v1::EventAccountRegistered, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::abstractaccount::v1::EventAccountRegistered, _impl_.creator_),
        PROTOBUF_FIELD_OFFSET(::abstractaccount::v1::EventAccountRegistered, _impl_.code_id_),
        PROTOBUF_FIELD_OFFSET(::abstractaccount::v1::EventAccountRegistered, _impl_.contract_addr_),
        PROTOBUF_FIELD_OFFSET(::abstractaccount::v1::EventAccountRegistered, _impl_.account_number_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::abstractaccount::v1::EventAccountRegistered)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::abstractaccount::v1::_EventAccountRegistered_default_instance_._instance,
};
const char descriptor_table_protodef_abstractaccount_2fv1_2fevents_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037abstractaccount/v1/events.proto\022\022abstr"
    "actaccount.v1\032\024gogoproto/gogo.proto\"\243\001\n\026"
    "EventAccountRegistered\022\030\n\007creator\030\001 \001(\tR"
    "\007creator\022#\n\007code_id\030\002 \001(\004B\n\342\336\037\006CodeIDR\006c"
    "odeId\022#\n\rcontract_addr\030\003 \001(\tR\014contractAd"
    "dr\022%\n\016account_number\030\004 \001(\004R\raccountNumbe"
    "rB@Z>github.com/burnt-labs/abstract-acco"
    "unt/x/abstractaccount/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_abstractaccount_2fv1_2fevents_2eproto_deps[1] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_abstractaccount_2fv1_2fevents_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_abstractaccount_2fv1_2fevents_2eproto = {
    false,
    false,
    315,
    descriptor_table_protodef_abstractaccount_2fv1_2fevents_2eproto,
    "abstractaccount/v1/events.proto",
    &descriptor_table_abstractaccount_2fv1_2fevents_2eproto_once,
    descriptor_table_abstractaccount_2fv1_2fevents_2eproto_deps,
    1,
    1,
    schemas,
    file_default_instances,
    TableStruct_abstractaccount_2fv1_2fevents_2eproto::offsets,
    file_level_enum_descriptors_abstractaccount_2fv1_2fevents_2eproto,
    file_level_service_descriptors_abstractaccount_2fv1_2fevents_2eproto,
};
namespace abstractaccount {
namespace v1 {
// ===================================================================

class EventAccountRegistered::_Internal {
 public:
};

EventAccountRegistered::EventAccountRegistered(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:abstractaccount.v1.EventAccountRegistered)
}
inline PROTOBUF_NDEBUG_INLINE EventAccountRegistered::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::abstractaccount::v1::EventAccountRegistered& from_msg)
      : creator_(arena, from.creator_),
        contract_addr_(arena, from.contract_addr_),
        _cached_size_{0} {}

EventAccountRegistered::EventAccountRegistered(
    ::google::protobuf::Arena* arena,
    const EventAccountRegistered& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventAccountRegistered* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, code_id_),
           offsetof(Impl_, account_number_) -
               offsetof(Impl_, code_id_) +
               sizeof(Impl_::account_number_));

  // @@protoc_insertion_point(copy_constructor:abstractaccount.v1.EventAccountRegistered)
}
inline PROTOBUF_NDEBUG_INLINE EventAccountRegistered::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : creator_(arena),
        contract_addr_(arena),
        _cached_size_{0} {}

inline void EventAccountRegistered::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_id_),
           0,
           offsetof(Impl_, account_number_) -
               offsetof(Impl_, code_id_) +
               sizeof(Impl_::account_number_));
}
EventAccountRegistered::~EventAccountRegistered() {
  // @@protoc_insertion_point(destructor:abstractaccount.v1.EventAccountRegistered)
  SharedDtor(*this);
}
inline void EventAccountRegistered::SharedDtor(MessageLite& self) {
  EventAccountRegistered& this_ = static_cast<EventAccountRegistered&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.creator_.Destroy();
  this_._impl_.contract_addr_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventAccountRegistered::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventAccountRegistered(arena);
}
constexpr auto EventAccountRegistered::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventAccountRegistered),
                                            alignof(EventAccountRegistered));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventAccountRegistered::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventAccountRegistered_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventAccountRegistered::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventAccountRegistered>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventAccountRegistered::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventAccountRegistered>(), &EventAccountRegistered::ByteSizeLong,
            &EventAccountRegistered::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_._cached_size_),
        false,
    },
    &EventAccountRegistered::kDescriptorMethods,
    &descriptor_table_abstractaccount_2fv1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventAccountRegistered::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 70, 2> EventAccountRegistered::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::abstractaccount::v1::EventAccountRegistered>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 account_number = 4 [json_name = "accountNumber"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventAccountRegistered, _impl_.account_number_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.account_number_)}},
    // string creator = 1 [json_name = "creator"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.creator_)}},
    // uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventAccountRegistered, _impl_.code_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.code_id_)}},
    // string contract_addr = 3 [json_name = "contractAddr"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.contract_addr_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string creator = 1 [json_name = "creator"];
    {PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.creator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
    {PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.code_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string contract_addr = 3 [json_name = "contractAddr"];
    {PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.contract_addr_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 account_number = 4 [json_name = "accountNumber"];
    {PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.account_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\51\7\0\15\0\0\0\0"
    "abstractaccount.v1.EventAccountRegistered"
    "creator"
    "contract_addr"
  }},
};

PROTOBUF_NOINLINE void EventAccountRegistered::Clear() {
// @@protoc_insertion_point(message_clear_start:abstractaccount.v1.EventAccountRegistered)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.creator_.ClearToEmpty();
  _impl_.contract_addr_.ClearToEmpty();
  ::memset(&_impl_.code_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.account_number_) -
      reinterpret_cast<char*>(&_impl_.code_id_)) + sizeof(_impl_.account_number_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventAccountRegistered::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventAccountRegistered& this_ = static_cast<const EventAccountRegistered&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventAccountRegistered::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventAccountRegistered& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:abstractaccount.v1.EventAccountRegistered)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string creator = 1 [json_name = "creator"];
          if (!this_._internal_creator().empty()) {
            const std::string& _s = this_._internal_creator();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abstractaccount.v1.EventAccountRegistered.creator");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
          if (this_._internal_code_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_code_id(), target);
          }

          // string contract_addr = 3 [json_name = "contractAddr"];
          if (!this_._internal_contract_addr().empty()) {
            const std::string& _s = this_._internal_contract_addr();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "abstractaccount.v1.EventAccountRegistered.contract_addr");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint64 account_number = 4 [json_name = "accountNumber"];
          if (this_._internal_account_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_account_number(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:abstractaccount.v1.EventAccountRegistered)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventAccountRegistered::ByteSizeLong(const MessageLite& base) {
          const EventAccountRegistered& this_ = static_cast<const EventAccountRegistered&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventAccountRegistered::ByteSizeLong() const {
          const EventAccountRegistered& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:abstractaccount.v1.EventAccountRegistered)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string creator = 1 [json_name = "creator"];
            if (!this_._internal_creator().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_creator());
            }
            // string contract_addr = 3 [json_name = "contractAddr"];
            if (!this_._internal_contract_addr().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_contract_addr());
            }
            // uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];
            if (this_._internal_code_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_code_id());
            }
            // uint64 account_number = 4 [json_name = "accountNumber"];
            if (this_._internal_account_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_account_number());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventAccountRegistered::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventAccountRegistered*>(&to_msg);
  auto& from = static_cast<const EventAccountRegistered&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:abstractaccount.v1.EventAccountRegistered)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (!from._internal_contract_addr().empty()) {
    _this->_internal_set_contract_addr(from._internal_contract_addr());
  }
  if (from._internal_code_id() != 0) {
    _this->_impl_.code_id_ = from._impl_.code_id_;
  }
  if (from._internal_account_number() != 0) {
    _this->_impl_.account_number_ = from._impl_.account_number_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventAccountRegistered::CopyFrom(const EventAccountRegistered& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:abstractaccount.v1.EventAccountRegistered)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventAccountRegistered::InternalSwap(EventAccountRegistered* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creator_, &other->_impl_.creator_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.contract_addr_, &other->_impl_.contract_addr_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.account_number_)
      + sizeof(EventAccountRegistered::_impl_.account_number_)
      - PROTOBUF_FIELD_OFFSET(EventAccountRegistered, _impl_.code_id_)>(
          reinterpret_cast<char*>(&_impl_.code_id_),
          reinterpret_cast<char*>(&other->_impl_.code_id_));
}

::google::protobuf::Metadata EventAccountRegistered::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace abstractaccount
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_abstractaccount_2fv1_2fevents_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
