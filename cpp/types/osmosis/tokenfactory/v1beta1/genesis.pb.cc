// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "osmosis/tokenfactory/v1beta1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {

inline constexpr GenesisDenom::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        denom_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        authority_metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisDenom::GenesisDenom(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisDenomDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisDenomDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisDenomDefaultTypeInternal() {}
  union {
    GenesisDenom _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisDenomDefaultTypeInternal _GenesisDenom_default_instance_;

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        factory_denoms_{},
        params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisState, _impl_.params_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisState, _impl_.factory_denoms_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisDenom, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisDenom, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisDenom, _impl_.denom_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::GenesisDenom, _impl_.authority_metadata_),
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::osmosis::tokenfactory::v1beta1::GenesisState)},
        {12, 22, -1, sizeof(::osmosis::tokenfactory::v1beta1::GenesisDenom)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::osmosis::tokenfactory::v1beta1::_GenesisState_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_GenesisDenom_default_instance_._instance,
};
const char descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n*osmosis/tokenfactory/v1beta1/genesis.p"
    "roto\022\034osmosis.tokenfactory.v1beta1\032\024gogo"
    "proto/gogo.proto\0324osmosis/tokenfactory/v"
    "1beta1/authorityMetadata.proto\032)osmosis/"
    "tokenfactory/v1beta1/params.proto\"\304\001\n\014Ge"
    "nesisState\022B\n\006params\030\001 \001(\0132$.osmosis.tok"
    "enfactory.v1beta1.ParamsB\004\310\336\037\000R\006params\022p"
    "\n\016factory_denoms\030\002 \003(\0132*.osmosis.tokenfa"
    "ctory.v1beta1.GenesisDenomB\035\310\336\037\000\362\336\037\025yaml"
    ":\"factory_denoms\"R\rfactoryDenoms\"\305\001\n\014Gen"
    "esisDenom\022&\n\005denom\030\001 \001(\tB\020\362\336\037\014yaml:\"deno"
    "m\"R\005denom\022\206\001\n\022authority_metadata\030\002 \001(\01324"
    ".osmosis.tokenfactory.v1beta1.DenomAutho"
    "rityMetadataB!\310\336\037\000\362\336\037\031yaml:\"authority_me"
    "tadata\"R\021authorityMetadata:\004\350\240\037\001BCZAgith"
    "ub.com/strangelove-ventures/tokenfactory"
    "/x/tokenfactory/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto_deps[3] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto,
        &::descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto,
};
static ::absl::once_flag descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto = {
    false,
    false,
    669,
    descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto,
    "osmosis/tokenfactory/v1beta1/genesis.proto",
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto_once,
    descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto,
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto,
};
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
};

void GenesisState::clear_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::GenesisState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        factory_denoms_{visibility, arena, from.factory_denoms_} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::Params>(
                              arena, *from._impl_.params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        factory_denoms_{visibility, arena} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.params_ = {};
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.params_;
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.factory_denoms_) +
          decltype(GenesisState::_impl_.factory_denoms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> GenesisState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .osmosis.tokenfactory.v1beta1.GenesisDenom factory_denoms = 2 [json_name = "factoryDenoms", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"factory_denoms\""];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.factory_denoms_)}},
    // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .osmosis.tokenfactory.v1beta1.GenesisDenom factory_denoms = 2 [json_name = "factoryDenoms", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"factory_denoms\""];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.factory_denoms_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::Params>()},
    {::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::GenesisDenom>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.factory_denoms_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.params_, this_._impl_.params_->GetCachedSize(), target,
                stream);
          }

          // repeated .osmosis.tokenfactory.v1beta1.GenesisDenom factory_denoms = 2 [json_name = "factoryDenoms", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"factory_denoms\""];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_factory_denoms_size());
               i < n; i++) {
            const auto& repfield = this_._internal_factory_denoms().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .osmosis.tokenfactory.v1beta1.GenesisDenom factory_denoms = 2 [json_name = "factoryDenoms", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"factory_denoms\""];
            {
              total_size += 1UL * this_._internal_factory_denoms_size();
              for (const auto& msg : this_._internal_factory_denoms()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.params_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_factory_denoms()->MergeFrom(
      from._internal_factory_denoms());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.params_ != nullptr);
    if (_this->_impl_.params_ == nullptr) {
      _this->_impl_.params_ =
          ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::Params>(arena, *from._impl_.params_);
    } else {
      _this->_impl_.params_->MergeFrom(*from._impl_.params_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.factory_denoms_.InternalSwap(&other->_impl_.factory_denoms_);
  swap(_impl_.params_, other->_impl_.params_);
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenesisDenom::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisDenom>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisDenom, _impl_._has_bits_);
};

void GenesisDenom::clear_authority_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authority_metadata_ != nullptr) _impl_.authority_metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GenesisDenom::GenesisDenom(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.GenesisDenom)
}
inline PROTOBUF_NDEBUG_INLINE GenesisDenom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::GenesisDenom& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        denom_(arena, from.denom_) {}

GenesisDenom::GenesisDenom(
    ::google::protobuf::Arena* arena,
    const GenesisDenom& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisDenom* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.authority_metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata>(
                              arena, *from._impl_.authority_metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.GenesisDenom)
}
inline PROTOBUF_NDEBUG_INLINE GenesisDenom::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        denom_(arena) {}

inline void GenesisDenom::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.authority_metadata_ = {};
}
GenesisDenom::~GenesisDenom() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.GenesisDenom)
  SharedDtor(*this);
}
inline void GenesisDenom::SharedDtor(MessageLite& self) {
  GenesisDenom& this_ = static_cast<GenesisDenom&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.denom_.Destroy();
  delete this_._impl_.authority_metadata_;
  this_._impl_.~Impl_();
}

inline void* GenesisDenom::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisDenom(arena);
}
constexpr auto GenesisDenom::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GenesisDenom),
                                            alignof(GenesisDenom));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisDenom::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisDenom_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisDenom::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisDenom>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisDenom::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisDenom>(), &GenesisDenom::ByteSizeLong,
            &GenesisDenom::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisDenom, _impl_._cached_size_),
        false,
    },
    &GenesisDenom::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisDenom::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 55, 2> GenesisDenom::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisDenom, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::GenesisDenom>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 2 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GenesisDenom, _impl_.authority_metadata_)}},
    // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisDenom, _impl_.denom_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
    {PROTOBUF_FIELD_OFFSET(GenesisDenom, _impl_.denom_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 2 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
    {PROTOBUF_FIELD_OFFSET(GenesisDenom, _impl_.authority_metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata>()},
  }}, {{
    "\51\5\0\0\0\0\0\0"
    "osmosis.tokenfactory.v1beta1.GenesisDenom"
    "denom"
  }},
};

PROTOBUF_NOINLINE void GenesisDenom::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.GenesisDenom)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denom_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.authority_metadata_ != nullptr);
    _impl_.authority_metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisDenom::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisDenom& this_ = static_cast<const GenesisDenom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisDenom::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisDenom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.GenesisDenom)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
          if (!this_._internal_denom().empty()) {
            const std::string& _s = this_._internal_denom();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osmosis.tokenfactory.v1beta1.GenesisDenom.denom");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 2 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.authority_metadata_, this_._impl_.authority_metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.GenesisDenom)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisDenom::ByteSizeLong(const MessageLite& base) {
          const GenesisDenom& this_ = static_cast<const GenesisDenom&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisDenom::ByteSizeLong() const {
          const GenesisDenom& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.GenesisDenom)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
            if (!this_._internal_denom().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_denom());
            }
          }
           {
            // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 2 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.authority_metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisDenom::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisDenom*>(&to_msg);
  auto& from = static_cast<const GenesisDenom&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.GenesisDenom)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_denom().empty()) {
    _this->_internal_set_denom(from._internal_denom());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.authority_metadata_ != nullptr);
    if (_this->_impl_.authority_metadata_ == nullptr) {
      _this->_impl_.authority_metadata_ =
          ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata>(arena, *from._impl_.authority_metadata_);
    } else {
      _this->_impl_.authority_metadata_->MergeFrom(*from._impl_.authority_metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisDenom::CopyFrom(const GenesisDenom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.GenesisDenom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisDenom::InternalSwap(GenesisDenom* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denom_, &other->_impl_.denom_, arena);
  swap(_impl_.authority_metadata_, other->_impl_.authority_metadata_);
}

::google::protobuf::Metadata GenesisDenom::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
