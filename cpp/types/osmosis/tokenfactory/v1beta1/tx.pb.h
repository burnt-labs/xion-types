// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto_2epb_2eh
#define osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/bank/v1beta1/bank.pb.h"
#include "osmosis/tokenfactory/v1beta1/params.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {
class MsgBurn;
struct MsgBurnDefaultTypeInternal;
extern MsgBurnDefaultTypeInternal _MsgBurn_default_instance_;
class MsgBurnResponse;
struct MsgBurnResponseDefaultTypeInternal;
extern MsgBurnResponseDefaultTypeInternal _MsgBurnResponse_default_instance_;
class MsgChangeAdmin;
struct MsgChangeAdminDefaultTypeInternal;
extern MsgChangeAdminDefaultTypeInternal _MsgChangeAdmin_default_instance_;
class MsgChangeAdminResponse;
struct MsgChangeAdminResponseDefaultTypeInternal;
extern MsgChangeAdminResponseDefaultTypeInternal _MsgChangeAdminResponse_default_instance_;
class MsgCreateDenom;
struct MsgCreateDenomDefaultTypeInternal;
extern MsgCreateDenomDefaultTypeInternal _MsgCreateDenom_default_instance_;
class MsgCreateDenomResponse;
struct MsgCreateDenomResponseDefaultTypeInternal;
extern MsgCreateDenomResponseDefaultTypeInternal _MsgCreateDenomResponse_default_instance_;
class MsgForceTransfer;
struct MsgForceTransferDefaultTypeInternal;
extern MsgForceTransferDefaultTypeInternal _MsgForceTransfer_default_instance_;
class MsgForceTransferResponse;
struct MsgForceTransferResponseDefaultTypeInternal;
extern MsgForceTransferResponseDefaultTypeInternal _MsgForceTransferResponse_default_instance_;
class MsgMint;
struct MsgMintDefaultTypeInternal;
extern MsgMintDefaultTypeInternal _MsgMint_default_instance_;
class MsgMintResponse;
struct MsgMintResponseDefaultTypeInternal;
extern MsgMintResponseDefaultTypeInternal _MsgMintResponse_default_instance_;
class MsgSetDenomMetadata;
struct MsgSetDenomMetadataDefaultTypeInternal;
extern MsgSetDenomMetadataDefaultTypeInternal _MsgSetDenomMetadata_default_instance_;
class MsgSetDenomMetadataResponse;
struct MsgSetDenomMetadataResponseDefaultTypeInternal;
extern MsgSetDenomMetadataResponseDefaultTypeInternal _MsgSetDenomMetadataResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSetDenomMetadataResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse) */ {
 public:
  inline MsgSetDenomMetadataResponse() : MsgSetDenomMetadataResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSetDenomMetadataResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSetDenomMetadataResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetDenomMetadataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSetDenomMetadataResponse(const MsgSetDenomMetadataResponse& from) : MsgSetDenomMetadataResponse(nullptr, from) {}
  inline MsgSetDenomMetadataResponse(MsgSetDenomMetadataResponse&& from) noexcept
      : MsgSetDenomMetadataResponse(nullptr, std::move(from)) {}
  inline MsgSetDenomMetadataResponse& operator=(const MsgSetDenomMetadataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetDenomMetadataResponse& operator=(MsgSetDenomMetadataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetDenomMetadataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetDenomMetadataResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSetDenomMetadataResponse*>(
        &_MsgSetDenomMetadataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MsgSetDenomMetadataResponse& a, MsgSetDenomMetadataResponse& b) { a.Swap(&b); }
  inline void Swap(MsgSetDenomMetadataResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetDenomMetadataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetDenomMetadataResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgSetDenomMetadataResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgSetDenomMetadataResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgSetDenomMetadataResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse"; }

 protected:
  explicit MsgSetDenomMetadataResponse(::google::protobuf::Arena* arena);
  MsgSetDenomMetadataResponse(::google::protobuf::Arena* arena, const MsgSetDenomMetadataResponse& from);
  MsgSetDenomMetadataResponse(::google::protobuf::Arena* arena, MsgSetDenomMetadataResponse&& from) noexcept
      : MsgSetDenomMetadataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadataResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSetDenomMetadataResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgMintResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgMintResponse) */ {
 public:
  inline MsgMintResponse() : MsgMintResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgMintResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgMintResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMintResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgMintResponse(const MsgMintResponse& from) : MsgMintResponse(nullptr, from) {}
  inline MsgMintResponse(MsgMintResponse&& from) noexcept
      : MsgMintResponse(nullptr, std::move(from)) {}
  inline MsgMintResponse& operator=(const MsgMintResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMintResponse& operator=(MsgMintResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMintResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMintResponse* internal_default_instance() {
    return reinterpret_cast<const MsgMintResponse*>(
        &_MsgMintResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgMintResponse& a, MsgMintResponse& b) { a.Swap(&b); }
  inline void Swap(MsgMintResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMintResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMintResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgMintResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgMintResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgMintResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgMintResponse"; }

 protected:
  explicit MsgMintResponse(::google::protobuf::Arena* arena);
  MsgMintResponse(::google::protobuf::Arena* arena, const MsgMintResponse& from);
  MsgMintResponse(::google::protobuf::Arena* arena, MsgMintResponse&& from) noexcept
      : MsgMintResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgMintResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgMintResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgForceTransferResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgForceTransferResponse) */ {
 public:
  inline MsgForceTransferResponse() : MsgForceTransferResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgForceTransferResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgForceTransferResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgForceTransferResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgForceTransferResponse(const MsgForceTransferResponse& from) : MsgForceTransferResponse(nullptr, from) {}
  inline MsgForceTransferResponse(MsgForceTransferResponse&& from) noexcept
      : MsgForceTransferResponse(nullptr, std::move(from)) {}
  inline MsgForceTransferResponse& operator=(const MsgForceTransferResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgForceTransferResponse& operator=(MsgForceTransferResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgForceTransferResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgForceTransferResponse* internal_default_instance() {
    return reinterpret_cast<const MsgForceTransferResponse*>(
        &_MsgForceTransferResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MsgForceTransferResponse& a, MsgForceTransferResponse& b) { a.Swap(&b); }
  inline void Swap(MsgForceTransferResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgForceTransferResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgForceTransferResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgForceTransferResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgForceTransferResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgForceTransferResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgForceTransferResponse"; }

 protected:
  explicit MsgForceTransferResponse(::google::protobuf::Arena* arena);
  MsgForceTransferResponse(::google::protobuf::Arena* arena, const MsgForceTransferResponse& from);
  MsgForceTransferResponse(::google::protobuf::Arena* arena, MsgForceTransferResponse&& from) noexcept
      : MsgForceTransferResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgForceTransferResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgForceTransferResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateDenomResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse) */ {
 public:
  inline MsgCreateDenomResponse() : MsgCreateDenomResponse(nullptr) {}
  ~MsgCreateDenomResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateDenomResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateDenomResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateDenomResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateDenomResponse(const MsgCreateDenomResponse& from) : MsgCreateDenomResponse(nullptr, from) {}
  inline MsgCreateDenomResponse(MsgCreateDenomResponse&& from) noexcept
      : MsgCreateDenomResponse(nullptr, std::move(from)) {}
  inline MsgCreateDenomResponse& operator=(const MsgCreateDenomResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateDenomResponse& operator=(MsgCreateDenomResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateDenomResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateDenomResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreateDenomResponse*>(
        &_MsgCreateDenomResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgCreateDenomResponse& a, MsgCreateDenomResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCreateDenomResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateDenomResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateDenomResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreateDenomResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreateDenomResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreateDenomResponse& from) { MsgCreateDenomResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreateDenomResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse"; }

 protected:
  explicit MsgCreateDenomResponse(::google::protobuf::Arena* arena);
  MsgCreateDenomResponse(::google::protobuf::Arena* arena, const MsgCreateDenomResponse& from);
  MsgCreateDenomResponse(::google::protobuf::Arena* arena, MsgCreateDenomResponse&& from) noexcept
      : MsgCreateDenomResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNewTokenDenomFieldNumber = 1,
  };
  // string new_token_denom = 1 [json_name = "newTokenDenom", (.gogoproto.moretags) = "yaml:\"new_token_denom\""];
  void clear_new_token_denom() ;
  const std::string& new_token_denom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_token_denom(Arg_&& arg, Args_... args);
  std::string* mutable_new_token_denom();
  PROTOBUF_NODISCARD std::string* release_new_token_denom();
  void set_allocated_new_token_denom(std::string* value);

  private:
  const std::string& _internal_new_token_denom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_token_denom(
      const std::string& value);
  std::string* _internal_mutable_new_token_denom();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateDenomResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr new_token_denom_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateDenom final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgCreateDenom) */ {
 public:
  inline MsgCreateDenom() : MsgCreateDenom(nullptr) {}
  ~MsgCreateDenom() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateDenom* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateDenom));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateDenom(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateDenom(const MsgCreateDenom& from) : MsgCreateDenom(nullptr, from) {}
  inline MsgCreateDenom(MsgCreateDenom&& from) noexcept
      : MsgCreateDenom(nullptr, std::move(from)) {}
  inline MsgCreateDenom& operator=(const MsgCreateDenom& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateDenom& operator=(MsgCreateDenom&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateDenom& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateDenom* internal_default_instance() {
    return reinterpret_cast<const MsgCreateDenom*>(
        &_MsgCreateDenom_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgCreateDenom& a, MsgCreateDenom& b) { a.Swap(&b); }
  inline void Swap(MsgCreateDenom* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateDenom* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateDenom* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreateDenom>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreateDenom& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreateDenom& from) { MsgCreateDenom::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreateDenom* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgCreateDenom"; }

 protected:
  explicit MsgCreateDenom(::google::protobuf::Arena* arena);
  MsgCreateDenom(::google::protobuf::Arena* arena, const MsgCreateDenom& from);
  MsgCreateDenom(::google::protobuf::Arena* arena, MsgCreateDenom&& from) noexcept
      : MsgCreateDenom(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kSubdenomFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string subdenom = 2 [json_name = "subdenom", (.gogoproto.moretags) = "yaml:\"subdenom\""];
  void clear_subdenom() ;
  const std::string& subdenom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subdenom(Arg_&& arg, Args_... args);
  std::string* mutable_subdenom();
  PROTOBUF_NODISCARD std::string* release_subdenom();
  void set_allocated_subdenom(std::string* value);

  private:
  const std::string& _internal_subdenom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subdenom(
      const std::string& value);
  std::string* _internal_mutable_subdenom();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgCreateDenom)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateDenom& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr subdenom_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgChangeAdminResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse) */ {
 public:
  inline MsgChangeAdminResponse() : MsgChangeAdminResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgChangeAdminResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgChangeAdminResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgChangeAdminResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgChangeAdminResponse(const MsgChangeAdminResponse& from) : MsgChangeAdminResponse(nullptr, from) {}
  inline MsgChangeAdminResponse(MsgChangeAdminResponse&& from) noexcept
      : MsgChangeAdminResponse(nullptr, std::move(from)) {}
  inline MsgChangeAdminResponse& operator=(const MsgChangeAdminResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgChangeAdminResponse& operator=(MsgChangeAdminResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgChangeAdminResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgChangeAdminResponse* internal_default_instance() {
    return reinterpret_cast<const MsgChangeAdminResponse*>(
        &_MsgChangeAdminResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MsgChangeAdminResponse& a, MsgChangeAdminResponse& b) { a.Swap(&b); }
  inline void Swap(MsgChangeAdminResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgChangeAdminResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgChangeAdminResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgChangeAdminResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgChangeAdminResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgChangeAdminResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse"; }

 protected:
  explicit MsgChangeAdminResponse(::google::protobuf::Arena* arena);
  MsgChangeAdminResponse(::google::protobuf::Arena* arena, const MsgChangeAdminResponse& from);
  MsgChangeAdminResponse(::google::protobuf::Arena* arena, MsgChangeAdminResponse&& from) noexcept
      : MsgChangeAdminResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgChangeAdminResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgChangeAdminResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgChangeAdmin final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgChangeAdmin) */ {
 public:
  inline MsgChangeAdmin() : MsgChangeAdmin(nullptr) {}
  ~MsgChangeAdmin() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgChangeAdmin* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgChangeAdmin));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgChangeAdmin(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgChangeAdmin(const MsgChangeAdmin& from) : MsgChangeAdmin(nullptr, from) {}
  inline MsgChangeAdmin(MsgChangeAdmin&& from) noexcept
      : MsgChangeAdmin(nullptr, std::move(from)) {}
  inline MsgChangeAdmin& operator=(const MsgChangeAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgChangeAdmin& operator=(MsgChangeAdmin&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgChangeAdmin& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgChangeAdmin* internal_default_instance() {
    return reinterpret_cast<const MsgChangeAdmin*>(
        &_MsgChangeAdmin_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MsgChangeAdmin& a, MsgChangeAdmin& b) { a.Swap(&b); }
  inline void Swap(MsgChangeAdmin* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgChangeAdmin* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgChangeAdmin* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgChangeAdmin>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgChangeAdmin& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgChangeAdmin& from) { MsgChangeAdmin::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgChangeAdmin* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgChangeAdmin"; }

 protected:
  explicit MsgChangeAdmin(::google::protobuf::Arena* arena);
  MsgChangeAdmin(::google::protobuf::Arena* arena, const MsgChangeAdmin& from);
  MsgChangeAdmin(::google::protobuf::Arena* arena, MsgChangeAdmin&& from) noexcept
      : MsgChangeAdmin(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kDenomFieldNumber = 2,
    kNewAdminFieldNumber = 3,
  };
  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string denom = 2 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
  void clear_denom() ;
  const std::string& denom() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_denom(Arg_&& arg, Args_... args);
  std::string* mutable_denom();
  PROTOBUF_NODISCARD std::string* release_denom();
  void set_allocated_denom(std::string* value);

  private:
  const std::string& _internal_denom() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_denom(
      const std::string& value);
  std::string* _internal_mutable_denom();

  public:
  // string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\""];
  void clear_new_admin() ;
  const std::string& new_admin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_admin(Arg_&& arg, Args_... args);
  std::string* mutable_new_admin();
  PROTOBUF_NODISCARD std::string* release_new_admin();
  void set_allocated_new_admin(std::string* value);

  private:
  const std::string& _internal_new_admin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_admin(
      const std::string& value);
  std::string* _internal_mutable_new_admin();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgChangeAdmin)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      72, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgChangeAdmin& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr denom_;
    ::google::protobuf::internal::ArenaStringPtr new_admin_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgBurnResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgBurnResponse) */ {
 public:
  inline MsgBurnResponse() : MsgBurnResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgBurnResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgBurnResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgBurnResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgBurnResponse(const MsgBurnResponse& from) : MsgBurnResponse(nullptr, from) {}
  inline MsgBurnResponse(MsgBurnResponse&& from) noexcept
      : MsgBurnResponse(nullptr, std::move(from)) {}
  inline MsgBurnResponse& operator=(const MsgBurnResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBurnResponse& operator=(MsgBurnResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgBurnResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgBurnResponse* internal_default_instance() {
    return reinterpret_cast<const MsgBurnResponse*>(
        &_MsgBurnResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgBurnResponse& a, MsgBurnResponse& b) { a.Swap(&b); }
  inline void Swap(MsgBurnResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBurnResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgBurnResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgBurnResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgBurnResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgBurnResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgBurnResponse"; }

 protected:
  explicit MsgBurnResponse(::google::protobuf::Arena* arena);
  MsgBurnResponse(::google::protobuf::Arena* arena, const MsgBurnResponse& from);
  MsgBurnResponse(::google::protobuf::Arena* arena, MsgBurnResponse&& from) noexcept
      : MsgBurnResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgBurnResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgBurnResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgMint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgMint) */ {
 public:
  inline MsgMint() : MsgMint(nullptr) {}
  ~MsgMint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgMint* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgMint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgMint(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgMint(const MsgMint& from) : MsgMint(nullptr, from) {}
  inline MsgMint(MsgMint&& from) noexcept
      : MsgMint(nullptr, std::move(from)) {}
  inline MsgMint& operator=(const MsgMint& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgMint& operator=(MsgMint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgMint& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgMint* internal_default_instance() {
    return reinterpret_cast<const MsgMint*>(
        &_MsgMint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgMint& a, MsgMint& b) { a.Swap(&b); }
  inline void Swap(MsgMint* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgMint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgMint* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgMint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgMint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgMint& from) { MsgMint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgMint* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgMint"; }

 protected:
  explicit MsgMint(::google::protobuf::Arena* arena);
  MsgMint(::google::protobuf::Arena* arena, const MsgMint& from);
  MsgMint(::google::protobuf::Arena* arena, MsgMint&& from) noexcept
      : MsgMint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kMintToAddressFieldNumber = 3,
    kAmountFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string mintToAddress = 3 [json_name = "mintToAddress", (.gogoproto.moretags) = "yaml:\"mint_to_address\"", (.amino.dont_omitempty) = true];
  void clear_minttoaddress() ;
  const std::string& minttoaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_minttoaddress(Arg_&& arg, Args_... args);
  std::string* mutable_minttoaddress();
  PROTOBUF_NODISCARD std::string* release_minttoaddress();
  void set_allocated_minttoaddress(std::string* value);

  private:
  const std::string& _internal_minttoaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_minttoaddress(
      const std::string& value);
  std::string* _internal_mutable_minttoaddress();

  public:
  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgMint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgMint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr minttoaddress_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgForceTransfer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgForceTransfer) */ {
 public:
  inline MsgForceTransfer() : MsgForceTransfer(nullptr) {}
  ~MsgForceTransfer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgForceTransfer* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgForceTransfer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgForceTransfer(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgForceTransfer(const MsgForceTransfer& from) : MsgForceTransfer(nullptr, from) {}
  inline MsgForceTransfer(MsgForceTransfer&& from) noexcept
      : MsgForceTransfer(nullptr, std::move(from)) {}
  inline MsgForceTransfer& operator=(const MsgForceTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgForceTransfer& operator=(MsgForceTransfer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgForceTransfer& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgForceTransfer* internal_default_instance() {
    return reinterpret_cast<const MsgForceTransfer*>(
        &_MsgForceTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MsgForceTransfer& a, MsgForceTransfer& b) { a.Swap(&b); }
  inline void Swap(MsgForceTransfer* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgForceTransfer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgForceTransfer* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgForceTransfer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgForceTransfer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgForceTransfer& from) { MsgForceTransfer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgForceTransfer* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgForceTransfer"; }

 protected:
  explicit MsgForceTransfer(::google::protobuf::Arena* arena);
  MsgForceTransfer(::google::protobuf::Arena* arena, const MsgForceTransfer& from);
  MsgForceTransfer(::google::protobuf::Arena* arena, MsgForceTransfer&& from) noexcept
      : MsgForceTransfer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kTransferFromAddressFieldNumber = 3,
    kTransferToAddressFieldNumber = 4,
    kAmountFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string transferFromAddress = 3 [json_name = "transferFromAddress", (.gogoproto.moretags) = "yaml:\"transfer_from_address\""];
  void clear_transferfromaddress() ;
  const std::string& transferfromaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transferfromaddress(Arg_&& arg, Args_... args);
  std::string* mutable_transferfromaddress();
  PROTOBUF_NODISCARD std::string* release_transferfromaddress();
  void set_allocated_transferfromaddress(std::string* value);

  private:
  const std::string& _internal_transferfromaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transferfromaddress(
      const std::string& value);
  std::string* _internal_mutable_transferfromaddress();

  public:
  // string transferToAddress = 4 [json_name = "transferToAddress", (.gogoproto.moretags) = "yaml:\"transfer_to_address\""];
  void clear_transfertoaddress() ;
  const std::string& transfertoaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transfertoaddress(Arg_&& arg, Args_... args);
  std::string* mutable_transfertoaddress();
  PROTOBUF_NODISCARD std::string* release_transfertoaddress();
  void set_allocated_transfertoaddress(std::string* value);

  private:
  const std::string& _internal_transfertoaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transfertoaddress(
      const std::string& value);
  std::string* _internal_mutable_transfertoaddress();

  public:
  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgForceTransfer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      96, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgForceTransfer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr transferfromaddress_;
    ::google::protobuf::internal::ArenaStringPtr transfertoaddress_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgBurn final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgBurn) */ {
 public:
  inline MsgBurn() : MsgBurn(nullptr) {}
  ~MsgBurn() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgBurn* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgBurn));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgBurn(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgBurn(const MsgBurn& from) : MsgBurn(nullptr, from) {}
  inline MsgBurn(MsgBurn&& from) noexcept
      : MsgBurn(nullptr, std::move(from)) {}
  inline MsgBurn& operator=(const MsgBurn& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBurn& operator=(MsgBurn&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgBurn& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgBurn* internal_default_instance() {
    return reinterpret_cast<const MsgBurn*>(
        &_MsgBurn_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgBurn& a, MsgBurn& b) { a.Swap(&b); }
  inline void Swap(MsgBurn* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBurn* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgBurn* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgBurn>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgBurn& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgBurn& from) { MsgBurn::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgBurn* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgBurn"; }

 protected:
  explicit MsgBurn(::google::protobuf::Arena* arena);
  MsgBurn(::google::protobuf::Arena* arena, const MsgBurn& from);
  MsgBurn(::google::protobuf::Arena* arena, MsgBurn&& from) noexcept
      : MsgBurn(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kBurnFromAddressFieldNumber = 3,
    kAmountFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // string burnFromAddress = 3 [json_name = "burnFromAddress", (.gogoproto.moretags) = "yaml:\"burn_from_address\"", (.amino.dont_omitempty) = true];
  void clear_burnfromaddress() ;
  const std::string& burnfromaddress() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_burnfromaddress(Arg_&& arg, Args_... args);
  std::string* mutable_burnfromaddress();
  PROTOBUF_NODISCARD std::string* release_burnfromaddress();
  void set_allocated_burnfromaddress(std::string* value);

  private:
  const std::string& _internal_burnfromaddress() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_burnfromaddress(
      const std::string& value);
  std::string* _internal_mutable_burnfromaddress();

  public:
  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgBurn)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgBurn& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::google::protobuf::internal::ArenaStringPtr burnfromaddress_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .osmosis.tokenfactory.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::osmosis::tokenfactory::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::osmosis::tokenfactory::v1beta1::Params* release_params();
  ::osmosis::tokenfactory::v1beta1::Params* mutable_params();
  void set_allocated_params(::osmosis::tokenfactory::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::osmosis::tokenfactory::v1beta1::Params* value);
  ::osmosis::tokenfactory::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::osmosis::tokenfactory::v1beta1::Params& _internal_params() const;
  ::osmosis::tokenfactory::v1beta1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::osmosis::tokenfactory::v1beta1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSetDenomMetadata final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata) */ {
 public:
  inline MsgSetDenomMetadata() : MsgSetDenomMetadata(nullptr) {}
  ~MsgSetDenomMetadata() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSetDenomMetadata* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSetDenomMetadata));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSetDenomMetadata(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSetDenomMetadata(const MsgSetDenomMetadata& from) : MsgSetDenomMetadata(nullptr, from) {}
  inline MsgSetDenomMetadata(MsgSetDenomMetadata&& from) noexcept
      : MsgSetDenomMetadata(nullptr, std::move(from)) {}
  inline MsgSetDenomMetadata& operator=(const MsgSetDenomMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSetDenomMetadata& operator=(MsgSetDenomMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSetDenomMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSetDenomMetadata* internal_default_instance() {
    return reinterpret_cast<const MsgSetDenomMetadata*>(
        &_MsgSetDenomMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MsgSetDenomMetadata& a, MsgSetDenomMetadata& b) { a.Swap(&b); }
  inline void Swap(MsgSetDenomMetadata* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSetDenomMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSetDenomMetadata* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSetDenomMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSetDenomMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSetDenomMetadata& from) { MsgSetDenomMetadata::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSetDenomMetadata* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata"; }

 protected:
  explicit MsgSetDenomMetadata(::google::protobuf::Arena* arena);
  MsgSetDenomMetadata(::google::protobuf::Arena* arena, const MsgSetDenomMetadata& from);
  MsgSetDenomMetadata(::google::protobuf::Arena* arena, MsgSetDenomMetadata&& from) noexcept
      : MsgSetDenomMetadata(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSenderFieldNumber = 1,
    kMetadataFieldNumber = 2,
  };
  // string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
  void clear_sender() ;
  const std::string& sender() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sender(Arg_&& arg, Args_... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* value);

  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(
      const std::string& value);
  std::string* _internal_mutable_sender();

  public:
  // .cosmos.bank.v1beta1.Metadata metadata = 2 [json_name = "metadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"metadata\""];
  bool has_metadata() const;
  void clear_metadata() ;
  const ::cosmos::bank::v1beta1::Metadata& metadata() const;
  PROTOBUF_NODISCARD ::cosmos::bank::v1beta1::Metadata* release_metadata();
  ::cosmos::bank::v1beta1::Metadata* mutable_metadata();
  void set_allocated_metadata(::cosmos::bank::v1beta1::Metadata* value);
  void unsafe_arena_set_allocated_metadata(::cosmos::bank::v1beta1::Metadata* value);
  ::cosmos::bank::v1beta1::Metadata* unsafe_arena_release_metadata();

  private:
  const ::cosmos::bank::v1beta1::Metadata& _internal_metadata() const;
  ::cosmos::bank::v1beta1::Metadata* _internal_mutable_metadata();

  public:
  // @@protoc_insertion_point(class_scope:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      63, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSetDenomMetadata& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sender_;
    ::cosmos::bank::v1beta1::Metadata* metadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgCreateDenom

// string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
inline void MsgCreateDenom::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgCreateDenom::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgCreateDenom.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateDenom::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgCreateDenom.sender)
}
inline std::string* MsgCreateDenom::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgCreateDenom.sender)
  return _s;
}
inline const std::string& MsgCreateDenom::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgCreateDenom::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgCreateDenom::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgCreateDenom::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgCreateDenom.sender)
  return _impl_.sender_.Release();
}
inline void MsgCreateDenom::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgCreateDenom.sender)
}

// string subdenom = 2 [json_name = "subdenom", (.gogoproto.moretags) = "yaml:\"subdenom\""];
inline void MsgCreateDenom::clear_subdenom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subdenom_.ClearToEmpty();
}
inline const std::string& MsgCreateDenom::subdenom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgCreateDenom.subdenom)
  return _internal_subdenom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateDenom::set_subdenom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subdenom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgCreateDenom.subdenom)
}
inline std::string* MsgCreateDenom::mutable_subdenom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subdenom();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgCreateDenom.subdenom)
  return _s;
}
inline const std::string& MsgCreateDenom::_internal_subdenom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subdenom_.Get();
}
inline void MsgCreateDenom::_internal_set_subdenom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subdenom_.Set(value, GetArena());
}
inline std::string* MsgCreateDenom::_internal_mutable_subdenom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subdenom_.Mutable( GetArena());
}
inline std::string* MsgCreateDenom::release_subdenom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgCreateDenom.subdenom)
  return _impl_.subdenom_.Release();
}
inline void MsgCreateDenom::set_allocated_subdenom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subdenom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subdenom_.IsDefault()) {
    _impl_.subdenom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgCreateDenom.subdenom)
}

// -------------------------------------------------------------------

// MsgCreateDenomResponse

// string new_token_denom = 1 [json_name = "newTokenDenom", (.gogoproto.moretags) = "yaml:\"new_token_denom\""];
inline void MsgCreateDenomResponse::clear_new_token_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_token_denom_.ClearToEmpty();
}
inline const std::string& MsgCreateDenomResponse::new_token_denom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse.new_token_denom)
  return _internal_new_token_denom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateDenomResponse::set_new_token_denom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_token_denom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse.new_token_denom)
}
inline std::string* MsgCreateDenomResponse::mutable_new_token_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_token_denom();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse.new_token_denom)
  return _s;
}
inline const std::string& MsgCreateDenomResponse::_internal_new_token_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_token_denom_.Get();
}
inline void MsgCreateDenomResponse::_internal_set_new_token_denom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_token_denom_.Set(value, GetArena());
}
inline std::string* MsgCreateDenomResponse::_internal_mutable_new_token_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_token_denom_.Mutable( GetArena());
}
inline std::string* MsgCreateDenomResponse::release_new_token_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse.new_token_denom)
  return _impl_.new_token_denom_.Release();
}
inline void MsgCreateDenomResponse::set_allocated_new_token_denom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_token_denom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_token_denom_.IsDefault()) {
    _impl_.new_token_denom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgCreateDenomResponse.new_token_denom)
}

// -------------------------------------------------------------------

// MsgMint

// string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
inline void MsgMint::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgMint::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgMint.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMint::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgMint.sender)
}
inline std::string* MsgMint::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgMint.sender)
  return _s;
}
inline const std::string& MsgMint::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgMint::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgMint::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgMint::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgMint.sender)
  return _impl_.sender_.Release();
}
inline void MsgMint::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgMint.sender)
}

// .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];
inline bool MsgMint::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgMint::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgMint::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgMint.amount)
  return _internal_amount();
}
inline void MsgMint::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osmosis.tokenfactory.v1beta1.MsgMint.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgMint::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgMint::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgMint.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgMint::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgMint::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgMint.amount)
  return _msg;
}
inline void MsgMint::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgMint.amount)
}

// string mintToAddress = 3 [json_name = "mintToAddress", (.gogoproto.moretags) = "yaml:\"mint_to_address\"", (.amino.dont_omitempty) = true];
inline void MsgMint::clear_minttoaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minttoaddress_.ClearToEmpty();
}
inline const std::string& MsgMint::minttoaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgMint.mintToAddress)
  return _internal_minttoaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgMint::set_minttoaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minttoaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgMint.mintToAddress)
}
inline std::string* MsgMint::mutable_minttoaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_minttoaddress();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgMint.mintToAddress)
  return _s;
}
inline const std::string& MsgMint::_internal_minttoaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minttoaddress_.Get();
}
inline void MsgMint::_internal_set_minttoaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minttoaddress_.Set(value, GetArena());
}
inline std::string* MsgMint::_internal_mutable_minttoaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.minttoaddress_.Mutable( GetArena());
}
inline std::string* MsgMint::release_minttoaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgMint.mintToAddress)
  return _impl_.minttoaddress_.Release();
}
inline void MsgMint::set_allocated_minttoaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minttoaddress_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.minttoaddress_.IsDefault()) {
    _impl_.minttoaddress_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgMint.mintToAddress)
}

// -------------------------------------------------------------------

// MsgMintResponse

// -------------------------------------------------------------------

// MsgBurn

// string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
inline void MsgBurn::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgBurn::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgBurn.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgBurn::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgBurn.sender)
}
inline std::string* MsgBurn::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgBurn.sender)
  return _s;
}
inline const std::string& MsgBurn::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgBurn::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgBurn::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgBurn::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgBurn.sender)
  return _impl_.sender_.Release();
}
inline void MsgBurn::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgBurn.sender)
}

// .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];
inline bool MsgBurn::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgBurn::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgBurn::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgBurn.amount)
  return _internal_amount();
}
inline void MsgBurn::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osmosis.tokenfactory.v1beta1.MsgBurn.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgBurn::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgBurn::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgBurn.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgBurn::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgBurn::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgBurn.amount)
  return _msg;
}
inline void MsgBurn::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgBurn.amount)
}

// string burnFromAddress = 3 [json_name = "burnFromAddress", (.gogoproto.moretags) = "yaml:\"burn_from_address\"", (.amino.dont_omitempty) = true];
inline void MsgBurn::clear_burnfromaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.burnfromaddress_.ClearToEmpty();
}
inline const std::string& MsgBurn::burnfromaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgBurn.burnFromAddress)
  return _internal_burnfromaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgBurn::set_burnfromaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.burnfromaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgBurn.burnFromAddress)
}
inline std::string* MsgBurn::mutable_burnfromaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_burnfromaddress();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgBurn.burnFromAddress)
  return _s;
}
inline const std::string& MsgBurn::_internal_burnfromaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.burnfromaddress_.Get();
}
inline void MsgBurn::_internal_set_burnfromaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.burnfromaddress_.Set(value, GetArena());
}
inline std::string* MsgBurn::_internal_mutable_burnfromaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.burnfromaddress_.Mutable( GetArena());
}
inline std::string* MsgBurn::release_burnfromaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgBurn.burnFromAddress)
  return _impl_.burnfromaddress_.Release();
}
inline void MsgBurn::set_allocated_burnfromaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.burnfromaddress_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.burnfromaddress_.IsDefault()) {
    _impl_.burnfromaddress_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgBurn.burnFromAddress)
}

// -------------------------------------------------------------------

// MsgBurnResponse

// -------------------------------------------------------------------

// MsgChangeAdmin

// string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
inline void MsgChangeAdmin::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgChangeAdmin::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgChangeAdmin::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.sender)
}
inline std::string* MsgChangeAdmin::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.sender)
  return _s;
}
inline const std::string& MsgChangeAdmin::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgChangeAdmin::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgChangeAdmin::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgChangeAdmin::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.sender)
  return _impl_.sender_.Release();
}
inline void MsgChangeAdmin::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.sender)
}

// string denom = 2 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
inline void MsgChangeAdmin::clear_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.ClearToEmpty();
}
inline const std::string& MsgChangeAdmin::denom() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.denom)
  return _internal_denom();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgChangeAdmin::set_denom(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.denom)
}
inline std::string* MsgChangeAdmin::mutable_denom() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_denom();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.denom)
  return _s;
}
inline const std::string& MsgChangeAdmin::_internal_denom() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.denom_.Get();
}
inline void MsgChangeAdmin::_internal_set_denom(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.Set(value, GetArena());
}
inline std::string* MsgChangeAdmin::_internal_mutable_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.denom_.Mutable( GetArena());
}
inline std::string* MsgChangeAdmin::release_denom() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.denom)
  return _impl_.denom_.Release();
}
inline void MsgChangeAdmin::set_allocated_denom(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.denom_.IsDefault()) {
    _impl_.denom_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.denom)
}

// string new_admin = 3 [json_name = "newAdmin", (.gogoproto.moretags) = "yaml:\"new_admin\""];
inline void MsgChangeAdmin::clear_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.ClearToEmpty();
}
inline const std::string& MsgChangeAdmin::new_admin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.new_admin)
  return _internal_new_admin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgChangeAdmin::set_new_admin(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.new_admin)
}
inline std::string* MsgChangeAdmin::mutable_new_admin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_admin();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.new_admin)
  return _s;
}
inline const std::string& MsgChangeAdmin::_internal_new_admin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_admin_.Get();
}
inline void MsgChangeAdmin::_internal_set_new_admin(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.Set(value, GetArena());
}
inline std::string* MsgChangeAdmin::_internal_mutable_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_admin_.Mutable( GetArena());
}
inline std::string* MsgChangeAdmin::release_new_admin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.new_admin)
  return _impl_.new_admin_.Release();
}
inline void MsgChangeAdmin::set_allocated_new_admin(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_admin_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_admin_.IsDefault()) {
    _impl_.new_admin_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgChangeAdmin.new_admin)
}

// -------------------------------------------------------------------

// MsgChangeAdminResponse

// -------------------------------------------------------------------

// MsgSetDenomMetadata

// string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
inline void MsgSetDenomMetadata::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgSetDenomMetadata::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSetDenomMetadata::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.sender)
}
inline std::string* MsgSetDenomMetadata::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.sender)
  return _s;
}
inline const std::string& MsgSetDenomMetadata::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgSetDenomMetadata::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgSetDenomMetadata::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgSetDenomMetadata::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.sender)
  return _impl_.sender_.Release();
}
inline void MsgSetDenomMetadata::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.sender)
}

// .cosmos.bank.v1beta1.Metadata metadata = 2 [json_name = "metadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"metadata\""];
inline bool MsgSetDenomMetadata::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline const ::cosmos::bank::v1beta1::Metadata& MsgSetDenomMetadata::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::bank::v1beta1::Metadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::bank::v1beta1::Metadata&>(::cosmos::bank::v1beta1::_Metadata_default_instance_);
}
inline const ::cosmos::bank::v1beta1::Metadata& MsgSetDenomMetadata::metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.metadata)
  return _internal_metadata();
}
inline void MsgSetDenomMetadata::unsafe_arena_set_allocated_metadata(::cosmos::bank::v1beta1::Metadata* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::cosmos::bank::v1beta1::Metadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.metadata)
}
inline ::cosmos::bank::v1beta1::Metadata* MsgSetDenomMetadata::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::bank::v1beta1::Metadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::bank::v1beta1::Metadata* MsgSetDenomMetadata::unsafe_arena_release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.metadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::bank::v1beta1::Metadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::cosmos::bank::v1beta1::Metadata* MsgSetDenomMetadata::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.metadata_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::bank::v1beta1::Metadata>(GetArena());
    _impl_.metadata_ = reinterpret_cast<::cosmos::bank::v1beta1::Metadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::cosmos::bank::v1beta1::Metadata* MsgSetDenomMetadata::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::bank::v1beta1::Metadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.metadata)
  return _msg;
}
inline void MsgSetDenomMetadata::set_allocated_metadata(::cosmos::bank::v1beta1::Metadata* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.metadata_ = reinterpret_cast<::cosmos::bank::v1beta1::Metadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgSetDenomMetadata.metadata)
}

// -------------------------------------------------------------------

// MsgSetDenomMetadataResponse

// -------------------------------------------------------------------

// MsgForceTransfer

// string sender = 1 [json_name = "sender", (.gogoproto.moretags) = "yaml:\"sender\""];
inline void MsgForceTransfer::clear_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MsgForceTransfer::sender() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgForceTransfer.sender)
  return _internal_sender();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgForceTransfer::set_sender(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgForceTransfer.sender)
}
inline std::string* MsgForceTransfer::mutable_sender() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgForceTransfer.sender)
  return _s;
}
inline const std::string& MsgForceTransfer::_internal_sender() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_.Get();
}
inline void MsgForceTransfer::_internal_set_sender(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.Set(value, GetArena());
}
inline std::string* MsgForceTransfer::_internal_mutable_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sender_.Mutable( GetArena());
}
inline std::string* MsgForceTransfer::release_sender() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgForceTransfer.sender)
  return _impl_.sender_.Release();
}
inline void MsgForceTransfer::set_allocated_sender(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgForceTransfer.sender)
}

// .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"amount\"", (.amino.encoding) = "legacy_coin"];
inline bool MsgForceTransfer::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgForceTransfer::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgForceTransfer::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgForceTransfer.amount)
  return _internal_amount();
}
inline void MsgForceTransfer::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osmosis.tokenfactory.v1beta1.MsgForceTransfer.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgForceTransfer::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgForceTransfer::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgForceTransfer.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgForceTransfer::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgForceTransfer::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgForceTransfer.amount)
  return _msg;
}
inline void MsgForceTransfer::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgForceTransfer.amount)
}

// string transferFromAddress = 3 [json_name = "transferFromAddress", (.gogoproto.moretags) = "yaml:\"transfer_from_address\""];
inline void MsgForceTransfer::clear_transferfromaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferfromaddress_.ClearToEmpty();
}
inline const std::string& MsgForceTransfer::transferfromaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferFromAddress)
  return _internal_transferfromaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgForceTransfer::set_transferfromaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferfromaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferFromAddress)
}
inline std::string* MsgForceTransfer::mutable_transferfromaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transferfromaddress();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferFromAddress)
  return _s;
}
inline const std::string& MsgForceTransfer::_internal_transferfromaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transferfromaddress_.Get();
}
inline void MsgForceTransfer::_internal_set_transferfromaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferfromaddress_.Set(value, GetArena());
}
inline std::string* MsgForceTransfer::_internal_mutable_transferfromaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transferfromaddress_.Mutable( GetArena());
}
inline std::string* MsgForceTransfer::release_transferfromaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferFromAddress)
  return _impl_.transferfromaddress_.Release();
}
inline void MsgForceTransfer::set_allocated_transferfromaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferfromaddress_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transferfromaddress_.IsDefault()) {
    _impl_.transferfromaddress_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferFromAddress)
}

// string transferToAddress = 4 [json_name = "transferToAddress", (.gogoproto.moretags) = "yaml:\"transfer_to_address\""];
inline void MsgForceTransfer::clear_transfertoaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfertoaddress_.ClearToEmpty();
}
inline const std::string& MsgForceTransfer::transfertoaddress() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferToAddress)
  return _internal_transfertoaddress();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgForceTransfer::set_transfertoaddress(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfertoaddress_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferToAddress)
}
inline std::string* MsgForceTransfer::mutable_transfertoaddress() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transfertoaddress();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferToAddress)
  return _s;
}
inline const std::string& MsgForceTransfer::_internal_transfertoaddress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transfertoaddress_.Get();
}
inline void MsgForceTransfer::_internal_set_transfertoaddress(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfertoaddress_.Set(value, GetArena());
}
inline std::string* MsgForceTransfer::_internal_mutable_transfertoaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.transfertoaddress_.Mutable( GetArena());
}
inline std::string* MsgForceTransfer::release_transfertoaddress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferToAddress)
  return _impl_.transfertoaddress_.Release();
}
inline void MsgForceTransfer::set_allocated_transfertoaddress(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transfertoaddress_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transfertoaddress_.IsDefault()) {
    _impl_.transfertoaddress_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgForceTransfer.transferToAddress)
}

// -------------------------------------------------------------------

// MsgForceTransferResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:osmosis.tokenfactory.v1beta1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgUpdateParams.authority)
}

// .osmosis.tokenfactory.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::osmosis::tokenfactory::v1beta1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::osmosis::tokenfactory::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::osmosis::tokenfactory::v1beta1::Params&>(::osmosis::tokenfactory::v1beta1::_Params_default_instance_);
}
inline const ::osmosis::tokenfactory::v1beta1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:osmosis.tokenfactory.v1beta1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::osmosis::tokenfactory::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::osmosis::tokenfactory::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:osmosis.tokenfactory.v1beta1.MsgUpdateParams.params)
}
inline ::osmosis::tokenfactory::v1beta1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osmosis::tokenfactory::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::osmosis::tokenfactory::v1beta1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:osmosis.tokenfactory.v1beta1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::osmosis::tokenfactory::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::osmosis::tokenfactory::v1beta1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::osmosis::tokenfactory::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::osmosis::tokenfactory::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::osmosis::tokenfactory::v1beta1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::osmosis::tokenfactory::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:osmosis.tokenfactory.v1beta1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::osmosis::tokenfactory::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::osmosis::tokenfactory::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:osmosis.tokenfactory.v1beta1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // osmosis_2ftokenfactory_2fv1beta1_2ftx_2eproto_2epb_2eh
