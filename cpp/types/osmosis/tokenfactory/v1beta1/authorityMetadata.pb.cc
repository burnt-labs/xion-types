// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/authorityMetadata.proto
// Protobuf C++ Version: 5.29.4

#include "osmosis/tokenfactory/v1beta1/authorityMetadata.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {

inline constexpr DenomAuthorityMetadata::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DenomAuthorityMetadata::DenomAuthorityMetadata(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DenomAuthorityMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DenomAuthorityMetadataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DenomAuthorityMetadataDefaultTypeInternal() {}
  union {
    DenomAuthorityMetadata _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DenomAuthorityMetadataDefaultTypeInternal _DenomAuthorityMetadata_default_instance_;
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto = nullptr;
const ::uint32_t
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata, _impl_.admin_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::osmosis::tokenfactory::v1beta1::_DenomAuthorityMetadata_default_instance_._instance,
};
const char descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n4osmosis/tokenfactory/v1beta1/authority"
    "Metadata.proto\022\034osmosis.tokenfactory.v1b"
    "eta1\032\024gogoproto/gogo.proto\032\036cosmos/base/"
    "v1beta1/coin.proto\"F\n\026DenomAuthorityMeta"
    "data\022&\n\005admin\030\001 \001(\tB\020\362\336\037\014yaml:\"admin\"R\005a"
    "dmin:\004\350\240\037\001BCZAgithub.com/strangelove-ven"
    "tures/tokenfactory/x/tokenfactory/typesb"
    "\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto_deps[2] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto = {
    false,
    false,
    287,
    descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto,
    "osmosis/tokenfactory/v1beta1/authorityMetadata.proto",
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto_once,
    descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto::offsets,
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto,
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto,
};
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {
// ===================================================================

class DenomAuthorityMetadata::_Internal {
 public:
};

DenomAuthorityMetadata::DenomAuthorityMetadata(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
}
inline PROTOBUF_NDEBUG_INLINE DenomAuthorityMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata& from_msg)
      : admin_(arena, from.admin_),
        _cached_size_{0} {}

DenomAuthorityMetadata::DenomAuthorityMetadata(
    ::google::protobuf::Arena* arena,
    const DenomAuthorityMetadata& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DenomAuthorityMetadata* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
}
inline PROTOBUF_NDEBUG_INLINE DenomAuthorityMetadata::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : admin_(arena),
        _cached_size_{0} {}

inline void DenomAuthorityMetadata::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DenomAuthorityMetadata::~DenomAuthorityMetadata() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
  SharedDtor(*this);
}
inline void DenomAuthorityMetadata::SharedDtor(MessageLite& self) {
  DenomAuthorityMetadata& this_ = static_cast<DenomAuthorityMetadata&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.admin_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DenomAuthorityMetadata::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DenomAuthorityMetadata(arena);
}
constexpr auto DenomAuthorityMetadata::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DenomAuthorityMetadata),
                                            alignof(DenomAuthorityMetadata));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DenomAuthorityMetadata::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DenomAuthorityMetadata_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DenomAuthorityMetadata::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DenomAuthorityMetadata>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DenomAuthorityMetadata::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DenomAuthorityMetadata>(), &DenomAuthorityMetadata::ByteSizeLong,
            &DenomAuthorityMetadata::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DenomAuthorityMetadata, _impl_._cached_size_),
        false,
    },
    &DenomAuthorityMetadata::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DenomAuthorityMetadata::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 65, 2> DenomAuthorityMetadata::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DenomAuthorityMetadata, _impl_.admin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
    {PROTOBUF_FIELD_OFFSET(DenomAuthorityMetadata, _impl_.admin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\5\0\0\0\0\0\0"
    "osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata"
    "admin"
  }},
};

PROTOBUF_NOINLINE void DenomAuthorityMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DenomAuthorityMetadata::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DenomAuthorityMetadata& this_ = static_cast<const DenomAuthorityMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DenomAuthorityMetadata::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DenomAuthorityMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata.admin");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DenomAuthorityMetadata::ByteSizeLong(const MessageLite& base) {
          const DenomAuthorityMetadata& this_ = static_cast<const DenomAuthorityMetadata&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DenomAuthorityMetadata::ByteSizeLong() const {
          const DenomAuthorityMetadata& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DenomAuthorityMetadata::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DenomAuthorityMetadata*>(&to_msg);
  auto& from = static_cast<const DenomAuthorityMetadata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DenomAuthorityMetadata::CopyFrom(const DenomAuthorityMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DenomAuthorityMetadata::InternalSwap(DenomAuthorityMetadata* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
}

::google::protobuf::Metadata DenomAuthorityMetadata::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
