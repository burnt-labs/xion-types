// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/params.proto
// Protobuf C++ Version: 5.29.4

#include "osmosis/tokenfactory/v1beta1/params.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : denom_creation_fee_{},
        denom_creation_gas_consume_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto = nullptr;
const ::uint32_t
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::Params, _impl_.denom_creation_fee_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::Params, _impl_.denom_creation_gas_consume_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::Params)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::osmosis::tokenfactory::v1beta1::_Params_default_instance_._instance,
};
const char descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n)osmosis/tokenfactory/v1beta1/params.pr"
    "oto\022\034osmosis.tokenfactory.v1beta1\032\024gogop"
    "roto/gogo.proto\0324osmosis/tokenfactory/v1"
    "beta1/authorityMetadata.proto\032\031cosmos_pr"
    "oto/cosmos.proto\032\036cosmos/base/v1beta1/co"
    "in.proto\"\211\002\n\006Params\022\226\001\n\022denom_creation_f"
    "ee\030\001 \003(\0132\031.cosmos.base.v1beta1.CoinBM\310\336\037"
    "\000\362\336\037\031yaml:\"denom_creation_fee\"\252\337\037(github"
    ".com/cosmos/cosmos-sdk/types.CoinsR\020deno"
    "mCreationFee\022f\n\032denom_creation_gas_consu"
    "me\030\002 \001(\004B)\310\336\037\001\362\336\037!yaml:\"denom_creation_g"
    "as_consume\"R\027denomCreationGasConsumeBCZA"
    "github.com/strangelove-ventures/tokenfac"
    "tory/x/tokenfactory/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto_deps[4] =
    {
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto,
};
static ::absl::once_flag descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto = {
    false,
    false,
    553,
    descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto,
    "osmosis/tokenfactory/v1beta1/params.proto",
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto_once,
    descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto_deps,
    4,
    1,
    schemas,
    file_default_instances,
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto::offsets,
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto,
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto,
};
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {
// ===================================================================

class Params::_Internal {
 public:
};

void Params::clear_denom_creation_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.denom_creation_fee_.Clear();
}
Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::Params& from_msg)
      : denom_creation_fee_{visibility, arena, from.denom_creation_fee_},
        _cached_size_{0} {}

Params::Params(
    ::google::protobuf::Arena* arena,
    const Params& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Params* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.denom_creation_gas_consume_ = from._impl_.denom_creation_gas_consume_;

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : denom_creation_fee_{visibility, arena},
        _cached_size_{0} {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.denom_creation_gas_consume_ = {};
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Params, _impl_.denom_creation_fee_) +
          decltype(Params::_impl_.denom_creation_fee_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Params), alignof(Params), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Params::PlacementNew_,
                                 sizeof(Params),
                                 alignof(Params));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Params::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 denom_creation_gas_consume = 2 [json_name = "denomCreationGasConsume", (.gogoproto.nullable) = true, (.gogoproto.moretags) = "yaml:\"denom_creation_gas_consume\""];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.denom_creation_gas_consume_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.denom_creation_gas_consume_)}},
    // repeated .cosmos.base.v1beta1.Coin denom_creation_fee = 1 [json_name = "denomCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"denom_creation_fee\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.denom_creation_fee_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.Coin denom_creation_fee = 1 [json_name = "denomCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"denom_creation_fee\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.denom_creation_fee_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 denom_creation_gas_consume = 2 [json_name = "denomCreationGasConsume", (.gogoproto.nullable) = true, (.gogoproto.moretags) = "yaml:\"denom_creation_gas_consume\""];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.denom_creation_gas_consume_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denom_creation_fee_.Clear();
  _impl_.denom_creation_gas_consume_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.Coin denom_creation_fee = 1 [json_name = "denomCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"denom_creation_fee\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_denom_creation_fee_size());
               i < n; i++) {
            const auto& repfield = this_._internal_denom_creation_fee().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // uint64 denom_creation_gas_consume = 2 [json_name = "denomCreationGasConsume", (.gogoproto.nullable) = true, (.gogoproto.moretags) = "yaml:\"denom_creation_gas_consume\""];
          if (this_._internal_denom_creation_gas_consume() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_denom_creation_gas_consume(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin denom_creation_fee = 1 [json_name = "denomCreationFee", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"denom_creation_fee\"", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
            {
              total_size += 1UL * this_._internal_denom_creation_fee_size();
              for (const auto& msg : this_._internal_denom_creation_fee()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 denom_creation_gas_consume = 2 [json_name = "denomCreationGasConsume", (.gogoproto.nullable) = true, (.gogoproto.moretags) = "yaml:\"denom_creation_gas_consume\""];
            if (this_._internal_denom_creation_gas_consume() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_denom_creation_gas_consume());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_denom_creation_fee()->MergeFrom(
      from._internal_denom_creation_fee());
  if (from._internal_denom_creation_gas_consume() != 0) {
    _this->_impl_.denom_creation_gas_consume_ = from._impl_.denom_creation_gas_consume_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.denom_creation_fee_.InternalSwap(&other->_impl_.denom_creation_fee_);
        swap(_impl_.denom_creation_gas_consume_, other->_impl_.denom_creation_gas_consume_);
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
