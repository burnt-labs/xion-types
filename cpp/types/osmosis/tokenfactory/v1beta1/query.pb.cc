// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: osmosis/tokenfactory/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#include "osmosis/tokenfactory/v1beta1/query.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {
              template <typename>
PROTOBUF_CONSTEXPR QueryParamsRequest::QueryParamsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct QueryParamsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsRequestDefaultTypeInternal() {}
  union {
    QueryParamsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;

inline constexpr QueryDenomsFromCreatorResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : denoms_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDenomsFromCreatorResponse::QueryDenomsFromCreatorResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryDenomsFromCreatorResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomsFromCreatorResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomsFromCreatorResponseDefaultTypeInternal() {}
  union {
    QueryDenomsFromCreatorResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomsFromCreatorResponseDefaultTypeInternal _QueryDenomsFromCreatorResponse_default_instance_;

inline constexpr QueryDenomsFromCreatorRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : creator_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDenomsFromCreatorRequest::QueryDenomsFromCreatorRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryDenomsFromCreatorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomsFromCreatorRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomsFromCreatorRequestDefaultTypeInternal() {}
  union {
    QueryDenomsFromCreatorRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomsFromCreatorRequestDefaultTypeInternal _QueryDenomsFromCreatorRequest_default_instance_;

inline constexpr QueryDenomsFromAdminResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : denoms_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDenomsFromAdminResponse::QueryDenomsFromAdminResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryDenomsFromAdminResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomsFromAdminResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomsFromAdminResponseDefaultTypeInternal() {}
  union {
    QueryDenomsFromAdminResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomsFromAdminResponseDefaultTypeInternal _QueryDenomsFromAdminResponse_default_instance_;

inline constexpr QueryDenomsFromAdminRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : admin_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDenomsFromAdminRequest::QueryDenomsFromAdminRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryDenomsFromAdminRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomsFromAdminRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomsFromAdminRequestDefaultTypeInternal() {}
  union {
    QueryDenomsFromAdminRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomsFromAdminRequestDefaultTypeInternal _QueryDenomsFromAdminRequest_default_instance_;

inline constexpr QueryDenomAuthorityMetadataRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : denom_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDenomAuthorityMetadataRequest::QueryDenomAuthorityMetadataRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryDenomAuthorityMetadataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomAuthorityMetadataRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomAuthorityMetadataRequestDefaultTypeInternal() {}
  union {
    QueryDenomAuthorityMetadataRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomAuthorityMetadataRequestDefaultTypeInternal _QueryDenomAuthorityMetadataRequest_default_instance_;

inline constexpr QueryDenomAuthorityMetadataResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        authority_metadata_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryDenomAuthorityMetadataResponse::QueryDenomAuthorityMetadataResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryDenomAuthorityMetadataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryDenomAuthorityMetadataResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryDenomAuthorityMetadataResponseDefaultTypeInternal() {}
  union {
    QueryDenomAuthorityMetadataResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryDenomAuthorityMetadataResponseDefaultTypeInternal _QueryDenomAuthorityMetadataResponse_default_instance_;

inline constexpr QueryParamsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR QueryParamsResponse::QueryParamsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QueryParamsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QueryParamsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QueryParamsResponseDefaultTypeInternal() {}
  union {
    QueryParamsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto = nullptr;
const ::uint32_t
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryParamsRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryParamsResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryParamsResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryParamsResponse, _impl_.params_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataRequest, _impl_.denom_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataResponse, _impl_.authority_metadata_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorRequest, _impl_.creator_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorResponse, _impl_.denoms_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminRequest, _impl_.admin_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminResponse, _impl_.denoms_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryParamsRequest)},
        {8, 17, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryParamsResponse)},
        {18, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataRequest)},
        {27, 36, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataResponse)},
        {37, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorRequest)},
        {46, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorResponse)},
        {55, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminRequest)},
        {64, -1, -1, sizeof(::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::osmosis::tokenfactory::v1beta1::_QueryParamsRequest_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_QueryParamsResponse_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_QueryDenomAuthorityMetadataRequest_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_QueryDenomAuthorityMetadataResponse_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_QueryDenomsFromCreatorRequest_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_QueryDenomsFromCreatorResponse_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_QueryDenomsFromAdminRequest_default_instance_._instance,
    &::osmosis::tokenfactory::v1beta1::_QueryDenomsFromAdminResponse_default_instance_._instance,
};
const char descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n(osmosis/tokenfactory/v1beta1/query.pro"
    "to\022\034osmosis.tokenfactory.v1beta1\032\024gogopr"
    "oto/gogo.proto\032\034google/api/annotations.p"
    "roto\032*cosmos/base/query/v1beta1/paginati"
    "on.proto\0324osmosis/tokenfactory/v1beta1/a"
    "uthorityMetadata.proto\032)osmosis/tokenfac"
    "tory/v1beta1/params.proto\"\024\n\022QueryParams"
    "Request\"Y\n\023QueryParamsResponse\022B\n\006params"
    "\030\001 \001(\0132$.osmosis.tokenfactory.v1beta1.Pa"
    "ramsB\004\310\336\037\000R\006params\"L\n\"QueryDenomAuthorit"
    "yMetadataRequest\022&\n\005denom\030\001 \001(\tB\020\362\336\037\014yam"
    "l:\"denom\"R\005denom\"\256\001\n#QueryDenomAuthority"
    "MetadataResponse\022\206\001\n\022authority_metadata\030"
    "\001 \001(\01324.osmosis.tokenfactory.v1beta1.Den"
    "omAuthorityMetadataB!\310\336\037\000\362\336\037\031yaml:\"autho"
    "rity_metadata\"R\021authorityMetadata\"M\n\035Que"
    "ryDenomsFromCreatorRequest\022,\n\007creator\030\001 "
    "\001(\tB\022\362\336\037\016yaml:\"creator\"R\007creator\"K\n\036Quer"
    "yDenomsFromCreatorResponse\022)\n\006denoms\030\001 \003"
    "(\tB\021\362\336\037\ryaml:\"denoms\"R\006denoms\"E\n\033QueryDe"
    "nomsFromAdminRequest\022&\n\005admin\030\001 \001(\tB\020\362\336\037"
    "\014yaml:\"admin\"R\005admin\"I\n\034QueryDenomsFromA"
    "dminResponse\022)\n\006denoms\030\001 \003(\tB\021\362\336\037\ryaml:\""
    "denoms\"R\006denoms2\260\006\n\005Query\022\233\001\n\006Params\0220.o"
    "smosis.tokenfactory.v1beta1.QueryParamsR"
    "equest\0321.osmosis.tokenfactory.v1beta1.Qu"
    "eryParamsResponse\",\202\323\344\223\002&\022$/osmosis/toke"
    "nfactory/v1beta1/params\022\346\001\n\026DenomAuthori"
    "tyMetadata\022@.osmosis.tokenfactory.v1beta"
    "1.QueryDenomAuthorityMetadataRequest\032A.o"
    "smosis.tokenfactory.v1beta1.QueryDenomAu"
    "thorityMetadataResponse\"G\202\323\344\223\002A\022\?/osmosi"
    "s/tokenfactory/v1beta1/denoms/{denom}/au"
    "thority_metadata\022\323\001\n\021DenomsFromCreator\022;"
    ".osmosis.tokenfactory.v1beta1.QueryDenom"
    "sFromCreatorRequest\032<.osmosis.tokenfacto"
    "ry.v1beta1.QueryDenomsFromCreatorRespons"
    "e\"C\202\323\344\223\002=\022;/osmosis/tokenfactory/v1beta1"
    "/denoms_from_creator/{creator}\022\311\001\n\017Denom"
    "sFromAdmin\0229.osmosis.tokenfactory.v1beta"
    "1.QueryDenomsFromAdminRequest\032:.osmosis."
    "tokenfactory.v1beta1.QueryDenomsFromAdmi"
    "nResponse\"\?\202\323\344\223\0029\0227/osmosis/tokenfactory"
    "/v1beta1/denoms_from_admin/{admin}BCZAgi"
    "thub.com/strangelove-ventures/tokenfacto"
    "ry/x/tokenfactory/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_2fbase_2fquery_2fv1beta1_2fpagination_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fauthorityMetadata_2eproto,
        &::descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fparams_2eproto,
};
static ::absl::once_flag descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto = {
    false,
    false,
    1831,
    descriptor_table_protodef_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    "osmosis/tokenfactory/v1beta1/query.proto",
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto_once,
    descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto_deps,
    5,
    8,
    schemas,
    file_default_instances,
    TableStruct_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto::offsets,
    file_level_enum_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    file_level_service_descriptors_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
};
namespace osmosis {
namespace tokenfactory {
namespace v1beta1 {
// ===================================================================

class QueryParamsRequest::_Internal {
 public:
};

QueryParamsRequest::QueryParamsRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryParamsRequest)
}
QueryParamsRequest::QueryParamsRequest(
    ::google::protobuf::Arena* arena,
    const QueryParamsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryParamsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryParamsRequest)
}

inline void* QueryParamsRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryParamsRequest(arena);
}
constexpr auto QueryParamsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryParamsRequest),
                                            alignof(QueryParamsRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryParamsRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryParamsRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryParamsRequest::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<QueryParamsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryParamsRequest::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<QueryParamsRequest>(), &QueryParamsRequest::ByteSizeLong,
            &QueryParamsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryParamsRequest, _impl_._cached_size_),
        false,
    },
    &QueryParamsRequest::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryParamsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> QueryParamsRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryParamsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata QueryParamsRequest::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryParamsResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryParamsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_);
};

void QueryParamsResponse::clear_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryParamsResponse::QueryParamsResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryParamsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::QueryParamsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryParamsResponse::QueryParamsResponse(
    ::google::protobuf::Arena* arena,
    const QueryParamsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryParamsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::Params>(
                              arena, *from._impl_.params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryParamsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryParamsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.params_ = {};
}
QueryParamsResponse::~QueryParamsResponse() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
  SharedDtor(*this);
}
inline void QueryParamsResponse::SharedDtor(MessageLite& self) {
  QueryParamsResponse& this_ = static_cast<QueryParamsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.params_;
  this_._impl_.~Impl_();
}

inline void* QueryParamsResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryParamsResponse(arena);
}
constexpr auto QueryParamsResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryParamsResponse),
                                            alignof(QueryParamsResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryParamsResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryParamsResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryParamsResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryParamsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryParamsResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryParamsResponse>(), &QueryParamsResponse::ByteSizeLong,
            &QueryParamsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._cached_size_),
        false,
    },
    &QueryParamsResponse::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryParamsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryParamsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryParamsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_.params_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(QueryParamsResponse, _impl_.params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::Params>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryParamsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryParamsResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryParamsResponse& this_ = static_cast<const QueryParamsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryParamsResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryParamsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.params_, this_._impl_.params_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryParamsResponse::ByteSizeLong(const MessageLite& base) {
          const QueryParamsResponse& this_ = static_cast<const QueryParamsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryParamsResponse::ByteSizeLong() const {
          const QueryParamsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .osmosis.tokenfactory.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.params_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryParamsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryParamsResponse*>(&to_msg);
  auto& from = static_cast<const QueryParamsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.params_ != nullptr);
    if (_this->_impl_.params_ == nullptr) {
      _this->_impl_.params_ =
          ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::Params>(arena, *from._impl_.params_);
    } else {
      _this->_impl_.params_->MergeFrom(*from._impl_.params_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryParamsResponse::CopyFrom(const QueryParamsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.QueryParamsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryParamsResponse::InternalSwap(QueryParamsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.params_, other->_impl_.params_);
}

::google::protobuf::Metadata QueryParamsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryDenomAuthorityMetadataRequest::_Internal {
 public:
};

QueryDenomAuthorityMetadataRequest::QueryDenomAuthorityMetadataRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomAuthorityMetadataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataRequest& from_msg)
      : denom_(arena, from.denom_),
        _cached_size_{0} {}

QueryDenomAuthorityMetadataRequest::QueryDenomAuthorityMetadataRequest(
    ::google::protobuf::Arena* arena,
    const QueryDenomAuthorityMetadataRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryDenomAuthorityMetadataRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomAuthorityMetadataRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : denom_(arena),
        _cached_size_{0} {}

inline void QueryDenomAuthorityMetadataRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryDenomAuthorityMetadataRequest::~QueryDenomAuthorityMetadataRequest() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
  SharedDtor(*this);
}
inline void QueryDenomAuthorityMetadataRequest::SharedDtor(MessageLite& self) {
  QueryDenomAuthorityMetadataRequest& this_ = static_cast<QueryDenomAuthorityMetadataRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.denom_.Destroy();
  this_._impl_.~Impl_();
}

inline void* QueryDenomAuthorityMetadataRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryDenomAuthorityMetadataRequest(arena);
}
constexpr auto QueryDenomAuthorityMetadataRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryDenomAuthorityMetadataRequest),
                                            alignof(QueryDenomAuthorityMetadataRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryDenomAuthorityMetadataRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryDenomAuthorityMetadataRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryDenomAuthorityMetadataRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryDenomAuthorityMetadataRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryDenomAuthorityMetadataRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryDenomAuthorityMetadataRequest>(), &QueryDenomAuthorityMetadataRequest::ByteSizeLong,
            &QueryDenomAuthorityMetadataRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataRequest, _impl_._cached_size_),
        false,
    },
    &QueryDenomAuthorityMetadataRequest::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryDenomAuthorityMetadataRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 77, 2> QueryDenomAuthorityMetadataRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataRequest, _impl_.denom_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
    {PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataRequest, _impl_.denom_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\77\5\0\0\0\0\0\0"
    "osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest"
    "denom"
  }},
};

PROTOBUF_NOINLINE void QueryDenomAuthorityMetadataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denom_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryDenomAuthorityMetadataRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryDenomAuthorityMetadataRequest& this_ = static_cast<const QueryDenomAuthorityMetadataRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryDenomAuthorityMetadataRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryDenomAuthorityMetadataRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
          if (!this_._internal_denom().empty()) {
            const std::string& _s = this_._internal_denom();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest.denom");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryDenomAuthorityMetadataRequest::ByteSizeLong(const MessageLite& base) {
          const QueryDenomAuthorityMetadataRequest& this_ = static_cast<const QueryDenomAuthorityMetadataRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryDenomAuthorityMetadataRequest::ByteSizeLong() const {
          const QueryDenomAuthorityMetadataRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string denom = 1 [json_name = "denom", (.gogoproto.moretags) = "yaml:\"denom\""];
            if (!this_._internal_denom().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_denom());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryDenomAuthorityMetadataRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryDenomAuthorityMetadataRequest*>(&to_msg);
  auto& from = static_cast<const QueryDenomAuthorityMetadataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_denom().empty()) {
    _this->_internal_set_denom(from._internal_denom());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomAuthorityMetadataRequest::CopyFrom(const QueryDenomAuthorityMetadataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryDenomAuthorityMetadataRequest::InternalSwap(QueryDenomAuthorityMetadataRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.denom_, &other->_impl_.denom_, arena);
}

::google::protobuf::Metadata QueryDenomAuthorityMetadataRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryDenomAuthorityMetadataResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<QueryDenomAuthorityMetadataResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataResponse, _impl_._has_bits_);
};

void QueryDenomAuthorityMetadataResponse::clear_authority_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authority_metadata_ != nullptr) _impl_.authority_metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
QueryDenomAuthorityMetadataResponse::QueryDenomAuthorityMetadataResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomAuthorityMetadataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

QueryDenomAuthorityMetadataResponse::QueryDenomAuthorityMetadataResponse(
    ::google::protobuf::Arena* arena,
    const QueryDenomAuthorityMetadataResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryDenomAuthorityMetadataResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.authority_metadata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata>(
                              arena, *from._impl_.authority_metadata_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomAuthorityMetadataResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void QueryDenomAuthorityMetadataResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.authority_metadata_ = {};
}
QueryDenomAuthorityMetadataResponse::~QueryDenomAuthorityMetadataResponse() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
  SharedDtor(*this);
}
inline void QueryDenomAuthorityMetadataResponse::SharedDtor(MessageLite& self) {
  QueryDenomAuthorityMetadataResponse& this_ = static_cast<QueryDenomAuthorityMetadataResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.authority_metadata_;
  this_._impl_.~Impl_();
}

inline void* QueryDenomAuthorityMetadataResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryDenomAuthorityMetadataResponse(arena);
}
constexpr auto QueryDenomAuthorityMetadataResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(QueryDenomAuthorityMetadataResponse),
                                            alignof(QueryDenomAuthorityMetadataResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryDenomAuthorityMetadataResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryDenomAuthorityMetadataResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryDenomAuthorityMetadataResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryDenomAuthorityMetadataResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryDenomAuthorityMetadataResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryDenomAuthorityMetadataResponse>(), &QueryDenomAuthorityMetadataResponse::ByteSizeLong,
            &QueryDenomAuthorityMetadataResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataResponse, _impl_._cached_size_),
        false,
    },
    &QueryDenomAuthorityMetadataResponse::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryDenomAuthorityMetadataResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> QueryDenomAuthorityMetadataResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryDenomAuthorityMetadataResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 1 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataResponse, _impl_.authority_metadata_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 1 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
    {PROTOBUF_FIELD_OFFSET(QueryDenomAuthorityMetadataResponse, _impl_.authority_metadata_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void QueryDenomAuthorityMetadataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.authority_metadata_ != nullptr);
    _impl_.authority_metadata_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryDenomAuthorityMetadataResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryDenomAuthorityMetadataResponse& this_ = static_cast<const QueryDenomAuthorityMetadataResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryDenomAuthorityMetadataResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryDenomAuthorityMetadataResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 1 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.authority_metadata_, this_._impl_.authority_metadata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryDenomAuthorityMetadataResponse::ByteSizeLong(const MessageLite& base) {
          const QueryDenomAuthorityMetadataResponse& this_ = static_cast<const QueryDenomAuthorityMetadataResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryDenomAuthorityMetadataResponse::ByteSizeLong() const {
          const QueryDenomAuthorityMetadataResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata authority_metadata = 1 [json_name = "authorityMetadata", (.gogoproto.nullable) = false, (.gogoproto.moretags) = "yaml:\"authority_metadata\""];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.authority_metadata_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryDenomAuthorityMetadataResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryDenomAuthorityMetadataResponse*>(&to_msg);
  auto& from = static_cast<const QueryDenomAuthorityMetadataResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.authority_metadata_ != nullptr);
    if (_this->_impl_.authority_metadata_ == nullptr) {
      _this->_impl_.authority_metadata_ =
          ::google::protobuf::Message::CopyConstruct<::osmosis::tokenfactory::v1beta1::DenomAuthorityMetadata>(arena, *from._impl_.authority_metadata_);
    } else {
      _this->_impl_.authority_metadata_->MergeFrom(*from._impl_.authority_metadata_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomAuthorityMetadataResponse::CopyFrom(const QueryDenomAuthorityMetadataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryDenomAuthorityMetadataResponse::InternalSwap(QueryDenomAuthorityMetadataResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.authority_metadata_, other->_impl_.authority_metadata_);
}

::google::protobuf::Metadata QueryDenomAuthorityMetadataResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryDenomsFromCreatorRequest::_Internal {
 public:
};

QueryDenomsFromCreatorRequest::QueryDenomsFromCreatorRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromCreatorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorRequest& from_msg)
      : creator_(arena, from.creator_),
        _cached_size_{0} {}

QueryDenomsFromCreatorRequest::QueryDenomsFromCreatorRequest(
    ::google::protobuf::Arena* arena,
    const QueryDenomsFromCreatorRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryDenomsFromCreatorRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromCreatorRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : creator_(arena),
        _cached_size_{0} {}

inline void QueryDenomsFromCreatorRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryDenomsFromCreatorRequest::~QueryDenomsFromCreatorRequest() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
  SharedDtor(*this);
}
inline void QueryDenomsFromCreatorRequest::SharedDtor(MessageLite& self) {
  QueryDenomsFromCreatorRequest& this_ = static_cast<QueryDenomsFromCreatorRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.creator_.Destroy();
  this_._impl_.~Impl_();
}

inline void* QueryDenomsFromCreatorRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryDenomsFromCreatorRequest(arena);
}
constexpr auto QueryDenomsFromCreatorRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryDenomsFromCreatorRequest),
                                            alignof(QueryDenomsFromCreatorRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryDenomsFromCreatorRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryDenomsFromCreatorRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryDenomsFromCreatorRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryDenomsFromCreatorRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryDenomsFromCreatorRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryDenomsFromCreatorRequest>(), &QueryDenomsFromCreatorRequest::ByteSizeLong,
            &QueryDenomsFromCreatorRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryDenomsFromCreatorRequest, _impl_._cached_size_),
        false,
    },
    &QueryDenomsFromCreatorRequest::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryDenomsFromCreatorRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 74, 2> QueryDenomsFromCreatorRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string creator = 1 [json_name = "creator", (.gogoproto.moretags) = "yaml:\"creator\""];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryDenomsFromCreatorRequest, _impl_.creator_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string creator = 1 [json_name = "creator", (.gogoproto.moretags) = "yaml:\"creator\""];
    {PROTOBUF_FIELD_OFFSET(QueryDenomsFromCreatorRequest, _impl_.creator_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\72\7\0\0\0\0\0\0"
    "osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest"
    "creator"
  }},
};

PROTOBUF_NOINLINE void QueryDenomsFromCreatorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.creator_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryDenomsFromCreatorRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryDenomsFromCreatorRequest& this_ = static_cast<const QueryDenomsFromCreatorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryDenomsFromCreatorRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryDenomsFromCreatorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string creator = 1 [json_name = "creator", (.gogoproto.moretags) = "yaml:\"creator\""];
          if (!this_._internal_creator().empty()) {
            const std::string& _s = this_._internal_creator();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest.creator");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryDenomsFromCreatorRequest::ByteSizeLong(const MessageLite& base) {
          const QueryDenomsFromCreatorRequest& this_ = static_cast<const QueryDenomsFromCreatorRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryDenomsFromCreatorRequest::ByteSizeLong() const {
          const QueryDenomsFromCreatorRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string creator = 1 [json_name = "creator", (.gogoproto.moretags) = "yaml:\"creator\""];
            if (!this_._internal_creator().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_creator());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryDenomsFromCreatorRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryDenomsFromCreatorRequest*>(&to_msg);
  auto& from = static_cast<const QueryDenomsFromCreatorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomsFromCreatorRequest::CopyFrom(const QueryDenomsFromCreatorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryDenomsFromCreatorRequest::InternalSwap(QueryDenomsFromCreatorRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.creator_, &other->_impl_.creator_, arena);
}

::google::protobuf::Metadata QueryDenomsFromCreatorRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryDenomsFromCreatorResponse::_Internal {
 public:
};

QueryDenomsFromCreatorResponse::QueryDenomsFromCreatorResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromCreatorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorResponse& from_msg)
      : denoms_{visibility, arena, from.denoms_},
        _cached_size_{0} {}

QueryDenomsFromCreatorResponse::QueryDenomsFromCreatorResponse(
    ::google::protobuf::Arena* arena,
    const QueryDenomsFromCreatorResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryDenomsFromCreatorResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromCreatorResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : denoms_{visibility, arena},
        _cached_size_{0} {}

inline void QueryDenomsFromCreatorResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryDenomsFromCreatorResponse::~QueryDenomsFromCreatorResponse() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
  SharedDtor(*this);
}
inline void QueryDenomsFromCreatorResponse::SharedDtor(MessageLite& self) {
  QueryDenomsFromCreatorResponse& this_ = static_cast<QueryDenomsFromCreatorResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* QueryDenomsFromCreatorResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryDenomsFromCreatorResponse(arena);
}
constexpr auto QueryDenomsFromCreatorResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryDenomsFromCreatorResponse, _impl_.denoms_) +
          decltype(QueryDenomsFromCreatorResponse::_impl_.denoms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryDenomsFromCreatorResponse), alignof(QueryDenomsFromCreatorResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryDenomsFromCreatorResponse::PlacementNew_,
                                 sizeof(QueryDenomsFromCreatorResponse),
                                 alignof(QueryDenomsFromCreatorResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryDenomsFromCreatorResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryDenomsFromCreatorResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryDenomsFromCreatorResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryDenomsFromCreatorResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryDenomsFromCreatorResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryDenomsFromCreatorResponse>(), &QueryDenomsFromCreatorResponse::ByteSizeLong,
            &QueryDenomsFromCreatorResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryDenomsFromCreatorResponse, _impl_._cached_size_),
        false,
    },
    &QueryDenomsFromCreatorResponse::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryDenomsFromCreatorResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 74, 2> QueryDenomsFromCreatorResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryDenomsFromCreatorResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryDenomsFromCreatorResponse, _impl_.denoms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
    {PROTOBUF_FIELD_OFFSET(QueryDenomsFromCreatorResponse, _impl_.denoms_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\73\6\0\0\0\0\0\0"
    "osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse"
    "denoms"
  }},
};

PROTOBUF_NOINLINE void QueryDenomsFromCreatorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denoms_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryDenomsFromCreatorResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryDenomsFromCreatorResponse& this_ = static_cast<const QueryDenomsFromCreatorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryDenomsFromCreatorResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryDenomsFromCreatorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
          for (int i = 0, n = this_._internal_denoms_size(); i < n; ++i) {
            const auto& s = this_._internal_denoms().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse.denoms");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryDenomsFromCreatorResponse::ByteSizeLong(const MessageLite& base) {
          const QueryDenomsFromCreatorResponse& this_ = static_cast<const QueryDenomsFromCreatorResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryDenomsFromCreatorResponse::ByteSizeLong() const {
          const QueryDenomsFromCreatorResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_denoms().size());
              for (int i = 0, n = this_._internal_denoms().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_denoms().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryDenomsFromCreatorResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryDenomsFromCreatorResponse*>(&to_msg);
  auto& from = static_cast<const QueryDenomsFromCreatorResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_denoms()->MergeFrom(from._internal_denoms());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomsFromCreatorResponse::CopyFrom(const QueryDenomsFromCreatorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryDenomsFromCreatorResponse::InternalSwap(QueryDenomsFromCreatorResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.denoms_.InternalSwap(&other->_impl_.denoms_);
}

::google::protobuf::Metadata QueryDenomsFromCreatorResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryDenomsFromAdminRequest::_Internal {
 public:
};

QueryDenomsFromAdminRequest::QueryDenomsFromAdminRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromAdminRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminRequest& from_msg)
      : admin_(arena, from.admin_),
        _cached_size_{0} {}

QueryDenomsFromAdminRequest::QueryDenomsFromAdminRequest(
    ::google::protobuf::Arena* arena,
    const QueryDenomsFromAdminRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryDenomsFromAdminRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromAdminRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : admin_(arena),
        _cached_size_{0} {}

inline void QueryDenomsFromAdminRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryDenomsFromAdminRequest::~QueryDenomsFromAdminRequest() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
  SharedDtor(*this);
}
inline void QueryDenomsFromAdminRequest::SharedDtor(MessageLite& self) {
  QueryDenomsFromAdminRequest& this_ = static_cast<QueryDenomsFromAdminRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.admin_.Destroy();
  this_._impl_.~Impl_();
}

inline void* QueryDenomsFromAdminRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryDenomsFromAdminRequest(arena);
}
constexpr auto QueryDenomsFromAdminRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(QueryDenomsFromAdminRequest),
                                            alignof(QueryDenomsFromAdminRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryDenomsFromAdminRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryDenomsFromAdminRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryDenomsFromAdminRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryDenomsFromAdminRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryDenomsFromAdminRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryDenomsFromAdminRequest>(), &QueryDenomsFromAdminRequest::ByteSizeLong,
            &QueryDenomsFromAdminRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryDenomsFromAdminRequest, _impl_._cached_size_),
        false,
    },
    &QueryDenomsFromAdminRequest::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryDenomsFromAdminRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 70, 2> QueryDenomsFromAdminRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryDenomsFromAdminRequest, _impl_.admin_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
    {PROTOBUF_FIELD_OFFSET(QueryDenomsFromAdminRequest, _impl_.admin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\5\0\0\0\0\0\0"
    "osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest"
    "admin"
  }},
};

PROTOBUF_NOINLINE void QueryDenomsFromAdminRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryDenomsFromAdminRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryDenomsFromAdminRequest& this_ = static_cast<const QueryDenomsFromAdminRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryDenomsFromAdminRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryDenomsFromAdminRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
          if (!this_._internal_admin().empty()) {
            const std::string& _s = this_._internal_admin();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest.admin");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryDenomsFromAdminRequest::ByteSizeLong(const MessageLite& base) {
          const QueryDenomsFromAdminRequest& this_ = static_cast<const QueryDenomsFromAdminRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryDenomsFromAdminRequest::ByteSizeLong() const {
          const QueryDenomsFromAdminRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string admin = 1 [json_name = "admin", (.gogoproto.moretags) = "yaml:\"admin\""];
            if (!this_._internal_admin().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_admin());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryDenomsFromAdminRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryDenomsFromAdminRequest*>(&to_msg);
  auto& from = static_cast<const QueryDenomsFromAdminRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin().empty()) {
    _this->_internal_set_admin(from._internal_admin());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomsFromAdminRequest::CopyFrom(const QueryDenomsFromAdminRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryDenomsFromAdminRequest::InternalSwap(QueryDenomsFromAdminRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_, &other->_impl_.admin_, arena);
}

::google::protobuf::Metadata QueryDenomsFromAdminRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class QueryDenomsFromAdminResponse::_Internal {
 public:
};

QueryDenomsFromAdminResponse::QueryDenomsFromAdminResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromAdminResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminResponse& from_msg)
      : denoms_{visibility, arena, from.denoms_},
        _cached_size_{0} {}

QueryDenomsFromAdminResponse::QueryDenomsFromAdminResponse(
    ::google::protobuf::Arena* arena,
    const QueryDenomsFromAdminResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  QueryDenomsFromAdminResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
}
inline PROTOBUF_NDEBUG_INLINE QueryDenomsFromAdminResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : denoms_{visibility, arena},
        _cached_size_{0} {}

inline void QueryDenomsFromAdminResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
QueryDenomsFromAdminResponse::~QueryDenomsFromAdminResponse() {
  // @@protoc_insertion_point(destructor:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
  SharedDtor(*this);
}
inline void QueryDenomsFromAdminResponse::SharedDtor(MessageLite& self) {
  QueryDenomsFromAdminResponse& this_ = static_cast<QueryDenomsFromAdminResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* QueryDenomsFromAdminResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) QueryDenomsFromAdminResponse(arena);
}
constexpr auto QueryDenomsFromAdminResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(QueryDenomsFromAdminResponse, _impl_.denoms_) +
          decltype(QueryDenomsFromAdminResponse::_impl_.denoms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(QueryDenomsFromAdminResponse), alignof(QueryDenomsFromAdminResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&QueryDenomsFromAdminResponse::PlacementNew_,
                                 sizeof(QueryDenomsFromAdminResponse),
                                 alignof(QueryDenomsFromAdminResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull QueryDenomsFromAdminResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_QueryDenomsFromAdminResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &QueryDenomsFromAdminResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<QueryDenomsFromAdminResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &QueryDenomsFromAdminResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<QueryDenomsFromAdminResponse>(), &QueryDenomsFromAdminResponse::ByteSizeLong,
            &QueryDenomsFromAdminResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(QueryDenomsFromAdminResponse, _impl_._cached_size_),
        false,
    },
    &QueryDenomsFromAdminResponse::kDescriptorMethods,
    &descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* QueryDenomsFromAdminResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 72, 2> QueryDenomsFromAdminResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::osmosis::tokenfactory::v1beta1::QueryDenomsFromAdminResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(QueryDenomsFromAdminResponse, _impl_.denoms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
    {PROTOBUF_FIELD_OFFSET(QueryDenomsFromAdminResponse, _impl_.denoms_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\71\6\0\0\0\0\0\0"
    "osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse"
    "denoms"
  }},
};

PROTOBUF_NOINLINE void QueryDenomsFromAdminResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.denoms_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* QueryDenomsFromAdminResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const QueryDenomsFromAdminResponse& this_ = static_cast<const QueryDenomsFromAdminResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* QueryDenomsFromAdminResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const QueryDenomsFromAdminResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
          for (int i = 0, n = this_._internal_denoms_size(); i < n; ++i) {
            const auto& s = this_._internal_denoms().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse.denoms");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t QueryDenomsFromAdminResponse::ByteSizeLong(const MessageLite& base) {
          const QueryDenomsFromAdminResponse& this_ = static_cast<const QueryDenomsFromAdminResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t QueryDenomsFromAdminResponse::ByteSizeLong() const {
          const QueryDenomsFromAdminResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string denoms = 1 [json_name = "denoms", (.gogoproto.moretags) = "yaml:\"denoms\""];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_denoms().size());
              for (int i = 0, n = this_._internal_denoms().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_denoms().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void QueryDenomsFromAdminResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<QueryDenomsFromAdminResponse*>(&to_msg);
  auto& from = static_cast<const QueryDenomsFromAdminResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_denoms()->MergeFrom(from._internal_denoms());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void QueryDenomsFromAdminResponse::CopyFrom(const QueryDenomsFromAdminResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osmosis.tokenfactory.v1beta1.QueryDenomsFromAdminResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void QueryDenomsFromAdminResponse::InternalSwap(QueryDenomsFromAdminResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.denoms_.InternalSwap(&other->_impl_.denoms_);
}

::google::protobuf::Metadata QueryDenomsFromAdminResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tokenfactory
}  // namespace osmosis
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_osmosis_2ftokenfactory_2fv1beta1_2fquery_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
