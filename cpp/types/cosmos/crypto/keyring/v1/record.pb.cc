// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/crypto/keyring/v1/record.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/crypto/keyring/v1/record.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace crypto {
namespace keyring {
namespace v1 {
              template <typename>
PROTOBUF_CONSTEXPR Record_Offline::Record_Offline(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Record_OfflineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Record_OfflineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Record_OfflineDefaultTypeInternal() {}
  union {
    Record_Offline _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Record_OfflineDefaultTypeInternal _Record_Offline_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR Record_Multi::Record_Multi(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Record_MultiDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Record_MultiDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Record_MultiDefaultTypeInternal() {}
  union {
    Record_Multi _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Record_MultiDefaultTypeInternal _Record_Multi_default_instance_;

inline constexpr Record_Local::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        priv_key_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Record_Local::Record_Local(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Record_LocalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Record_LocalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Record_LocalDefaultTypeInternal() {}
  union {
    Record_Local _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Record_LocalDefaultTypeInternal _Record_Local_default_instance_;

inline constexpr Record_Ledger::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        path_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Record_Ledger::Record_Ledger(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Record_LedgerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Record_LedgerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Record_LedgerDefaultTypeInternal() {}
  union {
    Record_Ledger _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Record_LedgerDefaultTypeInternal _Record_Ledger_default_instance_;

inline constexpr Record::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_key_{nullptr},
        item_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Record::Record(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDefaultTypeInternal() {}
  union {
    Record _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDefaultTypeInternal _Record_default_instance_;
}  // namespace v1
}  // namespace keyring
}  // namespace crypto
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Local, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Local, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Local, _impl_.priv_key_),
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Ledger, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Ledger, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Ledger, _impl_.path_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Multi, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record_Offline, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record, _impl_.pub_key_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record, _impl_.item_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::cosmos::crypto::keyring::v1::Record_Local)},
        {10, 19, -1, sizeof(::cosmos::crypto::keyring::v1::Record_Ledger)},
        {20, -1, -1, sizeof(::cosmos::crypto::keyring::v1::Record_Multi)},
        {28, -1, -1, sizeof(::cosmos::crypto::keyring::v1::Record_Offline)},
        {36, 51, -1, sizeof(::cosmos::crypto::keyring::v1::Record)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::crypto::keyring::v1::_Record_Local_default_instance_._instance,
    &::cosmos::crypto::keyring::v1::_Record_Ledger_default_instance_._instance,
    &::cosmos::crypto::keyring::v1::_Record_Multi_default_instance_._instance,
    &::cosmos::crypto::keyring::v1::_Record_Offline_default_instance_._instance,
    &::cosmos::crypto::keyring::v1::_Record_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%cosmos/crypto/keyring/v1/record.proto\022"
    "\030cosmos.crypto.keyring.v1\032\024gogoproto/gog"
    "o.proto\032\031google/protobuf/any.proto\032\034cosm"
    "os/crypto/hd/v1/hd.proto\"\352\003\n\006Record\022\022\n\004n"
    "ame\030\001 \001(\tR\004name\022-\n\007pub_key\030\002 \001(\0132\024.googl"
    "e.protobuf.AnyR\006pubKey\022>\n\005local\030\003 \001(\0132&."
    "cosmos.crypto.keyring.v1.Record.LocalH\000R"
    "\005local\022A\n\006ledger\030\004 \001(\0132\'.cosmos.crypto.k"
    "eyring.v1.Record.LedgerH\000R\006ledger\022>\n\005mul"
    "ti\030\005 \001(\0132&.cosmos.crypto.keyring.v1.Reco"
    "rd.MultiH\000R\005multi\022D\n\007offline\030\006 \001(\0132(.cos"
    "mos.crypto.keyring.v1.Record.OfflineH\000R\007"
    "offline\0328\n\005Local\022/\n\010priv_key\030\001 \001(\0132\024.goo"
    "gle.protobuf.AnyR\007privKey\032>\n\006Ledger\0224\n\004p"
    "ath\030\001 \001(\0132 .cosmos.crypto.hd.v1.BIP44Par"
    "amsR\004path\032\007\n\005Multi\032\t\n\007OfflineB\006\n\004itemB5Z"
    "+github.com/cosmos/cosmos-sdk/crypto/key"
    "ring\310\341\036\000\230\343\036\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto_deps[3] =
    {
        &::descriptor_table_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto = {
    false,
    false,
    700,
    descriptor_table_protodef_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
    "cosmos/crypto/keyring/v1/record.proto",
    &descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto_once,
    descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto_deps,
    3,
    5,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
    file_level_service_descriptors_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
};
namespace cosmos {
namespace crypto {
namespace keyring {
namespace v1 {
// ===================================================================

class Record_Local::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Record_Local>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Record_Local, _impl_._has_bits_);
};

void Record_Local::clear_priv_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.priv_key_ != nullptr) _impl_.priv_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Record_Local::Record_Local(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.keyring.v1.Record.Local)
}
inline PROTOBUF_NDEBUG_INLINE Record_Local::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::crypto::keyring::v1::Record_Local& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Record_Local::Record_Local(
    ::google::protobuf::Arena* arena,
    const Record_Local& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Record_Local* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.priv_key_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.priv_key_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.keyring.v1.Record.Local)
}
inline PROTOBUF_NDEBUG_INLINE Record_Local::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Record_Local::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.priv_key_ = {};
}
Record_Local::~Record_Local() {
  // @@protoc_insertion_point(destructor:cosmos.crypto.keyring.v1.Record.Local)
  SharedDtor(*this);
}
inline void Record_Local::SharedDtor(MessageLite& self) {
  Record_Local& this_ = static_cast<Record_Local&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.priv_key_;
  this_._impl_.~Impl_();
}

inline void* Record_Local::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Record_Local(arena);
}
constexpr auto Record_Local::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Record_Local),
                                            alignof(Record_Local));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Record_Local::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Record_Local_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Record_Local::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Record_Local>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Record_Local::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Record_Local>(), &Record_Local::ByteSizeLong,
            &Record_Local::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Record_Local, _impl_._cached_size_),
        false,
    },
    &Record_Local::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Record_Local::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Record_Local::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Record_Local, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Local>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any priv_key = 1 [json_name = "privKey"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Record_Local, _impl_.priv_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Any priv_key = 1 [json_name = "privKey"];
    {PROTOBUF_FIELD_OFFSET(Record_Local, _impl_.priv_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Record_Local::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.crypto.keyring.v1.Record.Local)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.priv_key_ != nullptr);
    _impl_.priv_key_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Record_Local::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Record_Local& this_ = static_cast<const Record_Local&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Record_Local::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Record_Local& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.crypto.keyring.v1.Record.Local)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any priv_key = 1 [json_name = "privKey"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.priv_key_, this_._impl_.priv_key_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.crypto.keyring.v1.Record.Local)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Record_Local::ByteSizeLong(const MessageLite& base) {
          const Record_Local& this_ = static_cast<const Record_Local&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Record_Local::ByteSizeLong() const {
          const Record_Local& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.crypto.keyring.v1.Record.Local)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .google.protobuf.Any priv_key = 1 [json_name = "privKey"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.priv_key_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Record_Local::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Record_Local*>(&to_msg);
  auto& from = static_cast<const Record_Local&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.crypto.keyring.v1.Record.Local)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.priv_key_ != nullptr);
    if (_this->_impl_.priv_key_ == nullptr) {
      _this->_impl_.priv_key_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.priv_key_);
    } else {
      _this->_impl_.priv_key_->MergeFrom(*from._impl_.priv_key_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Record_Local::CopyFrom(const Record_Local& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.crypto.keyring.v1.Record.Local)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Record_Local::InternalSwap(Record_Local* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.priv_key_, other->_impl_.priv_key_);
}

::google::protobuf::Metadata Record_Local::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Record_Ledger::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Record_Ledger>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Record_Ledger, _impl_._has_bits_);
};

void Record_Ledger::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.path_ != nullptr) _impl_.path_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Record_Ledger::Record_Ledger(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.keyring.v1.Record.Ledger)
}
inline PROTOBUF_NDEBUG_INLINE Record_Ledger::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::crypto::keyring::v1::Record_Ledger& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Record_Ledger::Record_Ledger(
    ::google::protobuf::Arena* arena,
    const Record_Ledger& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Record_Ledger* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.path_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::hd::v1::BIP44Params>(
                              arena, *from._impl_.path_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.keyring.v1.Record.Ledger)
}
inline PROTOBUF_NDEBUG_INLINE Record_Ledger::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Record_Ledger::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.path_ = {};
}
Record_Ledger::~Record_Ledger() {
  // @@protoc_insertion_point(destructor:cosmos.crypto.keyring.v1.Record.Ledger)
  SharedDtor(*this);
}
inline void Record_Ledger::SharedDtor(MessageLite& self) {
  Record_Ledger& this_ = static_cast<Record_Ledger&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.path_;
  this_._impl_.~Impl_();
}

inline void* Record_Ledger::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Record_Ledger(arena);
}
constexpr auto Record_Ledger::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Record_Ledger),
                                            alignof(Record_Ledger));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Record_Ledger::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Record_Ledger_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Record_Ledger::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Record_Ledger>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Record_Ledger::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Record_Ledger>(), &Record_Ledger::ByteSizeLong,
            &Record_Ledger::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Record_Ledger, _impl_._cached_size_),
        false,
    },
    &Record_Ledger::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Record_Ledger::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Record_Ledger::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Record_Ledger, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Ledger>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.crypto.hd.v1.BIP44Params path = 1 [json_name = "path"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Record_Ledger, _impl_.path_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.crypto.hd.v1.BIP44Params path = 1 [json_name = "path"];
    {PROTOBUF_FIELD_OFFSET(Record_Ledger, _impl_.path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::crypto::hd::v1::BIP44Params>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Record_Ledger::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.crypto.keyring.v1.Record.Ledger)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.path_ != nullptr);
    _impl_.path_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Record_Ledger::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Record_Ledger& this_ = static_cast<const Record_Ledger&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Record_Ledger::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Record_Ledger& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.crypto.keyring.v1.Record.Ledger)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.crypto.hd.v1.BIP44Params path = 1 [json_name = "path"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.path_, this_._impl_.path_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.crypto.keyring.v1.Record.Ledger)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Record_Ledger::ByteSizeLong(const MessageLite& base) {
          const Record_Ledger& this_ = static_cast<const Record_Ledger&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Record_Ledger::ByteSizeLong() const {
          const Record_Ledger& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.crypto.keyring.v1.Record.Ledger)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.crypto.hd.v1.BIP44Params path = 1 [json_name = "path"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.path_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Record_Ledger::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Record_Ledger*>(&to_msg);
  auto& from = static_cast<const Record_Ledger&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.crypto.keyring.v1.Record.Ledger)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.path_ != nullptr);
    if (_this->_impl_.path_ == nullptr) {
      _this->_impl_.path_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::hd::v1::BIP44Params>(arena, *from._impl_.path_);
    } else {
      _this->_impl_.path_->MergeFrom(*from._impl_.path_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Record_Ledger::CopyFrom(const Record_Ledger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.crypto.keyring.v1.Record.Ledger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Record_Ledger::InternalSwap(Record_Ledger* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.path_, other->_impl_.path_);
}

::google::protobuf::Metadata Record_Ledger::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Record_Multi::_Internal {
 public:
};

Record_Multi::Record_Multi(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.keyring.v1.Record.Multi)
}
Record_Multi::Record_Multi(
    ::google::protobuf::Arena* arena,
    const Record_Multi& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Record_Multi* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.keyring.v1.Record.Multi)
}

inline void* Record_Multi::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Record_Multi(arena);
}
constexpr auto Record_Multi::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Record_Multi),
                                            alignof(Record_Multi));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Record_Multi::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Record_Multi_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Record_Multi::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Record_Multi>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Record_Multi::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Record_Multi>(), &Record_Multi::ByteSizeLong,
            &Record_Multi::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Record_Multi, _impl_._cached_size_),
        false,
    },
    &Record_Multi::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Record_Multi::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Record_Multi::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Multi>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Record_Multi::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Record_Offline::_Internal {
 public:
};

Record_Offline::Record_Offline(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.keyring.v1.Record.Offline)
}
Record_Offline::Record_Offline(
    ::google::protobuf::Arena* arena,
    const Record_Offline& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Record_Offline* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.keyring.v1.Record.Offline)
}

inline void* Record_Offline::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Record_Offline(arena);
}
constexpr auto Record_Offline::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Record_Offline),
                                            alignof(Record_Offline));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Record_Offline::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Record_Offline_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Record_Offline::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<Record_Offline>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Record_Offline::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<Record_Offline>(), &Record_Offline::ByteSizeLong,
            &Record_Offline::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Record_Offline, _impl_._cached_size_),
        false,
    },
    &Record_Offline::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Record_Offline::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Record_Offline::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Offline>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata Record_Offline::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Record::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Record>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Record, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::cosmos::crypto::keyring::v1::Record, _impl_._oneof_case_);
};

void Record::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pub_key_ != nullptr) _impl_.pub_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Record::set_allocated_local(::cosmos::crypto::keyring::v1::Record_Local* local) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_item();
  if (local) {
    ::google::protobuf::Arena* submessage_arena = local->GetArena();
    if (message_arena != submessage_arena) {
      local = ::google::protobuf::internal::GetOwnedMessage(message_arena, local, submessage_arena);
    }
    set_has_local();
    _impl_.item_.local_ = local;
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.crypto.keyring.v1.Record.local)
}
void Record::set_allocated_ledger(::cosmos::crypto::keyring::v1::Record_Ledger* ledger) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_item();
  if (ledger) {
    ::google::protobuf::Arena* submessage_arena = ledger->GetArena();
    if (message_arena != submessage_arena) {
      ledger = ::google::protobuf::internal::GetOwnedMessage(message_arena, ledger, submessage_arena);
    }
    set_has_ledger();
    _impl_.item_.ledger_ = ledger;
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.crypto.keyring.v1.Record.ledger)
}
void Record::set_allocated_multi(::cosmos::crypto::keyring::v1::Record_Multi* multi) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_item();
  if (multi) {
    ::google::protobuf::Arena* submessage_arena = multi->GetArena();
    if (message_arena != submessage_arena) {
      multi = ::google::protobuf::internal::GetOwnedMessage(message_arena, multi, submessage_arena);
    }
    set_has_multi();
    _impl_.item_.multi_ = multi;
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.crypto.keyring.v1.Record.multi)
}
void Record::set_allocated_offline(::cosmos::crypto::keyring::v1::Record_Offline* offline) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_item();
  if (offline) {
    ::google::protobuf::Arena* submessage_arena = offline->GetArena();
    if (message_arena != submessage_arena) {
      offline = ::google::protobuf::internal::GetOwnedMessage(message_arena, offline, submessage_arena);
    }
    set_has_offline();
    _impl_.item_.offline_ = offline;
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.crypto.keyring.v1.Record.offline)
}
Record::Record(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.keyring.v1.Record)
}
inline PROTOBUF_NDEBUG_INLINE Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::crypto::keyring::v1::Record& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        item_{},
        _oneof_case_{from._oneof_case_[0]} {}

Record::Record(
    ::google::protobuf::Arena* arena,
    const Record& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Record* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pub_key_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.pub_key_)
                        : nullptr;
  switch (item_case()) {
    case ITEM_NOT_SET:
      break;
      case kLocal:
        _impl_.item_.local_ = ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Local>(arena, *from._impl_.item_.local_);
        break;
      case kLedger:
        _impl_.item_.ledger_ = ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Ledger>(arena, *from._impl_.item_.ledger_);
        break;
      case kMulti:
        _impl_.item_.multi_ = ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Multi>(arena, *from._impl_.item_.multi_);
        break;
      case kOffline:
        _impl_.item_.offline_ = ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Offline>(arena, *from._impl_.item_.offline_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.keyring.v1.Record)
}
inline PROTOBUF_NDEBUG_INLINE Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        item_{},
        _oneof_case_{} {}

inline void Record::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pub_key_ = {};
}
Record::~Record() {
  // @@protoc_insertion_point(destructor:cosmos.crypto.keyring.v1.Record)
  SharedDtor(*this);
}
inline void Record::SharedDtor(MessageLite& self) {
  Record& this_ = static_cast<Record&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.pub_key_;
  if (this_.has_item()) {
    this_.clear_item();
  }
  this_._impl_.~Impl_();
}

void Record::clear_item() {
// @@protoc_insertion_point(one_of_clear_start:cosmos.crypto.keyring.v1.Record)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (item_case()) {
    case kLocal: {
      if (GetArena() == nullptr) {
        delete _impl_.item_.local_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.local_);
      }
      break;
    }
    case kLedger: {
      if (GetArena() == nullptr) {
        delete _impl_.item_.ledger_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.ledger_);
      }
      break;
    }
    case kMulti: {
      if (GetArena() == nullptr) {
        delete _impl_.item_.multi_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.multi_);
      }
      break;
    }
    case kOffline: {
      if (GetArena() == nullptr) {
        delete _impl_.item_.offline_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.item_.offline_);
      }
      break;
    }
    case ITEM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ITEM_NOT_SET;
}


inline void* Record::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Record(arena);
}
constexpr auto Record::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Record),
                                            alignof(Record));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Record::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Record_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Record::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Record>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Record::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Record>(), &Record::ByteSizeLong,
            &Record::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Record, _impl_._cached_size_),
        false,
    },
    &Record::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Record::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 6, 5, 44, 2> Record::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Record, _impl_._has_bits_),
    0, // no _extensions_
    6, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Record, _impl_.pub_key_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Record, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.pub_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.crypto.keyring.v1.Record.Local local = 3 [json_name = "local"];
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.item_.local_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.crypto.keyring.v1.Record.Ledger ledger = 4 [json_name = "ledger"];
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.item_.ledger_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.crypto.keyring.v1.Record.Multi multi = 5 [json_name = "multi"];
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.item_.multi_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.crypto.keyring.v1.Record.Offline offline = 6 [json_name = "offline"];
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.item_.offline_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Local>()},
    {::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Ledger>()},
    {::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Multi>()},
    {::_pbi::TcParser::GetTable<::cosmos::crypto::keyring::v1::Record_Offline>()},
  }}, {{
    "\37\4\0\0\0\0\0\0"
    "cosmos.crypto.keyring.v1.Record"
    "name"
  }},
};

PROTOBUF_NOINLINE void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.crypto.keyring.v1.Record)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pub_key_ != nullptr);
    _impl_.pub_key_->Clear();
  }
  clear_item();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Record::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Record& this_ = static_cast<const Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Record::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.crypto.keyring.v1.Record)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.crypto.keyring.v1.Record.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pub_key_, this_._impl_.pub_key_->GetCachedSize(), target,
                stream);
          }

          switch (this_.item_case()) {
            case kLocal: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.item_.local_, this_._impl_.item_.local_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLedger: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.item_.ledger_, this_._impl_.item_.ledger_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMulti: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.item_.multi_, this_._impl_.item_.multi_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOffline: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.item_.offline_, this_._impl_.item_.offline_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.crypto.keyring.v1.Record)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Record::ByteSizeLong(const MessageLite& base) {
          const Record& this_ = static_cast<const Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Record::ByteSizeLong() const {
          const Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.crypto.keyring.v1.Record)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pub_key_);
            }
          }
          switch (this_.item_case()) {
            // .cosmos.crypto.keyring.v1.Record.Local local = 3 [json_name = "local"];
            case kLocal: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_.local_);
              break;
            }
            // .cosmos.crypto.keyring.v1.Record.Ledger ledger = 4 [json_name = "ledger"];
            case kLedger: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_.ledger_);
              break;
            }
            // .cosmos.crypto.keyring.v1.Record.Multi multi = 5 [json_name = "multi"];
            case kMulti: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_.multi_);
              break;
            }
            // .cosmos.crypto.keyring.v1.Record.Offline offline = 6 [json_name = "offline"];
            case kOffline: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_.offline_);
              break;
            }
            case ITEM_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Record::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Record*>(&to_msg);
  auto& from = static_cast<const Record&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.crypto.keyring.v1.Record)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pub_key_ != nullptr);
    if (_this->_impl_.pub_key_ == nullptr) {
      _this->_impl_.pub_key_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.pub_key_);
    } else {
      _this->_impl_.pub_key_->MergeFrom(*from._impl_.pub_key_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_item();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLocal: {
        if (oneof_needs_init) {
          _this->_impl_.item_.local_ =
              ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Local>(arena, *from._impl_.item_.local_);
        } else {
          _this->_impl_.item_.local_->MergeFrom(from._internal_local());
        }
        break;
      }
      case kLedger: {
        if (oneof_needs_init) {
          _this->_impl_.item_.ledger_ =
              ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Ledger>(arena, *from._impl_.item_.ledger_);
        } else {
          _this->_impl_.item_.ledger_->MergeFrom(from._internal_ledger());
        }
        break;
      }
      case kMulti: {
        if (oneof_needs_init) {
          _this->_impl_.item_.multi_ =
              ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Multi>(arena, *from._impl_.item_.multi_);
        } else {
          _this->_impl_.item_.multi_->MergeFrom(from._internal_multi());
        }
        break;
      }
      case kOffline: {
        if (oneof_needs_init) {
          _this->_impl_.item_.offline_ =
              ::google::protobuf::Message::CopyConstruct<::cosmos::crypto::keyring::v1::Record_Offline>(arena, *from._impl_.item_.offline_);
        } else {
          _this->_impl_.item_.offline_->MergeFrom(from._internal_offline());
        }
        break;
      }
      case ITEM_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.crypto.keyring.v1.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Record::InternalSwap(Record* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.pub_key_, other->_impl_.pub_key_);
  swap(_impl_.item_, other->_impl_.item_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace keyring
}  // namespace crypto
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fcrypto_2fkeyring_2fv1_2frecord_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
