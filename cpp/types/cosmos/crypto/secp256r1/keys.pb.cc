// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/crypto/secp256r1/keys.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/crypto/secp256r1/keys.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace crypto {
namespace secp256r1 {

inline constexpr PubKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PubKey::PubKey(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PubKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PubKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PubKeyDefaultTypeInternal() {}
  union {
    PubKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PubKeyDefaultTypeInternal _PubKey_default_instance_;

inline constexpr PrivKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : secret_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PrivKey::PrivKey(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PrivKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrivKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrivKeyDefaultTypeInternal() {}
  union {
    PrivKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrivKeyDefaultTypeInternal _PrivKey_default_instance_;
}  // namespace secp256r1
}  // namespace crypto
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::secp256r1::PubKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::secp256r1::PubKey, _impl_.key_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::secp256r1::PrivKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::secp256r1::PrivKey, _impl_.secret_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::crypto::secp256r1::PubKey)},
        {9, -1, -1, sizeof(::cosmos::crypto::secp256r1::PrivKey)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::crypto::secp256r1::_PubKey_default_instance_._instance,
    &::cosmos::crypto::secp256r1::_PrivKey_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"cosmos/crypto/secp256r1/keys.proto\022\027co"
    "smos.crypto.secp256r1\032\024gogoproto/gogo.pr"
    "oto\"\'\n\006PubKey\022\035\n\003key\030\001 \001(\014B\013\332\336\037\007ecdsaPKR"
    "\003key\".\n\007PrivKey\022#\n\006secret\030\001 \001(\014B\013\332\336\037\007ecd"
    "saSKR\006secretB@Z2github.com/cosmos/cosmos"
    "-sdk/crypto/keys/secp256r1\310\341\036\000\330\341\036\000\310\343\036\001b\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto_deps[1] =
    {
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto = {
    false,
    false,
    246,
    descriptor_table_protodef_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto,
    "cosmos/crypto/secp256r1/keys.proto",
    &descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto_once,
    descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto,
    file_level_service_descriptors_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto,
};
namespace cosmos {
namespace crypto {
namespace secp256r1 {
// ===================================================================

class PubKey::_Internal {
 public:
};

PubKey::PubKey(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.secp256r1.PubKey)
}
inline PROTOBUF_NDEBUG_INLINE PubKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::crypto::secp256r1::PubKey& from_msg)
      : key_(arena, from.key_),
        _cached_size_{0} {}

PubKey::PubKey(
    ::google::protobuf::Arena* arena,
    const PubKey& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PubKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.secp256r1.PubKey)
}
inline PROTOBUF_NDEBUG_INLINE PubKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        _cached_size_{0} {}

inline void PubKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PubKey::~PubKey() {
  // @@protoc_insertion_point(destructor:cosmos.crypto.secp256r1.PubKey)
  SharedDtor(*this);
}
inline void PubKey::SharedDtor(MessageLite& self) {
  PubKey& this_ = static_cast<PubKey&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PubKey::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PubKey(arena);
}
constexpr auto PubKey::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PubKey),
                                            alignof(PubKey));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PubKey::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PubKey_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PubKey::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PubKey>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PubKey::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PubKey>(), &PubKey::ByteSizeLong,
            &PubKey::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PubKey, _impl_._cached_size_),
        false,
    },
    &PubKey::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PubKey::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PubKey::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::secp256r1::PubKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes key = 1 [json_name = "key", (.gogoproto.customtype) = "ecdsaPK"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PubKey, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes key = 1 [json_name = "key", (.gogoproto.customtype) = "ecdsaPK"];
    {PROTOBUF_FIELD_OFFSET(PubKey, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PubKey::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.crypto.secp256r1.PubKey)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PubKey::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PubKey& this_ = static_cast<const PubKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PubKey::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PubKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.crypto.secp256r1.PubKey)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes key = 1 [json_name = "key", (.gogoproto.customtype) = "ecdsaPK"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.crypto.secp256r1.PubKey)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PubKey::ByteSizeLong(const MessageLite& base) {
          const PubKey& this_ = static_cast<const PubKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PubKey::ByteSizeLong() const {
          const PubKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.crypto.secp256r1.PubKey)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes key = 1 [json_name = "key", (.gogoproto.customtype) = "ecdsaPK"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PubKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PubKey*>(&to_msg);
  auto& from = static_cast<const PubKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.crypto.secp256r1.PubKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PubKey::CopyFrom(const PubKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.crypto.secp256r1.PubKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PubKey::InternalSwap(PubKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
}

::google::protobuf::Metadata PubKey::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PrivKey::_Internal {
 public:
};

PrivKey::PrivKey(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.secp256r1.PrivKey)
}
inline PROTOBUF_NDEBUG_INLINE PrivKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::crypto::secp256r1::PrivKey& from_msg)
      : secret_(arena, from.secret_),
        _cached_size_{0} {}

PrivKey::PrivKey(
    ::google::protobuf::Arena* arena,
    const PrivKey& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PrivKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.secp256r1.PrivKey)
}
inline PROTOBUF_NDEBUG_INLINE PrivKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : secret_(arena),
        _cached_size_{0} {}

inline void PrivKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PrivKey::~PrivKey() {
  // @@protoc_insertion_point(destructor:cosmos.crypto.secp256r1.PrivKey)
  SharedDtor(*this);
}
inline void PrivKey::SharedDtor(MessageLite& self) {
  PrivKey& this_ = static_cast<PrivKey&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.secret_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PrivKey::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PrivKey(arena);
}
constexpr auto PrivKey::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PrivKey),
                                            alignof(PrivKey));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PrivKey::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PrivKey_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PrivKey::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PrivKey>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PrivKey::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PrivKey>(), &PrivKey::ByteSizeLong,
            &PrivKey::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PrivKey, _impl_._cached_size_),
        false,
    },
    &PrivKey::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PrivKey::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PrivKey::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::secp256r1::PrivKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes secret = 1 [json_name = "secret", (.gogoproto.customtype) = "ecdsaSK"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PrivKey, _impl_.secret_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes secret = 1 [json_name = "secret", (.gogoproto.customtype) = "ecdsaSK"];
    {PROTOBUF_FIELD_OFFSET(PrivKey, _impl_.secret_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PrivKey::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.crypto.secp256r1.PrivKey)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.secret_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PrivKey::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PrivKey& this_ = static_cast<const PrivKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PrivKey::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PrivKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.crypto.secp256r1.PrivKey)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes secret = 1 [json_name = "secret", (.gogoproto.customtype) = "ecdsaSK"];
          if (!this_._internal_secret().empty()) {
            const std::string& _s = this_._internal_secret();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.crypto.secp256r1.PrivKey)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PrivKey::ByteSizeLong(const MessageLite& base) {
          const PrivKey& this_ = static_cast<const PrivKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PrivKey::ByteSizeLong() const {
          const PrivKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.crypto.secp256r1.PrivKey)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes secret = 1 [json_name = "secret", (.gogoproto.customtype) = "ecdsaSK"];
            if (!this_._internal_secret().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_secret());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PrivKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PrivKey*>(&to_msg);
  auto& from = static_cast<const PrivKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.crypto.secp256r1.PrivKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_secret().empty()) {
    _this->_internal_set_secret(from._internal_secret());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PrivKey::CopyFrom(const PrivKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.crypto.secp256r1.PrivKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PrivKey::InternalSwap(PrivKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secret_, &other->_impl_.secret_, arena);
}

::google::protobuf::Metadata PrivKey::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace secp256r1
}  // namespace crypto
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fcrypto_2fsecp256r1_2fkeys_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
