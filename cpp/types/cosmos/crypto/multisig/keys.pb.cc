// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/crypto/multisig/keys.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/crypto/multisig/keys.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace crypto {
namespace multisig {

inline constexpr LegacyAminoPubKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : public_keys_{},
        threshold_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LegacyAminoPubKey::LegacyAminoPubKey(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LegacyAminoPubKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LegacyAminoPubKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LegacyAminoPubKeyDefaultTypeInternal() {}
  union {
    LegacyAminoPubKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LegacyAminoPubKeyDefaultTypeInternal _LegacyAminoPubKey_default_instance_;
}  // namespace multisig
}  // namespace crypto
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::multisig::LegacyAminoPubKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::multisig::LegacyAminoPubKey, _impl_.threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::crypto::multisig::LegacyAminoPubKey, _impl_.public_keys_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::crypto::multisig::LegacyAminoPubKey)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::crypto::multisig::_LegacyAminoPubKey_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n!cosmos/crypto/multisig/keys.proto\022\026cos"
    "mos.crypto.multisig\032\024gogoproto/gogo.prot"
    "o\032\031google/protobuf/any.proto\032\021amino/amin"
    "o.proto\"\303\001\n\021LegacyAminoPubKey\022\034\n\tthresho"
    "ld\030\001 \001(\rR\tthreshold\022N\n\013public_keys\030\002 \003(\013"
    "2\024.google.protobuf.AnyB\027\342\336\037\007PubKeys\242\347\260*\007"
    "pubkeysR\npublicKeys:@\210\240\037\000\212\347\260*\"tendermint"
    "/PubKeyMultisigThreshold\222\347\260*\020threshold_s"
    "tringB3Z1github.com/cosmos/cosmos-sdk/cr"
    "ypto/keys/multisigb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto_deps[3] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto = {
    false,
    false,
    386,
    descriptor_table_protodef_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto,
    "cosmos/crypto/multisig/keys.proto",
    &descriptor_table_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto_once,
    descriptor_table_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto,
    file_level_service_descriptors_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto,
};
namespace cosmos {
namespace crypto {
namespace multisig {
// ===================================================================

class LegacyAminoPubKey::_Internal {
 public:
};

void LegacyAminoPubKey::clear_public_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_keys_.Clear();
}
LegacyAminoPubKey::LegacyAminoPubKey(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.crypto.multisig.LegacyAminoPubKey)
}
inline PROTOBUF_NDEBUG_INLINE LegacyAminoPubKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::crypto::multisig::LegacyAminoPubKey& from_msg)
      : public_keys_{visibility, arena, from.public_keys_},
        _cached_size_{0} {}

LegacyAminoPubKey::LegacyAminoPubKey(
    ::google::protobuf::Arena* arena,
    const LegacyAminoPubKey& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LegacyAminoPubKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.threshold_ = from._impl_.threshold_;

  // @@protoc_insertion_point(copy_constructor:cosmos.crypto.multisig.LegacyAminoPubKey)
}
inline PROTOBUF_NDEBUG_INLINE LegacyAminoPubKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : public_keys_{visibility, arena},
        _cached_size_{0} {}

inline void LegacyAminoPubKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.threshold_ = {};
}
LegacyAminoPubKey::~LegacyAminoPubKey() {
  // @@protoc_insertion_point(destructor:cosmos.crypto.multisig.LegacyAminoPubKey)
  SharedDtor(*this);
}
inline void LegacyAminoPubKey::SharedDtor(MessageLite& self) {
  LegacyAminoPubKey& this_ = static_cast<LegacyAminoPubKey&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LegacyAminoPubKey::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LegacyAminoPubKey(arena);
}
constexpr auto LegacyAminoPubKey::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LegacyAminoPubKey, _impl_.public_keys_) +
          decltype(LegacyAminoPubKey::_impl_.public_keys_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LegacyAminoPubKey), alignof(LegacyAminoPubKey), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LegacyAminoPubKey::PlacementNew_,
                                 sizeof(LegacyAminoPubKey),
                                 alignof(LegacyAminoPubKey));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LegacyAminoPubKey::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LegacyAminoPubKey_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LegacyAminoPubKey::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LegacyAminoPubKey>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LegacyAminoPubKey::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LegacyAminoPubKey>(), &LegacyAminoPubKey::ByteSizeLong,
            &LegacyAminoPubKey::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LegacyAminoPubKey, _impl_._cached_size_),
        false,
    },
    &LegacyAminoPubKey::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LegacyAminoPubKey::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> LegacyAminoPubKey::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crypto::multisig::LegacyAminoPubKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .google.protobuf.Any public_keys = 2 [json_name = "publicKeys", (.gogoproto.customname) = "PubKeys", (.amino.field_name) = "pubkeys"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(LegacyAminoPubKey, _impl_.public_keys_)}},
    // uint32 threshold = 1 [json_name = "threshold"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LegacyAminoPubKey, _impl_.threshold_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(LegacyAminoPubKey, _impl_.threshold_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 threshold = 1 [json_name = "threshold"];
    {PROTOBUF_FIELD_OFFSET(LegacyAminoPubKey, _impl_.threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .google.protobuf.Any public_keys = 2 [json_name = "publicKeys", (.gogoproto.customname) = "PubKeys", (.amino.field_name) = "pubkeys"];
    {PROTOBUF_FIELD_OFFSET(LegacyAminoPubKey, _impl_.public_keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LegacyAminoPubKey::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.crypto.multisig.LegacyAminoPubKey)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.public_keys_.Clear();
  _impl_.threshold_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LegacyAminoPubKey::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LegacyAminoPubKey& this_ = static_cast<const LegacyAminoPubKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LegacyAminoPubKey::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LegacyAminoPubKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.crypto.multisig.LegacyAminoPubKey)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 threshold = 1 [json_name = "threshold"];
          if (this_._internal_threshold() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_threshold(), target);
          }

          // repeated .google.protobuf.Any public_keys = 2 [json_name = "publicKeys", (.gogoproto.customname) = "PubKeys", (.amino.field_name) = "pubkeys"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_public_keys_size());
               i < n; i++) {
            const auto& repfield = this_._internal_public_keys().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.crypto.multisig.LegacyAminoPubKey)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LegacyAminoPubKey::ByteSizeLong(const MessageLite& base) {
          const LegacyAminoPubKey& this_ = static_cast<const LegacyAminoPubKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LegacyAminoPubKey::ByteSizeLong() const {
          const LegacyAminoPubKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.crypto.multisig.LegacyAminoPubKey)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .google.protobuf.Any public_keys = 2 [json_name = "publicKeys", (.gogoproto.customname) = "PubKeys", (.amino.field_name) = "pubkeys"];
            {
              total_size += 1UL * this_._internal_public_keys_size();
              for (const auto& msg : this_._internal_public_keys()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint32 threshold = 1 [json_name = "threshold"];
            if (this_._internal_threshold() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_threshold());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LegacyAminoPubKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LegacyAminoPubKey*>(&to_msg);
  auto& from = static_cast<const LegacyAminoPubKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.crypto.multisig.LegacyAminoPubKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_public_keys()->MergeFrom(
      from._internal_public_keys());
  if (from._internal_threshold() != 0) {
    _this->_impl_.threshold_ = from._impl_.threshold_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LegacyAminoPubKey::CopyFrom(const LegacyAminoPubKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.crypto.multisig.LegacyAminoPubKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LegacyAminoPubKey::InternalSwap(LegacyAminoPubKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.public_keys_.InternalSwap(&other->_impl_.public_keys_);
        swap(_impl_.threshold_, other->_impl_.threshold_);
}

::google::protobuf::Metadata LegacyAminoPubKey::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace multisig
}  // namespace crypto
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fcrypto_2fmultisig_2fkeys_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
