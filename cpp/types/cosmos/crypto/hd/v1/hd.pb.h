// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/crypto/hd/v1/hd.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto_2epb_2eh
#define cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "amino/amino.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto;
namespace cosmos {
namespace crypto {
namespace hd {
namespace v1 {
class BIP44Params;
struct BIP44ParamsDefaultTypeInternal;
extern BIP44ParamsDefaultTypeInternal _BIP44Params_default_instance_;
}  // namespace v1
}  // namespace hd
}  // namespace crypto
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace crypto {
namespace hd {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class BIP44Params final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.crypto.hd.v1.BIP44Params) */ {
 public:
  inline BIP44Params() : BIP44Params(nullptr) {}
  ~BIP44Params() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BIP44Params* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BIP44Params));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BIP44Params(
      ::google::protobuf::internal::ConstantInitialized);

  inline BIP44Params(const BIP44Params& from) : BIP44Params(nullptr, from) {}
  inline BIP44Params(BIP44Params&& from) noexcept
      : BIP44Params(nullptr, std::move(from)) {}
  inline BIP44Params& operator=(const BIP44Params& from) {
    CopyFrom(from);
    return *this;
  }
  inline BIP44Params& operator=(BIP44Params&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BIP44Params& default_instance() {
    return *internal_default_instance();
  }
  static inline const BIP44Params* internal_default_instance() {
    return reinterpret_cast<const BIP44Params*>(
        &_BIP44Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BIP44Params& a, BIP44Params& b) { a.Swap(&b); }
  inline void Swap(BIP44Params* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BIP44Params* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BIP44Params* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BIP44Params>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BIP44Params& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BIP44Params& from) { BIP44Params::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BIP44Params* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.crypto.hd.v1.BIP44Params"; }

 protected:
  explicit BIP44Params(::google::protobuf::Arena* arena);
  BIP44Params(::google::protobuf::Arena* arena, const BIP44Params& from);
  BIP44Params(::google::protobuf::Arena* arena, BIP44Params&& from) noexcept
      : BIP44Params(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPurposeFieldNumber = 1,
    kCoinTypeFieldNumber = 2,
    kAccountFieldNumber = 3,
    kChangeFieldNumber = 4,
    kAddressIndexFieldNumber = 5,
  };
  // uint32 purpose = 1 [json_name = "purpose"];
  void clear_purpose() ;
  ::uint32_t purpose() const;
  void set_purpose(::uint32_t value);

  private:
  ::uint32_t _internal_purpose() const;
  void _internal_set_purpose(::uint32_t value);

  public:
  // uint32 coin_type = 2 [json_name = "coinType"];
  void clear_coin_type() ;
  ::uint32_t coin_type() const;
  void set_coin_type(::uint32_t value);

  private:
  ::uint32_t _internal_coin_type() const;
  void _internal_set_coin_type(::uint32_t value);

  public:
  // uint32 account = 3 [json_name = "account"];
  void clear_account() ;
  ::uint32_t account() const;
  void set_account(::uint32_t value);

  private:
  ::uint32_t _internal_account() const;
  void _internal_set_account(::uint32_t value);

  public:
  // bool change = 4 [json_name = "change"];
  void clear_change() ;
  bool change() const;
  void set_change(bool value);

  private:
  bool _internal_change() const;
  void _internal_set_change(bool value);

  public:
  // uint32 address_index = 5 [json_name = "addressIndex"];
  void clear_address_index() ;
  ::uint32_t address_index() const;
  void set_address_index(::uint32_t value);

  private:
  ::uint32_t _internal_address_index() const;
  void _internal_set_address_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.crypto.hd.v1.BIP44Params)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BIP44Params& from_msg);
    ::uint32_t purpose_;
    ::uint32_t coin_type_;
    ::uint32_t account_;
    bool change_;
    ::uint32_t address_index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BIP44Params

// uint32 purpose = 1 [json_name = "purpose"];
inline void BIP44Params::clear_purpose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_ = 0u;
}
inline ::uint32_t BIP44Params::purpose() const {
  // @@protoc_insertion_point(field_get:cosmos.crypto.hd.v1.BIP44Params.purpose)
  return _internal_purpose();
}
inline void BIP44Params::set_purpose(::uint32_t value) {
  _internal_set_purpose(value);
  // @@protoc_insertion_point(field_set:cosmos.crypto.hd.v1.BIP44Params.purpose)
}
inline ::uint32_t BIP44Params::_internal_purpose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.purpose_;
}
inline void BIP44Params::_internal_set_purpose(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.purpose_ = value;
}

// uint32 coin_type = 2 [json_name = "coinType"];
inline void BIP44Params::clear_coin_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_type_ = 0u;
}
inline ::uint32_t BIP44Params::coin_type() const {
  // @@protoc_insertion_point(field_get:cosmos.crypto.hd.v1.BIP44Params.coin_type)
  return _internal_coin_type();
}
inline void BIP44Params::set_coin_type(::uint32_t value) {
  _internal_set_coin_type(value);
  // @@protoc_insertion_point(field_set:cosmos.crypto.hd.v1.BIP44Params.coin_type)
}
inline ::uint32_t BIP44Params::_internal_coin_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.coin_type_;
}
inline void BIP44Params::_internal_set_coin_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_type_ = value;
}

// uint32 account = 3 [json_name = "account"];
inline void BIP44Params::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_ = 0u;
}
inline ::uint32_t BIP44Params::account() const {
  // @@protoc_insertion_point(field_get:cosmos.crypto.hd.v1.BIP44Params.account)
  return _internal_account();
}
inline void BIP44Params::set_account(::uint32_t value) {
  _internal_set_account(value);
  // @@protoc_insertion_point(field_set:cosmos.crypto.hd.v1.BIP44Params.account)
}
inline ::uint32_t BIP44Params::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_;
}
inline void BIP44Params::_internal_set_account(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_ = value;
}

// bool change = 4 [json_name = "change"];
inline void BIP44Params::clear_change() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_ = false;
}
inline bool BIP44Params::change() const {
  // @@protoc_insertion_point(field_get:cosmos.crypto.hd.v1.BIP44Params.change)
  return _internal_change();
}
inline void BIP44Params::set_change(bool value) {
  _internal_set_change(value);
  // @@protoc_insertion_point(field_set:cosmos.crypto.hd.v1.BIP44Params.change)
}
inline bool BIP44Params::_internal_change() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_;
}
inline void BIP44Params::_internal_set_change(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_ = value;
}

// uint32 address_index = 5 [json_name = "addressIndex"];
inline void BIP44Params::clear_address_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_index_ = 0u;
}
inline ::uint32_t BIP44Params::address_index() const {
  // @@protoc_insertion_point(field_get:cosmos.crypto.hd.v1.BIP44Params.address_index)
  return _internal_address_index();
}
inline void BIP44Params::set_address_index(::uint32_t value) {
  _internal_set_address_index(value);
  // @@protoc_insertion_point(field_set:cosmos.crypto.hd.v1.BIP44Params.address_index)
}
inline ::uint32_t BIP44Params::_internal_address_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_index_;
}
inline void BIP44Params::_internal_set_address_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_index_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace hd
}  // namespace crypto
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fcrypto_2fhd_2fv1_2fhd_2eproto_2epb_2eh
