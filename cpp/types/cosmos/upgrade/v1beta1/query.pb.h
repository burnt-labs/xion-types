// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/upgrade/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "cosmos/upgrade/v1beta1/upgrade.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace upgrade {
namespace v1beta1 {
class QueryAppliedPlanRequest;
struct QueryAppliedPlanRequestDefaultTypeInternal;
extern QueryAppliedPlanRequestDefaultTypeInternal _QueryAppliedPlanRequest_default_instance_;
class QueryAppliedPlanResponse;
struct QueryAppliedPlanResponseDefaultTypeInternal;
extern QueryAppliedPlanResponseDefaultTypeInternal _QueryAppliedPlanResponse_default_instance_;
class QueryAuthorityRequest;
struct QueryAuthorityRequestDefaultTypeInternal;
extern QueryAuthorityRequestDefaultTypeInternal _QueryAuthorityRequest_default_instance_;
class QueryAuthorityResponse;
struct QueryAuthorityResponseDefaultTypeInternal;
extern QueryAuthorityResponseDefaultTypeInternal _QueryAuthorityResponse_default_instance_;
class QueryCurrentPlanRequest;
struct QueryCurrentPlanRequestDefaultTypeInternal;
extern QueryCurrentPlanRequestDefaultTypeInternal _QueryCurrentPlanRequest_default_instance_;
class QueryCurrentPlanResponse;
struct QueryCurrentPlanResponseDefaultTypeInternal;
extern QueryCurrentPlanResponseDefaultTypeInternal _QueryCurrentPlanResponse_default_instance_;
class QueryModuleVersionsRequest;
struct QueryModuleVersionsRequestDefaultTypeInternal;
extern QueryModuleVersionsRequestDefaultTypeInternal _QueryModuleVersionsRequest_default_instance_;
class QueryModuleVersionsResponse;
struct QueryModuleVersionsResponseDefaultTypeInternal;
extern QueryModuleVersionsResponseDefaultTypeInternal _QueryModuleVersionsResponse_default_instance_;
class QueryUpgradedConsensusStateRequest;
struct QueryUpgradedConsensusStateRequestDefaultTypeInternal;
extern QueryUpgradedConsensusStateRequestDefaultTypeInternal _QueryUpgradedConsensusStateRequest_default_instance_;
class QueryUpgradedConsensusStateResponse;
struct QueryUpgradedConsensusStateResponseDefaultTypeInternal;
extern QueryUpgradedConsensusStateResponseDefaultTypeInternal _QueryUpgradedConsensusStateResponse_default_instance_;
}  // namespace v1beta1
}  // namespace upgrade
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace upgrade {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryUpgradedConsensusStateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse) */ {
 public:
  inline QueryUpgradedConsensusStateResponse() : QueryUpgradedConsensusStateResponse(nullptr) {}
  ~QueryUpgradedConsensusStateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryUpgradedConsensusStateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryUpgradedConsensusStateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryUpgradedConsensusStateResponse(const QueryUpgradedConsensusStateResponse& from) : QueryUpgradedConsensusStateResponse(nullptr, from) {}
  inline QueryUpgradedConsensusStateResponse(QueryUpgradedConsensusStateResponse&& from) noexcept
      : QueryUpgradedConsensusStateResponse(nullptr, std::move(from)) {}
  inline QueryUpgradedConsensusStateResponse& operator=(const QueryUpgradedConsensusStateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryUpgradedConsensusStateResponse& operator=(QueryUpgradedConsensusStateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryUpgradedConsensusStateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryUpgradedConsensusStateResponse* internal_default_instance() {
    return reinterpret_cast<const QueryUpgradedConsensusStateResponse*>(
        &_QueryUpgradedConsensusStateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryUpgradedConsensusStateResponse& a, QueryUpgradedConsensusStateResponse& b) { a.Swap(&b); }
  inline void Swap(QueryUpgradedConsensusStateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryUpgradedConsensusStateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryUpgradedConsensusStateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryUpgradedConsensusStateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryUpgradedConsensusStateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryUpgradedConsensusStateResponse& from) { QueryUpgradedConsensusStateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryUpgradedConsensusStateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse"; }

 protected:
  explicit QueryUpgradedConsensusStateResponse(::google::protobuf::Arena* arena);
  QueryUpgradedConsensusStateResponse(::google::protobuf::Arena* arena, const QueryUpgradedConsensusStateResponse& from);
  QueryUpgradedConsensusStateResponse(::google::protobuf::Arena* arena, QueryUpgradedConsensusStateResponse&& from) noexcept
      : QueryUpgradedConsensusStateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpgradedConsensusStateFieldNumber = 2,
  };
  // bytes upgraded_consensus_state = 2 [json_name = "upgradedConsensusState", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];
  void clear_upgraded_consensus_state() ;
  const std::string& upgraded_consensus_state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_upgraded_consensus_state(Arg_&& arg, Args_... args);
  std::string* mutable_upgraded_consensus_state();
  PROTOBUF_NODISCARD std::string* release_upgraded_consensus_state();
  void set_allocated_upgraded_consensus_state(std::string* value);

  private:
  const std::string& _internal_upgraded_consensus_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_upgraded_consensus_state(
      const std::string& value);
  std::string* _internal_mutable_upgraded_consensus_state();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryUpgradedConsensusStateResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr upgraded_consensus_state_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryUpgradedConsensusStateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest) */ {
 public:
  inline QueryUpgradedConsensusStateRequest() : QueryUpgradedConsensusStateRequest(nullptr) {}
  ~QueryUpgradedConsensusStateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryUpgradedConsensusStateRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryUpgradedConsensusStateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryUpgradedConsensusStateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryUpgradedConsensusStateRequest(const QueryUpgradedConsensusStateRequest& from) : QueryUpgradedConsensusStateRequest(nullptr, from) {}
  inline QueryUpgradedConsensusStateRequest(QueryUpgradedConsensusStateRequest&& from) noexcept
      : QueryUpgradedConsensusStateRequest(nullptr, std::move(from)) {}
  inline QueryUpgradedConsensusStateRequest& operator=(const QueryUpgradedConsensusStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryUpgradedConsensusStateRequest& operator=(QueryUpgradedConsensusStateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryUpgradedConsensusStateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryUpgradedConsensusStateRequest* internal_default_instance() {
    return reinterpret_cast<const QueryUpgradedConsensusStateRequest*>(
        &_QueryUpgradedConsensusStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryUpgradedConsensusStateRequest& a, QueryUpgradedConsensusStateRequest& b) { a.Swap(&b); }
  inline void Swap(QueryUpgradedConsensusStateRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryUpgradedConsensusStateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryUpgradedConsensusStateRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryUpgradedConsensusStateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryUpgradedConsensusStateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryUpgradedConsensusStateRequest& from) { QueryUpgradedConsensusStateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryUpgradedConsensusStateRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest"; }

 protected:
  explicit QueryUpgradedConsensusStateRequest(::google::protobuf::Arena* arena);
  QueryUpgradedConsensusStateRequest(::google::protobuf::Arena* arena, const QueryUpgradedConsensusStateRequest& from);
  QueryUpgradedConsensusStateRequest(::google::protobuf::Arena* arena, QueryUpgradedConsensusStateRequest&& from) noexcept
      : QueryUpgradedConsensusStateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLastHeightFieldNumber = 1,
  };
  // int64 last_height = 1 [json_name = "lastHeight"];
  void clear_last_height() ;
  ::int64_t last_height() const;
  void set_last_height(::int64_t value);

  private:
  ::int64_t _internal_last_height() const;
  void _internal_set_last_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryUpgradedConsensusStateRequest& from_msg);
    ::int64_t last_height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryModuleVersionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest) */ {
 public:
  inline QueryModuleVersionsRequest() : QueryModuleVersionsRequest(nullptr) {}
  ~QueryModuleVersionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryModuleVersionsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryModuleVersionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryModuleVersionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryModuleVersionsRequest(const QueryModuleVersionsRequest& from) : QueryModuleVersionsRequest(nullptr, from) {}
  inline QueryModuleVersionsRequest(QueryModuleVersionsRequest&& from) noexcept
      : QueryModuleVersionsRequest(nullptr, std::move(from)) {}
  inline QueryModuleVersionsRequest& operator=(const QueryModuleVersionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryModuleVersionsRequest& operator=(QueryModuleVersionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryModuleVersionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryModuleVersionsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryModuleVersionsRequest*>(
        &_QueryModuleVersionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryModuleVersionsRequest& a, QueryModuleVersionsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryModuleVersionsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryModuleVersionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryModuleVersionsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryModuleVersionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryModuleVersionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryModuleVersionsRequest& from) { QueryModuleVersionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryModuleVersionsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryModuleVersionsRequest"; }

 protected:
  explicit QueryModuleVersionsRequest(::google::protobuf::Arena* arena);
  QueryModuleVersionsRequest(::google::protobuf::Arena* arena, const QueryModuleVersionsRequest& from);
  QueryModuleVersionsRequest(::google::protobuf::Arena* arena, QueryModuleVersionsRequest&& from) noexcept
      : QueryModuleVersionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModuleNameFieldNumber = 1,
  };
  // string module_name = 1 [json_name = "moduleName"];
  void clear_module_name() ;
  const std::string& module_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_module_name(Arg_&& arg, Args_... args);
  std::string* mutable_module_name();
  PROTOBUF_NODISCARD std::string* release_module_name();
  void set_allocated_module_name(std::string* value);

  private:
  const std::string& _internal_module_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_module_name(
      const std::string& value);
  std::string* _internal_mutable_module_name();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      69, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryModuleVersionsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr module_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCurrentPlanRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryCurrentPlanRequest) */ {
 public:
  inline QueryCurrentPlanRequest() : QueryCurrentPlanRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCurrentPlanRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCurrentPlanRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCurrentPlanRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCurrentPlanRequest(const QueryCurrentPlanRequest& from) : QueryCurrentPlanRequest(nullptr, from) {}
  inline QueryCurrentPlanRequest(QueryCurrentPlanRequest&& from) noexcept
      : QueryCurrentPlanRequest(nullptr, std::move(from)) {}
  inline QueryCurrentPlanRequest& operator=(const QueryCurrentPlanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCurrentPlanRequest& operator=(QueryCurrentPlanRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCurrentPlanRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCurrentPlanRequest* internal_default_instance() {
    return reinterpret_cast<const QueryCurrentPlanRequest*>(
        &_QueryCurrentPlanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryCurrentPlanRequest& a, QueryCurrentPlanRequest& b) { a.Swap(&b); }
  inline void Swap(QueryCurrentPlanRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCurrentPlanRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCurrentPlanRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryCurrentPlanRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryCurrentPlanRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryCurrentPlanRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryCurrentPlanRequest"; }

 protected:
  explicit QueryCurrentPlanRequest(::google::protobuf::Arena* arena);
  QueryCurrentPlanRequest(::google::protobuf::Arena* arena, const QueryCurrentPlanRequest& from);
  QueryCurrentPlanRequest(::google::protobuf::Arena* arena, QueryCurrentPlanRequest&& from) noexcept
      : QueryCurrentPlanRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryCurrentPlanRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCurrentPlanRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAuthorityResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryAuthorityResponse) */ {
 public:
  inline QueryAuthorityResponse() : QueryAuthorityResponse(nullptr) {}
  ~QueryAuthorityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAuthorityResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAuthorityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAuthorityResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAuthorityResponse(const QueryAuthorityResponse& from) : QueryAuthorityResponse(nullptr, from) {}
  inline QueryAuthorityResponse(QueryAuthorityResponse&& from) noexcept
      : QueryAuthorityResponse(nullptr, std::move(from)) {}
  inline QueryAuthorityResponse& operator=(const QueryAuthorityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAuthorityResponse& operator=(QueryAuthorityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAuthorityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAuthorityResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAuthorityResponse*>(
        &_QueryAuthorityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryAuthorityResponse& a, QueryAuthorityResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAuthorityResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAuthorityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAuthorityResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAuthorityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAuthorityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAuthorityResponse& from) { QueryAuthorityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAuthorityResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryAuthorityResponse"; }

 protected:
  explicit QueryAuthorityResponse(::google::protobuf::Arena* arena);
  QueryAuthorityResponse(::google::protobuf::Arena* arena, const QueryAuthorityResponse& from);
  QueryAuthorityResponse(::google::protobuf::Arena* arena, QueryAuthorityResponse&& from) noexcept
      : QueryAuthorityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1 [json_name = "address"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryAuthorityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAuthorityResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAuthorityRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryAuthorityRequest) */ {
 public:
  inline QueryAuthorityRequest() : QueryAuthorityRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAuthorityRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAuthorityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAuthorityRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAuthorityRequest(const QueryAuthorityRequest& from) : QueryAuthorityRequest(nullptr, from) {}
  inline QueryAuthorityRequest(QueryAuthorityRequest&& from) noexcept
      : QueryAuthorityRequest(nullptr, std::move(from)) {}
  inline QueryAuthorityRequest& operator=(const QueryAuthorityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAuthorityRequest& operator=(QueryAuthorityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAuthorityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAuthorityRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAuthorityRequest*>(
        &_QueryAuthorityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryAuthorityRequest& a, QueryAuthorityRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAuthorityRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAuthorityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAuthorityRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryAuthorityRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryAuthorityRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryAuthorityRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryAuthorityRequest"; }

 protected:
  explicit QueryAuthorityRequest(::google::protobuf::Arena* arena);
  QueryAuthorityRequest(::google::protobuf::Arena* arena, const QueryAuthorityRequest& from);
  QueryAuthorityRequest(::google::protobuf::Arena* arena, QueryAuthorityRequest&& from) noexcept
      : QueryAuthorityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryAuthorityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAuthorityRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAppliedPlanResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse) */ {
 public:
  inline QueryAppliedPlanResponse() : QueryAppliedPlanResponse(nullptr) {}
  ~QueryAppliedPlanResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAppliedPlanResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAppliedPlanResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAppliedPlanResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAppliedPlanResponse(const QueryAppliedPlanResponse& from) : QueryAppliedPlanResponse(nullptr, from) {}
  inline QueryAppliedPlanResponse(QueryAppliedPlanResponse&& from) noexcept
      : QueryAppliedPlanResponse(nullptr, std::move(from)) {}
  inline QueryAppliedPlanResponse& operator=(const QueryAppliedPlanResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAppliedPlanResponse& operator=(QueryAppliedPlanResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAppliedPlanResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAppliedPlanResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAppliedPlanResponse*>(
        &_QueryAppliedPlanResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryAppliedPlanResponse& a, QueryAppliedPlanResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAppliedPlanResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAppliedPlanResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAppliedPlanResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAppliedPlanResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAppliedPlanResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAppliedPlanResponse& from) { QueryAppliedPlanResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAppliedPlanResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryAppliedPlanResponse"; }

 protected:
  explicit QueryAppliedPlanResponse(::google::protobuf::Arena* arena);
  QueryAppliedPlanResponse(::google::protobuf::Arena* arena, const QueryAppliedPlanResponse& from);
  QueryAppliedPlanResponse(::google::protobuf::Arena* arena, QueryAppliedPlanResponse&& from) noexcept
      : QueryAppliedPlanResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeightFieldNumber = 1,
  };
  // int64 height = 1 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAppliedPlanResponse& from_msg);
    ::int64_t height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAppliedPlanRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest) */ {
 public:
  inline QueryAppliedPlanRequest() : QueryAppliedPlanRequest(nullptr) {}
  ~QueryAppliedPlanRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAppliedPlanRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAppliedPlanRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAppliedPlanRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAppliedPlanRequest(const QueryAppliedPlanRequest& from) : QueryAppliedPlanRequest(nullptr, from) {}
  inline QueryAppliedPlanRequest(QueryAppliedPlanRequest&& from) noexcept
      : QueryAppliedPlanRequest(nullptr, std::move(from)) {}
  inline QueryAppliedPlanRequest& operator=(const QueryAppliedPlanRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAppliedPlanRequest& operator=(QueryAppliedPlanRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAppliedPlanRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAppliedPlanRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAppliedPlanRequest*>(
        &_QueryAppliedPlanRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryAppliedPlanRequest& a, QueryAppliedPlanRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAppliedPlanRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAppliedPlanRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAppliedPlanRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAppliedPlanRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAppliedPlanRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAppliedPlanRequest& from) { QueryAppliedPlanRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAppliedPlanRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryAppliedPlanRequest"; }

 protected:
  explicit QueryAppliedPlanRequest(::google::protobuf::Arena* arena);
  QueryAppliedPlanRequest(::google::protobuf::Arena* arena, const QueryAppliedPlanRequest& from);
  QueryAppliedPlanRequest(::google::protobuf::Arena* arena, QueryAppliedPlanRequest&& from) noexcept
      : QueryAppliedPlanRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAppliedPlanRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryModuleVersionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse) */ {
 public:
  inline QueryModuleVersionsResponse() : QueryModuleVersionsResponse(nullptr) {}
  ~QueryModuleVersionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryModuleVersionsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryModuleVersionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryModuleVersionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryModuleVersionsResponse(const QueryModuleVersionsResponse& from) : QueryModuleVersionsResponse(nullptr, from) {}
  inline QueryModuleVersionsResponse(QueryModuleVersionsResponse&& from) noexcept
      : QueryModuleVersionsResponse(nullptr, std::move(from)) {}
  inline QueryModuleVersionsResponse& operator=(const QueryModuleVersionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryModuleVersionsResponse& operator=(QueryModuleVersionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryModuleVersionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryModuleVersionsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryModuleVersionsResponse*>(
        &_QueryModuleVersionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryModuleVersionsResponse& a, QueryModuleVersionsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryModuleVersionsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryModuleVersionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryModuleVersionsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryModuleVersionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryModuleVersionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryModuleVersionsResponse& from) { QueryModuleVersionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryModuleVersionsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryModuleVersionsResponse"; }

 protected:
  explicit QueryModuleVersionsResponse(::google::protobuf::Arena* arena);
  QueryModuleVersionsResponse(::google::protobuf::Arena* arena, const QueryModuleVersionsResponse& from);
  QueryModuleVersionsResponse(::google::protobuf::Arena* arena, QueryModuleVersionsResponse&& from) noexcept
      : QueryModuleVersionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModuleVersionsFieldNumber = 1,
  };
  // repeated .cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1 [json_name = "moduleVersions"];
  int module_versions_size() const;
  private:
  int _internal_module_versions_size() const;

  public:
  void clear_module_versions() ;
  ::cosmos::upgrade::v1beta1::ModuleVersion* mutable_module_versions(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>* mutable_module_versions();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>& _internal_module_versions() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>* _internal_mutable_module_versions();
  public:
  const ::cosmos::upgrade::v1beta1::ModuleVersion& module_versions(int index) const;
  ::cosmos::upgrade::v1beta1::ModuleVersion* add_module_versions();
  const ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>& module_versions() const;
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryModuleVersionsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::upgrade::v1beta1::ModuleVersion > module_versions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCurrentPlanResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse) */ {
 public:
  inline QueryCurrentPlanResponse() : QueryCurrentPlanResponse(nullptr) {}
  ~QueryCurrentPlanResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCurrentPlanResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCurrentPlanResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCurrentPlanResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCurrentPlanResponse(const QueryCurrentPlanResponse& from) : QueryCurrentPlanResponse(nullptr, from) {}
  inline QueryCurrentPlanResponse(QueryCurrentPlanResponse&& from) noexcept
      : QueryCurrentPlanResponse(nullptr, std::move(from)) {}
  inline QueryCurrentPlanResponse& operator=(const QueryCurrentPlanResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCurrentPlanResponse& operator=(QueryCurrentPlanResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCurrentPlanResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCurrentPlanResponse* internal_default_instance() {
    return reinterpret_cast<const QueryCurrentPlanResponse*>(
        &_QueryCurrentPlanResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryCurrentPlanResponse& a, QueryCurrentPlanResponse& b) { a.Swap(&b); }
  inline void Swap(QueryCurrentPlanResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCurrentPlanResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCurrentPlanResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCurrentPlanResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCurrentPlanResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCurrentPlanResponse& from) { QueryCurrentPlanResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCurrentPlanResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.upgrade.v1beta1.QueryCurrentPlanResponse"; }

 protected:
  explicit QueryCurrentPlanResponse(::google::protobuf::Arena* arena);
  QueryCurrentPlanResponse(::google::protobuf::Arena* arena, const QueryCurrentPlanResponse& from);
  QueryCurrentPlanResponse(::google::protobuf::Arena* arena, QueryCurrentPlanResponse&& from) noexcept
      : QueryCurrentPlanResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPlanFieldNumber = 1,
  };
  // .cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan"];
  bool has_plan() const;
  void clear_plan() ;
  const ::cosmos::upgrade::v1beta1::Plan& plan() const;
  PROTOBUF_NODISCARD ::cosmos::upgrade::v1beta1::Plan* release_plan();
  ::cosmos::upgrade::v1beta1::Plan* mutable_plan();
  void set_allocated_plan(::cosmos::upgrade::v1beta1::Plan* value);
  void unsafe_arena_set_allocated_plan(::cosmos::upgrade::v1beta1::Plan* value);
  ::cosmos::upgrade::v1beta1::Plan* unsafe_arena_release_plan();

  private:
  const ::cosmos::upgrade::v1beta1::Plan& _internal_plan() const;
  ::cosmos::upgrade::v1beta1::Plan* _internal_mutable_plan();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCurrentPlanResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::upgrade::v1beta1::Plan* plan_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fupgrade_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryCurrentPlanRequest

// -------------------------------------------------------------------

// QueryCurrentPlanResponse

// .cosmos.upgrade.v1beta1.Plan plan = 1 [json_name = "plan"];
inline bool QueryCurrentPlanResponse::has_plan() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.plan_ != nullptr);
  return value;
}
inline const ::cosmos::upgrade::v1beta1::Plan& QueryCurrentPlanResponse::_internal_plan() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::upgrade::v1beta1::Plan* p = _impl_.plan_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::upgrade::v1beta1::Plan&>(::cosmos::upgrade::v1beta1::_Plan_default_instance_);
}
inline const ::cosmos::upgrade::v1beta1::Plan& QueryCurrentPlanResponse::plan() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.plan)
  return _internal_plan();
}
inline void QueryCurrentPlanResponse::unsafe_arena_set_allocated_plan(::cosmos::upgrade::v1beta1::Plan* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.plan_);
  }
  _impl_.plan_ = reinterpret_cast<::cosmos::upgrade::v1beta1::Plan*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.plan)
}
inline ::cosmos::upgrade::v1beta1::Plan* QueryCurrentPlanResponse::release_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::upgrade::v1beta1::Plan* released = _impl_.plan_;
  _impl_.plan_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::upgrade::v1beta1::Plan* QueryCurrentPlanResponse::unsafe_arena_release_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.plan)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::upgrade::v1beta1::Plan* temp = _impl_.plan_;
  _impl_.plan_ = nullptr;
  return temp;
}
inline ::cosmos::upgrade::v1beta1::Plan* QueryCurrentPlanResponse::_internal_mutable_plan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.plan_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::upgrade::v1beta1::Plan>(GetArena());
    _impl_.plan_ = reinterpret_cast<::cosmos::upgrade::v1beta1::Plan*>(p);
  }
  return _impl_.plan_;
}
inline ::cosmos::upgrade::v1beta1::Plan* QueryCurrentPlanResponse::mutable_plan() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::upgrade::v1beta1::Plan* _msg = _internal_mutable_plan();
  // @@protoc_insertion_point(field_mutable:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.plan)
  return _msg;
}
inline void QueryCurrentPlanResponse::set_allocated_plan(::cosmos::upgrade::v1beta1::Plan* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.plan_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.plan_ = reinterpret_cast<::cosmos::upgrade::v1beta1::Plan*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.upgrade.v1beta1.QueryCurrentPlanResponse.plan)
}

// -------------------------------------------------------------------

// QueryAppliedPlanRequest

// string name = 1 [json_name = "name"];
inline void QueryAppliedPlanRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& QueryAppliedPlanRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAppliedPlanRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.name)
}
inline std::string* QueryAppliedPlanRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.name)
  return _s;
}
inline const std::string& QueryAppliedPlanRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void QueryAppliedPlanRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* QueryAppliedPlanRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* QueryAppliedPlanRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.name)
  return _impl_.name_.Release();
}
inline void QueryAppliedPlanRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.upgrade.v1beta1.QueryAppliedPlanRequest.name)
}

// -------------------------------------------------------------------

// QueryAppliedPlanResponse

// int64 height = 1 [json_name = "height"];
inline void QueryAppliedPlanResponse::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t QueryAppliedPlanResponse::height() const {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.height)
  return _internal_height();
}
inline void QueryAppliedPlanResponse::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.upgrade.v1beta1.QueryAppliedPlanResponse.height)
}
inline ::int64_t QueryAppliedPlanResponse::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void QueryAppliedPlanResponse::_internal_set_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// QueryUpgradedConsensusStateRequest

// int64 last_height = 1 [json_name = "lastHeight"];
inline void QueryUpgradedConsensusStateRequest::clear_last_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_height_ = ::int64_t{0};
}
inline ::int64_t QueryUpgradedConsensusStateRequest::last_height() const {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.last_height)
  return _internal_last_height();
}
inline void QueryUpgradedConsensusStateRequest::set_last_height(::int64_t value) {
  _internal_set_last_height(value);
  // @@protoc_insertion_point(field_set:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest.last_height)
}
inline ::int64_t QueryUpgradedConsensusStateRequest::_internal_last_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_height_;
}
inline void QueryUpgradedConsensusStateRequest::_internal_set_last_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_height_ = value;
}

// -------------------------------------------------------------------

// QueryUpgradedConsensusStateResponse

// bytes upgraded_consensus_state = 2 [json_name = "upgradedConsensusState", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];
inline void QueryUpgradedConsensusStateResponse::clear_upgraded_consensus_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upgraded_consensus_state_.ClearToEmpty();
}
inline const std::string& QueryUpgradedConsensusStateResponse::upgraded_consensus_state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.upgraded_consensus_state)
  return _internal_upgraded_consensus_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryUpgradedConsensusStateResponse::set_upgraded_consensus_state(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upgraded_consensus_state_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.upgraded_consensus_state)
}
inline std::string* QueryUpgradedConsensusStateResponse::mutable_upgraded_consensus_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_upgraded_consensus_state();
  // @@protoc_insertion_point(field_mutable:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.upgraded_consensus_state)
  return _s;
}
inline const std::string& QueryUpgradedConsensusStateResponse::_internal_upgraded_consensus_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.upgraded_consensus_state_.Get();
}
inline void QueryUpgradedConsensusStateResponse::_internal_set_upgraded_consensus_state(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upgraded_consensus_state_.Set(value, GetArena());
}
inline std::string* QueryUpgradedConsensusStateResponse::_internal_mutable_upgraded_consensus_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.upgraded_consensus_state_.Mutable( GetArena());
}
inline std::string* QueryUpgradedConsensusStateResponse::release_upgraded_consensus_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.upgraded_consensus_state)
  return _impl_.upgraded_consensus_state_.Release();
}
inline void QueryUpgradedConsensusStateResponse::set_allocated_upgraded_consensus_state(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upgraded_consensus_state_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.upgraded_consensus_state_.IsDefault()) {
    _impl_.upgraded_consensus_state_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse.upgraded_consensus_state)
}

// -------------------------------------------------------------------

// QueryModuleVersionsRequest

// string module_name = 1 [json_name = "moduleName"];
inline void QueryModuleVersionsRequest::clear_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.ClearToEmpty();
}
inline const std::string& QueryModuleVersionsRequest::module_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.module_name)
  return _internal_module_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryModuleVersionsRequest::set_module_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.module_name)
}
inline std::string* QueryModuleVersionsRequest::mutable_module_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_module_name();
  // @@protoc_insertion_point(field_mutable:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.module_name)
  return _s;
}
inline const std::string& QueryModuleVersionsRequest::_internal_module_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_name_.Get();
}
inline void QueryModuleVersionsRequest::_internal_set_module_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(value, GetArena());
}
inline std::string* QueryModuleVersionsRequest::_internal_mutable_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.module_name_.Mutable( GetArena());
}
inline std::string* QueryModuleVersionsRequest::release_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.module_name)
  return _impl_.module_name_.Release();
}
inline void QueryModuleVersionsRequest::set_allocated_module_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.module_name_.IsDefault()) {
    _impl_.module_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.upgrade.v1beta1.QueryModuleVersionsRequest.module_name)
}

// -------------------------------------------------------------------

// QueryModuleVersionsResponse

// repeated .cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1 [json_name = "moduleVersions"];
inline int QueryModuleVersionsResponse::_internal_module_versions_size() const {
  return _internal_module_versions().size();
}
inline int QueryModuleVersionsResponse::module_versions_size() const {
  return _internal_module_versions_size();
}
inline ::cosmos::upgrade::v1beta1::ModuleVersion* QueryModuleVersionsResponse::mutable_module_versions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.module_versions)
  return _internal_mutable_module_versions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>* QueryModuleVersionsResponse::mutable_module_versions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.module_versions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_module_versions();
}
inline const ::cosmos::upgrade::v1beta1::ModuleVersion& QueryModuleVersionsResponse::module_versions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.module_versions)
  return _internal_module_versions().Get(index);
}
inline ::cosmos::upgrade::v1beta1::ModuleVersion* QueryModuleVersionsResponse::add_module_versions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::upgrade::v1beta1::ModuleVersion* _add = _internal_mutable_module_versions()->Add();
  // @@protoc_insertion_point(field_add:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.module_versions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>& QueryModuleVersionsResponse::module_versions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.upgrade.v1beta1.QueryModuleVersionsResponse.module_versions)
  return _internal_module_versions();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>&
QueryModuleVersionsResponse::_internal_module_versions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_versions_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::upgrade::v1beta1::ModuleVersion>*
QueryModuleVersionsResponse::_internal_mutable_module_versions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.module_versions_;
}

// -------------------------------------------------------------------

// QueryAuthorityRequest

// -------------------------------------------------------------------

// QueryAuthorityResponse

// string address = 1 [json_name = "address"];
inline void QueryAuthorityResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryAuthorityResponse::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.upgrade.v1beta1.QueryAuthorityResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAuthorityResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.upgrade.v1beta1.QueryAuthorityResponse.address)
}
inline std::string* QueryAuthorityResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.upgrade.v1beta1.QueryAuthorityResponse.address)
  return _s;
}
inline const std::string& QueryAuthorityResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryAuthorityResponse::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryAuthorityResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryAuthorityResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.upgrade.v1beta1.QueryAuthorityResponse.address)
  return _impl_.address_.Release();
}
inline void QueryAuthorityResponse::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.upgrade.v1beta1.QueryAuthorityResponse.address)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace upgrade
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fupgrade_2fv1beta1_2fquery_2eproto_2epb_2eh
