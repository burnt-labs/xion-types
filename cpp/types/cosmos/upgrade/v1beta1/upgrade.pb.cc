// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/upgrade/v1beta1/upgrade.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/upgrade/v1beta1/upgrade.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace upgrade {
namespace v1beta1 {

inline constexpr ModuleVersion::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleVersion::ModuleVersion(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleVersionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleVersionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleVersionDefaultTypeInternal() {}
  union {
    ModuleVersion _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleVersionDefaultTypeInternal _ModuleVersion_default_instance_;

inline constexpr CancelSoftwareUpgradeProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelSoftwareUpgradeProposal::CancelSoftwareUpgradeProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelSoftwareUpgradeProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelSoftwareUpgradeProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelSoftwareUpgradeProposalDefaultTypeInternal() {}
  union {
    CancelSoftwareUpgradeProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelSoftwareUpgradeProposalDefaultTypeInternal _CancelSoftwareUpgradeProposal_default_instance_;

inline constexpr Plan::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{nullptr},
        upgraded_client_state_{nullptr},
        height_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Plan::Plan(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlanDefaultTypeInternal() {}
  union {
    Plan _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlanDefaultTypeInternal _Plan_default_instance_;

inline constexpr SoftwareUpgradeProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        plan_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SoftwareUpgradeProposal::SoftwareUpgradeProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SoftwareUpgradeProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SoftwareUpgradeProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SoftwareUpgradeProposalDefaultTypeInternal() {}
  union {
    SoftwareUpgradeProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SoftwareUpgradeProposalDefaultTypeInternal _SoftwareUpgradeProposal_default_instance_;
}  // namespace v1beta1
}  // namespace upgrade
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::Plan, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::Plan, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::Plan, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::Plan, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::Plan, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::Plan, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::Plan, _impl_.upgraded_client_state_),
        ~0u,
        0,
        ~0u,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal, _impl_.plan_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::CancelSoftwareUpgradeProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::CancelSoftwareUpgradeProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::CancelSoftwareUpgradeProposal, _impl_.description_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::ModuleVersion, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::ModuleVersion, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::cosmos::upgrade::v1beta1::ModuleVersion, _impl_.version_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::cosmos::upgrade::v1beta1::Plan)},
        {18, 29, -1, sizeof(::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal)},
        {32, -1, -1, sizeof(::cosmos::upgrade::v1beta1::CancelSoftwareUpgradeProposal)},
        {42, -1, -1, sizeof(::cosmos::upgrade::v1beta1::ModuleVersion)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::upgrade::v1beta1::_Plan_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_SoftwareUpgradeProposal_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_CancelSoftwareUpgradeProposal_default_instance_._instance,
    &::cosmos::upgrade::v1beta1::_ModuleVersion_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$cosmos/upgrade/v1beta1/upgrade.proto\022\026"
    "cosmos.upgrade.v1beta1\032\031google/protobuf/"
    "any.proto\032\024gogoproto/gogo.proto\032\037google/"
    "protobuf/timestamp.proto\032\031cosmos_proto/c"
    "osmos.proto\032\021amino/amino.proto\"\357\001\n\004Plan\022"
    "\022\n\004name\030\001 \001(\tR\004name\022\?\n\004time\030\002 \001(\0132\032.goog"
    "le.protobuf.TimestampB\017\030\001\310\336\037\000\220\337\037\001\250\347\260*\001R\004"
    "time\022\026\n\006height\030\003 \001(\003R\006height\022\022\n\004info\030\004 \001"
    "(\tR\004info\022L\n\025upgraded_client_state\030\005 \001(\0132"
    "\024.google.protobuf.AnyB\002\030\001R\023upgradedClien"
    "tState:\030\350\240\037\001\212\347\260*\017cosmos-sdk/Plan\"\333\001\n\027Sof"
    "twareUpgradeProposal\022\024\n\005title\030\001 \001(\tR\005tit"
    "le\022 \n\013description\030\002 \001(\tR\013description\022;\n\004"
    "plan\030\003 \001(\0132\034.cosmos.upgrade.v1beta1.Plan"
    "B\t\310\336\037\000\250\347\260*\001R\004plan:K\030\001\350\240\037\001\312\264-\032cosmos.gov."
    "v1beta1.Content\212\347\260*\"cosmos-sdk/SoftwareU"
    "pgradeProposal\"\252\001\n\035CancelSoftwareUpgrade"
    "Proposal\022\024\n\005title\030\001 \001(\tR\005title\022 \n\013descri"
    "ption\030\002 \001(\tR\013description:Q\030\001\350\240\037\001\312\264-\032cosm"
    "os.gov.v1beta1.Content\212\347\260*(cosmos-sdk/Ca"
    "ncelSoftwareUpgradeProposal\"V\n\rModuleVer"
    "sion\022\022\n\004name\030\001 \001(\tR\004name\022\030\n\007version\030\002 \001("
    "\004R\007version:\027\350\240\037\001\322\264-\017cosmos-sdk 0.43B\"Z\034c"
    "osmossdk.io/x/upgrade/types\310\341\036\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto_deps[5] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto = {
    false,
    false,
    959,
    descriptor_table_protodef_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
    "cosmos/upgrade/v1beta1/upgrade.proto",
    &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto_once,
    descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto_deps,
    5,
    4,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
    file_level_service_descriptors_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
};
namespace cosmos {
namespace upgrade {
namespace v1beta1 {
// ===================================================================

class Plan::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Plan>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Plan, _impl_._has_bits_);
};

void Plan::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.time_ != nullptr) _impl_.time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Plan::clear_upgraded_client_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.upgraded_client_state_ != nullptr) _impl_.upgraded_client_state_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Plan::Plan(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.Plan)
}
inline PROTOBUF_NDEBUG_INLINE Plan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::upgrade::v1beta1::Plan& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        info_(arena, from.info_) {}

Plan::Plan(
    ::google::protobuf::Arena* arena,
    const Plan& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Plan* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.time_)
                        : nullptr;
  _impl_.upgraded_client_state_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.upgraded_client_state_)
                        : nullptr;
  _impl_.height_ = from._impl_.height_;

  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.Plan)
}
inline PROTOBUF_NDEBUG_INLINE Plan::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        info_(arena) {}

inline void Plan::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::height_));
}
Plan::~Plan() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.Plan)
  SharedDtor(*this);
}
inline void Plan::SharedDtor(MessageLite& self) {
  Plan& this_ = static_cast<Plan&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.info_.Destroy();
  delete this_._impl_.time_;
  delete this_._impl_.upgraded_client_state_;
  this_._impl_.~Impl_();
}

inline void* Plan::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Plan(arena);
}
constexpr auto Plan::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Plan),
                                            alignof(Plan));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Plan::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Plan_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Plan::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Plan>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Plan::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Plan>(), &Plan::ByteSizeLong,
            &Plan::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Plan, _impl_._cached_size_),
        false,
    },
    &Plan::kDescriptorMethods,
    &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Plan::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 44, 2> Plan::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Plan, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::upgrade::v1beta1::Plan>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.name_)}},
    // .google.protobuf.Timestamp time = 2 [json_name = "time", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.time_)}},
    // int64 height = 3 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Plan, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.height_)}},
    // string info = 4 [json_name = "info"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Plan, _impl_.info_)}},
    // .google.protobuf.Any upgraded_client_state = 5 [json_name = "upgradedClientState", deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(Plan, _impl_.upgraded_client_state_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp time = 2 [json_name = "time", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 height = 3 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string info = 4 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.info_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any upgraded_client_state = 5 [json_name = "upgradedClientState", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Plan, _impl_.upgraded_client_state_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\33\4\0\0\4\0\0\0"
    "cosmos.upgrade.v1beta1.Plan"
    "name"
    "info"
  }},
};

PROTOBUF_NOINLINE void Plan::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.Plan)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.info_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.time_ != nullptr);
      _impl_.time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.upgraded_client_state_ != nullptr);
      _impl_.upgraded_client_state_->Clear();
    }
  }
  _impl_.height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Plan::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Plan& this_ = static_cast<const Plan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Plan::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Plan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.Plan)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.Plan.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp time = 2 [json_name = "time", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.time_, this_._impl_.time_->GetCachedSize(), target,
                stream);
          }

          // int64 height = 3 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_height(), target);
          }

          // string info = 4 [json_name = "info"];
          if (!this_._internal_info().empty()) {
            const std::string& _s = this_._internal_info();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.Plan.info");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // .google.protobuf.Any upgraded_client_state = 5 [json_name = "upgradedClientState", deprecated = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.upgraded_client_state_, this_._impl_.upgraded_client_state_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.Plan)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Plan::ByteSizeLong(const MessageLite& base) {
          const Plan& this_ = static_cast<const Plan&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Plan::ByteSizeLong() const {
          const Plan& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.Plan)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string info = 4 [json_name = "info"];
            if (!this_._internal_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_info());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .google.protobuf.Timestamp time = 2 [json_name = "time", deprecated = true, (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.time_);
            }
            // .google.protobuf.Any upgraded_client_state = 5 [json_name = "upgradedClientState", deprecated = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.upgraded_client_state_);
            }
          }
           {
            // int64 height = 3 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Plan::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Plan*>(&to_msg);
  auto& from = static_cast<const Plan&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.Plan)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_info().empty()) {
    _this->_internal_set_info(from._internal_info());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.time_ != nullptr);
      if (_this->_impl_.time_ == nullptr) {
        _this->_impl_.time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.time_);
      } else {
        _this->_impl_.time_->MergeFrom(*from._impl_.time_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.upgraded_client_state_ != nullptr);
      if (_this->_impl_.upgraded_client_state_ == nullptr) {
        _this->_impl_.upgraded_client_state_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.upgraded_client_state_);
      } else {
        _this->_impl_.upgraded_client_state_->MergeFrom(*from._impl_.upgraded_client_state_);
      }
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Plan::CopyFrom(const Plan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.Plan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Plan::InternalSwap(Plan* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, &other->_impl_.info_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Plan, _impl_.height_)
      + sizeof(Plan::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Plan, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata Plan::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SoftwareUpgradeProposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SoftwareUpgradeProposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_._has_bits_);
};

SoftwareUpgradeProposal::SoftwareUpgradeProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
}
inline PROTOBUF_NDEBUG_INLINE SoftwareUpgradeProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        title_(arena, from.title_),
        description_(arena, from.description_) {}

SoftwareUpgradeProposal::SoftwareUpgradeProposal(
    ::google::protobuf::Arena* arena,
    const SoftwareUpgradeProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SoftwareUpgradeProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.plan_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::upgrade::v1beta1::Plan>(
                              arena, *from._impl_.plan_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
}
inline PROTOBUF_NDEBUG_INLINE SoftwareUpgradeProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        title_(arena),
        description_(arena) {}

inline void SoftwareUpgradeProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.plan_ = {};
}
SoftwareUpgradeProposal::~SoftwareUpgradeProposal() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
  SharedDtor(*this);
}
inline void SoftwareUpgradeProposal::SharedDtor(MessageLite& self) {
  SoftwareUpgradeProposal& this_ = static_cast<SoftwareUpgradeProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.plan_;
  this_._impl_.~Impl_();
}

inline void* SoftwareUpgradeProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SoftwareUpgradeProposal(arena);
}
constexpr auto SoftwareUpgradeProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SoftwareUpgradeProposal),
                                            alignof(SoftwareUpgradeProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SoftwareUpgradeProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SoftwareUpgradeProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SoftwareUpgradeProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SoftwareUpgradeProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SoftwareUpgradeProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SoftwareUpgradeProposal>(), &SoftwareUpgradeProposal::ByteSizeLong,
            &SoftwareUpgradeProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_._cached_size_),
        false,
    },
    &SoftwareUpgradeProposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SoftwareUpgradeProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 71, 2> SoftwareUpgradeProposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::upgrade::v1beta1::SoftwareUpgradeProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_.title_)}},
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_.description_)}},
    // .cosmos.upgrade.v1beta1.Plan plan = 3 [json_name = "plan", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_.plan_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.upgrade.v1beta1.Plan plan = 3 [json_name = "plan", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(SoftwareUpgradeProposal, _impl_.plan_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::upgrade::v1beta1::Plan>()},
  }}, {{
    "\56\5\13\0\0\0\0\0"
    "cosmos.upgrade.v1beta1.SoftwareUpgradeProposal"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void SoftwareUpgradeProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.plan_ != nullptr);
    _impl_.plan_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SoftwareUpgradeProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SoftwareUpgradeProposal& this_ = static_cast<const SoftwareUpgradeProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SoftwareUpgradeProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SoftwareUpgradeProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.SoftwareUpgradeProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.SoftwareUpgradeProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.upgrade.v1beta1.Plan plan = 3 [json_name = "plan", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.plan_, this_._impl_.plan_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SoftwareUpgradeProposal::ByteSizeLong(const MessageLite& base) {
          const SoftwareUpgradeProposal& this_ = static_cast<const SoftwareUpgradeProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SoftwareUpgradeProposal::ByteSizeLong() const {
          const SoftwareUpgradeProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
           {
            // .cosmos.upgrade.v1beta1.Plan plan = 3 [json_name = "plan", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.plan_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SoftwareUpgradeProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SoftwareUpgradeProposal*>(&to_msg);
  auto& from = static_cast<const SoftwareUpgradeProposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.plan_ != nullptr);
    if (_this->_impl_.plan_ == nullptr) {
      _this->_impl_.plan_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::upgrade::v1beta1::Plan>(arena, *from._impl_.plan_);
    } else {
      _this->_impl_.plan_->MergeFrom(*from._impl_.plan_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SoftwareUpgradeProposal::CopyFrom(const SoftwareUpgradeProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.SoftwareUpgradeProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SoftwareUpgradeProposal::InternalSwap(SoftwareUpgradeProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.plan_, other->_impl_.plan_);
}

::google::protobuf::Metadata SoftwareUpgradeProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelSoftwareUpgradeProposal::_Internal {
 public:
};

CancelSoftwareUpgradeProposal::CancelSoftwareUpgradeProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
}
inline PROTOBUF_NDEBUG_INLINE CancelSoftwareUpgradeProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::upgrade::v1beta1::CancelSoftwareUpgradeProposal& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        _cached_size_{0} {}

CancelSoftwareUpgradeProposal::CancelSoftwareUpgradeProposal(
    ::google::protobuf::Arena* arena,
    const CancelSoftwareUpgradeProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelSoftwareUpgradeProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
}
inline PROTOBUF_NDEBUG_INLINE CancelSoftwareUpgradeProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void CancelSoftwareUpgradeProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CancelSoftwareUpgradeProposal::~CancelSoftwareUpgradeProposal() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
  SharedDtor(*this);
}
inline void CancelSoftwareUpgradeProposal::SharedDtor(MessageLite& self) {
  CancelSoftwareUpgradeProposal& this_ = static_cast<CancelSoftwareUpgradeProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CancelSoftwareUpgradeProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelSoftwareUpgradeProposal(arena);
}
constexpr auto CancelSoftwareUpgradeProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelSoftwareUpgradeProposal),
                                            alignof(CancelSoftwareUpgradeProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelSoftwareUpgradeProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelSoftwareUpgradeProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelSoftwareUpgradeProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelSoftwareUpgradeProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelSoftwareUpgradeProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelSoftwareUpgradeProposal>(), &CancelSoftwareUpgradeProposal::ByteSizeLong,
            &CancelSoftwareUpgradeProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelSoftwareUpgradeProposal, _impl_._cached_size_),
        false,
    },
    &CancelSoftwareUpgradeProposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelSoftwareUpgradeProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 77, 2> CancelSoftwareUpgradeProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::upgrade::v1beta1::CancelSoftwareUpgradeProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelSoftwareUpgradeProposal, _impl_.description_)}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelSoftwareUpgradeProposal, _impl_.title_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(CancelSoftwareUpgradeProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CancelSoftwareUpgradeProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\5\13\0\0\0\0\0"
    "cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void CancelSoftwareUpgradeProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelSoftwareUpgradeProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelSoftwareUpgradeProposal& this_ = static_cast<const CancelSoftwareUpgradeProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelSoftwareUpgradeProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelSoftwareUpgradeProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelSoftwareUpgradeProposal::ByteSizeLong(const MessageLite& base) {
          const CancelSoftwareUpgradeProposal& this_ = static_cast<const CancelSoftwareUpgradeProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelSoftwareUpgradeProposal::ByteSizeLong() const {
          const CancelSoftwareUpgradeProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelSoftwareUpgradeProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelSoftwareUpgradeProposal*>(&to_msg);
  auto& from = static_cast<const CancelSoftwareUpgradeProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelSoftwareUpgradeProposal::CopyFrom(const CancelSoftwareUpgradeProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelSoftwareUpgradeProposal::InternalSwap(CancelSoftwareUpgradeProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata CancelSoftwareUpgradeProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleVersion::_Internal {
 public:
};

ModuleVersion::ModuleVersion(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.upgrade.v1beta1.ModuleVersion)
}
inline PROTOBUF_NDEBUG_INLINE ModuleVersion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::upgrade::v1beta1::ModuleVersion& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

ModuleVersion::ModuleVersion(
    ::google::protobuf::Arena* arena,
    const ModuleVersion& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleVersion* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:cosmos.upgrade.v1beta1.ModuleVersion)
}
inline PROTOBUF_NDEBUG_INLINE ModuleVersion::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void ModuleVersion::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
ModuleVersion::~ModuleVersion() {
  // @@protoc_insertion_point(destructor:cosmos.upgrade.v1beta1.ModuleVersion)
  SharedDtor(*this);
}
inline void ModuleVersion::SharedDtor(MessageLite& self) {
  ModuleVersion& this_ = static_cast<ModuleVersion&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ModuleVersion::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModuleVersion(arena);
}
constexpr auto ModuleVersion::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ModuleVersion),
                                            alignof(ModuleVersion));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModuleVersion::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModuleVersion_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModuleVersion::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModuleVersion>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModuleVersion::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModuleVersion>(), &ModuleVersion::ByteSizeLong,
            &ModuleVersion::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModuleVersion, _impl_._cached_size_),
        false,
    },
    &ModuleVersion::kDescriptorMethods,
    &descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModuleVersion::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> ModuleVersion::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::upgrade::v1beta1::ModuleVersion>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 version = 2 [json_name = "version"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ModuleVersion, _impl_.version_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ModuleVersion, _impl_.version_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModuleVersion, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ModuleVersion, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 version = 2 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(ModuleVersion, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\44\4\0\0\0\0\0\0"
    "cosmos.upgrade.v1beta1.ModuleVersion"
    "name"
  }},
};

PROTOBUF_NOINLINE void ModuleVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.upgrade.v1beta1.ModuleVersion)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.version_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModuleVersion::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModuleVersion& this_ = static_cast<const ModuleVersion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModuleVersion::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModuleVersion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.upgrade.v1beta1.ModuleVersion)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.upgrade.v1beta1.ModuleVersion.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint64 version = 2 [json_name = "version"];
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_version(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.upgrade.v1beta1.ModuleVersion)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModuleVersion::ByteSizeLong(const MessageLite& base) {
          const ModuleVersion& this_ = static_cast<const ModuleVersion&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModuleVersion::ByteSizeLong() const {
          const ModuleVersion& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.upgrade.v1beta1.ModuleVersion)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // uint64 version = 2 [json_name = "version"];
            if (this_._internal_version() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModuleVersion::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleVersion*>(&to_msg);
  auto& from = static_cast<const ModuleVersion&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.upgrade.v1beta1.ModuleVersion)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleVersion::CopyFrom(const ModuleVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.upgrade.v1beta1.ModuleVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleVersion::InternalSwap(ModuleVersion* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata ModuleVersion::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace upgrade
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fupgrade_2fv1beta1_2fupgrade_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
