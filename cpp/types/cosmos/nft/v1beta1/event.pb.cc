// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/nft/v1beta1/event.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/nft/v1beta1/event.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace nft {
namespace v1beta1 {

inline constexpr EventSend::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : class_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        receiver_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventSend::EventSend(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventSendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventSendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventSendDefaultTypeInternal() {}
  union {
    EventSend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventSendDefaultTypeInternal _EventSend_default_instance_;

inline constexpr EventMint::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : class_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventMint::EventMint(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventMintDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventMintDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventMintDefaultTypeInternal() {}
  union {
    EventMint _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventMintDefaultTypeInternal _EventMint_default_instance_;

inline constexpr EventBurn::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : class_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owner_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventBurn::EventBurn(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventBurnDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventBurnDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventBurnDefaultTypeInternal() {}
  union {
    EventBurn _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventBurnDefaultTypeInternal _EventBurn_default_instance_;
}  // namespace v1beta1
}  // namespace nft
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fnft_2fv1beta1_2fevent_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fnft_2fv1beta1_2fevent_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fnft_2fv1beta1_2fevent_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventSend, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventSend, _impl_.class_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventSend, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventSend, _impl_.sender_),
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventSend, _impl_.receiver_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventMint, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventMint, _impl_.class_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventMint, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventMint, _impl_.owner_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventBurn, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventBurn, _impl_.class_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventBurn, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::nft::v1beta1::EventBurn, _impl_.owner_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::nft::v1beta1::EventSend)},
        {12, -1, -1, sizeof(::cosmos::nft::v1beta1::EventMint)},
        {23, -1, -1, sizeof(::cosmos::nft::v1beta1::EventBurn)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::nft::v1beta1::_EventSend_default_instance_._instance,
    &::cosmos::nft::v1beta1::_EventMint_default_instance_._instance,
    &::cosmos::nft::v1beta1::_EventBurn_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fnft_2fv1beta1_2fevent_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036cosmos/nft/v1beta1/event.proto\022\022cosmos"
    ".nft.v1beta1\"j\n\tEventSend\022\031\n\010class_id\030\001 "
    "\001(\tR\007classId\022\016\n\002id\030\002 \001(\tR\002id\022\026\n\006sender\030\003"
    " \001(\tR\006sender\022\032\n\010receiver\030\004 \001(\tR\010receiver"
    "\"L\n\tEventMint\022\031\n\010class_id\030\001 \001(\tR\007classId"
    "\022\016\n\002id\030\002 \001(\tR\002id\022\024\n\005owner\030\003 \001(\tR\005owner\"L"
    "\n\tEventBurn\022\031\n\010class_id\030\001 \001(\tR\007classId\022\016"
    "\n\002id\030\002 \001(\tR\002id\022\024\n\005owner\030\003 \001(\tR\005ownerB\024Z\022"
    "cosmossdk.io/x/nftb\006proto3"
};
static ::absl::once_flag descriptor_table_cosmos_2fnft_2fv1beta1_2fevent_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fnft_2fv1beta1_2fevent_2eproto = {
    false,
    false,
    346,
    descriptor_table_protodef_cosmos_2fnft_2fv1beta1_2fevent_2eproto,
    "cosmos/nft/v1beta1/event.proto",
    &descriptor_table_cosmos_2fnft_2fv1beta1_2fevent_2eproto_once,
    nullptr,
    0,
    3,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fnft_2fv1beta1_2fevent_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fnft_2fv1beta1_2fevent_2eproto,
    file_level_service_descriptors_cosmos_2fnft_2fv1beta1_2fevent_2eproto,
};
namespace cosmos {
namespace nft {
namespace v1beta1 {
// ===================================================================

class EventSend::_Internal {
 public:
};

EventSend::EventSend(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.nft.v1beta1.EventSend)
}
inline PROTOBUF_NDEBUG_INLINE EventSend::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::nft::v1beta1::EventSend& from_msg)
      : class_id_(arena, from.class_id_),
        id_(arena, from.id_),
        sender_(arena, from.sender_),
        receiver_(arena, from.receiver_),
        _cached_size_{0} {}

EventSend::EventSend(
    ::google::protobuf::Arena* arena,
    const EventSend& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventSend* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.nft.v1beta1.EventSend)
}
inline PROTOBUF_NDEBUG_INLINE EventSend::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : class_id_(arena),
        id_(arena),
        sender_(arena),
        receiver_(arena),
        _cached_size_{0} {}

inline void EventSend::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventSend::~EventSend() {
  // @@protoc_insertion_point(destructor:cosmos.nft.v1beta1.EventSend)
  SharedDtor(*this);
}
inline void EventSend::SharedDtor(MessageLite& self) {
  EventSend& this_ = static_cast<EventSend&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.class_id_.Destroy();
  this_._impl_.id_.Destroy();
  this_._impl_.sender_.Destroy();
  this_._impl_.receiver_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventSend::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventSend(arena);
}
constexpr auto EventSend::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventSend),
                                            alignof(EventSend));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventSend::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventSend_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventSend::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventSend>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventSend::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventSend>(), &EventSend::ByteSizeLong,
            &EventSend::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventSend, _impl_._cached_size_),
        false,
    },
    &EventSend::kDescriptorMethods,
    &descriptor_table_cosmos_2fnft_2fv1beta1_2fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventSend::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 61, 2> EventSend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::nft::v1beta1::EventSend>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string receiver = 4 [json_name = "receiver"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(EventSend, _impl_.receiver_)}},
    // string class_id = 1 [json_name = "classId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventSend, _impl_.class_id_)}},
    // string id = 2 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventSend, _impl_.id_)}},
    // string sender = 3 [json_name = "sender"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventSend, _impl_.sender_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string class_id = 1 [json_name = "classId"];
    {PROTOBUF_FIELD_OFFSET(EventSend, _impl_.class_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 2 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(EventSend, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender = 3 [json_name = "sender"];
    {PROTOBUF_FIELD_OFFSET(EventSend, _impl_.sender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string receiver = 4 [json_name = "receiver"];
    {PROTOBUF_FIELD_OFFSET(EventSend, _impl_.receiver_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\10\2\6\10\0\0\0"
    "cosmos.nft.v1beta1.EventSend"
    "class_id"
    "id"
    "sender"
    "receiver"
  }},
};

PROTOBUF_NOINLINE void EventSend::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.nft.v1beta1.EventSend)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.class_id_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  _impl_.receiver_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventSend::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventSend& this_ = static_cast<const EventSend&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventSend::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventSend& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.nft.v1beta1.EventSend)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string class_id = 1 [json_name = "classId"];
          if (!this_._internal_class_id().empty()) {
            const std::string& _s = this_._internal_class_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventSend.class_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string id = 2 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventSend.id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string sender = 3 [json_name = "sender"];
          if (!this_._internal_sender().empty()) {
            const std::string& _s = this_._internal_sender();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventSend.sender");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string receiver = 4 [json_name = "receiver"];
          if (!this_._internal_receiver().empty()) {
            const std::string& _s = this_._internal_receiver();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventSend.receiver");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.nft.v1beta1.EventSend)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventSend::ByteSizeLong(const MessageLite& base) {
          const EventSend& this_ = static_cast<const EventSend&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventSend::ByteSizeLong() const {
          const EventSend& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.nft.v1beta1.EventSend)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string class_id = 1 [json_name = "classId"];
            if (!this_._internal_class_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_class_id());
            }
            // string id = 2 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string sender = 3 [json_name = "sender"];
            if (!this_._internal_sender().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sender());
            }
            // string receiver = 4 [json_name = "receiver"];
            if (!this_._internal_receiver().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_receiver());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventSend::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventSend*>(&to_msg);
  auto& from = static_cast<const EventSend&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.nft.v1beta1.EventSend)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_class_id().empty()) {
    _this->_internal_set_class_id(from._internal_class_id());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (!from._internal_receiver().empty()) {
    _this->_internal_set_receiver(from._internal_receiver());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventSend::CopyFrom(const EventSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.nft.v1beta1.EventSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventSend::InternalSwap(EventSend* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_id_, &other->_impl_.class_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_, &other->_impl_.sender_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.receiver_, &other->_impl_.receiver_, arena);
}

::google::protobuf::Metadata EventSend::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventMint::_Internal {
 public:
};

EventMint::EventMint(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.nft.v1beta1.EventMint)
}
inline PROTOBUF_NDEBUG_INLINE EventMint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::nft::v1beta1::EventMint& from_msg)
      : class_id_(arena, from.class_id_),
        id_(arena, from.id_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

EventMint::EventMint(
    ::google::protobuf::Arena* arena,
    const EventMint& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventMint* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.nft.v1beta1.EventMint)
}
inline PROTOBUF_NDEBUG_INLINE EventMint::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : class_id_(arena),
        id_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void EventMint::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventMint::~EventMint() {
  // @@protoc_insertion_point(destructor:cosmos.nft.v1beta1.EventMint)
  SharedDtor(*this);
}
inline void EventMint::SharedDtor(MessageLite& self) {
  EventMint& this_ = static_cast<EventMint&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.class_id_.Destroy();
  this_._impl_.id_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventMint::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventMint(arena);
}
constexpr auto EventMint::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventMint),
                                            alignof(EventMint));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventMint::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventMint_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventMint::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventMint>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventMint::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventMint>(), &EventMint::ByteSizeLong,
            &EventMint::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventMint, _impl_._cached_size_),
        false,
    },
    &EventMint::kDescriptorMethods,
    &descriptor_table_cosmos_2fnft_2fv1beta1_2fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventMint::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 52, 2> EventMint::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::nft::v1beta1::EventMint>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string class_id = 1 [json_name = "classId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventMint, _impl_.class_id_)}},
    // string id = 2 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventMint, _impl_.id_)}},
    // string owner = 3 [json_name = "owner"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventMint, _impl_.owner_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string class_id = 1 [json_name = "classId"];
    {PROTOBUF_FIELD_OFFSET(EventMint, _impl_.class_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 2 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(EventMint, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 3 [json_name = "owner"];
    {PROTOBUF_FIELD_OFFSET(EventMint, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\10\2\5\0\0\0\0"
    "cosmos.nft.v1beta1.EventMint"
    "class_id"
    "id"
    "owner"
  }},
};

PROTOBUF_NOINLINE void EventMint::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.nft.v1beta1.EventMint)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.class_id_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventMint::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventMint& this_ = static_cast<const EventMint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventMint::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventMint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.nft.v1beta1.EventMint)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string class_id = 1 [json_name = "classId"];
          if (!this_._internal_class_id().empty()) {
            const std::string& _s = this_._internal_class_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventMint.class_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string id = 2 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventMint.id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string owner = 3 [json_name = "owner"];
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventMint.owner");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.nft.v1beta1.EventMint)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventMint::ByteSizeLong(const MessageLite& base) {
          const EventMint& this_ = static_cast<const EventMint&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventMint::ByteSizeLong() const {
          const EventMint& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.nft.v1beta1.EventMint)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string class_id = 1 [json_name = "classId"];
            if (!this_._internal_class_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_class_id());
            }
            // string id = 2 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string owner = 3 [json_name = "owner"];
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventMint::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventMint*>(&to_msg);
  auto& from = static_cast<const EventMint&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.nft.v1beta1.EventMint)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_class_id().empty()) {
    _this->_internal_set_class_id(from._internal_class_id());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventMint::CopyFrom(const EventMint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.nft.v1beta1.EventMint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventMint::InternalSwap(EventMint* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_id_, &other->_impl_.class_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata EventMint::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventBurn::_Internal {
 public:
};

EventBurn::EventBurn(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.nft.v1beta1.EventBurn)
}
inline PROTOBUF_NDEBUG_INLINE EventBurn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::nft::v1beta1::EventBurn& from_msg)
      : class_id_(arena, from.class_id_),
        id_(arena, from.id_),
        owner_(arena, from.owner_),
        _cached_size_{0} {}

EventBurn::EventBurn(
    ::google::protobuf::Arena* arena,
    const EventBurn& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventBurn* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.nft.v1beta1.EventBurn)
}
inline PROTOBUF_NDEBUG_INLINE EventBurn::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : class_id_(arena),
        id_(arena),
        owner_(arena),
        _cached_size_{0} {}

inline void EventBurn::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
EventBurn::~EventBurn() {
  // @@protoc_insertion_point(destructor:cosmos.nft.v1beta1.EventBurn)
  SharedDtor(*this);
}
inline void EventBurn::SharedDtor(MessageLite& self) {
  EventBurn& this_ = static_cast<EventBurn&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.class_id_.Destroy();
  this_._impl_.id_.Destroy();
  this_._impl_.owner_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EventBurn::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventBurn(arena);
}
constexpr auto EventBurn::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EventBurn),
                                            alignof(EventBurn));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventBurn::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventBurn_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventBurn::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventBurn>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventBurn::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventBurn>(), &EventBurn::ByteSizeLong,
            &EventBurn::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventBurn, _impl_._cached_size_),
        false,
    },
    &EventBurn::kDescriptorMethods,
    &descriptor_table_cosmos_2fnft_2fv1beta1_2fevent_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventBurn::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 52, 2> EventBurn::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::nft::v1beta1::EventBurn>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string class_id = 1 [json_name = "classId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventBurn, _impl_.class_id_)}},
    // string id = 2 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EventBurn, _impl_.id_)}},
    // string owner = 3 [json_name = "owner"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(EventBurn, _impl_.owner_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string class_id = 1 [json_name = "classId"];
    {PROTOBUF_FIELD_OFFSET(EventBurn, _impl_.class_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 2 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(EventBurn, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string owner = 3 [json_name = "owner"];
    {PROTOBUF_FIELD_OFFSET(EventBurn, _impl_.owner_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\10\2\5\0\0\0\0"
    "cosmos.nft.v1beta1.EventBurn"
    "class_id"
    "id"
    "owner"
  }},
};

PROTOBUF_NOINLINE void EventBurn::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.nft.v1beta1.EventBurn)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.class_id_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.owner_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventBurn::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventBurn& this_ = static_cast<const EventBurn&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventBurn::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventBurn& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.nft.v1beta1.EventBurn)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string class_id = 1 [json_name = "classId"];
          if (!this_._internal_class_id().empty()) {
            const std::string& _s = this_._internal_class_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventBurn.class_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string id = 2 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventBurn.id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string owner = 3 [json_name = "owner"];
          if (!this_._internal_owner().empty()) {
            const std::string& _s = this_._internal_owner();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.nft.v1beta1.EventBurn.owner");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.nft.v1beta1.EventBurn)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventBurn::ByteSizeLong(const MessageLite& base) {
          const EventBurn& this_ = static_cast<const EventBurn&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventBurn::ByteSizeLong() const {
          const EventBurn& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.nft.v1beta1.EventBurn)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string class_id = 1 [json_name = "classId"];
            if (!this_._internal_class_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_class_id());
            }
            // string id = 2 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string owner = 3 [json_name = "owner"];
            if (!this_._internal_owner().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owner());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventBurn::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventBurn*>(&to_msg);
  auto& from = static_cast<const EventBurn&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.nft.v1beta1.EventBurn)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_class_id().empty()) {
    _this->_internal_set_class_id(from._internal_class_id());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_owner().empty()) {
    _this->_internal_set_owner(from._internal_owner());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventBurn::CopyFrom(const EventBurn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.nft.v1beta1.EventBurn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventBurn::InternalSwap(EventBurn* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.class_id_, &other->_impl_.class_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owner_, &other->_impl_.owner_, arena);
}

::google::protobuf::Metadata EventBurn::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace nft
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fnft_2fv1beta1_2fevent_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
