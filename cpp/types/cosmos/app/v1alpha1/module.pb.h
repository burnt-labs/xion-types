// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/app/v1alpha1/module.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_2epb_2eh
#define cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto;
namespace cosmos {
namespace app {
namespace v1alpha1 {
class MigrateFromInfo;
struct MigrateFromInfoDefaultTypeInternal;
extern MigrateFromInfoDefaultTypeInternal _MigrateFromInfo_default_instance_;
class ModuleDescriptor;
struct ModuleDescriptorDefaultTypeInternal;
extern ModuleDescriptorDefaultTypeInternal _ModuleDescriptor_default_instance_;
class PackageReference;
struct PackageReferenceDefaultTypeInternal;
extern PackageReferenceDefaultTypeInternal _PackageReference_default_instance_;
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace app {
namespace v1alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class PackageReference final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.PackageReference) */ {
 public:
  inline PackageReference() : PackageReference(nullptr) {}
  ~PackageReference() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PackageReference* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PackageReference));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PackageReference(
      ::google::protobuf::internal::ConstantInitialized);

  inline PackageReference(const PackageReference& from) : PackageReference(nullptr, from) {}
  inline PackageReference(PackageReference&& from) noexcept
      : PackageReference(nullptr, std::move(from)) {}
  inline PackageReference& operator=(const PackageReference& from) {
    CopyFrom(from);
    return *this;
  }
  inline PackageReference& operator=(PackageReference&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PackageReference& default_instance() {
    return *internal_default_instance();
  }
  static inline const PackageReference* internal_default_instance() {
    return reinterpret_cast<const PackageReference*>(
        &_PackageReference_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PackageReference& a, PackageReference& b) { a.Swap(&b); }
  inline void Swap(PackageReference* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PackageReference* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PackageReference* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PackageReference>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PackageReference& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PackageReference& from) { PackageReference::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PackageReference* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.app.v1alpha1.PackageReference"; }

 protected:
  explicit PackageReference(::google::protobuf::Arena* arena);
  PackageReference(::google::protobuf::Arena* arena, const PackageReference& from);
  PackageReference(::google::protobuf::Arena* arena, PackageReference&& from) noexcept
      : PackageReference(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kRevisionFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // uint32 revision = 2 [json_name = "revision"];
  void clear_revision() ;
  ::uint32_t revision() const;
  void set_revision(::uint32_t value);

  private:
  ::uint32_t _internal_revision() const;
  void _internal_set_revision(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.PackageReference)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PackageReference& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::uint32_t revision_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto;
};
// -------------------------------------------------------------------

class MigrateFromInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.MigrateFromInfo) */ {
 public:
  inline MigrateFromInfo() : MigrateFromInfo(nullptr) {}
  ~MigrateFromInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MigrateFromInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MigrateFromInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MigrateFromInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline MigrateFromInfo(const MigrateFromInfo& from) : MigrateFromInfo(nullptr, from) {}
  inline MigrateFromInfo(MigrateFromInfo&& from) noexcept
      : MigrateFromInfo(nullptr, std::move(from)) {}
  inline MigrateFromInfo& operator=(const MigrateFromInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MigrateFromInfo& operator=(MigrateFromInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MigrateFromInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const MigrateFromInfo* internal_default_instance() {
    return reinterpret_cast<const MigrateFromInfo*>(
        &_MigrateFromInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MigrateFromInfo& a, MigrateFromInfo& b) { a.Swap(&b); }
  inline void Swap(MigrateFromInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MigrateFromInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MigrateFromInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MigrateFromInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MigrateFromInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MigrateFromInfo& from) { MigrateFromInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MigrateFromInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.app.v1alpha1.MigrateFromInfo"; }

 protected:
  explicit MigrateFromInfo(::google::protobuf::Arena* arena);
  MigrateFromInfo(::google::protobuf::Arena* arena, const MigrateFromInfo& from);
  MigrateFromInfo(::google::protobuf::Arena* arena, MigrateFromInfo&& from) noexcept
      : MigrateFromInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModuleFieldNumber = 1,
  };
  // string module = 1 [json_name = "module"];
  void clear_module() ;
  const std::string& module() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_module(Arg_&& arg, Args_... args);
  std::string* mutable_module();
  PROTOBUF_NODISCARD std::string* release_module();
  void set_allocated_module(std::string* value);

  private:
  const std::string& _internal_module() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_module(
      const std::string& value);
  std::string* _internal_mutable_module();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.MigrateFromInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MigrateFromInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr module_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto;
};
// -------------------------------------------------------------------

class ModuleDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.app.v1alpha1.ModuleDescriptor) */ {
 public:
  inline ModuleDescriptor() : ModuleDescriptor(nullptr) {}
  ~ModuleDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModuleDescriptor(const ModuleDescriptor& from) : ModuleDescriptor(nullptr, from) {}
  inline ModuleDescriptor(ModuleDescriptor&& from) noexcept
      : ModuleDescriptor(nullptr, std::move(from)) {}
  inline ModuleDescriptor& operator=(const ModuleDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleDescriptor& operator=(ModuleDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleDescriptor* internal_default_instance() {
    return reinterpret_cast<const ModuleDescriptor*>(
        &_ModuleDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ModuleDescriptor& a, ModuleDescriptor& b) { a.Swap(&b); }
  inline void Swap(ModuleDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleDescriptor& from) { ModuleDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.app.v1alpha1.ModuleDescriptor"; }

 protected:
  explicit ModuleDescriptor(::google::protobuf::Arena* arena);
  ModuleDescriptor(::google::protobuf::Arena* arena, const ModuleDescriptor& from);
  ModuleDescriptor(::google::protobuf::Arena* arena, ModuleDescriptor&& from) noexcept
      : ModuleDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsePackageFieldNumber = 2,
    kCanMigrateFromFieldNumber = 3,
    kGoImportFieldNumber = 1,
  };
  // repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];
  int use_package_size() const;
  private:
  int _internal_use_package_size() const;

  public:
  void clear_use_package() ;
  ::cosmos::app::v1alpha1::PackageReference* mutable_use_package(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>* mutable_use_package();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>& _internal_use_package() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>* _internal_mutable_use_package();
  public:
  const ::cosmos::app::v1alpha1::PackageReference& use_package(int index) const;
  ::cosmos::app::v1alpha1::PackageReference* add_use_package();
  const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>& use_package() const;
  // repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];
  int can_migrate_from_size() const;
  private:
  int _internal_can_migrate_from_size() const;

  public:
  void clear_can_migrate_from() ;
  ::cosmos::app::v1alpha1::MigrateFromInfo* mutable_can_migrate_from(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>* mutable_can_migrate_from();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>& _internal_can_migrate_from() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>* _internal_mutable_can_migrate_from();
  public:
  const ::cosmos::app::v1alpha1::MigrateFromInfo& can_migrate_from(int index) const;
  ::cosmos::app::v1alpha1::MigrateFromInfo* add_can_migrate_from();
  const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>& can_migrate_from() const;
  // string go_import = 1 [json_name = "goImport"];
  void clear_go_import() ;
  const std::string& go_import() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_go_import(Arg_&& arg, Args_... args);
  std::string* mutable_go_import();
  PROTOBUF_NODISCARD std::string* release_go_import();
  void set_allocated_go_import(std::string* value);

  private:
  const std::string& _internal_go_import() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_go_import(
      const std::string& value);
  std::string* _internal_mutable_go_import();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.app.v1alpha1.ModuleDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      54, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModuleDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::app::v1alpha1::PackageReference > use_package_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::app::v1alpha1::MigrateFromInfo > can_migrate_from_;
    ::google::protobuf::internal::ArenaStringPtr go_import_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto;
};

// ===================================================================



static const int kModuleFieldNumber = 57193479;
extern ::google::protobuf::internal::ExtensionIdentifier<
    ::google::protobuf::MessageOptions, ::google::protobuf::internal::MessageTypeTraits< ::cosmos::app::v1alpha1::ModuleDescriptor >, 11,
    false>
    module;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ModuleDescriptor

// string go_import = 1 [json_name = "goImport"];
inline void ModuleDescriptor::clear_go_import() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_import_.ClearToEmpty();
}
inline const std::string& ModuleDescriptor::go_import() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.ModuleDescriptor.go_import)
  return _internal_go_import();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModuleDescriptor::set_go_import(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_import_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.app.v1alpha1.ModuleDescriptor.go_import)
}
inline std::string* ModuleDescriptor::mutable_go_import() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_go_import();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.ModuleDescriptor.go_import)
  return _s;
}
inline const std::string& ModuleDescriptor::_internal_go_import() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.go_import_.Get();
}
inline void ModuleDescriptor::_internal_set_go_import(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_import_.Set(value, GetArena());
}
inline std::string* ModuleDescriptor::_internal_mutable_go_import() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.go_import_.Mutable( GetArena());
}
inline std::string* ModuleDescriptor::release_go_import() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.ModuleDescriptor.go_import)
  return _impl_.go_import_.Release();
}
inline void ModuleDescriptor::set_allocated_go_import(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_import_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.go_import_.IsDefault()) {
    _impl_.go_import_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.ModuleDescriptor.go_import)
}

// repeated .cosmos.app.v1alpha1.PackageReference use_package = 2 [json_name = "usePackage"];
inline int ModuleDescriptor::_internal_use_package_size() const {
  return _internal_use_package().size();
}
inline int ModuleDescriptor::use_package_size() const {
  return _internal_use_package_size();
}
inline void ModuleDescriptor::clear_use_package() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_package_.Clear();
}
inline ::cosmos::app::v1alpha1::PackageReference* ModuleDescriptor::mutable_use_package(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.ModuleDescriptor.use_package)
  return _internal_mutable_use_package()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>* ModuleDescriptor::mutable_use_package()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.v1alpha1.ModuleDescriptor.use_package)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_use_package();
}
inline const ::cosmos::app::v1alpha1::PackageReference& ModuleDescriptor::use_package(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.ModuleDescriptor.use_package)
  return _internal_use_package().Get(index);
}
inline ::cosmos::app::v1alpha1::PackageReference* ModuleDescriptor::add_use_package() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::app::v1alpha1::PackageReference* _add = _internal_mutable_use_package()->Add();
  // @@protoc_insertion_point(field_add:cosmos.app.v1alpha1.ModuleDescriptor.use_package)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>& ModuleDescriptor::use_package() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.v1alpha1.ModuleDescriptor.use_package)
  return _internal_use_package();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>&
ModuleDescriptor::_internal_use_package() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_package_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::PackageReference>*
ModuleDescriptor::_internal_mutable_use_package() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.use_package_;
}

// repeated .cosmos.app.v1alpha1.MigrateFromInfo can_migrate_from = 3 [json_name = "canMigrateFrom"];
inline int ModuleDescriptor::_internal_can_migrate_from_size() const {
  return _internal_can_migrate_from().size();
}
inline int ModuleDescriptor::can_migrate_from_size() const {
  return _internal_can_migrate_from_size();
}
inline void ModuleDescriptor::clear_can_migrate_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.can_migrate_from_.Clear();
}
inline ::cosmos::app::v1alpha1::MigrateFromInfo* ModuleDescriptor::mutable_can_migrate_from(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.ModuleDescriptor.can_migrate_from)
  return _internal_mutable_can_migrate_from()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>* ModuleDescriptor::mutable_can_migrate_from()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.v1alpha1.ModuleDescriptor.can_migrate_from)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_can_migrate_from();
}
inline const ::cosmos::app::v1alpha1::MigrateFromInfo& ModuleDescriptor::can_migrate_from(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.ModuleDescriptor.can_migrate_from)
  return _internal_can_migrate_from().Get(index);
}
inline ::cosmos::app::v1alpha1::MigrateFromInfo* ModuleDescriptor::add_can_migrate_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::app::v1alpha1::MigrateFromInfo* _add = _internal_mutable_can_migrate_from()->Add();
  // @@protoc_insertion_point(field_add:cosmos.app.v1alpha1.ModuleDescriptor.can_migrate_from)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>& ModuleDescriptor::can_migrate_from() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.v1alpha1.ModuleDescriptor.can_migrate_from)
  return _internal_can_migrate_from();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>&
ModuleDescriptor::_internal_can_migrate_from() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.can_migrate_from_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::app::v1alpha1::MigrateFromInfo>*
ModuleDescriptor::_internal_mutable_can_migrate_from() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.can_migrate_from_;
}

// -------------------------------------------------------------------

// PackageReference

// string name = 1 [json_name = "name"];
inline void PackageReference::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& PackageReference::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.PackageReference.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PackageReference::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.app.v1alpha1.PackageReference.name)
}
inline std::string* PackageReference::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.PackageReference.name)
  return _s;
}
inline const std::string& PackageReference::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void PackageReference::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* PackageReference::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* PackageReference::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.PackageReference.name)
  return _impl_.name_.Release();
}
inline void PackageReference::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.PackageReference.name)
}

// uint32 revision = 2 [json_name = "revision"];
inline void PackageReference::clear_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = 0u;
}
inline ::uint32_t PackageReference::revision() const {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.PackageReference.revision)
  return _internal_revision();
}
inline void PackageReference::set_revision(::uint32_t value) {
  _internal_set_revision(value);
  // @@protoc_insertion_point(field_set:cosmos.app.v1alpha1.PackageReference.revision)
}
inline ::uint32_t PackageReference::_internal_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.revision_;
}
inline void PackageReference::_internal_set_revision(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.revision_ = value;
}

// -------------------------------------------------------------------

// MigrateFromInfo

// string module = 1 [json_name = "module"];
inline void MigrateFromInfo::clear_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_.ClearToEmpty();
}
inline const std::string& MigrateFromInfo::module() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.v1alpha1.MigrateFromInfo.module)
  return _internal_module();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MigrateFromInfo::set_module(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.app.v1alpha1.MigrateFromInfo.module)
}
inline std::string* MigrateFromInfo::mutable_module() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_module();
  // @@protoc_insertion_point(field_mutable:cosmos.app.v1alpha1.MigrateFromInfo.module)
  return _s;
}
inline const std::string& MigrateFromInfo::_internal_module() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_.Get();
}
inline void MigrateFromInfo::_internal_set_module(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_.Set(value, GetArena());
}
inline std::string* MigrateFromInfo::_internal_mutable_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.module_.Mutable( GetArena());
}
inline std::string* MigrateFromInfo::release_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.app.v1alpha1.MigrateFromInfo.module)
  return _impl_.module_.Release();
}
inline void MigrateFromInfo::set_allocated_module(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.module_.IsDefault()) {
    _impl_.module_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.v1alpha1.MigrateFromInfo.module)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace app
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fapp_2fv1alpha1_2fmodule_2eproto_2epb_2eh
