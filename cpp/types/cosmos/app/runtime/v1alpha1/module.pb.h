// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/app/runtime/v1alpha1/module.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_2epb_2eh
#define cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/app/v1alpha1/module.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto;
namespace cosmos {
namespace app {
namespace runtime {
namespace v1alpha1 {
class Module;
struct ModuleDefaultTypeInternal;
extern ModuleDefaultTypeInternal _Module_default_instance_;
class StoreKeyConfig;
struct StoreKeyConfigDefaultTypeInternal;
extern StoreKeyConfigDefaultTypeInternal _StoreKeyConfig_default_instance_;
}  // namespace v1alpha1
}  // namespace runtime
}  // namespace app
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace app {
namespace runtime {
namespace v1alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class StoreKeyConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.app.runtime.v1alpha1.StoreKeyConfig) */ {
 public:
  inline StoreKeyConfig() : StoreKeyConfig(nullptr) {}
  ~StoreKeyConfig() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StoreKeyConfig* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StoreKeyConfig));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StoreKeyConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline StoreKeyConfig(const StoreKeyConfig& from) : StoreKeyConfig(nullptr, from) {}
  inline StoreKeyConfig(StoreKeyConfig&& from) noexcept
      : StoreKeyConfig(nullptr, std::move(from)) {}
  inline StoreKeyConfig& operator=(const StoreKeyConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline StoreKeyConfig& operator=(StoreKeyConfig&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StoreKeyConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const StoreKeyConfig* internal_default_instance() {
    return reinterpret_cast<const StoreKeyConfig*>(
        &_StoreKeyConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StoreKeyConfig& a, StoreKeyConfig& b) { a.Swap(&b); }
  inline void Swap(StoreKeyConfig* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StoreKeyConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StoreKeyConfig* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StoreKeyConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StoreKeyConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StoreKeyConfig& from) { StoreKeyConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StoreKeyConfig* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.app.runtime.v1alpha1.StoreKeyConfig"; }

 protected:
  explicit StoreKeyConfig(::google::protobuf::Arena* arena);
  StoreKeyConfig(::google::protobuf::Arena* arena, const StoreKeyConfig& from);
  StoreKeyConfig(::google::protobuf::Arena* arena, StoreKeyConfig&& from) noexcept
      : StoreKeyConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kModuleNameFieldNumber = 1,
    kKvStoreKeyFieldNumber = 2,
  };
  // string module_name = 1 [json_name = "moduleName"];
  void clear_module_name() ;
  const std::string& module_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_module_name(Arg_&& arg, Args_... args);
  std::string* mutable_module_name();
  PROTOBUF_NODISCARD std::string* release_module_name();
  void set_allocated_module_name(std::string* value);

  private:
  const std::string& _internal_module_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_module_name(
      const std::string& value);
  std::string* _internal_mutable_module_name();

  public:
  // string kv_store_key = 2 [json_name = "kvStoreKey"];
  void clear_kv_store_key() ;
  const std::string& kv_store_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kv_store_key(Arg_&& arg, Args_... args);
  std::string* mutable_kv_store_key();
  PROTOBUF_NODISCARD std::string* release_kv_store_key();
  void set_allocated_kv_store_key(std::string* value);

  private:
  const std::string& _internal_kv_store_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kv_store_key(
      const std::string& value);
  std::string* _internal_mutable_kv_store_key();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.app.runtime.v1alpha1.StoreKeyConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      74, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StoreKeyConfig& from_msg);
    ::google::protobuf::internal::ArenaStringPtr module_name_;
    ::google::protobuf::internal::ArenaStringPtr kv_store_key_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto;
};
// -------------------------------------------------------------------

class Module final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.app.runtime.v1alpha1.Module) */ {
 public:
  inline Module() : Module(nullptr) {}
  ~Module() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Module* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Module));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Module(
      ::google::protobuf::internal::ConstantInitialized);

  inline Module(const Module& from) : Module(nullptr, from) {}
  inline Module(Module&& from) noexcept
      : Module(nullptr, std::move(from)) {}
  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }
  inline Module& operator=(Module&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Module& default_instance() {
    return *internal_default_instance();
  }
  static inline const Module* internal_default_instance() {
    return reinterpret_cast<const Module*>(
        &_Module_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Module& a, Module& b) { a.Swap(&b); }
  inline void Swap(Module* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Module* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Module* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Module>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Module& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Module& from) { Module::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Module* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.app.runtime.v1alpha1.Module"; }

 protected:
  explicit Module(::google::protobuf::Arena* arena);
  Module(::google::protobuf::Arena* arena, const Module& from);
  Module(::google::protobuf::Arena* arena, Module&& from) noexcept
      : Module(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBeginBlockersFieldNumber = 2,
    kEndBlockersFieldNumber = 3,
    kInitGenesisFieldNumber = 4,
    kExportGenesisFieldNumber = 5,
    kOverrideStoreKeysFieldNumber = 6,
    kOrderMigrationsFieldNumber = 7,
    kPrecommitersFieldNumber = 8,
    kPrepareCheckStatersFieldNumber = 9,
    kPreBlockersFieldNumber = 10,
    kSkipStoreKeysFieldNumber = 11,
    kAppNameFieldNumber = 1,
  };
  // repeated string begin_blockers = 2 [json_name = "beginBlockers"];
  int begin_blockers_size() const;
  private:
  int _internal_begin_blockers_size() const;

  public:
  void clear_begin_blockers() ;
  const std::string& begin_blockers(int index) const;
  std::string* mutable_begin_blockers(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_begin_blockers(int index, Arg_&& value, Args_... args);
  std::string* add_begin_blockers();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_begin_blockers(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& begin_blockers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_begin_blockers();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_begin_blockers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_begin_blockers();

  public:
  // repeated string end_blockers = 3 [json_name = "endBlockers"];
  int end_blockers_size() const;
  private:
  int _internal_end_blockers_size() const;

  public:
  void clear_end_blockers() ;
  const std::string& end_blockers(int index) const;
  std::string* mutable_end_blockers(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_end_blockers(int index, Arg_&& value, Args_... args);
  std::string* add_end_blockers();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_end_blockers(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& end_blockers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_end_blockers();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_end_blockers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_end_blockers();

  public:
  // repeated string init_genesis = 4 [json_name = "initGenesis"];
  int init_genesis_size() const;
  private:
  int _internal_init_genesis_size() const;

  public:
  void clear_init_genesis() ;
  const std::string& init_genesis(int index) const;
  std::string* mutable_init_genesis(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_init_genesis(int index, Arg_&& value, Args_... args);
  std::string* add_init_genesis();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_init_genesis(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& init_genesis() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_init_genesis();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_init_genesis() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_init_genesis();

  public:
  // repeated string export_genesis = 5 [json_name = "exportGenesis"];
  int export_genesis_size() const;
  private:
  int _internal_export_genesis_size() const;

  public:
  void clear_export_genesis() ;
  const std::string& export_genesis(int index) const;
  std::string* mutable_export_genesis(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_export_genesis(int index, Arg_&& value, Args_... args);
  std::string* add_export_genesis();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_export_genesis(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& export_genesis() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_export_genesis();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_export_genesis() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_export_genesis();

  public:
  // repeated .cosmos.app.runtime.v1alpha1.StoreKeyConfig override_store_keys = 6 [json_name = "overrideStoreKeys"];
  int override_store_keys_size() const;
  private:
  int _internal_override_store_keys_size() const;

  public:
  void clear_override_store_keys() ;
  ::cosmos::app::runtime::v1alpha1::StoreKeyConfig* mutable_override_store_keys(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>* mutable_override_store_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>& _internal_override_store_keys() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>* _internal_mutable_override_store_keys();
  public:
  const ::cosmos::app::runtime::v1alpha1::StoreKeyConfig& override_store_keys(int index) const;
  ::cosmos::app::runtime::v1alpha1::StoreKeyConfig* add_override_store_keys();
  const ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>& override_store_keys() const;
  // repeated string order_migrations = 7 [json_name = "orderMigrations"];
  int order_migrations_size() const;
  private:
  int _internal_order_migrations_size() const;

  public:
  void clear_order_migrations() ;
  const std::string& order_migrations(int index) const;
  std::string* mutable_order_migrations(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_order_migrations(int index, Arg_&& value, Args_... args);
  std::string* add_order_migrations();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_order_migrations(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& order_migrations() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_order_migrations();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_order_migrations() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_order_migrations();

  public:
  // repeated string precommiters = 8 [json_name = "precommiters"];
  int precommiters_size() const;
  private:
  int _internal_precommiters_size() const;

  public:
  void clear_precommiters() ;
  const std::string& precommiters(int index) const;
  std::string* mutable_precommiters(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_precommiters(int index, Arg_&& value, Args_... args);
  std::string* add_precommiters();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_precommiters(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& precommiters() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_precommiters();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_precommiters() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_precommiters();

  public:
  // repeated string prepare_check_staters = 9 [json_name = "prepareCheckStaters"];
  int prepare_check_staters_size() const;
  private:
  int _internal_prepare_check_staters_size() const;

  public:
  void clear_prepare_check_staters() ;
  const std::string& prepare_check_staters(int index) const;
  std::string* mutable_prepare_check_staters(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prepare_check_staters(int index, Arg_&& value, Args_... args);
  std::string* add_prepare_check_staters();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_prepare_check_staters(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& prepare_check_staters() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_prepare_check_staters();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_prepare_check_staters() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_prepare_check_staters();

  public:
  // repeated string pre_blockers = 10 [json_name = "preBlockers"];
  int pre_blockers_size() const;
  private:
  int _internal_pre_blockers_size() const;

  public:
  void clear_pre_blockers() ;
  const std::string& pre_blockers(int index) const;
  std::string* mutable_pre_blockers(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pre_blockers(int index, Arg_&& value, Args_... args);
  std::string* add_pre_blockers();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_pre_blockers(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& pre_blockers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_pre_blockers();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_pre_blockers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_pre_blockers();

  public:
  // repeated string skip_store_keys = 11 [json_name = "skipStoreKeys"];
  int skip_store_keys_size() const;
  private:
  int _internal_skip_store_keys_size() const;

  public:
  void clear_skip_store_keys() ;
  const std::string& skip_store_keys(int index) const;
  std::string* mutable_skip_store_keys(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_skip_store_keys(int index, Arg_&& value, Args_... args);
  std::string* add_skip_store_keys();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_skip_store_keys(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& skip_store_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_skip_store_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_skip_store_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_skip_store_keys();

  public:
  // string app_name = 1 [json_name = "appName"];
  void clear_app_name() ;
  const std::string& app_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_name(Arg_&& arg, Args_... args);
  std::string* mutable_app_name();
  PROTOBUF_NODISCARD std::string* release_app_name();
  void set_allocated_app_name(std::string* value);

  private:
  const std::string& _internal_app_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_name(
      const std::string& value);
  std::string* _internal_mutable_app_name();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.app.runtime.v1alpha1.Module)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 1,
      187, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Module& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> begin_blockers_;
    ::google::protobuf::RepeatedPtrField<std::string> end_blockers_;
    ::google::protobuf::RepeatedPtrField<std::string> init_genesis_;
    ::google::protobuf::RepeatedPtrField<std::string> export_genesis_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::app::runtime::v1alpha1::StoreKeyConfig > override_store_keys_;
    ::google::protobuf::RepeatedPtrField<std::string> order_migrations_;
    ::google::protobuf::RepeatedPtrField<std::string> precommiters_;
    ::google::protobuf::RepeatedPtrField<std::string> prepare_check_staters_;
    ::google::protobuf::RepeatedPtrField<std::string> pre_blockers_;
    ::google::protobuf::RepeatedPtrField<std::string> skip_store_keys_;
    ::google::protobuf::internal::ArenaStringPtr app_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Module

// string app_name = 1 [json_name = "appName"];
inline void Module::clear_app_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.ClearToEmpty();
}
inline const std::string& Module::app_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.app_name)
  return _internal_app_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Module::set_app_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.app_name)
}
inline std::string* Module::mutable_app_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_name();
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.app_name)
  return _s;
}
inline const std::string& Module::_internal_app_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.app_name_.Get();
}
inline void Module::_internal_set_app_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.Set(value, GetArena());
}
inline std::string* Module::_internal_mutable_app_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.app_name_.Mutable( GetArena());
}
inline std::string* Module::release_app_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.app.runtime.v1alpha1.Module.app_name)
  return _impl_.app_name_.Release();
}
inline void Module::set_allocated_app_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.app_name_.IsDefault()) {
    _impl_.app_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.runtime.v1alpha1.Module.app_name)
}

// repeated string begin_blockers = 2 [json_name = "beginBlockers"];
inline int Module::_internal_begin_blockers_size() const {
  return _internal_begin_blockers().size();
}
inline int Module::begin_blockers_size() const {
  return _internal_begin_blockers_size();
}
inline void Module::clear_begin_blockers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.begin_blockers_.Clear();
}
inline std::string* Module::add_begin_blockers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_begin_blockers()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.begin_blockers)
  return _s;
}
inline const std::string& Module::begin_blockers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.begin_blockers)
  return _internal_begin_blockers().Get(index);
}
inline std::string* Module::mutable_begin_blockers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.begin_blockers)
  return _internal_mutable_begin_blockers()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_begin_blockers(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_begin_blockers()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.begin_blockers)
}
template <typename Arg_, typename... Args_>
inline void Module::add_begin_blockers(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_begin_blockers(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.begin_blockers)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::begin_blockers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.begin_blockers)
  return _internal_begin_blockers();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_begin_blockers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.begin_blockers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_begin_blockers();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_begin_blockers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.begin_blockers_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_begin_blockers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.begin_blockers_;
}

// repeated string end_blockers = 3 [json_name = "endBlockers"];
inline int Module::_internal_end_blockers_size() const {
  return _internal_end_blockers().size();
}
inline int Module::end_blockers_size() const {
  return _internal_end_blockers_size();
}
inline void Module::clear_end_blockers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_blockers_.Clear();
}
inline std::string* Module::add_end_blockers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_end_blockers()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.end_blockers)
  return _s;
}
inline const std::string& Module::end_blockers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.end_blockers)
  return _internal_end_blockers().Get(index);
}
inline std::string* Module::mutable_end_blockers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.end_blockers)
  return _internal_mutable_end_blockers()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_end_blockers(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_end_blockers()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.end_blockers)
}
template <typename Arg_, typename... Args_>
inline void Module::add_end_blockers(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_end_blockers(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.end_blockers)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::end_blockers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.end_blockers)
  return _internal_end_blockers();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_end_blockers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.end_blockers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_end_blockers();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_end_blockers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_blockers_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_end_blockers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.end_blockers_;
}

// repeated string init_genesis = 4 [json_name = "initGenesis"];
inline int Module::_internal_init_genesis_size() const {
  return _internal_init_genesis().size();
}
inline int Module::init_genesis_size() const {
  return _internal_init_genesis_size();
}
inline void Module::clear_init_genesis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.init_genesis_.Clear();
}
inline std::string* Module::add_init_genesis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_init_genesis()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.init_genesis)
  return _s;
}
inline const std::string& Module::init_genesis(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.init_genesis)
  return _internal_init_genesis().Get(index);
}
inline std::string* Module::mutable_init_genesis(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.init_genesis)
  return _internal_mutable_init_genesis()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_init_genesis(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_init_genesis()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.init_genesis)
}
template <typename Arg_, typename... Args_>
inline void Module::add_init_genesis(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_init_genesis(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.init_genesis)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::init_genesis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.init_genesis)
  return _internal_init_genesis();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_init_genesis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.init_genesis)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_init_genesis();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_init_genesis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.init_genesis_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_init_genesis() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.init_genesis_;
}

// repeated string export_genesis = 5 [json_name = "exportGenesis"];
inline int Module::_internal_export_genesis_size() const {
  return _internal_export_genesis().size();
}
inline int Module::export_genesis_size() const {
  return _internal_export_genesis_size();
}
inline void Module::clear_export_genesis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.export_genesis_.Clear();
}
inline std::string* Module::add_export_genesis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_export_genesis()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.export_genesis)
  return _s;
}
inline const std::string& Module::export_genesis(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.export_genesis)
  return _internal_export_genesis().Get(index);
}
inline std::string* Module::mutable_export_genesis(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.export_genesis)
  return _internal_mutable_export_genesis()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_export_genesis(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_export_genesis()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.export_genesis)
}
template <typename Arg_, typename... Args_>
inline void Module::add_export_genesis(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_export_genesis(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.export_genesis)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::export_genesis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.export_genesis)
  return _internal_export_genesis();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_export_genesis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.export_genesis)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_export_genesis();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_export_genesis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.export_genesis_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_export_genesis() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.export_genesis_;
}

// repeated .cosmos.app.runtime.v1alpha1.StoreKeyConfig override_store_keys = 6 [json_name = "overrideStoreKeys"];
inline int Module::_internal_override_store_keys_size() const {
  return _internal_override_store_keys().size();
}
inline int Module::override_store_keys_size() const {
  return _internal_override_store_keys_size();
}
inline void Module::clear_override_store_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.override_store_keys_.Clear();
}
inline ::cosmos::app::runtime::v1alpha1::StoreKeyConfig* Module::mutable_override_store_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.override_store_keys)
  return _internal_mutable_override_store_keys()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>* Module::mutable_override_store_keys()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.override_store_keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_override_store_keys();
}
inline const ::cosmos::app::runtime::v1alpha1::StoreKeyConfig& Module::override_store_keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.override_store_keys)
  return _internal_override_store_keys().Get(index);
}
inline ::cosmos::app::runtime::v1alpha1::StoreKeyConfig* Module::add_override_store_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::app::runtime::v1alpha1::StoreKeyConfig* _add = _internal_mutable_override_store_keys()->Add();
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.override_store_keys)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>& Module::override_store_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.override_store_keys)
  return _internal_override_store_keys();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>&
Module::_internal_override_store_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.override_store_keys_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::app::runtime::v1alpha1::StoreKeyConfig>*
Module::_internal_mutable_override_store_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.override_store_keys_;
}

// repeated string skip_store_keys = 11 [json_name = "skipStoreKeys"];
inline int Module::_internal_skip_store_keys_size() const {
  return _internal_skip_store_keys().size();
}
inline int Module::skip_store_keys_size() const {
  return _internal_skip_store_keys_size();
}
inline void Module::clear_skip_store_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_store_keys_.Clear();
}
inline std::string* Module::add_skip_store_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_skip_store_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.skip_store_keys)
  return _s;
}
inline const std::string& Module::skip_store_keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.skip_store_keys)
  return _internal_skip_store_keys().Get(index);
}
inline std::string* Module::mutable_skip_store_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.skip_store_keys)
  return _internal_mutable_skip_store_keys()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_skip_store_keys(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_skip_store_keys()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.skip_store_keys)
}
template <typename Arg_, typename... Args_>
inline void Module::add_skip_store_keys(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_skip_store_keys(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.skip_store_keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::skip_store_keys() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.skip_store_keys)
  return _internal_skip_store_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_skip_store_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.skip_store_keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_skip_store_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_skip_store_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skip_store_keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_skip_store_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.skip_store_keys_;
}

// repeated string order_migrations = 7 [json_name = "orderMigrations"];
inline int Module::_internal_order_migrations_size() const {
  return _internal_order_migrations().size();
}
inline int Module::order_migrations_size() const {
  return _internal_order_migrations_size();
}
inline void Module::clear_order_migrations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_migrations_.Clear();
}
inline std::string* Module::add_order_migrations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_order_migrations()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.order_migrations)
  return _s;
}
inline const std::string& Module::order_migrations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.order_migrations)
  return _internal_order_migrations().Get(index);
}
inline std::string* Module::mutable_order_migrations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.order_migrations)
  return _internal_mutable_order_migrations()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_order_migrations(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_order_migrations()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.order_migrations)
}
template <typename Arg_, typename... Args_>
inline void Module::add_order_migrations(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_order_migrations(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.order_migrations)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::order_migrations() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.order_migrations)
  return _internal_order_migrations();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_order_migrations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.order_migrations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_order_migrations();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_order_migrations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_migrations_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_order_migrations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.order_migrations_;
}

// repeated string precommiters = 8 [json_name = "precommiters"];
inline int Module::_internal_precommiters_size() const {
  return _internal_precommiters().size();
}
inline int Module::precommiters_size() const {
  return _internal_precommiters_size();
}
inline void Module::clear_precommiters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.precommiters_.Clear();
}
inline std::string* Module::add_precommiters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_precommiters()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.precommiters)
  return _s;
}
inline const std::string& Module::precommiters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.precommiters)
  return _internal_precommiters().Get(index);
}
inline std::string* Module::mutable_precommiters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.precommiters)
  return _internal_mutable_precommiters()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_precommiters(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_precommiters()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.precommiters)
}
template <typename Arg_, typename... Args_>
inline void Module::add_precommiters(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_precommiters(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.precommiters)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::precommiters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.precommiters)
  return _internal_precommiters();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_precommiters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.precommiters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_precommiters();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_precommiters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.precommiters_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_precommiters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.precommiters_;
}

// repeated string prepare_check_staters = 9 [json_name = "prepareCheckStaters"];
inline int Module::_internal_prepare_check_staters_size() const {
  return _internal_prepare_check_staters().size();
}
inline int Module::prepare_check_staters_size() const {
  return _internal_prepare_check_staters_size();
}
inline void Module::clear_prepare_check_staters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prepare_check_staters_.Clear();
}
inline std::string* Module::add_prepare_check_staters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_prepare_check_staters()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.prepare_check_staters)
  return _s;
}
inline const std::string& Module::prepare_check_staters(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.prepare_check_staters)
  return _internal_prepare_check_staters().Get(index);
}
inline std::string* Module::mutable_prepare_check_staters(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.prepare_check_staters)
  return _internal_mutable_prepare_check_staters()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_prepare_check_staters(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_prepare_check_staters()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.prepare_check_staters)
}
template <typename Arg_, typename... Args_>
inline void Module::add_prepare_check_staters(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_prepare_check_staters(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.prepare_check_staters)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::prepare_check_staters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.prepare_check_staters)
  return _internal_prepare_check_staters();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_prepare_check_staters() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.prepare_check_staters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_prepare_check_staters();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_prepare_check_staters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prepare_check_staters_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_prepare_check_staters() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.prepare_check_staters_;
}

// repeated string pre_blockers = 10 [json_name = "preBlockers"];
inline int Module::_internal_pre_blockers_size() const {
  return _internal_pre_blockers().size();
}
inline int Module::pre_blockers_size() const {
  return _internal_pre_blockers_size();
}
inline void Module::clear_pre_blockers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pre_blockers_.Clear();
}
inline std::string* Module::add_pre_blockers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_pre_blockers()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.app.runtime.v1alpha1.Module.pre_blockers)
  return _s;
}
inline const std::string& Module::pre_blockers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.Module.pre_blockers)
  return _internal_pre_blockers().Get(index);
}
inline std::string* Module::mutable_pre_blockers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.Module.pre_blockers)
  return _internal_mutable_pre_blockers()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Module::set_pre_blockers(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_pre_blockers()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.Module.pre_blockers)
}
template <typename Arg_, typename... Args_>
inline void Module::add_pre_blockers(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_pre_blockers(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.app.runtime.v1alpha1.Module.pre_blockers)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::pre_blockers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.app.runtime.v1alpha1.Module.pre_blockers)
  return _internal_pre_blockers();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::mutable_pre_blockers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.app.runtime.v1alpha1.Module.pre_blockers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pre_blockers();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Module::_internal_pre_blockers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pre_blockers_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Module::_internal_mutable_pre_blockers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pre_blockers_;
}

// -------------------------------------------------------------------

// StoreKeyConfig

// string module_name = 1 [json_name = "moduleName"];
inline void StoreKeyConfig::clear_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.ClearToEmpty();
}
inline const std::string& StoreKeyConfig::module_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.StoreKeyConfig.module_name)
  return _internal_module_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StoreKeyConfig::set_module_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.StoreKeyConfig.module_name)
}
inline std::string* StoreKeyConfig::mutable_module_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_module_name();
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.StoreKeyConfig.module_name)
  return _s;
}
inline const std::string& StoreKeyConfig::_internal_module_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_name_.Get();
}
inline void StoreKeyConfig::_internal_set_module_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(value, GetArena());
}
inline std::string* StoreKeyConfig::_internal_mutable_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.module_name_.Mutable( GetArena());
}
inline std::string* StoreKeyConfig::release_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.app.runtime.v1alpha1.StoreKeyConfig.module_name)
  return _impl_.module_name_.Release();
}
inline void StoreKeyConfig::set_allocated_module_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.module_name_.IsDefault()) {
    _impl_.module_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.runtime.v1alpha1.StoreKeyConfig.module_name)
}

// string kv_store_key = 2 [json_name = "kvStoreKey"];
inline void StoreKeyConfig::clear_kv_store_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kv_store_key_.ClearToEmpty();
}
inline const std::string& StoreKeyConfig::kv_store_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.app.runtime.v1alpha1.StoreKeyConfig.kv_store_key)
  return _internal_kv_store_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StoreKeyConfig::set_kv_store_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kv_store_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.app.runtime.v1alpha1.StoreKeyConfig.kv_store_key)
}
inline std::string* StoreKeyConfig::mutable_kv_store_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kv_store_key();
  // @@protoc_insertion_point(field_mutable:cosmos.app.runtime.v1alpha1.StoreKeyConfig.kv_store_key)
  return _s;
}
inline const std::string& StoreKeyConfig::_internal_kv_store_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kv_store_key_.Get();
}
inline void StoreKeyConfig::_internal_set_kv_store_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kv_store_key_.Set(value, GetArena());
}
inline std::string* StoreKeyConfig::_internal_mutable_kv_store_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.kv_store_key_.Mutable( GetArena());
}
inline std::string* StoreKeyConfig::release_kv_store_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.app.runtime.v1alpha1.StoreKeyConfig.kv_store_key)
  return _impl_.kv_store_key_.Release();
}
inline void StoreKeyConfig::set_allocated_kv_store_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kv_store_key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.kv_store_key_.IsDefault()) {
    _impl_.kv_store_key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.app.runtime.v1alpha1.StoreKeyConfig.kv_store_key)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace runtime
}  // namespace app
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fapp_2fruntime_2fv1alpha1_2fmodule_2eproto_2epb_2eh
