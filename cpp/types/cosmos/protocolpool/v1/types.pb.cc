// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/protocolpool/v1/types.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/protocolpool/v1/types.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace protocolpool {
namespace v1 {

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : enabled_distribution_denoms_{},
        distribution_frequency_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;

inline constexpr ContinuousFund::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        recipient_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        percentage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expiry_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ContinuousFund::ContinuousFund(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContinuousFundDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContinuousFundDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContinuousFundDefaultTypeInternal() {}
  union {
    ContinuousFund _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContinuousFundDefaultTypeInternal _ContinuousFund_default_instance_;
}  // namespace v1
}  // namespace protocolpool
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::ContinuousFund, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::ContinuousFund, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::ContinuousFund, _impl_.recipient_),
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::ContinuousFund, _impl_.percentage_),
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::ContinuousFund, _impl_.expiry_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::Params, _impl_.enabled_distribution_denoms_),
        PROTOBUF_FIELD_OFFSET(::cosmos::protocolpool::v1::Params, _impl_.distribution_frequency_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::cosmos::protocolpool::v1::ContinuousFund)},
        {14, -1, -1, sizeof(::cosmos::protocolpool::v1::Params)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::protocolpool::v1::_ContinuousFund_default_instance_._instance,
    &::cosmos::protocolpool::v1::_Params_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"cosmos/protocolpool/v1/types.proto\022\026co"
    "smos.protocolpool.v1\032\024gogoproto/gogo.pro"
    "to\032\031cosmos_proto/cosmos.proto\032\037google/pr"
    "otobuf/timestamp.proto\"\325\001\n\016ContinuousFun"
    "d\0226\n\trecipient\030\001 \001(\tB\030\322\264-\024cosmos.Address"
    "StringR\trecipient\022Q\n\npercentage\030\002 \001(\tB1\310"
    "\336\037\000\332\336\037\033cosmossdk.io/math.LegacyDec\322\264-\nco"
    "smos.DecR\npercentage\0228\n\006expiry\030\003 \001(\0132\032.g"
    "oogle.protobuf.TimestampB\004\220\337\037\001R\006expiry\"\177"
    "\n\006Params\022>\n\033enabled_distribution_denoms\030"
    "\001 \003(\tR\031enabledDistributionDenoms\0225\n\026dist"
    "ribution_frequency\030\002 \001(\004R\025distributionFr"
    "equencyB3Z1github.com/cosmos/cosmos-sdk/"
    "x/protocolpool/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto_deps[3] =
    {
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto = {
    false,
    false,
    548,
    descriptor_table_protodef_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto,
    "cosmos/protocolpool/v1/types.proto",
    &descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto_once,
    descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto,
    file_level_service_descriptors_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto,
};
namespace cosmos {
namespace protocolpool {
namespace v1 {
// ===================================================================

class ContinuousFund::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ContinuousFund>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_._has_bits_);
};

void ContinuousFund::clear_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expiry_ != nullptr) _impl_.expiry_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ContinuousFund::ContinuousFund(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.protocolpool.v1.ContinuousFund)
}
inline PROTOBUF_NDEBUG_INLINE ContinuousFund::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::protocolpool::v1::ContinuousFund& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        recipient_(arena, from.recipient_),
        percentage_(arena, from.percentage_) {}

ContinuousFund::ContinuousFund(
    ::google::protobuf::Arena* arena,
    const ContinuousFund& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContinuousFund* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.expiry_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.expiry_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.protocolpool.v1.ContinuousFund)
}
inline PROTOBUF_NDEBUG_INLINE ContinuousFund::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        recipient_(arena),
        percentage_(arena) {}

inline void ContinuousFund::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expiry_ = {};
}
ContinuousFund::~ContinuousFund() {
  // @@protoc_insertion_point(destructor:cosmos.protocolpool.v1.ContinuousFund)
  SharedDtor(*this);
}
inline void ContinuousFund::SharedDtor(MessageLite& self) {
  ContinuousFund& this_ = static_cast<ContinuousFund&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.recipient_.Destroy();
  this_._impl_.percentage_.Destroy();
  delete this_._impl_.expiry_;
  this_._impl_.~Impl_();
}

inline void* ContinuousFund::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ContinuousFund(arena);
}
constexpr auto ContinuousFund::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContinuousFund),
                                            alignof(ContinuousFund));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ContinuousFund::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ContinuousFund_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ContinuousFund::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ContinuousFund>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ContinuousFund::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ContinuousFund>(), &ContinuousFund::ByteSizeLong,
            &ContinuousFund::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_._cached_size_),
        false,
    },
    &ContinuousFund::kDescriptorMethods,
    &descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ContinuousFund::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 65, 2> ContinuousFund::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::protocolpool::v1::ContinuousFund>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string recipient = 1 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_.recipient_)}},
    // string percentage = 2 [json_name = "percentage", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_.percentage_)}},
    // .google.protobuf.Timestamp expiry = 3 [json_name = "expiry", (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_.expiry_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string recipient = 1 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_.recipient_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string percentage = 2 [json_name = "percentage", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_.percentage_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp expiry = 3 [json_name = "expiry", (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(ContinuousFund, _impl_.expiry_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\45\11\12\0\0\0\0\0"
    "cosmos.protocolpool.v1.ContinuousFund"
    "recipient"
    "percentage"
  }},
};

PROTOBUF_NOINLINE void ContinuousFund::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.protocolpool.v1.ContinuousFund)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.recipient_.ClearToEmpty();
  _impl_.percentage_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.expiry_ != nullptr);
    _impl_.expiry_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ContinuousFund::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ContinuousFund& this_ = static_cast<const ContinuousFund&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ContinuousFund::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ContinuousFund& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.protocolpool.v1.ContinuousFund)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string recipient = 1 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_recipient().empty()) {
            const std::string& _s = this_._internal_recipient();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.protocolpool.v1.ContinuousFund.recipient");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string percentage = 2 [json_name = "percentage", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_percentage().empty()) {
            const std::string& _s = this_._internal_percentage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.protocolpool.v1.ContinuousFund.percentage");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp expiry = 3 [json_name = "expiry", (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.expiry_, this_._impl_.expiry_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.protocolpool.v1.ContinuousFund)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ContinuousFund::ByteSizeLong(const MessageLite& base) {
          const ContinuousFund& this_ = static_cast<const ContinuousFund&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ContinuousFund::ByteSizeLong() const {
          const ContinuousFund& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.protocolpool.v1.ContinuousFund)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string recipient = 1 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_recipient().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_recipient());
            }
            // string percentage = 2 [json_name = "percentage", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_percentage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_percentage());
            }
          }
           {
            // .google.protobuf.Timestamp expiry = 3 [json_name = "expiry", (.gogoproto.stdtime) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expiry_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ContinuousFund::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContinuousFund*>(&to_msg);
  auto& from = static_cast<const ContinuousFund&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.protocolpool.v1.ContinuousFund)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_recipient().empty()) {
    _this->_internal_set_recipient(from._internal_recipient());
  }
  if (!from._internal_percentage().empty()) {
    _this->_internal_set_percentage(from._internal_percentage());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.expiry_ != nullptr);
    if (_this->_impl_.expiry_ == nullptr) {
      _this->_impl_.expiry_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.expiry_);
    } else {
      _this->_impl_.expiry_->MergeFrom(*from._impl_.expiry_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContinuousFund::CopyFrom(const ContinuousFund& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.protocolpool.v1.ContinuousFund)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContinuousFund::InternalSwap(ContinuousFund* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.recipient_, &other->_impl_.recipient_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.percentage_, &other->_impl_.percentage_, arena);
  swap(_impl_.expiry_, other->_impl_.expiry_);
}

::google::protobuf::Metadata ContinuousFund::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Params::_Internal {
 public:
};

Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.protocolpool.v1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::protocolpool::v1::Params& from_msg)
      : enabled_distribution_denoms_{visibility, arena, from.enabled_distribution_denoms_},
        _cached_size_{0} {}

Params::Params(
    ::google::protobuf::Arena* arena,
    const Params& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Params* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.distribution_frequency_ = from._impl_.distribution_frequency_;

  // @@protoc_insertion_point(copy_constructor:cosmos.protocolpool.v1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : enabled_distribution_denoms_{visibility, arena},
        _cached_size_{0} {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.distribution_frequency_ = {};
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:cosmos.protocolpool.v1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Params, _impl_.enabled_distribution_denoms_) +
          decltype(Params::_impl_.enabled_distribution_denoms_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Params), alignof(Params), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Params::PlacementNew_,
                                 sizeof(Params),
                                 alignof(Params));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> Params::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::protocolpool::v1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 distribution_frequency = 2 [json_name = "distributionFrequency"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.distribution_frequency_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.distribution_frequency_)}},
    // repeated string enabled_distribution_denoms = 1 [json_name = "enabledDistributionDenoms"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.enabled_distribution_denoms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string enabled_distribution_denoms = 1 [json_name = "enabledDistributionDenoms"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.enabled_distribution_denoms_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // uint64 distribution_frequency = 2 [json_name = "distributionFrequency"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.distribution_frequency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\35\33\0\0\0\0\0\0"
    "cosmos.protocolpool.v1.Params"
    "enabled_distribution_denoms"
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.protocolpool.v1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.enabled_distribution_denoms_.Clear();
  _impl_.distribution_frequency_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.protocolpool.v1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string enabled_distribution_denoms = 1 [json_name = "enabledDistributionDenoms"];
          for (int i = 0, n = this_._internal_enabled_distribution_denoms_size(); i < n; ++i) {
            const auto& s = this_._internal_enabled_distribution_denoms().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.protocolpool.v1.Params.enabled_distribution_denoms");
            target = stream->WriteString(1, s, target);
          }

          // uint64 distribution_frequency = 2 [json_name = "distributionFrequency"];
          if (this_._internal_distribution_frequency() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_distribution_frequency(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.protocolpool.v1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.protocolpool.v1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string enabled_distribution_denoms = 1 [json_name = "enabledDistributionDenoms"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_enabled_distribution_denoms().size());
              for (int i = 0, n = this_._internal_enabled_distribution_denoms().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_enabled_distribution_denoms().Get(i));
              }
            }
          }
           {
            // uint64 distribution_frequency = 2 [json_name = "distributionFrequency"];
            if (this_._internal_distribution_frequency() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_distribution_frequency());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.protocolpool.v1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_enabled_distribution_denoms()->MergeFrom(from._internal_enabled_distribution_denoms());
  if (from._internal_distribution_frequency() != 0) {
    _this->_impl_.distribution_frequency_ = from._impl_.distribution_frequency_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.protocolpool.v1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.enabled_distribution_denoms_.InternalSwap(&other->_impl_.enabled_distribution_denoms_);
        swap(_impl_.distribution_frequency_, other->_impl_.distribution_frequency_);
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace protocolpool
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fprotocolpool_2fv1_2ftypes_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
