// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/protocolpool/v1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fprotocolpool_2fv1_2fquery_2eproto_2epb_2eh
#define cosmos_2fprotocolpool_2fv1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/protocolpool/v1/types.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fprotocolpool_2fv1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
namespace cosmos {
namespace protocolpool {
namespace v1 {
class QueryCommunityPoolRequest;
struct QueryCommunityPoolRequestDefaultTypeInternal;
extern QueryCommunityPoolRequestDefaultTypeInternal _QueryCommunityPoolRequest_default_instance_;
class QueryCommunityPoolResponse;
struct QueryCommunityPoolResponseDefaultTypeInternal;
extern QueryCommunityPoolResponseDefaultTypeInternal _QueryCommunityPoolResponse_default_instance_;
class QueryContinuousFundRequest;
struct QueryContinuousFundRequestDefaultTypeInternal;
extern QueryContinuousFundRequestDefaultTypeInternal _QueryContinuousFundRequest_default_instance_;
class QueryContinuousFundResponse;
struct QueryContinuousFundResponseDefaultTypeInternal;
extern QueryContinuousFundResponseDefaultTypeInternal _QueryContinuousFundResponse_default_instance_;
class QueryContinuousFundsRequest;
struct QueryContinuousFundsRequestDefaultTypeInternal;
extern QueryContinuousFundsRequestDefaultTypeInternal _QueryContinuousFundsRequest_default_instance_;
class QueryContinuousFundsResponse;
struct QueryContinuousFundsResponseDefaultTypeInternal;
extern QueryContinuousFundsResponseDefaultTypeInternal _QueryContinuousFundsResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
}  // namespace v1
}  // namespace protocolpool
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace protocolpool {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContinuousFundsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryContinuousFundsRequest) */ {
 public:
  inline QueryContinuousFundsRequest() : QueryContinuousFundsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContinuousFundsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContinuousFundsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContinuousFundsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContinuousFundsRequest(const QueryContinuousFundsRequest& from) : QueryContinuousFundsRequest(nullptr, from) {}
  inline QueryContinuousFundsRequest(QueryContinuousFundsRequest&& from) noexcept
      : QueryContinuousFundsRequest(nullptr, std::move(from)) {}
  inline QueryContinuousFundsRequest& operator=(const QueryContinuousFundsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContinuousFundsRequest& operator=(QueryContinuousFundsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContinuousFundsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContinuousFundsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryContinuousFundsRequest*>(
        &_QueryContinuousFundsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryContinuousFundsRequest& a, QueryContinuousFundsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryContinuousFundsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContinuousFundsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContinuousFundsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryContinuousFundsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryContinuousFundsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryContinuousFundsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryContinuousFundsRequest"; }

 protected:
  explicit QueryContinuousFundsRequest(::google::protobuf::Arena* arena);
  QueryContinuousFundsRequest(::google::protobuf::Arena* arena, const QueryContinuousFundsRequest& from);
  QueryContinuousFundsRequest(::google::protobuf::Arena* arena, QueryContinuousFundsRequest&& from) noexcept
      : QueryContinuousFundsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryContinuousFundsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContinuousFundsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContinuousFundRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryContinuousFundRequest) */ {
 public:
  inline QueryContinuousFundRequest() : QueryContinuousFundRequest(nullptr) {}
  ~QueryContinuousFundRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContinuousFundRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContinuousFundRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContinuousFundRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContinuousFundRequest(const QueryContinuousFundRequest& from) : QueryContinuousFundRequest(nullptr, from) {}
  inline QueryContinuousFundRequest(QueryContinuousFundRequest&& from) noexcept
      : QueryContinuousFundRequest(nullptr, std::move(from)) {}
  inline QueryContinuousFundRequest& operator=(const QueryContinuousFundRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContinuousFundRequest& operator=(QueryContinuousFundRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContinuousFundRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContinuousFundRequest* internal_default_instance() {
    return reinterpret_cast<const QueryContinuousFundRequest*>(
        &_QueryContinuousFundRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryContinuousFundRequest& a, QueryContinuousFundRequest& b) { a.Swap(&b); }
  inline void Swap(QueryContinuousFundRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContinuousFundRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContinuousFundRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContinuousFundRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContinuousFundRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContinuousFundRequest& from) { QueryContinuousFundRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContinuousFundRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryContinuousFundRequest"; }

 protected:
  explicit QueryContinuousFundRequest(::google::protobuf::Arena* arena);
  QueryContinuousFundRequest(::google::protobuf::Arena* arena, const QueryContinuousFundRequest& from);
  QueryContinuousFundRequest(::google::protobuf::Arena* arena, QueryContinuousFundRequest&& from) noexcept
      : QueryContinuousFundRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRecipientFieldNumber = 1,
  };
  // string recipient = 1 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_recipient() ;
  const std::string& recipient() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_recipient(Arg_&& arg, Args_... args);
  std::string* mutable_recipient();
  PROTOBUF_NODISCARD std::string* release_recipient();
  void set_allocated_recipient(std::string* value);

  private:
  const std::string& _internal_recipient() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_recipient(
      const std::string& value);
  std::string* _internal_mutable_recipient();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryContinuousFundRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContinuousFundRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr recipient_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCommunityPoolRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryCommunityPoolRequest) */ {
 public:
  inline QueryCommunityPoolRequest() : QueryCommunityPoolRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCommunityPoolRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCommunityPoolRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCommunityPoolRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCommunityPoolRequest(const QueryCommunityPoolRequest& from) : QueryCommunityPoolRequest(nullptr, from) {}
  inline QueryCommunityPoolRequest(QueryCommunityPoolRequest&& from) noexcept
      : QueryCommunityPoolRequest(nullptr, std::move(from)) {}
  inline QueryCommunityPoolRequest& operator=(const QueryCommunityPoolRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCommunityPoolRequest& operator=(QueryCommunityPoolRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCommunityPoolRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCommunityPoolRequest* internal_default_instance() {
    return reinterpret_cast<const QueryCommunityPoolRequest*>(
        &_QueryCommunityPoolRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryCommunityPoolRequest& a, QueryCommunityPoolRequest& b) { a.Swap(&b); }
  inline void Swap(QueryCommunityPoolRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCommunityPoolRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCommunityPoolRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryCommunityPoolRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryCommunityPoolRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryCommunityPoolRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryCommunityPoolRequest"; }

 protected:
  explicit QueryCommunityPoolRequest(::google::protobuf::Arena* arena);
  QueryCommunityPoolRequest(::google::protobuf::Arena* arena, const QueryCommunityPoolRequest& from);
  QueryCommunityPoolRequest(::google::protobuf::Arena* arena, QueryCommunityPoolRequest&& from) noexcept
      : QueryCommunityPoolRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryCommunityPoolRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCommunityPoolRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .cosmos.protocolpool.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::protocolpool::v1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::protocolpool::v1::Params* release_params();
  ::cosmos::protocolpool::v1::Params* mutable_params();
  void set_allocated_params(::cosmos::protocolpool::v1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::protocolpool::v1::Params* value);
  ::cosmos::protocolpool::v1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::protocolpool::v1::Params& _internal_params() const;
  ::cosmos::protocolpool::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::protocolpool::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCommunityPoolResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryCommunityPoolResponse) */ {
 public:
  inline QueryCommunityPoolResponse() : QueryCommunityPoolResponse(nullptr) {}
  ~QueryCommunityPoolResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCommunityPoolResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCommunityPoolResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCommunityPoolResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCommunityPoolResponse(const QueryCommunityPoolResponse& from) : QueryCommunityPoolResponse(nullptr, from) {}
  inline QueryCommunityPoolResponse(QueryCommunityPoolResponse&& from) noexcept
      : QueryCommunityPoolResponse(nullptr, std::move(from)) {}
  inline QueryCommunityPoolResponse& operator=(const QueryCommunityPoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCommunityPoolResponse& operator=(QueryCommunityPoolResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCommunityPoolResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCommunityPoolResponse* internal_default_instance() {
    return reinterpret_cast<const QueryCommunityPoolResponse*>(
        &_QueryCommunityPoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryCommunityPoolResponse& a, QueryCommunityPoolResponse& b) { a.Swap(&b); }
  inline void Swap(QueryCommunityPoolResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCommunityPoolResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCommunityPoolResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCommunityPoolResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCommunityPoolResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCommunityPoolResponse& from) { QueryCommunityPoolResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCommunityPoolResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryCommunityPoolResponse"; }

 protected:
  explicit QueryCommunityPoolResponse(::google::protobuf::Arena* arena);
  QueryCommunityPoolResponse(::google::protobuf::Arena* arena, const QueryCommunityPoolResponse& from);
  QueryCommunityPoolResponse(::google::protobuf::Arena* arena, QueryCommunityPoolResponse&& from) noexcept
      : QueryCommunityPoolResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoolFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.Coin pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  int pool_size() const;
  private:
  int _internal_pool_size() const;

  public:
  void clear_pool() ;
  ::cosmos::base::v1beta1::Coin* mutable_pool(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_pool();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_pool() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_pool();
  public:
  const ::cosmos::base::v1beta1::Coin& pool(int index) const;
  ::cosmos::base::v1beta1::Coin* add_pool();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& pool() const;
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryCommunityPoolResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCommunityPoolResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > pool_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContinuousFundsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryContinuousFundsResponse) */ {
 public:
  inline QueryContinuousFundsResponse() : QueryContinuousFundsResponse(nullptr) {}
  ~QueryContinuousFundsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContinuousFundsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContinuousFundsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContinuousFundsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContinuousFundsResponse(const QueryContinuousFundsResponse& from) : QueryContinuousFundsResponse(nullptr, from) {}
  inline QueryContinuousFundsResponse(QueryContinuousFundsResponse&& from) noexcept
      : QueryContinuousFundsResponse(nullptr, std::move(from)) {}
  inline QueryContinuousFundsResponse& operator=(const QueryContinuousFundsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContinuousFundsResponse& operator=(QueryContinuousFundsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContinuousFundsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContinuousFundsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryContinuousFundsResponse*>(
        &_QueryContinuousFundsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryContinuousFundsResponse& a, QueryContinuousFundsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryContinuousFundsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContinuousFundsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContinuousFundsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContinuousFundsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContinuousFundsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContinuousFundsResponse& from) { QueryContinuousFundsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContinuousFundsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryContinuousFundsResponse"; }

 protected:
  explicit QueryContinuousFundsResponse(::google::protobuf::Arena* arena);
  QueryContinuousFundsResponse(::google::protobuf::Arena* arena, const QueryContinuousFundsResponse& from);
  QueryContinuousFundsResponse(::google::protobuf::Arena* arena, QueryContinuousFundsResponse&& from) noexcept
      : QueryContinuousFundsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContinuousFundsFieldNumber = 1,
  };
  // repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];
  int continuous_funds_size() const;
  private:
  int _internal_continuous_funds_size() const;

  public:
  void clear_continuous_funds() ;
  ::cosmos::protocolpool::v1::ContinuousFund* mutable_continuous_funds(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>* mutable_continuous_funds();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>& _internal_continuous_funds() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>* _internal_mutable_continuous_funds();
  public:
  const ::cosmos::protocolpool::v1::ContinuousFund& continuous_funds(int index) const;
  ::cosmos::protocolpool::v1::ContinuousFund* add_continuous_funds();
  const ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>& continuous_funds() const;
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryContinuousFundsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContinuousFundsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::protocolpool::v1::ContinuousFund > continuous_funds_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryContinuousFundResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.protocolpool.v1.QueryContinuousFundResponse) */ {
 public:
  inline QueryContinuousFundResponse() : QueryContinuousFundResponse(nullptr) {}
  ~QueryContinuousFundResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryContinuousFundResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryContinuousFundResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryContinuousFundResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryContinuousFundResponse(const QueryContinuousFundResponse& from) : QueryContinuousFundResponse(nullptr, from) {}
  inline QueryContinuousFundResponse(QueryContinuousFundResponse&& from) noexcept
      : QueryContinuousFundResponse(nullptr, std::move(from)) {}
  inline QueryContinuousFundResponse& operator=(const QueryContinuousFundResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryContinuousFundResponse& operator=(QueryContinuousFundResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryContinuousFundResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryContinuousFundResponse* internal_default_instance() {
    return reinterpret_cast<const QueryContinuousFundResponse*>(
        &_QueryContinuousFundResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryContinuousFundResponse& a, QueryContinuousFundResponse& b) { a.Swap(&b); }
  inline void Swap(QueryContinuousFundResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryContinuousFundResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryContinuousFundResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryContinuousFundResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryContinuousFundResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryContinuousFundResponse& from) { QueryContinuousFundResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryContinuousFundResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.protocolpool.v1.QueryContinuousFundResponse"; }

 protected:
  explicit QueryContinuousFundResponse(::google::protobuf::Arena* arena);
  QueryContinuousFundResponse(::google::protobuf::Arena* arena, const QueryContinuousFundResponse& from);
  QueryContinuousFundResponse(::google::protobuf::Arena* arena, QueryContinuousFundResponse&& from) noexcept
      : QueryContinuousFundResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContinuousFundFieldNumber = 1,
  };
  // .cosmos.protocolpool.v1.ContinuousFund continuous_fund = 1 [json_name = "continuousFund", (.gogoproto.nullable) = false];
  bool has_continuous_fund() const;
  void clear_continuous_fund() ;
  const ::cosmos::protocolpool::v1::ContinuousFund& continuous_fund() const;
  PROTOBUF_NODISCARD ::cosmos::protocolpool::v1::ContinuousFund* release_continuous_fund();
  ::cosmos::protocolpool::v1::ContinuousFund* mutable_continuous_fund();
  void set_allocated_continuous_fund(::cosmos::protocolpool::v1::ContinuousFund* value);
  void unsafe_arena_set_allocated_continuous_fund(::cosmos::protocolpool::v1::ContinuousFund* value);
  ::cosmos::protocolpool::v1::ContinuousFund* unsafe_arena_release_continuous_fund();

  private:
  const ::cosmos::protocolpool::v1::ContinuousFund& _internal_continuous_fund() const;
  ::cosmos::protocolpool::v1::ContinuousFund* _internal_mutable_continuous_fund();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.protocolpool.v1.QueryContinuousFundResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryContinuousFundResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::protocolpool::v1::ContinuousFund* continuous_fund_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fprotocolpool_2fv1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryCommunityPoolRequest

// -------------------------------------------------------------------

// QueryCommunityPoolResponse

// repeated .cosmos.base.v1beta1.Coin pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
inline int QueryCommunityPoolResponse::_internal_pool_size() const {
  return _internal_pool().size();
}
inline int QueryCommunityPoolResponse::pool_size() const {
  return _internal_pool_size();
}
inline ::cosmos::base::v1beta1::Coin* QueryCommunityPoolResponse::mutable_pool(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.protocolpool.v1.QueryCommunityPoolResponse.pool)
  return _internal_mutable_pool()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* QueryCommunityPoolResponse::mutable_pool()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.protocolpool.v1.QueryCommunityPoolResponse.pool)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pool();
}
inline const ::cosmos::base::v1beta1::Coin& QueryCommunityPoolResponse::pool(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.protocolpool.v1.QueryCommunityPoolResponse.pool)
  return _internal_pool().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* QueryCommunityPoolResponse::add_pool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_pool()->Add();
  // @@protoc_insertion_point(field_add:cosmos.protocolpool.v1.QueryCommunityPoolResponse.pool)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& QueryCommunityPoolResponse::pool() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.protocolpool.v1.QueryCommunityPoolResponse.pool)
  return _internal_pool();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
QueryCommunityPoolResponse::_internal_pool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pool_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
QueryCommunityPoolResponse::_internal_mutable_pool() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pool_;
}

// -------------------------------------------------------------------

// QueryContinuousFundRequest

// string recipient = 1 [json_name = "recipient", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryContinuousFundRequest::clear_recipient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.ClearToEmpty();
}
inline const std::string& QueryContinuousFundRequest::recipient() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.protocolpool.v1.QueryContinuousFundRequest.recipient)
  return _internal_recipient();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryContinuousFundRequest::set_recipient(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.protocolpool.v1.QueryContinuousFundRequest.recipient)
}
inline std::string* QueryContinuousFundRequest::mutable_recipient() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_recipient();
  // @@protoc_insertion_point(field_mutable:cosmos.protocolpool.v1.QueryContinuousFundRequest.recipient)
  return _s;
}
inline const std::string& QueryContinuousFundRequest::_internal_recipient() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recipient_.Get();
}
inline void QueryContinuousFundRequest::_internal_set_recipient(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.Set(value, GetArena());
}
inline std::string* QueryContinuousFundRequest::_internal_mutable_recipient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.recipient_.Mutable( GetArena());
}
inline std::string* QueryContinuousFundRequest::release_recipient() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.protocolpool.v1.QueryContinuousFundRequest.recipient)
  return _impl_.recipient_.Release();
}
inline void QueryContinuousFundRequest::set_allocated_recipient(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recipient_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.recipient_.IsDefault()) {
    _impl_.recipient_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.protocolpool.v1.QueryContinuousFundRequest.recipient)
}

// -------------------------------------------------------------------

// QueryContinuousFundResponse

// .cosmos.protocolpool.v1.ContinuousFund continuous_fund = 1 [json_name = "continuousFund", (.gogoproto.nullable) = false];
inline bool QueryContinuousFundResponse::has_continuous_fund() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.continuous_fund_ != nullptr);
  return value;
}
inline const ::cosmos::protocolpool::v1::ContinuousFund& QueryContinuousFundResponse::_internal_continuous_fund() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::protocolpool::v1::ContinuousFund* p = _impl_.continuous_fund_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::protocolpool::v1::ContinuousFund&>(::cosmos::protocolpool::v1::_ContinuousFund_default_instance_);
}
inline const ::cosmos::protocolpool::v1::ContinuousFund& QueryContinuousFundResponse::continuous_fund() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.protocolpool.v1.QueryContinuousFundResponse.continuous_fund)
  return _internal_continuous_fund();
}
inline void QueryContinuousFundResponse::unsafe_arena_set_allocated_continuous_fund(::cosmos::protocolpool::v1::ContinuousFund* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.continuous_fund_);
  }
  _impl_.continuous_fund_ = reinterpret_cast<::cosmos::protocolpool::v1::ContinuousFund*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.protocolpool.v1.QueryContinuousFundResponse.continuous_fund)
}
inline ::cosmos::protocolpool::v1::ContinuousFund* QueryContinuousFundResponse::release_continuous_fund() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::protocolpool::v1::ContinuousFund* released = _impl_.continuous_fund_;
  _impl_.continuous_fund_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::protocolpool::v1::ContinuousFund* QueryContinuousFundResponse::unsafe_arena_release_continuous_fund() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.protocolpool.v1.QueryContinuousFundResponse.continuous_fund)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::protocolpool::v1::ContinuousFund* temp = _impl_.continuous_fund_;
  _impl_.continuous_fund_ = nullptr;
  return temp;
}
inline ::cosmos::protocolpool::v1::ContinuousFund* QueryContinuousFundResponse::_internal_mutable_continuous_fund() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.continuous_fund_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::protocolpool::v1::ContinuousFund>(GetArena());
    _impl_.continuous_fund_ = reinterpret_cast<::cosmos::protocolpool::v1::ContinuousFund*>(p);
  }
  return _impl_.continuous_fund_;
}
inline ::cosmos::protocolpool::v1::ContinuousFund* QueryContinuousFundResponse::mutable_continuous_fund() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::protocolpool::v1::ContinuousFund* _msg = _internal_mutable_continuous_fund();
  // @@protoc_insertion_point(field_mutable:cosmos.protocolpool.v1.QueryContinuousFundResponse.continuous_fund)
  return _msg;
}
inline void QueryContinuousFundResponse::set_allocated_continuous_fund(::cosmos::protocolpool::v1::ContinuousFund* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.continuous_fund_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.continuous_fund_ = reinterpret_cast<::cosmos::protocolpool::v1::ContinuousFund*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.protocolpool.v1.QueryContinuousFundResponse.continuous_fund)
}

// -------------------------------------------------------------------

// QueryContinuousFundsRequest

// -------------------------------------------------------------------

// QueryContinuousFundsResponse

// repeated .cosmos.protocolpool.v1.ContinuousFund continuous_funds = 1 [json_name = "continuousFunds", (.gogoproto.nullable) = false];
inline int QueryContinuousFundsResponse::_internal_continuous_funds_size() const {
  return _internal_continuous_funds().size();
}
inline int QueryContinuousFundsResponse::continuous_funds_size() const {
  return _internal_continuous_funds_size();
}
inline ::cosmos::protocolpool::v1::ContinuousFund* QueryContinuousFundsResponse::mutable_continuous_funds(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.protocolpool.v1.QueryContinuousFundsResponse.continuous_funds)
  return _internal_mutable_continuous_funds()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>* QueryContinuousFundsResponse::mutable_continuous_funds()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.protocolpool.v1.QueryContinuousFundsResponse.continuous_funds)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_continuous_funds();
}
inline const ::cosmos::protocolpool::v1::ContinuousFund& QueryContinuousFundsResponse::continuous_funds(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.protocolpool.v1.QueryContinuousFundsResponse.continuous_funds)
  return _internal_continuous_funds().Get(index);
}
inline ::cosmos::protocolpool::v1::ContinuousFund* QueryContinuousFundsResponse::add_continuous_funds() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::protocolpool::v1::ContinuousFund* _add = _internal_mutable_continuous_funds()->Add();
  // @@protoc_insertion_point(field_add:cosmos.protocolpool.v1.QueryContinuousFundsResponse.continuous_funds)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>& QueryContinuousFundsResponse::continuous_funds() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.protocolpool.v1.QueryContinuousFundsResponse.continuous_funds)
  return _internal_continuous_funds();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>&
QueryContinuousFundsResponse::_internal_continuous_funds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.continuous_funds_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::protocolpool::v1::ContinuousFund>*
QueryContinuousFundsResponse::_internal_mutable_continuous_funds() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.continuous_funds_;
}

// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .cosmos.protocolpool.v1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::protocolpool::v1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::protocolpool::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::protocolpool::v1::Params&>(::cosmos::protocolpool::v1::_Params_default_instance_);
}
inline const ::cosmos::protocolpool::v1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.protocolpool.v1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::cosmos::protocolpool::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::protocolpool::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.protocolpool.v1.QueryParamsResponse.params)
}
inline ::cosmos::protocolpool::v1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::protocolpool::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::protocolpool::v1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.protocolpool.v1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::protocolpool::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::protocolpool::v1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::protocolpool::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::protocolpool::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::protocolpool::v1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::protocolpool::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.protocolpool.v1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::cosmos::protocolpool::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::protocolpool::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.protocolpool.v1.QueryParamsResponse.params)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace protocolpool
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fprotocolpool_2fv1_2fquery_2eproto_2epb_2eh
