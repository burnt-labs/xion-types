// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/authz/v1beta1/event.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fauthz_2fv1beta1_2fevent_2eproto_2epb_2eh
#define cosmos_2fauthz_2fv1beta1_2fevent_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fauthz_2fv1beta1_2fevent_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fauthz_2fv1beta1_2fevent_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fauthz_2fv1beta1_2fevent_2eproto;
namespace cosmos {
namespace authz {
namespace v1beta1 {
class EventGrant;
struct EventGrantDefaultTypeInternal;
extern EventGrantDefaultTypeInternal _EventGrant_default_instance_;
class EventRevoke;
struct EventRevokeDefaultTypeInternal;
extern EventRevokeDefaultTypeInternal _EventRevoke_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace authz {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class EventRevoke final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.EventRevoke) */ {
 public:
  inline EventRevoke() : EventRevoke(nullptr) {}
  ~EventRevoke() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventRevoke* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventRevoke));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventRevoke(
      ::google::protobuf::internal::ConstantInitialized);

  inline EventRevoke(const EventRevoke& from) : EventRevoke(nullptr, from) {}
  inline EventRevoke(EventRevoke&& from) noexcept
      : EventRevoke(nullptr, std::move(from)) {}
  inline EventRevoke& operator=(const EventRevoke& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventRevoke& operator=(EventRevoke&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventRevoke& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventRevoke* internal_default_instance() {
    return reinterpret_cast<const EventRevoke*>(
        &_EventRevoke_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EventRevoke& a, EventRevoke& b) { a.Swap(&b); }
  inline void Swap(EventRevoke* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventRevoke* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventRevoke* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventRevoke>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventRevoke& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventRevoke& from) { EventRevoke::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventRevoke* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.EventRevoke"; }

 protected:
  explicit EventRevoke(::google::protobuf::Arena* arena);
  EventRevoke(::google::protobuf::Arena* arena, const EventRevoke& from);
  EventRevoke(::google::protobuf::Arena* arena, EventRevoke&& from) noexcept
      : EventRevoke(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgTypeUrlFieldNumber = 2,
    kGranterFieldNumber = 3,
    kGranteeFieldNumber = 4,
  };
  // string msg_type_url = 2 [json_name = "msgTypeUrl"];
  void clear_msg_type_url() ;
  const std::string& msg_type_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg_type_url(Arg_&& arg, Args_... args);
  std::string* mutable_msg_type_url();
  PROTOBUF_NODISCARD std::string* release_msg_type_url();
  void set_allocated_msg_type_url(std::string* value);

  private:
  const std::string& _internal_msg_type_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_type_url(
      const std::string& value);
  std::string* _internal_mutable_msg_type_url();

  public:
  // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.EventRevoke)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EventRevoke& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_type_url_;
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fevent_2eproto;
};
// -------------------------------------------------------------------

class EventGrant final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.EventGrant) */ {
 public:
  inline EventGrant() : EventGrant(nullptr) {}
  ~EventGrant() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventGrant* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventGrant));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventGrant(
      ::google::protobuf::internal::ConstantInitialized);

  inline EventGrant(const EventGrant& from) : EventGrant(nullptr, from) {}
  inline EventGrant(EventGrant&& from) noexcept
      : EventGrant(nullptr, std::move(from)) {}
  inline EventGrant& operator=(const EventGrant& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventGrant& operator=(EventGrant&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventGrant& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventGrant* internal_default_instance() {
    return reinterpret_cast<const EventGrant*>(
        &_EventGrant_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EventGrant& a, EventGrant& b) { a.Swap(&b); }
  inline void Swap(EventGrant* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventGrant* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventGrant* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventGrant>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventGrant& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventGrant& from) { EventGrant::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventGrant* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.EventGrant"; }

 protected:
  explicit EventGrant(::google::protobuf::Arena* arena);
  EventGrant(::google::protobuf::Arena* arena, const EventGrant& from);
  EventGrant(::google::protobuf::Arena* arena, EventGrant&& from) noexcept
      : EventGrant(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgTypeUrlFieldNumber = 2,
    kGranterFieldNumber = 3,
    kGranteeFieldNumber = 4,
  };
  // string msg_type_url = 2 [json_name = "msgTypeUrl"];
  void clear_msg_type_url() ;
  const std::string& msg_type_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg_type_url(Arg_&& arg, Args_... args);
  std::string* mutable_msg_type_url();
  PROTOBUF_NODISCARD std::string* release_msg_type_url();
  void set_allocated_msg_type_url(std::string* value);

  private:
  const std::string& _internal_msg_type_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_type_url(
      const std::string& value);
  std::string* _internal_mutable_msg_type_url();

  public:
  // string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.EventGrant)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EventGrant& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_type_url_;
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fevent_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EventGrant

// string msg_type_url = 2 [json_name = "msgTypeUrl"];
inline void EventGrant::clear_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.ClearToEmpty();
}
inline const std::string& EventGrant::msg_type_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.EventGrant.msg_type_url)
  return _internal_msg_type_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventGrant::set_msg_type_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.EventGrant.msg_type_url)
}
inline std::string* EventGrant::mutable_msg_type_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg_type_url();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.EventGrant.msg_type_url)
  return _s;
}
inline const std::string& EventGrant::_internal_msg_type_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_type_url_.Get();
}
inline void EventGrant::_internal_set_msg_type_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(value, GetArena());
}
inline std::string* EventGrant::_internal_mutable_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_type_url_.Mutable( GetArena());
}
inline std::string* EventGrant::release_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.EventGrant.msg_type_url)
  return _impl_.msg_type_url_.Release();
}
inline void EventGrant::set_allocated_msg_type_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_type_url_.IsDefault()) {
    _impl_.msg_type_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.EventGrant.msg_type_url)
}

// string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void EventGrant::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& EventGrant::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.EventGrant.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventGrant::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.EventGrant.granter)
}
inline std::string* EventGrant::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.EventGrant.granter)
  return _s;
}
inline const std::string& EventGrant::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void EventGrant::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* EventGrant::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* EventGrant::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.EventGrant.granter)
  return _impl_.granter_.Release();
}
inline void EventGrant::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.EventGrant.granter)
}

// string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void EventGrant::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& EventGrant::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.EventGrant.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventGrant::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.EventGrant.grantee)
}
inline std::string* EventGrant::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.EventGrant.grantee)
  return _s;
}
inline const std::string& EventGrant::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void EventGrant::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* EventGrant::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* EventGrant::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.EventGrant.grantee)
  return _impl_.grantee_.Release();
}
inline void EventGrant::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.EventGrant.grantee)
}

// -------------------------------------------------------------------

// EventRevoke

// string msg_type_url = 2 [json_name = "msgTypeUrl"];
inline void EventRevoke::clear_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.ClearToEmpty();
}
inline const std::string& EventRevoke::msg_type_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.EventRevoke.msg_type_url)
  return _internal_msg_type_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventRevoke::set_msg_type_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.EventRevoke.msg_type_url)
}
inline std::string* EventRevoke::mutable_msg_type_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg_type_url();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.EventRevoke.msg_type_url)
  return _s;
}
inline const std::string& EventRevoke::_internal_msg_type_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_type_url_.Get();
}
inline void EventRevoke::_internal_set_msg_type_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(value, GetArena());
}
inline std::string* EventRevoke::_internal_mutable_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_type_url_.Mutable( GetArena());
}
inline std::string* EventRevoke::release_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.EventRevoke.msg_type_url)
  return _impl_.msg_type_url_.Release();
}
inline void EventRevoke::set_allocated_msg_type_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_type_url_.IsDefault()) {
    _impl_.msg_type_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.EventRevoke.msg_type_url)
}

// string granter = 3 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void EventRevoke::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& EventRevoke::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.EventRevoke.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventRevoke::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.EventRevoke.granter)
}
inline std::string* EventRevoke::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.EventRevoke.granter)
  return _s;
}
inline const std::string& EventRevoke::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void EventRevoke::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* EventRevoke::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* EventRevoke::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.EventRevoke.granter)
  return _impl_.granter_.Release();
}
inline void EventRevoke::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.EventRevoke.granter)
}

// string grantee = 4 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void EventRevoke::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& EventRevoke::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.EventRevoke.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventRevoke::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.EventRevoke.grantee)
}
inline std::string* EventRevoke::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.EventRevoke.grantee)
  return _s;
}
inline const std::string& EventRevoke::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void EventRevoke::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* EventRevoke::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* EventRevoke::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.EventRevoke.grantee)
  return _impl_.grantee_.Release();
}
inline void EventRevoke::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.EventRevoke.grantee)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fauthz_2fv1beta1_2fevent_2eproto_2epb_2eh
