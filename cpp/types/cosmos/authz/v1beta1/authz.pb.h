// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/authz/v1beta1/authz.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_2epb_2eh
#define cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "amino/amino.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto;
namespace cosmos {
namespace authz {
namespace v1beta1 {
class GenericAuthorization;
struct GenericAuthorizationDefaultTypeInternal;
extern GenericAuthorizationDefaultTypeInternal _GenericAuthorization_default_instance_;
class Grant;
struct GrantDefaultTypeInternal;
extern GrantDefaultTypeInternal _Grant_default_instance_;
class GrantAuthorization;
struct GrantAuthorizationDefaultTypeInternal;
extern GrantAuthorizationDefaultTypeInternal _GrantAuthorization_default_instance_;
class GrantQueueItem;
struct GrantQueueItemDefaultTypeInternal;
extern GrantQueueItemDefaultTypeInternal _GrantQueueItem_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace authz {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class GrantQueueItem final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.GrantQueueItem) */ {
 public:
  inline GrantQueueItem() : GrantQueueItem(nullptr) {}
  ~GrantQueueItem() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GrantQueueItem* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GrantQueueItem));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GrantQueueItem(
      ::google::protobuf::internal::ConstantInitialized);

  inline GrantQueueItem(const GrantQueueItem& from) : GrantQueueItem(nullptr, from) {}
  inline GrantQueueItem(GrantQueueItem&& from) noexcept
      : GrantQueueItem(nullptr, std::move(from)) {}
  inline GrantQueueItem& operator=(const GrantQueueItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline GrantQueueItem& operator=(GrantQueueItem&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GrantQueueItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const GrantQueueItem* internal_default_instance() {
    return reinterpret_cast<const GrantQueueItem*>(
        &_GrantQueueItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GrantQueueItem& a, GrantQueueItem& b) { a.Swap(&b); }
  inline void Swap(GrantQueueItem* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GrantQueueItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GrantQueueItem* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GrantQueueItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GrantQueueItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GrantQueueItem& from) { GrantQueueItem::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GrantQueueItem* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.GrantQueueItem"; }

 protected:
  explicit GrantQueueItem(::google::protobuf::Arena* arena);
  GrantQueueItem(::google::protobuf::Arena* arena, const GrantQueueItem& from);
  GrantQueueItem(::google::protobuf::Arena* arena, GrantQueueItem&& from) noexcept
      : GrantQueueItem(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgTypeUrlsFieldNumber = 1,
  };
  // repeated string msg_type_urls = 1 [json_name = "msgTypeUrls"];
  int msg_type_urls_size() const;
  private:
  int _internal_msg_type_urls_size() const;

  public:
  void clear_msg_type_urls() ;
  const std::string& msg_type_urls(int index) const;
  std::string* mutable_msg_type_urls(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg_type_urls(int index, Arg_&& value, Args_... args);
  std::string* add_msg_type_urls();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_msg_type_urls(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& msg_type_urls() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_msg_type_urls();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_msg_type_urls() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_msg_type_urls();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.GrantQueueItem)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GrantQueueItem& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> msg_type_urls_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto;
};
// -------------------------------------------------------------------

class GenericAuthorization final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.GenericAuthorization) */ {
 public:
  inline GenericAuthorization() : GenericAuthorization(nullptr) {}
  ~GenericAuthorization() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenericAuthorization* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenericAuthorization));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenericAuthorization(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenericAuthorization(const GenericAuthorization& from) : GenericAuthorization(nullptr, from) {}
  inline GenericAuthorization(GenericAuthorization&& from) noexcept
      : GenericAuthorization(nullptr, std::move(from)) {}
  inline GenericAuthorization& operator=(const GenericAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenericAuthorization& operator=(GenericAuthorization&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenericAuthorization& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenericAuthorization* internal_default_instance() {
    return reinterpret_cast<const GenericAuthorization*>(
        &_GenericAuthorization_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GenericAuthorization& a, GenericAuthorization& b) { a.Swap(&b); }
  inline void Swap(GenericAuthorization* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenericAuthorization* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenericAuthorization* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenericAuthorization>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenericAuthorization& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenericAuthorization& from) { GenericAuthorization::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenericAuthorization* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.GenericAuthorization"; }

 protected:
  explicit GenericAuthorization(::google::protobuf::Arena* arena);
  GenericAuthorization(::google::protobuf::Arena* arena, const GenericAuthorization& from);
  GenericAuthorization(::google::protobuf::Arena* arena, GenericAuthorization&& from) noexcept
      : GenericAuthorization(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 1,
  };
  // string msg = 1 [json_name = "msg"];
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.GenericAuthorization)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      53, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenericAuthorization& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto;
};
// -------------------------------------------------------------------

class GrantAuthorization final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.GrantAuthorization) */ {
 public:
  inline GrantAuthorization() : GrantAuthorization(nullptr) {}
  ~GrantAuthorization() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GrantAuthorization* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GrantAuthorization));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GrantAuthorization(
      ::google::protobuf::internal::ConstantInitialized);

  inline GrantAuthorization(const GrantAuthorization& from) : GrantAuthorization(nullptr, from) {}
  inline GrantAuthorization(GrantAuthorization&& from) noexcept
      : GrantAuthorization(nullptr, std::move(from)) {}
  inline GrantAuthorization& operator=(const GrantAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  inline GrantAuthorization& operator=(GrantAuthorization&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GrantAuthorization& default_instance() {
    return *internal_default_instance();
  }
  static inline const GrantAuthorization* internal_default_instance() {
    return reinterpret_cast<const GrantAuthorization*>(
        &_GrantAuthorization_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GrantAuthorization& a, GrantAuthorization& b) { a.Swap(&b); }
  inline void Swap(GrantAuthorization* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GrantAuthorization* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GrantAuthorization* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GrantAuthorization>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GrantAuthorization& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GrantAuthorization& from) { GrantAuthorization::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GrantAuthorization* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.GrantAuthorization"; }

 protected:
  explicit GrantAuthorization(::google::protobuf::Arena* arena);
  GrantAuthorization(::google::protobuf::Arena* arena, const GrantAuthorization& from);
  GrantAuthorization(::google::protobuf::Arena* arena, GrantAuthorization&& from) noexcept
      : GrantAuthorization(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kAuthorizationFieldNumber = 3,
    kExpirationFieldNumber = 4,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // .google.protobuf.Any authorization = 3 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
  bool has_authorization() const;
  void clear_authorization() ;
  const ::google::protobuf::Any& authorization() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_authorization();
  ::google::protobuf::Any* mutable_authorization();
  void set_allocated_authorization(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_authorization(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_authorization();

  private:
  const ::google::protobuf::Any& _internal_authorization() const;
  ::google::protobuf::Any* _internal_mutable_authorization();

  public:
  // .google.protobuf.Timestamp expiration = 4 [json_name = "expiration", (.gogoproto.stdtime) = true];
  bool has_expiration() const;
  void clear_expiration() ;
  const ::google::protobuf::Timestamp& expiration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_expiration();
  ::google::protobuf::Timestamp* mutable_expiration();
  void set_allocated_expiration(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_expiration(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_expiration();

  private:
  const ::google::protobuf::Timestamp& _internal_expiration() const;
  ::google::protobuf::Timestamp* _internal_mutable_expiration();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.GrantAuthorization)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GrantAuthorization& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::Any* authorization_;
    ::google::protobuf::Timestamp* expiration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto;
};
// -------------------------------------------------------------------

class Grant final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.Grant) */ {
 public:
  inline Grant() : Grant(nullptr) {}
  ~Grant() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Grant* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Grant));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Grant(
      ::google::protobuf::internal::ConstantInitialized);

  inline Grant(const Grant& from) : Grant(nullptr, from) {}
  inline Grant(Grant&& from) noexcept
      : Grant(nullptr, std::move(from)) {}
  inline Grant& operator=(const Grant& from) {
    CopyFrom(from);
    return *this;
  }
  inline Grant& operator=(Grant&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Grant& default_instance() {
    return *internal_default_instance();
  }
  static inline const Grant* internal_default_instance() {
    return reinterpret_cast<const Grant*>(
        &_Grant_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Grant& a, Grant& b) { a.Swap(&b); }
  inline void Swap(Grant* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Grant* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Grant* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Grant>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Grant& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Grant& from) { Grant::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Grant* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.Grant"; }

 protected:
  explicit Grant(::google::protobuf::Arena* arena);
  Grant(::google::protobuf::Arena* arena, const Grant& from);
  Grant(::google::protobuf::Arena* arena, Grant&& from) noexcept
      : Grant(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorizationFieldNumber = 1,
    kExpirationFieldNumber = 2,
  };
  // .google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
  bool has_authorization() const;
  void clear_authorization() ;
  const ::google::protobuf::Any& authorization() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_authorization();
  ::google::protobuf::Any* mutable_authorization();
  void set_allocated_authorization(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_authorization(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_authorization();

  private:
  const ::google::protobuf::Any& _internal_authorization() const;
  ::google::protobuf::Any* _internal_mutable_authorization();

  public:
  // .google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];
  bool has_expiration() const;
  void clear_expiration() ;
  const ::google::protobuf::Timestamp& expiration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_expiration();
  ::google::protobuf::Timestamp* mutable_expiration();
  void set_allocated_expiration(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_expiration(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_expiration();

  private:
  const ::google::protobuf::Timestamp& _internal_expiration() const;
  ::google::protobuf::Timestamp* _internal_mutable_expiration();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.Grant)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Grant& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Any* authorization_;
    ::google::protobuf::Timestamp* expiration_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2fauthz_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GenericAuthorization

// string msg = 1 [json_name = "msg"];
inline void GenericAuthorization::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& GenericAuthorization::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.GenericAuthorization.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GenericAuthorization::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.GenericAuthorization.msg)
}
inline std::string* GenericAuthorization::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.GenericAuthorization.msg)
  return _s;
}
inline const std::string& GenericAuthorization::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void GenericAuthorization::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* GenericAuthorization::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* GenericAuthorization::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.GenericAuthorization.msg)
  return _impl_.msg_.Release();
}
inline void GenericAuthorization::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_.IsDefault()) {
    _impl_.msg_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.GenericAuthorization.msg)
}

// -------------------------------------------------------------------

// Grant

// .google.protobuf.Any authorization = 1 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
inline bool Grant::has_authorization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.authorization_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& Grant::_internal_authorization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.authorization_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& Grant::authorization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.Grant.authorization)
  return _internal_authorization();
}
inline void Grant::unsafe_arena_set_allocated_authorization(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.authorization_);
  }
  _impl_.authorization_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.Grant.authorization)
}
inline ::google::protobuf::Any* Grant::release_authorization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.authorization_;
  _impl_.authorization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* Grant::unsafe_arena_release_authorization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.Grant.authorization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.authorization_;
  _impl_.authorization_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Grant::_internal_mutable_authorization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authorization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.authorization_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.authorization_;
}
inline ::google::protobuf::Any* Grant::mutable_authorization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_authorization();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.Grant.authorization)
  return _msg;
}
inline void Grant::set_allocated_authorization(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.authorization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.authorization_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.Grant.authorization)
}

// .google.protobuf.Timestamp expiration = 2 [json_name = "expiration", (.gogoproto.nullable) = true, (.gogoproto.stdtime) = true];
inline bool Grant::has_expiration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expiration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Grant::_internal_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.expiration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Grant::expiration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.Grant.expiration)
  return _internal_expiration();
}
inline void Grant::unsafe_arena_set_allocated_expiration(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_);
  }
  _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.Grant.expiration)
}
inline ::google::protobuf::Timestamp* Grant::release_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.expiration_;
  _impl_.expiration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Grant::unsafe_arena_release_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.Grant.expiration)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.expiration_;
  _impl_.expiration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Grant::_internal_mutable_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expiration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expiration_;
}
inline ::google::protobuf::Timestamp* Grant::mutable_expiration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expiration();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.Grant.expiration)
  return _msg;
}
inline void Grant::set_allocated_expiration(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.Grant.expiration)
}

// -------------------------------------------------------------------

// GrantAuthorization

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void GrantAuthorization::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& GrantAuthorization::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.GrantAuthorization.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GrantAuthorization::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.GrantAuthorization.granter)
}
inline std::string* GrantAuthorization::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.GrantAuthorization.granter)
  return _s;
}
inline const std::string& GrantAuthorization::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void GrantAuthorization::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* GrantAuthorization::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* GrantAuthorization::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.GrantAuthorization.granter)
  return _impl_.granter_.Release();
}
inline void GrantAuthorization::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.GrantAuthorization.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void GrantAuthorization::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& GrantAuthorization::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.GrantAuthorization.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GrantAuthorization::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.GrantAuthorization.grantee)
}
inline std::string* GrantAuthorization::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.GrantAuthorization.grantee)
  return _s;
}
inline const std::string& GrantAuthorization::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void GrantAuthorization::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* GrantAuthorization::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* GrantAuthorization::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.GrantAuthorization.grantee)
  return _impl_.grantee_.Release();
}
inline void GrantAuthorization::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.GrantAuthorization.grantee)
}

// .google.protobuf.Any authorization = 3 [json_name = "authorization", (.cosmos_proto.accepts_interface) = "cosmos.authz.v1beta1.Authorization"];
inline bool GrantAuthorization::has_authorization() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.authorization_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& GrantAuthorization::_internal_authorization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.authorization_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& GrantAuthorization::authorization() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.GrantAuthorization.authorization)
  return _internal_authorization();
}
inline void GrantAuthorization::unsafe_arena_set_allocated_authorization(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.authorization_);
  }
  _impl_.authorization_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.GrantAuthorization.authorization)
}
inline ::google::protobuf::Any* GrantAuthorization::release_authorization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.authorization_;
  _impl_.authorization_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* GrantAuthorization::unsafe_arena_release_authorization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.GrantAuthorization.authorization)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.authorization_;
  _impl_.authorization_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* GrantAuthorization::_internal_mutable_authorization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authorization_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.authorization_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.authorization_;
}
inline ::google::protobuf::Any* GrantAuthorization::mutable_authorization() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_authorization();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.GrantAuthorization.authorization)
  return _msg;
}
inline void GrantAuthorization::set_allocated_authorization(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.authorization_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.authorization_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.GrantAuthorization.authorization)
}

// .google.protobuf.Timestamp expiration = 4 [json_name = "expiration", (.gogoproto.stdtime) = true];
inline bool GrantAuthorization::has_expiration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expiration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GrantAuthorization::_internal_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.expiration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GrantAuthorization::expiration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.GrantAuthorization.expiration)
  return _internal_expiration();
}
inline void GrantAuthorization::unsafe_arena_set_allocated_expiration(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_);
  }
  _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.GrantAuthorization.expiration)
}
inline ::google::protobuf::Timestamp* GrantAuthorization::release_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.expiration_;
  _impl_.expiration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* GrantAuthorization::unsafe_arena_release_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.GrantAuthorization.expiration)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.expiration_;
  _impl_.expiration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GrantAuthorization::_internal_mutable_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expiration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expiration_;
}
inline ::google::protobuf::Timestamp* GrantAuthorization::mutable_expiration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expiration();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.GrantAuthorization.expiration)
  return _msg;
}
inline void GrantAuthorization::set_allocated_expiration(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.GrantAuthorization.expiration)
}

// -------------------------------------------------------------------

// GrantQueueItem

// repeated string msg_type_urls = 1 [json_name = "msgTypeUrls"];
inline int GrantQueueItem::_internal_msg_type_urls_size() const {
  return _internal_msg_type_urls().size();
}
inline int GrantQueueItem::msg_type_urls_size() const {
  return _internal_msg_type_urls_size();
}
inline void GrantQueueItem::clear_msg_type_urls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_urls_.Clear();
}
inline std::string* GrantQueueItem::add_msg_type_urls() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_msg_type_urls()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls)
  return _s;
}
inline const std::string& GrantQueueItem::msg_type_urls(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls)
  return _internal_msg_type_urls().Get(index);
}
inline std::string* GrantQueueItem::mutable_msg_type_urls(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls)
  return _internal_mutable_msg_type_urls()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GrantQueueItem::set_msg_type_urls(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_msg_type_urls()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls)
}
template <typename Arg_, typename... Args_>
inline void GrantQueueItem::add_msg_type_urls(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_msg_type_urls(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GrantQueueItem::msg_type_urls() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls)
  return _internal_msg_type_urls();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GrantQueueItem::mutable_msg_type_urls() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.GrantQueueItem.msg_type_urls)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_msg_type_urls();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GrantQueueItem::_internal_msg_type_urls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_type_urls_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GrantQueueItem::_internal_mutable_msg_type_urls() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.msg_type_urls_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fauthz_2fv1beta1_2fauthz_2eproto_2epb_2eh
