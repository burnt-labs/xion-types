// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/authz/v1beta1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fauthz_2fv1beta1_2ftx_2eproto_2epb_2eh
#define cosmos_2fauthz_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos_proto/cosmos.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
#include "cosmos/authz/v1beta1/authz.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fauthz_2fv1beta1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace authz {
namespace v1beta1 {
class MsgExec;
struct MsgExecDefaultTypeInternal;
extern MsgExecDefaultTypeInternal _MsgExec_default_instance_;
class MsgExecResponse;
struct MsgExecResponseDefaultTypeInternal;
extern MsgExecResponseDefaultTypeInternal _MsgExecResponse_default_instance_;
class MsgGrant;
struct MsgGrantDefaultTypeInternal;
extern MsgGrantDefaultTypeInternal _MsgGrant_default_instance_;
class MsgGrantResponse;
struct MsgGrantResponseDefaultTypeInternal;
extern MsgGrantResponseDefaultTypeInternal _MsgGrantResponse_default_instance_;
class MsgRevoke;
struct MsgRevokeDefaultTypeInternal;
extern MsgRevokeDefaultTypeInternal _MsgRevoke_default_instance_;
class MsgRevokeResponse;
struct MsgRevokeResponseDefaultTypeInternal;
extern MsgRevokeResponseDefaultTypeInternal _MsgRevokeResponse_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace authz {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgRevokeResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgRevokeResponse) */ {
 public:
  inline MsgRevokeResponse() : MsgRevokeResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRevokeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRevokeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevokeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRevokeResponse(const MsgRevokeResponse& from) : MsgRevokeResponse(nullptr, from) {}
  inline MsgRevokeResponse(MsgRevokeResponse&& from) noexcept
      : MsgRevokeResponse(nullptr, std::move(from)) {}
  inline MsgRevokeResponse& operator=(const MsgRevokeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevokeResponse& operator=(MsgRevokeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevokeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevokeResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRevokeResponse*>(
        &_MsgRevokeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgRevokeResponse& a, MsgRevokeResponse& b) { a.Swap(&b); }
  inline void Swap(MsgRevokeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevokeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevokeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgRevokeResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgRevokeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgRevokeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.MsgRevokeResponse"; }

 protected:
  explicit MsgRevokeResponse(::google::protobuf::Arena* arena);
  MsgRevokeResponse(::google::protobuf::Arena* arena, const MsgRevokeResponse& from);
  MsgRevokeResponse(::google::protobuf::Arena* arena, MsgRevokeResponse&& from) noexcept
      : MsgRevokeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgRevokeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRevokeResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRevoke final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgRevoke) */ {
 public:
  inline MsgRevoke() : MsgRevoke(nullptr) {}
  ~MsgRevoke() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRevoke* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRevoke));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevoke(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRevoke(const MsgRevoke& from) : MsgRevoke(nullptr, from) {}
  inline MsgRevoke(MsgRevoke&& from) noexcept
      : MsgRevoke(nullptr, std::move(from)) {}
  inline MsgRevoke& operator=(const MsgRevoke& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevoke& operator=(MsgRevoke&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevoke& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevoke* internal_default_instance() {
    return reinterpret_cast<const MsgRevoke*>(
        &_MsgRevoke_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgRevoke& a, MsgRevoke& b) { a.Swap(&b); }
  inline void Swap(MsgRevoke* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevoke* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevoke* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgRevoke>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgRevoke& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgRevoke& from) { MsgRevoke::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgRevoke* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.MsgRevoke"; }

 protected:
  explicit MsgRevoke(::google::protobuf::Arena* arena);
  MsgRevoke(::google::protobuf::Arena* arena, const MsgRevoke& from);
  MsgRevoke(::google::protobuf::Arena* arena, MsgRevoke&& from) noexcept
      : MsgRevoke(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kMsgTypeUrlFieldNumber = 3,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // string msg_type_url = 3 [json_name = "msgTypeUrl"];
  void clear_msg_type_url() ;
  const std::string& msg_type_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg_type_url(Arg_&& arg, Args_... args);
  std::string* mutable_msg_type_url();
  PROTOBUF_NODISCARD std::string* release_msg_type_url();
  void set_allocated_msg_type_url(std::string* value);

  private:
  const std::string& _internal_msg_type_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_type_url(
      const std::string& value);
  std::string* _internal_mutable_msg_type_url();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgRevoke)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRevoke& from_msg);
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::internal::ArenaStringPtr msg_type_url_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgGrantResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgGrantResponse) */ {
 public:
  inline MsgGrantResponse() : MsgGrantResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgGrantResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgGrantResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrantResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgGrantResponse(const MsgGrantResponse& from) : MsgGrantResponse(nullptr, from) {}
  inline MsgGrantResponse(MsgGrantResponse&& from) noexcept
      : MsgGrantResponse(nullptr, std::move(from)) {}
  inline MsgGrantResponse& operator=(const MsgGrantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrantResponse& operator=(MsgGrantResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrantResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrantResponse* internal_default_instance() {
    return reinterpret_cast<const MsgGrantResponse*>(
        &_MsgGrantResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgGrantResponse& a, MsgGrantResponse& b) { a.Swap(&b); }
  inline void Swap(MsgGrantResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrantResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrantResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgGrantResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgGrantResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgGrantResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.MsgGrantResponse"; }

 protected:
  explicit MsgGrantResponse(::google::protobuf::Arena* arena);
  MsgGrantResponse(::google::protobuf::Arena* arena, const MsgGrantResponse& from);
  MsgGrantResponse(::google::protobuf::Arena* arena, MsgGrantResponse&& from) noexcept
      : MsgGrantResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgGrantResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgGrantResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgExecResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgExecResponse) */ {
 public:
  inline MsgExecResponse() : MsgExecResponse(nullptr) {}
  ~MsgExecResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgExecResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgExecResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgExecResponse(const MsgExecResponse& from) : MsgExecResponse(nullptr, from) {}
  inline MsgExecResponse(MsgExecResponse&& from) noexcept
      : MsgExecResponse(nullptr, std::move(from)) {}
  inline MsgExecResponse& operator=(const MsgExecResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecResponse& operator=(MsgExecResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecResponse* internal_default_instance() {
    return reinterpret_cast<const MsgExecResponse*>(
        &_MsgExecResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgExecResponse& a, MsgExecResponse& b) { a.Swap(&b); }
  inline void Swap(MsgExecResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgExecResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgExecResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgExecResponse& from) { MsgExecResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgExecResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.MsgExecResponse"; }

 protected:
  explicit MsgExecResponse(::google::protobuf::Arena* arena);
  MsgExecResponse(::google::protobuf::Arena* arena, const MsgExecResponse& from);
  MsgExecResponse(::google::protobuf::Arena* arena, MsgExecResponse&& from) noexcept
      : MsgExecResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated bytes results = 1 [json_name = "results"];
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  const std::string& results(int index) const;
  std::string* mutable_results(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_results(int index, Arg_&& value, Args_... args);
  std::string* add_results();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_results(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& results() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_results();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgExecResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgExecResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> results_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgExec final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgExec) */ {
 public:
  inline MsgExec() : MsgExec(nullptr) {}
  ~MsgExec() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgExec* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgExec));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExec(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgExec(const MsgExec& from) : MsgExec(nullptr, from) {}
  inline MsgExec(MsgExec&& from) noexcept
      : MsgExec(nullptr, std::move(from)) {}
  inline MsgExec& operator=(const MsgExec& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExec& operator=(MsgExec&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExec& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExec* internal_default_instance() {
    return reinterpret_cast<const MsgExec*>(
        &_MsgExec_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgExec& a, MsgExec& b) { a.Swap(&b); }
  inline void Swap(MsgExec* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExec* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgExec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgExec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgExec& from) { MsgExec::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgExec* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.MsgExec"; }

 protected:
  explicit MsgExec(::google::protobuf::Arena* arena);
  MsgExec(::google::protobuf::Arena* arena, const MsgExec& from);
  MsgExec(::google::protobuf::Arena* arena, MsgExec&& from) noexcept
      : MsgExec(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgsFieldNumber = 2,
    kGranteeFieldNumber = 1,
  };
  // repeated .google.protobuf.Any msgs = 2 [json_name = "msgs", (.cosmos_proto.accepts_interface) = "cosmos.base.v1beta1.Msg"];
  int msgs_size() const;
  private:
  int _internal_msgs_size() const;

  public:
  void clear_msgs() ;
  ::google::protobuf::Any* mutable_msgs(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_msgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_msgs() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_msgs();
  public:
  const ::google::protobuf::Any& msgs(int index) const;
  ::google::protobuf::Any* add_msgs();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& msgs() const;
  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgExec)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgExec& from_msg);
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > msgs_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgGrant final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.authz.v1beta1.MsgGrant) */ {
 public:
  inline MsgGrant() : MsgGrant(nullptr) {}
  ~MsgGrant() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgGrant* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgGrant));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrant(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgGrant(const MsgGrant& from) : MsgGrant(nullptr, from) {}
  inline MsgGrant(MsgGrant&& from) noexcept
      : MsgGrant(nullptr, std::move(from)) {}
  inline MsgGrant& operator=(const MsgGrant& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrant& operator=(MsgGrant&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrant& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrant* internal_default_instance() {
    return reinterpret_cast<const MsgGrant*>(
        &_MsgGrant_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgGrant& a, MsgGrant& b) { a.Swap(&b); }
  inline void Swap(MsgGrant* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrant* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrant* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgGrant>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgGrant& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgGrant& from) { MsgGrant::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgGrant* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.authz.v1beta1.MsgGrant"; }

 protected:
  explicit MsgGrant(::google::protobuf::Arena* arena);
  MsgGrant(::google::protobuf::Arena* arena, const MsgGrant& from);
  MsgGrant(::google::protobuf::Arena* arena, MsgGrant&& from) noexcept
      : MsgGrant(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kGrantFieldNumber = 3,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // .cosmos.authz.v1beta1.Grant grant = 3 [json_name = "grant", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_grant() const;
  void clear_grant() ;
  const ::cosmos::authz::v1beta1::Grant& grant() const;
  PROTOBUF_NODISCARD ::cosmos::authz::v1beta1::Grant* release_grant();
  ::cosmos::authz::v1beta1::Grant* mutable_grant();
  void set_allocated_grant(::cosmos::authz::v1beta1::Grant* value);
  void unsafe_arena_set_allocated_grant(::cosmos::authz::v1beta1::Grant* value);
  ::cosmos::authz::v1beta1::Grant* unsafe_arena_release_grant();

  private:
  const ::cosmos::authz::v1beta1::Grant& _internal_grant() const;
  ::cosmos::authz::v1beta1::Grant* _internal_mutable_grant();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.authz.v1beta1.MsgGrant)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgGrant& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::cosmos::authz::v1beta1::Grant* grant_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauthz_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgGrant

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrant::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgGrant::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgGrant.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrant::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgGrant.granter)
}
inline std::string* MsgGrant::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgGrant.granter)
  return _s;
}
inline const std::string& MsgGrant::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void MsgGrant::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* MsgGrant::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* MsgGrant::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgGrant.granter)
  return _impl_.granter_.Release();
}
inline void MsgGrant::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgGrant.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrant::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgGrant::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgGrant.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrant::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgGrant.grantee)
}
inline std::string* MsgGrant::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgGrant.grantee)
  return _s;
}
inline const std::string& MsgGrant::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void MsgGrant::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* MsgGrant::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* MsgGrant::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgGrant.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgGrant::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgGrant.grantee)
}

// .cosmos.authz.v1beta1.Grant grant = 3 [json_name = "grant", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgGrant::has_grant() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.grant_ != nullptr);
  return value;
}
inline const ::cosmos::authz::v1beta1::Grant& MsgGrant::_internal_grant() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::authz::v1beta1::Grant* p = _impl_.grant_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::authz::v1beta1::Grant&>(::cosmos::authz::v1beta1::_Grant_default_instance_);
}
inline const ::cosmos::authz::v1beta1::Grant& MsgGrant::grant() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgGrant.grant)
  return _internal_grant();
}
inline void MsgGrant::unsafe_arena_set_allocated_grant(::cosmos::authz::v1beta1::Grant* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.grant_);
  }
  _impl_.grant_ = reinterpret_cast<::cosmos::authz::v1beta1::Grant*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.authz.v1beta1.MsgGrant.grant)
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::release_grant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::authz::v1beta1::Grant* released = _impl_.grant_;
  _impl_.grant_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::unsafe_arena_release_grant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgGrant.grant)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::authz::v1beta1::Grant* temp = _impl_.grant_;
  _impl_.grant_ = nullptr;
  return temp;
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::_internal_mutable_grant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.grant_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::authz::v1beta1::Grant>(GetArena());
    _impl_.grant_ = reinterpret_cast<::cosmos::authz::v1beta1::Grant*>(p);
  }
  return _impl_.grant_;
}
inline ::cosmos::authz::v1beta1::Grant* MsgGrant::mutable_grant() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::authz::v1beta1::Grant* _msg = _internal_mutable_grant();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgGrant.grant)
  return _msg;
}
inline void MsgGrant::set_allocated_grant(::cosmos::authz::v1beta1::Grant* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.grant_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.grant_ = reinterpret_cast<::cosmos::authz::v1beta1::Grant*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgGrant.grant)
}

// -------------------------------------------------------------------

// MsgGrantResponse

// -------------------------------------------------------------------

// MsgExec

// string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgExec::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgExec::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgExec.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExec::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgExec.grantee)
}
inline std::string* MsgExec::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgExec.grantee)
  return _s;
}
inline const std::string& MsgExec::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void MsgExec::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* MsgExec::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* MsgExec::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgExec.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgExec::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgExec.grantee)
}

// repeated .google.protobuf.Any msgs = 2 [json_name = "msgs", (.cosmos_proto.accepts_interface) = "cosmos.base.v1beta1.Msg"];
inline int MsgExec::_internal_msgs_size() const {
  return _internal_msgs().size();
}
inline int MsgExec::msgs_size() const {
  return _internal_msgs_size();
}
inline ::google::protobuf::Any* MsgExec::mutable_msgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgExec.msgs)
  return _internal_mutable_msgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* MsgExec::mutable_msgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.MsgExec.msgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_msgs();
}
inline const ::google::protobuf::Any& MsgExec::msgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgExec.msgs)
  return _internal_msgs().Get(index);
}
inline ::google::protobuf::Any* MsgExec::add_msgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_msgs()->Add();
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.MsgExec.msgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& MsgExec::msgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.MsgExec.msgs)
  return _internal_msgs();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
MsgExec::_internal_msgs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msgs_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
MsgExec::_internal_mutable_msgs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.msgs_;
}

// -------------------------------------------------------------------

// MsgExecResponse

// repeated bytes results = 1 [json_name = "results"];
inline int MsgExecResponse::_internal_results_size() const {
  return _internal_results().size();
}
inline int MsgExecResponse::results_size() const {
  return _internal_results_size();
}
inline void MsgExecResponse::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline std::string* MsgExecResponse::add_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _s;
}
inline const std::string& MsgExecResponse::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _internal_results().Get(index);
}
inline std::string* MsgExecResponse::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _internal_mutable_results()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void MsgExecResponse::set_results(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_results()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgExecResponse.results)
}
template <typename Arg_, typename... Args_>
inline void MsgExecResponse::add_results(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_results(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:cosmos.authz.v1beta1.MsgExecResponse.results)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MsgExecResponse::results() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.authz.v1beta1.MsgExecResponse.results)
  return _internal_results();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MsgExecResponse::mutable_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.authz.v1beta1.MsgExecResponse.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
MsgExecResponse::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
MsgExecResponse::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// MsgRevoke

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevoke::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgRevoke::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgRevoke.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevoke::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgRevoke.granter)
}
inline std::string* MsgRevoke::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgRevoke.granter)
  return _s;
}
inline const std::string& MsgRevoke::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void MsgRevoke::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* MsgRevoke::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* MsgRevoke::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgRevoke.granter)
  return _impl_.granter_.Release();
}
inline void MsgRevoke::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgRevoke.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevoke::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgRevoke::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgRevoke.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevoke::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgRevoke.grantee)
}
inline std::string* MsgRevoke::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgRevoke.grantee)
  return _s;
}
inline const std::string& MsgRevoke::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void MsgRevoke::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* MsgRevoke::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* MsgRevoke::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgRevoke.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgRevoke::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgRevoke.grantee)
}

// string msg_type_url = 3 [json_name = "msgTypeUrl"];
inline void MsgRevoke::clear_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.ClearToEmpty();
}
inline const std::string& MsgRevoke::msg_type_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
  return _internal_msg_type_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevoke::set_msg_type_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
}
inline std::string* MsgRevoke::mutable_msg_type_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg_type_url();
  // @@protoc_insertion_point(field_mutable:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
  return _s;
}
inline const std::string& MsgRevoke::_internal_msg_type_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_type_url_.Get();
}
inline void MsgRevoke::_internal_set_msg_type_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(value, GetArena());
}
inline std::string* MsgRevoke::_internal_mutable_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_type_url_.Mutable( GetArena());
}
inline std::string* MsgRevoke::release_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
  return _impl_.msg_type_url_.Release();
}
inline void MsgRevoke::set_allocated_msg_type_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_type_url_.IsDefault()) {
    _impl_.msg_type_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.authz.v1beta1.MsgRevoke.msg_type_url)
}

// -------------------------------------------------------------------

// MsgRevokeResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fauthz_2fv1beta1_2ftx_2eproto_2epb_2eh
