// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/staking/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fstaking_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2fstaking_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/staking/v1beta1/staking.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/query/v1/query.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fstaking_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace staking {
namespace v1beta1 {
class QueryDelegationRequest;
struct QueryDelegationRequestDefaultTypeInternal;
extern QueryDelegationRequestDefaultTypeInternal _QueryDelegationRequest_default_instance_;
class QueryDelegationResponse;
struct QueryDelegationResponseDefaultTypeInternal;
extern QueryDelegationResponseDefaultTypeInternal _QueryDelegationResponse_default_instance_;
class QueryDelegatorDelegationsRequest;
struct QueryDelegatorDelegationsRequestDefaultTypeInternal;
extern QueryDelegatorDelegationsRequestDefaultTypeInternal _QueryDelegatorDelegationsRequest_default_instance_;
class QueryDelegatorDelegationsResponse;
struct QueryDelegatorDelegationsResponseDefaultTypeInternal;
extern QueryDelegatorDelegationsResponseDefaultTypeInternal _QueryDelegatorDelegationsResponse_default_instance_;
class QueryDelegatorUnbondingDelegationsRequest;
struct QueryDelegatorUnbondingDelegationsRequestDefaultTypeInternal;
extern QueryDelegatorUnbondingDelegationsRequestDefaultTypeInternal _QueryDelegatorUnbondingDelegationsRequest_default_instance_;
class QueryDelegatorUnbondingDelegationsResponse;
struct QueryDelegatorUnbondingDelegationsResponseDefaultTypeInternal;
extern QueryDelegatorUnbondingDelegationsResponseDefaultTypeInternal _QueryDelegatorUnbondingDelegationsResponse_default_instance_;
class QueryDelegatorValidatorRequest;
struct QueryDelegatorValidatorRequestDefaultTypeInternal;
extern QueryDelegatorValidatorRequestDefaultTypeInternal _QueryDelegatorValidatorRequest_default_instance_;
class QueryDelegatorValidatorResponse;
struct QueryDelegatorValidatorResponseDefaultTypeInternal;
extern QueryDelegatorValidatorResponseDefaultTypeInternal _QueryDelegatorValidatorResponse_default_instance_;
class QueryDelegatorValidatorsRequest;
struct QueryDelegatorValidatorsRequestDefaultTypeInternal;
extern QueryDelegatorValidatorsRequestDefaultTypeInternal _QueryDelegatorValidatorsRequest_default_instance_;
class QueryDelegatorValidatorsResponse;
struct QueryDelegatorValidatorsResponseDefaultTypeInternal;
extern QueryDelegatorValidatorsResponseDefaultTypeInternal _QueryDelegatorValidatorsResponse_default_instance_;
class QueryHistoricalInfoRequest;
struct QueryHistoricalInfoRequestDefaultTypeInternal;
extern QueryHistoricalInfoRequestDefaultTypeInternal _QueryHistoricalInfoRequest_default_instance_;
class QueryHistoricalInfoResponse;
struct QueryHistoricalInfoResponseDefaultTypeInternal;
extern QueryHistoricalInfoResponseDefaultTypeInternal _QueryHistoricalInfoResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
class QueryPoolRequest;
struct QueryPoolRequestDefaultTypeInternal;
extern QueryPoolRequestDefaultTypeInternal _QueryPoolRequest_default_instance_;
class QueryPoolResponse;
struct QueryPoolResponseDefaultTypeInternal;
extern QueryPoolResponseDefaultTypeInternal _QueryPoolResponse_default_instance_;
class QueryRedelegationsRequest;
struct QueryRedelegationsRequestDefaultTypeInternal;
extern QueryRedelegationsRequestDefaultTypeInternal _QueryRedelegationsRequest_default_instance_;
class QueryRedelegationsResponse;
struct QueryRedelegationsResponseDefaultTypeInternal;
extern QueryRedelegationsResponseDefaultTypeInternal _QueryRedelegationsResponse_default_instance_;
class QueryUnbondingDelegationRequest;
struct QueryUnbondingDelegationRequestDefaultTypeInternal;
extern QueryUnbondingDelegationRequestDefaultTypeInternal _QueryUnbondingDelegationRequest_default_instance_;
class QueryUnbondingDelegationResponse;
struct QueryUnbondingDelegationResponseDefaultTypeInternal;
extern QueryUnbondingDelegationResponseDefaultTypeInternal _QueryUnbondingDelegationResponse_default_instance_;
class QueryValidatorDelegationsRequest;
struct QueryValidatorDelegationsRequestDefaultTypeInternal;
extern QueryValidatorDelegationsRequestDefaultTypeInternal _QueryValidatorDelegationsRequest_default_instance_;
class QueryValidatorDelegationsResponse;
struct QueryValidatorDelegationsResponseDefaultTypeInternal;
extern QueryValidatorDelegationsResponseDefaultTypeInternal _QueryValidatorDelegationsResponse_default_instance_;
class QueryValidatorRequest;
struct QueryValidatorRequestDefaultTypeInternal;
extern QueryValidatorRequestDefaultTypeInternal _QueryValidatorRequest_default_instance_;
class QueryValidatorResponse;
struct QueryValidatorResponseDefaultTypeInternal;
extern QueryValidatorResponseDefaultTypeInternal _QueryValidatorResponse_default_instance_;
class QueryValidatorUnbondingDelegationsRequest;
struct QueryValidatorUnbondingDelegationsRequestDefaultTypeInternal;
extern QueryValidatorUnbondingDelegationsRequestDefaultTypeInternal _QueryValidatorUnbondingDelegationsRequest_default_instance_;
class QueryValidatorUnbondingDelegationsResponse;
struct QueryValidatorUnbondingDelegationsResponseDefaultTypeInternal;
extern QueryValidatorUnbondingDelegationsResponseDefaultTypeInternal _QueryValidatorUnbondingDelegationsResponse_default_instance_;
class QueryValidatorsRequest;
struct QueryValidatorsRequestDefaultTypeInternal;
extern QueryValidatorsRequestDefaultTypeInternal _QueryValidatorsRequest_default_instance_;
class QueryValidatorsResponse;
struct QueryValidatorsResponseDefaultTypeInternal;
extern QueryValidatorsResponseDefaultTypeInternal _QueryValidatorsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace staking {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryValidatorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorRequest) */ {
 public:
  inline QueryValidatorRequest() : QueryValidatorRequest(nullptr) {}
  ~QueryValidatorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorRequest(const QueryValidatorRequest& from) : QueryValidatorRequest(nullptr, from) {}
  inline QueryValidatorRequest(QueryValidatorRequest&& from) noexcept
      : QueryValidatorRequest(nullptr, std::move(from)) {}
  inline QueryValidatorRequest& operator=(const QueryValidatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorRequest& operator=(QueryValidatorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorRequest*>(
        &_QueryValidatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryValidatorRequest& a, QueryValidatorRequest& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorRequest& from) { QueryValidatorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorRequest"; }

 protected:
  explicit QueryValidatorRequest(::google::protobuf::Arena* arena);
  QueryValidatorRequest(::google::protobuf::Arena* arena, const QueryValidatorRequest& from);
  QueryValidatorRequest(::google::protobuf::Arena* arena, QueryValidatorRequest&& from) noexcept
      : QueryValidatorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddrFieldNumber = 1,
  };
  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_addr() ;
  const std::string& validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_validator_addr();
  PROTOBUF_NODISCARD std::string* release_validator_addr();
  void set_allocated_validator_addr(std::string* value);

  private:
  const std::string& _internal_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_validator_addr();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      67, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr validator_addr_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryUnbondingDelegationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest) */ {
 public:
  inline QueryUnbondingDelegationRequest() : QueryUnbondingDelegationRequest(nullptr) {}
  ~QueryUnbondingDelegationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryUnbondingDelegationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryUnbondingDelegationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryUnbondingDelegationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryUnbondingDelegationRequest(const QueryUnbondingDelegationRequest& from) : QueryUnbondingDelegationRequest(nullptr, from) {}
  inline QueryUnbondingDelegationRequest(QueryUnbondingDelegationRequest&& from) noexcept
      : QueryUnbondingDelegationRequest(nullptr, std::move(from)) {}
  inline QueryUnbondingDelegationRequest& operator=(const QueryUnbondingDelegationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryUnbondingDelegationRequest& operator=(QueryUnbondingDelegationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryUnbondingDelegationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryUnbondingDelegationRequest* internal_default_instance() {
    return reinterpret_cast<const QueryUnbondingDelegationRequest*>(
        &_QueryUnbondingDelegationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(QueryUnbondingDelegationRequest& a, QueryUnbondingDelegationRequest& b) { a.Swap(&b); }
  inline void Swap(QueryUnbondingDelegationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryUnbondingDelegationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryUnbondingDelegationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryUnbondingDelegationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryUnbondingDelegationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryUnbondingDelegationRequest& from) { QueryUnbondingDelegationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryUnbondingDelegationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryUnbondingDelegationRequest"; }

 protected:
  explicit QueryUnbondingDelegationRequest(::google::protobuf::Arena* arena);
  QueryUnbondingDelegationRequest(::google::protobuf::Arena* arena, const QueryUnbondingDelegationRequest& from);
  QueryUnbondingDelegationRequest(::google::protobuf::Arena* arena, QueryUnbondingDelegationRequest&& from) noexcept
      : QueryUnbondingDelegationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddrFieldNumber = 1,
    kValidatorAddrFieldNumber = 2,
  };
  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_addr() ;
  const std::string& delegator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_addr();
  PROTOBUF_NODISCARD std::string* release_delegator_addr();
  void set_allocated_delegator_addr(std::string* value);

  private:
  const std::string& _internal_delegator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_addr(
      const std::string& value);
  std::string* _internal_mutable_delegator_addr();

  public:
  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_addr() ;
  const std::string& validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_validator_addr();
  PROTOBUF_NODISCARD std::string* release_validator_addr();
  void set_allocated_validator_addr(std::string* value);

  private:
  const std::string& _internal_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_validator_addr();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      91, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryUnbondingDelegationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr delegator_addr_;
    ::google::protobuf::internal::ArenaStringPtr validator_addr_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryPoolRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryPoolRequest) */ {
 public:
  inline QueryPoolRequest() : QueryPoolRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryPoolRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryPoolRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryPoolRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryPoolRequest(const QueryPoolRequest& from) : QueryPoolRequest(nullptr, from) {}
  inline QueryPoolRequest(QueryPoolRequest&& from) noexcept
      : QueryPoolRequest(nullptr, std::move(from)) {}
  inline QueryPoolRequest& operator=(const QueryPoolRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryPoolRequest& operator=(QueryPoolRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryPoolRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryPoolRequest* internal_default_instance() {
    return reinterpret_cast<const QueryPoolRequest*>(
        &_QueryPoolRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(QueryPoolRequest& a, QueryPoolRequest& b) { a.Swap(&b); }
  inline void Swap(QueryPoolRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryPoolRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryPoolRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryPoolRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryPoolRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryPoolRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryPoolRequest"; }

 protected:
  explicit QueryPoolRequest(::google::protobuf::Arena* arena);
  QueryPoolRequest(::google::protobuf::Arena* arena, const QueryPoolRequest& from);
  QueryPoolRequest(::google::protobuf::Arena* arena, QueryPoolRequest&& from) noexcept
      : QueryPoolRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryPoolRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryPoolRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryHistoricalInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryHistoricalInfoRequest) */ {
 public:
  inline QueryHistoricalInfoRequest() : QueryHistoricalInfoRequest(nullptr) {}
  ~QueryHistoricalInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryHistoricalInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryHistoricalInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryHistoricalInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryHistoricalInfoRequest(const QueryHistoricalInfoRequest& from) : QueryHistoricalInfoRequest(nullptr, from) {}
  inline QueryHistoricalInfoRequest(QueryHistoricalInfoRequest&& from) noexcept
      : QueryHistoricalInfoRequest(nullptr, std::move(from)) {}
  inline QueryHistoricalInfoRequest& operator=(const QueryHistoricalInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryHistoricalInfoRequest& operator=(QueryHistoricalInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryHistoricalInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryHistoricalInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryHistoricalInfoRequest*>(
        &_QueryHistoricalInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(QueryHistoricalInfoRequest& a, QueryHistoricalInfoRequest& b) { a.Swap(&b); }
  inline void Swap(QueryHistoricalInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryHistoricalInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryHistoricalInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryHistoricalInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryHistoricalInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryHistoricalInfoRequest& from) { QueryHistoricalInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryHistoricalInfoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryHistoricalInfoRequest"; }

 protected:
  explicit QueryHistoricalInfoRequest(::google::protobuf::Arena* arena);
  QueryHistoricalInfoRequest(::google::protobuf::Arena* arena, const QueryHistoricalInfoRequest& from);
  QueryHistoricalInfoRequest(::google::protobuf::Arena* arena, QueryHistoricalInfoRequest&& from) noexcept
      : QueryHistoricalInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeightFieldNumber = 1,
  };
  // int64 height = 1 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryHistoricalInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryHistoricalInfoRequest& from_msg);
    ::int64_t height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorValidatorRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest) */ {
 public:
  inline QueryDelegatorValidatorRequest() : QueryDelegatorValidatorRequest(nullptr) {}
  ~QueryDelegatorValidatorRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorValidatorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorValidatorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorValidatorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorValidatorRequest(const QueryDelegatorValidatorRequest& from) : QueryDelegatorValidatorRequest(nullptr, from) {}
  inline QueryDelegatorValidatorRequest(QueryDelegatorValidatorRequest&& from) noexcept
      : QueryDelegatorValidatorRequest(nullptr, std::move(from)) {}
  inline QueryDelegatorValidatorRequest& operator=(const QueryDelegatorValidatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorValidatorRequest& operator=(QueryDelegatorValidatorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorValidatorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorValidatorRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorValidatorRequest*>(
        &_QueryDelegatorValidatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(QueryDelegatorValidatorRequest& a, QueryDelegatorValidatorRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorValidatorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorValidatorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorValidatorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorValidatorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorValidatorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorValidatorRequest& from) { QueryDelegatorValidatorRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorValidatorRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorValidatorRequest"; }

 protected:
  explicit QueryDelegatorValidatorRequest(::google::protobuf::Arena* arena);
  QueryDelegatorValidatorRequest(::google::protobuf::Arena* arena, const QueryDelegatorValidatorRequest& from);
  QueryDelegatorValidatorRequest(::google::protobuf::Arena* arena, QueryDelegatorValidatorRequest&& from) noexcept
      : QueryDelegatorValidatorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddrFieldNumber = 1,
    kValidatorAddrFieldNumber = 2,
  };
  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_addr() ;
  const std::string& delegator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_addr();
  PROTOBUF_NODISCARD std::string* release_delegator_addr();
  void set_allocated_delegator_addr(std::string* value);

  private:
  const std::string& _internal_delegator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_addr(
      const std::string& value);
  std::string* _internal_mutable_delegator_addr();

  public:
  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_addr() ;
  const std::string& validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_validator_addr();
  PROTOBUF_NODISCARD std::string* release_validator_addr();
  void set_allocated_validator_addr(std::string* value);

  private:
  const std::string& _internal_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_validator_addr();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      90, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorValidatorRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr delegator_addr_;
    ::google::protobuf::internal::ArenaStringPtr validator_addr_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegationRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegationRequest) */ {
 public:
  inline QueryDelegationRequest() : QueryDelegationRequest(nullptr) {}
  ~QueryDelegationRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegationRequest(const QueryDelegationRequest& from) : QueryDelegationRequest(nullptr, from) {}
  inline QueryDelegationRequest(QueryDelegationRequest&& from) noexcept
      : QueryDelegationRequest(nullptr, std::move(from)) {}
  inline QueryDelegationRequest& operator=(const QueryDelegationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegationRequest& operator=(QueryDelegationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegationRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegationRequest*>(
        &_QueryDelegationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryDelegationRequest& a, QueryDelegationRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDelegationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegationRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegationRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegationRequest& from) { QueryDelegationRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegationRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegationRequest"; }

 protected:
  explicit QueryDelegationRequest(::google::protobuf::Arena* arena);
  QueryDelegationRequest(::google::protobuf::Arena* arena, const QueryDelegationRequest& from);
  QueryDelegationRequest(::google::protobuf::Arena* arena, QueryDelegationRequest&& from) noexcept
      : QueryDelegationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddrFieldNumber = 1,
    kValidatorAddrFieldNumber = 2,
  };
  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_addr() ;
  const std::string& delegator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_addr();
  PROTOBUF_NODISCARD std::string* release_delegator_addr();
  void set_allocated_delegator_addr(std::string* value);

  private:
  const std::string& _internal_delegator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_addr(
      const std::string& value);
  std::string* _internal_mutable_delegator_addr();

  public:
  // string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_addr() ;
  const std::string& validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_validator_addr();
  PROTOBUF_NODISCARD std::string* release_validator_addr();
  void set_allocated_validator_addr(std::string* value);

  private:
  const std::string& _internal_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_validator_addr();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      82, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegationRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr delegator_addr_;
    ::google::protobuf::internal::ArenaStringPtr validator_addr_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidatorsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorsRequest) */ {
 public:
  inline QueryValidatorsRequest() : QueryValidatorsRequest(nullptr) {}
  ~QueryValidatorsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorsRequest(const QueryValidatorsRequest& from) : QueryValidatorsRequest(nullptr, from) {}
  inline QueryValidatorsRequest(QueryValidatorsRequest&& from) noexcept
      : QueryValidatorsRequest(nullptr, std::move(from)) {}
  inline QueryValidatorsRequest& operator=(const QueryValidatorsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorsRequest& operator=(QueryValidatorsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorsRequest*>(
        &_QueryValidatorsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryValidatorsRequest& a, QueryValidatorsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorsRequest& from) { QueryValidatorsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorsRequest"; }

 protected:
  explicit QueryValidatorsRequest(::google::protobuf::Arena* arena);
  QueryValidatorsRequest(::google::protobuf::Arena* arena, const QueryValidatorsRequest& from);
  QueryValidatorsRequest(::google::protobuf::Arena* arena, QueryValidatorsRequest&& from) noexcept
      : QueryValidatorsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string status = 1 [json_name = "status"];
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidatorUnbondingDelegationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest) */ {
 public:
  inline QueryValidatorUnbondingDelegationsRequest() : QueryValidatorUnbondingDelegationsRequest(nullptr) {}
  ~QueryValidatorUnbondingDelegationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorUnbondingDelegationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorUnbondingDelegationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorUnbondingDelegationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorUnbondingDelegationsRequest(const QueryValidatorUnbondingDelegationsRequest& from) : QueryValidatorUnbondingDelegationsRequest(nullptr, from) {}
  inline QueryValidatorUnbondingDelegationsRequest(QueryValidatorUnbondingDelegationsRequest&& from) noexcept
      : QueryValidatorUnbondingDelegationsRequest(nullptr, std::move(from)) {}
  inline QueryValidatorUnbondingDelegationsRequest& operator=(const QueryValidatorUnbondingDelegationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorUnbondingDelegationsRequest& operator=(QueryValidatorUnbondingDelegationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorUnbondingDelegationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorUnbondingDelegationsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorUnbondingDelegationsRequest*>(
        &_QueryValidatorUnbondingDelegationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryValidatorUnbondingDelegationsRequest& a, QueryValidatorUnbondingDelegationsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorUnbondingDelegationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorUnbondingDelegationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorUnbondingDelegationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorUnbondingDelegationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorUnbondingDelegationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorUnbondingDelegationsRequest& from) { QueryValidatorUnbondingDelegationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorUnbondingDelegationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest"; }

 protected:
  explicit QueryValidatorUnbondingDelegationsRequest(::google::protobuf::Arena* arena);
  QueryValidatorUnbondingDelegationsRequest(::google::protobuf::Arena* arena, const QueryValidatorUnbondingDelegationsRequest& from);
  QueryValidatorUnbondingDelegationsRequest(::google::protobuf::Arena* arena, QueryValidatorUnbondingDelegationsRequest&& from) noexcept
      : QueryValidatorUnbondingDelegationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddrFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_addr() ;
  const std::string& validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_validator_addr();
  PROTOBUF_NODISCARD std::string* release_validator_addr();
  void set_allocated_validator_addr(std::string* value);

  private:
  const std::string& _internal_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_validator_addr();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorUnbondingDelegationsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr validator_addr_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidatorDelegationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest) */ {
 public:
  inline QueryValidatorDelegationsRequest() : QueryValidatorDelegationsRequest(nullptr) {}
  ~QueryValidatorDelegationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorDelegationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorDelegationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorDelegationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorDelegationsRequest(const QueryValidatorDelegationsRequest& from) : QueryValidatorDelegationsRequest(nullptr, from) {}
  inline QueryValidatorDelegationsRequest(QueryValidatorDelegationsRequest&& from) noexcept
      : QueryValidatorDelegationsRequest(nullptr, std::move(from)) {}
  inline QueryValidatorDelegationsRequest& operator=(const QueryValidatorDelegationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorDelegationsRequest& operator=(QueryValidatorDelegationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorDelegationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorDelegationsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorDelegationsRequest*>(
        &_QueryValidatorDelegationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryValidatorDelegationsRequest& a, QueryValidatorDelegationsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorDelegationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorDelegationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorDelegationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorDelegationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorDelegationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorDelegationsRequest& from) { QueryValidatorDelegationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorDelegationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorDelegationsRequest"; }

 protected:
  explicit QueryValidatorDelegationsRequest(::google::protobuf::Arena* arena);
  QueryValidatorDelegationsRequest(::google::protobuf::Arena* arena, const QueryValidatorDelegationsRequest& from);
  QueryValidatorDelegationsRequest(::google::protobuf::Arena* arena, QueryValidatorDelegationsRequest&& from) noexcept
      : QueryValidatorDelegationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddrFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_addr() ;
  const std::string& validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_validator_addr();
  PROTOBUF_NODISCARD std::string* release_validator_addr();
  void set_allocated_validator_addr(std::string* value);

  private:
  const std::string& _internal_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_validator_addr();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorDelegationsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr validator_addr_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryRedelegationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryRedelegationsRequest) */ {
 public:
  inline QueryRedelegationsRequest() : QueryRedelegationsRequest(nullptr) {}
  ~QueryRedelegationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryRedelegationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryRedelegationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRedelegationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRedelegationsRequest(const QueryRedelegationsRequest& from) : QueryRedelegationsRequest(nullptr, from) {}
  inline QueryRedelegationsRequest(QueryRedelegationsRequest&& from) noexcept
      : QueryRedelegationsRequest(nullptr, std::move(from)) {}
  inline QueryRedelegationsRequest& operator=(const QueryRedelegationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRedelegationsRequest& operator=(QueryRedelegationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRedelegationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRedelegationsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRedelegationsRequest*>(
        &_QueryRedelegationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QueryRedelegationsRequest& a, QueryRedelegationsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryRedelegationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRedelegationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRedelegationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryRedelegationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRedelegationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRedelegationsRequest& from) { QueryRedelegationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryRedelegationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryRedelegationsRequest"; }

 protected:
  explicit QueryRedelegationsRequest(::google::protobuf::Arena* arena);
  QueryRedelegationsRequest(::google::protobuf::Arena* arena, const QueryRedelegationsRequest& from);
  QueryRedelegationsRequest(::google::protobuf::Arena* arena, QueryRedelegationsRequest&& from) noexcept
      : QueryRedelegationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddrFieldNumber = 1,
    kSrcValidatorAddrFieldNumber = 2,
    kDstValidatorAddrFieldNumber = 3,
    kPaginationFieldNumber = 4,
  };
  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_addr() ;
  const std::string& delegator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_addr();
  PROTOBUF_NODISCARD std::string* release_delegator_addr();
  void set_allocated_delegator_addr(std::string* value);

  private:
  const std::string& _internal_delegator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_addr(
      const std::string& value);
  std::string* _internal_mutable_delegator_addr();

  public:
  // string src_validator_addr = 2 [json_name = "srcValidatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_src_validator_addr() ;
  const std::string& src_validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_src_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_src_validator_addr();
  PROTOBUF_NODISCARD std::string* release_src_validator_addr();
  void set_allocated_src_validator_addr(std::string* value);

  private:
  const std::string& _internal_src_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_src_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_src_validator_addr();

  public:
  // string dst_validator_addr = 3 [json_name = "dstValidatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_dst_validator_addr() ;
  const std::string& dst_validator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dst_validator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_dst_validator_addr();
  PROTOBUF_NODISCARD std::string* release_dst_validator_addr();
  void set_allocated_dst_validator_addr(std::string* value);

  private:
  const std::string& _internal_dst_validator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dst_validator_addr(
      const std::string& value);
  std::string* _internal_mutable_dst_validator_addr();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryRedelegationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      107, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRedelegationsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_addr_;
    ::google::protobuf::internal::ArenaStringPtr src_validator_addr_;
    ::google::protobuf::internal::ArenaStringPtr dst_validator_addr_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryPoolResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryPoolResponse) */ {
 public:
  inline QueryPoolResponse() : QueryPoolResponse(nullptr) {}
  ~QueryPoolResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryPoolResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryPoolResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryPoolResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryPoolResponse(const QueryPoolResponse& from) : QueryPoolResponse(nullptr, from) {}
  inline QueryPoolResponse(QueryPoolResponse&& from) noexcept
      : QueryPoolResponse(nullptr, std::move(from)) {}
  inline QueryPoolResponse& operator=(const QueryPoolResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryPoolResponse& operator=(QueryPoolResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryPoolResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryPoolResponse* internal_default_instance() {
    return reinterpret_cast<const QueryPoolResponse*>(
        &_QueryPoolResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(QueryPoolResponse& a, QueryPoolResponse& b) { a.Swap(&b); }
  inline void Swap(QueryPoolResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryPoolResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryPoolResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryPoolResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryPoolResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryPoolResponse& from) { QueryPoolResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryPoolResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryPoolResponse"; }

 protected:
  explicit QueryPoolResponse(::google::protobuf::Arena* arena);
  QueryPoolResponse(::google::protobuf::Arena* arena, const QueryPoolResponse& from);
  QueryPoolResponse(::google::protobuf::Arena* arena, QueryPoolResponse&& from) noexcept
      : QueryPoolResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPoolFieldNumber = 1,
  };
  // .cosmos.staking.v1beta1.Pool pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_pool() const;
  void clear_pool() ;
  const ::cosmos::staking::v1beta1::Pool& pool() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Pool* release_pool();
  ::cosmos::staking::v1beta1::Pool* mutable_pool();
  void set_allocated_pool(::cosmos::staking::v1beta1::Pool* value);
  void unsafe_arena_set_allocated_pool(::cosmos::staking::v1beta1::Pool* value);
  ::cosmos::staking::v1beta1::Pool* unsafe_arena_release_pool();

  private:
  const ::cosmos::staking::v1beta1::Pool& _internal_pool() const;
  ::cosmos::staking::v1beta1::Pool* _internal_mutable_pool();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryPoolResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryPoolResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::staking::v1beta1::Pool* pool_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorValidatorsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest) */ {
 public:
  inline QueryDelegatorValidatorsRequest() : QueryDelegatorValidatorsRequest(nullptr) {}
  ~QueryDelegatorValidatorsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorValidatorsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorValidatorsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorValidatorsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorValidatorsRequest(const QueryDelegatorValidatorsRequest& from) : QueryDelegatorValidatorsRequest(nullptr, from) {}
  inline QueryDelegatorValidatorsRequest(QueryDelegatorValidatorsRequest&& from) noexcept
      : QueryDelegatorValidatorsRequest(nullptr, std::move(from)) {}
  inline QueryDelegatorValidatorsRequest& operator=(const QueryDelegatorValidatorsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorValidatorsRequest& operator=(QueryDelegatorValidatorsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorValidatorsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorValidatorsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorValidatorsRequest*>(
        &_QueryDelegatorValidatorsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(QueryDelegatorValidatorsRequest& a, QueryDelegatorValidatorsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorValidatorsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorValidatorsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorValidatorsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorValidatorsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorValidatorsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorValidatorsRequest& from) { QueryDelegatorValidatorsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorValidatorsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest"; }

 protected:
  explicit QueryDelegatorValidatorsRequest(::google::protobuf::Arena* arena);
  QueryDelegatorValidatorsRequest(::google::protobuf::Arena* arena, const QueryDelegatorValidatorsRequest& from);
  QueryDelegatorValidatorsRequest(::google::protobuf::Arena* arena, QueryDelegatorValidatorsRequest&& from) noexcept
      : QueryDelegatorValidatorsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddrFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_addr() ;
  const std::string& delegator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_addr();
  PROTOBUF_NODISCARD std::string* release_delegator_addr();
  void set_allocated_delegator_addr(std::string* value);

  private:
  const std::string& _internal_delegator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_addr(
      const std::string& value);
  std::string* _internal_mutable_delegator_addr();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorValidatorsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_addr_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorUnbondingDelegationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest) */ {
 public:
  inline QueryDelegatorUnbondingDelegationsRequest() : QueryDelegatorUnbondingDelegationsRequest(nullptr) {}
  ~QueryDelegatorUnbondingDelegationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorUnbondingDelegationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorUnbondingDelegationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorUnbondingDelegationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorUnbondingDelegationsRequest(const QueryDelegatorUnbondingDelegationsRequest& from) : QueryDelegatorUnbondingDelegationsRequest(nullptr, from) {}
  inline QueryDelegatorUnbondingDelegationsRequest(QueryDelegatorUnbondingDelegationsRequest&& from) noexcept
      : QueryDelegatorUnbondingDelegationsRequest(nullptr, std::move(from)) {}
  inline QueryDelegatorUnbondingDelegationsRequest& operator=(const QueryDelegatorUnbondingDelegationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorUnbondingDelegationsRequest& operator=(QueryDelegatorUnbondingDelegationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorUnbondingDelegationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorUnbondingDelegationsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorUnbondingDelegationsRequest*>(
        &_QueryDelegatorUnbondingDelegationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(QueryDelegatorUnbondingDelegationsRequest& a, QueryDelegatorUnbondingDelegationsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorUnbondingDelegationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorUnbondingDelegationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorUnbondingDelegationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorUnbondingDelegationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorUnbondingDelegationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorUnbondingDelegationsRequest& from) { QueryDelegatorUnbondingDelegationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorUnbondingDelegationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest"; }

 protected:
  explicit QueryDelegatorUnbondingDelegationsRequest(::google::protobuf::Arena* arena);
  QueryDelegatorUnbondingDelegationsRequest(::google::protobuf::Arena* arena, const QueryDelegatorUnbondingDelegationsRequest& from);
  QueryDelegatorUnbondingDelegationsRequest(::google::protobuf::Arena* arena, QueryDelegatorUnbondingDelegationsRequest&& from) noexcept
      : QueryDelegatorUnbondingDelegationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddrFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_addr() ;
  const std::string& delegator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_addr();
  PROTOBUF_NODISCARD std::string* release_delegator_addr();
  void set_allocated_delegator_addr(std::string* value);

  private:
  const std::string& _internal_delegator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_addr(
      const std::string& value);
  std::string* _internal_mutable_delegator_addr();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorUnbondingDelegationsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_addr_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorDelegationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest) */ {
 public:
  inline QueryDelegatorDelegationsRequest() : QueryDelegatorDelegationsRequest(nullptr) {}
  ~QueryDelegatorDelegationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorDelegationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorDelegationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorDelegationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorDelegationsRequest(const QueryDelegatorDelegationsRequest& from) : QueryDelegatorDelegationsRequest(nullptr, from) {}
  inline QueryDelegatorDelegationsRequest(QueryDelegatorDelegationsRequest&& from) noexcept
      : QueryDelegatorDelegationsRequest(nullptr, std::move(from)) {}
  inline QueryDelegatorDelegationsRequest& operator=(const QueryDelegatorDelegationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorDelegationsRequest& operator=(QueryDelegatorDelegationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorDelegationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorDelegationsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorDelegationsRequest*>(
        &_QueryDelegatorDelegationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(QueryDelegatorDelegationsRequest& a, QueryDelegatorDelegationsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorDelegationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorDelegationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorDelegationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorDelegationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorDelegationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorDelegationsRequest& from) { QueryDelegatorDelegationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorDelegationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest"; }

 protected:
  explicit QueryDelegatorDelegationsRequest(::google::protobuf::Arena* arena);
  QueryDelegatorDelegationsRequest(::google::protobuf::Arena* arena, const QueryDelegatorDelegationsRequest& from);
  QueryDelegatorDelegationsRequest(::google::protobuf::Arena* arena, QueryDelegatorDelegationsRequest&& from) noexcept
      : QueryDelegatorDelegationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddrFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_addr() ;
  const std::string& delegator_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_addr(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_addr();
  PROTOBUF_NODISCARD std::string* release_delegator_addr();
  void set_allocated_delegator_addr(std::string* value);

  private:
  const std::string& _internal_delegator_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_addr(
      const std::string& value);
  std::string* _internal_mutable_delegator_addr();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      78, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorDelegationsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_addr_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidatorDelegationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse) */ {
 public:
  inline QueryValidatorDelegationsResponse() : QueryValidatorDelegationsResponse(nullptr) {}
  ~QueryValidatorDelegationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorDelegationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorDelegationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorDelegationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorDelegationsResponse(const QueryValidatorDelegationsResponse& from) : QueryValidatorDelegationsResponse(nullptr, from) {}
  inline QueryValidatorDelegationsResponse(QueryValidatorDelegationsResponse&& from) noexcept
      : QueryValidatorDelegationsResponse(nullptr, std::move(from)) {}
  inline QueryValidatorDelegationsResponse& operator=(const QueryValidatorDelegationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorDelegationsResponse& operator=(QueryValidatorDelegationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorDelegationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorDelegationsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorDelegationsResponse*>(
        &_QueryValidatorDelegationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryValidatorDelegationsResponse& a, QueryValidatorDelegationsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorDelegationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorDelegationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorDelegationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorDelegationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorDelegationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorDelegationsResponse& from) { QueryValidatorDelegationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorDelegationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorDelegationsResponse"; }

 protected:
  explicit QueryValidatorDelegationsResponse(::google::protobuf::Arena* arena);
  QueryValidatorDelegationsResponse(::google::protobuf::Arena* arena, const QueryValidatorDelegationsResponse& from);
  QueryValidatorDelegationsResponse(::google::protobuf::Arena* arena, QueryValidatorDelegationsResponse&& from) noexcept
      : QueryValidatorDelegationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegationResponsesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "DelegationResponses", (.amino.dont_omitempty) = true];
  int delegation_responses_size() const;
  private:
  int _internal_delegation_responses_size() const;

  public:
  void clear_delegation_responses() ;
  ::cosmos::staking::v1beta1::DelegationResponse* mutable_delegation_responses(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>* mutable_delegation_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>& _internal_delegation_responses() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>* _internal_mutable_delegation_responses();
  public:
  const ::cosmos::staking::v1beta1::DelegationResponse& delegation_responses(int index) const;
  ::cosmos::staking::v1beta1::DelegationResponse* add_delegation_responses();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>& delegation_responses() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorDelegationsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::DelegationResponse > delegation_responses_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .cosmos.staking.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::staking::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Params* release_params();
  ::cosmos::staking::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::staking::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::staking::v1beta1::Params* value);
  ::cosmos::staking::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::staking::v1beta1::Params& _internal_params() const;
  ::cosmos::staking::v1beta1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::staking::v1beta1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorDelegationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse) */ {
 public:
  inline QueryDelegatorDelegationsResponse() : QueryDelegatorDelegationsResponse(nullptr) {}
  ~QueryDelegatorDelegationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorDelegationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorDelegationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorDelegationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorDelegationsResponse(const QueryDelegatorDelegationsResponse& from) : QueryDelegatorDelegationsResponse(nullptr, from) {}
  inline QueryDelegatorDelegationsResponse(QueryDelegatorDelegationsResponse&& from) noexcept
      : QueryDelegatorDelegationsResponse(nullptr, std::move(from)) {}
  inline QueryDelegatorDelegationsResponse& operator=(const QueryDelegatorDelegationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorDelegationsResponse& operator=(QueryDelegatorDelegationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorDelegationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorDelegationsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorDelegationsResponse*>(
        &_QueryDelegatorDelegationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(QueryDelegatorDelegationsResponse& a, QueryDelegatorDelegationsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorDelegationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorDelegationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorDelegationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorDelegationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorDelegationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorDelegationsResponse& from) { QueryDelegatorDelegationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorDelegationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse"; }

 protected:
  explicit QueryDelegatorDelegationsResponse(::google::protobuf::Arena* arena);
  QueryDelegatorDelegationsResponse(::google::protobuf::Arena* arena, const QueryDelegatorDelegationsResponse& from);
  QueryDelegatorDelegationsResponse(::google::protobuf::Arena* arena, QueryDelegatorDelegationsResponse&& from) noexcept
      : QueryDelegatorDelegationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegationResponsesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int delegation_responses_size() const;
  private:
  int _internal_delegation_responses_size() const;

  public:
  void clear_delegation_responses() ;
  ::cosmos::staking::v1beta1::DelegationResponse* mutable_delegation_responses(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>* mutable_delegation_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>& _internal_delegation_responses() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>* _internal_mutable_delegation_responses();
  public:
  const ::cosmos::staking::v1beta1::DelegationResponse& delegation_responses(int index) const;
  ::cosmos::staking::v1beta1::DelegationResponse* add_delegation_responses();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>& delegation_responses() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorDelegationsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::DelegationResponse > delegation_responses_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegationResponse) */ {
 public:
  inline QueryDelegationResponse() : QueryDelegationResponse(nullptr) {}
  ~QueryDelegationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegationResponse(const QueryDelegationResponse& from) : QueryDelegationResponse(nullptr, from) {}
  inline QueryDelegationResponse(QueryDelegationResponse&& from) noexcept
      : QueryDelegationResponse(nullptr, std::move(from)) {}
  inline QueryDelegationResponse& operator=(const QueryDelegationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegationResponse& operator=(QueryDelegationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegationResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegationResponse*>(
        &_QueryDelegationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryDelegationResponse& a, QueryDelegationResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDelegationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegationResponse& from) { QueryDelegationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegationResponse"; }

 protected:
  explicit QueryDelegationResponse(::google::protobuf::Arena* arena);
  QueryDelegationResponse(::google::protobuf::Arena* arena, const QueryDelegationResponse& from);
  QueryDelegationResponse(::google::protobuf::Arena* arena, QueryDelegationResponse&& from) noexcept
      : QueryDelegationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegationResponseFieldNumber = 1,
  };
  // .cosmos.staking.v1beta1.DelegationResponse delegation_response = 1 [json_name = "delegationResponse"];
  bool has_delegation_response() const;
  void clear_delegation_response() ;
  const ::cosmos::staking::v1beta1::DelegationResponse& delegation_response() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::DelegationResponse* release_delegation_response();
  ::cosmos::staking::v1beta1::DelegationResponse* mutable_delegation_response();
  void set_allocated_delegation_response(::cosmos::staking::v1beta1::DelegationResponse* value);
  void unsafe_arena_set_allocated_delegation_response(::cosmos::staking::v1beta1::DelegationResponse* value);
  ::cosmos::staking::v1beta1::DelegationResponse* unsafe_arena_release_delegation_response();

  private:
  const ::cosmos::staking::v1beta1::DelegationResponse& _internal_delegation_response() const;
  ::cosmos::staking::v1beta1::DelegationResponse* _internal_mutable_delegation_response();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::staking::v1beta1::DelegationResponse* delegation_response_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidatorsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorsResponse) */ {
 public:
  inline QueryValidatorsResponse() : QueryValidatorsResponse(nullptr) {}
  ~QueryValidatorsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorsResponse(const QueryValidatorsResponse& from) : QueryValidatorsResponse(nullptr, from) {}
  inline QueryValidatorsResponse(QueryValidatorsResponse&& from) noexcept
      : QueryValidatorsResponse(nullptr, std::move(from)) {}
  inline QueryValidatorsResponse& operator=(const QueryValidatorsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorsResponse& operator=(QueryValidatorsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorsResponse*>(
        &_QueryValidatorsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryValidatorsResponse& a, QueryValidatorsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorsResponse& from) { QueryValidatorsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorsResponse"; }

 protected:
  explicit QueryValidatorsResponse(::google::protobuf::Arena* arena);
  QueryValidatorsResponse(::google::protobuf::Arena* arena, const QueryValidatorsResponse& from);
  QueryValidatorsResponse(::google::protobuf::Arena* arena, QueryValidatorsResponse&& from) noexcept
      : QueryValidatorsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int validators_size() const;
  private:
  int _internal_validators_size() const;

  public:
  void clear_validators() ;
  ::cosmos::staking::v1beta1::Validator* mutable_validators(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* mutable_validators();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& _internal_validators() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* _internal_mutable_validators();
  public:
  const ::cosmos::staking::v1beta1::Validator& validators(int index) const;
  ::cosmos::staking::v1beta1::Validator* add_validators();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& validators() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::Validator > validators_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidatorUnbondingDelegationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse) */ {
 public:
  inline QueryValidatorUnbondingDelegationsResponse() : QueryValidatorUnbondingDelegationsResponse(nullptr) {}
  ~QueryValidatorUnbondingDelegationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorUnbondingDelegationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorUnbondingDelegationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorUnbondingDelegationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorUnbondingDelegationsResponse(const QueryValidatorUnbondingDelegationsResponse& from) : QueryValidatorUnbondingDelegationsResponse(nullptr, from) {}
  inline QueryValidatorUnbondingDelegationsResponse(QueryValidatorUnbondingDelegationsResponse&& from) noexcept
      : QueryValidatorUnbondingDelegationsResponse(nullptr, std::move(from)) {}
  inline QueryValidatorUnbondingDelegationsResponse& operator=(const QueryValidatorUnbondingDelegationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorUnbondingDelegationsResponse& operator=(QueryValidatorUnbondingDelegationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorUnbondingDelegationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorUnbondingDelegationsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorUnbondingDelegationsResponse*>(
        &_QueryValidatorUnbondingDelegationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryValidatorUnbondingDelegationsResponse& a, QueryValidatorUnbondingDelegationsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorUnbondingDelegationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorUnbondingDelegationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorUnbondingDelegationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorUnbondingDelegationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorUnbondingDelegationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorUnbondingDelegationsResponse& from) { QueryValidatorUnbondingDelegationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorUnbondingDelegationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse"; }

 protected:
  explicit QueryValidatorUnbondingDelegationsResponse(::google::protobuf::Arena* arena);
  QueryValidatorUnbondingDelegationsResponse(::google::protobuf::Arena* arena, const QueryValidatorUnbondingDelegationsResponse& from);
  QueryValidatorUnbondingDelegationsResponse(::google::protobuf::Arena* arena, QueryValidatorUnbondingDelegationsResponse&& from) noexcept
      : QueryValidatorUnbondingDelegationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUnbondingResponsesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int unbonding_responses_size() const;
  private:
  int _internal_unbonding_responses_size() const;

  public:
  void clear_unbonding_responses() ;
  ::cosmos::staking::v1beta1::UnbondingDelegation* mutable_unbonding_responses(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* mutable_unbonding_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& _internal_unbonding_responses() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* _internal_mutable_unbonding_responses();
  public:
  const ::cosmos::staking::v1beta1::UnbondingDelegation& unbonding_responses(int index) const;
  ::cosmos::staking::v1beta1::UnbondingDelegation* add_unbonding_responses();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& unbonding_responses() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorUnbondingDelegationsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::UnbondingDelegation > unbonding_responses_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryValidatorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryValidatorResponse) */ {
 public:
  inline QueryValidatorResponse() : QueryValidatorResponse(nullptr) {}
  ~QueryValidatorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryValidatorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryValidatorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryValidatorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryValidatorResponse(const QueryValidatorResponse& from) : QueryValidatorResponse(nullptr, from) {}
  inline QueryValidatorResponse(QueryValidatorResponse&& from) noexcept
      : QueryValidatorResponse(nullptr, std::move(from)) {}
  inline QueryValidatorResponse& operator=(const QueryValidatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryValidatorResponse& operator=(QueryValidatorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryValidatorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryValidatorResponse* internal_default_instance() {
    return reinterpret_cast<const QueryValidatorResponse*>(
        &_QueryValidatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryValidatorResponse& a, QueryValidatorResponse& b) { a.Swap(&b); }
  inline void Swap(QueryValidatorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryValidatorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryValidatorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryValidatorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryValidatorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryValidatorResponse& from) { QueryValidatorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryValidatorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryValidatorResponse"; }

 protected:
  explicit QueryValidatorResponse(::google::protobuf::Arena* arena);
  QueryValidatorResponse(::google::protobuf::Arena* arena, const QueryValidatorResponse& from);
  QueryValidatorResponse(::google::protobuf::Arena* arena, QueryValidatorResponse&& from) noexcept
      : QueryValidatorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorFieldNumber = 1,
  };
  // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_validator() const;
  void clear_validator() ;
  const ::cosmos::staking::v1beta1::Validator& validator() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Validator* release_validator();
  ::cosmos::staking::v1beta1::Validator* mutable_validator();
  void set_allocated_validator(::cosmos::staking::v1beta1::Validator* value);
  void unsafe_arena_set_allocated_validator(::cosmos::staking::v1beta1::Validator* value);
  ::cosmos::staking::v1beta1::Validator* unsafe_arena_release_validator();

  private:
  const ::cosmos::staking::v1beta1::Validator& _internal_validator() const;
  ::cosmos::staking::v1beta1::Validator* _internal_mutable_validator();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryValidatorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryValidatorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::staking::v1beta1::Validator* validator_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryUnbondingDelegationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse) */ {
 public:
  inline QueryUnbondingDelegationResponse() : QueryUnbondingDelegationResponse(nullptr) {}
  ~QueryUnbondingDelegationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryUnbondingDelegationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryUnbondingDelegationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryUnbondingDelegationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryUnbondingDelegationResponse(const QueryUnbondingDelegationResponse& from) : QueryUnbondingDelegationResponse(nullptr, from) {}
  inline QueryUnbondingDelegationResponse(QueryUnbondingDelegationResponse&& from) noexcept
      : QueryUnbondingDelegationResponse(nullptr, std::move(from)) {}
  inline QueryUnbondingDelegationResponse& operator=(const QueryUnbondingDelegationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryUnbondingDelegationResponse& operator=(QueryUnbondingDelegationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryUnbondingDelegationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryUnbondingDelegationResponse* internal_default_instance() {
    return reinterpret_cast<const QueryUnbondingDelegationResponse*>(
        &_QueryUnbondingDelegationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(QueryUnbondingDelegationResponse& a, QueryUnbondingDelegationResponse& b) { a.Swap(&b); }
  inline void Swap(QueryUnbondingDelegationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryUnbondingDelegationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryUnbondingDelegationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryUnbondingDelegationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryUnbondingDelegationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryUnbondingDelegationResponse& from) { QueryUnbondingDelegationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryUnbondingDelegationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryUnbondingDelegationResponse"; }

 protected:
  explicit QueryUnbondingDelegationResponse(::google::protobuf::Arena* arena);
  QueryUnbondingDelegationResponse(::google::protobuf::Arena* arena, const QueryUnbondingDelegationResponse& from);
  QueryUnbondingDelegationResponse(::google::protobuf::Arena* arena, QueryUnbondingDelegationResponse&& from) noexcept
      : QueryUnbondingDelegationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUnbondFieldNumber = 1,
  };
  // .cosmos.staking.v1beta1.UnbondingDelegation unbond = 1 [json_name = "unbond", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_unbond() const;
  void clear_unbond() ;
  const ::cosmos::staking::v1beta1::UnbondingDelegation& unbond() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::UnbondingDelegation* release_unbond();
  ::cosmos::staking::v1beta1::UnbondingDelegation* mutable_unbond();
  void set_allocated_unbond(::cosmos::staking::v1beta1::UnbondingDelegation* value);
  void unsafe_arena_set_allocated_unbond(::cosmos::staking::v1beta1::UnbondingDelegation* value);
  ::cosmos::staking::v1beta1::UnbondingDelegation* unsafe_arena_release_unbond();

  private:
  const ::cosmos::staking::v1beta1::UnbondingDelegation& _internal_unbond() const;
  ::cosmos::staking::v1beta1::UnbondingDelegation* _internal_mutable_unbond();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryUnbondingDelegationResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::staking::v1beta1::UnbondingDelegation* unbond_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorValidatorsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse) */ {
 public:
  inline QueryDelegatorValidatorsResponse() : QueryDelegatorValidatorsResponse(nullptr) {}
  ~QueryDelegatorValidatorsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorValidatorsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorValidatorsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorValidatorsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorValidatorsResponse(const QueryDelegatorValidatorsResponse& from) : QueryDelegatorValidatorsResponse(nullptr, from) {}
  inline QueryDelegatorValidatorsResponse(QueryDelegatorValidatorsResponse&& from) noexcept
      : QueryDelegatorValidatorsResponse(nullptr, std::move(from)) {}
  inline QueryDelegatorValidatorsResponse& operator=(const QueryDelegatorValidatorsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorValidatorsResponse& operator=(QueryDelegatorValidatorsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorValidatorsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorValidatorsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorValidatorsResponse*>(
        &_QueryDelegatorValidatorsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(QueryDelegatorValidatorsResponse& a, QueryDelegatorValidatorsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorValidatorsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorValidatorsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorValidatorsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorValidatorsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorValidatorsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorValidatorsResponse& from) { QueryDelegatorValidatorsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorValidatorsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse"; }

 protected:
  explicit QueryDelegatorValidatorsResponse(::google::protobuf::Arena* arena);
  QueryDelegatorValidatorsResponse(::google::protobuf::Arena* arena, const QueryDelegatorValidatorsResponse& from);
  QueryDelegatorValidatorsResponse(::google::protobuf::Arena* arena, QueryDelegatorValidatorsResponse&& from) noexcept
      : QueryDelegatorValidatorsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int validators_size() const;
  private:
  int _internal_validators_size() const;

  public:
  void clear_validators() ;
  ::cosmos::staking::v1beta1::Validator* mutable_validators(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* mutable_validators();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& _internal_validators() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* _internal_mutable_validators();
  public:
  const ::cosmos::staking::v1beta1::Validator& validators(int index) const;
  ::cosmos::staking::v1beta1::Validator* add_validators();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& validators() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorValidatorsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::Validator > validators_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorValidatorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse) */ {
 public:
  inline QueryDelegatorValidatorResponse() : QueryDelegatorValidatorResponse(nullptr) {}
  ~QueryDelegatorValidatorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorValidatorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorValidatorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorValidatorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorValidatorResponse(const QueryDelegatorValidatorResponse& from) : QueryDelegatorValidatorResponse(nullptr, from) {}
  inline QueryDelegatorValidatorResponse(QueryDelegatorValidatorResponse&& from) noexcept
      : QueryDelegatorValidatorResponse(nullptr, std::move(from)) {}
  inline QueryDelegatorValidatorResponse& operator=(const QueryDelegatorValidatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorValidatorResponse& operator=(QueryDelegatorValidatorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorValidatorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorValidatorResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorValidatorResponse*>(
        &_QueryDelegatorValidatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(QueryDelegatorValidatorResponse& a, QueryDelegatorValidatorResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorValidatorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorValidatorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorValidatorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorValidatorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorValidatorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorValidatorResponse& from) { QueryDelegatorValidatorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorValidatorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorValidatorResponse"; }

 protected:
  explicit QueryDelegatorValidatorResponse(::google::protobuf::Arena* arena);
  QueryDelegatorValidatorResponse(::google::protobuf::Arena* arena, const QueryDelegatorValidatorResponse& from);
  QueryDelegatorValidatorResponse(::google::protobuf::Arena* arena, QueryDelegatorValidatorResponse&& from) noexcept
      : QueryDelegatorValidatorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorFieldNumber = 1,
  };
  // .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_validator() const;
  void clear_validator() ;
  const ::cosmos::staking::v1beta1::Validator& validator() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Validator* release_validator();
  ::cosmos::staking::v1beta1::Validator* mutable_validator();
  void set_allocated_validator(::cosmos::staking::v1beta1::Validator* value);
  void unsafe_arena_set_allocated_validator(::cosmos::staking::v1beta1::Validator* value);
  ::cosmos::staking::v1beta1::Validator* unsafe_arena_release_validator();

  private:
  const ::cosmos::staking::v1beta1::Validator& _internal_validator() const;
  ::cosmos::staking::v1beta1::Validator* _internal_mutable_validator();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorValidatorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::staking::v1beta1::Validator* validator_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDelegatorUnbondingDelegationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse) */ {
 public:
  inline QueryDelegatorUnbondingDelegationsResponse() : QueryDelegatorUnbondingDelegationsResponse(nullptr) {}
  ~QueryDelegatorUnbondingDelegationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDelegatorUnbondingDelegationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDelegatorUnbondingDelegationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDelegatorUnbondingDelegationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDelegatorUnbondingDelegationsResponse(const QueryDelegatorUnbondingDelegationsResponse& from) : QueryDelegatorUnbondingDelegationsResponse(nullptr, from) {}
  inline QueryDelegatorUnbondingDelegationsResponse(QueryDelegatorUnbondingDelegationsResponse&& from) noexcept
      : QueryDelegatorUnbondingDelegationsResponse(nullptr, std::move(from)) {}
  inline QueryDelegatorUnbondingDelegationsResponse& operator=(const QueryDelegatorUnbondingDelegationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDelegatorUnbondingDelegationsResponse& operator=(QueryDelegatorUnbondingDelegationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDelegatorUnbondingDelegationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDelegatorUnbondingDelegationsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDelegatorUnbondingDelegationsResponse*>(
        &_QueryDelegatorUnbondingDelegationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(QueryDelegatorUnbondingDelegationsResponse& a, QueryDelegatorUnbondingDelegationsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDelegatorUnbondingDelegationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDelegatorUnbondingDelegationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDelegatorUnbondingDelegationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDelegatorUnbondingDelegationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDelegatorUnbondingDelegationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDelegatorUnbondingDelegationsResponse& from) { QueryDelegatorUnbondingDelegationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDelegatorUnbondingDelegationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse"; }

 protected:
  explicit QueryDelegatorUnbondingDelegationsResponse(::google::protobuf::Arena* arena);
  QueryDelegatorUnbondingDelegationsResponse(::google::protobuf::Arena* arena, const QueryDelegatorUnbondingDelegationsResponse& from);
  QueryDelegatorUnbondingDelegationsResponse(::google::protobuf::Arena* arena, QueryDelegatorUnbondingDelegationsResponse&& from) noexcept
      : QueryDelegatorUnbondingDelegationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUnbondingResponsesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int unbonding_responses_size() const;
  private:
  int _internal_unbonding_responses_size() const;

  public:
  void clear_unbonding_responses() ;
  ::cosmos::staking::v1beta1::UnbondingDelegation* mutable_unbonding_responses(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* mutable_unbonding_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& _internal_unbonding_responses() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* _internal_mutable_unbonding_responses();
  public:
  const ::cosmos::staking::v1beta1::UnbondingDelegation& unbonding_responses(int index) const;
  ::cosmos::staking::v1beta1::UnbondingDelegation* add_unbonding_responses();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& unbonding_responses() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDelegatorUnbondingDelegationsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::UnbondingDelegation > unbonding_responses_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryRedelegationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryRedelegationsResponse) */ {
 public:
  inline QueryRedelegationsResponse() : QueryRedelegationsResponse(nullptr) {}
  ~QueryRedelegationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryRedelegationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryRedelegationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRedelegationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRedelegationsResponse(const QueryRedelegationsResponse& from) : QueryRedelegationsResponse(nullptr, from) {}
  inline QueryRedelegationsResponse(QueryRedelegationsResponse&& from) noexcept
      : QueryRedelegationsResponse(nullptr, std::move(from)) {}
  inline QueryRedelegationsResponse& operator=(const QueryRedelegationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRedelegationsResponse& operator=(QueryRedelegationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRedelegationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRedelegationsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryRedelegationsResponse*>(
        &_QueryRedelegationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(QueryRedelegationsResponse& a, QueryRedelegationsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryRedelegationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRedelegationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRedelegationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryRedelegationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRedelegationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRedelegationsResponse& from) { QueryRedelegationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryRedelegationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryRedelegationsResponse"; }

 protected:
  explicit QueryRedelegationsResponse(::google::protobuf::Arena* arena);
  QueryRedelegationsResponse(::google::protobuf::Arena* arena, const QueryRedelegationsResponse& from);
  QueryRedelegationsResponse(::google::protobuf::Arena* arena, QueryRedelegationsResponse&& from) noexcept
      : QueryRedelegationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRedelegationResponsesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1 [json_name = "redelegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int redelegation_responses_size() const;
  private:
  int _internal_redelegation_responses_size() const;

  public:
  void clear_redelegation_responses() ;
  ::cosmos::staking::v1beta1::RedelegationResponse* mutable_redelegation_responses(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>* mutable_redelegation_responses();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>& _internal_redelegation_responses() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>* _internal_mutable_redelegation_responses();
  public:
  const ::cosmos::staking::v1beta1::RedelegationResponse& redelegation_responses(int index) const;
  ::cosmos::staking::v1beta1::RedelegationResponse* add_redelegation_responses();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>& redelegation_responses() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryRedelegationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRedelegationsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::RedelegationResponse > redelegation_responses_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryHistoricalInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.QueryHistoricalInfoResponse) */ {
 public:
  inline QueryHistoricalInfoResponse() : QueryHistoricalInfoResponse(nullptr) {}
  ~QueryHistoricalInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryHistoricalInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryHistoricalInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryHistoricalInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryHistoricalInfoResponse(const QueryHistoricalInfoResponse& from) : QueryHistoricalInfoResponse(nullptr, from) {}
  inline QueryHistoricalInfoResponse(QueryHistoricalInfoResponse&& from) noexcept
      : QueryHistoricalInfoResponse(nullptr, std::move(from)) {}
  inline QueryHistoricalInfoResponse& operator=(const QueryHistoricalInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryHistoricalInfoResponse& operator=(QueryHistoricalInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryHistoricalInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryHistoricalInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryHistoricalInfoResponse*>(
        &_QueryHistoricalInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(QueryHistoricalInfoResponse& a, QueryHistoricalInfoResponse& b) { a.Swap(&b); }
  inline void Swap(QueryHistoricalInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryHistoricalInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryHistoricalInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryHistoricalInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryHistoricalInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryHistoricalInfoResponse& from) { QueryHistoricalInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryHistoricalInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.QueryHistoricalInfoResponse"; }

 protected:
  explicit QueryHistoricalInfoResponse(::google::protobuf::Arena* arena);
  QueryHistoricalInfoResponse(::google::protobuf::Arena* arena, const QueryHistoricalInfoResponse& from);
  QueryHistoricalInfoResponse(::google::protobuf::Arena* arena, QueryHistoricalInfoResponse&& from) noexcept
      : QueryHistoricalInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHistFieldNumber = 1,
  };
  // .cosmos.staking.v1beta1.HistoricalInfo hist = 1 [json_name = "hist"];
  bool has_hist() const;
  void clear_hist() ;
  const ::cosmos::staking::v1beta1::HistoricalInfo& hist() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::HistoricalInfo* release_hist();
  ::cosmos::staking::v1beta1::HistoricalInfo* mutable_hist();
  void set_allocated_hist(::cosmos::staking::v1beta1::HistoricalInfo* value);
  void unsafe_arena_set_allocated_hist(::cosmos::staking::v1beta1::HistoricalInfo* value);
  ::cosmos::staking::v1beta1::HistoricalInfo* unsafe_arena_release_hist();

  private:
  const ::cosmos::staking::v1beta1::HistoricalInfo& _internal_hist() const;
  ::cosmos::staking::v1beta1::HistoricalInfo* _internal_mutable_hist();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.QueryHistoricalInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryHistoricalInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::staking::v1beta1::HistoricalInfo* hist_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryValidatorsRequest

// string status = 1 [json_name = "status"];
inline void QueryValidatorsRequest::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& QueryValidatorsRequest::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorsRequest.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorsRequest::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryValidatorsRequest.status)
}
inline std::string* QueryValidatorsRequest::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorsRequest.status)
  return _s;
}
inline const std::string& QueryValidatorsRequest::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void QueryValidatorsRequest::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* QueryValidatorsRequest::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* QueryValidatorsRequest::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorsRequest.status)
  return _impl_.status_.Release();
}
inline void QueryValidatorsRequest::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorsRequest.status)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryValidatorsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorsRequest.pagination)
  return _internal_pagination();
}
inline void QueryValidatorsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryValidatorsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorsRequest.pagination)
  return _msg;
}
inline void QueryValidatorsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryValidatorsResponse

// repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryValidatorsResponse::_internal_validators_size() const {
  return _internal_validators().size();
}
inline int QueryValidatorsResponse::validators_size() const {
  return _internal_validators_size();
}
inline ::cosmos::staking::v1beta1::Validator* QueryValidatorsResponse::mutable_validators(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorsResponse.validators)
  return _internal_mutable_validators()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* QueryValidatorsResponse::mutable_validators()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.QueryValidatorsResponse.validators)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validators();
}
inline const ::cosmos::staking::v1beta1::Validator& QueryValidatorsResponse::validators(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorsResponse.validators)
  return _internal_validators().Get(index);
}
inline ::cosmos::staking::v1beta1::Validator* QueryValidatorsResponse::add_validators() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::Validator* _add = _internal_mutable_validators()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.QueryValidatorsResponse.validators)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& QueryValidatorsResponse::validators() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.QueryValidatorsResponse.validators)
  return _internal_validators();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>&
QueryValidatorsResponse::_internal_validators() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validators_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>*
QueryValidatorsResponse::_internal_mutable_validators() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validators_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryValidatorsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorsResponse.pagination)
  return _internal_pagination();
}
inline void QueryValidatorsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryValidatorsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorsResponse.pagination)
  return _msg;
}
inline void QueryValidatorsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryValidatorRequest

// string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryValidatorRequest::clear_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.ClearToEmpty();
}
inline const std::string& QueryValidatorRequest::validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorRequest.validator_addr)
  return _internal_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorRequest::set_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryValidatorRequest.validator_addr)
}
inline std::string* QueryValidatorRequest::mutable_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorRequest.validator_addr)
  return _s;
}
inline const std::string& QueryValidatorRequest::_internal_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_addr_.Get();
}
inline void QueryValidatorRequest::_internal_set_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(value, GetArena());
}
inline std::string* QueryValidatorRequest::_internal_mutable_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_addr_.Mutable( GetArena());
}
inline std::string* QueryValidatorRequest::release_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorRequest.validator_addr)
  return _impl_.validator_addr_.Release();
}
inline void QueryValidatorRequest::set_allocated_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_addr_.IsDefault()) {
    _impl_.validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorRequest.validator_addr)
}

// -------------------------------------------------------------------

// QueryValidatorResponse

// .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryValidatorResponse::has_validator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.validator_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Validator& QueryValidatorResponse::_internal_validator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Validator* p = _impl_.validator_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Validator&>(::cosmos::staking::v1beta1::_Validator_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Validator& QueryValidatorResponse::validator() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorResponse.validator)
  return _internal_validator();
}
inline void QueryValidatorResponse::unsafe_arena_set_allocated_validator(::cosmos::staking::v1beta1::Validator* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validator_);
  }
  _impl_.validator_ = reinterpret_cast<::cosmos::staking::v1beta1::Validator*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryValidatorResponse.validator)
}
inline ::cosmos::staking::v1beta1::Validator* QueryValidatorResponse::release_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Validator* released = _impl_.validator_;
  _impl_.validator_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Validator* QueryValidatorResponse::unsafe_arena_release_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorResponse.validator)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Validator* temp = _impl_.validator_;
  _impl_.validator_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Validator* QueryValidatorResponse::_internal_mutable_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validator_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Validator>(GetArena());
    _impl_.validator_ = reinterpret_cast<::cosmos::staking::v1beta1::Validator*>(p);
  }
  return _impl_.validator_;
}
inline ::cosmos::staking::v1beta1::Validator* QueryValidatorResponse::mutable_validator() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Validator* _msg = _internal_mutable_validator();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorResponse.validator)
  return _msg;
}
inline void QueryValidatorResponse::set_allocated_validator(::cosmos::staking::v1beta1::Validator* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validator_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.validator_ = reinterpret_cast<::cosmos::staking::v1beta1::Validator*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorResponse.validator)
}

// -------------------------------------------------------------------

// QueryValidatorDelegationsRequest

// string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryValidatorDelegationsRequest::clear_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.ClearToEmpty();
}
inline const std::string& QueryValidatorDelegationsRequest::validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.validator_addr)
  return _internal_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorDelegationsRequest::set_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.validator_addr)
}
inline std::string* QueryValidatorDelegationsRequest::mutable_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.validator_addr)
  return _s;
}
inline const std::string& QueryValidatorDelegationsRequest::_internal_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_addr_.Get();
}
inline void QueryValidatorDelegationsRequest::_internal_set_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(value, GetArena());
}
inline std::string* QueryValidatorDelegationsRequest::_internal_mutable_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_addr_.Mutable( GetArena());
}
inline std::string* QueryValidatorDelegationsRequest::release_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.validator_addr)
  return _impl_.validator_addr_.Release();
}
inline void QueryValidatorDelegationsRequest::set_allocated_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_addr_.IsDefault()) {
    _impl_.validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.validator_addr)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryValidatorDelegationsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorDelegationsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorDelegationsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.pagination)
  return _internal_pagination();
}
inline void QueryValidatorDelegationsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorDelegationsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorDelegationsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorDelegationsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorDelegationsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.pagination)
  return _msg;
}
inline void QueryValidatorDelegationsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorDelegationsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryValidatorDelegationsResponse

// repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "DelegationResponses", (.amino.dont_omitempty) = true];
inline int QueryValidatorDelegationsResponse::_internal_delegation_responses_size() const {
  return _internal_delegation_responses().size();
}
inline int QueryValidatorDelegationsResponse::delegation_responses_size() const {
  return _internal_delegation_responses_size();
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryValidatorDelegationsResponse::mutable_delegation_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.delegation_responses)
  return _internal_mutable_delegation_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>* QueryValidatorDelegationsResponse::mutable_delegation_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.delegation_responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_delegation_responses();
}
inline const ::cosmos::staking::v1beta1::DelegationResponse& QueryValidatorDelegationsResponse::delegation_responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.delegation_responses)
  return _internal_delegation_responses().Get(index);
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryValidatorDelegationsResponse::add_delegation_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::DelegationResponse* _add = _internal_mutable_delegation_responses()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.delegation_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>& QueryValidatorDelegationsResponse::delegation_responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.delegation_responses)
  return _internal_delegation_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>&
QueryValidatorDelegationsResponse::_internal_delegation_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegation_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>*
QueryValidatorDelegationsResponse::_internal_mutable_delegation_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.delegation_responses_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryValidatorDelegationsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorDelegationsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorDelegationsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.pagination)
  return _internal_pagination();
}
inline void QueryValidatorDelegationsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorDelegationsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorDelegationsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorDelegationsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorDelegationsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.pagination)
  return _msg;
}
inline void QueryValidatorDelegationsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorDelegationsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryValidatorUnbondingDelegationsRequest

// string validator_addr = 1 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryValidatorUnbondingDelegationsRequest::clear_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.ClearToEmpty();
}
inline const std::string& QueryValidatorUnbondingDelegationsRequest::validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.validator_addr)
  return _internal_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryValidatorUnbondingDelegationsRequest::set_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.validator_addr)
}
inline std::string* QueryValidatorUnbondingDelegationsRequest::mutable_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.validator_addr)
  return _s;
}
inline const std::string& QueryValidatorUnbondingDelegationsRequest::_internal_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_addr_.Get();
}
inline void QueryValidatorUnbondingDelegationsRequest::_internal_set_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(value, GetArena());
}
inline std::string* QueryValidatorUnbondingDelegationsRequest::_internal_mutable_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_addr_.Mutable( GetArena());
}
inline std::string* QueryValidatorUnbondingDelegationsRequest::release_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.validator_addr)
  return _impl_.validator_addr_.Release();
}
inline void QueryValidatorUnbondingDelegationsRequest::set_allocated_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_addr_.IsDefault()) {
    _impl_.validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.validator_addr)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryValidatorUnbondingDelegationsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorUnbondingDelegationsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryValidatorUnbondingDelegationsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.pagination)
  return _internal_pagination();
}
inline void QueryValidatorUnbondingDelegationsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorUnbondingDelegationsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorUnbondingDelegationsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorUnbondingDelegationsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryValidatorUnbondingDelegationsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.pagination)
  return _msg;
}
inline void QueryValidatorUnbondingDelegationsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryValidatorUnbondingDelegationsResponse

// repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryValidatorUnbondingDelegationsResponse::_internal_unbonding_responses_size() const {
  return _internal_unbonding_responses().size();
}
inline int QueryValidatorUnbondingDelegationsResponse::unbonding_responses_size() const {
  return _internal_unbonding_responses_size();
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryValidatorUnbondingDelegationsResponse::mutable_unbonding_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.unbonding_responses)
  return _internal_mutable_unbonding_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* QueryValidatorUnbondingDelegationsResponse::mutable_unbonding_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.unbonding_responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unbonding_responses();
}
inline const ::cosmos::staking::v1beta1::UnbondingDelegation& QueryValidatorUnbondingDelegationsResponse::unbonding_responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.unbonding_responses)
  return _internal_unbonding_responses().Get(index);
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryValidatorUnbondingDelegationsResponse::add_unbonding_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::UnbondingDelegation* _add = _internal_mutable_unbonding_responses()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.unbonding_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& QueryValidatorUnbondingDelegationsResponse::unbonding_responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.unbonding_responses)
  return _internal_unbonding_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>&
QueryValidatorUnbondingDelegationsResponse::_internal_unbonding_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unbonding_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>*
QueryValidatorUnbondingDelegationsResponse::_internal_mutable_unbonding_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unbonding_responses_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryValidatorUnbondingDelegationsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorUnbondingDelegationsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryValidatorUnbondingDelegationsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.pagination)
  return _internal_pagination();
}
inline void QueryValidatorUnbondingDelegationsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorUnbondingDelegationsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorUnbondingDelegationsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorUnbondingDelegationsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryValidatorUnbondingDelegationsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.pagination)
  return _msg;
}
inline void QueryValidatorUnbondingDelegationsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryDelegationRequest

// string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegationRequest::clear_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.ClearToEmpty();
}
inline const std::string& QueryDelegationRequest::delegator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegationRequest.delegator_addr)
  return _internal_delegator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegationRequest::set_delegator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryDelegationRequest.delegator_addr)
}
inline std::string* QueryDelegationRequest::mutable_delegator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegationRequest.delegator_addr)
  return _s;
}
inline const std::string& QueryDelegationRequest::_internal_delegator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_addr_.Get();
}
inline void QueryDelegationRequest::_internal_set_delegator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(value, GetArena());
}
inline std::string* QueryDelegationRequest::_internal_mutable_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_addr_.Mutable( GetArena());
}
inline std::string* QueryDelegationRequest::release_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegationRequest.delegator_addr)
  return _impl_.delegator_addr_.Release();
}
inline void QueryDelegationRequest::set_allocated_delegator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_addr_.IsDefault()) {
    _impl_.delegator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegationRequest.delegator_addr)
}

// string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryDelegationRequest::clear_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.ClearToEmpty();
}
inline const std::string& QueryDelegationRequest::validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegationRequest.validator_addr)
  return _internal_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegationRequest::set_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryDelegationRequest.validator_addr)
}
inline std::string* QueryDelegationRequest::mutable_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegationRequest.validator_addr)
  return _s;
}
inline const std::string& QueryDelegationRequest::_internal_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_addr_.Get();
}
inline void QueryDelegationRequest::_internal_set_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(value, GetArena());
}
inline std::string* QueryDelegationRequest::_internal_mutable_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_addr_.Mutable( GetArena());
}
inline std::string* QueryDelegationRequest::release_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegationRequest.validator_addr)
  return _impl_.validator_addr_.Release();
}
inline void QueryDelegationRequest::set_allocated_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_addr_.IsDefault()) {
    _impl_.validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegationRequest.validator_addr)
}

// -------------------------------------------------------------------

// QueryDelegationResponse

// .cosmos.staking.v1beta1.DelegationResponse delegation_response = 1 [json_name = "delegationResponse"];
inline bool QueryDelegationResponse::has_delegation_response() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.delegation_response_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::DelegationResponse& QueryDelegationResponse::_internal_delegation_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::DelegationResponse* p = _impl_.delegation_response_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::DelegationResponse&>(::cosmos::staking::v1beta1::_DelegationResponse_default_instance_);
}
inline const ::cosmos::staking::v1beta1::DelegationResponse& QueryDelegationResponse::delegation_response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegationResponse.delegation_response)
  return _internal_delegation_response();
}
inline void QueryDelegationResponse::unsafe_arena_set_allocated_delegation_response(::cosmos::staking::v1beta1::DelegationResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.delegation_response_);
  }
  _impl_.delegation_response_ = reinterpret_cast<::cosmos::staking::v1beta1::DelegationResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegationResponse.delegation_response)
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryDelegationResponse::release_delegation_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::DelegationResponse* released = _impl_.delegation_response_;
  _impl_.delegation_response_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryDelegationResponse::unsafe_arena_release_delegation_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegationResponse.delegation_response)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::DelegationResponse* temp = _impl_.delegation_response_;
  _impl_.delegation_response_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryDelegationResponse::_internal_mutable_delegation_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.delegation_response_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::DelegationResponse>(GetArena());
    _impl_.delegation_response_ = reinterpret_cast<::cosmos::staking::v1beta1::DelegationResponse*>(p);
  }
  return _impl_.delegation_response_;
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryDelegationResponse::mutable_delegation_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::DelegationResponse* _msg = _internal_mutable_delegation_response();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegationResponse.delegation_response)
  return _msg;
}
inline void QueryDelegationResponse::set_allocated_delegation_response(::cosmos::staking::v1beta1::DelegationResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.delegation_response_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.delegation_response_ = reinterpret_cast<::cosmos::staking::v1beta1::DelegationResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegationResponse.delegation_response)
}

// -------------------------------------------------------------------

// QueryUnbondingDelegationRequest

// string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryUnbondingDelegationRequest::clear_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.ClearToEmpty();
}
inline const std::string& QueryUnbondingDelegationRequest::delegator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.delegator_addr)
  return _internal_delegator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryUnbondingDelegationRequest::set_delegator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.delegator_addr)
}
inline std::string* QueryUnbondingDelegationRequest::mutable_delegator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.delegator_addr)
  return _s;
}
inline const std::string& QueryUnbondingDelegationRequest::_internal_delegator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_addr_.Get();
}
inline void QueryUnbondingDelegationRequest::_internal_set_delegator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(value, GetArena());
}
inline std::string* QueryUnbondingDelegationRequest::_internal_mutable_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_addr_.Mutable( GetArena());
}
inline std::string* QueryUnbondingDelegationRequest::release_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.delegator_addr)
  return _impl_.delegator_addr_.Release();
}
inline void QueryUnbondingDelegationRequest::set_allocated_delegator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_addr_.IsDefault()) {
    _impl_.delegator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.delegator_addr)
}

// string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryUnbondingDelegationRequest::clear_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.ClearToEmpty();
}
inline const std::string& QueryUnbondingDelegationRequest::validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.validator_addr)
  return _internal_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryUnbondingDelegationRequest::set_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.validator_addr)
}
inline std::string* QueryUnbondingDelegationRequest::mutable_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.validator_addr)
  return _s;
}
inline const std::string& QueryUnbondingDelegationRequest::_internal_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_addr_.Get();
}
inline void QueryUnbondingDelegationRequest::_internal_set_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(value, GetArena());
}
inline std::string* QueryUnbondingDelegationRequest::_internal_mutable_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_addr_.Mutable( GetArena());
}
inline std::string* QueryUnbondingDelegationRequest::release_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.validator_addr)
  return _impl_.validator_addr_.Release();
}
inline void QueryUnbondingDelegationRequest::set_allocated_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_addr_.IsDefault()) {
    _impl_.validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryUnbondingDelegationRequest.validator_addr)
}

// -------------------------------------------------------------------

// QueryUnbondingDelegationResponse

// .cosmos.staking.v1beta1.UnbondingDelegation unbond = 1 [json_name = "unbond", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryUnbondingDelegationResponse::has_unbond() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.unbond_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::UnbondingDelegation& QueryUnbondingDelegationResponse::_internal_unbond() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::UnbondingDelegation* p = _impl_.unbond_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::UnbondingDelegation&>(::cosmos::staking::v1beta1::_UnbondingDelegation_default_instance_);
}
inline const ::cosmos::staking::v1beta1::UnbondingDelegation& QueryUnbondingDelegationResponse::unbond() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.unbond)
  return _internal_unbond();
}
inline void QueryUnbondingDelegationResponse::unsafe_arena_set_allocated_unbond(::cosmos::staking::v1beta1::UnbondingDelegation* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.unbond_);
  }
  _impl_.unbond_ = reinterpret_cast<::cosmos::staking::v1beta1::UnbondingDelegation*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.unbond)
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryUnbondingDelegationResponse::release_unbond() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::UnbondingDelegation* released = _impl_.unbond_;
  _impl_.unbond_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryUnbondingDelegationResponse::unsafe_arena_release_unbond() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.unbond)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::UnbondingDelegation* temp = _impl_.unbond_;
  _impl_.unbond_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryUnbondingDelegationResponse::_internal_mutable_unbond() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unbond_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::UnbondingDelegation>(GetArena());
    _impl_.unbond_ = reinterpret_cast<::cosmos::staking::v1beta1::UnbondingDelegation*>(p);
  }
  return _impl_.unbond_;
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryUnbondingDelegationResponse::mutable_unbond() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::UnbondingDelegation* _msg = _internal_mutable_unbond();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.unbond)
  return _msg;
}
inline void QueryUnbondingDelegationResponse::set_allocated_unbond(::cosmos::staking::v1beta1::UnbondingDelegation* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.unbond_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.unbond_ = reinterpret_cast<::cosmos::staking::v1beta1::UnbondingDelegation*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryUnbondingDelegationResponse.unbond)
}

// -------------------------------------------------------------------

// QueryDelegatorDelegationsRequest

// string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegatorDelegationsRequest::clear_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.ClearToEmpty();
}
inline const std::string& QueryDelegatorDelegationsRequest::delegator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.delegator_addr)
  return _internal_delegator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorDelegationsRequest::set_delegator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.delegator_addr)
}
inline std::string* QueryDelegatorDelegationsRequest::mutable_delegator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.delegator_addr)
  return _s;
}
inline const std::string& QueryDelegatorDelegationsRequest::_internal_delegator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_addr_.Get();
}
inline void QueryDelegatorDelegationsRequest::_internal_set_delegator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(value, GetArena());
}
inline std::string* QueryDelegatorDelegationsRequest::_internal_mutable_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_addr_.Mutable( GetArena());
}
inline std::string* QueryDelegatorDelegationsRequest::release_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.delegator_addr)
  return _impl_.delegator_addr_.Release();
}
inline void QueryDelegatorDelegationsRequest::set_allocated_delegator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_addr_.IsDefault()) {
    _impl_.delegator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.delegator_addr)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryDelegatorDelegationsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDelegatorDelegationsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDelegatorDelegationsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.pagination)
  return _internal_pagination();
}
inline void QueryDelegatorDelegationsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorDelegationsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorDelegationsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorDelegationsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorDelegationsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.pagination)
  return _msg;
}
inline void QueryDelegatorDelegationsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorDelegationsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryDelegatorDelegationsResponse

// repeated .cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [json_name = "delegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryDelegatorDelegationsResponse::_internal_delegation_responses_size() const {
  return _internal_delegation_responses().size();
}
inline int QueryDelegatorDelegationsResponse::delegation_responses_size() const {
  return _internal_delegation_responses_size();
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryDelegatorDelegationsResponse::mutable_delegation_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.delegation_responses)
  return _internal_mutable_delegation_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>* QueryDelegatorDelegationsResponse::mutable_delegation_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.delegation_responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_delegation_responses();
}
inline const ::cosmos::staking::v1beta1::DelegationResponse& QueryDelegatorDelegationsResponse::delegation_responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.delegation_responses)
  return _internal_delegation_responses().Get(index);
}
inline ::cosmos::staking::v1beta1::DelegationResponse* QueryDelegatorDelegationsResponse::add_delegation_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::DelegationResponse* _add = _internal_mutable_delegation_responses()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.delegation_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>& QueryDelegatorDelegationsResponse::delegation_responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.delegation_responses)
  return _internal_delegation_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>&
QueryDelegatorDelegationsResponse::_internal_delegation_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegation_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::DelegationResponse>*
QueryDelegatorDelegationsResponse::_internal_mutable_delegation_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.delegation_responses_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryDelegatorDelegationsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDelegatorDelegationsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDelegatorDelegationsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.pagination)
  return _internal_pagination();
}
inline void QueryDelegatorDelegationsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorDelegationsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorDelegationsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorDelegationsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorDelegationsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.pagination)
  return _msg;
}
inline void QueryDelegatorDelegationsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryDelegatorUnbondingDelegationsRequest

// string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegatorUnbondingDelegationsRequest::clear_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.ClearToEmpty();
}
inline const std::string& QueryDelegatorUnbondingDelegationsRequest::delegator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.delegator_addr)
  return _internal_delegator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorUnbondingDelegationsRequest::set_delegator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.delegator_addr)
}
inline std::string* QueryDelegatorUnbondingDelegationsRequest::mutable_delegator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.delegator_addr)
  return _s;
}
inline const std::string& QueryDelegatorUnbondingDelegationsRequest::_internal_delegator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_addr_.Get();
}
inline void QueryDelegatorUnbondingDelegationsRequest::_internal_set_delegator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(value, GetArena());
}
inline std::string* QueryDelegatorUnbondingDelegationsRequest::_internal_mutable_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_addr_.Mutable( GetArena());
}
inline std::string* QueryDelegatorUnbondingDelegationsRequest::release_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.delegator_addr)
  return _impl_.delegator_addr_.Release();
}
inline void QueryDelegatorUnbondingDelegationsRequest::set_allocated_delegator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_addr_.IsDefault()) {
    _impl_.delegator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.delegator_addr)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryDelegatorUnbondingDelegationsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDelegatorUnbondingDelegationsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDelegatorUnbondingDelegationsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.pagination)
  return _internal_pagination();
}
inline void QueryDelegatorUnbondingDelegationsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorUnbondingDelegationsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorUnbondingDelegationsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorUnbondingDelegationsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorUnbondingDelegationsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.pagination)
  return _msg;
}
inline void QueryDelegatorUnbondingDelegationsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryDelegatorUnbondingDelegationsResponse

// repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [json_name = "unbondingResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryDelegatorUnbondingDelegationsResponse::_internal_unbonding_responses_size() const {
  return _internal_unbonding_responses().size();
}
inline int QueryDelegatorUnbondingDelegationsResponse::unbonding_responses_size() const {
  return _internal_unbonding_responses_size();
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryDelegatorUnbondingDelegationsResponse::mutable_unbonding_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.unbonding_responses)
  return _internal_mutable_unbonding_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* QueryDelegatorUnbondingDelegationsResponse::mutable_unbonding_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.unbonding_responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unbonding_responses();
}
inline const ::cosmos::staking::v1beta1::UnbondingDelegation& QueryDelegatorUnbondingDelegationsResponse::unbonding_responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.unbonding_responses)
  return _internal_unbonding_responses().Get(index);
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* QueryDelegatorUnbondingDelegationsResponse::add_unbonding_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::UnbondingDelegation* _add = _internal_mutable_unbonding_responses()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.unbonding_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& QueryDelegatorUnbondingDelegationsResponse::unbonding_responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.unbonding_responses)
  return _internal_unbonding_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>&
QueryDelegatorUnbondingDelegationsResponse::_internal_unbonding_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unbonding_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>*
QueryDelegatorUnbondingDelegationsResponse::_internal_mutable_unbonding_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unbonding_responses_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryDelegatorUnbondingDelegationsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDelegatorUnbondingDelegationsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDelegatorUnbondingDelegationsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.pagination)
  return _internal_pagination();
}
inline void QueryDelegatorUnbondingDelegationsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorUnbondingDelegationsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorUnbondingDelegationsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorUnbondingDelegationsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorUnbondingDelegationsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.pagination)
  return _msg;
}
inline void QueryDelegatorUnbondingDelegationsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryRedelegationsRequest

// string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryRedelegationsRequest::clear_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.ClearToEmpty();
}
inline const std::string& QueryRedelegationsRequest::delegator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryRedelegationsRequest.delegator_addr)
  return _internal_delegator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRedelegationsRequest::set_delegator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryRedelegationsRequest.delegator_addr)
}
inline std::string* QueryRedelegationsRequest::mutable_delegator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryRedelegationsRequest.delegator_addr)
  return _s;
}
inline const std::string& QueryRedelegationsRequest::_internal_delegator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_addr_.Get();
}
inline void QueryRedelegationsRequest::_internal_set_delegator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(value, GetArena());
}
inline std::string* QueryRedelegationsRequest::_internal_mutable_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_addr_.Mutable( GetArena());
}
inline std::string* QueryRedelegationsRequest::release_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryRedelegationsRequest.delegator_addr)
  return _impl_.delegator_addr_.Release();
}
inline void QueryRedelegationsRequest::set_allocated_delegator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_addr_.IsDefault()) {
    _impl_.delegator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryRedelegationsRequest.delegator_addr)
}

// string src_validator_addr = 2 [json_name = "srcValidatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryRedelegationsRequest::clear_src_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_validator_addr_.ClearToEmpty();
}
inline const std::string& QueryRedelegationsRequest::src_validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryRedelegationsRequest.src_validator_addr)
  return _internal_src_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRedelegationsRequest::set_src_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryRedelegationsRequest.src_validator_addr)
}
inline std::string* QueryRedelegationsRequest::mutable_src_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_src_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryRedelegationsRequest.src_validator_addr)
  return _s;
}
inline const std::string& QueryRedelegationsRequest::_internal_src_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.src_validator_addr_.Get();
}
inline void QueryRedelegationsRequest::_internal_set_src_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_validator_addr_.Set(value, GetArena());
}
inline std::string* QueryRedelegationsRequest::_internal_mutable_src_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.src_validator_addr_.Mutable( GetArena());
}
inline std::string* QueryRedelegationsRequest::release_src_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryRedelegationsRequest.src_validator_addr)
  return _impl_.src_validator_addr_.Release();
}
inline void QueryRedelegationsRequest::set_allocated_src_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.src_validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.src_validator_addr_.IsDefault()) {
    _impl_.src_validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryRedelegationsRequest.src_validator_addr)
}

// string dst_validator_addr = 3 [json_name = "dstValidatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryRedelegationsRequest::clear_dst_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_validator_addr_.ClearToEmpty();
}
inline const std::string& QueryRedelegationsRequest::dst_validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryRedelegationsRequest.dst_validator_addr)
  return _internal_dst_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRedelegationsRequest::set_dst_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryRedelegationsRequest.dst_validator_addr)
}
inline std::string* QueryRedelegationsRequest::mutable_dst_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dst_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryRedelegationsRequest.dst_validator_addr)
  return _s;
}
inline const std::string& QueryRedelegationsRequest::_internal_dst_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dst_validator_addr_.Get();
}
inline void QueryRedelegationsRequest::_internal_set_dst_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_validator_addr_.Set(value, GetArena());
}
inline std::string* QueryRedelegationsRequest::_internal_mutable_dst_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dst_validator_addr_.Mutable( GetArena());
}
inline std::string* QueryRedelegationsRequest::release_dst_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryRedelegationsRequest.dst_validator_addr)
  return _impl_.dst_validator_addr_.Release();
}
inline void QueryRedelegationsRequest::set_allocated_dst_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dst_validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.dst_validator_addr_.IsDefault()) {
    _impl_.dst_validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryRedelegationsRequest.dst_validator_addr)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
inline bool QueryRedelegationsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryRedelegationsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryRedelegationsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryRedelegationsRequest.pagination)
  return _internal_pagination();
}
inline void QueryRedelegationsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryRedelegationsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryRedelegationsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryRedelegationsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryRedelegationsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryRedelegationsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryRedelegationsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryRedelegationsRequest.pagination)
  return _msg;
}
inline void QueryRedelegationsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryRedelegationsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryRedelegationsResponse

// repeated .cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1 [json_name = "redelegationResponses", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryRedelegationsResponse::_internal_redelegation_responses_size() const {
  return _internal_redelegation_responses().size();
}
inline int QueryRedelegationsResponse::redelegation_responses_size() const {
  return _internal_redelegation_responses_size();
}
inline ::cosmos::staking::v1beta1::RedelegationResponse* QueryRedelegationsResponse::mutable_redelegation_responses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryRedelegationsResponse.redelegation_responses)
  return _internal_mutable_redelegation_responses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>* QueryRedelegationsResponse::mutable_redelegation_responses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.QueryRedelegationsResponse.redelegation_responses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_redelegation_responses();
}
inline const ::cosmos::staking::v1beta1::RedelegationResponse& QueryRedelegationsResponse::redelegation_responses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryRedelegationsResponse.redelegation_responses)
  return _internal_redelegation_responses().Get(index);
}
inline ::cosmos::staking::v1beta1::RedelegationResponse* QueryRedelegationsResponse::add_redelegation_responses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::RedelegationResponse* _add = _internal_mutable_redelegation_responses()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.QueryRedelegationsResponse.redelegation_responses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>& QueryRedelegationsResponse::redelegation_responses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.QueryRedelegationsResponse.redelegation_responses)
  return _internal_redelegation_responses();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>&
QueryRedelegationsResponse::_internal_redelegation_responses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.redelegation_responses_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::RedelegationResponse>*
QueryRedelegationsResponse::_internal_mutable_redelegation_responses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.redelegation_responses_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryRedelegationsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryRedelegationsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryRedelegationsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryRedelegationsResponse.pagination)
  return _internal_pagination();
}
inline void QueryRedelegationsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryRedelegationsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryRedelegationsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryRedelegationsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryRedelegationsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryRedelegationsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryRedelegationsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryRedelegationsResponse.pagination)
  return _msg;
}
inline void QueryRedelegationsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryRedelegationsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryDelegatorValidatorsRequest

// string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegatorValidatorsRequest::clear_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.ClearToEmpty();
}
inline const std::string& QueryDelegatorValidatorsRequest::delegator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.delegator_addr)
  return _internal_delegator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorValidatorsRequest::set_delegator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.delegator_addr)
}
inline std::string* QueryDelegatorValidatorsRequest::mutable_delegator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.delegator_addr)
  return _s;
}
inline const std::string& QueryDelegatorValidatorsRequest::_internal_delegator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_addr_.Get();
}
inline void QueryDelegatorValidatorsRequest::_internal_set_delegator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(value, GetArena());
}
inline std::string* QueryDelegatorValidatorsRequest::_internal_mutable_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_addr_.Mutable( GetArena());
}
inline std::string* QueryDelegatorValidatorsRequest::release_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.delegator_addr)
  return _impl_.delegator_addr_.Release();
}
inline void QueryDelegatorValidatorsRequest::set_allocated_delegator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_addr_.IsDefault()) {
    _impl_.delegator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.delegator_addr)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryDelegatorValidatorsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDelegatorValidatorsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDelegatorValidatorsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.pagination)
  return _internal_pagination();
}
inline void QueryDelegatorValidatorsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorValidatorsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorValidatorsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorValidatorsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDelegatorValidatorsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.pagination)
  return _msg;
}
inline void QueryDelegatorValidatorsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryDelegatorValidatorsResponse

// repeated .cosmos.staking.v1beta1.Validator validators = 1 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int QueryDelegatorValidatorsResponse::_internal_validators_size() const {
  return _internal_validators().size();
}
inline int QueryDelegatorValidatorsResponse::validators_size() const {
  return _internal_validators_size();
}
inline ::cosmos::staking::v1beta1::Validator* QueryDelegatorValidatorsResponse::mutable_validators(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _internal_mutable_validators()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* QueryDelegatorValidatorsResponse::mutable_validators()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.validators)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validators();
}
inline const ::cosmos::staking::v1beta1::Validator& QueryDelegatorValidatorsResponse::validators(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _internal_validators().Get(index);
}
inline ::cosmos::staking::v1beta1::Validator* QueryDelegatorValidatorsResponse::add_validators() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::Validator* _add = _internal_mutable_validators()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& QueryDelegatorValidatorsResponse::validators() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.validators)
  return _internal_validators();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>&
QueryDelegatorValidatorsResponse::_internal_validators() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validators_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>*
QueryDelegatorValidatorsResponse::_internal_mutable_validators() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validators_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryDelegatorValidatorsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDelegatorValidatorsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDelegatorValidatorsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.pagination)
  return _internal_pagination();
}
inline void QueryDelegatorValidatorsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorValidatorsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorValidatorsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorValidatorsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDelegatorValidatorsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.pagination)
  return _msg;
}
inline void QueryDelegatorValidatorsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryDelegatorValidatorRequest

// string delegator_addr = 1 [json_name = "delegatorAddr", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDelegatorValidatorRequest::clear_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.ClearToEmpty();
}
inline const std::string& QueryDelegatorValidatorRequest::delegator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.delegator_addr)
  return _internal_delegator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorValidatorRequest::set_delegator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.delegator_addr)
}
inline std::string* QueryDelegatorValidatorRequest::mutable_delegator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.delegator_addr)
  return _s;
}
inline const std::string& QueryDelegatorValidatorRequest::_internal_delegator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_addr_.Get();
}
inline void QueryDelegatorValidatorRequest::_internal_set_delegator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.Set(value, GetArena());
}
inline std::string* QueryDelegatorValidatorRequest::_internal_mutable_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_addr_.Mutable( GetArena());
}
inline std::string* QueryDelegatorValidatorRequest::release_delegator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.delegator_addr)
  return _impl_.delegator_addr_.Release();
}
inline void QueryDelegatorValidatorRequest::set_allocated_delegator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_addr_.IsDefault()) {
    _impl_.delegator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.delegator_addr)
}

// string validator_addr = 2 [json_name = "validatorAddr", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void QueryDelegatorValidatorRequest::clear_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.ClearToEmpty();
}
inline const std::string& QueryDelegatorValidatorRequest::validator_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.validator_addr)
  return _internal_validator_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDelegatorValidatorRequest::set_validator_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.validator_addr)
}
inline std::string* QueryDelegatorValidatorRequest::mutable_validator_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_addr();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.validator_addr)
  return _s;
}
inline const std::string& QueryDelegatorValidatorRequest::_internal_validator_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_addr_.Get();
}
inline void QueryDelegatorValidatorRequest::_internal_set_validator_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.Set(value, GetArena());
}
inline std::string* QueryDelegatorValidatorRequest::_internal_mutable_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_addr_.Mutable( GetArena());
}
inline std::string* QueryDelegatorValidatorRequest::release_validator_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.validator_addr)
  return _impl_.validator_addr_.Release();
}
inline void QueryDelegatorValidatorRequest::set_allocated_validator_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_addr_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_addr_.IsDefault()) {
    _impl_.validator_addr_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorRequest.validator_addr)
}

// -------------------------------------------------------------------

// QueryDelegatorValidatorResponse

// .cosmos.staking.v1beta1.Validator validator = 1 [json_name = "validator", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryDelegatorValidatorResponse::has_validator() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.validator_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Validator& QueryDelegatorValidatorResponse::_internal_validator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Validator* p = _impl_.validator_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Validator&>(::cosmos::staking::v1beta1::_Validator_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Validator& QueryDelegatorValidatorResponse::validator() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.validator)
  return _internal_validator();
}
inline void QueryDelegatorValidatorResponse::unsafe_arena_set_allocated_validator(::cosmos::staking::v1beta1::Validator* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validator_);
  }
  _impl_.validator_ = reinterpret_cast<::cosmos::staking::v1beta1::Validator*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.validator)
}
inline ::cosmos::staking::v1beta1::Validator* QueryDelegatorValidatorResponse::release_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Validator* released = _impl_.validator_;
  _impl_.validator_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Validator* QueryDelegatorValidatorResponse::unsafe_arena_release_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.validator)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Validator* temp = _impl_.validator_;
  _impl_.validator_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Validator* QueryDelegatorValidatorResponse::_internal_mutable_validator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validator_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Validator>(GetArena());
    _impl_.validator_ = reinterpret_cast<::cosmos::staking::v1beta1::Validator*>(p);
  }
  return _impl_.validator_;
}
inline ::cosmos::staking::v1beta1::Validator* QueryDelegatorValidatorResponse::mutable_validator() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Validator* _msg = _internal_mutable_validator();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.validator)
  return _msg;
}
inline void QueryDelegatorValidatorResponse::set_allocated_validator(::cosmos::staking::v1beta1::Validator* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validator_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.validator_ = reinterpret_cast<::cosmos::staking::v1beta1::Validator*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryDelegatorValidatorResponse.validator)
}

// -------------------------------------------------------------------

// QueryHistoricalInfoRequest

// int64 height = 1 [json_name = "height"];
inline void QueryHistoricalInfoRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t QueryHistoricalInfoRequest::height() const {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryHistoricalInfoRequest.height)
  return _internal_height();
}
inline void QueryHistoricalInfoRequest::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.QueryHistoricalInfoRequest.height)
}
inline ::int64_t QueryHistoricalInfoRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void QueryHistoricalInfoRequest::_internal_set_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// QueryHistoricalInfoResponse

// .cosmos.staking.v1beta1.HistoricalInfo hist = 1 [json_name = "hist"];
inline bool QueryHistoricalInfoResponse::has_hist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hist_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::HistoricalInfo& QueryHistoricalInfoResponse::_internal_hist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::HistoricalInfo* p = _impl_.hist_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::HistoricalInfo&>(::cosmos::staking::v1beta1::_HistoricalInfo_default_instance_);
}
inline const ::cosmos::staking::v1beta1::HistoricalInfo& QueryHistoricalInfoResponse::hist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryHistoricalInfoResponse.hist)
  return _internal_hist();
}
inline void QueryHistoricalInfoResponse::unsafe_arena_set_allocated_hist(::cosmos::staking::v1beta1::HistoricalInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hist_);
  }
  _impl_.hist_ = reinterpret_cast<::cosmos::staking::v1beta1::HistoricalInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryHistoricalInfoResponse.hist)
}
inline ::cosmos::staking::v1beta1::HistoricalInfo* QueryHistoricalInfoResponse::release_hist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::HistoricalInfo* released = _impl_.hist_;
  _impl_.hist_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::HistoricalInfo* QueryHistoricalInfoResponse::unsafe_arena_release_hist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryHistoricalInfoResponse.hist)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::HistoricalInfo* temp = _impl_.hist_;
  _impl_.hist_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::HistoricalInfo* QueryHistoricalInfoResponse::_internal_mutable_hist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hist_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::HistoricalInfo>(GetArena());
    _impl_.hist_ = reinterpret_cast<::cosmos::staking::v1beta1::HistoricalInfo*>(p);
  }
  return _impl_.hist_;
}
inline ::cosmos::staking::v1beta1::HistoricalInfo* QueryHistoricalInfoResponse::mutable_hist() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::HistoricalInfo* _msg = _internal_mutable_hist();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryHistoricalInfoResponse.hist)
  return _msg;
}
inline void QueryHistoricalInfoResponse::set_allocated_hist(::cosmos::staking::v1beta1::HistoricalInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hist_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.hist_ = reinterpret_cast<::cosmos::staking::v1beta1::HistoricalInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryHistoricalInfoResponse.hist)
}

// -------------------------------------------------------------------

// QueryPoolRequest

// -------------------------------------------------------------------

// QueryPoolResponse

// .cosmos.staking.v1beta1.Pool pool = 1 [json_name = "pool", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryPoolResponse::has_pool() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pool_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Pool& QueryPoolResponse::_internal_pool() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Pool* p = _impl_.pool_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Pool&>(::cosmos::staking::v1beta1::_Pool_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Pool& QueryPoolResponse::pool() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryPoolResponse.pool)
  return _internal_pool();
}
inline void QueryPoolResponse::unsafe_arena_set_allocated_pool(::cosmos::staking::v1beta1::Pool* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pool_);
  }
  _impl_.pool_ = reinterpret_cast<::cosmos::staking::v1beta1::Pool*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryPoolResponse.pool)
}
inline ::cosmos::staking::v1beta1::Pool* QueryPoolResponse::release_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Pool* released = _impl_.pool_;
  _impl_.pool_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Pool* QueryPoolResponse::unsafe_arena_release_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryPoolResponse.pool)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Pool* temp = _impl_.pool_;
  _impl_.pool_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Pool* QueryPoolResponse::_internal_mutable_pool() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pool_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Pool>(GetArena());
    _impl_.pool_ = reinterpret_cast<::cosmos::staking::v1beta1::Pool*>(p);
  }
  return _impl_.pool_;
}
inline ::cosmos::staking::v1beta1::Pool* QueryPoolResponse::mutable_pool() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Pool* _msg = _internal_mutable_pool();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryPoolResponse.pool)
  return _msg;
}
inline void QueryPoolResponse::set_allocated_pool(::cosmos::staking::v1beta1::Pool* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pool_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pool_ = reinterpret_cast<::cosmos::staking::v1beta1::Pool*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryPoolResponse.pool)
}

// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .cosmos.staking.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Params&>(::cosmos::staking::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::cosmos::staking::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.QueryParamsResponse.params)
}
inline ::cosmos::staking::v1beta1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::staking::v1beta1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::cosmos::staking::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.QueryParamsResponse.params)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fstaking_2fv1beta1_2fquery_2eproto_2epb_2eh
