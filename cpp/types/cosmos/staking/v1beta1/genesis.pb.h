// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/staking/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto_2epb_2eh
#define cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/staking/v1beta1/staking.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto;
namespace cosmos {
namespace staking {
namespace v1beta1 {
class GenesisState;
struct GenesisStateDefaultTypeInternal;
extern GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
class LastValidatorPower;
struct LastValidatorPowerDefaultTypeInternal;
extern LastValidatorPowerDefaultTypeInternal _LastValidatorPower_default_instance_;
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace staking {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class LastValidatorPower final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.LastValidatorPower) */ {
 public:
  inline LastValidatorPower() : LastValidatorPower(nullptr) {}
  ~LastValidatorPower() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LastValidatorPower* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LastValidatorPower));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LastValidatorPower(
      ::google::protobuf::internal::ConstantInitialized);

  inline LastValidatorPower(const LastValidatorPower& from) : LastValidatorPower(nullptr, from) {}
  inline LastValidatorPower(LastValidatorPower&& from) noexcept
      : LastValidatorPower(nullptr, std::move(from)) {}
  inline LastValidatorPower& operator=(const LastValidatorPower& from) {
    CopyFrom(from);
    return *this;
  }
  inline LastValidatorPower& operator=(LastValidatorPower&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LastValidatorPower& default_instance() {
    return *internal_default_instance();
  }
  static inline const LastValidatorPower* internal_default_instance() {
    return reinterpret_cast<const LastValidatorPower*>(
        &_LastValidatorPower_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LastValidatorPower& a, LastValidatorPower& b) { a.Swap(&b); }
  inline void Swap(LastValidatorPower* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LastValidatorPower* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LastValidatorPower* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LastValidatorPower>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LastValidatorPower& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LastValidatorPower& from) { LastValidatorPower::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LastValidatorPower* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.LastValidatorPower"; }

 protected:
  explicit LastValidatorPower(::google::protobuf::Arena* arena);
  LastValidatorPower(::google::protobuf::Arena* arena, const LastValidatorPower& from);
  LastValidatorPower(::google::protobuf::Arena* arena, LastValidatorPower&& from) noexcept
      : LastValidatorPower(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kPowerFieldNumber = 2,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // int64 power = 2 [json_name = "power"];
  void clear_power() ;
  ::int64_t power() const;
  void set_power(::int64_t value);

  private:
  ::int64_t _internal_power() const;
  void _internal_set_power(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.LastValidatorPower)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LastValidatorPower& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::int64_t power_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto;
};
// -------------------------------------------------------------------

class GenesisState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.GenesisState) */ {
 public:
  inline GenesisState() : GenesisState(nullptr) {}
  ~GenesisState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GenesisState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GenesisState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GenesisState(
      ::google::protobuf::internal::ConstantInitialized);

  inline GenesisState(const GenesisState& from) : GenesisState(nullptr, from) {}
  inline GenesisState(GenesisState&& from) noexcept
      : GenesisState(nullptr, std::move(from)) {}
  inline GenesisState& operator=(const GenesisState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenesisState& operator=(GenesisState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenesisState& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenesisState* internal_default_instance() {
    return reinterpret_cast<const GenesisState*>(
        &_GenesisState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GenesisState& a, GenesisState& b) { a.Swap(&b); }
  inline void Swap(GenesisState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenesisState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GenesisState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GenesisState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GenesisState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GenesisState& from) { GenesisState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GenesisState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.GenesisState"; }

 protected:
  explicit GenesisState(::google::protobuf::Arena* arena);
  GenesisState(::google::protobuf::Arena* arena, const GenesisState& from);
  GenesisState(::google::protobuf::Arena* arena, GenesisState&& from) noexcept
      : GenesisState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLastValidatorPowersFieldNumber = 3,
    kValidatorsFieldNumber = 4,
    kDelegationsFieldNumber = 5,
    kUnbondingDelegationsFieldNumber = 6,
    kRedelegationsFieldNumber = 7,
    kLastTotalPowerFieldNumber = 2,
    kParamsFieldNumber = 1,
    kExportedFieldNumber = 8,
  };
  // repeated .cosmos.staking.v1beta1.LastValidatorPower last_validator_powers = 3 [json_name = "lastValidatorPowers", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int last_validator_powers_size() const;
  private:
  int _internal_last_validator_powers_size() const;

  public:
  void clear_last_validator_powers() ;
  ::cosmos::staking::v1beta1::LastValidatorPower* mutable_last_validator_powers(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>* mutable_last_validator_powers();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>& _internal_last_validator_powers() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>* _internal_mutable_last_validator_powers();
  public:
  const ::cosmos::staking::v1beta1::LastValidatorPower& last_validator_powers(int index) const;
  ::cosmos::staking::v1beta1::LastValidatorPower* add_last_validator_powers();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>& last_validator_powers() const;
  // repeated .cosmos.staking.v1beta1.Validator validators = 4 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int validators_size() const;
  private:
  int _internal_validators_size() const;

  public:
  void clear_validators() ;
  ::cosmos::staking::v1beta1::Validator* mutable_validators(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* mutable_validators();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& _internal_validators() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* _internal_mutable_validators();
  public:
  const ::cosmos::staking::v1beta1::Validator& validators(int index) const;
  ::cosmos::staking::v1beta1::Validator* add_validators();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& validators() const;
  // repeated .cosmos.staking.v1beta1.Delegation delegations = 5 [json_name = "delegations", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int delegations_size() const;
  private:
  int _internal_delegations_size() const;

  public:
  void clear_delegations() ;
  ::cosmos::staking::v1beta1::Delegation* mutable_delegations(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>* mutable_delegations();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>& _internal_delegations() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>* _internal_mutable_delegations();
  public:
  const ::cosmos::staking::v1beta1::Delegation& delegations(int index) const;
  ::cosmos::staking::v1beta1::Delegation* add_delegations();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>& delegations() const;
  // repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_delegations = 6 [json_name = "unbondingDelegations", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int unbonding_delegations_size() const;
  private:
  int _internal_unbonding_delegations_size() const;

  public:
  void clear_unbonding_delegations() ;
  ::cosmos::staking::v1beta1::UnbondingDelegation* mutable_unbonding_delegations(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* mutable_unbonding_delegations();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& _internal_unbonding_delegations() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* _internal_mutable_unbonding_delegations();
  public:
  const ::cosmos::staking::v1beta1::UnbondingDelegation& unbonding_delegations(int index) const;
  ::cosmos::staking::v1beta1::UnbondingDelegation* add_unbonding_delegations();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& unbonding_delegations() const;
  // repeated .cosmos.staking.v1beta1.Redelegation redelegations = 7 [json_name = "redelegations", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int redelegations_size() const;
  private:
  int _internal_redelegations_size() const;

  public:
  void clear_redelegations() ;
  ::cosmos::staking::v1beta1::Redelegation* mutable_redelegations(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>* mutable_redelegations();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>& _internal_redelegations() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>* _internal_mutable_redelegations();
  public:
  const ::cosmos::staking::v1beta1::Redelegation& redelegations(int index) const;
  ::cosmos::staking::v1beta1::Redelegation* add_redelegations();
  const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>& redelegations() const;
  // bytes last_total_power = 2 [json_name = "lastTotalPower", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
  void clear_last_total_power() ;
  const std::string& last_total_power() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_total_power(Arg_&& arg, Args_... args);
  std::string* mutable_last_total_power();
  PROTOBUF_NODISCARD std::string* release_last_total_power();
  void set_allocated_last_total_power(std::string* value);

  private:
  const std::string& _internal_last_total_power() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_total_power(
      const std::string& value);
  std::string* _internal_mutable_last_total_power();

  public:
  // .cosmos.staking.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::staking::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Params* release_params();
  ::cosmos::staking::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::staking::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::staking::v1beta1::Params* value);
  ::cosmos::staking::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::staking::v1beta1::Params& _internal_params() const;
  ::cosmos::staking::v1beta1::Params* _internal_mutable_params();

  public:
  // bool exported = 8 [json_name = "exported"];
  void clear_exported() ;
  bool exported() const;
  void set_exported(bool value);

  private:
  bool _internal_exported() const;
  void _internal_set_exported(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.GenesisState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 6,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GenesisState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::LastValidatorPower > last_validator_powers_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::Validator > validators_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::Delegation > delegations_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::UnbondingDelegation > unbonding_delegations_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::staking::v1beta1::Redelegation > redelegations_;
    ::google::protobuf::internal::ArenaStringPtr last_total_power_;
    ::cosmos::staking::v1beta1::Params* params_;
    bool exported_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GenesisState

// .cosmos.staking.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool GenesisState::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Params& GenesisState::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Params&>(::cosmos::staking::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Params& GenesisState::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.params)
  return _internal_params();
}
inline void GenesisState::unsafe_arena_set_allocated_params(::cosmos::staking::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.GenesisState.params)
}
inline ::cosmos::staking::v1beta1::Params* GenesisState::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Params* GenesisState::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.GenesisState.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Params* GenesisState::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::staking::v1beta1::Params* GenesisState::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.GenesisState.params)
  return _msg;
}
inline void GenesisState::set_allocated_params(::cosmos::staking::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.GenesisState.params)
}

// bytes last_total_power = 2 [json_name = "lastTotalPower", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
inline void GenesisState::clear_last_total_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_total_power_.ClearToEmpty();
}
inline const std::string& GenesisState::last_total_power() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.last_total_power)
  return _internal_last_total_power();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GenesisState::set_last_total_power(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_total_power_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.GenesisState.last_total_power)
}
inline std::string* GenesisState::mutable_last_total_power() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_total_power();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.GenesisState.last_total_power)
  return _s;
}
inline const std::string& GenesisState::_internal_last_total_power() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_total_power_.Get();
}
inline void GenesisState::_internal_set_last_total_power(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_total_power_.Set(value, GetArena());
}
inline std::string* GenesisState::_internal_mutable_last_total_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_total_power_.Mutable( GetArena());
}
inline std::string* GenesisState::release_last_total_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.GenesisState.last_total_power)
  return _impl_.last_total_power_.Release();
}
inline void GenesisState::set_allocated_last_total_power(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_total_power_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.last_total_power_.IsDefault()) {
    _impl_.last_total_power_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.GenesisState.last_total_power)
}

// repeated .cosmos.staking.v1beta1.LastValidatorPower last_validator_powers = 3 [json_name = "lastValidatorPowers", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_last_validator_powers_size() const {
  return _internal_last_validator_powers().size();
}
inline int GenesisState::last_validator_powers_size() const {
  return _internal_last_validator_powers_size();
}
inline void GenesisState::clear_last_validator_powers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_validator_powers_.Clear();
}
inline ::cosmos::staking::v1beta1::LastValidatorPower* GenesisState::mutable_last_validator_powers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.GenesisState.last_validator_powers)
  return _internal_mutable_last_validator_powers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>* GenesisState::mutable_last_validator_powers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.GenesisState.last_validator_powers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_last_validator_powers();
}
inline const ::cosmos::staking::v1beta1::LastValidatorPower& GenesisState::last_validator_powers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.last_validator_powers)
  return _internal_last_validator_powers().Get(index);
}
inline ::cosmos::staking::v1beta1::LastValidatorPower* GenesisState::add_last_validator_powers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::LastValidatorPower* _add = _internal_mutable_last_validator_powers()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.GenesisState.last_validator_powers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>& GenesisState::last_validator_powers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.GenesisState.last_validator_powers)
  return _internal_last_validator_powers();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>&
GenesisState::_internal_last_validator_powers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_validator_powers_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::LastValidatorPower>*
GenesisState::_internal_mutable_last_validator_powers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.last_validator_powers_;
}

// repeated .cosmos.staking.v1beta1.Validator validators = 4 [json_name = "validators", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_validators_size() const {
  return _internal_validators().size();
}
inline int GenesisState::validators_size() const {
  return _internal_validators_size();
}
inline ::cosmos::staking::v1beta1::Validator* GenesisState::mutable_validators(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.GenesisState.validators)
  return _internal_mutable_validators()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>* GenesisState::mutable_validators()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.GenesisState.validators)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validators();
}
inline const ::cosmos::staking::v1beta1::Validator& GenesisState::validators(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.validators)
  return _internal_validators().Get(index);
}
inline ::cosmos::staking::v1beta1::Validator* GenesisState::add_validators() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::Validator* _add = _internal_mutable_validators()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.GenesisState.validators)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>& GenesisState::validators() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.GenesisState.validators)
  return _internal_validators();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>&
GenesisState::_internal_validators() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validators_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Validator>*
GenesisState::_internal_mutable_validators() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validators_;
}

// repeated .cosmos.staking.v1beta1.Delegation delegations = 5 [json_name = "delegations", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_delegations_size() const {
  return _internal_delegations().size();
}
inline int GenesisState::delegations_size() const {
  return _internal_delegations_size();
}
inline ::cosmos::staking::v1beta1::Delegation* GenesisState::mutable_delegations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.GenesisState.delegations)
  return _internal_mutable_delegations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>* GenesisState::mutable_delegations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.GenesisState.delegations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_delegations();
}
inline const ::cosmos::staking::v1beta1::Delegation& GenesisState::delegations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.delegations)
  return _internal_delegations().Get(index);
}
inline ::cosmos::staking::v1beta1::Delegation* GenesisState::add_delegations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::Delegation* _add = _internal_mutable_delegations()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.GenesisState.delegations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>& GenesisState::delegations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.GenesisState.delegations)
  return _internal_delegations();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>&
GenesisState::_internal_delegations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegations_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Delegation>*
GenesisState::_internal_mutable_delegations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.delegations_;
}

// repeated .cosmos.staking.v1beta1.UnbondingDelegation unbonding_delegations = 6 [json_name = "unbondingDelegations", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_unbonding_delegations_size() const {
  return _internal_unbonding_delegations().size();
}
inline int GenesisState::unbonding_delegations_size() const {
  return _internal_unbonding_delegations_size();
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* GenesisState::mutable_unbonding_delegations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.GenesisState.unbonding_delegations)
  return _internal_mutable_unbonding_delegations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>* GenesisState::mutable_unbonding_delegations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.GenesisState.unbonding_delegations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unbonding_delegations();
}
inline const ::cosmos::staking::v1beta1::UnbondingDelegation& GenesisState::unbonding_delegations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.unbonding_delegations)
  return _internal_unbonding_delegations().Get(index);
}
inline ::cosmos::staking::v1beta1::UnbondingDelegation* GenesisState::add_unbonding_delegations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::UnbondingDelegation* _add = _internal_mutable_unbonding_delegations()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.GenesisState.unbonding_delegations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>& GenesisState::unbonding_delegations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.GenesisState.unbonding_delegations)
  return _internal_unbonding_delegations();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>&
GenesisState::_internal_unbonding_delegations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unbonding_delegations_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::UnbondingDelegation>*
GenesisState::_internal_mutable_unbonding_delegations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unbonding_delegations_;
}

// repeated .cosmos.staking.v1beta1.Redelegation redelegations = 7 [json_name = "redelegations", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int GenesisState::_internal_redelegations_size() const {
  return _internal_redelegations().size();
}
inline int GenesisState::redelegations_size() const {
  return _internal_redelegations_size();
}
inline ::cosmos::staking::v1beta1::Redelegation* GenesisState::mutable_redelegations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.GenesisState.redelegations)
  return _internal_mutable_redelegations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>* GenesisState::mutable_redelegations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.staking.v1beta1.GenesisState.redelegations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_redelegations();
}
inline const ::cosmos::staking::v1beta1::Redelegation& GenesisState::redelegations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.redelegations)
  return _internal_redelegations().Get(index);
}
inline ::cosmos::staking::v1beta1::Redelegation* GenesisState::add_redelegations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::staking::v1beta1::Redelegation* _add = _internal_mutable_redelegations()->Add();
  // @@protoc_insertion_point(field_add:cosmos.staking.v1beta1.GenesisState.redelegations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>& GenesisState::redelegations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.staking.v1beta1.GenesisState.redelegations)
  return _internal_redelegations();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>&
GenesisState::_internal_redelegations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.redelegations_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::staking::v1beta1::Redelegation>*
GenesisState::_internal_mutable_redelegations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.redelegations_;
}

// bool exported = 8 [json_name = "exported"];
inline void GenesisState::clear_exported() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exported_ = false;
}
inline bool GenesisState::exported() const {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.GenesisState.exported)
  return _internal_exported();
}
inline void GenesisState::set_exported(bool value) {
  _internal_set_exported(value);
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.GenesisState.exported)
}
inline bool GenesisState::_internal_exported() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exported_;
}
inline void GenesisState::_internal_set_exported(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exported_ = value;
}

// -------------------------------------------------------------------

// LastValidatorPower

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void LastValidatorPower::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& LastValidatorPower::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.LastValidatorPower.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LastValidatorPower::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.LastValidatorPower.address)
}
inline std::string* LastValidatorPower::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.LastValidatorPower.address)
  return _s;
}
inline const std::string& LastValidatorPower::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void LastValidatorPower::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* LastValidatorPower::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* LastValidatorPower::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.LastValidatorPower.address)
  return _impl_.address_.Release();
}
inline void LastValidatorPower::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.LastValidatorPower.address)
}

// int64 power = 2 [json_name = "power"];
inline void LastValidatorPower::clear_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_ = ::int64_t{0};
}
inline ::int64_t LastValidatorPower::power() const {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.LastValidatorPower.power)
  return _internal_power();
}
inline void LastValidatorPower::set_power(::int64_t value) {
  _internal_set_power(value);
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.LastValidatorPower.power)
}
inline ::int64_t LastValidatorPower::_internal_power() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.power_;
}
inline void LastValidatorPower::_internal_set_power(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.power_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fstaking_2fv1beta1_2fgenesis_2eproto_2epb_2eh
