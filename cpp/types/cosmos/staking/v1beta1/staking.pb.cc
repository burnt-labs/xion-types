// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/staking/v1beta1/staking.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/staking/v1beta1/staking.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace staking {
namespace v1beta1 {

inline constexpr ValAddresses::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : addresses_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValAddresses::ValAddresses(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValAddressesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValAddressesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValAddressesDefaultTypeInternal() {}
  union {
    ValAddresses _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValAddressesDefaultTypeInternal _ValAddresses_default_instance_;

inline constexpr Pool::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : not_bonded_tokens_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bonded_tokens_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pool::Pool(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PoolDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PoolDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PoolDefaultTypeInternal() {}
  union {
    Pool _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PoolDefaultTypeInternal _Pool_default_instance_;

inline constexpr Description::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : moniker_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        identity_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        website_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        security_contact_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        details_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Description::Description(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DescriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DescriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DescriptionDefaultTypeInternal() {}
  union {
    Description _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DescriptionDefaultTypeInternal _Description_default_instance_;

inline constexpr Delegation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : delegator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        shares_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Delegation::Delegation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DelegationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelegationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelegationDefaultTypeInternal() {}
  union {
    Delegation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelegationDefaultTypeInternal _Delegation_default_instance_;

inline constexpr DVVTriplet::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : delegator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_src_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_dst_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DVVTriplet::DVVTriplet(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DVVTripletDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DVVTripletDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DVVTripletDefaultTypeInternal() {}
  union {
    DVVTriplet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DVVTripletDefaultTypeInternal _DVVTriplet_default_instance_;

inline constexpr DVPair::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : delegator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DVPair::DVPair(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DVPairDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DVPairDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DVPairDefaultTypeInternal() {}
  union {
    DVPair _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DVPairDefaultTypeInternal _DVPair_default_instance_;

inline constexpr CommissionRates::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_rate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_change_rate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CommissionRates::CommissionRates(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommissionRatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommissionRatesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommissionRatesDefaultTypeInternal() {}
  union {
    CommissionRates _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommissionRatesDefaultTypeInternal _CommissionRates_default_instance_;

inline constexpr UnbondingDelegationEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        initial_balance_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        balance_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        completion_time_{nullptr},
        creation_height_{::int64_t{0}},
        unbonding_id_{::uint64_t{0u}},
        unbonding_on_hold_ref_count_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR UnbondingDelegationEntry::UnbondingDelegationEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnbondingDelegationEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnbondingDelegationEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnbondingDelegationEntryDefaultTypeInternal() {}
  union {
    UnbondingDelegationEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnbondingDelegationEntryDefaultTypeInternal _UnbondingDelegationEntry_default_instance_;

inline constexpr RedelegationEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        initial_balance_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        shares_dst_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        completion_time_{nullptr},
        creation_height_{::int64_t{0}},
        unbonding_id_{::uint64_t{0u}},
        unbonding_on_hold_ref_count_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RedelegationEntry::RedelegationEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RedelegationEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedelegationEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedelegationEntryDefaultTypeInternal() {}
  union {
    RedelegationEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedelegationEntryDefaultTypeInternal _RedelegationEntry_default_instance_;

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bond_denom_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_commission_rate_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        unbonding_time_{nullptr},
        max_validators_{0u},
        max_entries_{0u},
        historical_entries_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;

inline constexpr DelegationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        delegation_{nullptr},
        balance_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DelegationResponse::DelegationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DelegationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DelegationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DelegationResponseDefaultTypeInternal() {}
  union {
    DelegationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DelegationResponseDefaultTypeInternal _DelegationResponse_default_instance_;

inline constexpr DVVTriplets::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : triplets_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DVVTriplets::DVVTriplets(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DVVTripletsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DVVTripletsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DVVTripletsDefaultTypeInternal() {}
  union {
    DVVTriplets _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DVVTripletsDefaultTypeInternal _DVVTriplets_default_instance_;

inline constexpr DVPairs::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pairs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DVPairs::DVPairs(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DVPairsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DVPairsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DVPairsDefaultTypeInternal() {}
  union {
    DVPairs _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DVPairsDefaultTypeInternal _DVPairs_default_instance_;

inline constexpr Commission::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        commission_rates_{nullptr},
        update_time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Commission::Commission(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CommissionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommissionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommissionDefaultTypeInternal() {}
  union {
    Commission _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommissionDefaultTypeInternal _Commission_default_instance_;

inline constexpr ValidatorUpdates::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : updates_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorUpdates::ValidatorUpdates(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorUpdatesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorUpdatesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorUpdatesDefaultTypeInternal() {}
  union {
    ValidatorUpdates _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorUpdatesDefaultTypeInternal _ValidatorUpdates_default_instance_;

inline constexpr Validator::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        unbonding_ids_{},
        _unbonding_ids_cached_byte_size_{0},
        operator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tokens_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        delegator_shares_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_self_delegation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        consensus_pubkey_{nullptr},
        description_{nullptr},
        unbonding_time_{nullptr},
        commission_{nullptr},
        jailed_{false},
        status_{static_cast< ::cosmos::staking::v1beta1::BondStatus >(0)},
        unbonding_height_{::int64_t{0}},
        unbonding_on_hold_ref_count_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Validator::Validator(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorDefaultTypeInternal() {}
  union {
    Validator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorDefaultTypeInternal _Validator_default_instance_;

inline constexpr UnbondingDelegation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        delegator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UnbondingDelegation::UnbondingDelegation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnbondingDelegationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnbondingDelegationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnbondingDelegationDefaultTypeInternal() {}
  union {
    UnbondingDelegation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnbondingDelegationDefaultTypeInternal _UnbondingDelegation_default_instance_;

inline constexpr RedelegationEntryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        balance_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        redelegation_entry_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RedelegationEntryResponse::RedelegationEntryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RedelegationEntryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedelegationEntryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedelegationEntryResponseDefaultTypeInternal() {}
  union {
    RedelegationEntryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedelegationEntryResponseDefaultTypeInternal _RedelegationEntryResponse_default_instance_;

inline constexpr Redelegation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        delegator_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_src_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_dst_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Redelegation::Redelegation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RedelegationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedelegationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedelegationDefaultTypeInternal() {}
  union {
    Redelegation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedelegationDefaultTypeInternal _Redelegation_default_instance_;

inline constexpr RedelegationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entries_{},
        redelegation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RedelegationResponse::RedelegationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RedelegationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RedelegationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RedelegationResponseDefaultTypeInternal() {}
  union {
    RedelegationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RedelegationResponseDefaultTypeInternal _RedelegationResponse_default_instance_;

inline constexpr HistoricalInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        valset_{},
        header_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HistoricalInfo::HistoricalInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoricalInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoricalInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoricalInfoDefaultTypeInternal() {}
  union {
    HistoricalInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoricalInfoDefaultTypeInternal _HistoricalInfo_default_instance_;
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::HistoricalInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::HistoricalInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::HistoricalInfo, _impl_.header_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::HistoricalInfo, _impl_.valset_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::CommissionRates, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::CommissionRates, _impl_.rate_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::CommissionRates, _impl_.max_rate_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::CommissionRates, _impl_.max_change_rate_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Commission, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Commission, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Commission, _impl_.commission_rates_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Commission, _impl_.update_time_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Description, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Description, _impl_.moniker_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Description, _impl_.identity_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Description, _impl_.website_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Description, _impl_.security_contact_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Description, _impl_.details_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.operator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.consensus_pubkey_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.jailed_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.tokens_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.delegator_shares_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.unbonding_height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.unbonding_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.commission_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.min_self_delegation_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.unbonding_on_hold_ref_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Validator, _impl_.unbonding_ids_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        2,
        3,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::ValAddresses, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::ValAddresses, _impl_.addresses_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVPair, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVPair, _impl_.delegator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVPair, _impl_.validator_address_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVPairs, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVPairs, _impl_.pairs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVVTriplet, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVVTriplet, _impl_.delegator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVVTriplet, _impl_.validator_src_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVVTriplet, _impl_.validator_dst_address_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVVTriplets, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DVVTriplets, _impl_.triplets_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Delegation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Delegation, _impl_.delegator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Delegation, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Delegation, _impl_.shares_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegation, _impl_.delegator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegation, _impl_.validator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegation, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _impl_.creation_height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _impl_.completion_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _impl_.initial_balance_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _impl_.unbonding_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::UnbondingDelegationEntry, _impl_.unbonding_on_hold_ref_count_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _impl_.creation_height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _impl_.completion_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _impl_.initial_balance_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _impl_.shares_dst_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _impl_.unbonding_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntry, _impl_.unbonding_on_hold_ref_count_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Redelegation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Redelegation, _impl_.delegator_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Redelegation, _impl_.validator_src_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Redelegation, _impl_.validator_dst_address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Redelegation, _impl_.entries_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _impl_.unbonding_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _impl_.max_validators_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _impl_.max_entries_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _impl_.historical_entries_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _impl_.bond_denom_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Params, _impl_.min_commission_rate_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DelegationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DelegationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DelegationResponse, _impl_.delegation_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::DelegationResponse, _impl_.balance_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntryResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntryResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntryResponse, _impl_.redelegation_entry_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationEntryResponse, _impl_.balance_),
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationResponse, _impl_.redelegation_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::RedelegationResponse, _impl_.entries_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Pool, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Pool, _impl_.not_bonded_tokens_),
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::Pool, _impl_.bonded_tokens_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::ValidatorUpdates, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::ValidatorUpdates, _impl_.updates_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::cosmos::staking::v1beta1::HistoricalInfo)},
        {12, -1, -1, sizeof(::cosmos::staking::v1beta1::CommissionRates)},
        {23, 33, -1, sizeof(::cosmos::staking::v1beta1::Commission)},
        {35, -1, -1, sizeof(::cosmos::staking::v1beta1::Description)},
        {48, 69, -1, sizeof(::cosmos::staking::v1beta1::Validator)},
        {82, -1, -1, sizeof(::cosmos::staking::v1beta1::ValAddresses)},
        {91, -1, -1, sizeof(::cosmos::staking::v1beta1::DVPair)},
        {101, -1, -1, sizeof(::cosmos::staking::v1beta1::DVPairs)},
        {110, -1, -1, sizeof(::cosmos::staking::v1beta1::DVVTriplet)},
        {121, -1, -1, sizeof(::cosmos::staking::v1beta1::DVVTriplets)},
        {130, -1, -1, sizeof(::cosmos::staking::v1beta1::Delegation)},
        {141, -1, -1, sizeof(::cosmos::staking::v1beta1::UnbondingDelegation)},
        {152, 166, -1, sizeof(::cosmos::staking::v1beta1::UnbondingDelegationEntry)},
        {172, 186, -1, sizeof(::cosmos::staking::v1beta1::RedelegationEntry)},
        {192, -1, -1, sizeof(::cosmos::staking::v1beta1::Redelegation)},
        {204, 218, -1, sizeof(::cosmos::staking::v1beta1::Params)},
        {224, 234, -1, sizeof(::cosmos::staking::v1beta1::DelegationResponse)},
        {236, 246, -1, sizeof(::cosmos::staking::v1beta1::RedelegationEntryResponse)},
        {248, 258, -1, sizeof(::cosmos::staking::v1beta1::RedelegationResponse)},
        {260, -1, -1, sizeof(::cosmos::staking::v1beta1::Pool)},
        {270, -1, -1, sizeof(::cosmos::staking::v1beta1::ValidatorUpdates)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::staking::v1beta1::_HistoricalInfo_default_instance_._instance,
    &::cosmos::staking::v1beta1::_CommissionRates_default_instance_._instance,
    &::cosmos::staking::v1beta1::_Commission_default_instance_._instance,
    &::cosmos::staking::v1beta1::_Description_default_instance_._instance,
    &::cosmos::staking::v1beta1::_Validator_default_instance_._instance,
    &::cosmos::staking::v1beta1::_ValAddresses_default_instance_._instance,
    &::cosmos::staking::v1beta1::_DVPair_default_instance_._instance,
    &::cosmos::staking::v1beta1::_DVPairs_default_instance_._instance,
    &::cosmos::staking::v1beta1::_DVVTriplet_default_instance_._instance,
    &::cosmos::staking::v1beta1::_DVVTriplets_default_instance_._instance,
    &::cosmos::staking::v1beta1::_Delegation_default_instance_._instance,
    &::cosmos::staking::v1beta1::_UnbondingDelegation_default_instance_._instance,
    &::cosmos::staking::v1beta1::_UnbondingDelegationEntry_default_instance_._instance,
    &::cosmos::staking::v1beta1::_RedelegationEntry_default_instance_._instance,
    &::cosmos::staking::v1beta1::_Redelegation_default_instance_._instance,
    &::cosmos::staking::v1beta1::_Params_default_instance_._instance,
    &::cosmos::staking::v1beta1::_DelegationResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_RedelegationEntryResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_RedelegationResponse_default_instance_._instance,
    &::cosmos::staking::v1beta1::_Pool_default_instance_._instance,
    &::cosmos::staking::v1beta1::_ValidatorUpdates_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n$cosmos/staking/v1beta1/staking.proto\022\026"
    "cosmos.staking.v1beta1\032\024gogoproto/gogo.p"
    "roto\032\031google/protobuf/any.proto\032\036google/"
    "protobuf/duration.proto\032\037google/protobuf"
    "/timestamp.proto\032\031cosmos_proto/cosmos.pr"
    "oto\032\036cosmos/base/v1beta1/coin.proto\032\021ami"
    "no/amino.proto\032\034tendermint/types/types.p"
    "roto\032\033tendermint/abci/types.proto\"\223\001\n\016Hi"
    "storicalInfo\022;\n\006header\030\001 \001(\0132\030.tendermin"
    "t.types.HeaderB\t\310\336\037\000\250\347\260*\001R\006header\022D\n\006val"
    "set\030\002 \003(\0132!.cosmos.staking.v1beta1.Valid"
    "atorB\t\310\336\037\000\250\347\260*\001R\006valset\"\226\002\n\017CommissionRa"
    "tes\022J\n\004rate\030\001 \001(\tB6\310\336\037\000\332\336\037\033cosmossdk.io/"
    "math.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\004rate\022"
    "Q\n\010max_rate\030\002 \001(\tB6\310\336\037\000\332\336\037\033cosmossdk.io/"
    "math.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\007maxRa"
    "te\022^\n\017max_change_rate\030\003 \001(\tB6\310\336\037\000\332\336\037\033cos"
    "mossdk.io/math.LegacyDec\322\264-\ncosmos.Dec\250\347"
    "\260*\001R\rmaxChangeRate:\004\350\240\037\001\"\301\001\n\nCommission\022"
    "a\n\020commission_rates\030\001 \001(\0132\'.cosmos.staki"
    "ng.v1beta1.CommissionRatesB\r\310\336\037\000\320\336\037\001\250\347\260*"
    "\001R\017commissionRates\022J\n\013update_time\030\002 \001(\0132"
    "\032.google.protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260"
    "*\001R\nupdateTime:\004\350\240\037\001\"\250\001\n\013Description\022\030\n\007"
    "moniker\030\001 \001(\tR\007moniker\022\032\n\010identity\030\002 \001(\t"
    "R\010identity\022\030\n\007website\030\003 \001(\tR\007website\022)\n\020"
    "security_contact\030\004 \001(\tR\017securityContact\022"
    "\030\n\007details\030\005 \001(\tR\007details:\004\350\240\037\001\"\235\007\n\tVali"
    "dator\022C\n\020operator_address\030\001 \001(\tB\030\322\264-\024cos"
    "mos.AddressStringR\017operatorAddress\022Y\n\020co"
    "nsensus_pubkey\030\002 \001(\0132\024.google.protobuf.A"
    "nyB\030\312\264-\024cosmos.crypto.PubKeyR\017consensusP"
    "ubkey\022\026\n\006jailed\030\003 \001(\010R\006jailed\022:\n\006status\030"
    "\004 \001(\0162\".cosmos.staking.v1beta1.BondStatu"
    "sR\006status\022C\n\006tokens\030\005 \001(\tB+\310\336\037\000\332\336\037\025cosmo"
    "ssdk.io/math.Int\322\264-\ncosmos.IntR\006tokens\022\\"
    "\n\020delegator_shares\030\006 \001(\tB1\310\336\037\000\332\336\037\033cosmos"
    "sdk.io/math.LegacyDec\322\264-\ncosmos.DecR\017del"
    "egatorShares\022P\n\013description\030\007 \001(\0132#.cosm"
    "os.staking.v1beta1.DescriptionB\t\310\336\037\000\250\347\260*"
    "\001R\013description\022)\n\020unbonding_height\030\010 \001(\003"
    "R\017unbondingHeight\022P\n\016unbonding_time\030\t \001("
    "\0132\032.google.protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250"
    "\347\260*\001R\runbondingTime\022M\n\ncommission\030\n \001(\0132"
    "\".cosmos.staking.v1beta1.CommissionB\t\310\336\037"
    "\000\250\347\260*\001R\ncommission\022n\n\023min_self_delegatio"
    "n\030\013 \001(\tB>\310\336\037\000\332\336\037\025cosmossdk.io/math.Int\322\264"
    "-\ncosmos.Int\332\264-\017cosmos-sdk 0.46R\021minSelf"
    "Delegation\022<\n\033unbonding_on_hold_ref_coun"
    "t\030\014 \001(\003R\027unbondingOnHoldRefCount\022#\n\runbo"
    "nding_ids\030\r \003(\004R\014unbondingIds:\010\210\240\037\000\350\240\037\000\""
    "F\n\014ValAddresses\0226\n\taddresses\030\001 \003(\tB\030\322\264-\024"
    "cosmos.AddressStringR\taddresses\"\251\001\n\006DVPa"
    "ir\022E\n\021delegator_address\030\001 \001(\tB\030\322\264-\024cosmo"
    "s.AddressStringR\020delegatorAddress\022N\n\021val"
    "idator_address\030\002 \001(\tB!\322\264-\035cosmos.Validat"
    "orAddressStringR\020validatorAddress:\010\210\240\037\000\350"
    "\240\037\000\"J\n\007DVPairs\022\?\n\005pairs\030\001 \003(\0132\036.cosmos.s"
    "taking.v1beta1.DVPairB\t\310\336\037\000\250\347\260*\001R\005pairs\""
    "\213\002\n\nDVVTriplet\022E\n\021delegator_address\030\001 \001("
    "\tB\030\322\264-\024cosmos.AddressStringR\020delegatorAd"
    "dress\022U\n\025validator_src_address\030\002 \001(\tB!\322\264"
    "-\035cosmos.ValidatorAddressStringR\023validat"
    "orSrcAddress\022U\n\025validator_dst_address\030\003 "
    "\001(\tB!\322\264-\035cosmos.ValidatorAddressStringR\023"
    "validatorDstAddress:\010\210\240\037\000\350\240\037\000\"X\n\013DVVTrip"
    "lets\022I\n\010triplets\030\001 \003(\0132\".cosmos.staking."
    "v1beta1.DVVTripletB\t\310\336\037\000\250\347\260*\001R\010triplets\""
    "\370\001\n\nDelegation\022E\n\021delegator_address\030\001 \001("
    "\tB\030\322\264-\024cosmos.AddressStringR\020delegatorAd"
    "dress\022N\n\021validator_address\030\002 \001(\tB!\322\264-\035co"
    "smos.ValidatorAddressStringR\020validatorAd"
    "dress\022I\n\006shares\030\003 \001(\tB1\310\336\037\000\332\336\037\033cosmossdk"
    ".io/math.LegacyDec\322\264-\ncosmos.DecR\006shares"
    ":\010\210\240\037\000\350\240\037\000\"\215\002\n\023UnbondingDelegation\022E\n\021de"
    "legator_address\030\001 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\020delegatorAddress\022N\n\021validator_a"
    "ddress\030\002 \001(\tB!\322\264-\035cosmos.ValidatorAddres"
    "sStringR\020validatorAddress\022U\n\007entries\030\003 \003"
    "(\01320.cosmos.staking.v1beta1.UnbondingDel"
    "egationEntryB\t\310\336\037\000\250\347\260*\001R\007entries:\010\210\240\037\000\350\240"
    "\037\000\"\233\003\n\030UnbondingDelegationEntry\022\'\n\017creat"
    "ion_height\030\001 \001(\003R\016creationHeight\022R\n\017comp"
    "letion_time\030\002 \001(\0132\032.google.protobuf.Time"
    "stampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\016completionTime\022T\n\017"
    "initial_balance\030\003 \001(\tB+\310\336\037\000\332\336\037\025cosmossdk"
    ".io/math.Int\322\264-\ncosmos.IntR\016initialBalan"
    "ce\022E\n\007balance\030\004 \001(\tB+\310\336\037\000\332\336\037\025cosmossdk.i"
    "o/math.Int\322\264-\ncosmos.IntR\007balance\022!\n\014unb"
    "onding_id\030\005 \001(\004R\013unbondingId\022<\n\033unbondin"
    "g_on_hold_ref_count\030\006 \001(\003R\027unbondingOnHo"
    "ldRefCount:\004\350\240\037\001\"\237\003\n\021RedelegationEntry\022\'"
    "\n\017creation_height\030\001 \001(\003R\016creationHeight\022"
    "R\n\017completion_time\030\002 \001(\0132\032.google.protob"
    "uf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\016completionT"
    "ime\022T\n\017initial_balance\030\003 \001(\tB+\310\336\037\000\332\336\037\025co"
    "smossdk.io/math.Int\322\264-\ncosmos.IntR\016initi"
    "alBalance\022P\n\nshares_dst\030\004 \001(\tB1\310\336\037\000\332\336\037\033c"
    "osmossdk.io/math.LegacyDec\322\264-\ncosmos.Dec"
    "R\tsharesDst\022!\n\014unbonding_id\030\005 \001(\004R\013unbon"
    "dingId\022<\n\033unbonding_on_hold_ref_count\030\006 "
    "\001(\003R\027unbondingOnHoldRefCount:\004\350\240\037\001\"\335\002\n\014R"
    "edelegation\022E\n\021delegator_address\030\001 \001(\tB\030"
    "\322\264-\024cosmos.AddressStringR\020delegatorAddre"
    "ss\022U\n\025validator_src_address\030\002 \001(\tB!\322\264-\035c"
    "osmos.ValidatorAddressStringR\023validatorS"
    "rcAddress\022U\n\025validator_dst_address\030\003 \001(\t"
    "B!\322\264-\035cosmos.ValidatorAddressStringR\023val"
    "idatorDstAddress\022N\n\007entries\030\004 \003(\0132).cosm"
    "os.staking.v1beta1.RedelegationEntryB\t\310\336"
    "\037\000\250\347\260*\001R\007entries:\010\210\240\037\000\350\240\037\000\"\234\003\n\006Params\022O\n"
    "\016unbonding_time\030\001 \001(\0132\031.google.protobuf."
    "DurationB\r\310\336\037\000\230\337\037\001\250\347\260*\001R\runbondingTime\022%"
    "\n\016max_validators\030\002 \001(\rR\rmaxValidators\022\037\n"
    "\013max_entries\030\003 \001(\rR\nmaxEntries\022-\n\022histor"
    "ical_entries\030\004 \001(\rR\021historicalEntries\022\035\n"
    "\nbond_denom\030\005 \001(\tR\tbondDenom\022\204\001\n\023min_com"
    "mission_rate\030\006 \001(\tBT\310\336\037\000\332\336\037\033cosmossdk.io"
    "/math.LegacyDec\362\336\037\032yaml:\"min_commission_"
    "rate\"\322\264-\ncosmos.Dec\250\347\260*\001R\021minCommissionR"
    "ate:$\350\240\037\001\212\347\260*\033cosmos-sdk/x/staking/Param"
    "s\"\251\001\n\022DelegationResponse\022M\n\ndelegation\030\001"
    " \001(\0132\".cosmos.staking.v1beta1.Delegation"
    "B\t\310\336\037\000\250\347\260*\001R\ndelegation\022>\n\007balance\030\002 \001(\013"
    "2\031.cosmos.base.v1beta1.CoinB\t\310\336\037\000\250\347\260*\001R\007"
    "balance:\004\350\240\037\000\"\315\001\n\031RedelegationEntryRespo"
    "nse\022c\n\022redelegation_entry\030\001 \001(\0132).cosmos"
    ".staking.v1beta1.RedelegationEntryB\t\310\336\037\000"
    "\250\347\260*\001R\021redelegationEntry\022E\n\007balance\030\004 \001("
    "\tB+\310\336\037\000\332\336\037\025cosmossdk.io/math.Int\322\264-\ncosm"
    "os.IntR\007balance:\004\350\240\037\001\"\311\001\n\024RedelegationRe"
    "sponse\022S\n\014redelegation\030\001 \001(\0132$.cosmos.st"
    "aking.v1beta1.RedelegationB\t\310\336\037\000\250\347\260*\001R\014r"
    "edelegation\022V\n\007entries\030\002 \003(\01321.cosmos.st"
    "aking.v1beta1.RedelegationEntryResponseB"
    "\t\310\336\037\000\250\347\260*\001R\007entries:\004\350\240\037\000\"\353\001\n\004Pool\022q\n\021no"
    "t_bonded_tokens\030\001 \001(\tBE\310\336\037\000\332\336\037\025cosmossdk"
    ".io/math.Int\352\336\037\021not_bonded_tokens\322\264-\ncos"
    "mos.Int\250\347\260*\001R\017notBondedTokens\022f\n\rbonded_"
    "tokens\030\002 \001(\tBA\310\336\037\000\332\336\037\025cosmossdk.io/math."
    "Int\352\336\037\rbonded_tokens\322\264-\ncosmos.Int\250\347\260*\001R"
    "\014bondedTokens:\010\350\240\037\001\360\240\037\001\"Y\n\020ValidatorUpda"
    "tes\022E\n\007updates\030\001 \003(\0132 .tendermint.abci.V"
    "alidatorUpdateB\t\310\336\037\000\250\347\260*\001R\007updates*\266\001\n\nB"
    "ondStatus\022,\n\027BOND_STATUS_UNSPECIFIED\020\000\032\017"
    "\212\235 \013Unspecified\022&\n\024BOND_STATUS_UNBONDED\020"
    "\001\032\014\212\235 \010Unbonded\022(\n\025BOND_STATUS_UNBONDING"
    "\020\002\032\r\212\235 \tUnbonding\022\"\n\022BOND_STATUS_BONDED\020"
    "\003\032\n\212\235 \006Bonded\032\004\210\243\036\000*]\n\nInfraction\022\032\n\026INF"
    "RACTION_UNSPECIFIED\020\000\022\032\n\026INFRACTION_DOUB"
    "LE_SIGN\020\001\022\027\n\023INFRACTION_DOWNTIME\020\002B.Z,gi"
    "thub.com/cosmos/cosmos-sdk/x/staking/typ"
    "esb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto_deps[9] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_tendermint_2fabci_2ftypes_2eproto,
        &::descriptor_table_tendermint_2ftypes_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto = {
    false,
    false,
    6090,
    descriptor_table_protodef_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    "cosmos/staking/v1beta1/staking.proto",
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto_once,
    descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto_deps,
    9,
    21,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    file_level_service_descriptors_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
};
namespace cosmos {
namespace staking {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* BondStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto);
  return file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t BondStatus_internal_data_[] = {
    262144u, 0u, };
bool BondStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* Infraction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto);
  return file_level_enum_descriptors_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Infraction_internal_data_[] = {
    196608u, 0u, };
bool Infraction_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class HistoricalInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HistoricalInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_._has_bits_);
};

void HistoricalInfo::clear_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_ != nullptr) _impl_.header_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HistoricalInfo::HistoricalInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.HistoricalInfo)
}
inline PROTOBUF_NDEBUG_INLINE HistoricalInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::HistoricalInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        valset_{visibility, arena, from.valset_} {}

HistoricalInfo::HistoricalInfo(
    ::google::protobuf::Arena* arena,
    const HistoricalInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoricalInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.header_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::types::Header>(
                              arena, *from._impl_.header_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.HistoricalInfo)
}
inline PROTOBUF_NDEBUG_INLINE HistoricalInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        valset_{visibility, arena} {}

inline void HistoricalInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.header_ = {};
}
HistoricalInfo::~HistoricalInfo() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.HistoricalInfo)
  SharedDtor(*this);
}
inline void HistoricalInfo::SharedDtor(MessageLite& self) {
  HistoricalInfo& this_ = static_cast<HistoricalInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.header_;
  this_._impl_.~Impl_();
}

inline void* HistoricalInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) HistoricalInfo(arena);
}
constexpr auto HistoricalInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_.valset_) +
          decltype(HistoricalInfo::_impl_.valset_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HistoricalInfo), alignof(HistoricalInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HistoricalInfo::PlacementNew_,
                                 sizeof(HistoricalInfo),
                                 alignof(HistoricalInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull HistoricalInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_HistoricalInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &HistoricalInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<HistoricalInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &HistoricalInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<HistoricalInfo>(), &HistoricalInfo::ByteSizeLong,
            &HistoricalInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_._cached_size_),
        false,
    },
    &HistoricalInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* HistoricalInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> HistoricalInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::HistoricalInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.staking.v1beta1.Validator valset = 2 [json_name = "valset", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_.valset_)}},
    // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_.header_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_.header_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.staking.v1beta1.Validator valset = 2 [json_name = "valset", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(HistoricalInfo, _impl_.valset_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::types::Header>()},
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Validator>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void HistoricalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.HistoricalInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.valset_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.header_ != nullptr);
    _impl_.header_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* HistoricalInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const HistoricalInfo& this_ = static_cast<const HistoricalInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* HistoricalInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const HistoricalInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.HistoricalInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.header_, this_._impl_.header_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmos.staking.v1beta1.Validator valset = 2 [json_name = "valset", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_valset_size());
               i < n; i++) {
            const auto& repfield = this_._internal_valset().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.HistoricalInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t HistoricalInfo::ByteSizeLong(const MessageLite& base) {
          const HistoricalInfo& this_ = static_cast<const HistoricalInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t HistoricalInfo::ByteSizeLong() const {
          const HistoricalInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.HistoricalInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.staking.v1beta1.Validator valset = 2 [json_name = "valset", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_valset_size();
              for (const auto& msg : this_._internal_valset()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tendermint.types.Header header = 1 [json_name = "header", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.header_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void HistoricalInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoricalInfo*>(&to_msg);
  auto& from = static_cast<const HistoricalInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.HistoricalInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_valset()->MergeFrom(
      from._internal_valset());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.header_ != nullptr);
    if (_this->_impl_.header_ == nullptr) {
      _this->_impl_.header_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::types::Header>(arena, *from._impl_.header_);
    } else {
      _this->_impl_.header_->MergeFrom(*from._impl_.header_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoricalInfo::CopyFrom(const HistoricalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.HistoricalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoricalInfo::InternalSwap(HistoricalInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.valset_.InternalSwap(&other->_impl_.valset_);
  swap(_impl_.header_, other->_impl_.header_);
}

::google::protobuf::Metadata HistoricalInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CommissionRates::_Internal {
 public:
};

CommissionRates::CommissionRates(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.CommissionRates)
}
inline PROTOBUF_NDEBUG_INLINE CommissionRates::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::CommissionRates& from_msg)
      : rate_(arena, from.rate_),
        max_rate_(arena, from.max_rate_),
        max_change_rate_(arena, from.max_change_rate_),
        _cached_size_{0} {}

CommissionRates::CommissionRates(
    ::google::protobuf::Arena* arena,
    const CommissionRates& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CommissionRates* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.CommissionRates)
}
inline PROTOBUF_NDEBUG_INLINE CommissionRates::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rate_(arena),
        max_rate_(arena),
        max_change_rate_(arena),
        _cached_size_{0} {}

inline void CommissionRates::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CommissionRates::~CommissionRates() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.CommissionRates)
  SharedDtor(*this);
}
inline void CommissionRates::SharedDtor(MessageLite& self) {
  CommissionRates& this_ = static_cast<CommissionRates&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.rate_.Destroy();
  this_._impl_.max_rate_.Destroy();
  this_._impl_.max_change_rate_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CommissionRates::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CommissionRates(arena);
}
constexpr auto CommissionRates::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CommissionRates),
                                            alignof(CommissionRates));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CommissionRates::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CommissionRates_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CommissionRates::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CommissionRates>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CommissionRates::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CommissionRates>(), &CommissionRates::ByteSizeLong,
            &CommissionRates::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CommissionRates, _impl_._cached_size_),
        false,
    },
    &CommissionRates::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CommissionRates::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 74, 2> CommissionRates::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::CommissionRates>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string rate = 1 [json_name = "rate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CommissionRates, _impl_.rate_)}},
    // string max_rate = 2 [json_name = "maxRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CommissionRates, _impl_.max_rate_)}},
    // string max_change_rate = 3 [json_name = "maxChangeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CommissionRates, _impl_.max_change_rate_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string rate = 1 [json_name = "rate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(CommissionRates, _impl_.rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string max_rate = 2 [json_name = "maxRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(CommissionRates, _impl_.max_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string max_change_rate = 3 [json_name = "maxChangeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(CommissionRates, _impl_.max_change_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\4\10\17\0\0\0\0"
    "cosmos.staking.v1beta1.CommissionRates"
    "rate"
    "max_rate"
    "max_change_rate"
  }},
};

PROTOBUF_NOINLINE void CommissionRates::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.CommissionRates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rate_.ClearToEmpty();
  _impl_.max_rate_.ClearToEmpty();
  _impl_.max_change_rate_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CommissionRates::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CommissionRates& this_ = static_cast<const CommissionRates&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CommissionRates::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CommissionRates& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.CommissionRates)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rate = 1 [json_name = "rate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_rate().empty()) {
            const std::string& _s = this_._internal_rate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.CommissionRates.rate");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string max_rate = 2 [json_name = "maxRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_max_rate().empty()) {
            const std::string& _s = this_._internal_max_rate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.CommissionRates.max_rate");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string max_change_rate = 3 [json_name = "maxChangeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_max_change_rate().empty()) {
            const std::string& _s = this_._internal_max_change_rate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.CommissionRates.max_change_rate");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.CommissionRates)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CommissionRates::ByteSizeLong(const MessageLite& base) {
          const CommissionRates& this_ = static_cast<const CommissionRates&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CommissionRates::ByteSizeLong() const {
          const CommissionRates& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.CommissionRates)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string rate = 1 [json_name = "rate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_rate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rate());
            }
            // string max_rate = 2 [json_name = "maxRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_max_rate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_max_rate());
            }
            // string max_change_rate = 3 [json_name = "maxChangeRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_max_change_rate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_max_change_rate());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CommissionRates::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CommissionRates*>(&to_msg);
  auto& from = static_cast<const CommissionRates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.CommissionRates)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rate().empty()) {
    _this->_internal_set_rate(from._internal_rate());
  }
  if (!from._internal_max_rate().empty()) {
    _this->_internal_set_max_rate(from._internal_max_rate());
  }
  if (!from._internal_max_change_rate().empty()) {
    _this->_internal_set_max_change_rate(from._internal_max_change_rate());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CommissionRates::CopyFrom(const CommissionRates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.CommissionRates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CommissionRates::InternalSwap(CommissionRates* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rate_, &other->_impl_.rate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.max_rate_, &other->_impl_.max_rate_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.max_change_rate_, &other->_impl_.max_change_rate_, arena);
}

::google::protobuf::Metadata CommissionRates::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Commission::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Commission>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Commission, _impl_._has_bits_);
};

void Commission::clear_update_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.update_time_ != nullptr) _impl_.update_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Commission::Commission(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.Commission)
}
inline PROTOBUF_NDEBUG_INLINE Commission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::Commission& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Commission::Commission(
    ::google::protobuf::Arena* arena,
    const Commission& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Commission* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.commission_rates_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::CommissionRates>(
                              arena, *from._impl_.commission_rates_)
                        : nullptr;
  _impl_.update_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.update_time_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.Commission)
}
inline PROTOBUF_NDEBUG_INLINE Commission::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Commission::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, commission_rates_),
           0,
           offsetof(Impl_, update_time_) -
               offsetof(Impl_, commission_rates_) +
               sizeof(Impl_::update_time_));
}
Commission::~Commission() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.Commission)
  SharedDtor(*this);
}
inline void Commission::SharedDtor(MessageLite& self) {
  Commission& this_ = static_cast<Commission&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.commission_rates_;
  delete this_._impl_.update_time_;
  this_._impl_.~Impl_();
}

inline void* Commission::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Commission(arena);
}
constexpr auto Commission::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Commission),
                                            alignof(Commission));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Commission::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Commission_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Commission::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Commission>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Commission::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Commission>(), &Commission::ByteSizeLong,
            &Commission::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Commission, _impl_._cached_size_),
        false,
    },
    &Commission::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Commission::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> Commission::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Commission, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Commission>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Timestamp update_time = 2 [json_name = "updateTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Commission, _impl_.update_time_)}},
    // .cosmos.staking.v1beta1.CommissionRates commission_rates = 1 [json_name = "commissionRates", (.gogoproto.nullable) = false, (.gogoproto.embed) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Commission, _impl_.commission_rates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.staking.v1beta1.CommissionRates commission_rates = 1 [json_name = "commissionRates", (.gogoproto.nullable) = false, (.gogoproto.embed) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Commission, _impl_.commission_rates_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp update_time = 2 [json_name = "updateTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Commission, _impl_.update_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::CommissionRates>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Commission::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.Commission)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.commission_rates_ != nullptr);
      _impl_.commission_rates_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.update_time_ != nullptr);
      _impl_.update_time_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Commission::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Commission& this_ = static_cast<const Commission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Commission::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Commission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.Commission)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.staking.v1beta1.CommissionRates commission_rates = 1 [json_name = "commissionRates", (.gogoproto.nullable) = false, (.gogoproto.embed) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.commission_rates_, this_._impl_.commission_rates_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp update_time = 2 [json_name = "updateTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.update_time_, this_._impl_.update_time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.Commission)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Commission::ByteSizeLong(const MessageLite& base) {
          const Commission& this_ = static_cast<const Commission&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Commission::ByteSizeLong() const {
          const Commission& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.Commission)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .cosmos.staking.v1beta1.CommissionRates commission_rates = 1 [json_name = "commissionRates", (.gogoproto.nullable) = false, (.gogoproto.embed) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commission_rates_);
            }
            // .google.protobuf.Timestamp update_time = 2 [json_name = "updateTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.update_time_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Commission::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Commission*>(&to_msg);
  auto& from = static_cast<const Commission&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.Commission)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.commission_rates_ != nullptr);
      if (_this->_impl_.commission_rates_ == nullptr) {
        _this->_impl_.commission_rates_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::CommissionRates>(arena, *from._impl_.commission_rates_);
      } else {
        _this->_impl_.commission_rates_->MergeFrom(*from._impl_.commission_rates_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.update_time_ != nullptr);
      if (_this->_impl_.update_time_ == nullptr) {
        _this->_impl_.update_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.update_time_);
      } else {
        _this->_impl_.update_time_->MergeFrom(*from._impl_.update_time_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Commission::CopyFrom(const Commission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.Commission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Commission::InternalSwap(Commission* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Commission, _impl_.update_time_)
      + sizeof(Commission::_impl_.update_time_)
      - PROTOBUF_FIELD_OFFSET(Commission, _impl_.commission_rates_)>(
          reinterpret_cast<char*>(&_impl_.commission_rates_),
          reinterpret_cast<char*>(&other->_impl_.commission_rates_));
}

::google::protobuf::Metadata Commission::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Description::_Internal {
 public:
};

Description::Description(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.Description)
}
inline PROTOBUF_NDEBUG_INLINE Description::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::Description& from_msg)
      : moniker_(arena, from.moniker_),
        identity_(arena, from.identity_),
        website_(arena, from.website_),
        security_contact_(arena, from.security_contact_),
        details_(arena, from.details_),
        _cached_size_{0} {}

Description::Description(
    ::google::protobuf::Arena* arena,
    const Description& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Description* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.Description)
}
inline PROTOBUF_NDEBUG_INLINE Description::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : moniker_(arena),
        identity_(arena),
        website_(arena),
        security_contact_(arena),
        details_(arena),
        _cached_size_{0} {}

inline void Description::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Description::~Description() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.Description)
  SharedDtor(*this);
}
inline void Description::SharedDtor(MessageLite& self) {
  Description& this_ = static_cast<Description&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.moniker_.Destroy();
  this_._impl_.identity_.Destroy();
  this_._impl_.website_.Destroy();
  this_._impl_.security_contact_.Destroy();
  this_._impl_.details_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Description::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Description(arena);
}
constexpr auto Description::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Description),
                                            alignof(Description));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Description::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Description_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Description::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Description>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Description::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Description>(), &Description::ByteSizeLong,
            &Description::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Description, _impl_._cached_size_),
        false,
    },
    &Description::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Description::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 88, 2> Description::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Description>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string moniker = 1 [json_name = "moniker"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Description, _impl_.moniker_)}},
    // string identity = 2 [json_name = "identity"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Description, _impl_.identity_)}},
    // string website = 3 [json_name = "website"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Description, _impl_.website_)}},
    // string security_contact = 4 [json_name = "securityContact"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Description, _impl_.security_contact_)}},
    // string details = 5 [json_name = "details"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Description, _impl_.details_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string moniker = 1 [json_name = "moniker"];
    {PROTOBUF_FIELD_OFFSET(Description, _impl_.moniker_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string identity = 2 [json_name = "identity"];
    {PROTOBUF_FIELD_OFFSET(Description, _impl_.identity_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string website = 3 [json_name = "website"];
    {PROTOBUF_FIELD_OFFSET(Description, _impl_.website_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string security_contact = 4 [json_name = "securityContact"];
    {PROTOBUF_FIELD_OFFSET(Description, _impl_.security_contact_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string details = 5 [json_name = "details"];
    {PROTOBUF_FIELD_OFFSET(Description, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\7\10\7\20\7\0\0"
    "cosmos.staking.v1beta1.Description"
    "moniker"
    "identity"
    "website"
    "security_contact"
    "details"
  }},
};

PROTOBUF_NOINLINE void Description::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.Description)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.moniker_.ClearToEmpty();
  _impl_.identity_.ClearToEmpty();
  _impl_.website_.ClearToEmpty();
  _impl_.security_contact_.ClearToEmpty();
  _impl_.details_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Description::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Description& this_ = static_cast<const Description&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Description::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Description& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.Description)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string moniker = 1 [json_name = "moniker"];
          if (!this_._internal_moniker().empty()) {
            const std::string& _s = this_._internal_moniker();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Description.moniker");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string identity = 2 [json_name = "identity"];
          if (!this_._internal_identity().empty()) {
            const std::string& _s = this_._internal_identity();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Description.identity");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string website = 3 [json_name = "website"];
          if (!this_._internal_website().empty()) {
            const std::string& _s = this_._internal_website();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Description.website");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string security_contact = 4 [json_name = "securityContact"];
          if (!this_._internal_security_contact().empty()) {
            const std::string& _s = this_._internal_security_contact();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Description.security_contact");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string details = 5 [json_name = "details"];
          if (!this_._internal_details().empty()) {
            const std::string& _s = this_._internal_details();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Description.details");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.Description)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Description::ByteSizeLong(const MessageLite& base) {
          const Description& this_ = static_cast<const Description&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Description::ByteSizeLong() const {
          const Description& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.Description)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string moniker = 1 [json_name = "moniker"];
            if (!this_._internal_moniker().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_moniker());
            }
            // string identity = 2 [json_name = "identity"];
            if (!this_._internal_identity().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_identity());
            }
            // string website = 3 [json_name = "website"];
            if (!this_._internal_website().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_website());
            }
            // string security_contact = 4 [json_name = "securityContact"];
            if (!this_._internal_security_contact().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_security_contact());
            }
            // string details = 5 [json_name = "details"];
            if (!this_._internal_details().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_details());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Description::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Description*>(&to_msg);
  auto& from = static_cast<const Description&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.Description)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_moniker().empty()) {
    _this->_internal_set_moniker(from._internal_moniker());
  }
  if (!from._internal_identity().empty()) {
    _this->_internal_set_identity(from._internal_identity());
  }
  if (!from._internal_website().empty()) {
    _this->_internal_set_website(from._internal_website());
  }
  if (!from._internal_security_contact().empty()) {
    _this->_internal_set_security_contact(from._internal_security_contact());
  }
  if (!from._internal_details().empty()) {
    _this->_internal_set_details(from._internal_details());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Description::CopyFrom(const Description& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.Description)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Description::InternalSwap(Description* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.moniker_, &other->_impl_.moniker_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.identity_, &other->_impl_.identity_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.website_, &other->_impl_.website_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.security_contact_, &other->_impl_.security_contact_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.details_, &other->_impl_.details_, arena);
}

::google::protobuf::Metadata Description::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Validator::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Validator>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Validator, _impl_._has_bits_);
};

void Validator::clear_consensus_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.consensus_pubkey_ != nullptr) _impl_.consensus_pubkey_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Validator::clear_unbonding_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unbonding_time_ != nullptr) _impl_.unbonding_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Validator::Validator(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.Validator)
}
inline PROTOBUF_NDEBUG_INLINE Validator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::Validator& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        unbonding_ids_{visibility, arena, from.unbonding_ids_},
        _unbonding_ids_cached_byte_size_{0},
        operator_address_(arena, from.operator_address_),
        tokens_(arena, from.tokens_),
        delegator_shares_(arena, from.delegator_shares_),
        min_self_delegation_(arena, from.min_self_delegation_) {}

Validator::Validator(
    ::google::protobuf::Arena* arena,
    const Validator& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Validator* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.consensus_pubkey_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.consensus_pubkey_)
                        : nullptr;
  _impl_.description_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Description>(
                              arena, *from._impl_.description_)
                        : nullptr;
  _impl_.unbonding_time_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.unbonding_time_)
                        : nullptr;
  _impl_.commission_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Commission>(
                              arena, *from._impl_.commission_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, jailed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, jailed_),
           offsetof(Impl_, unbonding_on_hold_ref_count_) -
               offsetof(Impl_, jailed_) +
               sizeof(Impl_::unbonding_on_hold_ref_count_));

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.Validator)
}
inline PROTOBUF_NDEBUG_INLINE Validator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        unbonding_ids_{visibility, arena},
        _unbonding_ids_cached_byte_size_{0},
        operator_address_(arena),
        tokens_(arena),
        delegator_shares_(arena),
        min_self_delegation_(arena) {}

inline void Validator::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, consensus_pubkey_),
           0,
           offsetof(Impl_, unbonding_on_hold_ref_count_) -
               offsetof(Impl_, consensus_pubkey_) +
               sizeof(Impl_::unbonding_on_hold_ref_count_));
}
Validator::~Validator() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.Validator)
  SharedDtor(*this);
}
inline void Validator::SharedDtor(MessageLite& self) {
  Validator& this_ = static_cast<Validator&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.operator_address_.Destroy();
  this_._impl_.tokens_.Destroy();
  this_._impl_.delegator_shares_.Destroy();
  this_._impl_.min_self_delegation_.Destroy();
  delete this_._impl_.consensus_pubkey_;
  delete this_._impl_.description_;
  delete this_._impl_.unbonding_time_;
  delete this_._impl_.commission_;
  this_._impl_.~Impl_();
}

inline void* Validator::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Validator(arena);
}
constexpr auto Validator::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_ids_) +
          decltype(Validator::_impl_.unbonding_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Validator), alignof(Validator), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Validator::PlacementNew_,
                                 sizeof(Validator),
                                 alignof(Validator));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Validator::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Validator_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Validator::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Validator>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Validator::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Validator>(), &Validator::ByteSizeLong,
            &Validator::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Validator, _impl_._cached_size_),
        false,
    },
    &Validator::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Validator::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 4, 106, 2> Validator::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Validator, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Validator>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.operator_address_)}},
    // .google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.consensus_pubkey_)}},
    // bool jailed = 3 [json_name = "jailed"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Validator, _impl_.jailed_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.jailed_)}},
    // .cosmos.staking.v1beta1.BondStatus status = 4 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Validator, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.status_)}},
    // string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.tokens_)}},
    // string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.delegator_shares_)}},
    // .cosmos.staking.v1beta1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {58, 1, 1, PROTOBUF_FIELD_OFFSET(Validator, _impl_.description_)}},
    // int64 unbonding_height = 8 [json_name = "unbondingHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Validator, _impl_.unbonding_height_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_height_)}},
    // .google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {74, 2, 2, PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_time_)}},
    // .cosmos.staking.v1beta1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {82, 3, 3, PROTOBUF_FIELD_OFFSET(Validator, _impl_.commission_)}},
    // string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.min_self_delegation_)}},
    // int64 unbonding_on_hold_ref_count = 12 [json_name = "unbondingOnHoldRefCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Validator, _impl_.unbonding_on_hold_ref_count_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_on_hold_ref_count_)}},
    // repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];
    {::_pbi::TcParser::FastV64P1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.operator_address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.consensus_pubkey_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool jailed = 3 [json_name = "jailed"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.jailed_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .cosmos.staking.v1beta1.BondStatus status = 4 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.tokens_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.delegator_shares_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.staking.v1beta1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.description_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 unbonding_height = 8 [json_name = "unbondingHeight"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_time_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.staking.v1beta1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.commission_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.min_self_delegation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 unbonding_on_hold_ref_count = 12 [json_name = "unbondingOnHoldRefCount"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_on_hold_ref_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];
    {PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Description>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Commission>()},
  }}, {{
    "\40\20\0\0\0\6\20\0\0\0\0\23\0\0\0\0"
    "cosmos.staking.v1beta1.Validator"
    "operator_address"
    "tokens"
    "delegator_shares"
    "min_self_delegation"
  }},
};

PROTOBUF_NOINLINE void Validator::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.Validator)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unbonding_ids_.Clear();
  _impl_.operator_address_.ClearToEmpty();
  _impl_.tokens_.ClearToEmpty();
  _impl_.delegator_shares_.ClearToEmpty();
  _impl_.min_self_delegation_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.consensus_pubkey_ != nullptr);
      _impl_.consensus_pubkey_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.description_ != nullptr);
      _impl_.description_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.unbonding_time_ != nullptr);
      _impl_.unbonding_time_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.commission_ != nullptr);
      _impl_.commission_->Clear();
    }
  }
  ::memset(&_impl_.jailed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.unbonding_on_hold_ref_count_) -
      reinterpret_cast<char*>(&_impl_.jailed_)) + sizeof(_impl_.unbonding_on_hold_ref_count_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Validator::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Validator& this_ = static_cast<const Validator&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Validator::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Validator& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.Validator)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_operator_address().empty()) {
            const std::string& _s = this_._internal_operator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Validator.operator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.consensus_pubkey_, this_._impl_.consensus_pubkey_->GetCachedSize(), target,
                stream);
          }

          // bool jailed = 3 [json_name = "jailed"];
          if (this_._internal_jailed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_jailed(), target);
          }

          // .cosmos.staking.v1beta1.BondStatus status = 4 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_tokens().empty()) {
            const std::string& _s = this_._internal_tokens();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Validator.tokens");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_delegator_shares().empty()) {
            const std::string& _s = this_._internal_delegator_shares();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Validator.delegator_shares");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // .cosmos.staking.v1beta1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.description_, this_._impl_.description_->GetCachedSize(), target,
                stream);
          }

          // int64 unbonding_height = 8 [json_name = "unbondingHeight"];
          if (this_._internal_unbonding_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<8>(
                    stream, this_._internal_unbonding_height(), target);
          }

          // .google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.unbonding_time_, this_._impl_.unbonding_time_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.staking.v1beta1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.commission_, this_._impl_.commission_->GetCachedSize(), target,
                stream);
          }

          // string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
          if (!this_._internal_min_self_delegation().empty()) {
            const std::string& _s = this_._internal_min_self_delegation();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Validator.min_self_delegation");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // int64 unbonding_on_hold_ref_count = 12 [json_name = "unbondingOnHoldRefCount"];
          if (this_._internal_unbonding_on_hold_ref_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<12>(
                    stream, this_._internal_unbonding_on_hold_ref_count(), target);
          }

          // repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];
          {
            int byte_size = this_._impl_._unbonding_ids_cached_byte_size_.Get();
            if (byte_size > 0) {
              target = stream->WriteUInt64Packed(
                  13, this_._internal_unbonding_ids(), byte_size, target);
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.Validator)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Validator::ByteSizeLong(const MessageLite& base) {
          const Validator& this_ = static_cast<const Validator&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Validator::ByteSizeLong() const {
          const Validator& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.Validator)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated uint64 unbonding_ids = 13 [json_name = "unbondingIds"];
            {
              total_size +=
                  ::_pbi::WireFormatLite::UInt64SizeWithPackedTagSize(
                      this_._internal_unbonding_ids(), 1,
                      this_._impl_._unbonding_ids_cached_byte_size_);
            }
          }
           {
            // string operator_address = 1 [json_name = "operatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_operator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_operator_address());
            }
            // string tokens = 5 [json_name = "tokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_tokens().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_tokens());
            }
            // string delegator_shares = 6 [json_name = "delegatorShares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_delegator_shares().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_shares());
            }
            // string min_self_delegation = 11 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
            if (!this_._internal_min_self_delegation().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_min_self_delegation());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .google.protobuf.Any consensus_pubkey = 2 [json_name = "consensusPubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.consensus_pubkey_);
            }
            // .cosmos.staking.v1beta1.Description description = 7 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.description_);
            }
            // .google.protobuf.Timestamp unbonding_time = 9 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.unbonding_time_);
            }
            // .cosmos.staking.v1beta1.Commission commission = 10 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.commission_);
            }
          }
           {
            // bool jailed = 3 [json_name = "jailed"];
            if (this_._internal_jailed() != 0) {
              total_size += 2;
            }
            // .cosmos.staking.v1beta1.BondStatus status = 4 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // int64 unbonding_height = 8 [json_name = "unbondingHeight"];
            if (this_._internal_unbonding_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_unbonding_height());
            }
            // int64 unbonding_on_hold_ref_count = 12 [json_name = "unbondingOnHoldRefCount"];
            if (this_._internal_unbonding_on_hold_ref_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_unbonding_on_hold_ref_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Validator::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Validator*>(&to_msg);
  auto& from = static_cast<const Validator&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.Validator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_unbonding_ids()->MergeFrom(from._internal_unbonding_ids());
  if (!from._internal_operator_address().empty()) {
    _this->_internal_set_operator_address(from._internal_operator_address());
  }
  if (!from._internal_tokens().empty()) {
    _this->_internal_set_tokens(from._internal_tokens());
  }
  if (!from._internal_delegator_shares().empty()) {
    _this->_internal_set_delegator_shares(from._internal_delegator_shares());
  }
  if (!from._internal_min_self_delegation().empty()) {
    _this->_internal_set_min_self_delegation(from._internal_min_self_delegation());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.consensus_pubkey_ != nullptr);
      if (_this->_impl_.consensus_pubkey_ == nullptr) {
        _this->_impl_.consensus_pubkey_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.consensus_pubkey_);
      } else {
        _this->_impl_.consensus_pubkey_->MergeFrom(*from._impl_.consensus_pubkey_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.description_ != nullptr);
      if (_this->_impl_.description_ == nullptr) {
        _this->_impl_.description_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Description>(arena, *from._impl_.description_);
      } else {
        _this->_impl_.description_->MergeFrom(*from._impl_.description_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.unbonding_time_ != nullptr);
      if (_this->_impl_.unbonding_time_ == nullptr) {
        _this->_impl_.unbonding_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.unbonding_time_);
      } else {
        _this->_impl_.unbonding_time_->MergeFrom(*from._impl_.unbonding_time_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.commission_ != nullptr);
      if (_this->_impl_.commission_ == nullptr) {
        _this->_impl_.commission_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Commission>(arena, *from._impl_.commission_);
      } else {
        _this->_impl_.commission_->MergeFrom(*from._impl_.commission_);
      }
    }
  }
  if (from._internal_jailed() != 0) {
    _this->_impl_.jailed_ = from._impl_.jailed_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_unbonding_height() != 0) {
    _this->_impl_.unbonding_height_ = from._impl_.unbonding_height_;
  }
  if (from._internal_unbonding_on_hold_ref_count() != 0) {
    _this->_impl_.unbonding_on_hold_ref_count_ = from._impl_.unbonding_on_hold_ref_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Validator::CopyFrom(const Validator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.Validator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Validator::InternalSwap(Validator* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.unbonding_ids_.InternalSwap(&other->_impl_.unbonding_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator_address_, &other->_impl_.operator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tokens_, &other->_impl_.tokens_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_shares_, &other->_impl_.delegator_shares_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.min_self_delegation_, &other->_impl_.min_self_delegation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Validator, _impl_.unbonding_on_hold_ref_count_)
      + sizeof(Validator::_impl_.unbonding_on_hold_ref_count_)
      - PROTOBUF_FIELD_OFFSET(Validator, _impl_.consensus_pubkey_)>(
          reinterpret_cast<char*>(&_impl_.consensus_pubkey_),
          reinterpret_cast<char*>(&other->_impl_.consensus_pubkey_));
}

::google::protobuf::Metadata Validator::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValAddresses::_Internal {
 public:
};

ValAddresses::ValAddresses(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.ValAddresses)
}
inline PROTOBUF_NDEBUG_INLINE ValAddresses::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::ValAddresses& from_msg)
      : addresses_{visibility, arena, from.addresses_},
        _cached_size_{0} {}

ValAddresses::ValAddresses(
    ::google::protobuf::Arena* arena,
    const ValAddresses& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValAddresses* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.ValAddresses)
}
inline PROTOBUF_NDEBUG_INLINE ValAddresses::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : addresses_{visibility, arena},
        _cached_size_{0} {}

inline void ValAddresses::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValAddresses::~ValAddresses() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.ValAddresses)
  SharedDtor(*this);
}
inline void ValAddresses::SharedDtor(MessageLite& self) {
  ValAddresses& this_ = static_cast<ValAddresses&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ValAddresses::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValAddresses(arena);
}
constexpr auto ValAddresses::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValAddresses, _impl_.addresses_) +
          decltype(ValAddresses::_impl_.addresses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValAddresses), alignof(ValAddresses), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValAddresses::PlacementNew_,
                                 sizeof(ValAddresses),
                                 alignof(ValAddresses));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValAddresses::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValAddresses_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValAddresses::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValAddresses>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValAddresses::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValAddresses>(), &ValAddresses::ByteSizeLong,
            &ValAddresses::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValAddresses, _impl_._cached_size_),
        false,
    },
    &ValAddresses::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValAddresses::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> ValAddresses::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::ValAddresses>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string addresses = 1 [json_name = "addresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValAddresses, _impl_.addresses_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string addresses = 1 [json_name = "addresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(ValAddresses, _impl_.addresses_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\43\11\0\0\0\0\0\0"
    "cosmos.staking.v1beta1.ValAddresses"
    "addresses"
  }},
};

PROTOBUF_NOINLINE void ValAddresses::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.ValAddresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.addresses_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValAddresses::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValAddresses& this_ = static_cast<const ValAddresses&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValAddresses::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValAddresses& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.ValAddresses)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string addresses = 1 [json_name = "addresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          for (int i = 0, n = this_._internal_addresses_size(); i < n; ++i) {
            const auto& s = this_._internal_addresses().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.ValAddresses.addresses");
            target = stream->WriteString(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.ValAddresses)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValAddresses::ByteSizeLong(const MessageLite& base) {
          const ValAddresses& this_ = static_cast<const ValAddresses&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValAddresses::ByteSizeLong() const {
          const ValAddresses& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.ValAddresses)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string addresses = 1 [json_name = "addresses", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_addresses().size());
              for (int i = 0, n = this_._internal_addresses().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_addresses().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValAddresses::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValAddresses*>(&to_msg);
  auto& from = static_cast<const ValAddresses&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.ValAddresses)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_addresses()->MergeFrom(from._internal_addresses());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValAddresses::CopyFrom(const ValAddresses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.ValAddresses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValAddresses::InternalSwap(ValAddresses* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.addresses_.InternalSwap(&other->_impl_.addresses_);
}

::google::protobuf::Metadata ValAddresses::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DVPair::_Internal {
 public:
};

DVPair::DVPair(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.DVPair)
}
inline PROTOBUF_NDEBUG_INLINE DVPair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::DVPair& from_msg)
      : delegator_address_(arena, from.delegator_address_),
        validator_address_(arena, from.validator_address_),
        _cached_size_{0} {}

DVPair::DVPair(
    ::google::protobuf::Arena* arena,
    const DVPair& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DVPair* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.DVPair)
}
inline PROTOBUF_NDEBUG_INLINE DVPair::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : delegator_address_(arena),
        validator_address_(arena),
        _cached_size_{0} {}

inline void DVPair::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DVPair::~DVPair() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.DVPair)
  SharedDtor(*this);
}
inline void DVPair::SharedDtor(MessageLite& self) {
  DVPair& this_ = static_cast<DVPair&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.delegator_address_.Destroy();
  this_._impl_.validator_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DVPair::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DVPair(arena);
}
constexpr auto DVPair::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DVPair),
                                            alignof(DVPair));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DVPair::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DVPair_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DVPair::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DVPair>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DVPair::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DVPair>(), &DVPair::ByteSizeLong,
            &DVPair::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DVPair, _impl_._cached_size_),
        false,
    },
    &DVPair::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DVPair::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 72, 2> DVPair::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::DVPair>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DVPair, _impl_.validator_address_)}},
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DVPair, _impl_.delegator_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(DVPair, _impl_.delegator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(DVPair, _impl_.validator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\21\21\0\0\0\0\0"
    "cosmos.staking.v1beta1.DVPair"
    "delegator_address"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void DVPair::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.DVPair)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DVPair::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DVPair& this_ = static_cast<const DVPair&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DVPair::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DVPair& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.DVPair)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_delegator_address().empty()) {
            const std::string& _s = this_._internal_delegator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.DVPair.delegator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.DVPair.validator_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.DVPair)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DVPair::ByteSizeLong(const MessageLite& base) {
          const DVPair& this_ = static_cast<const DVPair&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DVPair::ByteSizeLong() const {
          const DVPair& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.DVPair)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_delegator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_address());
            }
            // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DVPair::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DVPair*>(&to_msg);
  auto& from = static_cast<const DVPair&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.DVPair)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DVPair::CopyFrom(const DVPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.DVPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DVPair::InternalSwap(DVPair* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, &other->_impl_.delegator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
}

::google::protobuf::Metadata DVPair::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DVPairs::_Internal {
 public:
};

DVPairs::DVPairs(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.DVPairs)
}
inline PROTOBUF_NDEBUG_INLINE DVPairs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::DVPairs& from_msg)
      : pairs_{visibility, arena, from.pairs_},
        _cached_size_{0} {}

DVPairs::DVPairs(
    ::google::protobuf::Arena* arena,
    const DVPairs& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DVPairs* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.DVPairs)
}
inline PROTOBUF_NDEBUG_INLINE DVPairs::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pairs_{visibility, arena},
        _cached_size_{0} {}

inline void DVPairs::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DVPairs::~DVPairs() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.DVPairs)
  SharedDtor(*this);
}
inline void DVPairs::SharedDtor(MessageLite& self) {
  DVPairs& this_ = static_cast<DVPairs&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DVPairs::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DVPairs(arena);
}
constexpr auto DVPairs::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DVPairs, _impl_.pairs_) +
          decltype(DVPairs::_impl_.pairs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DVPairs), alignof(DVPairs), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DVPairs::PlacementNew_,
                                 sizeof(DVPairs),
                                 alignof(DVPairs));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DVPairs::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DVPairs_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DVPairs::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DVPairs>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DVPairs::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DVPairs>(), &DVPairs::ByteSizeLong,
            &DVPairs::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DVPairs, _impl_._cached_size_),
        false,
    },
    &DVPairs::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DVPairs::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DVPairs::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::DVPairs>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.staking.v1beta1.DVPair pairs = 1 [json_name = "pairs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DVPairs, _impl_.pairs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.staking.v1beta1.DVPair pairs = 1 [json_name = "pairs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DVPairs, _impl_.pairs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::DVPair>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DVPairs::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.DVPairs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pairs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DVPairs::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DVPairs& this_ = static_cast<const DVPairs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DVPairs::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DVPairs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.DVPairs)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.staking.v1beta1.DVPair pairs = 1 [json_name = "pairs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_pairs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_pairs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.DVPairs)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DVPairs::ByteSizeLong(const MessageLite& base) {
          const DVPairs& this_ = static_cast<const DVPairs&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DVPairs::ByteSizeLong() const {
          const DVPairs& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.DVPairs)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.staking.v1beta1.DVPair pairs = 1 [json_name = "pairs", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_pairs_size();
              for (const auto& msg : this_._internal_pairs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DVPairs::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DVPairs*>(&to_msg);
  auto& from = static_cast<const DVPairs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.DVPairs)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pairs()->MergeFrom(
      from._internal_pairs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DVPairs::CopyFrom(const DVPairs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.DVPairs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DVPairs::InternalSwap(DVPairs* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pairs_.InternalSwap(&other->_impl_.pairs_);
}

::google::protobuf::Metadata DVPairs::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DVVTriplet::_Internal {
 public:
};

DVVTriplet::DVVTriplet(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.DVVTriplet)
}
inline PROTOBUF_NDEBUG_INLINE DVVTriplet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::DVVTriplet& from_msg)
      : delegator_address_(arena, from.delegator_address_),
        validator_src_address_(arena, from.validator_src_address_),
        validator_dst_address_(arena, from.validator_dst_address_),
        _cached_size_{0} {}

DVVTriplet::DVVTriplet(
    ::google::protobuf::Arena* arena,
    const DVVTriplet& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DVVTriplet* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.DVVTriplet)
}
inline PROTOBUF_NDEBUG_INLINE DVVTriplet::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : delegator_address_(arena),
        validator_src_address_(arena),
        validator_dst_address_(arena),
        _cached_size_{0} {}

inline void DVVTriplet::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DVVTriplet::~DVVTriplet() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.DVVTriplet)
  SharedDtor(*this);
}
inline void DVVTriplet::SharedDtor(MessageLite& self) {
  DVVTriplet& this_ = static_cast<DVVTriplet&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.delegator_address_.Destroy();
  this_._impl_.validator_src_address_.Destroy();
  this_._impl_.validator_dst_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* DVVTriplet::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DVVTriplet(arena);
}
constexpr auto DVVTriplet::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DVVTriplet),
                                            alignof(DVVTriplet));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DVVTriplet::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DVVTriplet_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DVVTriplet::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DVVTriplet>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DVVTriplet::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DVVTriplet>(), &DVVTriplet::ByteSizeLong,
            &DVVTriplet::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DVVTriplet, _impl_._cached_size_),
        false,
    },
    &DVVTriplet::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DVVTriplet::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 101, 2> DVVTriplet::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::DVVTriplet>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DVVTriplet, _impl_.delegator_address_)}},
    // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(DVVTriplet, _impl_.validator_src_address_)}},
    // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DVVTriplet, _impl_.validator_dst_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(DVVTriplet, _impl_.delegator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(DVVTriplet, _impl_.validator_src_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(DVVTriplet, _impl_.validator_dst_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\21\25\25\0\0\0\0"
    "cosmos.staking.v1beta1.DVVTriplet"
    "delegator_address"
    "validator_src_address"
    "validator_dst_address"
  }},
};

PROTOBUF_NOINLINE void DVVTriplet::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.DVVTriplet)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_src_address_.ClearToEmpty();
  _impl_.validator_dst_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DVVTriplet::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DVVTriplet& this_ = static_cast<const DVVTriplet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DVVTriplet::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DVVTriplet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.DVVTriplet)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_delegator_address().empty()) {
            const std::string& _s = this_._internal_delegator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.DVVTriplet.delegator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_src_address().empty()) {
            const std::string& _s = this_._internal_validator_src_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.DVVTriplet.validator_src_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_dst_address().empty()) {
            const std::string& _s = this_._internal_validator_dst_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.DVVTriplet.validator_dst_address");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.DVVTriplet)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DVVTriplet::ByteSizeLong(const MessageLite& base) {
          const DVVTriplet& this_ = static_cast<const DVVTriplet&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DVVTriplet::ByteSizeLong() const {
          const DVVTriplet& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.DVVTriplet)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_delegator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_address());
            }
            // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_src_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_src_address());
            }
            // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_dst_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_dst_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DVVTriplet::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DVVTriplet*>(&to_msg);
  auto& from = static_cast<const DVVTriplet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.DVVTriplet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_src_address().empty()) {
    _this->_internal_set_validator_src_address(from._internal_validator_src_address());
  }
  if (!from._internal_validator_dst_address().empty()) {
    _this->_internal_set_validator_dst_address(from._internal_validator_dst_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DVVTriplet::CopyFrom(const DVVTriplet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.DVVTriplet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DVVTriplet::InternalSwap(DVVTriplet* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, &other->_impl_.delegator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_src_address_, &other->_impl_.validator_src_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_dst_address_, &other->_impl_.validator_dst_address_, arena);
}

::google::protobuf::Metadata DVVTriplet::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DVVTriplets::_Internal {
 public:
};

DVVTriplets::DVVTriplets(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.DVVTriplets)
}
inline PROTOBUF_NDEBUG_INLINE DVVTriplets::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::DVVTriplets& from_msg)
      : triplets_{visibility, arena, from.triplets_},
        _cached_size_{0} {}

DVVTriplets::DVVTriplets(
    ::google::protobuf::Arena* arena,
    const DVVTriplets& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DVVTriplets* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.DVVTriplets)
}
inline PROTOBUF_NDEBUG_INLINE DVVTriplets::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : triplets_{visibility, arena},
        _cached_size_{0} {}

inline void DVVTriplets::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DVVTriplets::~DVVTriplets() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.DVVTriplets)
  SharedDtor(*this);
}
inline void DVVTriplets::SharedDtor(MessageLite& self) {
  DVVTriplets& this_ = static_cast<DVVTriplets&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* DVVTriplets::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DVVTriplets(arena);
}
constexpr auto DVVTriplets::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DVVTriplets, _impl_.triplets_) +
          decltype(DVVTriplets::_impl_.triplets_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DVVTriplets), alignof(DVVTriplets), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DVVTriplets::PlacementNew_,
                                 sizeof(DVVTriplets),
                                 alignof(DVVTriplets));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DVVTriplets::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DVVTriplets_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DVVTriplets::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DVVTriplets>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DVVTriplets::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DVVTriplets>(), &DVVTriplets::ByteSizeLong,
            &DVVTriplets::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DVVTriplets, _impl_._cached_size_),
        false,
    },
    &DVVTriplets::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DVVTriplets::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DVVTriplets::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::DVVTriplets>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.staking.v1beta1.DVVTriplet triplets = 1 [json_name = "triplets", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DVVTriplets, _impl_.triplets_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.staking.v1beta1.DVVTriplet triplets = 1 [json_name = "triplets", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DVVTriplets, _impl_.triplets_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::DVVTriplet>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DVVTriplets::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.DVVTriplets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.triplets_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DVVTriplets::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DVVTriplets& this_ = static_cast<const DVVTriplets&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DVVTriplets::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DVVTriplets& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.DVVTriplets)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.staking.v1beta1.DVVTriplet triplets = 1 [json_name = "triplets", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_triplets_size());
               i < n; i++) {
            const auto& repfield = this_._internal_triplets().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.DVVTriplets)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DVVTriplets::ByteSizeLong(const MessageLite& base) {
          const DVVTriplets& this_ = static_cast<const DVVTriplets&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DVVTriplets::ByteSizeLong() const {
          const DVVTriplets& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.DVVTriplets)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.staking.v1beta1.DVVTriplet triplets = 1 [json_name = "triplets", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_triplets_size();
              for (const auto& msg : this_._internal_triplets()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DVVTriplets::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DVVTriplets*>(&to_msg);
  auto& from = static_cast<const DVVTriplets&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.DVVTriplets)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_triplets()->MergeFrom(
      from._internal_triplets());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DVVTriplets::CopyFrom(const DVVTriplets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.DVVTriplets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DVVTriplets::InternalSwap(DVVTriplets* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.triplets_.InternalSwap(&other->_impl_.triplets_);
}

::google::protobuf::Metadata DVVTriplets::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Delegation::_Internal {
 public:
};

Delegation::Delegation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.Delegation)
}
inline PROTOBUF_NDEBUG_INLINE Delegation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::Delegation& from_msg)
      : delegator_address_(arena, from.delegator_address_),
        validator_address_(arena, from.validator_address_),
        shares_(arena, from.shares_),
        _cached_size_{0} {}

Delegation::Delegation(
    ::google::protobuf::Arena* arena,
    const Delegation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Delegation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.Delegation)
}
inline PROTOBUF_NDEBUG_INLINE Delegation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : delegator_address_(arena),
        validator_address_(arena),
        shares_(arena),
        _cached_size_{0} {}

inline void Delegation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Delegation::~Delegation() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.Delegation)
  SharedDtor(*this);
}
inline void Delegation::SharedDtor(MessageLite& self) {
  Delegation& this_ = static_cast<Delegation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.delegator_address_.Destroy();
  this_._impl_.validator_address_.Destroy();
  this_._impl_.shares_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Delegation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Delegation(arena);
}
constexpr auto Delegation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Delegation),
                                            alignof(Delegation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Delegation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Delegation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Delegation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Delegation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Delegation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Delegation>(), &Delegation::ByteSizeLong,
            &Delegation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Delegation, _impl_._cached_size_),
        false,
    },
    &Delegation::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Delegation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 82, 2> Delegation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Delegation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Delegation, _impl_.delegator_address_)}},
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Delegation, _impl_.validator_address_)}},
    // string shares = 3 [json_name = "shares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Delegation, _impl_.shares_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Delegation, _impl_.delegator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(Delegation, _impl_.validator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string shares = 3 [json_name = "shares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Delegation, _impl_.shares_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\21\21\6\0\0\0\0"
    "cosmos.staking.v1beta1.Delegation"
    "delegator_address"
    "validator_address"
    "shares"
  }},
};

PROTOBUF_NOINLINE void Delegation::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.Delegation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  _impl_.shares_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Delegation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Delegation& this_ = static_cast<const Delegation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Delegation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Delegation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.Delegation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_delegator_address().empty()) {
            const std::string& _s = this_._internal_delegator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Delegation.delegator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Delegation.validator_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string shares = 3 [json_name = "shares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_shares().empty()) {
            const std::string& _s = this_._internal_shares();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Delegation.shares");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.Delegation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Delegation::ByteSizeLong(const MessageLite& base) {
          const Delegation& this_ = static_cast<const Delegation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Delegation::ByteSizeLong() const {
          const Delegation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.Delegation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_delegator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_address());
            }
            // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
            // string shares = 3 [json_name = "shares", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_shares().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_shares());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Delegation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Delegation*>(&to_msg);
  auto& from = static_cast<const Delegation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.Delegation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  if (!from._internal_shares().empty()) {
    _this->_internal_set_shares(from._internal_shares());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Delegation::CopyFrom(const Delegation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.Delegation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Delegation::InternalSwap(Delegation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, &other->_impl_.delegator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shares_, &other->_impl_.shares_, arena);
}

::google::protobuf::Metadata Delegation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnbondingDelegation::_Internal {
 public:
};

UnbondingDelegation::UnbondingDelegation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.UnbondingDelegation)
}
inline PROTOBUF_NDEBUG_INLINE UnbondingDelegation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::UnbondingDelegation& from_msg)
      : entries_{visibility, arena, from.entries_},
        delegator_address_(arena, from.delegator_address_),
        validator_address_(arena, from.validator_address_),
        _cached_size_{0} {}

UnbondingDelegation::UnbondingDelegation(
    ::google::protobuf::Arena* arena,
    const UnbondingDelegation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnbondingDelegation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.UnbondingDelegation)
}
inline PROTOBUF_NDEBUG_INLINE UnbondingDelegation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        delegator_address_(arena),
        validator_address_(arena),
        _cached_size_{0} {}

inline void UnbondingDelegation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UnbondingDelegation::~UnbondingDelegation() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.UnbondingDelegation)
  SharedDtor(*this);
}
inline void UnbondingDelegation::SharedDtor(MessageLite& self) {
  UnbondingDelegation& this_ = static_cast<UnbondingDelegation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.delegator_address_.Destroy();
  this_._impl_.validator_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* UnbondingDelegation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnbondingDelegation(arena);
}
constexpr auto UnbondingDelegation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_.entries_) +
          decltype(UnbondingDelegation::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(UnbondingDelegation), alignof(UnbondingDelegation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&UnbondingDelegation::PlacementNew_,
                                 sizeof(UnbondingDelegation),
                                 alignof(UnbondingDelegation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnbondingDelegation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnbondingDelegation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnbondingDelegation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnbondingDelegation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnbondingDelegation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnbondingDelegation>(), &UnbondingDelegation::ByteSizeLong,
            &UnbondingDelegation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_._cached_size_),
        false,
    },
    &UnbondingDelegation::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnbondingDelegation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 85, 2> UnbondingDelegation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::UnbondingDelegation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_.delegator_address_)}},
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_.validator_address_)}},
    // repeated .cosmos.staking.v1beta1.UnbondingDelegationEntry entries = 3 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_.delegator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_.validator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.staking.v1beta1.UnbondingDelegationEntry entries = 3 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegation, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::UnbondingDelegationEntry>()},
  }}, {{
    "\52\21\21\0\0\0\0\0"
    "cosmos.staking.v1beta1.UnbondingDelegation"
    "delegator_address"
    "validator_address"
  }},
};

PROTOBUF_NOINLINE void UnbondingDelegation::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.UnbondingDelegation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnbondingDelegation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnbondingDelegation& this_ = static_cast<const UnbondingDelegation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnbondingDelegation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnbondingDelegation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.UnbondingDelegation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_delegator_address().empty()) {
            const std::string& _s = this_._internal_delegator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.UnbondingDelegation.delegator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_address().empty()) {
            const std::string& _s = this_._internal_validator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.UnbondingDelegation.validator_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .cosmos.staking.v1beta1.UnbondingDelegationEntry entries = 3 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entries_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entries().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.UnbondingDelegation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnbondingDelegation::ByteSizeLong(const MessageLite& base) {
          const UnbondingDelegation& this_ = static_cast<const UnbondingDelegation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnbondingDelegation::ByteSizeLong() const {
          const UnbondingDelegation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.UnbondingDelegation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.staking.v1beta1.UnbondingDelegationEntry entries = 3 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_entries_size();
              for (const auto& msg : this_._internal_entries()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_delegator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_address());
            }
            // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnbondingDelegation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnbondingDelegation*>(&to_msg);
  auto& from = static_cast<const UnbondingDelegation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.UnbondingDelegation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _this->_internal_set_validator_address(from._internal_validator_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnbondingDelegation::CopyFrom(const UnbondingDelegation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.UnbondingDelegation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnbondingDelegation::InternalSwap(UnbondingDelegation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, &other->_impl_.delegator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_address_, &other->_impl_.validator_address_, arena);
}

::google::protobuf::Metadata UnbondingDelegation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnbondingDelegationEntry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UnbondingDelegationEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_._has_bits_);
};

void UnbondingDelegationEntry::clear_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.completion_time_ != nullptr) _impl_.completion_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UnbondingDelegationEntry::UnbondingDelegationEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.UnbondingDelegationEntry)
}
inline PROTOBUF_NDEBUG_INLINE UnbondingDelegationEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::UnbondingDelegationEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        initial_balance_(arena, from.initial_balance_),
        balance_(arena, from.balance_) {}

UnbondingDelegationEntry::UnbondingDelegationEntry(
    ::google::protobuf::Arena* arena,
    const UnbondingDelegationEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnbondingDelegationEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.completion_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.completion_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, creation_height_),
           offsetof(Impl_, unbonding_on_hold_ref_count_) -
               offsetof(Impl_, creation_height_) +
               sizeof(Impl_::unbonding_on_hold_ref_count_));

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.UnbondingDelegationEntry)
}
inline PROTOBUF_NDEBUG_INLINE UnbondingDelegationEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        initial_balance_(arena),
        balance_(arena) {}

inline void UnbondingDelegationEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, completion_time_),
           0,
           offsetof(Impl_, unbonding_on_hold_ref_count_) -
               offsetof(Impl_, completion_time_) +
               sizeof(Impl_::unbonding_on_hold_ref_count_));
}
UnbondingDelegationEntry::~UnbondingDelegationEntry() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.UnbondingDelegationEntry)
  SharedDtor(*this);
}
inline void UnbondingDelegationEntry::SharedDtor(MessageLite& self) {
  UnbondingDelegationEntry& this_ = static_cast<UnbondingDelegationEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.initial_balance_.Destroy();
  this_._impl_.balance_.Destroy();
  delete this_._impl_.completion_time_;
  this_._impl_.~Impl_();
}

inline void* UnbondingDelegationEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) UnbondingDelegationEntry(arena);
}
constexpr auto UnbondingDelegationEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UnbondingDelegationEntry),
                                            alignof(UnbondingDelegationEntry));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull UnbondingDelegationEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_UnbondingDelegationEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &UnbondingDelegationEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<UnbondingDelegationEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &UnbondingDelegationEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<UnbondingDelegationEntry>(), &UnbondingDelegationEntry::ByteSizeLong,
            &UnbondingDelegationEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_._cached_size_),
        false,
    },
    &UnbondingDelegationEntry::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* UnbondingDelegationEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 78, 2> UnbondingDelegationEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::UnbondingDelegationEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 creation_height = 1 [json_name = "creationHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UnbondingDelegationEntry, _impl_.creation_height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.creation_height_)}},
    // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.completion_time_)}},
    // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.initial_balance_)}},
    // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.balance_)}},
    // uint64 unbonding_id = 5 [json_name = "unbondingId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UnbondingDelegationEntry, _impl_.unbonding_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.unbonding_id_)}},
    // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(UnbondingDelegationEntry, _impl_.unbonding_on_hold_ref_count_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.unbonding_on_hold_ref_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 creation_height = 1 [json_name = "creationHeight"];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.creation_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.completion_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.initial_balance_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.balance_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 unbonding_id = 5 [json_name = "unbondingId"];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.unbonding_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
    {PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.unbonding_on_hold_ref_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\57\0\0\17\7\0\0\0"
    "cosmos.staking.v1beta1.UnbondingDelegationEntry"
    "initial_balance"
    "balance"
  }},
};

PROTOBUF_NOINLINE void UnbondingDelegationEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.UnbondingDelegationEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.initial_balance_.ClearToEmpty();
  _impl_.balance_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.completion_time_ != nullptr);
    _impl_.completion_time_->Clear();
  }
  ::memset(&_impl_.creation_height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.unbonding_on_hold_ref_count_) -
      reinterpret_cast<char*>(&_impl_.creation_height_)) + sizeof(_impl_.unbonding_on_hold_ref_count_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnbondingDelegationEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnbondingDelegationEntry& this_ = static_cast<const UnbondingDelegationEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnbondingDelegationEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnbondingDelegationEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.UnbondingDelegationEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 creation_height = 1 [json_name = "creationHeight"];
          if (this_._internal_creation_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_creation_height(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.completion_time_, this_._impl_.completion_time_->GetCachedSize(), target,
                stream);
          }

          // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_initial_balance().empty()) {
            const std::string& _s = this_._internal_initial_balance();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.UnbondingDelegationEntry.initial_balance");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_balance().empty()) {
            const std::string& _s = this_._internal_balance();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.UnbondingDelegationEntry.balance");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 unbonding_id = 5 [json_name = "unbondingId"];
          if (this_._internal_unbonding_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_unbonding_id(), target);
          }

          // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
          if (this_._internal_unbonding_on_hold_ref_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_unbonding_on_hold_ref_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.UnbondingDelegationEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnbondingDelegationEntry::ByteSizeLong(const MessageLite& base) {
          const UnbondingDelegationEntry& this_ = static_cast<const UnbondingDelegationEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnbondingDelegationEntry::ByteSizeLong() const {
          const UnbondingDelegationEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.UnbondingDelegationEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_initial_balance().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initial_balance());
            }
            // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_balance().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_balance());
            }
          }
           {
            // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.completion_time_);
            }
          }
           {
            // int64 creation_height = 1 [json_name = "creationHeight"];
            if (this_._internal_creation_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_height());
            }
            // uint64 unbonding_id = 5 [json_name = "unbondingId"];
            if (this_._internal_unbonding_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_unbonding_id());
            }
            // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
            if (this_._internal_unbonding_on_hold_ref_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_unbonding_on_hold_ref_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnbondingDelegationEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnbondingDelegationEntry*>(&to_msg);
  auto& from = static_cast<const UnbondingDelegationEntry&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.UnbondingDelegationEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_initial_balance().empty()) {
    _this->_internal_set_initial_balance(from._internal_initial_balance());
  }
  if (!from._internal_balance().empty()) {
    _this->_internal_set_balance(from._internal_balance());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.completion_time_ != nullptr);
    if (_this->_impl_.completion_time_ == nullptr) {
      _this->_impl_.completion_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.completion_time_);
    } else {
      _this->_impl_.completion_time_->MergeFrom(*from._impl_.completion_time_);
    }
  }
  if (from._internal_creation_height() != 0) {
    _this->_impl_.creation_height_ = from._impl_.creation_height_;
  }
  if (from._internal_unbonding_id() != 0) {
    _this->_impl_.unbonding_id_ = from._impl_.unbonding_id_;
  }
  if (from._internal_unbonding_on_hold_ref_count() != 0) {
    _this->_impl_.unbonding_on_hold_ref_count_ = from._impl_.unbonding_on_hold_ref_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnbondingDelegationEntry::CopyFrom(const UnbondingDelegationEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.UnbondingDelegationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnbondingDelegationEntry::InternalSwap(UnbondingDelegationEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initial_balance_, &other->_impl_.initial_balance_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.balance_, &other->_impl_.balance_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.unbonding_on_hold_ref_count_)
      + sizeof(UnbondingDelegationEntry::_impl_.unbonding_on_hold_ref_count_)
      - PROTOBUF_FIELD_OFFSET(UnbondingDelegationEntry, _impl_.completion_time_)>(
          reinterpret_cast<char*>(&_impl_.completion_time_),
          reinterpret_cast<char*>(&other->_impl_.completion_time_));
}

::google::protobuf::Metadata UnbondingDelegationEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RedelegationEntry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RedelegationEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_._has_bits_);
};

void RedelegationEntry::clear_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.completion_time_ != nullptr) _impl_.completion_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
RedelegationEntry::RedelegationEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.RedelegationEntry)
}
inline PROTOBUF_NDEBUG_INLINE RedelegationEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::RedelegationEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        initial_balance_(arena, from.initial_balance_),
        shares_dst_(arena, from.shares_dst_) {}

RedelegationEntry::RedelegationEntry(
    ::google::protobuf::Arena* arena,
    const RedelegationEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RedelegationEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.completion_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.completion_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, creation_height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, creation_height_),
           offsetof(Impl_, unbonding_on_hold_ref_count_) -
               offsetof(Impl_, creation_height_) +
               sizeof(Impl_::unbonding_on_hold_ref_count_));

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.RedelegationEntry)
}
inline PROTOBUF_NDEBUG_INLINE RedelegationEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        initial_balance_(arena),
        shares_dst_(arena) {}

inline void RedelegationEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, completion_time_),
           0,
           offsetof(Impl_, unbonding_on_hold_ref_count_) -
               offsetof(Impl_, completion_time_) +
               sizeof(Impl_::unbonding_on_hold_ref_count_));
}
RedelegationEntry::~RedelegationEntry() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.RedelegationEntry)
  SharedDtor(*this);
}
inline void RedelegationEntry::SharedDtor(MessageLite& self) {
  RedelegationEntry& this_ = static_cast<RedelegationEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.initial_balance_.Destroy();
  this_._impl_.shares_dst_.Destroy();
  delete this_._impl_.completion_time_;
  this_._impl_.~Impl_();
}

inline void* RedelegationEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RedelegationEntry(arena);
}
constexpr auto RedelegationEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RedelegationEntry),
                                            alignof(RedelegationEntry));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RedelegationEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RedelegationEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RedelegationEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RedelegationEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RedelegationEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RedelegationEntry>(), &RedelegationEntry::ByteSizeLong,
            &RedelegationEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_._cached_size_),
        false,
    },
    &RedelegationEntry::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RedelegationEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 74, 2> RedelegationEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::RedelegationEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 creation_height = 1 [json_name = "creationHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RedelegationEntry, _impl_.creation_height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.creation_height_)}},
    // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.completion_time_)}},
    // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.initial_balance_)}},
    // string shares_dst = 4 [json_name = "sharesDst", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.shares_dst_)}},
    // uint64 unbonding_id = 5 [json_name = "unbondingId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RedelegationEntry, _impl_.unbonding_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.unbonding_id_)}},
    // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RedelegationEntry, _impl_.unbonding_on_hold_ref_count_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.unbonding_on_hold_ref_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 creation_height = 1 [json_name = "creationHeight"];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.creation_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.completion_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.initial_balance_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string shares_dst = 4 [json_name = "sharesDst", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.shares_dst_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 unbonding_id = 5 [json_name = "unbondingId"];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.unbonding_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.unbonding_on_hold_ref_count_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\50\0\0\17\12\0\0\0"
    "cosmos.staking.v1beta1.RedelegationEntry"
    "initial_balance"
    "shares_dst"
  }},
};

PROTOBUF_NOINLINE void RedelegationEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.RedelegationEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.initial_balance_.ClearToEmpty();
  _impl_.shares_dst_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.completion_time_ != nullptr);
    _impl_.completion_time_->Clear();
  }
  ::memset(&_impl_.creation_height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.unbonding_on_hold_ref_count_) -
      reinterpret_cast<char*>(&_impl_.creation_height_)) + sizeof(_impl_.unbonding_on_hold_ref_count_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RedelegationEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RedelegationEntry& this_ = static_cast<const RedelegationEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RedelegationEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RedelegationEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.RedelegationEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 creation_height = 1 [json_name = "creationHeight"];
          if (this_._internal_creation_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_creation_height(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.completion_time_, this_._impl_.completion_time_->GetCachedSize(), target,
                stream);
          }

          // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_initial_balance().empty()) {
            const std::string& _s = this_._internal_initial_balance();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.RedelegationEntry.initial_balance");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string shares_dst = 4 [json_name = "sharesDst", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_shares_dst().empty()) {
            const std::string& _s = this_._internal_shares_dst();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.RedelegationEntry.shares_dst");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // uint64 unbonding_id = 5 [json_name = "unbondingId"];
          if (this_._internal_unbonding_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_unbonding_id(), target);
          }

          // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
          if (this_._internal_unbonding_on_hold_ref_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_unbonding_on_hold_ref_count(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.RedelegationEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RedelegationEntry::ByteSizeLong(const MessageLite& base) {
          const RedelegationEntry& this_ = static_cast<const RedelegationEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RedelegationEntry::ByteSizeLong() const {
          const RedelegationEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.RedelegationEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string initial_balance = 3 [json_name = "initialBalance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_initial_balance().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_initial_balance());
            }
            // string shares_dst = 4 [json_name = "sharesDst", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_shares_dst().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_shares_dst());
            }
          }
           {
            // .google.protobuf.Timestamp completion_time = 2 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.completion_time_);
            }
          }
           {
            // int64 creation_height = 1 [json_name = "creationHeight"];
            if (this_._internal_creation_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_creation_height());
            }
            // uint64 unbonding_id = 5 [json_name = "unbondingId"];
            if (this_._internal_unbonding_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_unbonding_id());
            }
            // int64 unbonding_on_hold_ref_count = 6 [json_name = "unbondingOnHoldRefCount"];
            if (this_._internal_unbonding_on_hold_ref_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_unbonding_on_hold_ref_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RedelegationEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RedelegationEntry*>(&to_msg);
  auto& from = static_cast<const RedelegationEntry&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.RedelegationEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_initial_balance().empty()) {
    _this->_internal_set_initial_balance(from._internal_initial_balance());
  }
  if (!from._internal_shares_dst().empty()) {
    _this->_internal_set_shares_dst(from._internal_shares_dst());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.completion_time_ != nullptr);
    if (_this->_impl_.completion_time_ == nullptr) {
      _this->_impl_.completion_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.completion_time_);
    } else {
      _this->_impl_.completion_time_->MergeFrom(*from._impl_.completion_time_);
    }
  }
  if (from._internal_creation_height() != 0) {
    _this->_impl_.creation_height_ = from._impl_.creation_height_;
  }
  if (from._internal_unbonding_id() != 0) {
    _this->_impl_.unbonding_id_ = from._impl_.unbonding_id_;
  }
  if (from._internal_unbonding_on_hold_ref_count() != 0) {
    _this->_impl_.unbonding_on_hold_ref_count_ = from._impl_.unbonding_on_hold_ref_count_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RedelegationEntry::CopyFrom(const RedelegationEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.RedelegationEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RedelegationEntry::InternalSwap(RedelegationEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initial_balance_, &other->_impl_.initial_balance_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shares_dst_, &other->_impl_.shares_dst_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.unbonding_on_hold_ref_count_)
      + sizeof(RedelegationEntry::_impl_.unbonding_on_hold_ref_count_)
      - PROTOBUF_FIELD_OFFSET(RedelegationEntry, _impl_.completion_time_)>(
          reinterpret_cast<char*>(&_impl_.completion_time_),
          reinterpret_cast<char*>(&other->_impl_.completion_time_));
}

::google::protobuf::Metadata RedelegationEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Redelegation::_Internal {
 public:
};

Redelegation::Redelegation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.Redelegation)
}
inline PROTOBUF_NDEBUG_INLINE Redelegation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::Redelegation& from_msg)
      : entries_{visibility, arena, from.entries_},
        delegator_address_(arena, from.delegator_address_),
        validator_src_address_(arena, from.validator_src_address_),
        validator_dst_address_(arena, from.validator_dst_address_),
        _cached_size_{0} {}

Redelegation::Redelegation(
    ::google::protobuf::Arena* arena,
    const Redelegation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Redelegation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.Redelegation)
}
inline PROTOBUF_NDEBUG_INLINE Redelegation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        delegator_address_(arena),
        validator_src_address_(arena),
        validator_dst_address_(arena),
        _cached_size_{0} {}

inline void Redelegation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Redelegation::~Redelegation() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.Redelegation)
  SharedDtor(*this);
}
inline void Redelegation::SharedDtor(MessageLite& self) {
  Redelegation& this_ = static_cast<Redelegation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.delegator_address_.Destroy();
  this_._impl_.validator_src_address_.Destroy();
  this_._impl_.validator_dst_address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Redelegation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Redelegation(arena);
}
constexpr auto Redelegation::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.entries_) +
          decltype(Redelegation::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Redelegation), alignof(Redelegation), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Redelegation::PlacementNew_,
                                 sizeof(Redelegation),
                                 alignof(Redelegation));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Redelegation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Redelegation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Redelegation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Redelegation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Redelegation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Redelegation>(), &Redelegation::ByteSizeLong,
            &Redelegation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Redelegation, _impl_._cached_size_),
        false,
    },
    &Redelegation::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Redelegation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 103, 2> Redelegation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Redelegation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.entries_)}},
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.delegator_address_)}},
    // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.validator_src_address_)}},
    // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.validator_dst_address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.delegator_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.validator_src_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
    {PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.validator_dst_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Redelegation, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::RedelegationEntry>()},
  }}, {{
    "\43\21\25\25\0\0\0\0"
    "cosmos.staking.v1beta1.Redelegation"
    "delegator_address"
    "validator_src_address"
    "validator_dst_address"
  }},
};

PROTOBUF_NOINLINE void Redelegation::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.Redelegation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _impl_.delegator_address_.ClearToEmpty();
  _impl_.validator_src_address_.ClearToEmpty();
  _impl_.validator_dst_address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Redelegation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Redelegation& this_ = static_cast<const Redelegation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Redelegation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Redelegation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.Redelegation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_delegator_address().empty()) {
            const std::string& _s = this_._internal_delegator_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Redelegation.delegator_address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_src_address().empty()) {
            const std::string& _s = this_._internal_validator_src_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Redelegation.validator_src_address");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
          if (!this_._internal_validator_dst_address().empty()) {
            const std::string& _s = this_._internal_validator_dst_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Redelegation.validator_dst_address");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entries_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entries().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.Redelegation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Redelegation::ByteSizeLong(const MessageLite& base) {
          const Redelegation& this_ = static_cast<const Redelegation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Redelegation::ByteSizeLong() const {
          const Redelegation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.Redelegation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.staking.v1beta1.RedelegationEntry entries = 4 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_entries_size();
              for (const auto& msg : this_._internal_entries()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_delegator_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_delegator_address());
            }
            // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_src_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_src_address());
            }
            // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
            if (!this_._internal_validator_dst_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_validator_dst_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Redelegation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Redelegation*>(&to_msg);
  auto& from = static_cast<const Redelegation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.Redelegation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  if (!from._internal_delegator_address().empty()) {
    _this->_internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_src_address().empty()) {
    _this->_internal_set_validator_src_address(from._internal_validator_src_address());
  }
  if (!from._internal_validator_dst_address().empty()) {
    _this->_internal_set_validator_dst_address(from._internal_validator_dst_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Redelegation::CopyFrom(const Redelegation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.Redelegation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Redelegation::InternalSwap(Redelegation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.delegator_address_, &other->_impl_.delegator_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_src_address_, &other->_impl_.validator_src_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.validator_dst_address_, &other->_impl_.validator_dst_address_, arena);
}

::google::protobuf::Metadata Redelegation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Params::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Params>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Params, _impl_._has_bits_);
};

void Params::clear_unbonding_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unbonding_time_ != nullptr) _impl_.unbonding_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::Params& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        bond_denom_(arena, from.bond_denom_),
        min_commission_rate_(arena, from.min_commission_rate_) {}

Params::Params(
    ::google::protobuf::Arena* arena,
    const Params& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Params* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.unbonding_time_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.unbonding_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_validators_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, max_validators_),
           offsetof(Impl_, historical_entries_) -
               offsetof(Impl_, max_validators_) +
               sizeof(Impl_::historical_entries_));

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        bond_denom_(arena),
        min_commission_rate_(arena) {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, unbonding_time_),
           0,
           offsetof(Impl_, historical_entries_) -
               offsetof(Impl_, unbonding_time_) +
               sizeof(Impl_::historical_entries_));
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.bond_denom_.Destroy();
  this_._impl_.min_commission_rate_.Destroy();
  delete this_._impl_.unbonding_time_;
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Params),
                                            alignof(Params));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 67, 2> Params::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Params, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .google.protobuf.Duration unbonding_time = 1 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.unbonding_time_)}},
    // uint32 max_validators = 2 [json_name = "maxValidators"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Params, _impl_.max_validators_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.max_validators_)}},
    // uint32 max_entries = 3 [json_name = "maxEntries"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Params, _impl_.max_entries_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.max_entries_)}},
    // uint32 historical_entries = 4 [json_name = "historicalEntries"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Params, _impl_.historical_entries_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.historical_entries_)}},
    // string bond_denom = 5 [json_name = "bondDenom"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.bond_denom_)}},
    // string min_commission_rate = 6 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"min_commission_rate\"", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.min_commission_rate_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Duration unbonding_time = 1 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.unbonding_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 max_validators = 2 [json_name = "maxValidators"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.max_validators_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 max_entries = 3 [json_name = "maxEntries"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.max_entries_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 historical_entries = 4 [json_name = "historicalEntries"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.historical_entries_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string bond_denom = 5 [json_name = "bondDenom"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.bond_denom_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string min_commission_rate = 6 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"min_commission_rate\"", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.min_commission_rate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
    "\35\0\0\0\0\12\23\0"
    "cosmos.staking.v1beta1.Params"
    "bond_denom"
    "min_commission_rate"
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bond_denom_.ClearToEmpty();
  _impl_.min_commission_rate_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.unbonding_time_ != nullptr);
    _impl_.unbonding_time_->Clear();
  }
  ::memset(&_impl_.max_validators_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.historical_entries_) -
      reinterpret_cast<char*>(&_impl_.max_validators_)) + sizeof(_impl_.historical_entries_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration unbonding_time = 1 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.unbonding_time_, this_._impl_.unbonding_time_->GetCachedSize(), target,
                stream);
          }

          // uint32 max_validators = 2 [json_name = "maxValidators"];
          if (this_._internal_max_validators() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_max_validators(), target);
          }

          // uint32 max_entries = 3 [json_name = "maxEntries"];
          if (this_._internal_max_entries() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_max_entries(), target);
          }

          // uint32 historical_entries = 4 [json_name = "historicalEntries"];
          if (this_._internal_historical_entries() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_historical_entries(), target);
          }

          // string bond_denom = 5 [json_name = "bondDenom"];
          if (!this_._internal_bond_denom().empty()) {
            const std::string& _s = this_._internal_bond_denom();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Params.bond_denom");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string min_commission_rate = 6 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"min_commission_rate\"", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_min_commission_rate().empty()) {
            const std::string& _s = this_._internal_min_commission_rate();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Params.min_commission_rate");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string bond_denom = 5 [json_name = "bondDenom"];
            if (!this_._internal_bond_denom().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bond_denom());
            }
            // string min_commission_rate = 6 [json_name = "minCommissionRate", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.moretags) = "yaml:\"min_commission_rate\"", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_min_commission_rate().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_min_commission_rate());
            }
          }
           {
            // .google.protobuf.Duration unbonding_time = 1 [json_name = "unbondingTime", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.unbonding_time_);
            }
          }
           {
            // uint32 max_validators = 2 [json_name = "maxValidators"];
            if (this_._internal_max_validators() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_validators());
            }
            // uint32 max_entries = 3 [json_name = "maxEntries"];
            if (this_._internal_max_entries() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_max_entries());
            }
            // uint32 historical_entries = 4 [json_name = "historicalEntries"];
            if (this_._internal_historical_entries() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_historical_entries());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_bond_denom().empty()) {
    _this->_internal_set_bond_denom(from._internal_bond_denom());
  }
  if (!from._internal_min_commission_rate().empty()) {
    _this->_internal_set_min_commission_rate(from._internal_min_commission_rate());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.unbonding_time_ != nullptr);
    if (_this->_impl_.unbonding_time_ == nullptr) {
      _this->_impl_.unbonding_time_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.unbonding_time_);
    } else {
      _this->_impl_.unbonding_time_->MergeFrom(*from._impl_.unbonding_time_);
    }
  }
  if (from._internal_max_validators() != 0) {
    _this->_impl_.max_validators_ = from._impl_.max_validators_;
  }
  if (from._internal_max_entries() != 0) {
    _this->_impl_.max_entries_ = from._impl_.max_entries_;
  }
  if (from._internal_historical_entries() != 0) {
    _this->_impl_.historical_entries_ = from._impl_.historical_entries_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bond_denom_, &other->_impl_.bond_denom_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.min_commission_rate_, &other->_impl_.min_commission_rate_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Params, _impl_.historical_entries_)
      + sizeof(Params::_impl_.historical_entries_)
      - PROTOBUF_FIELD_OFFSET(Params, _impl_.unbonding_time_)>(
          reinterpret_cast<char*>(&_impl_.unbonding_time_),
          reinterpret_cast<char*>(&other->_impl_.unbonding_time_));
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DelegationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DelegationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_._has_bits_);
};

void DelegationResponse::clear_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.balance_ != nullptr) _impl_.balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
DelegationResponse::DelegationResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.DelegationResponse)
}
inline PROTOBUF_NDEBUG_INLINE DelegationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::DelegationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DelegationResponse::DelegationResponse(
    ::google::protobuf::Arena* arena,
    const DelegationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DelegationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.delegation_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Delegation>(
                              arena, *from._impl_.delegation_)
                        : nullptr;
  _impl_.balance_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::v1beta1::Coin>(
                              arena, *from._impl_.balance_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.DelegationResponse)
}
inline PROTOBUF_NDEBUG_INLINE DelegationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DelegationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, delegation_),
           0,
           offsetof(Impl_, balance_) -
               offsetof(Impl_, delegation_) +
               sizeof(Impl_::balance_));
}
DelegationResponse::~DelegationResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.DelegationResponse)
  SharedDtor(*this);
}
inline void DelegationResponse::SharedDtor(MessageLite& self) {
  DelegationResponse& this_ = static_cast<DelegationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.delegation_;
  delete this_._impl_.balance_;
  this_._impl_.~Impl_();
}

inline void* DelegationResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DelegationResponse(arena);
}
constexpr auto DelegationResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DelegationResponse),
                                            alignof(DelegationResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DelegationResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DelegationResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DelegationResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DelegationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DelegationResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DelegationResponse>(), &DelegationResponse::ByteSizeLong,
            &DelegationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_._cached_size_),
        false,
    },
    &DelegationResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DelegationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DelegationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::DelegationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_.balance_)}},
    // .cosmos.staking.v1beta1.Delegation delegation = 1 [json_name = "delegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_.delegation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.staking.v1beta1.Delegation delegation = 1 [json_name = "delegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_.delegation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_.balance_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Delegation>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DelegationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.DelegationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.delegation_ != nullptr);
      _impl_.delegation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.balance_ != nullptr);
      _impl_.balance_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DelegationResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DelegationResponse& this_ = static_cast<const DelegationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DelegationResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DelegationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.DelegationResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.staking.v1beta1.Delegation delegation = 1 [json_name = "delegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.delegation_, this_._impl_.delegation_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.balance_, this_._impl_.balance_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.DelegationResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DelegationResponse::ByteSizeLong(const MessageLite& base) {
          const DelegationResponse& this_ = static_cast<const DelegationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DelegationResponse::ByteSizeLong() const {
          const DelegationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.DelegationResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .cosmos.staking.v1beta1.Delegation delegation = 1 [json_name = "delegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.delegation_);
            }
            // .cosmos.base.v1beta1.Coin balance = 2 [json_name = "balance", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.balance_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DelegationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DelegationResponse*>(&to_msg);
  auto& from = static_cast<const DelegationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.DelegationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.delegation_ != nullptr);
      if (_this->_impl_.delegation_ == nullptr) {
        _this->_impl_.delegation_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Delegation>(arena, *from._impl_.delegation_);
      } else {
        _this->_impl_.delegation_->MergeFrom(*from._impl_.delegation_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.balance_ != nullptr);
      if (_this->_impl_.balance_ == nullptr) {
        _this->_impl_.balance_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::base::v1beta1::Coin>(arena, *from._impl_.balance_);
      } else {
        _this->_impl_.balance_->MergeFrom(*from._impl_.balance_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DelegationResponse::CopyFrom(const DelegationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.DelegationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DelegationResponse::InternalSwap(DelegationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_.balance_)
      + sizeof(DelegationResponse::_impl_.balance_)
      - PROTOBUF_FIELD_OFFSET(DelegationResponse, _impl_.delegation_)>(
          reinterpret_cast<char*>(&_impl_.delegation_),
          reinterpret_cast<char*>(&other->_impl_.delegation_));
}

::google::protobuf::Metadata DelegationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RedelegationEntryResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RedelegationEntryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RedelegationEntryResponse, _impl_._has_bits_);
};

RedelegationEntryResponse::RedelegationEntryResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.RedelegationEntryResponse)
}
inline PROTOBUF_NDEBUG_INLINE RedelegationEntryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::RedelegationEntryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        balance_(arena, from.balance_) {}

RedelegationEntryResponse::RedelegationEntryResponse(
    ::google::protobuf::Arena* arena,
    const RedelegationEntryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RedelegationEntryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.redelegation_entry_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::RedelegationEntry>(
                              arena, *from._impl_.redelegation_entry_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.RedelegationEntryResponse)
}
inline PROTOBUF_NDEBUG_INLINE RedelegationEntryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        balance_(arena) {}

inline void RedelegationEntryResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.redelegation_entry_ = {};
}
RedelegationEntryResponse::~RedelegationEntryResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.RedelegationEntryResponse)
  SharedDtor(*this);
}
inline void RedelegationEntryResponse::SharedDtor(MessageLite& self) {
  RedelegationEntryResponse& this_ = static_cast<RedelegationEntryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.balance_.Destroy();
  delete this_._impl_.redelegation_entry_;
  this_._impl_.~Impl_();
}

inline void* RedelegationEntryResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RedelegationEntryResponse(arena);
}
constexpr auto RedelegationEntryResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RedelegationEntryResponse),
                                            alignof(RedelegationEntryResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RedelegationEntryResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RedelegationEntryResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RedelegationEntryResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RedelegationEntryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RedelegationEntryResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RedelegationEntryResponse>(), &RedelegationEntryResponse::ByteSizeLong,
            &RedelegationEntryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RedelegationEntryResponse, _impl_._cached_size_),
        false,
    },
    &RedelegationEntryResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RedelegationEntryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 64, 2> RedelegationEntryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RedelegationEntryResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967286,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::RedelegationEntryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntryResponse, _impl_.balance_)}},
    // .cosmos.staking.v1beta1.RedelegationEntry redelegation_entry = 1 [json_name = "redelegationEntry", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RedelegationEntryResponse, _impl_.redelegation_entry_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.staking.v1beta1.RedelegationEntry redelegation_entry = 1 [json_name = "redelegationEntry", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntryResponse, _impl_.redelegation_entry_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(RedelegationEntryResponse, _impl_.balance_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::RedelegationEntry>()},
  }}, {{
    "\60\0\7\0\0\0\0\0"
    "cosmos.staking.v1beta1.RedelegationEntryResponse"
    "balance"
  }},
};

PROTOBUF_NOINLINE void RedelegationEntryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.RedelegationEntryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.balance_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.redelegation_entry_ != nullptr);
    _impl_.redelegation_entry_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RedelegationEntryResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RedelegationEntryResponse& this_ = static_cast<const RedelegationEntryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RedelegationEntryResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RedelegationEntryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.RedelegationEntryResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.staking.v1beta1.RedelegationEntry redelegation_entry = 1 [json_name = "redelegationEntry", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.redelegation_entry_, this_._impl_.redelegation_entry_->GetCachedSize(), target,
                stream);
          }

          // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_balance().empty()) {
            const std::string& _s = this_._internal_balance();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.RedelegationEntryResponse.balance");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.RedelegationEntryResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RedelegationEntryResponse::ByteSizeLong(const MessageLite& base) {
          const RedelegationEntryResponse& this_ = static_cast<const RedelegationEntryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RedelegationEntryResponse::ByteSizeLong() const {
          const RedelegationEntryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.RedelegationEntryResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string balance = 4 [json_name = "balance", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_balance().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_balance());
            }
          }
           {
            // .cosmos.staking.v1beta1.RedelegationEntry redelegation_entry = 1 [json_name = "redelegationEntry", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.redelegation_entry_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RedelegationEntryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RedelegationEntryResponse*>(&to_msg);
  auto& from = static_cast<const RedelegationEntryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.RedelegationEntryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_balance().empty()) {
    _this->_internal_set_balance(from._internal_balance());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.redelegation_entry_ != nullptr);
    if (_this->_impl_.redelegation_entry_ == nullptr) {
      _this->_impl_.redelegation_entry_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::RedelegationEntry>(arena, *from._impl_.redelegation_entry_);
    } else {
      _this->_impl_.redelegation_entry_->MergeFrom(*from._impl_.redelegation_entry_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RedelegationEntryResponse::CopyFrom(const RedelegationEntryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.RedelegationEntryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RedelegationEntryResponse::InternalSwap(RedelegationEntryResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.balance_, &other->_impl_.balance_, arena);
  swap(_impl_.redelegation_entry_, other->_impl_.redelegation_entry_);
}

::google::protobuf::Metadata RedelegationEntryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RedelegationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<RedelegationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_._has_bits_);
};

RedelegationResponse::RedelegationResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.RedelegationResponse)
}
inline PROTOBUF_NDEBUG_INLINE RedelegationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::RedelegationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entries_{visibility, arena, from.entries_} {}

RedelegationResponse::RedelegationResponse(
    ::google::protobuf::Arena* arena,
    const RedelegationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RedelegationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.redelegation_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Redelegation>(
                              arena, *from._impl_.redelegation_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.RedelegationResponse)
}
inline PROTOBUF_NDEBUG_INLINE RedelegationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        entries_{visibility, arena} {}

inline void RedelegationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.redelegation_ = {};
}
RedelegationResponse::~RedelegationResponse() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.RedelegationResponse)
  SharedDtor(*this);
}
inline void RedelegationResponse::SharedDtor(MessageLite& self) {
  RedelegationResponse& this_ = static_cast<RedelegationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.redelegation_;
  this_._impl_.~Impl_();
}

inline void* RedelegationResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RedelegationResponse(arena);
}
constexpr auto RedelegationResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_.entries_) +
          decltype(RedelegationResponse::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RedelegationResponse), alignof(RedelegationResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RedelegationResponse::PlacementNew_,
                                 sizeof(RedelegationResponse),
                                 alignof(RedelegationResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RedelegationResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RedelegationResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RedelegationResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RedelegationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RedelegationResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RedelegationResponse>(), &RedelegationResponse::ByteSizeLong,
            &RedelegationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_._cached_size_),
        false,
    },
    &RedelegationResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RedelegationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> RedelegationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::RedelegationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.staking.v1beta1.RedelegationEntryResponse entries = 2 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_.entries_)}},
    // .cosmos.staking.v1beta1.Redelegation redelegation = 1 [json_name = "redelegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_.redelegation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.staking.v1beta1.Redelegation redelegation = 1 [json_name = "redelegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_.redelegation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.staking.v1beta1.RedelegationEntryResponse entries = 2 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(RedelegationResponse, _impl_.entries_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Redelegation>()},
    {::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::RedelegationEntryResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RedelegationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.RedelegationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.redelegation_ != nullptr);
    _impl_.redelegation_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RedelegationResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RedelegationResponse& this_ = static_cast<const RedelegationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RedelegationResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RedelegationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.RedelegationResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.staking.v1beta1.Redelegation redelegation = 1 [json_name = "redelegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.redelegation_, this_._impl_.redelegation_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmos.staking.v1beta1.RedelegationEntryResponse entries = 2 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entries_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entries().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.RedelegationResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RedelegationResponse::ByteSizeLong(const MessageLite& base) {
          const RedelegationResponse& this_ = static_cast<const RedelegationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RedelegationResponse::ByteSizeLong() const {
          const RedelegationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.RedelegationResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.staking.v1beta1.RedelegationEntryResponse entries = 2 [json_name = "entries", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_entries_size();
              for (const auto& msg : this_._internal_entries()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.staking.v1beta1.Redelegation redelegation = 1 [json_name = "redelegation", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.redelegation_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RedelegationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RedelegationResponse*>(&to_msg);
  auto& from = static_cast<const RedelegationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.RedelegationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.redelegation_ != nullptr);
    if (_this->_impl_.redelegation_ == nullptr) {
      _this->_impl_.redelegation_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::staking::v1beta1::Redelegation>(arena, *from._impl_.redelegation_);
    } else {
      _this->_impl_.redelegation_->MergeFrom(*from._impl_.redelegation_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RedelegationResponse::CopyFrom(const RedelegationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.RedelegationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RedelegationResponse::InternalSwap(RedelegationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
  swap(_impl_.redelegation_, other->_impl_.redelegation_);
}

::google::protobuf::Metadata RedelegationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pool::_Internal {
 public:
};

Pool::Pool(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.Pool)
}
inline PROTOBUF_NDEBUG_INLINE Pool::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::Pool& from_msg)
      : not_bonded_tokens_(arena, from.not_bonded_tokens_),
        bonded_tokens_(arena, from.bonded_tokens_),
        _cached_size_{0} {}

Pool::Pool(
    ::google::protobuf::Arena* arena,
    const Pool& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Pool* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.Pool)
}
inline PROTOBUF_NDEBUG_INLINE Pool::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : not_bonded_tokens_(arena),
        bonded_tokens_(arena),
        _cached_size_{0} {}

inline void Pool::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Pool::~Pool() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.Pool)
  SharedDtor(*this);
}
inline void Pool::SharedDtor(MessageLite& self) {
  Pool& this_ = static_cast<Pool&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.not_bonded_tokens_.Destroy();
  this_._impl_.bonded_tokens_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Pool::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Pool(arena);
}
constexpr auto Pool::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Pool),
                                            alignof(Pool));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Pool::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Pool_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Pool::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Pool>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Pool::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Pool>(), &Pool::ByteSizeLong,
            &Pool::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Pool, _impl_._cached_size_),
        false,
    },
    &Pool::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Pool::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> Pool::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::Pool>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string bonded_tokens = 2 [json_name = "bondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Pool, _impl_.bonded_tokens_)}},
    // string not_bonded_tokens = 1 [json_name = "notBondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "not_bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Pool, _impl_.not_bonded_tokens_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string not_bonded_tokens = 1 [json_name = "notBondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "not_bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Pool, _impl_.not_bonded_tokens_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bonded_tokens = 2 [json_name = "bondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Pool, _impl_.bonded_tokens_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\21\15\0\0\0\0\0"
    "cosmos.staking.v1beta1.Pool"
    "not_bonded_tokens"
    "bonded_tokens"
  }},
};

PROTOBUF_NOINLINE void Pool::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.Pool)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.not_bonded_tokens_.ClearToEmpty();
  _impl_.bonded_tokens_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Pool::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Pool& this_ = static_cast<const Pool&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Pool::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Pool& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.Pool)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string not_bonded_tokens = 1 [json_name = "notBondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "not_bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
          if (!this_._internal_not_bonded_tokens().empty()) {
            const std::string& _s = this_._internal_not_bonded_tokens();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Pool.not_bonded_tokens");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string bonded_tokens = 2 [json_name = "bondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
          if (!this_._internal_bonded_tokens().empty()) {
            const std::string& _s = this_._internal_bonded_tokens();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.staking.v1beta1.Pool.bonded_tokens");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.Pool)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Pool::ByteSizeLong(const MessageLite& base) {
          const Pool& this_ = static_cast<const Pool&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Pool::ByteSizeLong() const {
          const Pool& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.Pool)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string not_bonded_tokens = 1 [json_name = "notBondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "not_bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
            if (!this_._internal_not_bonded_tokens().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_not_bonded_tokens());
            }
            // string bonded_tokens = 2 [json_name = "bondedTokens", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.gogoproto.jsontag) = "bonded_tokens", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
            if (!this_._internal_bonded_tokens().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_bonded_tokens());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Pool::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pool*>(&to_msg);
  auto& from = static_cast<const Pool&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.Pool)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_not_bonded_tokens().empty()) {
    _this->_internal_set_not_bonded_tokens(from._internal_not_bonded_tokens());
  }
  if (!from._internal_bonded_tokens().empty()) {
    _this->_internal_set_bonded_tokens(from._internal_bonded_tokens());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pool::CopyFrom(const Pool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.Pool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pool::InternalSwap(Pool* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.not_bonded_tokens_, &other->_impl_.not_bonded_tokens_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bonded_tokens_, &other->_impl_.bonded_tokens_, arena);
}

::google::protobuf::Metadata Pool::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorUpdates::_Internal {
 public:
};

void ValidatorUpdates::clear_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updates_.Clear();
}
ValidatorUpdates::ValidatorUpdates(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.ValidatorUpdates)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorUpdates::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::staking::v1beta1::ValidatorUpdates& from_msg)
      : updates_{visibility, arena, from.updates_},
        _cached_size_{0} {}

ValidatorUpdates::ValidatorUpdates(
    ::google::protobuf::Arena* arena,
    const ValidatorUpdates& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorUpdates* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.ValidatorUpdates)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorUpdates::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : updates_{visibility, arena},
        _cached_size_{0} {}

inline void ValidatorUpdates::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidatorUpdates::~ValidatorUpdates() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.ValidatorUpdates)
  SharedDtor(*this);
}
inline void ValidatorUpdates::SharedDtor(MessageLite& self) {
  ValidatorUpdates& this_ = static_cast<ValidatorUpdates&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ValidatorUpdates::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorUpdates(arena);
}
constexpr auto ValidatorUpdates::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorUpdates, _impl_.updates_) +
          decltype(ValidatorUpdates::_impl_.updates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ValidatorUpdates), alignof(ValidatorUpdates), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorUpdates::PlacementNew_,
                                 sizeof(ValidatorUpdates),
                                 alignof(ValidatorUpdates));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorUpdates::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorUpdates_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorUpdates::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorUpdates>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorUpdates::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorUpdates>(), &ValidatorUpdates::ByteSizeLong,
            &ValidatorUpdates::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorUpdates, _impl_._cached_size_),
        false,
    },
    &ValidatorUpdates::kDescriptorMethods,
    &descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorUpdates::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ValidatorUpdates::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::staking::v1beta1::ValidatorUpdates>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .tendermint.abci.ValidatorUpdate updates = 1 [json_name = "updates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorUpdates, _impl_.updates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .tendermint.abci.ValidatorUpdate updates = 1 [json_name = "updates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorUpdates, _impl_.updates_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ValidatorUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ValidatorUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.ValidatorUpdates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.updates_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorUpdates::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorUpdates& this_ = static_cast<const ValidatorUpdates&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorUpdates::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorUpdates& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.ValidatorUpdates)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .tendermint.abci.ValidatorUpdate updates = 1 [json_name = "updates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_updates_size());
               i < n; i++) {
            const auto& repfield = this_._internal_updates().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.ValidatorUpdates)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorUpdates::ByteSizeLong(const MessageLite& base) {
          const ValidatorUpdates& this_ = static_cast<const ValidatorUpdates&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorUpdates::ByteSizeLong() const {
          const ValidatorUpdates& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.ValidatorUpdates)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.ValidatorUpdate updates = 1 [json_name = "updates", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_updates_size();
              for (const auto& msg : this_._internal_updates()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorUpdates::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorUpdates*>(&to_msg);
  auto& from = static_cast<const ValidatorUpdates&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.ValidatorUpdates)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_updates()->MergeFrom(
      from._internal_updates());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorUpdates::CopyFrom(const ValidatorUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.ValidatorUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorUpdates::InternalSwap(ValidatorUpdates* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.updates_.InternalSwap(&other->_impl_.updates_);
}

::google::protobuf::Metadata ValidatorUpdates::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fstaking_2fv1beta1_2fstaking_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
