// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/staking/v1beta1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fstaking_2fv1beta1_2ftx_2eproto_2epb_2eh
#define cosmos_2fstaking_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/staking/v1beta1/staking.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fstaking_2fv1beta1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace staking {
namespace v1beta1 {
class MsgBeginRedelegate;
struct MsgBeginRedelegateDefaultTypeInternal;
extern MsgBeginRedelegateDefaultTypeInternal _MsgBeginRedelegate_default_instance_;
class MsgBeginRedelegateResponse;
struct MsgBeginRedelegateResponseDefaultTypeInternal;
extern MsgBeginRedelegateResponseDefaultTypeInternal _MsgBeginRedelegateResponse_default_instance_;
class MsgCancelUnbondingDelegation;
struct MsgCancelUnbondingDelegationDefaultTypeInternal;
extern MsgCancelUnbondingDelegationDefaultTypeInternal _MsgCancelUnbondingDelegation_default_instance_;
class MsgCancelUnbondingDelegationResponse;
struct MsgCancelUnbondingDelegationResponseDefaultTypeInternal;
extern MsgCancelUnbondingDelegationResponseDefaultTypeInternal _MsgCancelUnbondingDelegationResponse_default_instance_;
class MsgCreateValidator;
struct MsgCreateValidatorDefaultTypeInternal;
extern MsgCreateValidatorDefaultTypeInternal _MsgCreateValidator_default_instance_;
class MsgCreateValidatorResponse;
struct MsgCreateValidatorResponseDefaultTypeInternal;
extern MsgCreateValidatorResponseDefaultTypeInternal _MsgCreateValidatorResponse_default_instance_;
class MsgDelegate;
struct MsgDelegateDefaultTypeInternal;
extern MsgDelegateDefaultTypeInternal _MsgDelegate_default_instance_;
class MsgDelegateResponse;
struct MsgDelegateResponseDefaultTypeInternal;
extern MsgDelegateResponseDefaultTypeInternal _MsgDelegateResponse_default_instance_;
class MsgEditValidator;
struct MsgEditValidatorDefaultTypeInternal;
extern MsgEditValidatorDefaultTypeInternal _MsgEditValidator_default_instance_;
class MsgEditValidatorResponse;
struct MsgEditValidatorResponseDefaultTypeInternal;
extern MsgEditValidatorResponseDefaultTypeInternal _MsgEditValidatorResponse_default_instance_;
class MsgUndelegate;
struct MsgUndelegateDefaultTypeInternal;
extern MsgUndelegateDefaultTypeInternal _MsgUndelegate_default_instance_;
class MsgUndelegateResponse;
struct MsgUndelegateResponseDefaultTypeInternal;
extern MsgUndelegateResponseDefaultTypeInternal _MsgUndelegateResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace staking {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgEditValidatorResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgEditValidatorResponse) */ {
 public:
  inline MsgEditValidatorResponse() : MsgEditValidatorResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgEditValidatorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgEditValidatorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgEditValidatorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgEditValidatorResponse(const MsgEditValidatorResponse& from) : MsgEditValidatorResponse(nullptr, from) {}
  inline MsgEditValidatorResponse(MsgEditValidatorResponse&& from) noexcept
      : MsgEditValidatorResponse(nullptr, std::move(from)) {}
  inline MsgEditValidatorResponse& operator=(const MsgEditValidatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgEditValidatorResponse& operator=(MsgEditValidatorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgEditValidatorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgEditValidatorResponse* internal_default_instance() {
    return reinterpret_cast<const MsgEditValidatorResponse*>(
        &_MsgEditValidatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgEditValidatorResponse& a, MsgEditValidatorResponse& b) { a.Swap(&b); }
  inline void Swap(MsgEditValidatorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgEditValidatorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgEditValidatorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgEditValidatorResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgEditValidatorResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgEditValidatorResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgEditValidatorResponse"; }

 protected:
  explicit MsgEditValidatorResponse(::google::protobuf::Arena* arena);
  MsgEditValidatorResponse(::google::protobuf::Arena* arena, const MsgEditValidatorResponse& from);
  MsgEditValidatorResponse(::google::protobuf::Arena* arena, MsgEditValidatorResponse&& from) noexcept
      : MsgEditValidatorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgEditValidatorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgEditValidatorResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDelegateResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgDelegateResponse) */ {
 public:
  inline MsgDelegateResponse() : MsgDelegateResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDelegateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDelegateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDelegateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDelegateResponse(const MsgDelegateResponse& from) : MsgDelegateResponse(nullptr, from) {}
  inline MsgDelegateResponse(MsgDelegateResponse&& from) noexcept
      : MsgDelegateResponse(nullptr, std::move(from)) {}
  inline MsgDelegateResponse& operator=(const MsgDelegateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDelegateResponse& operator=(MsgDelegateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDelegateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDelegateResponse* internal_default_instance() {
    return reinterpret_cast<const MsgDelegateResponse*>(
        &_MsgDelegateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgDelegateResponse& a, MsgDelegateResponse& b) { a.Swap(&b); }
  inline void Swap(MsgDelegateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDelegateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDelegateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgDelegateResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgDelegateResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgDelegateResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgDelegateResponse"; }

 protected:
  explicit MsgDelegateResponse(::google::protobuf::Arena* arena);
  MsgDelegateResponse(::google::protobuf::Arena* arena, const MsgDelegateResponse& from);
  MsgDelegateResponse(::google::protobuf::Arena* arena, MsgDelegateResponse&& from) noexcept
      : MsgDelegateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgDelegateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDelegateResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateValidatorResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgCreateValidatorResponse) */ {
 public:
  inline MsgCreateValidatorResponse() : MsgCreateValidatorResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateValidatorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateValidatorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateValidatorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateValidatorResponse(const MsgCreateValidatorResponse& from) : MsgCreateValidatorResponse(nullptr, from) {}
  inline MsgCreateValidatorResponse(MsgCreateValidatorResponse&& from) noexcept
      : MsgCreateValidatorResponse(nullptr, std::move(from)) {}
  inline MsgCreateValidatorResponse& operator=(const MsgCreateValidatorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateValidatorResponse& operator=(MsgCreateValidatorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateValidatorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateValidatorResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreateValidatorResponse*>(
        &_MsgCreateValidatorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgCreateValidatorResponse& a, MsgCreateValidatorResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCreateValidatorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateValidatorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateValidatorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgCreateValidatorResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreateValidatorResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreateValidatorResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgCreateValidatorResponse"; }

 protected:
  explicit MsgCreateValidatorResponse(::google::protobuf::Arena* arena);
  MsgCreateValidatorResponse(::google::protobuf::Arena* arena, const MsgCreateValidatorResponse& from);
  MsgCreateValidatorResponse(::google::protobuf::Arena* arena, MsgCreateValidatorResponse&& from) noexcept
      : MsgCreateValidatorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgCreateValidatorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateValidatorResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCancelUnbondingDelegationResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse) */ {
 public:
  inline MsgCancelUnbondingDelegationResponse() : MsgCancelUnbondingDelegationResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCancelUnbondingDelegationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCancelUnbondingDelegationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCancelUnbondingDelegationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCancelUnbondingDelegationResponse(const MsgCancelUnbondingDelegationResponse& from) : MsgCancelUnbondingDelegationResponse(nullptr, from) {}
  inline MsgCancelUnbondingDelegationResponse(MsgCancelUnbondingDelegationResponse&& from) noexcept
      : MsgCancelUnbondingDelegationResponse(nullptr, std::move(from)) {}
  inline MsgCancelUnbondingDelegationResponse& operator=(const MsgCancelUnbondingDelegationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCancelUnbondingDelegationResponse& operator=(MsgCancelUnbondingDelegationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCancelUnbondingDelegationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCancelUnbondingDelegationResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCancelUnbondingDelegationResponse*>(
        &_MsgCancelUnbondingDelegationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MsgCancelUnbondingDelegationResponse& a, MsgCancelUnbondingDelegationResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCancelUnbondingDelegationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCancelUnbondingDelegationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCancelUnbondingDelegationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgCancelUnbondingDelegationResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCancelUnbondingDelegationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCancelUnbondingDelegationResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse"; }

 protected:
  explicit MsgCancelUnbondingDelegationResponse(::google::protobuf::Arena* arena);
  MsgCancelUnbondingDelegationResponse(::google::protobuf::Arena* arena, const MsgCancelUnbondingDelegationResponse& from);
  MsgCancelUnbondingDelegationResponse(::google::protobuf::Arena* arena, MsgCancelUnbondingDelegationResponse&& from) noexcept
      : MsgCancelUnbondingDelegationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCancelUnbondingDelegationResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUndelegateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgUndelegateResponse) */ {
 public:
  inline MsgUndelegateResponse() : MsgUndelegateResponse(nullptr) {}
  ~MsgUndelegateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUndelegateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUndelegateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUndelegateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUndelegateResponse(const MsgUndelegateResponse& from) : MsgUndelegateResponse(nullptr, from) {}
  inline MsgUndelegateResponse(MsgUndelegateResponse&& from) noexcept
      : MsgUndelegateResponse(nullptr, std::move(from)) {}
  inline MsgUndelegateResponse& operator=(const MsgUndelegateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUndelegateResponse& operator=(MsgUndelegateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUndelegateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUndelegateResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUndelegateResponse*>(
        &_MsgUndelegateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MsgUndelegateResponse& a, MsgUndelegateResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUndelegateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUndelegateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUndelegateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUndelegateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUndelegateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUndelegateResponse& from) { MsgUndelegateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUndelegateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgUndelegateResponse"; }

 protected:
  explicit MsgUndelegateResponse(::google::protobuf::Arena* arena);
  MsgUndelegateResponse(::google::protobuf::Arena* arena, const MsgUndelegateResponse& from);
  MsgUndelegateResponse(::google::protobuf::Arena* arena, MsgUndelegateResponse&& from) noexcept
      : MsgUndelegateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCompletionTimeFieldNumber = 1,
    kAmountFieldNumber = 2,
  };
  // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
  bool has_completion_time() const;
  void clear_completion_time() ;
  const ::google::protobuf::Timestamp& completion_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_completion_time();
  ::google::protobuf::Timestamp* mutable_completion_time();
  void set_allocated_completion_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_completion_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_completion_time();

  private:
  const ::google::protobuf::Timestamp& _internal_completion_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_completion_time();

  public:
  // .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50", (.amino.dont_omitempty) = true];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgUndelegateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUndelegateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* completion_time_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUndelegate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgUndelegate) */ {
 public:
  inline MsgUndelegate() : MsgUndelegate(nullptr) {}
  ~MsgUndelegate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUndelegate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUndelegate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUndelegate(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUndelegate(const MsgUndelegate& from) : MsgUndelegate(nullptr, from) {}
  inline MsgUndelegate(MsgUndelegate&& from) noexcept
      : MsgUndelegate(nullptr, std::move(from)) {}
  inline MsgUndelegate& operator=(const MsgUndelegate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUndelegate& operator=(MsgUndelegate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUndelegate& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUndelegate* internal_default_instance() {
    return reinterpret_cast<const MsgUndelegate*>(
        &_MsgUndelegate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MsgUndelegate& a, MsgUndelegate& b) { a.Swap(&b); }
  inline void Swap(MsgUndelegate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUndelegate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUndelegate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUndelegate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUndelegate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUndelegate& from) { MsgUndelegate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUndelegate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgUndelegate"; }

 protected:
  explicit MsgUndelegate(::google::protobuf::Arena* arena);
  MsgUndelegate(::google::protobuf::Arena* arena, const MsgUndelegate& from);
  MsgUndelegate(::google::protobuf::Arena* arena, MsgUndelegate&& from) noexcept
      : MsgUndelegate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kValidatorAddressFieldNumber = 2,
    kAmountFieldNumber = 3,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* value);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgUndelegate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      79, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUndelegate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_address_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgEditValidator final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgEditValidator) */ {
 public:
  inline MsgEditValidator() : MsgEditValidator(nullptr) {}
  ~MsgEditValidator() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgEditValidator* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgEditValidator));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgEditValidator(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgEditValidator(const MsgEditValidator& from) : MsgEditValidator(nullptr, from) {}
  inline MsgEditValidator(MsgEditValidator&& from) noexcept
      : MsgEditValidator(nullptr, std::move(from)) {}
  inline MsgEditValidator& operator=(const MsgEditValidator& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgEditValidator& operator=(MsgEditValidator&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgEditValidator& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgEditValidator* internal_default_instance() {
    return reinterpret_cast<const MsgEditValidator*>(
        &_MsgEditValidator_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgEditValidator& a, MsgEditValidator& b) { a.Swap(&b); }
  inline void Swap(MsgEditValidator* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgEditValidator* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgEditValidator* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgEditValidator>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgEditValidator& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgEditValidator& from) { MsgEditValidator::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgEditValidator* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgEditValidator"; }

 protected:
  explicit MsgEditValidator(::google::protobuf::Arena* arena);
  MsgEditValidator(::google::protobuf::Arena* arena, const MsgEditValidator& from);
  MsgEditValidator(::google::protobuf::Arena* arena, MsgEditValidator&& from) noexcept
      : MsgEditValidator(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorAddressFieldNumber = 2,
    kCommissionRateFieldNumber = 3,
    kMinSelfDelegationFieldNumber = 4,
    kDescriptionFieldNumber = 1,
  };
  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // string commission_rate = 3 [json_name = "commissionRate", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
  void clear_commission_rate() ;
  const std::string& commission_rate() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_commission_rate(Arg_&& arg, Args_... args);
  std::string* mutable_commission_rate();
  PROTOBUF_NODISCARD std::string* release_commission_rate();
  void set_allocated_commission_rate(std::string* value);

  private:
  const std::string& _internal_commission_rate() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_commission_rate(
      const std::string& value);
  std::string* _internal_mutable_commission_rate();

  public:
  // string min_self_delegation = 4 [json_name = "minSelfDelegation", (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
  void clear_min_self_delegation() ;
  const std::string& min_self_delegation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_min_self_delegation(Arg_&& arg, Args_... args);
  std::string* mutable_min_self_delegation();
  PROTOBUF_NODISCARD std::string* release_min_self_delegation();
  void set_allocated_min_self_delegation(std::string* value);

  private:
  const std::string& _internal_min_self_delegation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_min_self_delegation(
      const std::string& value);
  std::string* _internal_mutable_min_self_delegation();

  public:
  // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_description() const;
  void clear_description() ;
  const ::cosmos::staking::v1beta1::Description& description() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Description* release_description();
  ::cosmos::staking::v1beta1::Description* mutable_description();
  void set_allocated_description(::cosmos::staking::v1beta1::Description* value);
  void unsafe_arena_set_allocated_description(::cosmos::staking::v1beta1::Description* value);
  ::cosmos::staking::v1beta1::Description* unsafe_arena_release_description();

  private:
  const ::cosmos::staking::v1beta1::Description& _internal_description() const;
  ::cosmos::staking::v1beta1::Description* _internal_mutable_description();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgEditValidator)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      99, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgEditValidator& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::google::protobuf::internal::ArenaStringPtr commission_rate_;
    ::google::protobuf::internal::ArenaStringPtr min_self_delegation_;
    ::cosmos::staking::v1beta1::Description* description_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDelegate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgDelegate) */ {
 public:
  inline MsgDelegate() : MsgDelegate(nullptr) {}
  ~MsgDelegate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDelegate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDelegate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDelegate(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDelegate(const MsgDelegate& from) : MsgDelegate(nullptr, from) {}
  inline MsgDelegate(MsgDelegate&& from) noexcept
      : MsgDelegate(nullptr, std::move(from)) {}
  inline MsgDelegate& operator=(const MsgDelegate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDelegate& operator=(MsgDelegate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDelegate& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDelegate* internal_default_instance() {
    return reinterpret_cast<const MsgDelegate*>(
        &_MsgDelegate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgDelegate& a, MsgDelegate& b) { a.Swap(&b); }
  inline void Swap(MsgDelegate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDelegate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDelegate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgDelegate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgDelegate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgDelegate& from) { MsgDelegate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgDelegate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgDelegate"; }

 protected:
  explicit MsgDelegate(::google::protobuf::Arena* arena);
  MsgDelegate(::google::protobuf::Arena* arena, const MsgDelegate& from);
  MsgDelegate(::google::protobuf::Arena* arena, MsgDelegate&& from) noexcept
      : MsgDelegate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kValidatorAddressFieldNumber = 2,
    kAmountFieldNumber = 3,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* value);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgDelegate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDelegate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_address_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateValidator final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgCreateValidator) */ {
 public:
  inline MsgCreateValidator() : MsgCreateValidator(nullptr) {}
  ~MsgCreateValidator() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateValidator* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateValidator));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateValidator(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateValidator(const MsgCreateValidator& from) : MsgCreateValidator(nullptr, from) {}
  inline MsgCreateValidator(MsgCreateValidator&& from) noexcept
      : MsgCreateValidator(nullptr, std::move(from)) {}
  inline MsgCreateValidator& operator=(const MsgCreateValidator& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateValidator& operator=(MsgCreateValidator&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateValidator& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateValidator* internal_default_instance() {
    return reinterpret_cast<const MsgCreateValidator*>(
        &_MsgCreateValidator_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgCreateValidator& a, MsgCreateValidator& b) { a.Swap(&b); }
  inline void Swap(MsgCreateValidator* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateValidator* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateValidator* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreateValidator>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreateValidator& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreateValidator& from) { MsgCreateValidator::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreateValidator* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgCreateValidator"; }

 protected:
  explicit MsgCreateValidator(::google::protobuf::Arena* arena);
  MsgCreateValidator(::google::protobuf::Arena* arena, const MsgCreateValidator& from);
  MsgCreateValidator(::google::protobuf::Arena* arena, MsgCreateValidator&& from) noexcept
      : MsgCreateValidator(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinSelfDelegationFieldNumber = 3,
    kDelegatorAddressFieldNumber = 4,
    kValidatorAddressFieldNumber = 5,
    kDescriptionFieldNumber = 1,
    kCommissionFieldNumber = 2,
    kPubkeyFieldNumber = 6,
    kValueFieldNumber = 7,
  };
  // string min_self_delegation = 3 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
  void clear_min_self_delegation() ;
  const std::string& min_self_delegation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_min_self_delegation(Arg_&& arg, Args_... args);
  std::string* mutable_min_self_delegation();
  PROTOBUF_NODISCARD std::string* release_min_self_delegation();
  void set_allocated_min_self_delegation(std::string* value);

  private:
  const std::string& _internal_min_self_delegation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_min_self_delegation(
      const std::string& value);
  std::string* _internal_mutable_min_self_delegation();

  public:
  // string delegator_address = 4 [json_name = "delegatorAddress", deprecated = true, (.cosmos_proto.scalar) = "cosmos.AddressString"];
  [[deprecated]]  void clear_delegator_address() ;
  [[deprecated]] const std::string& delegator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_delegator_address(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_delegator_address();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_delegator_address();
  [[deprecated]] void set_allocated_delegator_address(std::string* value);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_address = 5 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_description() const;
  void clear_description() ;
  const ::cosmos::staking::v1beta1::Description& description() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Description* release_description();
  ::cosmos::staking::v1beta1::Description* mutable_description();
  void set_allocated_description(::cosmos::staking::v1beta1::Description* value);
  void unsafe_arena_set_allocated_description(::cosmos::staking::v1beta1::Description* value);
  ::cosmos::staking::v1beta1::Description* unsafe_arena_release_description();

  private:
  const ::cosmos::staking::v1beta1::Description& _internal_description() const;
  ::cosmos::staking::v1beta1::Description* _internal_mutable_description();

  public:
  // .cosmos.staking.v1beta1.CommissionRates commission = 2 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_commission() const;
  void clear_commission() ;
  const ::cosmos::staking::v1beta1::CommissionRates& commission() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::CommissionRates* release_commission();
  ::cosmos::staking::v1beta1::CommissionRates* mutable_commission();
  void set_allocated_commission(::cosmos::staking::v1beta1::CommissionRates* value);
  void unsafe_arena_set_allocated_commission(::cosmos::staking::v1beta1::CommissionRates* value);
  ::cosmos::staking::v1beta1::CommissionRates* unsafe_arena_release_commission();

  private:
  const ::cosmos::staking::v1beta1::CommissionRates& _internal_commission() const;
  ::cosmos::staking::v1beta1::CommissionRates* _internal_mutable_commission();

  public:
  // .google.protobuf.Any pubkey = 6 [json_name = "pubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
  bool has_pubkey() const;
  void clear_pubkey() ;
  const ::google::protobuf::Any& pubkey() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_pubkey();
  ::google::protobuf::Any* mutable_pubkey();
  void set_allocated_pubkey(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_pubkey(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_pubkey();

  private:
  const ::google::protobuf::Any& _internal_pubkey() const;
  ::google::protobuf::Any* _internal_mutable_pubkey();

  public:
  // .cosmos.base.v1beta1.Coin value = 7 [json_name = "value", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_value() const;
  void clear_value() ;
  const ::cosmos::base::v1beta1::Coin& value() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_value();
  ::cosmos::base::v1beta1::Coin* mutable_value();
  void set_allocated_value(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_value(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_value();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_value() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgCreateValidator)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      103, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateValidator& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr min_self_delegation_;
    ::google::protobuf::internal::ArenaStringPtr delegator_address_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::staking::v1beta1::Description* description_;
    ::cosmos::staking::v1beta1::CommissionRates* commission_;
    ::google::protobuf::Any* pubkey_;
    ::cosmos::base::v1beta1::Coin* value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCancelUnbondingDelegation final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation) */ {
 public:
  inline MsgCancelUnbondingDelegation() : MsgCancelUnbondingDelegation(nullptr) {}
  ~MsgCancelUnbondingDelegation() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCancelUnbondingDelegation* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCancelUnbondingDelegation));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCancelUnbondingDelegation(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCancelUnbondingDelegation(const MsgCancelUnbondingDelegation& from) : MsgCancelUnbondingDelegation(nullptr, from) {}
  inline MsgCancelUnbondingDelegation(MsgCancelUnbondingDelegation&& from) noexcept
      : MsgCancelUnbondingDelegation(nullptr, std::move(from)) {}
  inline MsgCancelUnbondingDelegation& operator=(const MsgCancelUnbondingDelegation& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCancelUnbondingDelegation& operator=(MsgCancelUnbondingDelegation&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCancelUnbondingDelegation& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCancelUnbondingDelegation* internal_default_instance() {
    return reinterpret_cast<const MsgCancelUnbondingDelegation*>(
        &_MsgCancelUnbondingDelegation_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MsgCancelUnbondingDelegation& a, MsgCancelUnbondingDelegation& b) { a.Swap(&b); }
  inline void Swap(MsgCancelUnbondingDelegation* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCancelUnbondingDelegation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCancelUnbondingDelegation* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCancelUnbondingDelegation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCancelUnbondingDelegation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCancelUnbondingDelegation& from) { MsgCancelUnbondingDelegation::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCancelUnbondingDelegation* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"; }

 protected:
  explicit MsgCancelUnbondingDelegation(::google::protobuf::Arena* arena);
  MsgCancelUnbondingDelegation(::google::protobuf::Arena* arena, const MsgCancelUnbondingDelegation& from);
  MsgCancelUnbondingDelegation(::google::protobuf::Arena* arena, MsgCancelUnbondingDelegation&& from) noexcept
      : MsgCancelUnbondingDelegation(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kValidatorAddressFieldNumber = 2,
    kAmountFieldNumber = 3,
    kCreationHeightFieldNumber = 4,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* value);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_address() ;
  const std::string& validator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_address();
  PROTOBUF_NODISCARD std::string* release_validator_address();
  void set_allocated_validator_address(std::string* value);

  private:
  const std::string& _internal_validator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_address(
      const std::string& value);
  std::string* _internal_mutable_validator_address();

  public:
  // .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // int64 creation_height = 4 [json_name = "creationHeight"];
  void clear_creation_height() ;
  ::int64_t creation_height() const;
  void set_creation_height(::int64_t value);

  private:
  ::int64_t _internal_creation_height() const;
  void _internal_set_creation_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      94, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCancelUnbondingDelegation& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_address_;
    ::google::protobuf::internal::ArenaStringPtr validator_address_;
    ::cosmos::base::v1beta1::Coin* amount_;
    ::int64_t creation_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgBeginRedelegateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgBeginRedelegateResponse) */ {
 public:
  inline MsgBeginRedelegateResponse() : MsgBeginRedelegateResponse(nullptr) {}
  ~MsgBeginRedelegateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgBeginRedelegateResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgBeginRedelegateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgBeginRedelegateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgBeginRedelegateResponse(const MsgBeginRedelegateResponse& from) : MsgBeginRedelegateResponse(nullptr, from) {}
  inline MsgBeginRedelegateResponse(MsgBeginRedelegateResponse&& from) noexcept
      : MsgBeginRedelegateResponse(nullptr, std::move(from)) {}
  inline MsgBeginRedelegateResponse& operator=(const MsgBeginRedelegateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBeginRedelegateResponse& operator=(MsgBeginRedelegateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgBeginRedelegateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgBeginRedelegateResponse* internal_default_instance() {
    return reinterpret_cast<const MsgBeginRedelegateResponse*>(
        &_MsgBeginRedelegateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MsgBeginRedelegateResponse& a, MsgBeginRedelegateResponse& b) { a.Swap(&b); }
  inline void Swap(MsgBeginRedelegateResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBeginRedelegateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgBeginRedelegateResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgBeginRedelegateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgBeginRedelegateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgBeginRedelegateResponse& from) { MsgBeginRedelegateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgBeginRedelegateResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgBeginRedelegateResponse"; }

 protected:
  explicit MsgBeginRedelegateResponse(::google::protobuf::Arena* arena);
  MsgBeginRedelegateResponse(::google::protobuf::Arena* arena, const MsgBeginRedelegateResponse& from);
  MsgBeginRedelegateResponse(::google::protobuf::Arena* arena, MsgBeginRedelegateResponse&& from) noexcept
      : MsgBeginRedelegateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCompletionTimeFieldNumber = 1,
  };
  // .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
  bool has_completion_time() const;
  void clear_completion_time() ;
  const ::google::protobuf::Timestamp& completion_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_completion_time();
  ::google::protobuf::Timestamp* mutable_completion_time();
  void set_allocated_completion_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_completion_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_completion_time();

  private:
  const ::google::protobuf::Timestamp& _internal_completion_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_completion_time();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgBeginRedelegateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgBeginRedelegateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* completion_time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgBeginRedelegate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgBeginRedelegate) */ {
 public:
  inline MsgBeginRedelegate() : MsgBeginRedelegate(nullptr) {}
  ~MsgBeginRedelegate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgBeginRedelegate* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgBeginRedelegate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgBeginRedelegate(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgBeginRedelegate(const MsgBeginRedelegate& from) : MsgBeginRedelegate(nullptr, from) {}
  inline MsgBeginRedelegate(MsgBeginRedelegate&& from) noexcept
      : MsgBeginRedelegate(nullptr, std::move(from)) {}
  inline MsgBeginRedelegate& operator=(const MsgBeginRedelegate& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgBeginRedelegate& operator=(MsgBeginRedelegate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgBeginRedelegate& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgBeginRedelegate* internal_default_instance() {
    return reinterpret_cast<const MsgBeginRedelegate*>(
        &_MsgBeginRedelegate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MsgBeginRedelegate& a, MsgBeginRedelegate& b) { a.Swap(&b); }
  inline void Swap(MsgBeginRedelegate* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgBeginRedelegate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgBeginRedelegate* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgBeginRedelegate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgBeginRedelegate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgBeginRedelegate& from) { MsgBeginRedelegate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgBeginRedelegate* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgBeginRedelegate"; }

 protected:
  explicit MsgBeginRedelegate(::google::protobuf::Arena* arena);
  MsgBeginRedelegate(::google::protobuf::Arena* arena, const MsgBeginRedelegate& from);
  MsgBeginRedelegate(::google::protobuf::Arena* arena, MsgBeginRedelegate&& from) noexcept
      : MsgBeginRedelegate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDelegatorAddressFieldNumber = 1,
    kValidatorSrcAddressFieldNumber = 2,
    kValidatorDstAddressFieldNumber = 3,
    kAmountFieldNumber = 4,
  };
  // string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_delegator_address() ;
  const std::string& delegator_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delegator_address(Arg_&& arg, Args_... args);
  std::string* mutable_delegator_address();
  PROTOBUF_NODISCARD std::string* release_delegator_address();
  void set_allocated_delegator_address(std::string* value);

  private:
  const std::string& _internal_delegator_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delegator_address(
      const std::string& value);
  std::string* _internal_mutable_delegator_address();

  public:
  // string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_src_address() ;
  const std::string& validator_src_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_src_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_src_address();
  PROTOBUF_NODISCARD std::string* release_validator_src_address();
  void set_allocated_validator_src_address(std::string* value);

  private:
  const std::string& _internal_validator_src_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_src_address(
      const std::string& value);
  std::string* _internal_mutable_validator_src_address();

  public:
  // string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  void clear_validator_dst_address() ;
  const std::string& validator_dst_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_dst_address(Arg_&& arg, Args_... args);
  std::string* mutable_validator_dst_address();
  PROTOBUF_NODISCARD std::string* release_validator_dst_address();
  void set_allocated_validator_dst_address(std::string* value);

  private:
  const std::string& _internal_validator_dst_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_dst_address(
      const std::string& value);
  std::string* _internal_mutable_validator_dst_address();

  public:
  // .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_amount() const;
  void clear_amount() ;
  const ::cosmos::base::v1beta1::Coin& amount() const;
  PROTOBUF_NODISCARD ::cosmos::base::v1beta1::Coin* release_amount();
  ::cosmos::base::v1beta1::Coin* mutable_amount();
  void set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  void unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value);
  ::cosmos::base::v1beta1::Coin* unsafe_arena_release_amount();

  private:
  const ::cosmos::base::v1beta1::Coin& _internal_amount() const;
  ::cosmos::base::v1beta1::Coin* _internal_mutable_amount();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgBeginRedelegate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      109, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgBeginRedelegate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delegator_address_;
    ::google::protobuf::internal::ArenaStringPtr validator_src_address_;
    ::google::protobuf::internal::ArenaStringPtr validator_dst_address_;
    ::cosmos::base::v1beta1::Coin* amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.staking.v1beta1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.staking.v1beta1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .cosmos.staking.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::staking::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::staking::v1beta1::Params* release_params();
  ::cosmos::staking::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::staking::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::staking::v1beta1::Params* value);
  ::cosmos::staking::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::staking::v1beta1::Params& _internal_params() const;
  ::cosmos::staking::v1beta1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.staking.v1beta1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::cosmos::staking::v1beta1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstaking_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgCreateValidator

// .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgCreateValidator::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.description_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Description& MsgCreateValidator::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Description* p = _impl_.description_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Description&>(::cosmos::staking::v1beta1::_Description_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Description& MsgCreateValidator::description() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCreateValidator.description)
  return _internal_description();
}
inline void MsgCreateValidator::unsafe_arena_set_allocated_description(::cosmos::staking::v1beta1::Description* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }
  _impl_.description_ = reinterpret_cast<::cosmos::staking::v1beta1::Description*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.description)
}
inline ::cosmos::staking::v1beta1::Description* MsgCreateValidator::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Description* released = _impl_.description_;
  _impl_.description_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Description* MsgCreateValidator::unsafe_arena_release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCreateValidator.description)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Description* temp = _impl_.description_;
  _impl_.description_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Description* MsgCreateValidator::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.description_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Description>(GetArena());
    _impl_.description_ = reinterpret_cast<::cosmos::staking::v1beta1::Description*>(p);
  }
  return _impl_.description_;
}
inline ::cosmos::staking::v1beta1::Description* MsgCreateValidator::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Description* _msg = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCreateValidator.description)
  return _msg;
}
inline void MsgCreateValidator::set_allocated_description(::cosmos::staking::v1beta1::Description* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.description_ = reinterpret_cast<::cosmos::staking::v1beta1::Description*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.description)
}

// .cosmos.staking.v1beta1.CommissionRates commission = 2 [json_name = "commission", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgCreateValidator::has_commission() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.commission_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::CommissionRates& MsgCreateValidator::_internal_commission() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::CommissionRates* p = _impl_.commission_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::CommissionRates&>(::cosmos::staking::v1beta1::_CommissionRates_default_instance_);
}
inline const ::cosmos::staking::v1beta1::CommissionRates& MsgCreateValidator::commission() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCreateValidator.commission)
  return _internal_commission();
}
inline void MsgCreateValidator::unsafe_arena_set_allocated_commission(::cosmos::staking::v1beta1::CommissionRates* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.commission_);
  }
  _impl_.commission_ = reinterpret_cast<::cosmos::staking::v1beta1::CommissionRates*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.commission)
}
inline ::cosmos::staking::v1beta1::CommissionRates* MsgCreateValidator::release_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::staking::v1beta1::CommissionRates* released = _impl_.commission_;
  _impl_.commission_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::CommissionRates* MsgCreateValidator::unsafe_arena_release_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCreateValidator.commission)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::staking::v1beta1::CommissionRates* temp = _impl_.commission_;
  _impl_.commission_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::CommissionRates* MsgCreateValidator::_internal_mutable_commission() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.commission_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::CommissionRates>(GetArena());
    _impl_.commission_ = reinterpret_cast<::cosmos::staking::v1beta1::CommissionRates*>(p);
  }
  return _impl_.commission_;
}
inline ::cosmos::staking::v1beta1::CommissionRates* MsgCreateValidator::mutable_commission() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::staking::v1beta1::CommissionRates* _msg = _internal_mutable_commission();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCreateValidator.commission)
  return _msg;
}
inline void MsgCreateValidator::set_allocated_commission(::cosmos::staking::v1beta1::CommissionRates* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.commission_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.commission_ = reinterpret_cast<::cosmos::staking::v1beta1::CommissionRates*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.commission)
}

// string min_self_delegation = 3 [json_name = "minSelfDelegation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int", (.amino.dont_omitempty) = true];
inline void MsgCreateValidator::clear_min_self_delegation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.ClearToEmpty();
}
inline const std::string& MsgCreateValidator::min_self_delegation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCreateValidator.min_self_delegation)
  return _internal_min_self_delegation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateValidator::set_min_self_delegation(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgCreateValidator.min_self_delegation)
}
inline std::string* MsgCreateValidator::mutable_min_self_delegation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_min_self_delegation();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCreateValidator.min_self_delegation)
  return _s;
}
inline const std::string& MsgCreateValidator::_internal_min_self_delegation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_self_delegation_.Get();
}
inline void MsgCreateValidator::_internal_set_min_self_delegation(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.Set(value, GetArena());
}
inline std::string* MsgCreateValidator::_internal_mutable_min_self_delegation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.min_self_delegation_.Mutable( GetArena());
}
inline std::string* MsgCreateValidator::release_min_self_delegation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCreateValidator.min_self_delegation)
  return _impl_.min_self_delegation_.Release();
}
inline void MsgCreateValidator::set_allocated_min_self_delegation(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.min_self_delegation_.IsDefault()) {
    _impl_.min_self_delegation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.min_self_delegation)
}

// string delegator_address = 4 [json_name = "delegatorAddress", deprecated = true, (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCreateValidator::clear_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& MsgCreateValidator::delegator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCreateValidator.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateValidator::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgCreateValidator.delegator_address)
}
inline std::string* MsgCreateValidator::mutable_delegator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCreateValidator.delegator_address)
  return _s;
}
inline const std::string& MsgCreateValidator::_internal_delegator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_address_.Get();
}
inline void MsgCreateValidator::_internal_set_delegator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(value, GetArena());
}
inline std::string* MsgCreateValidator::_internal_mutable_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_address_.Mutable( GetArena());
}
inline std::string* MsgCreateValidator::release_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCreateValidator.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void MsgCreateValidator::set_allocated_delegator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_address_.IsDefault()) {
    _impl_.delegator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.delegator_address)
}

// string validator_address = 5 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void MsgCreateValidator::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& MsgCreateValidator::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCreateValidator.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateValidator::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgCreateValidator.validator_address)
}
inline std::string* MsgCreateValidator::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCreateValidator.validator_address)
  return _s;
}
inline const std::string& MsgCreateValidator::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void MsgCreateValidator::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* MsgCreateValidator::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* MsgCreateValidator::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCreateValidator.validator_address)
  return _impl_.validator_address_.Release();
}
inline void MsgCreateValidator::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.validator_address)
}

// .google.protobuf.Any pubkey = 6 [json_name = "pubkey", (.cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
inline bool MsgCreateValidator::has_pubkey() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pubkey_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& MsgCreateValidator::_internal_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.pubkey_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& MsgCreateValidator::pubkey() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCreateValidator.pubkey)
  return _internal_pubkey();
}
inline void MsgCreateValidator::unsafe_arena_set_allocated_pubkey(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pubkey_);
  }
  _impl_.pubkey_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.pubkey)
}
inline ::google::protobuf::Any* MsgCreateValidator::release_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* released = _impl_.pubkey_;
  _impl_.pubkey_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* MsgCreateValidator::unsafe_arena_release_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCreateValidator.pubkey)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Any* temp = _impl_.pubkey_;
  _impl_.pubkey_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* MsgCreateValidator::_internal_mutable_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pubkey_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.pubkey_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.pubkey_;
}
inline ::google::protobuf::Any* MsgCreateValidator::mutable_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::google::protobuf::Any* _msg = _internal_mutable_pubkey();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCreateValidator.pubkey)
  return _msg;
}
inline void MsgCreateValidator::set_allocated_pubkey(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pubkey_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.pubkey_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.pubkey)
}

// .cosmos.base.v1beta1.Coin value = 7 [json_name = "value", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgCreateValidator::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgCreateValidator::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgCreateValidator::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCreateValidator.value)
  return _internal_value();
}
inline void MsgCreateValidator::unsafe_arena_set_allocated_value(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.value)
}
inline ::cosmos::base::v1beta1::Coin* MsgCreateValidator::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.value_;
  _impl_.value_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgCreateValidator::unsafe_arena_release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCreateValidator.value)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgCreateValidator::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.value_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.value_;
}
inline ::cosmos::base::v1beta1::Coin* MsgCreateValidator::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCreateValidator.value)
  return _msg;
}
inline void MsgCreateValidator::set_allocated_value(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.value_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCreateValidator.value)
}

// -------------------------------------------------------------------

// MsgCreateValidatorResponse

// -------------------------------------------------------------------

// MsgEditValidator

// .cosmos.staking.v1beta1.Description description = 1 [json_name = "description", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgEditValidator::has_description() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.description_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Description& MsgEditValidator::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Description* p = _impl_.description_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Description&>(::cosmos::staking::v1beta1::_Description_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Description& MsgEditValidator::description() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgEditValidator.description)
  return _internal_description();
}
inline void MsgEditValidator::unsafe_arena_set_allocated_description(::cosmos::staking::v1beta1::Description* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }
  _impl_.description_ = reinterpret_cast<::cosmos::staking::v1beta1::Description*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgEditValidator.description)
}
inline ::cosmos::staking::v1beta1::Description* MsgEditValidator::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Description* released = _impl_.description_;
  _impl_.description_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Description* MsgEditValidator::unsafe_arena_release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgEditValidator.description)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Description* temp = _impl_.description_;
  _impl_.description_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Description* MsgEditValidator::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.description_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Description>(GetArena());
    _impl_.description_ = reinterpret_cast<::cosmos::staking::v1beta1::Description*>(p);
  }
  return _impl_.description_;
}
inline ::cosmos::staking::v1beta1::Description* MsgEditValidator::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Description* _msg = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgEditValidator.description)
  return _msg;
}
inline void MsgEditValidator::set_allocated_description(::cosmos::staking::v1beta1::Description* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.description_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.description_ = reinterpret_cast<::cosmos::staking::v1beta1::Description*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgEditValidator.description)
}

// string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void MsgEditValidator::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& MsgEditValidator::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgEditValidator.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgEditValidator::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgEditValidator.validator_address)
}
inline std::string* MsgEditValidator::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgEditValidator.validator_address)
  return _s;
}
inline const std::string& MsgEditValidator::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void MsgEditValidator::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* MsgEditValidator::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* MsgEditValidator::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgEditValidator.validator_address)
  return _impl_.validator_address_.Release();
}
inline void MsgEditValidator::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgEditValidator.validator_address)
}

// string commission_rate = 3 [json_name = "commissionRate", (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
inline void MsgEditValidator::clear_commission_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commission_rate_.ClearToEmpty();
}
inline const std::string& MsgEditValidator::commission_rate() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgEditValidator.commission_rate)
  return _internal_commission_rate();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgEditValidator::set_commission_rate(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commission_rate_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgEditValidator.commission_rate)
}
inline std::string* MsgEditValidator::mutable_commission_rate() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_commission_rate();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgEditValidator.commission_rate)
  return _s;
}
inline const std::string& MsgEditValidator::_internal_commission_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commission_rate_.Get();
}
inline void MsgEditValidator::_internal_set_commission_rate(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commission_rate_.Set(value, GetArena());
}
inline std::string* MsgEditValidator::_internal_mutable_commission_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.commission_rate_.Mutable( GetArena());
}
inline std::string* MsgEditValidator::release_commission_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgEditValidator.commission_rate)
  return _impl_.commission_rate_.Release();
}
inline void MsgEditValidator::set_allocated_commission_rate(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commission_rate_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.commission_rate_.IsDefault()) {
    _impl_.commission_rate_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgEditValidator.commission_rate)
}

// string min_self_delegation = 4 [json_name = "minSelfDelegation", (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
inline void MsgEditValidator::clear_min_self_delegation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.ClearToEmpty();
}
inline const std::string& MsgEditValidator::min_self_delegation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgEditValidator.min_self_delegation)
  return _internal_min_self_delegation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgEditValidator::set_min_self_delegation(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgEditValidator.min_self_delegation)
}
inline std::string* MsgEditValidator::mutable_min_self_delegation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_min_self_delegation();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgEditValidator.min_self_delegation)
  return _s;
}
inline const std::string& MsgEditValidator::_internal_min_self_delegation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_self_delegation_.Get();
}
inline void MsgEditValidator::_internal_set_min_self_delegation(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.Set(value, GetArena());
}
inline std::string* MsgEditValidator::_internal_mutable_min_self_delegation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.min_self_delegation_.Mutable( GetArena());
}
inline std::string* MsgEditValidator::release_min_self_delegation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgEditValidator.min_self_delegation)
  return _impl_.min_self_delegation_.Release();
}
inline void MsgEditValidator::set_allocated_min_self_delegation(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_self_delegation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.min_self_delegation_.IsDefault()) {
    _impl_.min_self_delegation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgEditValidator.min_self_delegation)
}

// -------------------------------------------------------------------

// MsgEditValidatorResponse

// -------------------------------------------------------------------

// MsgDelegate

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgDelegate::clear_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& MsgDelegate::delegator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgDelegate.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDelegate::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgDelegate.delegator_address)
}
inline std::string* MsgDelegate::mutable_delegator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgDelegate.delegator_address)
  return _s;
}
inline const std::string& MsgDelegate::_internal_delegator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_address_.Get();
}
inline void MsgDelegate::_internal_set_delegator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(value, GetArena());
}
inline std::string* MsgDelegate::_internal_mutable_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_address_.Mutable( GetArena());
}
inline std::string* MsgDelegate::release_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgDelegate.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void MsgDelegate::set_allocated_delegator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_address_.IsDefault()) {
    _impl_.delegator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgDelegate.delegator_address)
}

// string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void MsgDelegate::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& MsgDelegate::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgDelegate.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDelegate::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgDelegate.validator_address)
}
inline std::string* MsgDelegate::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgDelegate.validator_address)
  return _s;
}
inline const std::string& MsgDelegate::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void MsgDelegate::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* MsgDelegate::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* MsgDelegate::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgDelegate.validator_address)
  return _impl_.validator_address_.Release();
}
inline void MsgDelegate::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgDelegate.validator_address)
}

// .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgDelegate::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgDelegate::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgDelegate::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgDelegate.amount)
  return _internal_amount();
}
inline void MsgDelegate::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgDelegate.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgDelegate::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgDelegate::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgDelegate.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgDelegate::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgDelegate::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgDelegate.amount)
  return _msg;
}
inline void MsgDelegate::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgDelegate.amount)
}

// -------------------------------------------------------------------

// MsgDelegateResponse

// -------------------------------------------------------------------

// MsgBeginRedelegate

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgBeginRedelegate::clear_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& MsgBeginRedelegate::delegator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgBeginRedelegate::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address)
}
inline std::string* MsgBeginRedelegate::mutable_delegator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address)
  return _s;
}
inline const std::string& MsgBeginRedelegate::_internal_delegator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_address_.Get();
}
inline void MsgBeginRedelegate::_internal_set_delegator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(value, GetArena());
}
inline std::string* MsgBeginRedelegate::_internal_mutable_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_address_.Mutable( GetArena());
}
inline std::string* MsgBeginRedelegate::release_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void MsgBeginRedelegate::set_allocated_delegator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_address_.IsDefault()) {
    _impl_.delegator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address)
}

// string validator_src_address = 2 [json_name = "validatorSrcAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void MsgBeginRedelegate::clear_validator_src_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_src_address_.ClearToEmpty();
}
inline const std::string& MsgBeginRedelegate::validator_src_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address)
  return _internal_validator_src_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgBeginRedelegate::set_validator_src_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_src_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address)
}
inline std::string* MsgBeginRedelegate::mutable_validator_src_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_src_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address)
  return _s;
}
inline const std::string& MsgBeginRedelegate::_internal_validator_src_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_src_address_.Get();
}
inline void MsgBeginRedelegate::_internal_set_validator_src_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_src_address_.Set(value, GetArena());
}
inline std::string* MsgBeginRedelegate::_internal_mutable_validator_src_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_src_address_.Mutable( GetArena());
}
inline std::string* MsgBeginRedelegate::release_validator_src_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address)
  return _impl_.validator_src_address_.Release();
}
inline void MsgBeginRedelegate::set_allocated_validator_src_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_src_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_src_address_.IsDefault()) {
    _impl_.validator_src_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address)
}

// string validator_dst_address = 3 [json_name = "validatorDstAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void MsgBeginRedelegate::clear_validator_dst_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_dst_address_.ClearToEmpty();
}
inline const std::string& MsgBeginRedelegate::validator_dst_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address)
  return _internal_validator_dst_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgBeginRedelegate::set_validator_dst_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_dst_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address)
}
inline std::string* MsgBeginRedelegate::mutable_validator_dst_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_dst_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address)
  return _s;
}
inline const std::string& MsgBeginRedelegate::_internal_validator_dst_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_dst_address_.Get();
}
inline void MsgBeginRedelegate::_internal_set_validator_dst_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_dst_address_.Set(value, GetArena());
}
inline std::string* MsgBeginRedelegate::_internal_mutable_validator_dst_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_dst_address_.Mutable( GetArena());
}
inline std::string* MsgBeginRedelegate::release_validator_dst_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address)
  return _impl_.validator_dst_address_.Release();
}
inline void MsgBeginRedelegate::set_allocated_validator_dst_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_dst_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_dst_address_.IsDefault()) {
    _impl_.validator_dst_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address)
}

// .cosmos.base.v1beta1.Coin amount = 4 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgBeginRedelegate::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgBeginRedelegate::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgBeginRedelegate::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgBeginRedelegate.amount)
  return _internal_amount();
}
inline void MsgBeginRedelegate::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgBeginRedelegate.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgBeginRedelegate::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgBeginRedelegate::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgBeginRedelegate.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgBeginRedelegate::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgBeginRedelegate::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgBeginRedelegate.amount)
  return _msg;
}
inline void MsgBeginRedelegate::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgBeginRedelegate.amount)
}

// -------------------------------------------------------------------

// MsgBeginRedelegateResponse

// .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
inline bool MsgBeginRedelegateResponse::has_completion_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.completion_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MsgBeginRedelegateResponse::_internal_completion_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.completion_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MsgBeginRedelegateResponse::completion_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgBeginRedelegateResponse.completion_time)
  return _internal_completion_time();
}
inline void MsgBeginRedelegateResponse::unsafe_arena_set_allocated_completion_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.completion_time_);
  }
  _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgBeginRedelegateResponse.completion_time)
}
inline ::google::protobuf::Timestamp* MsgBeginRedelegateResponse::release_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.completion_time_;
  _impl_.completion_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* MsgBeginRedelegateResponse::unsafe_arena_release_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgBeginRedelegateResponse.completion_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.completion_time_;
  _impl_.completion_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* MsgBeginRedelegateResponse::_internal_mutable_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.completion_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.completion_time_;
}
inline ::google::protobuf::Timestamp* MsgBeginRedelegateResponse::mutable_completion_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_completion_time();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgBeginRedelegateResponse.completion_time)
  return _msg;
}
inline void MsgBeginRedelegateResponse::set_allocated_completion_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.completion_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgBeginRedelegateResponse.completion_time)
}

// -------------------------------------------------------------------

// MsgUndelegate

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUndelegate::clear_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& MsgUndelegate::delegator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgUndelegate.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUndelegate::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgUndelegate.delegator_address)
}
inline std::string* MsgUndelegate::mutable_delegator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgUndelegate.delegator_address)
  return _s;
}
inline const std::string& MsgUndelegate::_internal_delegator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_address_.Get();
}
inline void MsgUndelegate::_internal_set_delegator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(value, GetArena());
}
inline std::string* MsgUndelegate::_internal_mutable_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_address_.Mutable( GetArena());
}
inline std::string* MsgUndelegate::release_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgUndelegate.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void MsgUndelegate::set_allocated_delegator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_address_.IsDefault()) {
    _impl_.delegator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgUndelegate.delegator_address)
}

// string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void MsgUndelegate::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& MsgUndelegate::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgUndelegate.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUndelegate::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgUndelegate.validator_address)
}
inline std::string* MsgUndelegate::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgUndelegate.validator_address)
  return _s;
}
inline const std::string& MsgUndelegate::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void MsgUndelegate::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* MsgUndelegate::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* MsgUndelegate::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgUndelegate.validator_address)
  return _impl_.validator_address_.Release();
}
inline void MsgUndelegate::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgUndelegate.validator_address)
}

// .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUndelegate::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgUndelegate::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgUndelegate::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgUndelegate.amount)
  return _internal_amount();
}
inline void MsgUndelegate::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgUndelegate.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegate::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegate::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgUndelegate.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegate::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegate::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgUndelegate.amount)
  return _msg;
}
inline void MsgUndelegate::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgUndelegate.amount)
}

// -------------------------------------------------------------------

// MsgUndelegateResponse

// .google.protobuf.Timestamp completion_time = 1 [json_name = "completionTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
inline bool MsgUndelegateResponse::has_completion_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.completion_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MsgUndelegateResponse::_internal_completion_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.completion_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MsgUndelegateResponse::completion_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgUndelegateResponse.completion_time)
  return _internal_completion_time();
}
inline void MsgUndelegateResponse::unsafe_arena_set_allocated_completion_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.completion_time_);
  }
  _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgUndelegateResponse.completion_time)
}
inline ::google::protobuf::Timestamp* MsgUndelegateResponse::release_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.completion_time_;
  _impl_.completion_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* MsgUndelegateResponse::unsafe_arena_release_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgUndelegateResponse.completion_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.completion_time_;
  _impl_.completion_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* MsgUndelegateResponse::_internal_mutable_completion_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.completion_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.completion_time_;
}
inline ::google::protobuf::Timestamp* MsgUndelegateResponse::mutable_completion_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_completion_time();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgUndelegateResponse.completion_time)
  return _msg;
}
inline void MsgUndelegateResponse::set_allocated_completion_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.completion_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.completion_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgUndelegateResponse.completion_time)
}

// .cosmos.base.v1beta1.Coin amount = 2 [json_name = "amount", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50", (.amino.dont_omitempty) = true];
inline bool MsgUndelegateResponse::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgUndelegateResponse::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgUndelegateResponse::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgUndelegateResponse.amount)
  return _internal_amount();
}
inline void MsgUndelegateResponse::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgUndelegateResponse.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegateResponse::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegateResponse::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgUndelegateResponse.amount)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegateResponse::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgUndelegateResponse::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgUndelegateResponse.amount)
  return _msg;
}
inline void MsgUndelegateResponse::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgUndelegateResponse.amount)
}

// -------------------------------------------------------------------

// MsgCancelUnbondingDelegation

// string delegator_address = 1 [json_name = "delegatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCancelUnbondingDelegation::clear_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.ClearToEmpty();
}
inline const std::string& MsgCancelUnbondingDelegation::delegator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.delegator_address)
  return _internal_delegator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCancelUnbondingDelegation::set_delegator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.delegator_address)
}
inline std::string* MsgCancelUnbondingDelegation::mutable_delegator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delegator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.delegator_address)
  return _s;
}
inline const std::string& MsgCancelUnbondingDelegation::_internal_delegator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delegator_address_.Get();
}
inline void MsgCancelUnbondingDelegation::_internal_set_delegator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.Set(value, GetArena());
}
inline std::string* MsgCancelUnbondingDelegation::_internal_mutable_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delegator_address_.Mutable( GetArena());
}
inline std::string* MsgCancelUnbondingDelegation::release_delegator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.delegator_address)
  return _impl_.delegator_address_.Release();
}
inline void MsgCancelUnbondingDelegation::set_allocated_delegator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delegator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.delegator_address_.IsDefault()) {
    _impl_.delegator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.delegator_address)
}

// string validator_address = 2 [json_name = "validatorAddress", (.cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
inline void MsgCancelUnbondingDelegation::clear_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.ClearToEmpty();
}
inline const std::string& MsgCancelUnbondingDelegation::validator_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.validator_address)
  return _internal_validator_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCancelUnbondingDelegation::set_validator_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.validator_address)
}
inline std::string* MsgCancelUnbondingDelegation::mutable_validator_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_address();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.validator_address)
  return _s;
}
inline const std::string& MsgCancelUnbondingDelegation::_internal_validator_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_address_.Get();
}
inline void MsgCancelUnbondingDelegation::_internal_set_validator_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.Set(value, GetArena());
}
inline std::string* MsgCancelUnbondingDelegation::_internal_mutable_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_address_.Mutable( GetArena());
}
inline std::string* MsgCancelUnbondingDelegation::release_validator_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.validator_address)
  return _impl_.validator_address_.Release();
}
inline void MsgCancelUnbondingDelegation::set_allocated_validator_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_address_.IsDefault()) {
    _impl_.validator_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.validator_address)
}

// .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgCancelUnbondingDelegation::has_amount() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amount_ != nullptr);
  return value;
}
inline const ::cosmos::base::v1beta1::Coin& MsgCancelUnbondingDelegation::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::v1beta1::Coin* p = _impl_.amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::v1beta1::Coin&>(::cosmos::base::v1beta1::_Coin_default_instance_);
}
inline const ::cosmos::base::v1beta1::Coin& MsgCancelUnbondingDelegation::amount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.amount)
  return _internal_amount();
}
inline void MsgCancelUnbondingDelegation::unsafe_arena_set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }
  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.amount)
}
inline ::cosmos::base::v1beta1::Coin* MsgCancelUnbondingDelegation::release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* released = _impl_.amount_;
  _impl_.amount_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::v1beta1::Coin* MsgCancelUnbondingDelegation::unsafe_arena_release_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.amount)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::v1beta1::Coin* temp = _impl_.amount_;
  _impl_.amount_ = nullptr;
  return temp;
}
inline ::cosmos::base::v1beta1::Coin* MsgCancelUnbondingDelegation::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amount_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::v1beta1::Coin>(GetArena());
    _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(p);
  }
  return _impl_.amount_;
}
inline ::cosmos::base::v1beta1::Coin* MsgCancelUnbondingDelegation::mutable_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::v1beta1::Coin* _msg = _internal_mutable_amount();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.amount)
  return _msg;
}
inline void MsgCancelUnbondingDelegation::set_allocated_amount(::cosmos::base::v1beta1::Coin* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amount_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amount_ = reinterpret_cast<::cosmos::base::v1beta1::Coin*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.amount)
}

// int64 creation_height = 4 [json_name = "creationHeight"];
inline void MsgCancelUnbondingDelegation::clear_creation_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_height_ = ::int64_t{0};
}
inline ::int64_t MsgCancelUnbondingDelegation::creation_height() const {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.creation_height)
  return _internal_creation_height();
}
inline void MsgCancelUnbondingDelegation::set_creation_height(::int64_t value) {
  _internal_set_creation_height(value);
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgCancelUnbondingDelegation.creation_height)
}
inline ::int64_t MsgCancelUnbondingDelegation::_internal_creation_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_height_;
}
inline void MsgCancelUnbondingDelegation::_internal_set_creation_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_height_ = value;
}

// -------------------------------------------------------------------

// MsgCancelUnbondingDelegationResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.staking.v1beta1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgUpdateParams.authority)
}

// .cosmos.staking.v1beta1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::staking::v1beta1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::staking::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::staking::v1beta1::Params&>(::cosmos::staking::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::staking::v1beta1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.staking.v1beta1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::cosmos::staking::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.staking.v1beta1.MsgUpdateParams.params)
}
inline ::cosmos::staking::v1beta1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::staking::v1beta1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.staking.v1beta1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::staking::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::staking::v1beta1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::staking::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::staking::v1beta1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::staking::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.staking.v1beta1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::cosmos::staking::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::staking::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.staking.v1beta1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fstaking_2fv1beta1_2ftx_2eproto_2epb_2eh
