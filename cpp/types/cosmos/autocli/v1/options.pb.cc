// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/autocli/v1/options.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/autocli/v1/options.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace autocli {
namespace v1 {

inline constexpr PositionalArgDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : proto_field_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        varargs_{false},
        optional_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PositionalArgDescriptor::PositionalArgDescriptor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PositionalArgDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionalArgDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionalArgDescriptorDefaultTypeInternal() {}
  union {
    PositionalArgDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionalArgDescriptorDefaultTypeInternal _PositionalArgDescriptor_default_instance_;

inline constexpr FlagOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        shorthand_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        usage_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        deprecated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        shorthand_deprecated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        hidden_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FlagOptions::FlagOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FlagOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FlagOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FlagOptionsDefaultTypeInternal() {}
  union {
    FlagOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FlagOptionsDefaultTypeInternal _FlagOptions_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR RpcCommandOptions_FlagOptionsEntry_DoNotUse::RpcCommandOptions_FlagOptionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : RpcCommandOptions_FlagOptionsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : RpcCommandOptions_FlagOptionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct RpcCommandOptions_FlagOptionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RpcCommandOptions_FlagOptionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RpcCommandOptions_FlagOptionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RpcCommandOptions_FlagOptionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RpcCommandOptions_FlagOptionsEntry_DoNotUseDefaultTypeInternal _RpcCommandOptions_FlagOptionsEntry_DoNotUse_default_instance_;

inline constexpr RpcCommandOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : alias_{},
        suggest_for_{},
        flag_options_{},
        positional_args_{},
        rpc_method_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        use_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        long__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        short__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        example_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        deprecated_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        skip_{false},
        gov_proposal_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RpcCommandOptions::RpcCommandOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RpcCommandOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RpcCommandOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RpcCommandOptionsDefaultTypeInternal() {}
  union {
    RpcCommandOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RpcCommandOptionsDefaultTypeInternal _RpcCommandOptions_default_instance_;

inline constexpr ServiceCommandDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : rpc_command_options_{},
        sub_commands_{},
        service_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        short__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        enhance_custom_command_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ServiceCommandDescriptor::ServiceCommandDescriptor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ServiceCommandDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceCommandDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceCommandDescriptorDefaultTypeInternal() {}
  union {
    ServiceCommandDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceCommandDescriptorDefaultTypeInternal _ServiceCommandDescriptor_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ServiceCommandDescriptor_SubCommandsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ServiceCommandDescriptor_SubCommandsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ServiceCommandDescriptor_SubCommandsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ServiceCommandDescriptor_SubCommandsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ServiceCommandDescriptor_SubCommandsEntry_DoNotUseDefaultTypeInternal _ServiceCommandDescriptor_SubCommandsEntry_DoNotUse_default_instance_;

inline constexpr ModuleOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tx_{nullptr},
        query_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleOptions::ModuleOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleOptionsDefaultTypeInternal() {}
  union {
    ModuleOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleOptionsDefaultTypeInternal _ModuleOptions_default_instance_;
}  // namespace v1
}  // namespace autocli
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fautocli_2fv1_2foptions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fautocli_2fv1_2foptions_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fautocli_2fv1_2foptions_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ModuleOptions, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ModuleOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ModuleOptions, _impl_.tx_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ModuleOptions, _impl_.query_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor, _impl_.service_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor, _impl_.rpc_command_options_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor, _impl_.sub_commands_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor, _impl_.enhance_custom_command_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::ServiceCommandDescriptor, _impl_.short__),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions_FlagOptionsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.rpc_method_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.use_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.long__),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.short__),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.example_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.alias_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.suggest_for_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.deprecated_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.flag_options_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.positional_args_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.skip_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::RpcCommandOptions, _impl_.gov_proposal_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _impl_.shorthand_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _impl_.usage_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _impl_.default_value_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _impl_.deprecated_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _impl_.shorthand_deprecated_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::FlagOptions, _impl_.hidden_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::PositionalArgDescriptor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::PositionalArgDescriptor, _impl_.proto_field_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::PositionalArgDescriptor, _impl_.varargs_),
        PROTOBUF_FIELD_OFFSET(::cosmos::autocli::v1::PositionalArgDescriptor, _impl_.optional_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::cosmos::autocli::v1::ModuleOptions)},
        {12, 22, -1, sizeof(::cosmos::autocli::v1::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse)},
        {24, -1, -1, sizeof(::cosmos::autocli::v1::ServiceCommandDescriptor)},
        {37, 47, -1, sizeof(::cosmos::autocli::v1::RpcCommandOptions_FlagOptionsEntry_DoNotUse)},
        {49, -1, -1, sizeof(::cosmos::autocli::v1::RpcCommandOptions)},
        {70, -1, -1, sizeof(::cosmos::autocli::v1::FlagOptions)},
        {85, -1, -1, sizeof(::cosmos::autocli::v1::PositionalArgDescriptor)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::autocli::v1::_ModuleOptions_default_instance_._instance,
    &::cosmos::autocli::v1::_ServiceCommandDescriptor_SubCommandsEntry_DoNotUse_default_instance_._instance,
    &::cosmos::autocli::v1::_ServiceCommandDescriptor_default_instance_._instance,
    &::cosmos::autocli::v1::_RpcCommandOptions_FlagOptionsEntry_DoNotUse_default_instance_._instance,
    &::cosmos::autocli::v1::_RpcCommandOptions_default_instance_._instance,
    &::cosmos::autocli::v1::_FlagOptions_default_instance_._instance,
    &::cosmos::autocli::v1::_PositionalArgDescriptor_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fautocli_2fv1_2foptions_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\037cosmos/autocli/v1/options.proto\022\021cosmo"
    "s.autocli.v1\032\031cosmos_proto/cosmos.proto\""
    "\217\001\n\rModuleOptions\022;\n\002tx\030\001 \001(\0132+.cosmos.a"
    "utocli.v1.ServiceCommandDescriptorR\002tx\022A"
    "\n\005query\030\002 \001(\0132+.cosmos.autocli.v1.Servic"
    "eCommandDescriptorR\005query\"\244\003\n\030ServiceCom"
    "mandDescriptor\022\030\n\007service\030\001 \001(\tR\007service"
    "\022T\n\023rpc_command_options\030\002 \003(\0132$.cosmos.a"
    "utocli.v1.RpcCommandOptionsR\021rpcCommandO"
    "ptions\022_\n\014sub_commands\030\003 \003(\0132<.cosmos.au"
    "tocli.v1.ServiceCommandDescriptor.SubCom"
    "mandsEntryR\013subCommands\0224\n\026enhance_custo"
    "m_command\030\004 \001(\010R\024enhanceCustomCommand\022\024\n"
    "\005short\030\005 \001(\tR\005short\032k\n\020SubCommandsEntry\022"
    "\020\n\003key\030\001 \001(\tR\003key\022A\n\005value\030\002 \001(\0132+.cosmo"
    "s.autocli.v1.ServiceCommandDescriptorR\005v"
    "alue:\0028\001\"\334\004\n\021RpcCommandOptions\022\035\n\nrpc_me"
    "thod\030\001 \001(\tR\trpcMethod\022\020\n\003use\030\002 \001(\tR\003use\022"
    "\022\n\004long\030\003 \001(\tR\004long\022\024\n\005short\030\004 \001(\tR\005shor"
    "t\022\030\n\007example\030\005 \001(\tR\007example\022\024\n\005alias\030\006 \003"
    "(\tR\005alias\022\037\n\013suggest_for\030\007 \003(\tR\nsuggestF"
    "or\022\036\n\ndeprecated\030\010 \001(\tR\ndeprecated\022\030\n\007ve"
    "rsion\030\t \001(\tR\007version\022X\n\014flag_options\030\n \003"
    "(\01325.cosmos.autocli.v1.RpcCommandOptions"
    ".FlagOptionsEntryR\013flagOptions\022S\n\017positi"
    "onal_args\030\013 \003(\0132*.cosmos.autocli.v1.Posi"
    "tionalArgDescriptorR\016positionalArgs\022\022\n\004s"
    "kip\030\014 \001(\010R\004skip\022>\n\014gov_proposal\030\r \001(\010B\033\332"
    "\264-\027client/v2 v2.0.0-beta.2R\013govProposal\032"
    "^\n\020FlagOptionsEntry\022\020\n\003key\030\001 \001(\tR\003key\0224\n"
    "\005value\030\002 \001(\0132\036.cosmos.autocli.v1.FlagOpt"
    "ionsR\005value:\0028\001\"\345\001\n\013FlagOptions\022\022\n\004name\030"
    "\001 \001(\tR\004name\022\034\n\tshorthand\030\002 \001(\tR\tshorthan"
    "d\022\024\n\005usage\030\003 \001(\tR\005usage\022#\n\rdefault_value"
    "\030\004 \001(\tR\014defaultValue\022\036\n\ndeprecated\030\006 \001(\t"
    "R\ndeprecated\0221\n\024shorthand_deprecated\030\007 \001"
    "(\tR\023shorthandDeprecated\022\026\n\006hidden\030\010 \001(\010R"
    "\006hidden\"p\n\027PositionalArgDescriptor\022\037\n\013pr"
    "oto_field\030\001 \001(\tR\nprotoField\022\030\n\007varargs\030\002"
    " \001(\010R\007varargs\022\032\n\010optional\030\003 \001(\010R\010optiona"
    "lB+Z)cosmossdk.io/api/cosmos/base/cli/v1"
    ";cliv1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto_deps[1] =
    {
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto = {
    false,
    false,
    1654,
    descriptor_table_protodef_cosmos_2fautocli_2fv1_2foptions_2eproto,
    "cosmos/autocli/v1/options.proto",
    &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto_once,
    descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fautocli_2fv1_2foptions_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fautocli_2fv1_2foptions_2eproto,
    file_level_service_descriptors_cosmos_2fautocli_2fv1_2foptions_2eproto,
};
namespace cosmos {
namespace autocli {
namespace v1 {
// ===================================================================

class ModuleOptions::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ModuleOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_._has_bits_);
};

ModuleOptions::ModuleOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.autocli.v1.ModuleOptions)
}
inline PROTOBUF_NDEBUG_INLINE ModuleOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::autocli::v1::ModuleOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ModuleOptions::ModuleOptions(
    ::google::protobuf::Arena* arena,
    const ModuleOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tx_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::autocli::v1::ServiceCommandDescriptor>(
                              arena, *from._impl_.tx_)
                        : nullptr;
  _impl_.query_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::autocli::v1::ServiceCommandDescriptor>(
                              arena, *from._impl_.query_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.autocli.v1.ModuleOptions)
}
inline PROTOBUF_NDEBUG_INLINE ModuleOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ModuleOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_),
           0,
           offsetof(Impl_, query_) -
               offsetof(Impl_, tx_) +
               sizeof(Impl_::query_));
}
ModuleOptions::~ModuleOptions() {
  // @@protoc_insertion_point(destructor:cosmos.autocli.v1.ModuleOptions)
  SharedDtor(*this);
}
inline void ModuleOptions::SharedDtor(MessageLite& self) {
  ModuleOptions& this_ = static_cast<ModuleOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.tx_;
  delete this_._impl_.query_;
  this_._impl_.~Impl_();
}

inline void* ModuleOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModuleOptions(arena);
}
constexpr auto ModuleOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleOptions),
                                            alignof(ModuleOptions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModuleOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModuleOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModuleOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModuleOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModuleOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModuleOptions>(), &ModuleOptions::ByteSizeLong,
            &ModuleOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_._cached_size_),
        false,
    },
    &ModuleOptions::kDescriptorMethods,
    &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModuleOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ModuleOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::autocli::v1::ModuleOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.autocli.v1.ServiceCommandDescriptor query = 2 [json_name = "query"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_.query_)}},
    // .cosmos.autocli.v1.ServiceCommandDescriptor tx = 1 [json_name = "tx"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_.tx_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.autocli.v1.ServiceCommandDescriptor tx = 1 [json_name = "tx"];
    {PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_.tx_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.autocli.v1.ServiceCommandDescriptor query = 2 [json_name = "query"];
    {PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_.query_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::ServiceCommandDescriptor>()},
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::ServiceCommandDescriptor>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ModuleOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.autocli.v1.ModuleOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.tx_ != nullptr);
      _impl_.tx_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.query_ != nullptr);
      _impl_.query_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModuleOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModuleOptions& this_ = static_cast<const ModuleOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModuleOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModuleOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.autocli.v1.ModuleOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.autocli.v1.ServiceCommandDescriptor tx = 1 [json_name = "tx"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.tx_, this_._impl_.tx_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.autocli.v1.ServiceCommandDescriptor query = 2 [json_name = "query"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.query_, this_._impl_.query_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.autocli.v1.ModuleOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModuleOptions::ByteSizeLong(const MessageLite& base) {
          const ModuleOptions& this_ = static_cast<const ModuleOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModuleOptions::ByteSizeLong() const {
          const ModuleOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.autocli.v1.ModuleOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .cosmos.autocli.v1.ServiceCommandDescriptor tx = 1 [json_name = "tx"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tx_);
            }
            // .cosmos.autocli.v1.ServiceCommandDescriptor query = 2 [json_name = "query"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.query_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModuleOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleOptions*>(&to_msg);
  auto& from = static_cast<const ModuleOptions&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.autocli.v1.ModuleOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.tx_ != nullptr);
      if (_this->_impl_.tx_ == nullptr) {
        _this->_impl_.tx_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::autocli::v1::ServiceCommandDescriptor>(arena, *from._impl_.tx_);
      } else {
        _this->_impl_.tx_->MergeFrom(*from._impl_.tx_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.query_ != nullptr);
      if (_this->_impl_.query_ == nullptr) {
        _this->_impl_.query_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::autocli::v1::ServiceCommandDescriptor>(arena, *from._impl_.query_);
      } else {
        _this->_impl_.query_->MergeFrom(*from._impl_.query_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleOptions::CopyFrom(const ModuleOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.autocli.v1.ModuleOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleOptions::InternalSwap(ModuleOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_.query_)
      + sizeof(ModuleOptions::_impl_.query_)
      - PROTOBUF_FIELD_OFFSET(ModuleOptions, _impl_.tx_)>(
          reinterpret_cast<char*>(&_impl_.tx_),
          reinterpret_cast<char*>(&other->_impl_.tx_));
}

::google::protobuf::Metadata ModuleOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse() : SuperType() {}
              ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) ServiceCommandDescriptor_SubCommandsEntry_DoNotUse(arena);
              }
              constexpr auto ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse),
                                                          alignof(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_ServiceCommandDescriptor_SubCommandsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<ServiceCommandDescriptor_SubCommandsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 71, 2> ServiceCommandDescriptor_SubCommandsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::autocli::v1::ServiceCommandDescriptor_SubCommandsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.autocli.v1.ServiceCommandDescriptor value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.autocli.v1.ServiceCommandDescriptor value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor_SubCommandsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::ServiceCommandDescriptor>()},
  }}, {{
    "\73\3\0\0\0\0\0\0"
    "cosmos.autocli.v1.ServiceCommandDescriptor.SubCommandsEntry"
    "key"
  }},
};

// ===================================================================

class ServiceCommandDescriptor::_Internal {
 public:
};

ServiceCommandDescriptor::ServiceCommandDescriptor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.autocli.v1.ServiceCommandDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE ServiceCommandDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::autocli::v1::ServiceCommandDescriptor& from_msg)
      : rpc_command_options_{visibility, arena, from.rpc_command_options_},
        sub_commands_{visibility, arena, from.sub_commands_},
        service_(arena, from.service_),
        short__(arena, from.short__),
        _cached_size_{0} {}

ServiceCommandDescriptor::ServiceCommandDescriptor(
    ::google::protobuf::Arena* arena,
    const ServiceCommandDescriptor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ServiceCommandDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.enhance_custom_command_ = from._impl_.enhance_custom_command_;

  // @@protoc_insertion_point(copy_constructor:cosmos.autocli.v1.ServiceCommandDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE ServiceCommandDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : rpc_command_options_{visibility, arena},
        sub_commands_{visibility, arena},
        service_(arena),
        short__(arena),
        _cached_size_{0} {}

inline void ServiceCommandDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.enhance_custom_command_ = {};
}
ServiceCommandDescriptor::~ServiceCommandDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.autocli.v1.ServiceCommandDescriptor)
  SharedDtor(*this);
}
inline void ServiceCommandDescriptor::SharedDtor(MessageLite& self) {
  ServiceCommandDescriptor& this_ = static_cast<ServiceCommandDescriptor&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.service_.Destroy();
  this_._impl_.short__.Destroy();
  this_._impl_.~Impl_();
}

inline void* ServiceCommandDescriptor::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ServiceCommandDescriptor(arena);
}
constexpr auto ServiceCommandDescriptor::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.rpc_command_options_) +
          decltype(ServiceCommandDescriptor::_impl_.rpc_command_options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.sub_commands_) +
          decltype(ServiceCommandDescriptor::_impl_.sub_commands_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.sub_commands_) +
          decltype(ServiceCommandDescriptor::_impl_.sub_commands_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ServiceCommandDescriptor), alignof(ServiceCommandDescriptor), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ServiceCommandDescriptor::PlacementNew_,
                                 sizeof(ServiceCommandDescriptor),
                                 alignof(ServiceCommandDescriptor));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ServiceCommandDescriptor::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ServiceCommandDescriptor_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ServiceCommandDescriptor::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ServiceCommandDescriptor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ServiceCommandDescriptor::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ServiceCommandDescriptor>(), &ServiceCommandDescriptor::ByteSizeLong,
            &ServiceCommandDescriptor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_._cached_size_),
        false,
    },
    &ServiceCommandDescriptor::kDescriptorMethods,
    &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ServiceCommandDescriptor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 75, 2> ServiceCommandDescriptor::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::autocli::v1::ServiceCommandDescriptor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string service = 1 [json_name = "service"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.service_)}},
    // repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2 [json_name = "rpcCommandOptions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.rpc_command_options_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // bool enhance_custom_command = 4 [json_name = "enhanceCustomCommand"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ServiceCommandDescriptor, _impl_.enhance_custom_command_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.enhance_custom_command_)}},
    // string short = 5 [json_name = "short"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.short__)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string service = 1 [json_name = "service"];
    {PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.service_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2 [json_name = "rpcCommandOptions"];
    {PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.rpc_command_options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .cosmos.autocli.v1.ServiceCommandDescriptor> sub_commands = 3 [json_name = "subCommands"];
    {PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.sub_commands_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // bool enhance_custom_command = 4 [json_name = "enhanceCustomCommand"];
    {PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.enhance_custom_command_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string short = 5 [json_name = "short"];
    {PROTOBUF_FIELD_OFFSET(ServiceCommandDescriptor, _impl_.short__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::RpcCommandOptions>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(ServiceCommandDescriptor()._impl_.sub_commands_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::ServiceCommandDescriptor>()},
  }}, {{
    "\52\7\0\14\0\5\0\0"
    "cosmos.autocli.v1.ServiceCommandDescriptor"
    "service"
    "sub_commands"
    "short"
  }},
};

PROTOBUF_NOINLINE void ServiceCommandDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.autocli.v1.ServiceCommandDescriptor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rpc_command_options_.Clear();
  _impl_.sub_commands_.Clear();
  _impl_.service_.ClearToEmpty();
  _impl_.short__.ClearToEmpty();
  _impl_.enhance_custom_command_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ServiceCommandDescriptor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ServiceCommandDescriptor& this_ = static_cast<const ServiceCommandDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ServiceCommandDescriptor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ServiceCommandDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.autocli.v1.ServiceCommandDescriptor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string service = 1 [json_name = "service"];
          if (!this_._internal_service().empty()) {
            const std::string& _s = this_._internal_service();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.ServiceCommandDescriptor.service");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2 [json_name = "rpcCommandOptions"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_rpc_command_options_size());
               i < n; i++) {
            const auto& repfield = this_._internal_rpc_command_options().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .cosmos.autocli.v1.ServiceCommandDescriptor> sub_commands = 3 [json_name = "subCommands"];
          if (!this_._internal_sub_commands().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::cosmos::autocli::v1::ServiceCommandDescriptor>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::cosmos::autocli::v1::ServiceCommandDescriptor,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_sub_commands();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.ServiceCommandDescriptor.sub_commands");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    3, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.ServiceCommandDescriptor.sub_commands");
              }
            }
          }

          // bool enhance_custom_command = 4 [json_name = "enhanceCustomCommand"];
          if (this_._internal_enhance_custom_command() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_enhance_custom_command(), target);
          }

          // string short = 5 [json_name = "short"];
          if (!this_._internal_short_().empty()) {
            const std::string& _s = this_._internal_short_();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.ServiceCommandDescriptor.short");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.autocli.v1.ServiceCommandDescriptor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ServiceCommandDescriptor::ByteSizeLong(const MessageLite& base) {
          const ServiceCommandDescriptor& this_ = static_cast<const ServiceCommandDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ServiceCommandDescriptor::ByteSizeLong() const {
          const ServiceCommandDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.autocli.v1.ServiceCommandDescriptor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.autocli.v1.RpcCommandOptions rpc_command_options = 2 [json_name = "rpcCommandOptions"];
            {
              total_size += 1UL * this_._internal_rpc_command_options_size();
              for (const auto& msg : this_._internal_rpc_command_options()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .cosmos.autocli.v1.ServiceCommandDescriptor> sub_commands = 3 [json_name = "subCommands"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_sub_commands_size());
              for (const auto& entry : this_._internal_sub_commands()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::cosmos::autocli::v1::ServiceCommandDescriptor,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // string service = 1 [json_name = "service"];
            if (!this_._internal_service().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_service());
            }
            // string short = 5 [json_name = "short"];
            if (!this_._internal_short_().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_short_());
            }
            // bool enhance_custom_command = 4 [json_name = "enhanceCustomCommand"];
            if (this_._internal_enhance_custom_command() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ServiceCommandDescriptor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ServiceCommandDescriptor*>(&to_msg);
  auto& from = static_cast<const ServiceCommandDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.autocli.v1.ServiceCommandDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_rpc_command_options()->MergeFrom(
      from._internal_rpc_command_options());
  _this->_impl_.sub_commands_.MergeFrom(from._impl_.sub_commands_);
  if (!from._internal_service().empty()) {
    _this->_internal_set_service(from._internal_service());
  }
  if (!from._internal_short_().empty()) {
    _this->_internal_set_short_(from._internal_short_());
  }
  if (from._internal_enhance_custom_command() != 0) {
    _this->_impl_.enhance_custom_command_ = from._impl_.enhance_custom_command_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ServiceCommandDescriptor::CopyFrom(const ServiceCommandDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.autocli.v1.ServiceCommandDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ServiceCommandDescriptor::InternalSwap(ServiceCommandDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.rpc_command_options_.InternalSwap(&other->_impl_.rpc_command_options_);
  _impl_.sub_commands_.InternalSwap(&other->_impl_.sub_commands_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_, &other->_impl_.service_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short__, &other->_impl_.short__, arena);
        swap(_impl_.enhance_custom_command_, other->_impl_.enhance_custom_command_);
}

::google::protobuf::Metadata ServiceCommandDescriptor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              RpcCommandOptions_FlagOptionsEntry_DoNotUse::RpcCommandOptions_FlagOptionsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              RpcCommandOptions_FlagOptionsEntry_DoNotUse::RpcCommandOptions_FlagOptionsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              RpcCommandOptions_FlagOptionsEntry_DoNotUse::RpcCommandOptions_FlagOptionsEntry_DoNotUse() : SuperType() {}
              RpcCommandOptions_FlagOptionsEntry_DoNotUse::RpcCommandOptions_FlagOptionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* RpcCommandOptions_FlagOptionsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) RpcCommandOptions_FlagOptionsEntry_DoNotUse(arena);
              }
              constexpr auto RpcCommandOptions_FlagOptionsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RpcCommandOptions_FlagOptionsEntry_DoNotUse),
                                                          alignof(RpcCommandOptions_FlagOptionsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull RpcCommandOptions_FlagOptionsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_RpcCommandOptions_FlagOptionsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &RpcCommandOptions_FlagOptionsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<RpcCommandOptions_FlagOptionsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &RpcCommandOptions_FlagOptionsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &RpcCommandOptions_FlagOptionsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &RpcCommandOptions_FlagOptionsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* RpcCommandOptions_FlagOptionsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 64, 2> RpcCommandOptions_FlagOptionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::autocli::v1::RpcCommandOptions_FlagOptionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.autocli.v1.FlagOptions value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.autocli.v1.FlagOptions value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions_FlagOptionsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::FlagOptions>()},
  }}, {{
    "\64\3\0\0\0\0\0\0"
    "cosmos.autocli.v1.RpcCommandOptions.FlagOptionsEntry"
    "key"
  }},
};

// ===================================================================

class RpcCommandOptions::_Internal {
 public:
};

RpcCommandOptions::RpcCommandOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.autocli.v1.RpcCommandOptions)
}
inline PROTOBUF_NDEBUG_INLINE RpcCommandOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::autocli::v1::RpcCommandOptions& from_msg)
      : alias_{visibility, arena, from.alias_},
        suggest_for_{visibility, arena, from.suggest_for_},
        flag_options_{visibility, arena, from.flag_options_},
        positional_args_{visibility, arena, from.positional_args_},
        rpc_method_(arena, from.rpc_method_),
        use_(arena, from.use_),
        long__(arena, from.long__),
        short__(arena, from.short__),
        example_(arena, from.example_),
        deprecated_(arena, from.deprecated_),
        version_(arena, from.version_),
        _cached_size_{0} {}

RpcCommandOptions::RpcCommandOptions(
    ::google::protobuf::Arena* arena,
    const RpcCommandOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RpcCommandOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, skip_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, skip_),
           offsetof(Impl_, gov_proposal_) -
               offsetof(Impl_, skip_) +
               sizeof(Impl_::gov_proposal_));

  // @@protoc_insertion_point(copy_constructor:cosmos.autocli.v1.RpcCommandOptions)
}
inline PROTOBUF_NDEBUG_INLINE RpcCommandOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : alias_{visibility, arena},
        suggest_for_{visibility, arena},
        flag_options_{visibility, arena},
        positional_args_{visibility, arena},
        rpc_method_(arena),
        use_(arena),
        long__(arena),
        short__(arena),
        example_(arena),
        deprecated_(arena),
        version_(arena),
        _cached_size_{0} {}

inline void RpcCommandOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, skip_),
           0,
           offsetof(Impl_, gov_proposal_) -
               offsetof(Impl_, skip_) +
               sizeof(Impl_::gov_proposal_));
}
RpcCommandOptions::~RpcCommandOptions() {
  // @@protoc_insertion_point(destructor:cosmos.autocli.v1.RpcCommandOptions)
  SharedDtor(*this);
}
inline void RpcCommandOptions::SharedDtor(MessageLite& self) {
  RpcCommandOptions& this_ = static_cast<RpcCommandOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.rpc_method_.Destroy();
  this_._impl_.use_.Destroy();
  this_._impl_.long__.Destroy();
  this_._impl_.short__.Destroy();
  this_._impl_.example_.Destroy();
  this_._impl_.deprecated_.Destroy();
  this_._impl_.version_.Destroy();
  this_._impl_.~Impl_();
}

inline void* RpcCommandOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) RpcCommandOptions(arena);
}
constexpr auto RpcCommandOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.alias_) +
          decltype(RpcCommandOptions::_impl_.alias_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.suggest_for_) +
          decltype(RpcCommandOptions::_impl_.suggest_for_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.flag_options_) +
          decltype(RpcCommandOptions::_impl_.flag_options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.flag_options_) +
          decltype(RpcCommandOptions::_impl_.flag_options_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.positional_args_) +
          decltype(RpcCommandOptions::_impl_.positional_args_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(RpcCommandOptions), alignof(RpcCommandOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RpcCommandOptions::PlacementNew_,
                                 sizeof(RpcCommandOptions),
                                 alignof(RpcCommandOptions));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull RpcCommandOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_RpcCommandOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &RpcCommandOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<RpcCommandOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &RpcCommandOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<RpcCommandOptions>(), &RpcCommandOptions::ByteSizeLong,
            &RpcCommandOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_._cached_size_),
        false,
    },
    &RpcCommandOptions::kDescriptorMethods,
    &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* RpcCommandOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 3, 126, 2> RpcCommandOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::autocli::v1::RpcCommandOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string rpc_method = 1 [json_name = "rpcMethod"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.rpc_method_)}},
    // string use = 2 [json_name = "use"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.use_)}},
    // string long = 3 [json_name = "long"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.long__)}},
    // string short = 4 [json_name = "short"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.short__)}},
    // string example = 5 [json_name = "example"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.example_)}},
    // repeated string alias = 6 [json_name = "alias"];
    {::_pbi::TcParser::FastUR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.alias_)}},
    // repeated string suggest_for = 7 [json_name = "suggestFor"];
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.suggest_for_)}},
    // string deprecated = 8 [json_name = "deprecated"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.deprecated_)}},
    // string version = 9 [json_name = "version"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.positional_args_)}},
    // bool skip = 12 [json_name = "skip"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RpcCommandOptions, _impl_.skip_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.skip_)}},
    // bool gov_proposal = 13 [json_name = "govProposal", (.cosmos_proto.field_added_in) = "client/v2 v2.0.0-beta.2"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RpcCommandOptions, _impl_.gov_proposal_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.gov_proposal_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string rpc_method = 1 [json_name = "rpcMethod"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.rpc_method_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string use = 2 [json_name = "use"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.use_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string long = 3 [json_name = "long"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.long__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string short = 4 [json_name = "short"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.short__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string example = 5 [json_name = "example"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.example_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string alias = 6 [json_name = "alias"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.alias_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string suggest_for = 7 [json_name = "suggestFor"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.suggest_for_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string deprecated = 8 [json_name = "deprecated"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.deprecated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 9 [json_name = "version"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, .cosmos.autocli.v1.FlagOptions> flag_options = 10 [json_name = "flagOptions"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.flag_options_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.positional_args_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool skip = 12 [json_name = "skip"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.skip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool gov_proposal = 13 [json_name = "govProposal", (.cosmos_proto.field_added_in) = "client/v2 v2.0.0-beta.2"];
    {PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.gov_proposal_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::PositionalArgDescriptor>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(RpcCommandOptions()._impl_.flag_options_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::cosmos::autocli::v1::FlagOptions>()},
  }}, {{
    "\43\12\3\4\5\7\5\13\12\7\14\0\0\0\0\0"
    "cosmos.autocli.v1.RpcCommandOptions"
    "rpc_method"
    "use"
    "long"
    "short"
    "example"
    "alias"
    "suggest_for"
    "deprecated"
    "version"
    "flag_options"
  }},
};

PROTOBUF_NOINLINE void RpcCommandOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.autocli.v1.RpcCommandOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.alias_.Clear();
  _impl_.suggest_for_.Clear();
  _impl_.flag_options_.Clear();
  _impl_.positional_args_.Clear();
  _impl_.rpc_method_.ClearToEmpty();
  _impl_.use_.ClearToEmpty();
  _impl_.long__.ClearToEmpty();
  _impl_.short__.ClearToEmpty();
  _impl_.example_.ClearToEmpty();
  _impl_.deprecated_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  ::memset(&_impl_.skip_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gov_proposal_) -
      reinterpret_cast<char*>(&_impl_.skip_)) + sizeof(_impl_.gov_proposal_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RpcCommandOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RpcCommandOptions& this_ = static_cast<const RpcCommandOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RpcCommandOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RpcCommandOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.autocli.v1.RpcCommandOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string rpc_method = 1 [json_name = "rpcMethod"];
          if (!this_._internal_rpc_method().empty()) {
            const std::string& _s = this_._internal_rpc_method();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.rpc_method");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string use = 2 [json_name = "use"];
          if (!this_._internal_use().empty()) {
            const std::string& _s = this_._internal_use();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.use");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string long = 3 [json_name = "long"];
          if (!this_._internal_long_().empty()) {
            const std::string& _s = this_._internal_long_();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.long");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string short = 4 [json_name = "short"];
          if (!this_._internal_short_().empty()) {
            const std::string& _s = this_._internal_short_();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.short");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string example = 5 [json_name = "example"];
          if (!this_._internal_example().empty()) {
            const std::string& _s = this_._internal_example();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.example");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // repeated string alias = 6 [json_name = "alias"];
          for (int i = 0, n = this_._internal_alias_size(); i < n; ++i) {
            const auto& s = this_._internal_alias().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.alias");
            target = stream->WriteString(6, s, target);
          }

          // repeated string suggest_for = 7 [json_name = "suggestFor"];
          for (int i = 0, n = this_._internal_suggest_for_size(); i < n; ++i) {
            const auto& s = this_._internal_suggest_for().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.suggest_for");
            target = stream->WriteString(7, s, target);
          }

          // string deprecated = 8 [json_name = "deprecated"];
          if (!this_._internal_deprecated().empty()) {
            const std::string& _s = this_._internal_deprecated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.deprecated");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string version = 9 [json_name = "version"];
          if (!this_._internal_version().empty()) {
            const std::string& _s = this_._internal_version();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.version");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // map<string, .cosmos.autocli.v1.FlagOptions> flag_options = 10 [json_name = "flagOptions"];
          if (!this_._internal_flag_options().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::cosmos::autocli::v1::FlagOptions>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::cosmos::autocli::v1::FlagOptions,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_flag_options();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.flag_options");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    10, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.RpcCommandOptions.flag_options");
              }
            }
          }

          // repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_positional_args_size());
               i < n; i++) {
            const auto& repfield = this_._internal_positional_args().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    11, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool skip = 12 [json_name = "skip"];
          if (this_._internal_skip() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                12, this_._internal_skip(), target);
          }

          // bool gov_proposal = 13 [json_name = "govProposal", (.cosmos_proto.field_added_in) = "client/v2 v2.0.0-beta.2"];
          if (this_._internal_gov_proposal() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_gov_proposal(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.autocli.v1.RpcCommandOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RpcCommandOptions::ByteSizeLong(const MessageLite& base) {
          const RpcCommandOptions& this_ = static_cast<const RpcCommandOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RpcCommandOptions::ByteSizeLong() const {
          const RpcCommandOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.autocli.v1.RpcCommandOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string alias = 6 [json_name = "alias"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_alias().size());
              for (int i = 0, n = this_._internal_alias().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_alias().Get(i));
              }
            }
            // repeated string suggest_for = 7 [json_name = "suggestFor"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_suggest_for().size());
              for (int i = 0, n = this_._internal_suggest_for().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_suggest_for().Get(i));
              }
            }
            // map<string, .cosmos.autocli.v1.FlagOptions> flag_options = 10 [json_name = "flagOptions"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_flag_options_size());
              for (const auto& entry : this_._internal_flag_options()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::cosmos::autocli::v1::FlagOptions,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];
            {
              total_size += 1UL * this_._internal_positional_args_size();
              for (const auto& msg : this_._internal_positional_args()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string rpc_method = 1 [json_name = "rpcMethod"];
            if (!this_._internal_rpc_method().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_rpc_method());
            }
            // string use = 2 [json_name = "use"];
            if (!this_._internal_use().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_use());
            }
            // string long = 3 [json_name = "long"];
            if (!this_._internal_long_().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_long_());
            }
            // string short = 4 [json_name = "short"];
            if (!this_._internal_short_().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_short_());
            }
            // string example = 5 [json_name = "example"];
            if (!this_._internal_example().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_example());
            }
            // string deprecated = 8 [json_name = "deprecated"];
            if (!this_._internal_deprecated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_deprecated());
            }
            // string version = 9 [json_name = "version"];
            if (!this_._internal_version().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_version());
            }
            // bool skip = 12 [json_name = "skip"];
            if (this_._internal_skip() != 0) {
              total_size += 2;
            }
            // bool gov_proposal = 13 [json_name = "govProposal", (.cosmos_proto.field_added_in) = "client/v2 v2.0.0-beta.2"];
            if (this_._internal_gov_proposal() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RpcCommandOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RpcCommandOptions*>(&to_msg);
  auto& from = static_cast<const RpcCommandOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.autocli.v1.RpcCommandOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_alias()->MergeFrom(from._internal_alias());
  _this->_internal_mutable_suggest_for()->MergeFrom(from._internal_suggest_for());
  _this->_impl_.flag_options_.MergeFrom(from._impl_.flag_options_);
  _this->_internal_mutable_positional_args()->MergeFrom(
      from._internal_positional_args());
  if (!from._internal_rpc_method().empty()) {
    _this->_internal_set_rpc_method(from._internal_rpc_method());
  }
  if (!from._internal_use().empty()) {
    _this->_internal_set_use(from._internal_use());
  }
  if (!from._internal_long_().empty()) {
    _this->_internal_set_long_(from._internal_long_());
  }
  if (!from._internal_short_().empty()) {
    _this->_internal_set_short_(from._internal_short_());
  }
  if (!from._internal_example().empty()) {
    _this->_internal_set_example(from._internal_example());
  }
  if (!from._internal_deprecated().empty()) {
    _this->_internal_set_deprecated(from._internal_deprecated());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_skip() != 0) {
    _this->_impl_.skip_ = from._impl_.skip_;
  }
  if (from._internal_gov_proposal() != 0) {
    _this->_impl_.gov_proposal_ = from._impl_.gov_proposal_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RpcCommandOptions::CopyFrom(const RpcCommandOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.autocli.v1.RpcCommandOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RpcCommandOptions::InternalSwap(RpcCommandOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.alias_.InternalSwap(&other->_impl_.alias_);
  _impl_.suggest_for_.InternalSwap(&other->_impl_.suggest_for_);
  _impl_.flag_options_.InternalSwap(&other->_impl_.flag_options_);
  _impl_.positional_args_.InternalSwap(&other->_impl_.positional_args_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.rpc_method_, &other->_impl_.rpc_method_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.use_, &other->_impl_.use_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.long__, &other->_impl_.long__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.short__, &other->_impl_.short__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.example_, &other->_impl_.example_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.deprecated_, &other->_impl_.deprecated_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, &other->_impl_.version_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.gov_proposal_)
      + sizeof(RpcCommandOptions::_impl_.gov_proposal_)
      - PROTOBUF_FIELD_OFFSET(RpcCommandOptions, _impl_.skip_)>(
          reinterpret_cast<char*>(&_impl_.skip_),
          reinterpret_cast<char*>(&other->_impl_.skip_));
}

::google::protobuf::Metadata RpcCommandOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FlagOptions::_Internal {
 public:
};

FlagOptions::FlagOptions(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.autocli.v1.FlagOptions)
}
inline PROTOBUF_NDEBUG_INLINE FlagOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::autocli::v1::FlagOptions& from_msg)
      : name_(arena, from.name_),
        shorthand_(arena, from.shorthand_),
        usage_(arena, from.usage_),
        default_value_(arena, from.default_value_),
        deprecated_(arena, from.deprecated_),
        shorthand_deprecated_(arena, from.shorthand_deprecated_),
        _cached_size_{0} {}

FlagOptions::FlagOptions(
    ::google::protobuf::Arena* arena,
    const FlagOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FlagOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.hidden_ = from._impl_.hidden_;

  // @@protoc_insertion_point(copy_constructor:cosmos.autocli.v1.FlagOptions)
}
inline PROTOBUF_NDEBUG_INLINE FlagOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        shorthand_(arena),
        usage_(arena),
        default_value_(arena),
        deprecated_(arena),
        shorthand_deprecated_(arena),
        _cached_size_{0} {}

inline void FlagOptions::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.hidden_ = {};
}
FlagOptions::~FlagOptions() {
  // @@protoc_insertion_point(destructor:cosmos.autocli.v1.FlagOptions)
  SharedDtor(*this);
}
inline void FlagOptions::SharedDtor(MessageLite& self) {
  FlagOptions& this_ = static_cast<FlagOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  this_._impl_.shorthand_.Destroy();
  this_._impl_.usage_.Destroy();
  this_._impl_.default_value_.Destroy();
  this_._impl_.deprecated_.Destroy();
  this_._impl_.shorthand_deprecated_.Destroy();
  this_._impl_.~Impl_();
}

inline void* FlagOptions::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FlagOptions(arena);
}
constexpr auto FlagOptions::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FlagOptions),
                                            alignof(FlagOptions));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FlagOptions::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FlagOptions_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FlagOptions::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FlagOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FlagOptions::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FlagOptions>(), &FlagOptions::ByteSizeLong,
            &FlagOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_._cached_size_),
        false,
    },
    &FlagOptions::kDescriptorMethods,
    &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FlagOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 99, 2> FlagOptions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967056,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::autocli::v1::FlagOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool hidden = 8 [json_name = "hidden"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(FlagOptions, _impl_.hidden_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.hidden_)}},
    // string name = 1 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.name_)}},
    // string shorthand = 2 [json_name = "shorthand"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.shorthand_)}},
    // string usage = 3 [json_name = "usage"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.usage_)}},
    // string default_value = 4 [json_name = "defaultValue"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.default_value_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string deprecated = 6 [json_name = "deprecated"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.deprecated_)}},
    // string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.shorthand_deprecated_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string shorthand = 2 [json_name = "shorthand"];
    {PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.shorthand_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string usage = 3 [json_name = "usage"];
    {PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.usage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string default_value = 4 [json_name = "defaultValue"];
    {PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.default_value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string deprecated = 6 [json_name = "deprecated"];
    {PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.deprecated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];
    {PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.shorthand_deprecated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool hidden = 8 [json_name = "hidden"];
    {PROTOBUF_FIELD_OFFSET(FlagOptions, _impl_.hidden_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\35\4\11\5\15\12\24\0"
    "cosmos.autocli.v1.FlagOptions"
    "name"
    "shorthand"
    "usage"
    "default_value"
    "deprecated"
    "shorthand_deprecated"
  }},
};

PROTOBUF_NOINLINE void FlagOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.autocli.v1.FlagOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.shorthand_.ClearToEmpty();
  _impl_.usage_.ClearToEmpty();
  _impl_.default_value_.ClearToEmpty();
  _impl_.deprecated_.ClearToEmpty();
  _impl_.shorthand_deprecated_.ClearToEmpty();
  _impl_.hidden_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FlagOptions::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FlagOptions& this_ = static_cast<const FlagOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FlagOptions::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FlagOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.autocli.v1.FlagOptions)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.FlagOptions.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string shorthand = 2 [json_name = "shorthand"];
          if (!this_._internal_shorthand().empty()) {
            const std::string& _s = this_._internal_shorthand();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.FlagOptions.shorthand");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string usage = 3 [json_name = "usage"];
          if (!this_._internal_usage().empty()) {
            const std::string& _s = this_._internal_usage();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.FlagOptions.usage");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string default_value = 4 [json_name = "defaultValue"];
          if (!this_._internal_default_value().empty()) {
            const std::string& _s = this_._internal_default_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.FlagOptions.default_value");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string deprecated = 6 [json_name = "deprecated"];
          if (!this_._internal_deprecated().empty()) {
            const std::string& _s = this_._internal_deprecated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.FlagOptions.deprecated");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];
          if (!this_._internal_shorthand_deprecated().empty()) {
            const std::string& _s = this_._internal_shorthand_deprecated();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.FlagOptions.shorthand_deprecated");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // bool hidden = 8 [json_name = "hidden"];
          if (this_._internal_hidden() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                8, this_._internal_hidden(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.autocli.v1.FlagOptions)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FlagOptions::ByteSizeLong(const MessageLite& base) {
          const FlagOptions& this_ = static_cast<const FlagOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FlagOptions::ByteSizeLong() const {
          const FlagOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.autocli.v1.FlagOptions)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string name = 1 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string shorthand = 2 [json_name = "shorthand"];
            if (!this_._internal_shorthand().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_shorthand());
            }
            // string usage = 3 [json_name = "usage"];
            if (!this_._internal_usage().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_usage());
            }
            // string default_value = 4 [json_name = "defaultValue"];
            if (!this_._internal_default_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_default_value());
            }
            // string deprecated = 6 [json_name = "deprecated"];
            if (!this_._internal_deprecated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_deprecated());
            }
            // string shorthand_deprecated = 7 [json_name = "shorthandDeprecated"];
            if (!this_._internal_shorthand_deprecated().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_shorthand_deprecated());
            }
            // bool hidden = 8 [json_name = "hidden"];
            if (this_._internal_hidden() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FlagOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FlagOptions*>(&to_msg);
  auto& from = static_cast<const FlagOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.autocli.v1.FlagOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_shorthand().empty()) {
    _this->_internal_set_shorthand(from._internal_shorthand());
  }
  if (!from._internal_usage().empty()) {
    _this->_internal_set_usage(from._internal_usage());
  }
  if (!from._internal_default_value().empty()) {
    _this->_internal_set_default_value(from._internal_default_value());
  }
  if (!from._internal_deprecated().empty()) {
    _this->_internal_set_deprecated(from._internal_deprecated());
  }
  if (!from._internal_shorthand_deprecated().empty()) {
    _this->_internal_set_shorthand_deprecated(from._internal_shorthand_deprecated());
  }
  if (from._internal_hidden() != 0) {
    _this->_impl_.hidden_ = from._impl_.hidden_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FlagOptions::CopyFrom(const FlagOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.autocli.v1.FlagOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FlagOptions::InternalSwap(FlagOptions* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shorthand_, &other->_impl_.shorthand_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.usage_, &other->_impl_.usage_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.default_value_, &other->_impl_.default_value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.deprecated_, &other->_impl_.deprecated_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shorthand_deprecated_, &other->_impl_.shorthand_deprecated_, arena);
        swap(_impl_.hidden_, other->_impl_.hidden_);
}

::google::protobuf::Metadata FlagOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PositionalArgDescriptor::_Internal {
 public:
};

PositionalArgDescriptor::PositionalArgDescriptor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.autocli.v1.PositionalArgDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE PositionalArgDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::autocli::v1::PositionalArgDescriptor& from_msg)
      : proto_field_(arena, from.proto_field_),
        _cached_size_{0} {}

PositionalArgDescriptor::PositionalArgDescriptor(
    ::google::protobuf::Arena* arena,
    const PositionalArgDescriptor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PositionalArgDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, varargs_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, varargs_),
           offsetof(Impl_, optional_) -
               offsetof(Impl_, varargs_) +
               sizeof(Impl_::optional_));

  // @@protoc_insertion_point(copy_constructor:cosmos.autocli.v1.PositionalArgDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE PositionalArgDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : proto_field_(arena),
        _cached_size_{0} {}

inline void PositionalArgDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, varargs_),
           0,
           offsetof(Impl_, optional_) -
               offsetof(Impl_, varargs_) +
               sizeof(Impl_::optional_));
}
PositionalArgDescriptor::~PositionalArgDescriptor() {
  // @@protoc_insertion_point(destructor:cosmos.autocli.v1.PositionalArgDescriptor)
  SharedDtor(*this);
}
inline void PositionalArgDescriptor::SharedDtor(MessageLite& self) {
  PositionalArgDescriptor& this_ = static_cast<PositionalArgDescriptor&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.proto_field_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PositionalArgDescriptor::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) PositionalArgDescriptor(arena);
}
constexpr auto PositionalArgDescriptor::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PositionalArgDescriptor),
                                            alignof(PositionalArgDescriptor));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull PositionalArgDescriptor::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_PositionalArgDescriptor_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &PositionalArgDescriptor::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<PositionalArgDescriptor>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &PositionalArgDescriptor::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<PositionalArgDescriptor>(), &PositionalArgDescriptor::ByteSizeLong,
            &PositionalArgDescriptor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_._cached_size_),
        false,
    },
    &PositionalArgDescriptor::kDescriptorMethods,
    &descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* PositionalArgDescriptor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 61, 2> PositionalArgDescriptor::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::autocli::v1::PositionalArgDescriptor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string proto_field = 1 [json_name = "protoField"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.proto_field_)}},
    // bool varargs = 2 [json_name = "varargs"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PositionalArgDescriptor, _impl_.varargs_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.varargs_)}},
    // bool optional = 3 [json_name = "optional"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PositionalArgDescriptor, _impl_.optional_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.optional_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string proto_field = 1 [json_name = "protoField"];
    {PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.proto_field_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool varargs = 2 [json_name = "varargs"];
    {PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.varargs_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool optional = 3 [json_name = "optional"];
    {PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.optional_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\51\13\0\0\0\0\0\0"
    "cosmos.autocli.v1.PositionalArgDescriptor"
    "proto_field"
  }},
};

PROTOBUF_NOINLINE void PositionalArgDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.autocli.v1.PositionalArgDescriptor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.proto_field_.ClearToEmpty();
  ::memset(&_impl_.varargs_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.optional_) -
      reinterpret_cast<char*>(&_impl_.varargs_)) + sizeof(_impl_.optional_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PositionalArgDescriptor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PositionalArgDescriptor& this_ = static_cast<const PositionalArgDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PositionalArgDescriptor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PositionalArgDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.autocli.v1.PositionalArgDescriptor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string proto_field = 1 [json_name = "protoField"];
          if (!this_._internal_proto_field().empty()) {
            const std::string& _s = this_._internal_proto_field();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.autocli.v1.PositionalArgDescriptor.proto_field");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bool varargs = 2 [json_name = "varargs"];
          if (this_._internal_varargs() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_varargs(), target);
          }

          // bool optional = 3 [json_name = "optional"];
          if (this_._internal_optional() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_optional(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.autocli.v1.PositionalArgDescriptor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PositionalArgDescriptor::ByteSizeLong(const MessageLite& base) {
          const PositionalArgDescriptor& this_ = static_cast<const PositionalArgDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PositionalArgDescriptor::ByteSizeLong() const {
          const PositionalArgDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.autocli.v1.PositionalArgDescriptor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string proto_field = 1 [json_name = "protoField"];
            if (!this_._internal_proto_field().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proto_field());
            }
            // bool varargs = 2 [json_name = "varargs"];
            if (this_._internal_varargs() != 0) {
              total_size += 2;
            }
            // bool optional = 3 [json_name = "optional"];
            if (this_._internal_optional() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PositionalArgDescriptor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PositionalArgDescriptor*>(&to_msg);
  auto& from = static_cast<const PositionalArgDescriptor&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.autocli.v1.PositionalArgDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_proto_field().empty()) {
    _this->_internal_set_proto_field(from._internal_proto_field());
  }
  if (from._internal_varargs() != 0) {
    _this->_impl_.varargs_ = from._impl_.varargs_;
  }
  if (from._internal_optional() != 0) {
    _this->_impl_.optional_ = from._impl_.optional_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PositionalArgDescriptor::CopyFrom(const PositionalArgDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.autocli.v1.PositionalArgDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PositionalArgDescriptor::InternalSwap(PositionalArgDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proto_field_, &other->_impl_.proto_field_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.optional_)
      + sizeof(PositionalArgDescriptor::_impl_.optional_)
      - PROTOBUF_FIELD_OFFSET(PositionalArgDescriptor, _impl_.varargs_)>(
          reinterpret_cast<char*>(&_impl_.varargs_),
          reinterpret_cast<char*>(&other->_impl_.varargs_));
}

::google::protobuf::Metadata PositionalArgDescriptor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace autocli
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fautocli_2fv1_2foptions_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
