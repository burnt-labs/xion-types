// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/auth/v1beta1/auth.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/auth/v1beta1/auth.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace auth {
namespace v1beta1 {

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : max_memo_characters_{::uint64_t{0u}},
        tx_sig_limit_{::uint64_t{0u}},
        tx_size_cost_per_byte_{::uint64_t{0u}},
        sig_verify_cost_ed25519_{::uint64_t{0u}},
        sig_verify_cost_secp256k1_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;

inline constexpr ModuleCredential::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : derivation_keys_{},
        module_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleCredential::ModuleCredential(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleCredentialDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleCredentialDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleCredentialDefaultTypeInternal() {}
  union {
    ModuleCredential _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleCredentialDefaultTypeInternal _ModuleCredential_default_instance_;

inline constexpr BaseAccount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pub_key_{nullptr},
        account_number_{::uint64_t{0u}},
        sequence_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR BaseAccount::BaseAccount(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BaseAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseAccountDefaultTypeInternal() {}
  union {
    BaseAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseAccountDefaultTypeInternal _BaseAccount_default_instance_;

inline constexpr ModuleAccount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        permissions_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        base_account_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleAccount::ModuleAccount(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleAccountDefaultTypeInternal() {}
  union {
    ModuleAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleAccountDefaultTypeInternal _ModuleAccount_default_instance_;
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fauth_2fv1beta1_2fauth_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fauth_2fv1beta1_2fauth_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fauth_2fv1beta1_2fauth_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::BaseAccount, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::BaseAccount, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::BaseAccount, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::BaseAccount, _impl_.pub_key_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::BaseAccount, _impl_.account_number_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::BaseAccount, _impl_.sequence_),
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleAccount, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleAccount, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleAccount, _impl_.base_account_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleAccount, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleAccount, _impl_.permissions_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleCredential, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleCredential, _impl_.module_name_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::ModuleCredential, _impl_.derivation_keys_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Params, _impl_.max_memo_characters_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Params, _impl_.tx_sig_limit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Params, _impl_.tx_size_cost_per_byte_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Params, _impl_.sig_verify_cost_ed25519_),
        PROTOBUF_FIELD_OFFSET(::cosmos::auth::v1beta1::Params, _impl_.sig_verify_cost_secp256k1_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::cosmos::auth::v1beta1::BaseAccount)},
        {16, 27, -1, sizeof(::cosmos::auth::v1beta1::ModuleAccount)},
        {30, -1, -1, sizeof(::cosmos::auth::v1beta1::ModuleCredential)},
        {40, -1, -1, sizeof(::cosmos::auth::v1beta1::Params)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::auth::v1beta1::_BaseAccount_default_instance_._instance,
    &::cosmos::auth::v1beta1::_ModuleAccount_default_instance_._instance,
    &::cosmos::auth::v1beta1::_ModuleCredential_default_instance_._instance,
    &::cosmos::auth::v1beta1::_Params_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fauth_2fv1beta1_2fauth_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036cosmos/auth/v1beta1/auth.proto\022\023cosmos"
    ".auth.v1beta1\032\021amino/amino.proto\032\031cosmos"
    "_proto/cosmos.proto\032\024gogoproto/gogo.prot"
    "o\032\031google/protobuf/any.proto\"\241\002\n\013BaseAcc"
    "ount\0222\n\007address\030\001 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\007address\022V\n\007pub_key\030\002 \001(\0132\024.goog"
    "le.protobuf.AnyB\'\352\336\037\024public_key,omitempt"
    "y\242\347\260*\npublic_keyR\006pubKey\022%\n\016account_numb"
    "er\030\003 \001(\004R\raccountNumber\022\032\n\010sequence\030\004 \001("
    "\004R\010sequence:C\210\240\037\000\350\240\037\000\312\264-\034cosmos.auth.v1b"
    "eta1.AccountI\212\347\260*\026cosmos-sdk/BaseAccount"
    "\"\354\001\n\rModuleAccount\022I\n\014base_account\030\001 \001(\013"
    "2 .cosmos.auth.v1beta1.BaseAccountB\004\320\336\037\001"
    "R\013baseAccount\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013per"
    "missions\030\003 \003(\tR\013permissions:Z\210\240\037\000\312\264-\"cos"
    "mos.auth.v1beta1.ModuleAccountI\212\347\260*\030cosm"
    "os-sdk/ModuleAccount\222\347\260*\016module_account\""
    "\204\001\n\020ModuleCredential\022\037\n\013module_name\030\001 \001("
    "\tR\nmoduleName\022\'\n\017derivation_keys\030\002 \003(\014R\016"
    "derivationKeys:&\212\347\260*!cosmos-sdk/GroupAcc"
    "ountCredential\"\327\002\n\006Params\022.\n\023max_memo_ch"
    "aracters\030\001 \001(\004R\021maxMemoCharacters\022 \n\014tx_"
    "sig_limit\030\002 \001(\004R\ntxSigLimit\0220\n\025tx_size_c"
    "ost_per_byte\030\003 \001(\004R\021txSizeCostPerByte\022O\n"
    "\027sig_verify_cost_ed25519\030\004 \001(\004B\030\342\336\037\024SigV"
    "erifyCostED25519R\024sigVerifyCostEd25519\022U"
    "\n\031sig_verify_cost_secp256k1\030\005 \001(\004B\032\342\336\037\026S"
    "igVerifyCostSecp256k1R\026sigVerifyCostSecp"
    "256k1:!\350\240\037\001\212\347\260*\030cosmos-sdk/x/auth/Params"
    "B+Z)github.com/cosmos/cosmos-sdk/x/auth/"
    "typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto_deps[4] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto = {
    false,
    false,
    1213,
    descriptor_table_protodef_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
    "cosmos/auth/v1beta1/auth.proto",
    &descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto_once,
    descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto_deps,
    4,
    4,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fauth_2fv1beta1_2fauth_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
    file_level_service_descriptors_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
};
namespace cosmos {
namespace auth {
namespace v1beta1 {
// ===================================================================

class BaseAccount::_Internal {
 public:
  using HasBits =
      decltype(std::declval<BaseAccount>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_._has_bits_);
};

void BaseAccount::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pub_key_ != nullptr) _impl_.pub_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
BaseAccount::BaseAccount(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.BaseAccount)
}
inline PROTOBUF_NDEBUG_INLINE BaseAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::auth::v1beta1::BaseAccount& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_) {}

BaseAccount::BaseAccount(
    ::google::protobuf::Arena* arena,
    const BaseAccount& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BaseAccount* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.pub_key_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.pub_key_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, account_number_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, account_number_),
           offsetof(Impl_, sequence_) -
               offsetof(Impl_, account_number_) +
               sizeof(Impl_::sequence_));

  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.BaseAccount)
}
inline PROTOBUF_NDEBUG_INLINE BaseAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena) {}

inline void BaseAccount::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pub_key_),
           0,
           offsetof(Impl_, sequence_) -
               offsetof(Impl_, pub_key_) +
               sizeof(Impl_::sequence_));
}
BaseAccount::~BaseAccount() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.BaseAccount)
  SharedDtor(*this);
}
inline void BaseAccount::SharedDtor(MessageLite& self) {
  BaseAccount& this_ = static_cast<BaseAccount&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  delete this_._impl_.pub_key_;
  this_._impl_.~Impl_();
}

inline void* BaseAccount::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) BaseAccount(arena);
}
constexpr auto BaseAccount::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BaseAccount),
                                            alignof(BaseAccount));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull BaseAccount::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_BaseAccount_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &BaseAccount::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<BaseAccount>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &BaseAccount::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<BaseAccount>(), &BaseAccount::ByteSizeLong,
            &BaseAccount::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_._cached_size_),
        false,
    },
    &BaseAccount::kDescriptorMethods,
    &descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* BaseAccount::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 47, 2> BaseAccount::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::auth::v1beta1::BaseAccount>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 sequence = 4 [json_name = "sequence"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAccount, _impl_.sequence_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.sequence_)}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.address_)}},
    // .google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.pub_key_)}},
    // uint64 account_number = 3 [json_name = "accountNumber"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(BaseAccount, _impl_.account_number_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.account_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];
    {PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.pub_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 account_number = 3 [json_name = "accountNumber"];
    {PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.account_number_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 sequence = 4 [json_name = "sequence"];
    {PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.sequence_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\37\7\0\0\0\0\0\0"
    "cosmos.auth.v1beta1.BaseAccount"
    "address"
  }},
};

PROTOBUF_NOINLINE void BaseAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.BaseAccount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.pub_key_ != nullptr);
    _impl_.pub_key_->Clear();
  }
  ::memset(&_impl_.account_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sequence_) -
      reinterpret_cast<char*>(&_impl_.account_number_)) + sizeof(_impl_.sequence_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* BaseAccount::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const BaseAccount& this_ = static_cast<const BaseAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* BaseAccount::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const BaseAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.BaseAccount)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.BaseAccount.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.pub_key_, this_._impl_.pub_key_->GetCachedSize(), target,
                stream);
          }

          // uint64 account_number = 3 [json_name = "accountNumber"];
          if (this_._internal_account_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_account_number(), target);
          }

          // uint64 sequence = 4 [json_name = "sequence"];
          if (this_._internal_sequence() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_sequence(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.BaseAccount)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t BaseAccount::ByteSizeLong(const MessageLite& base) {
          const BaseAccount& this_ = static_cast<const BaseAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t BaseAccount::ByteSizeLong() const {
          const BaseAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.BaseAccount)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
           {
            // .google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pub_key_);
            }
          }
           {
            // uint64 account_number = 3 [json_name = "accountNumber"];
            if (this_._internal_account_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_account_number());
            }
            // uint64 sequence = 4 [json_name = "sequence"];
            if (this_._internal_sequence() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sequence());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void BaseAccount::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BaseAccount*>(&to_msg);
  auto& from = static_cast<const BaseAccount&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.BaseAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.pub_key_ != nullptr);
    if (_this->_impl_.pub_key_ == nullptr) {
      _this->_impl_.pub_key_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.pub_key_);
    } else {
      _this->_impl_.pub_key_->MergeFrom(*from._impl_.pub_key_);
    }
  }
  if (from._internal_account_number() != 0) {
    _this->_impl_.account_number_ = from._impl_.account_number_;
  }
  if (from._internal_sequence() != 0) {
    _this->_impl_.sequence_ = from._impl_.sequence_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BaseAccount::CopyFrom(const BaseAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.BaseAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BaseAccount::InternalSwap(BaseAccount* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.sequence_)
      + sizeof(BaseAccount::_impl_.sequence_)
      - PROTOBUF_FIELD_OFFSET(BaseAccount, _impl_.pub_key_)>(
          reinterpret_cast<char*>(&_impl_.pub_key_),
          reinterpret_cast<char*>(&other->_impl_.pub_key_));
}

::google::protobuf::Metadata BaseAccount::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleAccount::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ModuleAccount>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_._has_bits_);
};

ModuleAccount::ModuleAccount(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.ModuleAccount)
}
inline PROTOBUF_NDEBUG_INLINE ModuleAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::auth::v1beta1::ModuleAccount& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        permissions_{visibility, arena, from.permissions_},
        name_(arena, from.name_) {}

ModuleAccount::ModuleAccount(
    ::google::protobuf::Arena* arena,
    const ModuleAccount& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleAccount* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.base_account_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::auth::v1beta1::BaseAccount>(
                              arena, *from._impl_.base_account_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.ModuleAccount)
}
inline PROTOBUF_NDEBUG_INLINE ModuleAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        permissions_{visibility, arena},
        name_(arena) {}

inline void ModuleAccount::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.base_account_ = {};
}
ModuleAccount::~ModuleAccount() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.ModuleAccount)
  SharedDtor(*this);
}
inline void ModuleAccount::SharedDtor(MessageLite& self) {
  ModuleAccount& this_ = static_cast<ModuleAccount&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.name_.Destroy();
  delete this_._impl_.base_account_;
  this_._impl_.~Impl_();
}

inline void* ModuleAccount::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModuleAccount(arena);
}
constexpr auto ModuleAccount::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_.permissions_) +
          decltype(ModuleAccount::_impl_.permissions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ModuleAccount), alignof(ModuleAccount), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModuleAccount::PlacementNew_,
                                 sizeof(ModuleAccount),
                                 alignof(ModuleAccount));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModuleAccount::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModuleAccount_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModuleAccount::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModuleAccount>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModuleAccount::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModuleAccount>(), &ModuleAccount::ByteSizeLong,
            &ModuleAccount::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_._cached_size_),
        false,
    },
    &ModuleAccount::kDescriptorMethods,
    &descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModuleAccount::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 57, 2> ModuleAccount::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::auth::v1beta1::ModuleAccount>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_.base_account_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_.name_)}},
    // repeated string permissions = 3 [json_name = "permissions"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_.permissions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];
    {PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_.base_account_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string permissions = 3 [json_name = "permissions"];
    {PROTOBUF_FIELD_OFFSET(ModuleAccount, _impl_.permissions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::auth::v1beta1::BaseAccount>()},
  }}, {{
    "\41\0\4\13\0\0\0\0"
    "cosmos.auth.v1beta1.ModuleAccount"
    "name"
    "permissions"
  }},
};

PROTOBUF_NOINLINE void ModuleAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.ModuleAccount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissions_.Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.base_account_ != nullptr);
    _impl_.base_account_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModuleAccount::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModuleAccount& this_ = static_cast<const ModuleAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModuleAccount::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModuleAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.ModuleAccount)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.base_account_, this_._impl_.base_account_->GetCachedSize(), target,
                stream);
          }

          // string name = 2 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.ModuleAccount.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string permissions = 3 [json_name = "permissions"];
          for (int i = 0, n = this_._internal_permissions_size(); i < n; ++i) {
            const auto& s = this_._internal_permissions().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.ModuleAccount.permissions");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.ModuleAccount)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModuleAccount::ByteSizeLong(const MessageLite& base) {
          const ModuleAccount& this_ = static_cast<const ModuleAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModuleAccount::ByteSizeLong() const {
          const ModuleAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.ModuleAccount)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string permissions = 3 [json_name = "permissions"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_permissions().size());
              for (int i = 0, n = this_._internal_permissions().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_permissions().Get(i));
              }
            }
          }
           {
            // string name = 2 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
          }
           {
            // .cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.base_account_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModuleAccount::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleAccount*>(&to_msg);
  auto& from = static_cast<const ModuleAccount&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.ModuleAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_permissions()->MergeFrom(from._internal_permissions());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.base_account_ != nullptr);
    if (_this->_impl_.base_account_ == nullptr) {
      _this->_impl_.base_account_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::auth::v1beta1::BaseAccount>(arena, *from._impl_.base_account_);
    } else {
      _this->_impl_.base_account_->MergeFrom(*from._impl_.base_account_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleAccount::CopyFrom(const ModuleAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.ModuleAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleAccount::InternalSwap(ModuleAccount* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.base_account_, other->_impl_.base_account_);
}

::google::protobuf::Metadata ModuleAccount::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleCredential::_Internal {
 public:
};

ModuleCredential::ModuleCredential(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.ModuleCredential)
}
inline PROTOBUF_NDEBUG_INLINE ModuleCredential::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::auth::v1beta1::ModuleCredential& from_msg)
      : derivation_keys_{visibility, arena, from.derivation_keys_},
        module_name_(arena, from.module_name_),
        _cached_size_{0} {}

ModuleCredential::ModuleCredential(
    ::google::protobuf::Arena* arena,
    const ModuleCredential& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleCredential* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.auth.v1beta1.ModuleCredential)
}
inline PROTOBUF_NDEBUG_INLINE ModuleCredential::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : derivation_keys_{visibility, arena},
        module_name_(arena),
        _cached_size_{0} {}

inline void ModuleCredential::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ModuleCredential::~ModuleCredential() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.ModuleCredential)
  SharedDtor(*this);
}
inline void ModuleCredential::SharedDtor(MessageLite& self) {
  ModuleCredential& this_ = static_cast<ModuleCredential&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.module_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ModuleCredential::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ModuleCredential(arena);
}
constexpr auto ModuleCredential::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModuleCredential, _impl_.derivation_keys_) +
          decltype(ModuleCredential::_impl_.derivation_keys_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ModuleCredential), alignof(ModuleCredential), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModuleCredential::PlacementNew_,
                                 sizeof(ModuleCredential),
                                 alignof(ModuleCredential));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ModuleCredential::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ModuleCredential_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ModuleCredential::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ModuleCredential>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ModuleCredential::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ModuleCredential>(), &ModuleCredential::ByteSizeLong,
            &ModuleCredential::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ModuleCredential, _impl_._cached_size_),
        false,
    },
    &ModuleCredential::kDescriptorMethods,
    &descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ModuleCredential::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> ModuleCredential::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::auth::v1beta1::ModuleCredential>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes derivation_keys = 2 [json_name = "derivationKeys"];
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ModuleCredential, _impl_.derivation_keys_)}},
    // string module_name = 1 [json_name = "moduleName"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModuleCredential, _impl_.module_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string module_name = 1 [json_name = "moduleName"];
    {PROTOBUF_FIELD_OFFSET(ModuleCredential, _impl_.module_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated bytes derivation_keys = 2 [json_name = "derivationKeys"];
    {PROTOBUF_FIELD_OFFSET(ModuleCredential, _impl_.derivation_keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\44\13\0\0\0\0\0\0"
    "cosmos.auth.v1beta1.ModuleCredential"
    "module_name"
  }},
};

PROTOBUF_NOINLINE void ModuleCredential::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.ModuleCredential)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.derivation_keys_.Clear();
  _impl_.module_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ModuleCredential::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ModuleCredential& this_ = static_cast<const ModuleCredential&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ModuleCredential::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ModuleCredential& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.ModuleCredential)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string module_name = 1 [json_name = "moduleName"];
          if (!this_._internal_module_name().empty()) {
            const std::string& _s = this_._internal_module_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.auth.v1beta1.ModuleCredential.module_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated bytes derivation_keys = 2 [json_name = "derivationKeys"];
          for (int i = 0, n = this_._internal_derivation_keys_size(); i < n; ++i) {
            const auto& s = this_._internal_derivation_keys().Get(i);
            target = stream->WriteBytes(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.ModuleCredential)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ModuleCredential::ByteSizeLong(const MessageLite& base) {
          const ModuleCredential& this_ = static_cast<const ModuleCredential&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ModuleCredential::ByteSizeLong() const {
          const ModuleCredential& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.ModuleCredential)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes derivation_keys = 2 [json_name = "derivationKeys"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_derivation_keys().size());
              for (int i = 0, n = this_._internal_derivation_keys().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_derivation_keys().Get(i));
              }
            }
          }
           {
            // string module_name = 1 [json_name = "moduleName"];
            if (!this_._internal_module_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_module_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ModuleCredential::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleCredential*>(&to_msg);
  auto& from = static_cast<const ModuleCredential&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.ModuleCredential)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_derivation_keys()->MergeFrom(from._internal_derivation_keys());
  if (!from._internal_module_name().empty()) {
    _this->_internal_set_module_name(from._internal_module_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleCredential::CopyFrom(const ModuleCredential& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.ModuleCredential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleCredential::InternalSwap(ModuleCredential* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.derivation_keys_.InternalSwap(&other->_impl_.derivation_keys_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.module_name_, &other->_impl_.module_name_, arena);
}

::google::protobuf::Metadata ModuleCredential::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Params::_Internal {
 public:
};

Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.auth.v1beta1.Params)
}
Params::Params(
    ::google::protobuf::Arena* arena, const Params& from)
    : Params(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_memo_characters_),
           0,
           offsetof(Impl_, sig_verify_cost_secp256k1_) -
               offsetof(Impl_, max_memo_characters_) +
               sizeof(Impl_::sig_verify_cost_secp256k1_));
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:cosmos.auth.v1beta1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Params),
                                            alignof(Params));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Params::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::auth::v1beta1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 max_memo_characters = 1 [json_name = "maxMemoCharacters"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.max_memo_characters_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.max_memo_characters_)}},
    // uint64 tx_sig_limit = 2 [json_name = "txSigLimit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.tx_sig_limit_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.tx_sig_limit_)}},
    // uint64 tx_size_cost_per_byte = 3 [json_name = "txSizeCostPerByte"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.tx_size_cost_per_byte_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.tx_size_cost_per_byte_)}},
    // uint64 sig_verify_cost_ed25519 = 4 [json_name = "sigVerifyCostEd25519", (.gogoproto.customname) = "SigVerifyCostED25519"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.sig_verify_cost_ed25519_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.sig_verify_cost_ed25519_)}},
    // uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1", (.gogoproto.customname) = "SigVerifyCostSecp256k1"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.sig_verify_cost_secp256k1_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.sig_verify_cost_secp256k1_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 max_memo_characters = 1 [json_name = "maxMemoCharacters"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.max_memo_characters_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 tx_sig_limit = 2 [json_name = "txSigLimit"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.tx_sig_limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 tx_size_cost_per_byte = 3 [json_name = "txSizeCostPerByte"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.tx_size_cost_per_byte_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 sig_verify_cost_ed25519 = 4 [json_name = "sigVerifyCostEd25519", (.gogoproto.customname) = "SigVerifyCostED25519"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.sig_verify_cost_ed25519_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1", (.gogoproto.customname) = "SigVerifyCostSecp256k1"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.sig_verify_cost_secp256k1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.auth.v1beta1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.max_memo_characters_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sig_verify_cost_secp256k1_) -
      reinterpret_cast<char*>(&_impl_.max_memo_characters_)) + sizeof(_impl_.sig_verify_cost_secp256k1_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.auth.v1beta1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 max_memo_characters = 1 [json_name = "maxMemoCharacters"];
          if (this_._internal_max_memo_characters() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_max_memo_characters(), target);
          }

          // uint64 tx_sig_limit = 2 [json_name = "txSigLimit"];
          if (this_._internal_tx_sig_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_tx_sig_limit(), target);
          }

          // uint64 tx_size_cost_per_byte = 3 [json_name = "txSizeCostPerByte"];
          if (this_._internal_tx_size_cost_per_byte() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_tx_size_cost_per_byte(), target);
          }

          // uint64 sig_verify_cost_ed25519 = 4 [json_name = "sigVerifyCostEd25519", (.gogoproto.customname) = "SigVerifyCostED25519"];
          if (this_._internal_sig_verify_cost_ed25519() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_sig_verify_cost_ed25519(), target);
          }

          // uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1", (.gogoproto.customname) = "SigVerifyCostSecp256k1"];
          if (this_._internal_sig_verify_cost_secp256k1() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_sig_verify_cost_secp256k1(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.auth.v1beta1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.auth.v1beta1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 max_memo_characters = 1 [json_name = "maxMemoCharacters"];
            if (this_._internal_max_memo_characters() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_max_memo_characters());
            }
            // uint64 tx_sig_limit = 2 [json_name = "txSigLimit"];
            if (this_._internal_tx_sig_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_tx_sig_limit());
            }
            // uint64 tx_size_cost_per_byte = 3 [json_name = "txSizeCostPerByte"];
            if (this_._internal_tx_size_cost_per_byte() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_tx_size_cost_per_byte());
            }
            // uint64 sig_verify_cost_ed25519 = 4 [json_name = "sigVerifyCostEd25519", (.gogoproto.customname) = "SigVerifyCostED25519"];
            if (this_._internal_sig_verify_cost_ed25519() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sig_verify_cost_ed25519());
            }
            // uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1", (.gogoproto.customname) = "SigVerifyCostSecp256k1"];
            if (this_._internal_sig_verify_cost_secp256k1() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_sig_verify_cost_secp256k1());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.auth.v1beta1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_max_memo_characters() != 0) {
    _this->_impl_.max_memo_characters_ = from._impl_.max_memo_characters_;
  }
  if (from._internal_tx_sig_limit() != 0) {
    _this->_impl_.tx_sig_limit_ = from._impl_.tx_sig_limit_;
  }
  if (from._internal_tx_size_cost_per_byte() != 0) {
    _this->_impl_.tx_size_cost_per_byte_ = from._impl_.tx_size_cost_per_byte_;
  }
  if (from._internal_sig_verify_cost_ed25519() != 0) {
    _this->_impl_.sig_verify_cost_ed25519_ = from._impl_.sig_verify_cost_ed25519_;
  }
  if (from._internal_sig_verify_cost_secp256k1() != 0) {
    _this->_impl_.sig_verify_cost_secp256k1_ = from._impl_.sig_verify_cost_secp256k1_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.auth.v1beta1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Params, _impl_.sig_verify_cost_secp256k1_)
      + sizeof(Params::_impl_.sig_verify_cost_secp256k1_)
      - PROTOBUF_FIELD_OFFSET(Params, _impl_.max_memo_characters_)>(
          reinterpret_cast<char*>(&_impl_.max_memo_characters_),
          reinterpret_cast<char*>(&other->_impl_.max_memo_characters_));
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
