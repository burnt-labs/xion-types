// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/auth/v1beta1/auth.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fauth_2fv1beta1_2fauth_2eproto_2epb_2eh
#define cosmos_2fauth_2fv1beta1_2fauth_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "amino/amino.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fauth_2fv1beta1_2fauth_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fauth_2fv1beta1_2fauth_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fauth_2fv1beta1_2fauth_2eproto;
namespace cosmos {
namespace auth {
namespace v1beta1 {
class BaseAccount;
struct BaseAccountDefaultTypeInternal;
extern BaseAccountDefaultTypeInternal _BaseAccount_default_instance_;
class ModuleAccount;
struct ModuleAccountDefaultTypeInternal;
extern ModuleAccountDefaultTypeInternal _ModuleAccount_default_instance_;
class ModuleCredential;
struct ModuleCredentialDefaultTypeInternal;
extern ModuleCredentialDefaultTypeInternal _ModuleCredential_default_instance_;
class Params;
struct ParamsDefaultTypeInternal;
extern ParamsDefaultTypeInternal _Params_default_instance_;
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace auth {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class Params final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.Params) */ {
 public:
  inline Params() : Params(nullptr) {}
  ~Params() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Params* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Params));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Params(
      ::google::protobuf::internal::ConstantInitialized);

  inline Params(const Params& from) : Params(nullptr, from) {}
  inline Params(Params&& from) noexcept
      : Params(nullptr, std::move(from)) {}
  inline Params& operator=(const Params& from) {
    CopyFrom(from);
    return *this;
  }
  inline Params& operator=(Params&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Params& default_instance() {
    return *internal_default_instance();
  }
  static inline const Params* internal_default_instance() {
    return reinterpret_cast<const Params*>(
        &_Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Params& a, Params& b) { a.Swap(&b); }
  inline void Swap(Params* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Params* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Params* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Params>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Params& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Params& from) { Params::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Params* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.Params"; }

 protected:
  explicit Params(::google::protobuf::Arena* arena);
  Params(::google::protobuf::Arena* arena, const Params& from);
  Params(::google::protobuf::Arena* arena, Params&& from) noexcept
      : Params(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMaxMemoCharactersFieldNumber = 1,
    kTxSigLimitFieldNumber = 2,
    kTxSizeCostPerByteFieldNumber = 3,
    kSigVerifyCostEd25519FieldNumber = 4,
    kSigVerifyCostSecp256K1FieldNumber = 5,
  };
  // uint64 max_memo_characters = 1 [json_name = "maxMemoCharacters"];
  void clear_max_memo_characters() ;
  ::uint64_t max_memo_characters() const;
  void set_max_memo_characters(::uint64_t value);

  private:
  ::uint64_t _internal_max_memo_characters() const;
  void _internal_set_max_memo_characters(::uint64_t value);

  public:
  // uint64 tx_sig_limit = 2 [json_name = "txSigLimit"];
  void clear_tx_sig_limit() ;
  ::uint64_t tx_sig_limit() const;
  void set_tx_sig_limit(::uint64_t value);

  private:
  ::uint64_t _internal_tx_sig_limit() const;
  void _internal_set_tx_sig_limit(::uint64_t value);

  public:
  // uint64 tx_size_cost_per_byte = 3 [json_name = "txSizeCostPerByte"];
  void clear_tx_size_cost_per_byte() ;
  ::uint64_t tx_size_cost_per_byte() const;
  void set_tx_size_cost_per_byte(::uint64_t value);

  private:
  ::uint64_t _internal_tx_size_cost_per_byte() const;
  void _internal_set_tx_size_cost_per_byte(::uint64_t value);

  public:
  // uint64 sig_verify_cost_ed25519 = 4 [json_name = "sigVerifyCostEd25519", (.gogoproto.customname) = "SigVerifyCostED25519"];
  void clear_sig_verify_cost_ed25519() ;
  ::uint64_t sig_verify_cost_ed25519() const;
  void set_sig_verify_cost_ed25519(::uint64_t value);

  private:
  ::uint64_t _internal_sig_verify_cost_ed25519() const;
  void _internal_set_sig_verify_cost_ed25519(::uint64_t value);

  public:
  // uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1", (.gogoproto.customname) = "SigVerifyCostSecp256k1"];
  void clear_sig_verify_cost_secp256k1() ;
  ::uint64_t sig_verify_cost_secp256k1() const;
  void set_sig_verify_cost_secp256k1(::uint64_t value);

  private:
  ::uint64_t _internal_sig_verify_cost_secp256k1() const;
  void _internal_set_sig_verify_cost_secp256k1(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.Params)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Params& from_msg);
    ::uint64_t max_memo_characters_;
    ::uint64_t tx_sig_limit_;
    ::uint64_t tx_size_cost_per_byte_;
    ::uint64_t sig_verify_cost_ed25519_;
    ::uint64_t sig_verify_cost_secp256k1_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fauth_2eproto;
};
// -------------------------------------------------------------------

class ModuleCredential final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.ModuleCredential) */ {
 public:
  inline ModuleCredential() : ModuleCredential(nullptr) {}
  ~ModuleCredential() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleCredential* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleCredential));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleCredential(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModuleCredential(const ModuleCredential& from) : ModuleCredential(nullptr, from) {}
  inline ModuleCredential(ModuleCredential&& from) noexcept
      : ModuleCredential(nullptr, std::move(from)) {}
  inline ModuleCredential& operator=(const ModuleCredential& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleCredential& operator=(ModuleCredential&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleCredential& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleCredential* internal_default_instance() {
    return reinterpret_cast<const ModuleCredential*>(
        &_ModuleCredential_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ModuleCredential& a, ModuleCredential& b) { a.Swap(&b); }
  inline void Swap(ModuleCredential* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleCredential* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleCredential* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleCredential>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleCredential& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleCredential& from) { ModuleCredential::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleCredential* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.ModuleCredential"; }

 protected:
  explicit ModuleCredential(::google::protobuf::Arena* arena);
  ModuleCredential(::google::protobuf::Arena* arena, const ModuleCredential& from);
  ModuleCredential(::google::protobuf::Arena* arena, ModuleCredential&& from) noexcept
      : ModuleCredential(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDerivationKeysFieldNumber = 2,
    kModuleNameFieldNumber = 1,
  };
  // repeated bytes derivation_keys = 2 [json_name = "derivationKeys"];
  int derivation_keys_size() const;
  private:
  int _internal_derivation_keys_size() const;

  public:
  void clear_derivation_keys() ;
  const std::string& derivation_keys(int index) const;
  std::string* mutable_derivation_keys(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_derivation_keys(int index, Arg_&& value, Args_... args);
  std::string* add_derivation_keys();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_derivation_keys(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& derivation_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_derivation_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_derivation_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_derivation_keys();

  public:
  // string module_name = 1 [json_name = "moduleName"];
  void clear_module_name() ;
  const std::string& module_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_module_name(Arg_&& arg, Args_... args);
  std::string* mutable_module_name();
  PROTOBUF_NODISCARD std::string* release_module_name();
  void set_allocated_module_name(std::string* value);

  private:
  const std::string& _internal_module_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_module_name(
      const std::string& value);
  std::string* _internal_mutable_module_name();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.ModuleCredential)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModuleCredential& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> derivation_keys_;
    ::google::protobuf::internal::ArenaStringPtr module_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fauth_2eproto;
};
// -------------------------------------------------------------------

class BaseAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.BaseAccount) */ {
 public:
  inline BaseAccount() : BaseAccount(nullptr) {}
  ~BaseAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BaseAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BaseAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BaseAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline BaseAccount(const BaseAccount& from) : BaseAccount(nullptr, from) {}
  inline BaseAccount(BaseAccount&& from) noexcept
      : BaseAccount(nullptr, std::move(from)) {}
  inline BaseAccount& operator=(const BaseAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline BaseAccount& operator=(BaseAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BaseAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const BaseAccount* internal_default_instance() {
    return reinterpret_cast<const BaseAccount*>(
        &_BaseAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(BaseAccount& a, BaseAccount& b) { a.Swap(&b); }
  inline void Swap(BaseAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BaseAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BaseAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BaseAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BaseAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BaseAccount& from) { BaseAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BaseAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.BaseAccount"; }

 protected:
  explicit BaseAccount(::google::protobuf::Arena* arena);
  BaseAccount(::google::protobuf::Arena* arena, const BaseAccount& from);
  BaseAccount(::google::protobuf::Arena* arena, BaseAccount&& from) noexcept
      : BaseAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kPubKeyFieldNumber = 2,
    kAccountNumberFieldNumber = 3,
    kSequenceFieldNumber = 4,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // .google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];
  bool has_pub_key() const;
  void clear_pub_key() ;
  const ::google::protobuf::Any& pub_key() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_pub_key();
  ::google::protobuf::Any* mutable_pub_key();
  void set_allocated_pub_key(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_pub_key(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_pub_key();

  private:
  const ::google::protobuf::Any& _internal_pub_key() const;
  ::google::protobuf::Any* _internal_mutable_pub_key();

  public:
  // uint64 account_number = 3 [json_name = "accountNumber"];
  void clear_account_number() ;
  ::uint64_t account_number() const;
  void set_account_number(::uint64_t value);

  private:
  ::uint64_t _internal_account_number() const;
  void _internal_set_account_number(::uint64_t value);

  public:
  // uint64 sequence = 4 [json_name = "sequence"];
  void clear_sequence() ;
  ::uint64_t sequence() const;
  void set_sequence(::uint64_t value);

  private:
  ::uint64_t _internal_sequence() const;
  void _internal_set_sequence(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.BaseAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BaseAccount& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::Any* pub_key_;
    ::uint64_t account_number_;
    ::uint64_t sequence_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fauth_2eproto;
};
// -------------------------------------------------------------------

class ModuleAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.ModuleAccount) */ {
 public:
  inline ModuleAccount() : ModuleAccount(nullptr) {}
  ~ModuleAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ModuleAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ModuleAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ModuleAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline ModuleAccount(const ModuleAccount& from) : ModuleAccount(nullptr, from) {}
  inline ModuleAccount(ModuleAccount&& from) noexcept
      : ModuleAccount(nullptr, std::move(from)) {}
  inline ModuleAccount& operator=(const ModuleAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModuleAccount& operator=(ModuleAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ModuleAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const ModuleAccount* internal_default_instance() {
    return reinterpret_cast<const ModuleAccount*>(
        &_ModuleAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ModuleAccount& a, ModuleAccount& b) { a.Swap(&b); }
  inline void Swap(ModuleAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ModuleAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ModuleAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ModuleAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ModuleAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ModuleAccount& from) { ModuleAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ModuleAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.ModuleAccount"; }

 protected:
  explicit ModuleAccount(::google::protobuf::Arena* arena);
  ModuleAccount(::google::protobuf::Arena* arena, const ModuleAccount& from);
  ModuleAccount(::google::protobuf::Arena* arena, ModuleAccount&& from) noexcept
      : ModuleAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPermissionsFieldNumber = 3,
    kNameFieldNumber = 2,
    kBaseAccountFieldNumber = 1,
  };
  // repeated string permissions = 3 [json_name = "permissions"];
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  const std::string& permissions(int index) const;
  std::string* mutable_permissions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_permissions(int index, Arg_&& value, Args_... args);
  std::string* add_permissions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_permissions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& permissions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_permissions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_permissions();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];
  bool has_base_account() const;
  void clear_base_account() ;
  const ::cosmos::auth::v1beta1::BaseAccount& base_account() const;
  PROTOBUF_NODISCARD ::cosmos::auth::v1beta1::BaseAccount* release_base_account();
  ::cosmos::auth::v1beta1::BaseAccount* mutable_base_account();
  void set_allocated_base_account(::cosmos::auth::v1beta1::BaseAccount* value);
  void unsafe_arena_set_allocated_base_account(::cosmos::auth::v1beta1::BaseAccount* value);
  ::cosmos::auth::v1beta1::BaseAccount* unsafe_arena_release_base_account();

  private:
  const ::cosmos::auth::v1beta1::BaseAccount& _internal_base_account() const;
  ::cosmos::auth::v1beta1::BaseAccount* _internal_mutable_base_account();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.ModuleAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ModuleAccount& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> permissions_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::cosmos::auth::v1beta1::BaseAccount* base_account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fauth_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BaseAccount

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void BaseAccount::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& BaseAccount::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.BaseAccount.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BaseAccount::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.BaseAccount.address)
}
inline std::string* BaseAccount::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.BaseAccount.address)
  return _s;
}
inline const std::string& BaseAccount::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void BaseAccount::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* BaseAccount::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* BaseAccount::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.BaseAccount.address)
  return _impl_.address_.Release();
}
inline void BaseAccount::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.BaseAccount.address)
}

// .google.protobuf.Any pub_key = 2 [json_name = "pubKey", (.gogoproto.jsontag) = "public_key,omitempty", (.amino.field_name) = "public_key"];
inline bool BaseAccount::has_pub_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pub_key_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& BaseAccount::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.pub_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& BaseAccount::pub_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.BaseAccount.pub_key)
  return _internal_pub_key();
}
inline void BaseAccount::unsafe_arena_set_allocated_pub_key(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pub_key_);
  }
  _impl_.pub_key_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.BaseAccount.pub_key)
}
inline ::google::protobuf::Any* BaseAccount::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.pub_key_;
  _impl_.pub_key_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* BaseAccount::unsafe_arena_release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.BaseAccount.pub_key)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.pub_key_;
  _impl_.pub_key_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* BaseAccount::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pub_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.pub_key_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.pub_key_;
}
inline ::google::protobuf::Any* BaseAccount::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.BaseAccount.pub_key)
  return _msg;
}
inline void BaseAccount::set_allocated_pub_key(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pub_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pub_key_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.BaseAccount.pub_key)
}

// uint64 account_number = 3 [json_name = "accountNumber"];
inline void BaseAccount::clear_account_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_number_ = ::uint64_t{0u};
}
inline ::uint64_t BaseAccount::account_number() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.BaseAccount.account_number)
  return _internal_account_number();
}
inline void BaseAccount::set_account_number(::uint64_t value) {
  _internal_set_account_number(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.BaseAccount.account_number)
}
inline ::uint64_t BaseAccount::_internal_account_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_number_;
}
inline void BaseAccount::_internal_set_account_number(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_number_ = value;
}

// uint64 sequence = 4 [json_name = "sequence"];
inline void BaseAccount::clear_sequence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = ::uint64_t{0u};
}
inline ::uint64_t BaseAccount::sequence() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.BaseAccount.sequence)
  return _internal_sequence();
}
inline void BaseAccount::set_sequence(::uint64_t value) {
  _internal_set_sequence(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.BaseAccount.sequence)
}
inline ::uint64_t BaseAccount::_internal_sequence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_;
}
inline void BaseAccount::_internal_set_sequence(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_ = value;
}

// -------------------------------------------------------------------

// ModuleAccount

// .cosmos.auth.v1beta1.BaseAccount base_account = 1 [json_name = "baseAccount", (.gogoproto.embed) = true];
inline bool ModuleAccount::has_base_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_account_ != nullptr);
  return value;
}
inline void ModuleAccount::clear_base_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_account_ != nullptr) _impl_.base_account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::auth::v1beta1::BaseAccount& ModuleAccount::_internal_base_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::auth::v1beta1::BaseAccount* p = _impl_.base_account_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::auth::v1beta1::BaseAccount&>(::cosmos::auth::v1beta1::_BaseAccount_default_instance_);
}
inline const ::cosmos::auth::v1beta1::BaseAccount& ModuleAccount::base_account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.ModuleAccount.base_account)
  return _internal_base_account();
}
inline void ModuleAccount::unsafe_arena_set_allocated_base_account(::cosmos::auth::v1beta1::BaseAccount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_account_);
  }
  _impl_.base_account_ = reinterpret_cast<::cosmos::auth::v1beta1::BaseAccount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.ModuleAccount.base_account)
}
inline ::cosmos::auth::v1beta1::BaseAccount* ModuleAccount::release_base_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::auth::v1beta1::BaseAccount* released = _impl_.base_account_;
  _impl_.base_account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::auth::v1beta1::BaseAccount* ModuleAccount::unsafe_arena_release_base_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.ModuleAccount.base_account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::auth::v1beta1::BaseAccount* temp = _impl_.base_account_;
  _impl_.base_account_ = nullptr;
  return temp;
}
inline ::cosmos::auth::v1beta1::BaseAccount* ModuleAccount::_internal_mutable_base_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::auth::v1beta1::BaseAccount>(GetArena());
    _impl_.base_account_ = reinterpret_cast<::cosmos::auth::v1beta1::BaseAccount*>(p);
  }
  return _impl_.base_account_;
}
inline ::cosmos::auth::v1beta1::BaseAccount* ModuleAccount::mutable_base_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::auth::v1beta1::BaseAccount* _msg = _internal_mutable_base_account();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.ModuleAccount.base_account)
  return _msg;
}
inline void ModuleAccount::set_allocated_base_account(::cosmos::auth::v1beta1::BaseAccount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.base_account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.base_account_ = reinterpret_cast<::cosmos::auth::v1beta1::BaseAccount*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.ModuleAccount.base_account)
}

// string name = 2 [json_name = "name"];
inline void ModuleAccount::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ModuleAccount::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.ModuleAccount.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModuleAccount::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.ModuleAccount.name)
}
inline std::string* ModuleAccount::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.ModuleAccount.name)
  return _s;
}
inline const std::string& ModuleAccount::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ModuleAccount::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ModuleAccount::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ModuleAccount::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.ModuleAccount.name)
  return _impl_.name_.Release();
}
inline void ModuleAccount::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.ModuleAccount.name)
}

// repeated string permissions = 3 [json_name = "permissions"];
inline int ModuleAccount::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int ModuleAccount::permissions_size() const {
  return _internal_permissions_size();
}
inline void ModuleAccount::clear_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permissions_.Clear();
}
inline std::string* ModuleAccount::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.auth.v1beta1.ModuleAccount.permissions)
  return _s;
}
inline const std::string& ModuleAccount::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.ModuleAccount.permissions)
  return _internal_permissions().Get(index);
}
inline std::string* ModuleAccount::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.ModuleAccount.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ModuleAccount::set_permissions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_permissions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.ModuleAccount.permissions)
}
template <typename Arg_, typename... Args_>
inline void ModuleAccount::add_permissions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_permissions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.auth.v1beta1.ModuleAccount.permissions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModuleAccount::permissions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.auth.v1beta1.ModuleAccount.permissions)
  return _internal_permissions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModuleAccount::mutable_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.auth.v1beta1.ModuleAccount.permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModuleAccount::_internal_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModuleAccount::_internal_mutable_permissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.permissions_;
}

// -------------------------------------------------------------------

// ModuleCredential

// string module_name = 1 [json_name = "moduleName"];
inline void ModuleCredential::clear_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.ClearToEmpty();
}
inline const std::string& ModuleCredential::module_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.ModuleCredential.module_name)
  return _internal_module_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ModuleCredential::set_module_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.ModuleCredential.module_name)
}
inline std::string* ModuleCredential::mutable_module_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_module_name();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.ModuleCredential.module_name)
  return _s;
}
inline const std::string& ModuleCredential::_internal_module_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.module_name_.Get();
}
inline void ModuleCredential::_internal_set_module_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.Set(value, GetArena());
}
inline std::string* ModuleCredential::_internal_mutable_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.module_name_.Mutable( GetArena());
}
inline std::string* ModuleCredential::release_module_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.ModuleCredential.module_name)
  return _impl_.module_name_.Release();
}
inline void ModuleCredential::set_allocated_module_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.module_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.module_name_.IsDefault()) {
    _impl_.module_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.ModuleCredential.module_name)
}

// repeated bytes derivation_keys = 2 [json_name = "derivationKeys"];
inline int ModuleCredential::_internal_derivation_keys_size() const {
  return _internal_derivation_keys().size();
}
inline int ModuleCredential::derivation_keys_size() const {
  return _internal_derivation_keys_size();
}
inline void ModuleCredential::clear_derivation_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_keys_.Clear();
}
inline std::string* ModuleCredential::add_derivation_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_derivation_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.auth.v1beta1.ModuleCredential.derivation_keys)
  return _s;
}
inline const std::string& ModuleCredential::derivation_keys(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.ModuleCredential.derivation_keys)
  return _internal_derivation_keys().Get(index);
}
inline std::string* ModuleCredential::mutable_derivation_keys(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.ModuleCredential.derivation_keys)
  return _internal_mutable_derivation_keys()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ModuleCredential::set_derivation_keys(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_derivation_keys()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.ModuleCredential.derivation_keys)
}
template <typename Arg_, typename... Args_>
inline void ModuleCredential::add_derivation_keys(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_derivation_keys(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:cosmos.auth.v1beta1.ModuleCredential.derivation_keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModuleCredential::derivation_keys() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.auth.v1beta1.ModuleCredential.derivation_keys)
  return _internal_derivation_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModuleCredential::mutable_derivation_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.auth.v1beta1.ModuleCredential.derivation_keys)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_derivation_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ModuleCredential::_internal_derivation_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.derivation_keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ModuleCredential::_internal_mutable_derivation_keys() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.derivation_keys_;
}

// -------------------------------------------------------------------

// Params

// uint64 max_memo_characters = 1 [json_name = "maxMemoCharacters"];
inline void Params::clear_max_memo_characters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_memo_characters_ = ::uint64_t{0u};
}
inline ::uint64_t Params::max_memo_characters() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.Params.max_memo_characters)
  return _internal_max_memo_characters();
}
inline void Params::set_max_memo_characters(::uint64_t value) {
  _internal_set_max_memo_characters(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.Params.max_memo_characters)
}
inline ::uint64_t Params::_internal_max_memo_characters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_memo_characters_;
}
inline void Params::_internal_set_max_memo_characters(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_memo_characters_ = value;
}

// uint64 tx_sig_limit = 2 [json_name = "txSigLimit"];
inline void Params::clear_tx_sig_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_sig_limit_ = ::uint64_t{0u};
}
inline ::uint64_t Params::tx_sig_limit() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.Params.tx_sig_limit)
  return _internal_tx_sig_limit();
}
inline void Params::set_tx_sig_limit(::uint64_t value) {
  _internal_set_tx_sig_limit(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.Params.tx_sig_limit)
}
inline ::uint64_t Params::_internal_tx_sig_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_sig_limit_;
}
inline void Params::_internal_set_tx_sig_limit(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_sig_limit_ = value;
}

// uint64 tx_size_cost_per_byte = 3 [json_name = "txSizeCostPerByte"];
inline void Params::clear_tx_size_cost_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_size_cost_per_byte_ = ::uint64_t{0u};
}
inline ::uint64_t Params::tx_size_cost_per_byte() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.Params.tx_size_cost_per_byte)
  return _internal_tx_size_cost_per_byte();
}
inline void Params::set_tx_size_cost_per_byte(::uint64_t value) {
  _internal_set_tx_size_cost_per_byte(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.Params.tx_size_cost_per_byte)
}
inline ::uint64_t Params::_internal_tx_size_cost_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_size_cost_per_byte_;
}
inline void Params::_internal_set_tx_size_cost_per_byte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_size_cost_per_byte_ = value;
}

// uint64 sig_verify_cost_ed25519 = 4 [json_name = "sigVerifyCostEd25519", (.gogoproto.customname) = "SigVerifyCostED25519"];
inline void Params::clear_sig_verify_cost_ed25519() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sig_verify_cost_ed25519_ = ::uint64_t{0u};
}
inline ::uint64_t Params::sig_verify_cost_ed25519() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.Params.sig_verify_cost_ed25519)
  return _internal_sig_verify_cost_ed25519();
}
inline void Params::set_sig_verify_cost_ed25519(::uint64_t value) {
  _internal_set_sig_verify_cost_ed25519(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.Params.sig_verify_cost_ed25519)
}
inline ::uint64_t Params::_internal_sig_verify_cost_ed25519() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sig_verify_cost_ed25519_;
}
inline void Params::_internal_set_sig_verify_cost_ed25519(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sig_verify_cost_ed25519_ = value;
}

// uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1", (.gogoproto.customname) = "SigVerifyCostSecp256k1"];
inline void Params::clear_sig_verify_cost_secp256k1() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sig_verify_cost_secp256k1_ = ::uint64_t{0u};
}
inline ::uint64_t Params::sig_verify_cost_secp256k1() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.Params.sig_verify_cost_secp256k1)
  return _internal_sig_verify_cost_secp256k1();
}
inline void Params::set_sig_verify_cost_secp256k1(::uint64_t value) {
  _internal_set_sig_verify_cost_secp256k1(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.Params.sig_verify_cost_secp256k1)
}
inline ::uint64_t Params::_internal_sig_verify_cost_secp256k1() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sig_verify_cost_secp256k1_;
}
inline void Params::_internal_set_sig_verify_cost_secp256k1(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sig_verify_cost_secp256k1_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fauth_2fv1beta1_2fauth_2eproto_2epb_2eh
