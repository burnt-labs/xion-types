// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/auth/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fauth_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2fauth_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/auth/v1beta1/auth.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/query/v1/query.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fauth_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace auth {
namespace v1beta1 {
class AddressBytesToStringRequest;
struct AddressBytesToStringRequestDefaultTypeInternal;
extern AddressBytesToStringRequestDefaultTypeInternal _AddressBytesToStringRequest_default_instance_;
class AddressBytesToStringResponse;
struct AddressBytesToStringResponseDefaultTypeInternal;
extern AddressBytesToStringResponseDefaultTypeInternal _AddressBytesToStringResponse_default_instance_;
class AddressStringToBytesRequest;
struct AddressStringToBytesRequestDefaultTypeInternal;
extern AddressStringToBytesRequestDefaultTypeInternal _AddressStringToBytesRequest_default_instance_;
class AddressStringToBytesResponse;
struct AddressStringToBytesResponseDefaultTypeInternal;
extern AddressStringToBytesResponseDefaultTypeInternal _AddressStringToBytesResponse_default_instance_;
class Bech32PrefixRequest;
struct Bech32PrefixRequestDefaultTypeInternal;
extern Bech32PrefixRequestDefaultTypeInternal _Bech32PrefixRequest_default_instance_;
class Bech32PrefixResponse;
struct Bech32PrefixResponseDefaultTypeInternal;
extern Bech32PrefixResponseDefaultTypeInternal _Bech32PrefixResponse_default_instance_;
class QueryAccountAddressByIDRequest;
struct QueryAccountAddressByIDRequestDefaultTypeInternal;
extern QueryAccountAddressByIDRequestDefaultTypeInternal _QueryAccountAddressByIDRequest_default_instance_;
class QueryAccountAddressByIDResponse;
struct QueryAccountAddressByIDResponseDefaultTypeInternal;
extern QueryAccountAddressByIDResponseDefaultTypeInternal _QueryAccountAddressByIDResponse_default_instance_;
class QueryAccountInfoRequest;
struct QueryAccountInfoRequestDefaultTypeInternal;
extern QueryAccountInfoRequestDefaultTypeInternal _QueryAccountInfoRequest_default_instance_;
class QueryAccountInfoResponse;
struct QueryAccountInfoResponseDefaultTypeInternal;
extern QueryAccountInfoResponseDefaultTypeInternal _QueryAccountInfoResponse_default_instance_;
class QueryAccountRequest;
struct QueryAccountRequestDefaultTypeInternal;
extern QueryAccountRequestDefaultTypeInternal _QueryAccountRequest_default_instance_;
class QueryAccountResponse;
struct QueryAccountResponseDefaultTypeInternal;
extern QueryAccountResponseDefaultTypeInternal _QueryAccountResponse_default_instance_;
class QueryAccountsRequest;
struct QueryAccountsRequestDefaultTypeInternal;
extern QueryAccountsRequestDefaultTypeInternal _QueryAccountsRequest_default_instance_;
class QueryAccountsResponse;
struct QueryAccountsResponseDefaultTypeInternal;
extern QueryAccountsResponseDefaultTypeInternal _QueryAccountsResponse_default_instance_;
class QueryModuleAccountByNameRequest;
struct QueryModuleAccountByNameRequestDefaultTypeInternal;
extern QueryModuleAccountByNameRequestDefaultTypeInternal _QueryModuleAccountByNameRequest_default_instance_;
class QueryModuleAccountByNameResponse;
struct QueryModuleAccountByNameResponseDefaultTypeInternal;
extern QueryModuleAccountByNameResponseDefaultTypeInternal _QueryModuleAccountByNameResponse_default_instance_;
class QueryModuleAccountsRequest;
struct QueryModuleAccountsRequestDefaultTypeInternal;
extern QueryModuleAccountsRequestDefaultTypeInternal _QueryModuleAccountsRequest_default_instance_;
class QueryModuleAccountsResponse;
struct QueryModuleAccountsResponseDefaultTypeInternal;
extern QueryModuleAccountsResponseDefaultTypeInternal _QueryModuleAccountsResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace auth {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryModuleAccountsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryModuleAccountsRequest) */ {
 public:
  inline QueryModuleAccountsRequest() : QueryModuleAccountsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryModuleAccountsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryModuleAccountsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryModuleAccountsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryModuleAccountsRequest(const QueryModuleAccountsRequest& from) : QueryModuleAccountsRequest(nullptr, from) {}
  inline QueryModuleAccountsRequest(QueryModuleAccountsRequest&& from) noexcept
      : QueryModuleAccountsRequest(nullptr, std::move(from)) {}
  inline QueryModuleAccountsRequest& operator=(const QueryModuleAccountsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryModuleAccountsRequest& operator=(QueryModuleAccountsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryModuleAccountsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryModuleAccountsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryModuleAccountsRequest*>(
        &_QueryModuleAccountsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryModuleAccountsRequest& a, QueryModuleAccountsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryModuleAccountsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryModuleAccountsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryModuleAccountsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryModuleAccountsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryModuleAccountsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryModuleAccountsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryModuleAccountsRequest"; }

 protected:
  explicit QueryModuleAccountsRequest(::google::protobuf::Arena* arena);
  QueryModuleAccountsRequest(::google::protobuf::Arena* arena, const QueryModuleAccountsRequest& from);
  QueryModuleAccountsRequest(::google::protobuf::Arena* arena, QueryModuleAccountsRequest&& from) noexcept
      : QueryModuleAccountsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryModuleAccountsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryModuleAccountsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryModuleAccountByNameRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest) */ {
 public:
  inline QueryModuleAccountByNameRequest() : QueryModuleAccountByNameRequest(nullptr) {}
  ~QueryModuleAccountByNameRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryModuleAccountByNameRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryModuleAccountByNameRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryModuleAccountByNameRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryModuleAccountByNameRequest(const QueryModuleAccountByNameRequest& from) : QueryModuleAccountByNameRequest(nullptr, from) {}
  inline QueryModuleAccountByNameRequest(QueryModuleAccountByNameRequest&& from) noexcept
      : QueryModuleAccountByNameRequest(nullptr, std::move(from)) {}
  inline QueryModuleAccountByNameRequest& operator=(const QueryModuleAccountByNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryModuleAccountByNameRequest& operator=(QueryModuleAccountByNameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryModuleAccountByNameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryModuleAccountByNameRequest* internal_default_instance() {
    return reinterpret_cast<const QueryModuleAccountByNameRequest*>(
        &_QueryModuleAccountByNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryModuleAccountByNameRequest& a, QueryModuleAccountByNameRequest& b) { a.Swap(&b); }
  inline void Swap(QueryModuleAccountByNameRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryModuleAccountByNameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryModuleAccountByNameRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryModuleAccountByNameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryModuleAccountByNameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryModuleAccountByNameRequest& from) { QueryModuleAccountByNameRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryModuleAccountByNameRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryModuleAccountByNameRequest"; }

 protected:
  explicit QueryModuleAccountByNameRequest(::google::protobuf::Arena* arena);
  QueryModuleAccountByNameRequest(::google::protobuf::Arena* arena, const QueryModuleAccountByNameRequest& from);
  QueryModuleAccountByNameRequest(::google::protobuf::Arena* arena, QueryModuleAccountByNameRequest&& from) noexcept
      : QueryModuleAccountByNameRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryModuleAccountByNameRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountRequest) */ {
 public:
  inline QueryAccountRequest() : QueryAccountRequest(nullptr) {}
  ~QueryAccountRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountRequest(const QueryAccountRequest& from) : QueryAccountRequest(nullptr, from) {}
  inline QueryAccountRequest(QueryAccountRequest&& from) noexcept
      : QueryAccountRequest(nullptr, std::move(from)) {}
  inline QueryAccountRequest& operator=(const QueryAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountRequest& operator=(QueryAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAccountRequest*>(
        &_QueryAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryAccountRequest& a, QueryAccountRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAccountRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountRequest& from) { QueryAccountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountRequest"; }

 protected:
  explicit QueryAccountRequest(::google::protobuf::Arena* arena);
  QueryAccountRequest(::google::protobuf::Arena* arena, const QueryAccountRequest& from);
  QueryAccountRequest(::google::protobuf::Arena* arena, QueryAccountRequest&& from) noexcept
      : QueryAccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountInfoRequest) */ {
 public:
  inline QueryAccountInfoRequest() : QueryAccountInfoRequest(nullptr) {}
  ~QueryAccountInfoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountInfoRequest(const QueryAccountInfoRequest& from) : QueryAccountInfoRequest(nullptr, from) {}
  inline QueryAccountInfoRequest(QueryAccountInfoRequest&& from) noexcept
      : QueryAccountInfoRequest(nullptr, std::move(from)) {}
  inline QueryAccountInfoRequest& operator=(const QueryAccountInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountInfoRequest& operator=(QueryAccountInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountInfoRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAccountInfoRequest*>(
        &_QueryAccountInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(QueryAccountInfoRequest& a, QueryAccountInfoRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAccountInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountInfoRequest& from) { QueryAccountInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountInfoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountInfoRequest"; }

 protected:
  explicit QueryAccountInfoRequest(::google::protobuf::Arena* arena);
  QueryAccountInfoRequest(::google::protobuf::Arena* arena, const QueryAccountInfoRequest& from);
  QueryAccountInfoRequest(::google::protobuf::Arena* arena, QueryAccountInfoRequest&& from) noexcept
      : QueryAccountInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountInfoRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountAddressByIDResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse) */ {
 public:
  inline QueryAccountAddressByIDResponse() : QueryAccountAddressByIDResponse(nullptr) {}
  ~QueryAccountAddressByIDResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountAddressByIDResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountAddressByIDResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountAddressByIDResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountAddressByIDResponse(const QueryAccountAddressByIDResponse& from) : QueryAccountAddressByIDResponse(nullptr, from) {}
  inline QueryAccountAddressByIDResponse(QueryAccountAddressByIDResponse&& from) noexcept
      : QueryAccountAddressByIDResponse(nullptr, std::move(from)) {}
  inline QueryAccountAddressByIDResponse& operator=(const QueryAccountAddressByIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountAddressByIDResponse& operator=(QueryAccountAddressByIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountAddressByIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountAddressByIDResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAccountAddressByIDResponse*>(
        &_QueryAccountAddressByIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(QueryAccountAddressByIDResponse& a, QueryAccountAddressByIDResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAccountAddressByIDResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountAddressByIDResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountAddressByIDResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountAddressByIDResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountAddressByIDResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountAddressByIDResponse& from) { QueryAccountAddressByIDResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountAddressByIDResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountAddressByIDResponse"; }

 protected:
  explicit QueryAccountAddressByIDResponse(::google::protobuf::Arena* arena);
  QueryAccountAddressByIDResponse(::google::protobuf::Arena* arena, const QueryAccountAddressByIDResponse& from);
  QueryAccountAddressByIDResponse(::google::protobuf::Arena* arena, QueryAccountAddressByIDResponse&& from) noexcept
      : QueryAccountAddressByIDResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountAddressFieldNumber = 1,
  };
  // string account_address = 1 [json_name = "accountAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_account_address() ;
  const std::string& account_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_address(Arg_&& arg, Args_... args);
  std::string* mutable_account_address();
  PROTOBUF_NODISCARD std::string* release_account_address();
  void set_allocated_account_address(std::string* value);

  private:
  const std::string& _internal_account_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_address(
      const std::string& value);
  std::string* _internal_mutable_account_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      75, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountAddressByIDResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountAddressByIDRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest) */ {
 public:
  inline QueryAccountAddressByIDRequest() : QueryAccountAddressByIDRequest(nullptr) {}
  ~QueryAccountAddressByIDRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountAddressByIDRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountAddressByIDRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountAddressByIDRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountAddressByIDRequest(const QueryAccountAddressByIDRequest& from) : QueryAccountAddressByIDRequest(nullptr, from) {}
  inline QueryAccountAddressByIDRequest(QueryAccountAddressByIDRequest&& from) noexcept
      : QueryAccountAddressByIDRequest(nullptr, std::move(from)) {}
  inline QueryAccountAddressByIDRequest& operator=(const QueryAccountAddressByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountAddressByIDRequest& operator=(QueryAccountAddressByIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountAddressByIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountAddressByIDRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAccountAddressByIDRequest*>(
        &_QueryAccountAddressByIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QueryAccountAddressByIDRequest& a, QueryAccountAddressByIDRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAccountAddressByIDRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountAddressByIDRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountAddressByIDRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountAddressByIDRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountAddressByIDRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountAddressByIDRequest& from) { QueryAccountAddressByIDRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountAddressByIDRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountAddressByIDRequest"; }

 protected:
  explicit QueryAccountAddressByIDRequest(::google::protobuf::Arena* arena);
  QueryAccountAddressByIDRequest(::google::protobuf::Arena* arena, const QueryAccountAddressByIDRequest& from);
  QueryAccountAddressByIDRequest(::google::protobuf::Arena* arena, QueryAccountAddressByIDRequest&& from) noexcept
      : QueryAccountAddressByIDRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kAccountIdFieldNumber = 2,
  };
  // int64 id = 1 [json_name = "id", deprecated = true];
  [[deprecated]]  void clear_id() ;
  [[deprecated]] ::int64_t id() const;
  [[deprecated]] void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // uint64 account_id = 2 [json_name = "accountId", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
  void clear_account_id() ;
  ::uint64_t account_id() const;
  void set_account_id(::uint64_t value);

  private:
  ::uint64_t _internal_account_id() const;
  void _internal_set_account_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountAddressByIDRequest& from_msg);
    ::int64_t id_;
    ::uint64_t account_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class Bech32PrefixResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.Bech32PrefixResponse) */ {
 public:
  inline Bech32PrefixResponse() : Bech32PrefixResponse(nullptr) {}
  ~Bech32PrefixResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Bech32PrefixResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Bech32PrefixResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Bech32PrefixResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline Bech32PrefixResponse(const Bech32PrefixResponse& from) : Bech32PrefixResponse(nullptr, from) {}
  inline Bech32PrefixResponse(Bech32PrefixResponse&& from) noexcept
      : Bech32PrefixResponse(nullptr, std::move(from)) {}
  inline Bech32PrefixResponse& operator=(const Bech32PrefixResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bech32PrefixResponse& operator=(Bech32PrefixResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Bech32PrefixResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const Bech32PrefixResponse* internal_default_instance() {
    return reinterpret_cast<const Bech32PrefixResponse*>(
        &_Bech32PrefixResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(Bech32PrefixResponse& a, Bech32PrefixResponse& b) { a.Swap(&b); }
  inline void Swap(Bech32PrefixResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bech32PrefixResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Bech32PrefixResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Bech32PrefixResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Bech32PrefixResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Bech32PrefixResponse& from) { Bech32PrefixResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Bech32PrefixResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.Bech32PrefixResponse"; }

 protected:
  explicit Bech32PrefixResponse(::google::protobuf::Arena* arena);
  Bech32PrefixResponse(::google::protobuf::Arena* arena, const Bech32PrefixResponse& from);
  Bech32PrefixResponse(::google::protobuf::Arena* arena, Bech32PrefixResponse&& from) noexcept
      : Bech32PrefixResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBech32PrefixFieldNumber = 1,
  };
  // string bech32_prefix = 1 [json_name = "bech32Prefix"];
  void clear_bech32_prefix() ;
  const std::string& bech32_prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bech32_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_bech32_prefix();
  PROTOBUF_NODISCARD std::string* release_bech32_prefix();
  void set_allocated_bech32_prefix(std::string* value);

  private:
  const std::string& _internal_bech32_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bech32_prefix(
      const std::string& value);
  std::string* _internal_mutable_bech32_prefix();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.Bech32PrefixResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Bech32PrefixResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bech32_prefix_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class Bech32PrefixRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.Bech32PrefixRequest) */ {
 public:
  inline Bech32PrefixRequest() : Bech32PrefixRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Bech32PrefixRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Bech32PrefixRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Bech32PrefixRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline Bech32PrefixRequest(const Bech32PrefixRequest& from) : Bech32PrefixRequest(nullptr, from) {}
  inline Bech32PrefixRequest(Bech32PrefixRequest&& from) noexcept
      : Bech32PrefixRequest(nullptr, std::move(from)) {}
  inline Bech32PrefixRequest& operator=(const Bech32PrefixRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bech32PrefixRequest& operator=(Bech32PrefixRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Bech32PrefixRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const Bech32PrefixRequest* internal_default_instance() {
    return reinterpret_cast<const Bech32PrefixRequest*>(
        &_Bech32PrefixRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Bech32PrefixRequest& a, Bech32PrefixRequest& b) { a.Swap(&b); }
  inline void Swap(Bech32PrefixRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bech32PrefixRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Bech32PrefixRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Bech32PrefixRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Bech32PrefixRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Bech32PrefixRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.Bech32PrefixRequest"; }

 protected:
  explicit Bech32PrefixRequest(::google::protobuf::Arena* arena);
  Bech32PrefixRequest(::google::protobuf::Arena* arena, const Bech32PrefixRequest& from);
  Bech32PrefixRequest(::google::protobuf::Arena* arena, Bech32PrefixRequest&& from) noexcept
      : Bech32PrefixRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.Bech32PrefixRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Bech32PrefixRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AddressStringToBytesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.AddressStringToBytesResponse) */ {
 public:
  inline AddressStringToBytesResponse() : AddressStringToBytesResponse(nullptr) {}
  ~AddressStringToBytesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressStringToBytesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressStringToBytesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressStringToBytesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressStringToBytesResponse(const AddressStringToBytesResponse& from) : AddressStringToBytesResponse(nullptr, from) {}
  inline AddressStringToBytesResponse(AddressStringToBytesResponse&& from) noexcept
      : AddressStringToBytesResponse(nullptr, std::move(from)) {}
  inline AddressStringToBytesResponse& operator=(const AddressStringToBytesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressStringToBytesResponse& operator=(AddressStringToBytesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressStringToBytesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressStringToBytesResponse* internal_default_instance() {
    return reinterpret_cast<const AddressStringToBytesResponse*>(
        &_AddressStringToBytesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(AddressStringToBytesResponse& a, AddressStringToBytesResponse& b) { a.Swap(&b); }
  inline void Swap(AddressStringToBytesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressStringToBytesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressStringToBytesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressStringToBytesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressStringToBytesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressStringToBytesResponse& from) { AddressStringToBytesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressStringToBytesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.AddressStringToBytesResponse"; }

 protected:
  explicit AddressStringToBytesResponse(::google::protobuf::Arena* arena);
  AddressStringToBytesResponse(::google::protobuf::Arena* arena, const AddressStringToBytesResponse& from);
  AddressStringToBytesResponse(::google::protobuf::Arena* arena, AddressStringToBytesResponse&& from) noexcept
      : AddressStringToBytesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressBytesFieldNumber = 1,
  };
  // bytes address_bytes = 1 [json_name = "addressBytes"];
  void clear_address_bytes() ;
  const std::string& address_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_address_bytes();
  PROTOBUF_NODISCARD std::string* release_address_bytes();
  void set_allocated_address_bytes(std::string* value);

  private:
  const std::string& _internal_address_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address_bytes(
      const std::string& value);
  std::string* _internal_mutable_address_bytes();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.AddressStringToBytesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressStringToBytesResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_bytes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AddressStringToBytesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.AddressStringToBytesRequest) */ {
 public:
  inline AddressStringToBytesRequest() : AddressStringToBytesRequest(nullptr) {}
  ~AddressStringToBytesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressStringToBytesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressStringToBytesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressStringToBytesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressStringToBytesRequest(const AddressStringToBytesRequest& from) : AddressStringToBytesRequest(nullptr, from) {}
  inline AddressStringToBytesRequest(AddressStringToBytesRequest&& from) noexcept
      : AddressStringToBytesRequest(nullptr, std::move(from)) {}
  inline AddressStringToBytesRequest& operator=(const AddressStringToBytesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressStringToBytesRequest& operator=(AddressStringToBytesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressStringToBytesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressStringToBytesRequest* internal_default_instance() {
    return reinterpret_cast<const AddressStringToBytesRequest*>(
        &_AddressStringToBytesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(AddressStringToBytesRequest& a, AddressStringToBytesRequest& b) { a.Swap(&b); }
  inline void Swap(AddressStringToBytesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressStringToBytesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressStringToBytesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressStringToBytesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressStringToBytesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressStringToBytesRequest& from) { AddressStringToBytesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressStringToBytesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.AddressStringToBytesRequest"; }

 protected:
  explicit AddressStringToBytesRequest(::google::protobuf::Arena* arena);
  AddressStringToBytesRequest(::google::protobuf::Arena* arena, const AddressStringToBytesRequest& from);
  AddressStringToBytesRequest(::google::protobuf::Arena* arena, AddressStringToBytesRequest&& from) noexcept
      : AddressStringToBytesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressStringFieldNumber = 1,
  };
  // string address_string = 1 [json_name = "addressString"];
  void clear_address_string() ;
  const std::string& address_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address_string(Arg_&& arg, Args_... args);
  std::string* mutable_address_string();
  PROTOBUF_NODISCARD std::string* release_address_string();
  void set_allocated_address_string(std::string* value);

  private:
  const std::string& _internal_address_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address_string(
      const std::string& value);
  std::string* _internal_mutable_address_string();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.AddressStringToBytesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      70, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressStringToBytesRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_string_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AddressBytesToStringResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.AddressBytesToStringResponse) */ {
 public:
  inline AddressBytesToStringResponse() : AddressBytesToStringResponse(nullptr) {}
  ~AddressBytesToStringResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressBytesToStringResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressBytesToStringResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressBytesToStringResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressBytesToStringResponse(const AddressBytesToStringResponse& from) : AddressBytesToStringResponse(nullptr, from) {}
  inline AddressBytesToStringResponse(AddressBytesToStringResponse&& from) noexcept
      : AddressBytesToStringResponse(nullptr, std::move(from)) {}
  inline AddressBytesToStringResponse& operator=(const AddressBytesToStringResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressBytesToStringResponse& operator=(AddressBytesToStringResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressBytesToStringResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressBytesToStringResponse* internal_default_instance() {
    return reinterpret_cast<const AddressBytesToStringResponse*>(
        &_AddressBytesToStringResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(AddressBytesToStringResponse& a, AddressBytesToStringResponse& b) { a.Swap(&b); }
  inline void Swap(AddressBytesToStringResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressBytesToStringResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressBytesToStringResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressBytesToStringResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressBytesToStringResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressBytesToStringResponse& from) { AddressBytesToStringResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressBytesToStringResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.AddressBytesToStringResponse"; }

 protected:
  explicit AddressBytesToStringResponse(::google::protobuf::Arena* arena);
  AddressBytesToStringResponse(::google::protobuf::Arena* arena, const AddressBytesToStringResponse& from);
  AddressBytesToStringResponse(::google::protobuf::Arena* arena, AddressBytesToStringResponse&& from) noexcept
      : AddressBytesToStringResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressStringFieldNumber = 1,
  };
  // string address_string = 1 [json_name = "addressString"];
  void clear_address_string() ;
  const std::string& address_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address_string(Arg_&& arg, Args_... args);
  std::string* mutable_address_string();
  PROTOBUF_NODISCARD std::string* release_address_string();
  void set_allocated_address_string(std::string* value);

  private:
  const std::string& _internal_address_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address_string(
      const std::string& value);
  std::string* _internal_mutable_address_string();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.AddressBytesToStringResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressBytesToStringResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_string_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class AddressBytesToStringRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.AddressBytesToStringRequest) */ {
 public:
  inline AddressBytesToStringRequest() : AddressBytesToStringRequest(nullptr) {}
  ~AddressBytesToStringRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddressBytesToStringRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddressBytesToStringRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressBytesToStringRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressBytesToStringRequest(const AddressBytesToStringRequest& from) : AddressBytesToStringRequest(nullptr, from) {}
  inline AddressBytesToStringRequest(AddressBytesToStringRequest&& from) noexcept
      : AddressBytesToStringRequest(nullptr, std::move(from)) {}
  inline AddressBytesToStringRequest& operator=(const AddressBytesToStringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressBytesToStringRequest& operator=(AddressBytesToStringRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressBytesToStringRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressBytesToStringRequest* internal_default_instance() {
    return reinterpret_cast<const AddressBytesToStringRequest*>(
        &_AddressBytesToStringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(AddressBytesToStringRequest& a, AddressBytesToStringRequest& b) { a.Swap(&b); }
  inline void Swap(AddressBytesToStringRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressBytesToStringRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressBytesToStringRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddressBytesToStringRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressBytesToStringRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressBytesToStringRequest& from) { AddressBytesToStringRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddressBytesToStringRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.AddressBytesToStringRequest"; }

 protected:
  explicit AddressBytesToStringRequest(::google::protobuf::Arena* arena);
  AddressBytesToStringRequest(::google::protobuf::Arena* arena, const AddressBytesToStringRequest& from);
  AddressBytesToStringRequest(::google::protobuf::Arena* arena, AddressBytesToStringRequest&& from) noexcept
      : AddressBytesToStringRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressBytesFieldNumber = 1,
  };
  // bytes address_bytes = 1 [json_name = "addressBytes"];
  void clear_address_bytes() ;
  const std::string& address_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_address_bytes();
  PROTOBUF_NODISCARD std::string* release_address_bytes();
  void set_allocated_address_bytes(std::string* value);

  private:
  const std::string& _internal_address_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address_bytes(
      const std::string& value);
  std::string* _internal_mutable_address_bytes();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.AddressBytesToStringRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressBytesToStringRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_bytes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .cosmos.auth.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::auth::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::auth::v1beta1::Params* release_params();
  ::cosmos::auth::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::auth::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::auth::v1beta1::Params* value);
  ::cosmos::auth::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::auth::v1beta1::Params& _internal_params() const;
  ::cosmos::auth::v1beta1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::auth::v1beta1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryModuleAccountsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryModuleAccountsResponse) */ {
 public:
  inline QueryModuleAccountsResponse() : QueryModuleAccountsResponse(nullptr) {}
  ~QueryModuleAccountsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryModuleAccountsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryModuleAccountsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryModuleAccountsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryModuleAccountsResponse(const QueryModuleAccountsResponse& from) : QueryModuleAccountsResponse(nullptr, from) {}
  inline QueryModuleAccountsResponse(QueryModuleAccountsResponse&& from) noexcept
      : QueryModuleAccountsResponse(nullptr, std::move(from)) {}
  inline QueryModuleAccountsResponse& operator=(const QueryModuleAccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryModuleAccountsResponse& operator=(QueryModuleAccountsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryModuleAccountsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryModuleAccountsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryModuleAccountsResponse*>(
        &_QueryModuleAccountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryModuleAccountsResponse& a, QueryModuleAccountsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryModuleAccountsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryModuleAccountsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryModuleAccountsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryModuleAccountsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryModuleAccountsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryModuleAccountsResponse& from) { QueryModuleAccountsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryModuleAccountsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryModuleAccountsResponse"; }

 protected:
  explicit QueryModuleAccountsResponse(::google::protobuf::Arena* arena);
  QueryModuleAccountsResponse(::google::protobuf::Arena* arena, const QueryModuleAccountsResponse& from);
  QueryModuleAccountsResponse(::google::protobuf::Arena* arena, QueryModuleAccountsResponse&& from) noexcept
      : QueryModuleAccountsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountsFieldNumber = 1,
  };
  // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;

  public:
  void clear_accounts() ;
  ::google::protobuf::Any* mutable_accounts(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_accounts() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_accounts();
  public:
  const ::google::protobuf::Any& accounts(int index) const;
  ::google::protobuf::Any* add_accounts();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& accounts() const;
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryModuleAccountsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryModuleAccountsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > accounts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryModuleAccountByNameResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse) */ {
 public:
  inline QueryModuleAccountByNameResponse() : QueryModuleAccountByNameResponse(nullptr) {}
  ~QueryModuleAccountByNameResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryModuleAccountByNameResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryModuleAccountByNameResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryModuleAccountByNameResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryModuleAccountByNameResponse(const QueryModuleAccountByNameResponse& from) : QueryModuleAccountByNameResponse(nullptr, from) {}
  inline QueryModuleAccountByNameResponse(QueryModuleAccountByNameResponse&& from) noexcept
      : QueryModuleAccountByNameResponse(nullptr, std::move(from)) {}
  inline QueryModuleAccountByNameResponse& operator=(const QueryModuleAccountByNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryModuleAccountByNameResponse& operator=(QueryModuleAccountByNameResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryModuleAccountByNameResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryModuleAccountByNameResponse* internal_default_instance() {
    return reinterpret_cast<const QueryModuleAccountByNameResponse*>(
        &_QueryModuleAccountByNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryModuleAccountByNameResponse& a, QueryModuleAccountByNameResponse& b) { a.Swap(&b); }
  inline void Swap(QueryModuleAccountByNameResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryModuleAccountByNameResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryModuleAccountByNameResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryModuleAccountByNameResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryModuleAccountByNameResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryModuleAccountByNameResponse& from) { QueryModuleAccountByNameResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryModuleAccountByNameResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryModuleAccountByNameResponse"; }

 protected:
  explicit QueryModuleAccountByNameResponse(::google::protobuf::Arena* arena);
  QueryModuleAccountByNameResponse(::google::protobuf::Arena* arena, const QueryModuleAccountByNameResponse& from);
  QueryModuleAccountByNameResponse(::google::protobuf::Arena* arena, QueryModuleAccountByNameResponse&& from) noexcept
      : QueryModuleAccountByNameResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 1,
  };
  // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
  bool has_account() const;
  void clear_account() ;
  const ::google::protobuf::Any& account() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_account();
  ::google::protobuf::Any* mutable_account();
  void set_allocated_account(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_account(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_account();

  private:
  const ::google::protobuf::Any& _internal_account() const;
  ::google::protobuf::Any* _internal_mutable_account();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryModuleAccountByNameResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Any* account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountsResponse) */ {
 public:
  inline QueryAccountsResponse() : QueryAccountsResponse(nullptr) {}
  ~QueryAccountsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountsResponse(const QueryAccountsResponse& from) : QueryAccountsResponse(nullptr, from) {}
  inline QueryAccountsResponse(QueryAccountsResponse&& from) noexcept
      : QueryAccountsResponse(nullptr, std::move(from)) {}
  inline QueryAccountsResponse& operator=(const QueryAccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountsResponse& operator=(QueryAccountsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAccountsResponse*>(
        &_QueryAccountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryAccountsResponse& a, QueryAccountsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAccountsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountsResponse& from) { QueryAccountsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountsResponse"; }

 protected:
  explicit QueryAccountsResponse(::google::protobuf::Arena* arena);
  QueryAccountsResponse(::google::protobuf::Arena* arena, const QueryAccountsResponse& from);
  QueryAccountsResponse(::google::protobuf::Arena* arena, QueryAccountsResponse&& from) noexcept
      : QueryAccountsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;

  public:
  void clear_accounts() ;
  ::google::protobuf::Any* mutable_accounts(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_accounts() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_accounts();
  public:
  const ::google::protobuf::Any& accounts(int index) const;
  ::google::protobuf::Any* add_accounts();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& accounts() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > accounts_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountsRequest) */ {
 public:
  inline QueryAccountsRequest() : QueryAccountsRequest(nullptr) {}
  ~QueryAccountsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountsRequest(const QueryAccountsRequest& from) : QueryAccountsRequest(nullptr, from) {}
  inline QueryAccountsRequest(QueryAccountsRequest&& from) noexcept
      : QueryAccountsRequest(nullptr, std::move(from)) {}
  inline QueryAccountsRequest& operator=(const QueryAccountsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountsRequest& operator=(QueryAccountsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAccountsRequest*>(
        &_QueryAccountsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryAccountsRequest& a, QueryAccountsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAccountsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountsRequest& from) { QueryAccountsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountsRequest"; }

 protected:
  explicit QueryAccountsRequest(::google::protobuf::Arena* arena);
  QueryAccountsRequest(::google::protobuf::Arena* arena, const QueryAccountsRequest& from);
  QueryAccountsRequest(::google::protobuf::Arena* arena, QueryAccountsRequest&& from) noexcept
      : QueryAccountsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountResponse) */ {
 public:
  inline QueryAccountResponse() : QueryAccountResponse(nullptr) {}
  ~QueryAccountResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountResponse(const QueryAccountResponse& from) : QueryAccountResponse(nullptr, from) {}
  inline QueryAccountResponse(QueryAccountResponse&& from) noexcept
      : QueryAccountResponse(nullptr, std::move(from)) {}
  inline QueryAccountResponse& operator=(const QueryAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountResponse& operator=(QueryAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAccountResponse*>(
        &_QueryAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryAccountResponse& a, QueryAccountResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountResponse& from) { QueryAccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountResponse"; }

 protected:
  explicit QueryAccountResponse(::google::protobuf::Arena* arena);
  QueryAccountResponse(::google::protobuf::Arena* arena, const QueryAccountResponse& from);
  QueryAccountResponse(::google::protobuf::Arena* arena, QueryAccountResponse&& from) noexcept
      : QueryAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 1,
  };
  // .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
  bool has_account() const;
  void clear_account() ;
  const ::google::protobuf::Any& account() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_account();
  ::google::protobuf::Any* mutable_account();
  void set_allocated_account(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_account(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_account();

  private:
  const ::google::protobuf::Any& _internal_account() const;
  ::google::protobuf::Any* _internal_mutable_account();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Any* account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAccountInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.auth.v1beta1.QueryAccountInfoResponse) */ {
 public:
  inline QueryAccountInfoResponse() : QueryAccountInfoResponse(nullptr) {}
  ~QueryAccountInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAccountInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAccountInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAccountInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAccountInfoResponse(const QueryAccountInfoResponse& from) : QueryAccountInfoResponse(nullptr, from) {}
  inline QueryAccountInfoResponse(QueryAccountInfoResponse&& from) noexcept
      : QueryAccountInfoResponse(nullptr, std::move(from)) {}
  inline QueryAccountInfoResponse& operator=(const QueryAccountInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAccountInfoResponse& operator=(QueryAccountInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAccountInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAccountInfoResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAccountInfoResponse*>(
        &_QueryAccountInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(QueryAccountInfoResponse& a, QueryAccountInfoResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAccountInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAccountInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAccountInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAccountInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAccountInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAccountInfoResponse& from) { QueryAccountInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAccountInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.auth.v1beta1.QueryAccountInfoResponse"; }

 protected:
  explicit QueryAccountInfoResponse(::google::protobuf::Arena* arena);
  QueryAccountInfoResponse(::google::protobuf::Arena* arena, const QueryAccountInfoResponse& from);
  QueryAccountInfoResponse(::google::protobuf::Arena* arena, QueryAccountInfoResponse&& from) noexcept
      : QueryAccountInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 1,
  };
  // .cosmos.auth.v1beta1.BaseAccount info = 1 [json_name = "info"];
  bool has_info() const;
  void clear_info() ;
  const ::cosmos::auth::v1beta1::BaseAccount& info() const;
  PROTOBUF_NODISCARD ::cosmos::auth::v1beta1::BaseAccount* release_info();
  ::cosmos::auth::v1beta1::BaseAccount* mutable_info();
  void set_allocated_info(::cosmos::auth::v1beta1::BaseAccount* value);
  void unsafe_arena_set_allocated_info(::cosmos::auth::v1beta1::BaseAccount* value);
  ::cosmos::auth::v1beta1::BaseAccount* unsafe_arena_release_info();

  private:
  const ::cosmos::auth::v1beta1::BaseAccount& _internal_info() const;
  ::cosmos::auth::v1beta1::BaseAccount* _internal_mutable_info();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.auth.v1beta1.QueryAccountInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAccountInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::auth::v1beta1::BaseAccount* info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fauth_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryAccountsRequest

// .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
inline bool QueryAccountsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAccountsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAccountsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountsRequest.pagination)
  return _internal_pagination();
}
inline void QueryAccountsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.QueryAccountsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryAccountsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAccountsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountsRequest.pagination)
  return _msg;
}
inline void QueryAccountsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryAccountsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryAccountsResponse

// repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
inline int QueryAccountsResponse::_internal_accounts_size() const {
  return _internal_accounts().size();
}
inline int QueryAccountsResponse::accounts_size() const {
  return _internal_accounts_size();
}
inline ::google::protobuf::Any* QueryAccountsResponse::mutable_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountsResponse.accounts)
  return _internal_mutable_accounts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* QueryAccountsResponse::mutable_accounts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.auth.v1beta1.QueryAccountsResponse.accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accounts();
}
inline const ::google::protobuf::Any& QueryAccountsResponse::accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountsResponse.accounts)
  return _internal_accounts().Get(index);
}
inline ::google::protobuf::Any* QueryAccountsResponse::add_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_accounts()->Add();
  // @@protoc_insertion_point(field_add:cosmos.auth.v1beta1.QueryAccountsResponse.accounts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& QueryAccountsResponse::accounts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.auth.v1beta1.QueryAccountsResponse.accounts)
  return _internal_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
QueryAccountsResponse::_internal_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accounts_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
QueryAccountsResponse::_internal_mutable_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accounts_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryAccountsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAccountsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAccountsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountsResponse.pagination)
  return _internal_pagination();
}
inline void QueryAccountsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.QueryAccountsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAccountsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAccountsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryAccountsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAccountsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAccountsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountsResponse.pagination)
  return _msg;
}
inline void QueryAccountsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryAccountsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryAccountRequest

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAccountRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryAccountRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAccountRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.QueryAccountRequest.address)
}
inline std::string* QueryAccountRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountRequest.address)
  return _s;
}
inline const std::string& QueryAccountRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryAccountRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryAccountRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryAccountRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryAccountRequest.address)
  return _impl_.address_.Release();
}
inline void QueryAccountRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryAccountRequest.address)
}

// -------------------------------------------------------------------

// QueryAccountResponse

// .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.AccountI"];
inline bool QueryAccountResponse::has_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.account_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& QueryAccountResponse::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.account_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& QueryAccountResponse::account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountResponse.account)
  return _internal_account();
}
inline void QueryAccountResponse::unsafe_arena_set_allocated_account(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.account_);
  }
  _impl_.account_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.QueryAccountResponse.account)
}
inline ::google::protobuf::Any* QueryAccountResponse::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.account_;
  _impl_.account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* QueryAccountResponse::unsafe_arena_release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryAccountResponse.account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.account_;
  _impl_.account_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* QueryAccountResponse::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.account_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.account_;
}
inline ::google::protobuf::Any* QueryAccountResponse::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountResponse.account)
  return _msg;
}
inline void QueryAccountResponse::set_allocated_account(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.account_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryAccountResponse.account)
}

// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .cosmos.auth.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::auth::v1beta1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::auth::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::auth::v1beta1::Params&>(::cosmos::auth::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::auth::v1beta1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::cosmos::auth::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::auth::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.QueryParamsResponse.params)
}
inline ::cosmos::auth::v1beta1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::auth::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::auth::v1beta1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::auth::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::auth::v1beta1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::auth::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::auth::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::auth::v1beta1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::auth::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::cosmos::auth::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::auth::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryModuleAccountsRequest

// -------------------------------------------------------------------

// QueryModuleAccountsResponse

// repeated .google.protobuf.Any accounts = 1 [json_name = "accounts", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
inline int QueryModuleAccountsResponse::_internal_accounts_size() const {
  return _internal_accounts().size();
}
inline int QueryModuleAccountsResponse::accounts_size() const {
  return _internal_accounts_size();
}
inline ::google::protobuf::Any* QueryModuleAccountsResponse::mutable_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryModuleAccountsResponse.accounts)
  return _internal_mutable_accounts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* QueryModuleAccountsResponse::mutable_accounts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.auth.v1beta1.QueryModuleAccountsResponse.accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accounts();
}
inline const ::google::protobuf::Any& QueryModuleAccountsResponse::accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryModuleAccountsResponse.accounts)
  return _internal_accounts().Get(index);
}
inline ::google::protobuf::Any* QueryModuleAccountsResponse::add_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_accounts()->Add();
  // @@protoc_insertion_point(field_add:cosmos.auth.v1beta1.QueryModuleAccountsResponse.accounts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& QueryModuleAccountsResponse::accounts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.auth.v1beta1.QueryModuleAccountsResponse.accounts)
  return _internal_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
QueryModuleAccountsResponse::_internal_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accounts_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
QueryModuleAccountsResponse::_internal_mutable_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accounts_;
}

// -------------------------------------------------------------------

// QueryModuleAccountByNameRequest

// string name = 1 [json_name = "name"];
inline void QueryModuleAccountByNameRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& QueryModuleAccountByNameRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryModuleAccountByNameRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest.name)
}
inline std::string* QueryModuleAccountByNameRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest.name)
  return _s;
}
inline const std::string& QueryModuleAccountByNameRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void QueryModuleAccountByNameRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* QueryModuleAccountByNameRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* QueryModuleAccountByNameRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest.name)
  return _impl_.name_.Release();
}
inline void QueryModuleAccountByNameRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryModuleAccountByNameRequest.name)
}

// -------------------------------------------------------------------

// QueryModuleAccountByNameResponse

// .google.protobuf.Any account = 1 [json_name = "account", (.cosmos_proto.accepts_interface) = "cosmos.auth.v1beta1.ModuleAccountI"];
inline bool QueryModuleAccountByNameResponse::has_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.account_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& QueryModuleAccountByNameResponse::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.account_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& QueryModuleAccountByNameResponse::account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse.account)
  return _internal_account();
}
inline void QueryModuleAccountByNameResponse::unsafe_arena_set_allocated_account(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.account_);
  }
  _impl_.account_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse.account)
}
inline ::google::protobuf::Any* QueryModuleAccountByNameResponse::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.account_;
  _impl_.account_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* QueryModuleAccountByNameResponse::unsafe_arena_release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse.account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.account_;
  _impl_.account_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* QueryModuleAccountByNameResponse::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.account_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.account_;
}
inline ::google::protobuf::Any* QueryModuleAccountByNameResponse::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse.account)
  return _msg;
}
inline void QueryModuleAccountByNameResponse::set_allocated_account(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.account_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryModuleAccountByNameResponse.account)
}

// -------------------------------------------------------------------

// Bech32PrefixRequest

// -------------------------------------------------------------------

// Bech32PrefixResponse

// string bech32_prefix = 1 [json_name = "bech32Prefix"];
inline void Bech32PrefixResponse::clear_bech32_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_prefix_.ClearToEmpty();
}
inline const std::string& Bech32PrefixResponse::bech32_prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.Bech32PrefixResponse.bech32_prefix)
  return _internal_bech32_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Bech32PrefixResponse::set_bech32_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.Bech32PrefixResponse.bech32_prefix)
}
inline std::string* Bech32PrefixResponse::mutable_bech32_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bech32_prefix();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.Bech32PrefixResponse.bech32_prefix)
  return _s;
}
inline const std::string& Bech32PrefixResponse::_internal_bech32_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bech32_prefix_.Get();
}
inline void Bech32PrefixResponse::_internal_set_bech32_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_prefix_.Set(value, GetArena());
}
inline std::string* Bech32PrefixResponse::_internal_mutable_bech32_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bech32_prefix_.Mutable( GetArena());
}
inline std::string* Bech32PrefixResponse::release_bech32_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.Bech32PrefixResponse.bech32_prefix)
  return _impl_.bech32_prefix_.Release();
}
inline void Bech32PrefixResponse::set_allocated_bech32_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_prefix_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bech32_prefix_.IsDefault()) {
    _impl_.bech32_prefix_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.Bech32PrefixResponse.bech32_prefix)
}

// -------------------------------------------------------------------

// AddressBytesToStringRequest

// bytes address_bytes = 1 [json_name = "addressBytes"];
inline void AddressBytesToStringRequest::clear_address_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.ClearToEmpty();
}
inline const std::string& AddressBytesToStringRequest::address_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.AddressBytesToStringRequest.address_bytes)
  return _internal_address_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressBytesToStringRequest::set_address_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.AddressBytesToStringRequest.address_bytes)
}
inline std::string* AddressBytesToStringRequest::mutable_address_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address_bytes();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.AddressBytesToStringRequest.address_bytes)
  return _s;
}
inline const std::string& AddressBytesToStringRequest::_internal_address_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_bytes_.Get();
}
inline void AddressBytesToStringRequest::_internal_set_address_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.Set(value, GetArena());
}
inline std::string* AddressBytesToStringRequest::_internal_mutable_address_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_bytes_.Mutable( GetArena());
}
inline std::string* AddressBytesToStringRequest::release_address_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.AddressBytesToStringRequest.address_bytes)
  return _impl_.address_bytes_.Release();
}
inline void AddressBytesToStringRequest::set_allocated_address_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_bytes_.IsDefault()) {
    _impl_.address_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.AddressBytesToStringRequest.address_bytes)
}

// -------------------------------------------------------------------

// AddressBytesToStringResponse

// string address_string = 1 [json_name = "addressString"];
inline void AddressBytesToStringResponse::clear_address_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.ClearToEmpty();
}
inline const std::string& AddressBytesToStringResponse::address_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.AddressBytesToStringResponse.address_string)
  return _internal_address_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressBytesToStringResponse::set_address_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.AddressBytesToStringResponse.address_string)
}
inline std::string* AddressBytesToStringResponse::mutable_address_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address_string();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.AddressBytesToStringResponse.address_string)
  return _s;
}
inline const std::string& AddressBytesToStringResponse::_internal_address_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_string_.Get();
}
inline void AddressBytesToStringResponse::_internal_set_address_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.Set(value, GetArena());
}
inline std::string* AddressBytesToStringResponse::_internal_mutable_address_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_string_.Mutable( GetArena());
}
inline std::string* AddressBytesToStringResponse::release_address_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.AddressBytesToStringResponse.address_string)
  return _impl_.address_string_.Release();
}
inline void AddressBytesToStringResponse::set_allocated_address_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_string_.IsDefault()) {
    _impl_.address_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.AddressBytesToStringResponse.address_string)
}

// -------------------------------------------------------------------

// AddressStringToBytesRequest

// string address_string = 1 [json_name = "addressString"];
inline void AddressStringToBytesRequest::clear_address_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.ClearToEmpty();
}
inline const std::string& AddressStringToBytesRequest::address_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.AddressStringToBytesRequest.address_string)
  return _internal_address_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressStringToBytesRequest::set_address_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.AddressStringToBytesRequest.address_string)
}
inline std::string* AddressStringToBytesRequest::mutable_address_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address_string();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.AddressStringToBytesRequest.address_string)
  return _s;
}
inline const std::string& AddressStringToBytesRequest::_internal_address_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_string_.Get();
}
inline void AddressStringToBytesRequest::_internal_set_address_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.Set(value, GetArena());
}
inline std::string* AddressStringToBytesRequest::_internal_mutable_address_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_string_.Mutable( GetArena());
}
inline std::string* AddressStringToBytesRequest::release_address_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.AddressStringToBytesRequest.address_string)
  return _impl_.address_string_.Release();
}
inline void AddressStringToBytesRequest::set_allocated_address_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_string_.IsDefault()) {
    _impl_.address_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.AddressStringToBytesRequest.address_string)
}

// -------------------------------------------------------------------

// AddressStringToBytesResponse

// bytes address_bytes = 1 [json_name = "addressBytes"];
inline void AddressStringToBytesResponse::clear_address_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.ClearToEmpty();
}
inline const std::string& AddressStringToBytesResponse::address_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.AddressStringToBytesResponse.address_bytes)
  return _internal_address_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressStringToBytesResponse::set_address_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.AddressStringToBytesResponse.address_bytes)
}
inline std::string* AddressStringToBytesResponse::mutable_address_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address_bytes();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.AddressStringToBytesResponse.address_bytes)
  return _s;
}
inline const std::string& AddressStringToBytesResponse::_internal_address_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_bytes_.Get();
}
inline void AddressStringToBytesResponse::_internal_set_address_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.Set(value, GetArena());
}
inline std::string* AddressStringToBytesResponse::_internal_mutable_address_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_bytes_.Mutable( GetArena());
}
inline std::string* AddressStringToBytesResponse::release_address_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.AddressStringToBytesResponse.address_bytes)
  return _impl_.address_bytes_.Release();
}
inline void AddressStringToBytesResponse::set_allocated_address_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_bytes_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_bytes_.IsDefault()) {
    _impl_.address_bytes_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.AddressStringToBytesResponse.address_bytes)
}

// -------------------------------------------------------------------

// QueryAccountAddressByIDRequest

// int64 id = 1 [json_name = "id", deprecated = true];
inline void QueryAccountAddressByIDRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t QueryAccountAddressByIDRequest::id() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest.id)
  return _internal_id();
}
inline void QueryAccountAddressByIDRequest::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest.id)
}
inline ::int64_t QueryAccountAddressByIDRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void QueryAccountAddressByIDRequest::_internal_set_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// uint64 account_id = 2 [json_name = "accountId", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
inline void QueryAccountAddressByIDRequest::clear_account_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryAccountAddressByIDRequest::account_id() const {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest.account_id)
  return _internal_account_id();
}
inline void QueryAccountAddressByIDRequest::set_account_id(::uint64_t value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.QueryAccountAddressByIDRequest.account_id)
}
inline ::uint64_t QueryAccountAddressByIDRequest::_internal_account_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_id_;
}
inline void QueryAccountAddressByIDRequest::_internal_set_account_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_id_ = value;
}

// -------------------------------------------------------------------

// QueryAccountAddressByIDResponse

// string account_address = 1 [json_name = "accountAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAccountAddressByIDResponse::clear_account_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_address_.ClearToEmpty();
}
inline const std::string& QueryAccountAddressByIDResponse::account_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse.account_address)
  return _internal_account_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAccountAddressByIDResponse::set_account_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse.account_address)
}
inline std::string* QueryAccountAddressByIDResponse::mutable_account_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_address();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse.account_address)
  return _s;
}
inline const std::string& QueryAccountAddressByIDResponse::_internal_account_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_address_.Get();
}
inline void QueryAccountAddressByIDResponse::_internal_set_account_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_address_.Set(value, GetArena());
}
inline std::string* QueryAccountAddressByIDResponse::_internal_mutable_account_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_address_.Mutable( GetArena());
}
inline std::string* QueryAccountAddressByIDResponse::release_account_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse.account_address)
  return _impl_.account_address_.Release();
}
inline void QueryAccountAddressByIDResponse::set_allocated_account_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.account_address_.IsDefault()) {
    _impl_.account_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryAccountAddressByIDResponse.account_address)
}

// -------------------------------------------------------------------

// QueryAccountInfoRequest

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAccountInfoRequest::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& QueryAccountInfoRequest::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountInfoRequest.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAccountInfoRequest::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.auth.v1beta1.QueryAccountInfoRequest.address)
}
inline std::string* QueryAccountInfoRequest::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountInfoRequest.address)
  return _s;
}
inline const std::string& QueryAccountInfoRequest::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void QueryAccountInfoRequest::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* QueryAccountInfoRequest::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* QueryAccountInfoRequest::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryAccountInfoRequest.address)
  return _impl_.address_.Release();
}
inline void QueryAccountInfoRequest::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryAccountInfoRequest.address)
}

// -------------------------------------------------------------------

// QueryAccountInfoResponse

// .cosmos.auth.v1beta1.BaseAccount info = 1 [json_name = "info"];
inline bool QueryAccountInfoResponse::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline const ::cosmos::auth::v1beta1::BaseAccount& QueryAccountInfoResponse::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::auth::v1beta1::BaseAccount* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::auth::v1beta1::BaseAccount&>(::cosmos::auth::v1beta1::_BaseAccount_default_instance_);
}
inline const ::cosmos::auth::v1beta1::BaseAccount& QueryAccountInfoResponse::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.auth.v1beta1.QueryAccountInfoResponse.info)
  return _internal_info();
}
inline void QueryAccountInfoResponse::unsafe_arena_set_allocated_info(::cosmos::auth::v1beta1::BaseAccount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::cosmos::auth::v1beta1::BaseAccount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.auth.v1beta1.QueryAccountInfoResponse.info)
}
inline ::cosmos::auth::v1beta1::BaseAccount* QueryAccountInfoResponse::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::auth::v1beta1::BaseAccount* released = _impl_.info_;
  _impl_.info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::auth::v1beta1::BaseAccount* QueryAccountInfoResponse::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.auth.v1beta1.QueryAccountInfoResponse.info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::auth::v1beta1::BaseAccount* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::cosmos::auth::v1beta1::BaseAccount* QueryAccountInfoResponse::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::auth::v1beta1::BaseAccount>(GetArena());
    _impl_.info_ = reinterpret_cast<::cosmos::auth::v1beta1::BaseAccount*>(p);
  }
  return _impl_.info_;
}
inline ::cosmos::auth::v1beta1::BaseAccount* QueryAccountInfoResponse::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::auth::v1beta1::BaseAccount* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:cosmos.auth.v1beta1.QueryAccountInfoResponse.info)
  return _msg;
}
inline void QueryAccountInfoResponse::set_allocated_info(::cosmos::auth::v1beta1::BaseAccount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.info_ = reinterpret_cast<::cosmos::auth::v1beta1::BaseAccount*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.auth.v1beta1.QueryAccountInfoResponse.info)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace auth
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fauth_2fv1beta1_2fquery_2eproto_2epb_2eh
