// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/gov/v1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fgov_2fv1_2fquery_2eproto_2epb_2eh
#define cosmos_2fgov_2fv1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/gov/v1/gov.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fgov_2fv1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fgov_2fv1_2fquery_2eproto;
namespace cosmos {
namespace gov {
namespace v1 {
class QueryConstitutionRequest;
struct QueryConstitutionRequestDefaultTypeInternal;
extern QueryConstitutionRequestDefaultTypeInternal _QueryConstitutionRequest_default_instance_;
class QueryConstitutionResponse;
struct QueryConstitutionResponseDefaultTypeInternal;
extern QueryConstitutionResponseDefaultTypeInternal _QueryConstitutionResponse_default_instance_;
class QueryDepositRequest;
struct QueryDepositRequestDefaultTypeInternal;
extern QueryDepositRequestDefaultTypeInternal _QueryDepositRequest_default_instance_;
class QueryDepositResponse;
struct QueryDepositResponseDefaultTypeInternal;
extern QueryDepositResponseDefaultTypeInternal _QueryDepositResponse_default_instance_;
class QueryDepositsRequest;
struct QueryDepositsRequestDefaultTypeInternal;
extern QueryDepositsRequestDefaultTypeInternal _QueryDepositsRequest_default_instance_;
class QueryDepositsResponse;
struct QueryDepositsResponseDefaultTypeInternal;
extern QueryDepositsResponseDefaultTypeInternal _QueryDepositsResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
class QueryProposalRequest;
struct QueryProposalRequestDefaultTypeInternal;
extern QueryProposalRequestDefaultTypeInternal _QueryProposalRequest_default_instance_;
class QueryProposalResponse;
struct QueryProposalResponseDefaultTypeInternal;
extern QueryProposalResponseDefaultTypeInternal _QueryProposalResponse_default_instance_;
class QueryProposalsRequest;
struct QueryProposalsRequestDefaultTypeInternal;
extern QueryProposalsRequestDefaultTypeInternal _QueryProposalsRequest_default_instance_;
class QueryProposalsResponse;
struct QueryProposalsResponseDefaultTypeInternal;
extern QueryProposalsResponseDefaultTypeInternal _QueryProposalsResponse_default_instance_;
class QueryTallyResultRequest;
struct QueryTallyResultRequestDefaultTypeInternal;
extern QueryTallyResultRequestDefaultTypeInternal _QueryTallyResultRequest_default_instance_;
class QueryTallyResultResponse;
struct QueryTallyResultResponseDefaultTypeInternal;
extern QueryTallyResultResponseDefaultTypeInternal _QueryTallyResultResponse_default_instance_;
class QueryVoteRequest;
struct QueryVoteRequestDefaultTypeInternal;
extern QueryVoteRequestDefaultTypeInternal _QueryVoteRequest_default_instance_;
class QueryVoteResponse;
struct QueryVoteResponseDefaultTypeInternal;
extern QueryVoteResponseDefaultTypeInternal _QueryVoteResponse_default_instance_;
class QueryVotesRequest;
struct QueryVotesRequestDefaultTypeInternal;
extern QueryVotesRequestDefaultTypeInternal _QueryVotesRequest_default_instance_;
class QueryVotesResponse;
struct QueryVotesResponseDefaultTypeInternal;
extern QueryVotesResponseDefaultTypeInternal _QueryVotesResponse_default_instance_;
}  // namespace v1
}  // namespace gov
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace gov {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryVoteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryVoteRequest) */ {
 public:
  inline QueryVoteRequest() : QueryVoteRequest(nullptr) {}
  ~QueryVoteRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryVoteRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryVoteRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryVoteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryVoteRequest(const QueryVoteRequest& from) : QueryVoteRequest(nullptr, from) {}
  inline QueryVoteRequest(QueryVoteRequest&& from) noexcept
      : QueryVoteRequest(nullptr, std::move(from)) {}
  inline QueryVoteRequest& operator=(const QueryVoteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryVoteRequest& operator=(QueryVoteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryVoteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryVoteRequest* internal_default_instance() {
    return reinterpret_cast<const QueryVoteRequest*>(
        &_QueryVoteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(QueryVoteRequest& a, QueryVoteRequest& b) { a.Swap(&b); }
  inline void Swap(QueryVoteRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryVoteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryVoteRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryVoteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryVoteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryVoteRequest& from) { QueryVoteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryVoteRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryVoteRequest"; }

 protected:
  explicit QueryVoteRequest(::google::protobuf::Arena* arena);
  QueryVoteRequest(::google::protobuf::Arena* arena, const QueryVoteRequest& from);
  QueryVoteRequest(::google::protobuf::Arena* arena, QueryVoteRequest&& from) noexcept
      : QueryVoteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVoterFieldNumber = 2,
    kProposalIdFieldNumber = 1,
  };
  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_voter() ;
  const std::string& voter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_voter(Arg_&& arg, Args_... args);
  std::string* mutable_voter();
  PROTOBUF_NODISCARD std::string* release_voter();
  void set_allocated_voter(std::string* value);

  private:
  const std::string& _internal_voter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voter(
      const std::string& value);
  std::string* _internal_mutable_voter();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryVoteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryVoteRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr voter_;
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryTallyResultRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryTallyResultRequest) */ {
 public:
  inline QueryTallyResultRequest() : QueryTallyResultRequest(nullptr) {}
  ~QueryTallyResultRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryTallyResultRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryTallyResultRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTallyResultRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTallyResultRequest(const QueryTallyResultRequest& from) : QueryTallyResultRequest(nullptr, from) {}
  inline QueryTallyResultRequest(QueryTallyResultRequest&& from) noexcept
      : QueryTallyResultRequest(nullptr, std::move(from)) {}
  inline QueryTallyResultRequest& operator=(const QueryTallyResultRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTallyResultRequest& operator=(QueryTallyResultRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTallyResultRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryTallyResultRequest* internal_default_instance() {
    return reinterpret_cast<const QueryTallyResultRequest*>(
        &_QueryTallyResultRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(QueryTallyResultRequest& a, QueryTallyResultRequest& b) { a.Swap(&b); }
  inline void Swap(QueryTallyResultRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTallyResultRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTallyResultRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryTallyResultRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTallyResultRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTallyResultRequest& from) { QueryTallyResultRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryTallyResultRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryTallyResultRequest"; }

 protected:
  explicit QueryTallyResultRequest(::google::protobuf::Arena* arena);
  QueryTallyResultRequest(::google::protobuf::Arena* arena, const QueryTallyResultRequest& from);
  QueryTallyResultRequest(::google::protobuf::Arena* arena, QueryTallyResultRequest&& from) noexcept
      : QueryTallyResultRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProposalIdFieldNumber = 1,
  };
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryTallyResultRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTallyResultRequest& from_msg);
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryProposalRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryProposalRequest) */ {
 public:
  inline QueryProposalRequest() : QueryProposalRequest(nullptr) {}
  ~QueryProposalRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryProposalRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryProposalRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryProposalRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryProposalRequest(const QueryProposalRequest& from) : QueryProposalRequest(nullptr, from) {}
  inline QueryProposalRequest(QueryProposalRequest&& from) noexcept
      : QueryProposalRequest(nullptr, std::move(from)) {}
  inline QueryProposalRequest& operator=(const QueryProposalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryProposalRequest& operator=(QueryProposalRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryProposalRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryProposalRequest* internal_default_instance() {
    return reinterpret_cast<const QueryProposalRequest*>(
        &_QueryProposalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryProposalRequest& a, QueryProposalRequest& b) { a.Swap(&b); }
  inline void Swap(QueryProposalRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryProposalRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryProposalRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryProposalRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryProposalRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryProposalRequest& from) { QueryProposalRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryProposalRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryProposalRequest"; }

 protected:
  explicit QueryProposalRequest(::google::protobuf::Arena* arena);
  QueryProposalRequest(::google::protobuf::Arena* arena, const QueryProposalRequest& from);
  QueryProposalRequest(::google::protobuf::Arena* arena, QueryProposalRequest&& from) noexcept
      : QueryProposalRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProposalIdFieldNumber = 1,
  };
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryProposalRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryProposalRequest& from_msg);
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}
  ~QueryParamsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) { QueryParamsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsTypeFieldNumber = 1,
  };
  // string params_type = 1 [json_name = "paramsType"];
  void clear_params_type() ;
  const std::string& params_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_params_type(Arg_&& arg, Args_... args);
  std::string* mutable_params_type();
  PROTOBUF_NODISCARD std::string* release_params_type();
  void set_allocated_params_type(std::string* value);

  private:
  const std::string& _internal_params_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_params_type(
      const std::string& value);
  std::string* _internal_mutable_params_type();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr params_type_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDepositRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryDepositRequest) */ {
 public:
  inline QueryDepositRequest() : QueryDepositRequest(nullptr) {}
  ~QueryDepositRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDepositRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDepositRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDepositRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDepositRequest(const QueryDepositRequest& from) : QueryDepositRequest(nullptr, from) {}
  inline QueryDepositRequest(QueryDepositRequest&& from) noexcept
      : QueryDepositRequest(nullptr, std::move(from)) {}
  inline QueryDepositRequest& operator=(const QueryDepositRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDepositRequest& operator=(QueryDepositRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDepositRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDepositRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDepositRequest*>(
        &_QueryDepositRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(QueryDepositRequest& a, QueryDepositRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDepositRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDepositRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDepositRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDepositRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDepositRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDepositRequest& from) { QueryDepositRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDepositRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryDepositRequest"; }

 protected:
  explicit QueryDepositRequest(::google::protobuf::Arena* arena);
  QueryDepositRequest(::google::protobuf::Arena* arena, const QueryDepositRequest& from);
  QueryDepositRequest(::google::protobuf::Arena* arena, QueryDepositRequest&& from) noexcept
      : QueryDepositRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDepositorFieldNumber = 2,
    kProposalIdFieldNumber = 1,
  };
  // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_depositor() ;
  const std::string& depositor() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_depositor(Arg_&& arg, Args_... args);
  std::string* mutable_depositor();
  PROTOBUF_NODISCARD std::string* release_depositor();
  void set_allocated_depositor(std::string* value);

  private:
  const std::string& _internal_depositor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_depositor(
      const std::string& value);
  std::string* _internal_mutable_depositor();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryDepositRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDepositRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr depositor_;
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryConstitutionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryConstitutionResponse) */ {
 public:
  inline QueryConstitutionResponse() : QueryConstitutionResponse(nullptr) {}
  ~QueryConstitutionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryConstitutionResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryConstitutionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryConstitutionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryConstitutionResponse(const QueryConstitutionResponse& from) : QueryConstitutionResponse(nullptr, from) {}
  inline QueryConstitutionResponse(QueryConstitutionResponse&& from) noexcept
      : QueryConstitutionResponse(nullptr, std::move(from)) {}
  inline QueryConstitutionResponse& operator=(const QueryConstitutionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryConstitutionResponse& operator=(QueryConstitutionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryConstitutionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryConstitutionResponse* internal_default_instance() {
    return reinterpret_cast<const QueryConstitutionResponse*>(
        &_QueryConstitutionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryConstitutionResponse& a, QueryConstitutionResponse& b) { a.Swap(&b); }
  inline void Swap(QueryConstitutionResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryConstitutionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryConstitutionResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryConstitutionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryConstitutionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryConstitutionResponse& from) { QueryConstitutionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryConstitutionResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryConstitutionResponse"; }

 protected:
  explicit QueryConstitutionResponse(::google::protobuf::Arena* arena);
  QueryConstitutionResponse(::google::protobuf::Arena* arena, const QueryConstitutionResponse& from);
  QueryConstitutionResponse(::google::protobuf::Arena* arena, QueryConstitutionResponse&& from) noexcept
      : QueryConstitutionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConstitutionFieldNumber = 1,
  };
  // string constitution = 1 [json_name = "constitution"];
  void clear_constitution() ;
  const std::string& constitution() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_constitution(Arg_&& arg, Args_... args);
  std::string* mutable_constitution();
  PROTOBUF_NODISCARD std::string* release_constitution();
  void set_allocated_constitution(std::string* value);

  private:
  const std::string& _internal_constitution() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_constitution(
      const std::string& value);
  std::string* _internal_mutable_constitution();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryConstitutionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryConstitutionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr constitution_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryConstitutionRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryConstitutionRequest) */ {
 public:
  inline QueryConstitutionRequest() : QueryConstitutionRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryConstitutionRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryConstitutionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryConstitutionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryConstitutionRequest(const QueryConstitutionRequest& from) : QueryConstitutionRequest(nullptr, from) {}
  inline QueryConstitutionRequest(QueryConstitutionRequest&& from) noexcept
      : QueryConstitutionRequest(nullptr, std::move(from)) {}
  inline QueryConstitutionRequest& operator=(const QueryConstitutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryConstitutionRequest& operator=(QueryConstitutionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryConstitutionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryConstitutionRequest* internal_default_instance() {
    return reinterpret_cast<const QueryConstitutionRequest*>(
        &_QueryConstitutionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryConstitutionRequest& a, QueryConstitutionRequest& b) { a.Swap(&b); }
  inline void Swap(QueryConstitutionRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryConstitutionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryConstitutionRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryConstitutionRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryConstitutionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryConstitutionRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryConstitutionRequest"; }

 protected:
  explicit QueryConstitutionRequest(::google::protobuf::Arena* arena);
  QueryConstitutionRequest(::google::protobuf::Arena* arena, const QueryConstitutionRequest& from);
  QueryConstitutionRequest(::google::protobuf::Arena* arena, QueryConstitutionRequest&& from) noexcept
      : QueryConstitutionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryConstitutionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryConstitutionRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryVotesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryVotesRequest) */ {
 public:
  inline QueryVotesRequest() : QueryVotesRequest(nullptr) {}
  ~QueryVotesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryVotesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryVotesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryVotesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryVotesRequest(const QueryVotesRequest& from) : QueryVotesRequest(nullptr, from) {}
  inline QueryVotesRequest(QueryVotesRequest&& from) noexcept
      : QueryVotesRequest(nullptr, std::move(from)) {}
  inline QueryVotesRequest& operator=(const QueryVotesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryVotesRequest& operator=(QueryVotesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryVotesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryVotesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryVotesRequest*>(
        &_QueryVotesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(QueryVotesRequest& a, QueryVotesRequest& b) { a.Swap(&b); }
  inline void Swap(QueryVotesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryVotesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryVotesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryVotesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryVotesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryVotesRequest& from) { QueryVotesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryVotesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryVotesRequest"; }

 protected:
  explicit QueryVotesRequest(::google::protobuf::Arena* arena);
  QueryVotesRequest(::google::protobuf::Arena* arena, const QueryVotesRequest& from);
  QueryVotesRequest(::google::protobuf::Arena* arena, QueryVotesRequest&& from) noexcept
      : QueryVotesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 2,
    kProposalIdFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryVotesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryVotesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    ::uint64_t proposal_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryTallyResultResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryTallyResultResponse) */ {
 public:
  inline QueryTallyResultResponse() : QueryTallyResultResponse(nullptr) {}
  ~QueryTallyResultResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryTallyResultResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryTallyResultResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryTallyResultResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryTallyResultResponse(const QueryTallyResultResponse& from) : QueryTallyResultResponse(nullptr, from) {}
  inline QueryTallyResultResponse(QueryTallyResultResponse&& from) noexcept
      : QueryTallyResultResponse(nullptr, std::move(from)) {}
  inline QueryTallyResultResponse& operator=(const QueryTallyResultResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryTallyResultResponse& operator=(QueryTallyResultResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryTallyResultResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryTallyResultResponse* internal_default_instance() {
    return reinterpret_cast<const QueryTallyResultResponse*>(
        &_QueryTallyResultResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(QueryTallyResultResponse& a, QueryTallyResultResponse& b) { a.Swap(&b); }
  inline void Swap(QueryTallyResultResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryTallyResultResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryTallyResultResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryTallyResultResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryTallyResultResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryTallyResultResponse& from) { QueryTallyResultResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryTallyResultResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryTallyResultResponse"; }

 protected:
  explicit QueryTallyResultResponse(::google::protobuf::Arena* arena);
  QueryTallyResultResponse(::google::protobuf::Arena* arena, const QueryTallyResultResponse& from);
  QueryTallyResultResponse(::google::protobuf::Arena* arena, QueryTallyResultResponse&& from) noexcept
      : QueryTallyResultResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTallyFieldNumber = 1,
  };
  // .cosmos.gov.v1.TallyResult tally = 1 [json_name = "tally"];
  bool has_tally() const;
  void clear_tally() ;
  const ::cosmos::gov::v1::TallyResult& tally() const;
  PROTOBUF_NODISCARD ::cosmos::gov::v1::TallyResult* release_tally();
  ::cosmos::gov::v1::TallyResult* mutable_tally();
  void set_allocated_tally(::cosmos::gov::v1::TallyResult* value);
  void unsafe_arena_set_allocated_tally(::cosmos::gov::v1::TallyResult* value);
  ::cosmos::gov::v1::TallyResult* unsafe_arena_release_tally();

  private:
  const ::cosmos::gov::v1::TallyResult& _internal_tally() const;
  ::cosmos::gov::v1::TallyResult* _internal_mutable_tally();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryTallyResultResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryTallyResultResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::gov::v1::TallyResult* tally_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryProposalsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryProposalsRequest) */ {
 public:
  inline QueryProposalsRequest() : QueryProposalsRequest(nullptr) {}
  ~QueryProposalsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryProposalsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryProposalsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryProposalsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryProposalsRequest(const QueryProposalsRequest& from) : QueryProposalsRequest(nullptr, from) {}
  inline QueryProposalsRequest(QueryProposalsRequest&& from) noexcept
      : QueryProposalsRequest(nullptr, std::move(from)) {}
  inline QueryProposalsRequest& operator=(const QueryProposalsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryProposalsRequest& operator=(QueryProposalsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryProposalsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryProposalsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryProposalsRequest*>(
        &_QueryProposalsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryProposalsRequest& a, QueryProposalsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryProposalsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryProposalsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryProposalsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryProposalsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryProposalsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryProposalsRequest& from) { QueryProposalsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryProposalsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryProposalsRequest"; }

 protected:
  explicit QueryProposalsRequest(::google::protobuf::Arena* arena);
  QueryProposalsRequest(::google::protobuf::Arena* arena, const QueryProposalsRequest& from);
  QueryProposalsRequest(::google::protobuf::Arena* arena, QueryProposalsRequest&& from) noexcept
      : QueryProposalsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVoterFieldNumber = 2,
    kDepositorFieldNumber = 3,
    kPaginationFieldNumber = 4,
    kProposalStatusFieldNumber = 1,
  };
  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_voter() ;
  const std::string& voter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_voter(Arg_&& arg, Args_... args);
  std::string* mutable_voter();
  PROTOBUF_NODISCARD std::string* release_voter();
  void set_allocated_voter(std::string* value);

  private:
  const std::string& _internal_voter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voter(
      const std::string& value);
  std::string* _internal_mutable_voter();

  public:
  // string depositor = 3 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_depositor() ;
  const std::string& depositor() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_depositor(Arg_&& arg, Args_... args);
  std::string* mutable_depositor();
  PROTOBUF_NODISCARD std::string* release_depositor();
  void set_allocated_depositor(std::string* value);

  private:
  const std::string& _internal_depositor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_depositor(
      const std::string& value);
  std::string* _internal_mutable_depositor();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // .cosmos.gov.v1.ProposalStatus proposal_status = 1 [json_name = "proposalStatus"];
  void clear_proposal_status() ;
  ::cosmos::gov::v1::ProposalStatus proposal_status() const;
  void set_proposal_status(::cosmos::gov::v1::ProposalStatus value);

  private:
  ::cosmos::gov::v1::ProposalStatus _internal_proposal_status() const;
  void _internal_set_proposal_status(::cosmos::gov::v1::ProposalStatus value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryProposalsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryProposalsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr voter_;
    ::google::protobuf::internal::ArenaStringPtr depositor_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    int proposal_status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDepositsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryDepositsRequest) */ {
 public:
  inline QueryDepositsRequest() : QueryDepositsRequest(nullptr) {}
  ~QueryDepositsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDepositsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDepositsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDepositsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDepositsRequest(const QueryDepositsRequest& from) : QueryDepositsRequest(nullptr, from) {}
  inline QueryDepositsRequest(QueryDepositsRequest&& from) noexcept
      : QueryDepositsRequest(nullptr, std::move(from)) {}
  inline QueryDepositsRequest& operator=(const QueryDepositsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDepositsRequest& operator=(QueryDepositsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDepositsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDepositsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryDepositsRequest*>(
        &_QueryDepositsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(QueryDepositsRequest& a, QueryDepositsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryDepositsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDepositsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDepositsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDepositsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDepositsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDepositsRequest& from) { QueryDepositsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDepositsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryDepositsRequest"; }

 protected:
  explicit QueryDepositsRequest(::google::protobuf::Arena* arena);
  QueryDepositsRequest(::google::protobuf::Arena* arena, const QueryDepositsRequest& from);
  QueryDepositsRequest(::google::protobuf::Arena* arena, QueryDepositsRequest&& from) noexcept
      : QueryDepositsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 2,
    kProposalIdFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryDepositsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDepositsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    ::uint64_t proposal_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryVotesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryVotesResponse) */ {
 public:
  inline QueryVotesResponse() : QueryVotesResponse(nullptr) {}
  ~QueryVotesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryVotesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryVotesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryVotesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryVotesResponse(const QueryVotesResponse& from) : QueryVotesResponse(nullptr, from) {}
  inline QueryVotesResponse(QueryVotesResponse&& from) noexcept
      : QueryVotesResponse(nullptr, std::move(from)) {}
  inline QueryVotesResponse& operator=(const QueryVotesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryVotesResponse& operator=(QueryVotesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryVotesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryVotesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryVotesResponse*>(
        &_QueryVotesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(QueryVotesResponse& a, QueryVotesResponse& b) { a.Swap(&b); }
  inline void Swap(QueryVotesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryVotesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryVotesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryVotesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryVotesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryVotesResponse& from) { QueryVotesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryVotesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryVotesResponse"; }

 protected:
  explicit QueryVotesResponse(::google::protobuf::Arena* arena);
  QueryVotesResponse(::google::protobuf::Arena* arena, const QueryVotesResponse& from);
  QueryVotesResponse(::google::protobuf::Arena* arena, QueryVotesResponse&& from) noexcept
      : QueryVotesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVotesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.gov.v1.Vote votes = 1 [json_name = "votes"];
  int votes_size() const;
  private:
  int _internal_votes_size() const;

  public:
  void clear_votes() ;
  ::cosmos::gov::v1::Vote* mutable_votes(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>* mutable_votes();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>& _internal_votes() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>* _internal_mutable_votes();
  public:
  const ::cosmos::gov::v1::Vote& votes(int index) const;
  ::cosmos::gov::v1::Vote* add_votes();
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>& votes() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryVotesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryVotesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::gov::v1::Vote > votes_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryVoteResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryVoteResponse) */ {
 public:
  inline QueryVoteResponse() : QueryVoteResponse(nullptr) {}
  ~QueryVoteResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryVoteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryVoteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryVoteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryVoteResponse(const QueryVoteResponse& from) : QueryVoteResponse(nullptr, from) {}
  inline QueryVoteResponse(QueryVoteResponse&& from) noexcept
      : QueryVoteResponse(nullptr, std::move(from)) {}
  inline QueryVoteResponse& operator=(const QueryVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryVoteResponse& operator=(QueryVoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryVoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryVoteResponse* internal_default_instance() {
    return reinterpret_cast<const QueryVoteResponse*>(
        &_QueryVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(QueryVoteResponse& a, QueryVoteResponse& b) { a.Swap(&b); }
  inline void Swap(QueryVoteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryVoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryVoteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryVoteResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryVoteResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryVoteResponse& from) { QueryVoteResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryVoteResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryVoteResponse"; }

 protected:
  explicit QueryVoteResponse(::google::protobuf::Arena* arena);
  QueryVoteResponse(::google::protobuf::Arena* arena, const QueryVoteResponse& from);
  QueryVoteResponse(::google::protobuf::Arena* arena, QueryVoteResponse&& from) noexcept
      : QueryVoteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVoteFieldNumber = 1,
  };
  // .cosmos.gov.v1.Vote vote = 1 [json_name = "vote"];
  bool has_vote() const;
  void clear_vote() ;
  const ::cosmos::gov::v1::Vote& vote() const;
  PROTOBUF_NODISCARD ::cosmos::gov::v1::Vote* release_vote();
  ::cosmos::gov::v1::Vote* mutable_vote();
  void set_allocated_vote(::cosmos::gov::v1::Vote* value);
  void unsafe_arena_set_allocated_vote(::cosmos::gov::v1::Vote* value);
  ::cosmos::gov::v1::Vote* unsafe_arena_release_vote();

  private:
  const ::cosmos::gov::v1::Vote& _internal_vote() const;
  ::cosmos::gov::v1::Vote* _internal_mutable_vote();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryVoteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryVoteResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::gov::v1::Vote* vote_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryProposalsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryProposalsResponse) */ {
 public:
  inline QueryProposalsResponse() : QueryProposalsResponse(nullptr) {}
  ~QueryProposalsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryProposalsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryProposalsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryProposalsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryProposalsResponse(const QueryProposalsResponse& from) : QueryProposalsResponse(nullptr, from) {}
  inline QueryProposalsResponse(QueryProposalsResponse&& from) noexcept
      : QueryProposalsResponse(nullptr, std::move(from)) {}
  inline QueryProposalsResponse& operator=(const QueryProposalsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryProposalsResponse& operator=(QueryProposalsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryProposalsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryProposalsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryProposalsResponse*>(
        &_QueryProposalsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryProposalsResponse& a, QueryProposalsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryProposalsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryProposalsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryProposalsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryProposalsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryProposalsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryProposalsResponse& from) { QueryProposalsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryProposalsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryProposalsResponse"; }

 protected:
  explicit QueryProposalsResponse(::google::protobuf::Arena* arena);
  QueryProposalsResponse(::google::protobuf::Arena* arena, const QueryProposalsResponse& from);
  QueryProposalsResponse(::google::protobuf::Arena* arena, QueryProposalsResponse&& from) noexcept
      : QueryProposalsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProposalsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.gov.v1.Proposal proposals = 1 [json_name = "proposals"];
  int proposals_size() const;
  private:
  int _internal_proposals_size() const;

  public:
  void clear_proposals() ;
  ::cosmos::gov::v1::Proposal* mutable_proposals(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>* mutable_proposals();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>& _internal_proposals() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>* _internal_mutable_proposals();
  public:
  const ::cosmos::gov::v1::Proposal& proposals(int index) const;
  ::cosmos::gov::v1::Proposal* add_proposals();
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>& proposals() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryProposalsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryProposalsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::gov::v1::Proposal > proposals_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryProposalResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryProposalResponse) */ {
 public:
  inline QueryProposalResponse() : QueryProposalResponse(nullptr) {}
  ~QueryProposalResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryProposalResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryProposalResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryProposalResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryProposalResponse(const QueryProposalResponse& from) : QueryProposalResponse(nullptr, from) {}
  inline QueryProposalResponse(QueryProposalResponse&& from) noexcept
      : QueryProposalResponse(nullptr, std::move(from)) {}
  inline QueryProposalResponse& operator=(const QueryProposalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryProposalResponse& operator=(QueryProposalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryProposalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryProposalResponse* internal_default_instance() {
    return reinterpret_cast<const QueryProposalResponse*>(
        &_QueryProposalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryProposalResponse& a, QueryProposalResponse& b) { a.Swap(&b); }
  inline void Swap(QueryProposalResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryProposalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryProposalResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryProposalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryProposalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryProposalResponse& from) { QueryProposalResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryProposalResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryProposalResponse"; }

 protected:
  explicit QueryProposalResponse(::google::protobuf::Arena* arena);
  QueryProposalResponse(::google::protobuf::Arena* arena, const QueryProposalResponse& from);
  QueryProposalResponse(::google::protobuf::Arena* arena, QueryProposalResponse&& from) noexcept
      : QueryProposalResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProposalFieldNumber = 1,
  };
  // .cosmos.gov.v1.Proposal proposal = 1 [json_name = "proposal"];
  bool has_proposal() const;
  void clear_proposal() ;
  const ::cosmos::gov::v1::Proposal& proposal() const;
  PROTOBUF_NODISCARD ::cosmos::gov::v1::Proposal* release_proposal();
  ::cosmos::gov::v1::Proposal* mutable_proposal();
  void set_allocated_proposal(::cosmos::gov::v1::Proposal* value);
  void unsafe_arena_set_allocated_proposal(::cosmos::gov::v1::Proposal* value);
  ::cosmos::gov::v1::Proposal* unsafe_arena_release_proposal();

  private:
  const ::cosmos::gov::v1::Proposal& _internal_proposal() const;
  ::cosmos::gov::v1::Proposal* _internal_mutable_proposal();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryProposalResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryProposalResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::gov::v1::Proposal* proposal_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVotingParamsFieldNumber = 1,
    kDepositParamsFieldNumber = 2,
    kTallyParamsFieldNumber = 3,
    kParamsFieldNumber = 4,
  };
  // .cosmos.gov.v1.VotingParams voting_params = 1 [json_name = "votingParams", deprecated = true];
  [[deprecated]]  bool has_voting_params() const;
  [[deprecated]]  void clear_voting_params() ;
  [[deprecated]] const ::cosmos::gov::v1::VotingParams& voting_params() const;
  [[deprecated]] PROTOBUF_NODISCARD ::cosmos::gov::v1::VotingParams* release_voting_params();
  [[deprecated]] ::cosmos::gov::v1::VotingParams* mutable_voting_params();
  [[deprecated]] void set_allocated_voting_params(::cosmos::gov::v1::VotingParams* value);
  [[deprecated]] void unsafe_arena_set_allocated_voting_params(::cosmos::gov::v1::VotingParams* value);
  [[deprecated]] ::cosmos::gov::v1::VotingParams* unsafe_arena_release_voting_params();

  private:
  const ::cosmos::gov::v1::VotingParams& _internal_voting_params() const;
  ::cosmos::gov::v1::VotingParams* _internal_mutable_voting_params();

  public:
  // .cosmos.gov.v1.DepositParams deposit_params = 2 [json_name = "depositParams", deprecated = true];
  [[deprecated]]  bool has_deposit_params() const;
  [[deprecated]]  void clear_deposit_params() ;
  [[deprecated]] const ::cosmos::gov::v1::DepositParams& deposit_params() const;
  [[deprecated]] PROTOBUF_NODISCARD ::cosmos::gov::v1::DepositParams* release_deposit_params();
  [[deprecated]] ::cosmos::gov::v1::DepositParams* mutable_deposit_params();
  [[deprecated]] void set_allocated_deposit_params(::cosmos::gov::v1::DepositParams* value);
  [[deprecated]] void unsafe_arena_set_allocated_deposit_params(::cosmos::gov::v1::DepositParams* value);
  [[deprecated]] ::cosmos::gov::v1::DepositParams* unsafe_arena_release_deposit_params();

  private:
  const ::cosmos::gov::v1::DepositParams& _internal_deposit_params() const;
  ::cosmos::gov::v1::DepositParams* _internal_mutable_deposit_params();

  public:
  // .cosmos.gov.v1.TallyParams tally_params = 3 [json_name = "tallyParams", deprecated = true];
  [[deprecated]]  bool has_tally_params() const;
  [[deprecated]]  void clear_tally_params() ;
  [[deprecated]] const ::cosmos::gov::v1::TallyParams& tally_params() const;
  [[deprecated]] PROTOBUF_NODISCARD ::cosmos::gov::v1::TallyParams* release_tally_params();
  [[deprecated]] ::cosmos::gov::v1::TallyParams* mutable_tally_params();
  [[deprecated]] void set_allocated_tally_params(::cosmos::gov::v1::TallyParams* value);
  [[deprecated]] void unsafe_arena_set_allocated_tally_params(::cosmos::gov::v1::TallyParams* value);
  [[deprecated]] ::cosmos::gov::v1::TallyParams* unsafe_arena_release_tally_params();

  private:
  const ::cosmos::gov::v1::TallyParams& _internal_tally_params() const;
  ::cosmos::gov::v1::TallyParams* _internal_mutable_tally_params();

  public:
  // .cosmos.gov.v1.Params params = 4 [json_name = "params", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::gov::v1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::gov::v1::Params* release_params();
  ::cosmos::gov::v1::Params* mutable_params();
  void set_allocated_params(::cosmos::gov::v1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::gov::v1::Params* value);
  ::cosmos::gov::v1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::gov::v1::Params& _internal_params() const;
  ::cosmos::gov::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::gov::v1::VotingParams* voting_params_;
    ::cosmos::gov::v1::DepositParams* deposit_params_;
    ::cosmos::gov::v1::TallyParams* tally_params_;
    ::cosmos::gov::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDepositsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryDepositsResponse) */ {
 public:
  inline QueryDepositsResponse() : QueryDepositsResponse(nullptr) {}
  ~QueryDepositsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDepositsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDepositsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDepositsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDepositsResponse(const QueryDepositsResponse& from) : QueryDepositsResponse(nullptr, from) {}
  inline QueryDepositsResponse(QueryDepositsResponse&& from) noexcept
      : QueryDepositsResponse(nullptr, std::move(from)) {}
  inline QueryDepositsResponse& operator=(const QueryDepositsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDepositsResponse& operator=(QueryDepositsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDepositsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDepositsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDepositsResponse*>(
        &_QueryDepositsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(QueryDepositsResponse& a, QueryDepositsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDepositsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDepositsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDepositsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDepositsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDepositsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDepositsResponse& from) { QueryDepositsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDepositsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryDepositsResponse"; }

 protected:
  explicit QueryDepositsResponse(::google::protobuf::Arena* arena);
  QueryDepositsResponse(::google::protobuf::Arena* arena, const QueryDepositsResponse& from);
  QueryDepositsResponse(::google::protobuf::Arena* arena, QueryDepositsResponse&& from) noexcept
      : QueryDepositsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDepositsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.gov.v1.Deposit deposits = 1 [json_name = "deposits"];
  int deposits_size() const;
  private:
  int _internal_deposits_size() const;

  public:
  void clear_deposits() ;
  ::cosmos::gov::v1::Deposit* mutable_deposits(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>* mutable_deposits();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>& _internal_deposits() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>* _internal_mutable_deposits();
  public:
  const ::cosmos::gov::v1::Deposit& deposits(int index) const;
  ::cosmos::gov::v1::Deposit* add_deposits();
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>& deposits() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryDepositsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDepositsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::gov::v1::Deposit > deposits_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryDepositResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.QueryDepositResponse) */ {
 public:
  inline QueryDepositResponse() : QueryDepositResponse(nullptr) {}
  ~QueryDepositResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryDepositResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryDepositResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryDepositResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryDepositResponse(const QueryDepositResponse& from) : QueryDepositResponse(nullptr, from) {}
  inline QueryDepositResponse(QueryDepositResponse&& from) noexcept
      : QueryDepositResponse(nullptr, std::move(from)) {}
  inline QueryDepositResponse& operator=(const QueryDepositResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryDepositResponse& operator=(QueryDepositResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryDepositResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryDepositResponse* internal_default_instance() {
    return reinterpret_cast<const QueryDepositResponse*>(
        &_QueryDepositResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(QueryDepositResponse& a, QueryDepositResponse& b) { a.Swap(&b); }
  inline void Swap(QueryDepositResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryDepositResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryDepositResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryDepositResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryDepositResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryDepositResponse& from) { QueryDepositResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryDepositResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.QueryDepositResponse"; }

 protected:
  explicit QueryDepositResponse(::google::protobuf::Arena* arena);
  QueryDepositResponse(::google::protobuf::Arena* arena, const QueryDepositResponse& from);
  QueryDepositResponse(::google::protobuf::Arena* arena, QueryDepositResponse&& from) noexcept
      : QueryDepositResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDepositFieldNumber = 1,
  };
  // .cosmos.gov.v1.Deposit deposit = 1 [json_name = "deposit"];
  bool has_deposit() const;
  void clear_deposit() ;
  const ::cosmos::gov::v1::Deposit& deposit() const;
  PROTOBUF_NODISCARD ::cosmos::gov::v1::Deposit* release_deposit();
  ::cosmos::gov::v1::Deposit* mutable_deposit();
  void set_allocated_deposit(::cosmos::gov::v1::Deposit* value);
  void unsafe_arena_set_allocated_deposit(::cosmos::gov::v1::Deposit* value);
  ::cosmos::gov::v1::Deposit* unsafe_arena_release_deposit();

  private:
  const ::cosmos::gov::v1::Deposit& _internal_deposit() const;
  ::cosmos::gov::v1::Deposit* _internal_mutable_deposit();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.QueryDepositResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryDepositResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::gov::v1::Deposit* deposit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryConstitutionRequest

// -------------------------------------------------------------------

// QueryConstitutionResponse

// string constitution = 1 [json_name = "constitution"];
inline void QueryConstitutionResponse::clear_constitution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constitution_.ClearToEmpty();
}
inline const std::string& QueryConstitutionResponse::constitution() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryConstitutionResponse.constitution)
  return _internal_constitution();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryConstitutionResponse::set_constitution(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constitution_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryConstitutionResponse.constitution)
}
inline std::string* QueryConstitutionResponse::mutable_constitution() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_constitution();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryConstitutionResponse.constitution)
  return _s;
}
inline const std::string& QueryConstitutionResponse::_internal_constitution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constitution_.Get();
}
inline void QueryConstitutionResponse::_internal_set_constitution(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constitution_.Set(value, GetArena());
}
inline std::string* QueryConstitutionResponse::_internal_mutable_constitution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.constitution_.Mutable( GetArena());
}
inline std::string* QueryConstitutionResponse::release_constitution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryConstitutionResponse.constitution)
  return _impl_.constitution_.Release();
}
inline void QueryConstitutionResponse::set_allocated_constitution(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constitution_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.constitution_.IsDefault()) {
    _impl_.constitution_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryConstitutionResponse.constitution)
}

// -------------------------------------------------------------------

// QueryProposalRequest

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void QueryProposalRequest::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryProposalRequest::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalRequest.proposal_id)
  return _internal_proposal_id();
}
inline void QueryProposalRequest::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryProposalRequest.proposal_id)
}
inline ::uint64_t QueryProposalRequest::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void QueryProposalRequest::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// -------------------------------------------------------------------

// QueryProposalResponse

// .cosmos.gov.v1.Proposal proposal = 1 [json_name = "proposal"];
inline bool QueryProposalResponse::has_proposal() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.proposal_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::Proposal& QueryProposalResponse::_internal_proposal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::Proposal* p = _impl_.proposal_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::Proposal&>(::cosmos::gov::v1::_Proposal_default_instance_);
}
inline const ::cosmos::gov::v1::Proposal& QueryProposalResponse::proposal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalResponse.proposal)
  return _internal_proposal();
}
inline void QueryProposalResponse::unsafe_arena_set_allocated_proposal(::cosmos::gov::v1::Proposal* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proposal_);
  }
  _impl_.proposal_ = reinterpret_cast<::cosmos::gov::v1::Proposal*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryProposalResponse.proposal)
}
inline ::cosmos::gov::v1::Proposal* QueryProposalResponse::release_proposal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Proposal* released = _impl_.proposal_;
  _impl_.proposal_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::Proposal* QueryProposalResponse::unsafe_arena_release_proposal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryProposalResponse.proposal)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Proposal* temp = _impl_.proposal_;
  _impl_.proposal_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::Proposal* QueryProposalResponse::_internal_mutable_proposal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proposal_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::Proposal>(GetArena());
    _impl_.proposal_ = reinterpret_cast<::cosmos::gov::v1::Proposal*>(p);
  }
  return _impl_.proposal_;
}
inline ::cosmos::gov::v1::Proposal* QueryProposalResponse::mutable_proposal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::gov::v1::Proposal* _msg = _internal_mutable_proposal();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryProposalResponse.proposal)
  return _msg;
}
inline void QueryProposalResponse::set_allocated_proposal(::cosmos::gov::v1::Proposal* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proposal_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.proposal_ = reinterpret_cast<::cosmos::gov::v1::Proposal*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryProposalResponse.proposal)
}

// -------------------------------------------------------------------

// QueryProposalsRequest

// .cosmos.gov.v1.ProposalStatus proposal_status = 1 [json_name = "proposalStatus"];
inline void QueryProposalsRequest::clear_proposal_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_status_ = 0;
}
inline ::cosmos::gov::v1::ProposalStatus QueryProposalsRequest::proposal_status() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalsRequest.proposal_status)
  return _internal_proposal_status();
}
inline void QueryProposalsRequest::set_proposal_status(::cosmos::gov::v1::ProposalStatus value) {
  _internal_set_proposal_status(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryProposalsRequest.proposal_status)
}
inline ::cosmos::gov::v1::ProposalStatus QueryProposalsRequest::_internal_proposal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::cosmos::gov::v1::ProposalStatus>(_impl_.proposal_status_);
}
inline void QueryProposalsRequest::_internal_set_proposal_status(::cosmos::gov::v1::ProposalStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_status_ = value;
}

// string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryProposalsRequest::clear_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.ClearToEmpty();
}
inline const std::string& QueryProposalsRequest::voter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalsRequest.voter)
  return _internal_voter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryProposalsRequest::set_voter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryProposalsRequest.voter)
}
inline std::string* QueryProposalsRequest::mutable_voter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_voter();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryProposalsRequest.voter)
  return _s;
}
inline const std::string& QueryProposalsRequest::_internal_voter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voter_.Get();
}
inline void QueryProposalsRequest::_internal_set_voter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(value, GetArena());
}
inline std::string* QueryProposalsRequest::_internal_mutable_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.voter_.Mutable( GetArena());
}
inline std::string* QueryProposalsRequest::release_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryProposalsRequest.voter)
  return _impl_.voter_.Release();
}
inline void QueryProposalsRequest::set_allocated_voter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.voter_.IsDefault()) {
    _impl_.voter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryProposalsRequest.voter)
}

// string depositor = 3 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryProposalsRequest::clear_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.ClearToEmpty();
}
inline const std::string& QueryProposalsRequest::depositor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalsRequest.depositor)
  return _internal_depositor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryProposalsRequest::set_depositor(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryProposalsRequest.depositor)
}
inline std::string* QueryProposalsRequest::mutable_depositor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_depositor();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryProposalsRequest.depositor)
  return _s;
}
inline const std::string& QueryProposalsRequest::_internal_depositor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.depositor_.Get();
}
inline void QueryProposalsRequest::_internal_set_depositor(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.Set(value, GetArena());
}
inline std::string* QueryProposalsRequest::_internal_mutable_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.depositor_.Mutable( GetArena());
}
inline std::string* QueryProposalsRequest::release_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryProposalsRequest.depositor)
  return _impl_.depositor_.Release();
}
inline void QueryProposalsRequest::set_allocated_depositor(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.depositor_.IsDefault()) {
    _impl_.depositor_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryProposalsRequest.depositor)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];
inline bool QueryProposalsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryProposalsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryProposalsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalsRequest.pagination)
  return _internal_pagination();
}
inline void QueryProposalsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryProposalsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryProposalsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryProposalsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryProposalsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryProposalsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryProposalsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryProposalsRequest.pagination)
  return _msg;
}
inline void QueryProposalsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryProposalsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryProposalsResponse

// repeated .cosmos.gov.v1.Proposal proposals = 1 [json_name = "proposals"];
inline int QueryProposalsResponse::_internal_proposals_size() const {
  return _internal_proposals().size();
}
inline int QueryProposalsResponse::proposals_size() const {
  return _internal_proposals_size();
}
inline ::cosmos::gov::v1::Proposal* QueryProposalsResponse::mutable_proposals(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryProposalsResponse.proposals)
  return _internal_mutable_proposals()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>* QueryProposalsResponse::mutable_proposals()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.QueryProposalsResponse.proposals)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_proposals();
}
inline const ::cosmos::gov::v1::Proposal& QueryProposalsResponse::proposals(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalsResponse.proposals)
  return _internal_proposals().Get(index);
}
inline ::cosmos::gov::v1::Proposal* QueryProposalsResponse::add_proposals() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::gov::v1::Proposal* _add = _internal_mutable_proposals()->Add();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.QueryProposalsResponse.proposals)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>& QueryProposalsResponse::proposals() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.QueryProposalsResponse.proposals)
  return _internal_proposals();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>&
QueryProposalsResponse::_internal_proposals() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposals_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Proposal>*
QueryProposalsResponse::_internal_mutable_proposals() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.proposals_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryProposalsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryProposalsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryProposalsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryProposalsResponse.pagination)
  return _internal_pagination();
}
inline void QueryProposalsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryProposalsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryProposalsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryProposalsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryProposalsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryProposalsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryProposalsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryProposalsResponse.pagination)
  return _msg;
}
inline void QueryProposalsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryProposalsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryVoteRequest

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void QueryVoteRequest::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryVoteRequest::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryVoteRequest.proposal_id)
  return _internal_proposal_id();
}
inline void QueryVoteRequest::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryVoteRequest.proposal_id)
}
inline ::uint64_t QueryVoteRequest::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void QueryVoteRequest::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryVoteRequest::clear_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.ClearToEmpty();
}
inline const std::string& QueryVoteRequest::voter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryVoteRequest.voter)
  return _internal_voter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryVoteRequest::set_voter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryVoteRequest.voter)
}
inline std::string* QueryVoteRequest::mutable_voter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_voter();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryVoteRequest.voter)
  return _s;
}
inline const std::string& QueryVoteRequest::_internal_voter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voter_.Get();
}
inline void QueryVoteRequest::_internal_set_voter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(value, GetArena());
}
inline std::string* QueryVoteRequest::_internal_mutable_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.voter_.Mutable( GetArena());
}
inline std::string* QueryVoteRequest::release_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryVoteRequest.voter)
  return _impl_.voter_.Release();
}
inline void QueryVoteRequest::set_allocated_voter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.voter_.IsDefault()) {
    _impl_.voter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryVoteRequest.voter)
}

// -------------------------------------------------------------------

// QueryVoteResponse

// .cosmos.gov.v1.Vote vote = 1 [json_name = "vote"];
inline bool QueryVoteResponse::has_vote() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.vote_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::Vote& QueryVoteResponse::_internal_vote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::Vote* p = _impl_.vote_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::Vote&>(::cosmos::gov::v1::_Vote_default_instance_);
}
inline const ::cosmos::gov::v1::Vote& QueryVoteResponse::vote() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryVoteResponse.vote)
  return _internal_vote();
}
inline void QueryVoteResponse::unsafe_arena_set_allocated_vote(::cosmos::gov::v1::Vote* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vote_);
  }
  _impl_.vote_ = reinterpret_cast<::cosmos::gov::v1::Vote*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryVoteResponse.vote)
}
inline ::cosmos::gov::v1::Vote* QueryVoteResponse::release_vote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Vote* released = _impl_.vote_;
  _impl_.vote_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::Vote* QueryVoteResponse::unsafe_arena_release_vote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryVoteResponse.vote)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Vote* temp = _impl_.vote_;
  _impl_.vote_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::Vote* QueryVoteResponse::_internal_mutable_vote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.vote_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::Vote>(GetArena());
    _impl_.vote_ = reinterpret_cast<::cosmos::gov::v1::Vote*>(p);
  }
  return _impl_.vote_;
}
inline ::cosmos::gov::v1::Vote* QueryVoteResponse::mutable_vote() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::gov::v1::Vote* _msg = _internal_mutable_vote();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryVoteResponse.vote)
  return _msg;
}
inline void QueryVoteResponse::set_allocated_vote(::cosmos::gov::v1::Vote* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.vote_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.vote_ = reinterpret_cast<::cosmos::gov::v1::Vote*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryVoteResponse.vote)
}

// -------------------------------------------------------------------

// QueryVotesRequest

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void QueryVotesRequest::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryVotesRequest::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryVotesRequest.proposal_id)
  return _internal_proposal_id();
}
inline void QueryVotesRequest::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryVotesRequest.proposal_id)
}
inline ::uint64_t QueryVotesRequest::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void QueryVotesRequest::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryVotesRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryVotesRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryVotesRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryVotesRequest.pagination)
  return _internal_pagination();
}
inline void QueryVotesRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryVotesRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryVotesRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryVotesRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryVotesRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryVotesRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryVotesRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryVotesRequest.pagination)
  return _msg;
}
inline void QueryVotesRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryVotesRequest.pagination)
}

// -------------------------------------------------------------------

// QueryVotesResponse

// repeated .cosmos.gov.v1.Vote votes = 1 [json_name = "votes"];
inline int QueryVotesResponse::_internal_votes_size() const {
  return _internal_votes().size();
}
inline int QueryVotesResponse::votes_size() const {
  return _internal_votes_size();
}
inline ::cosmos::gov::v1::Vote* QueryVotesResponse::mutable_votes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryVotesResponse.votes)
  return _internal_mutable_votes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>* QueryVotesResponse::mutable_votes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.QueryVotesResponse.votes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_votes();
}
inline const ::cosmos::gov::v1::Vote& QueryVotesResponse::votes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryVotesResponse.votes)
  return _internal_votes().Get(index);
}
inline ::cosmos::gov::v1::Vote* QueryVotesResponse::add_votes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::gov::v1::Vote* _add = _internal_mutable_votes()->Add();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.QueryVotesResponse.votes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>& QueryVotesResponse::votes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.QueryVotesResponse.votes)
  return _internal_votes();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>&
QueryVotesResponse::_internal_votes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.votes_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Vote>*
QueryVotesResponse::_internal_mutable_votes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.votes_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryVotesResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryVotesResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryVotesResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryVotesResponse.pagination)
  return _internal_pagination();
}
inline void QueryVotesResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryVotesResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryVotesResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryVotesResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryVotesResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryVotesResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryVotesResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryVotesResponse.pagination)
  return _msg;
}
inline void QueryVotesResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryVotesResponse.pagination)
}

// -------------------------------------------------------------------

// QueryParamsRequest

// string params_type = 1 [json_name = "paramsType"];
inline void QueryParamsRequest::clear_params_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.params_type_.ClearToEmpty();
}
inline const std::string& QueryParamsRequest::params_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryParamsRequest.params_type)
  return _internal_params_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryParamsRequest::set_params_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.params_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryParamsRequest.params_type)
}
inline std::string* QueryParamsRequest::mutable_params_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_params_type();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryParamsRequest.params_type)
  return _s;
}
inline const std::string& QueryParamsRequest::_internal_params_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.params_type_.Get();
}
inline void QueryParamsRequest::_internal_set_params_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.params_type_.Set(value, GetArena());
}
inline std::string* QueryParamsRequest::_internal_mutable_params_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.params_type_.Mutable( GetArena());
}
inline std::string* QueryParamsRequest::release_params_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryParamsRequest.params_type)
  return _impl_.params_type_.Release();
}
inline void QueryParamsRequest::set_allocated_params_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.params_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.params_type_.IsDefault()) {
    _impl_.params_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryParamsRequest.params_type)
}

// -------------------------------------------------------------------

// QueryParamsResponse

// .cosmos.gov.v1.VotingParams voting_params = 1 [json_name = "votingParams", deprecated = true];
inline bool QueryParamsResponse::has_voting_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.voting_params_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::VotingParams& QueryParamsResponse::_internal_voting_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::VotingParams* p = _impl_.voting_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::VotingParams&>(::cosmos::gov::v1::_VotingParams_default_instance_);
}
inline const ::cosmos::gov::v1::VotingParams& QueryParamsResponse::voting_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryParamsResponse.voting_params)
  return _internal_voting_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_voting_params(::cosmos::gov::v1::VotingParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voting_params_);
  }
  _impl_.voting_params_ = reinterpret_cast<::cosmos::gov::v1::VotingParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryParamsResponse.voting_params)
}
inline ::cosmos::gov::v1::VotingParams* QueryParamsResponse::release_voting_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::VotingParams* released = _impl_.voting_params_;
  _impl_.voting_params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::VotingParams* QueryParamsResponse::unsafe_arena_release_voting_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryParamsResponse.voting_params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::VotingParams* temp = _impl_.voting_params_;
  _impl_.voting_params_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::VotingParams* QueryParamsResponse::_internal_mutable_voting_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::VotingParams>(GetArena());
    _impl_.voting_params_ = reinterpret_cast<::cosmos::gov::v1::VotingParams*>(p);
  }
  return _impl_.voting_params_;
}
inline ::cosmos::gov::v1::VotingParams* QueryParamsResponse::mutable_voting_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::gov::v1::VotingParams* _msg = _internal_mutable_voting_params();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryParamsResponse.voting_params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_voting_params(::cosmos::gov::v1::VotingParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.voting_params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.voting_params_ = reinterpret_cast<::cosmos::gov::v1::VotingParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryParamsResponse.voting_params)
}

// .cosmos.gov.v1.DepositParams deposit_params = 2 [json_name = "depositParams", deprecated = true];
inline bool QueryParamsResponse::has_deposit_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deposit_params_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::DepositParams& QueryParamsResponse::_internal_deposit_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::DepositParams* p = _impl_.deposit_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::DepositParams&>(::cosmos::gov::v1::_DepositParams_default_instance_);
}
inline const ::cosmos::gov::v1::DepositParams& QueryParamsResponse::deposit_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryParamsResponse.deposit_params)
  return _internal_deposit_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_deposit_params(::cosmos::gov::v1::DepositParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deposit_params_);
  }
  _impl_.deposit_params_ = reinterpret_cast<::cosmos::gov::v1::DepositParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryParamsResponse.deposit_params)
}
inline ::cosmos::gov::v1::DepositParams* QueryParamsResponse::release_deposit_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::gov::v1::DepositParams* released = _impl_.deposit_params_;
  _impl_.deposit_params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::DepositParams* QueryParamsResponse::unsafe_arena_release_deposit_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryParamsResponse.deposit_params)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::gov::v1::DepositParams* temp = _impl_.deposit_params_;
  _impl_.deposit_params_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::DepositParams* QueryParamsResponse::_internal_mutable_deposit_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deposit_params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::DepositParams>(GetArena());
    _impl_.deposit_params_ = reinterpret_cast<::cosmos::gov::v1::DepositParams*>(p);
  }
  return _impl_.deposit_params_;
}
inline ::cosmos::gov::v1::DepositParams* QueryParamsResponse::mutable_deposit_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::gov::v1::DepositParams* _msg = _internal_mutable_deposit_params();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryParamsResponse.deposit_params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_deposit_params(::cosmos::gov::v1::DepositParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deposit_params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.deposit_params_ = reinterpret_cast<::cosmos::gov::v1::DepositParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryParamsResponse.deposit_params)
}

// .cosmos.gov.v1.TallyParams tally_params = 3 [json_name = "tallyParams", deprecated = true];
inline bool QueryParamsResponse::has_tally_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tally_params_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::TallyParams& QueryParamsResponse::_internal_tally_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::TallyParams* p = _impl_.tally_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::TallyParams&>(::cosmos::gov::v1::_TallyParams_default_instance_);
}
inline const ::cosmos::gov::v1::TallyParams& QueryParamsResponse::tally_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryParamsResponse.tally_params)
  return _internal_tally_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_tally_params(::cosmos::gov::v1::TallyParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tally_params_);
  }
  _impl_.tally_params_ = reinterpret_cast<::cosmos::gov::v1::TallyParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryParamsResponse.tally_params)
}
inline ::cosmos::gov::v1::TallyParams* QueryParamsResponse::release_tally_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::gov::v1::TallyParams* released = _impl_.tally_params_;
  _impl_.tally_params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::TallyParams* QueryParamsResponse::unsafe_arena_release_tally_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryParamsResponse.tally_params)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::gov::v1::TallyParams* temp = _impl_.tally_params_;
  _impl_.tally_params_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::TallyParams* QueryParamsResponse::_internal_mutable_tally_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tally_params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::TallyParams>(GetArena());
    _impl_.tally_params_ = reinterpret_cast<::cosmos::gov::v1::TallyParams*>(p);
  }
  return _impl_.tally_params_;
}
inline ::cosmos::gov::v1::TallyParams* QueryParamsResponse::mutable_tally_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::cosmos::gov::v1::TallyParams* _msg = _internal_mutable_tally_params();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryParamsResponse.tally_params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_tally_params(::cosmos::gov::v1::TallyParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tally_params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.tally_params_ = reinterpret_cast<::cosmos::gov::v1::TallyParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryParamsResponse.tally_params)
}

// .cosmos.gov.v1.Params params = 4 [json_name = "params", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::Params&>(::cosmos::gov::v1::_Params_default_instance_);
}
inline const ::cosmos::gov::v1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::cosmos::gov::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::gov::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryParamsResponse.params)
}
inline ::cosmos::gov::v1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::cosmos::gov::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::cosmos::gov::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::gov::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::gov::v1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::cosmos::gov::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::cosmos::gov::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::gov::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryDepositRequest

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void QueryDepositRequest::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryDepositRequest::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryDepositRequest.proposal_id)
  return _internal_proposal_id();
}
inline void QueryDepositRequest::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryDepositRequest.proposal_id)
}
inline ::uint64_t QueryDepositRequest::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void QueryDepositRequest::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryDepositRequest::clear_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.ClearToEmpty();
}
inline const std::string& QueryDepositRequest::depositor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryDepositRequest.depositor)
  return _internal_depositor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryDepositRequest::set_depositor(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryDepositRequest.depositor)
}
inline std::string* QueryDepositRequest::mutable_depositor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_depositor();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryDepositRequest.depositor)
  return _s;
}
inline const std::string& QueryDepositRequest::_internal_depositor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.depositor_.Get();
}
inline void QueryDepositRequest::_internal_set_depositor(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.Set(value, GetArena());
}
inline std::string* QueryDepositRequest::_internal_mutable_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.depositor_.Mutable( GetArena());
}
inline std::string* QueryDepositRequest::release_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryDepositRequest.depositor)
  return _impl_.depositor_.Release();
}
inline void QueryDepositRequest::set_allocated_depositor(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.depositor_.IsDefault()) {
    _impl_.depositor_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryDepositRequest.depositor)
}

// -------------------------------------------------------------------

// QueryDepositResponse

// .cosmos.gov.v1.Deposit deposit = 1 [json_name = "deposit"];
inline bool QueryDepositResponse::has_deposit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deposit_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::Deposit& QueryDepositResponse::_internal_deposit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::Deposit* p = _impl_.deposit_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::Deposit&>(::cosmos::gov::v1::_Deposit_default_instance_);
}
inline const ::cosmos::gov::v1::Deposit& QueryDepositResponse::deposit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryDepositResponse.deposit)
  return _internal_deposit();
}
inline void QueryDepositResponse::unsafe_arena_set_allocated_deposit(::cosmos::gov::v1::Deposit* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deposit_);
  }
  _impl_.deposit_ = reinterpret_cast<::cosmos::gov::v1::Deposit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryDepositResponse.deposit)
}
inline ::cosmos::gov::v1::Deposit* QueryDepositResponse::release_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Deposit* released = _impl_.deposit_;
  _impl_.deposit_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::Deposit* QueryDepositResponse::unsafe_arena_release_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryDepositResponse.deposit)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Deposit* temp = _impl_.deposit_;
  _impl_.deposit_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::Deposit* QueryDepositResponse::_internal_mutable_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deposit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::Deposit>(GetArena());
    _impl_.deposit_ = reinterpret_cast<::cosmos::gov::v1::Deposit*>(p);
  }
  return _impl_.deposit_;
}
inline ::cosmos::gov::v1::Deposit* QueryDepositResponse::mutable_deposit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::gov::v1::Deposit* _msg = _internal_mutable_deposit();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryDepositResponse.deposit)
  return _msg;
}
inline void QueryDepositResponse::set_allocated_deposit(::cosmos::gov::v1::Deposit* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deposit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.deposit_ = reinterpret_cast<::cosmos::gov::v1::Deposit*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryDepositResponse.deposit)
}

// -------------------------------------------------------------------

// QueryDepositsRequest

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void QueryDepositsRequest::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryDepositsRequest::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryDepositsRequest.proposal_id)
  return _internal_proposal_id();
}
inline void QueryDepositsRequest::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryDepositsRequest.proposal_id)
}
inline ::uint64_t QueryDepositsRequest::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void QueryDepositsRequest::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryDepositsRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDepositsRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryDepositsRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryDepositsRequest.pagination)
  return _internal_pagination();
}
inline void QueryDepositsRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryDepositsRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDepositsRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDepositsRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryDepositsRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDepositsRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryDepositsRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryDepositsRequest.pagination)
  return _msg;
}
inline void QueryDepositsRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryDepositsRequest.pagination)
}

// -------------------------------------------------------------------

// QueryDepositsResponse

// repeated .cosmos.gov.v1.Deposit deposits = 1 [json_name = "deposits"];
inline int QueryDepositsResponse::_internal_deposits_size() const {
  return _internal_deposits().size();
}
inline int QueryDepositsResponse::deposits_size() const {
  return _internal_deposits_size();
}
inline ::cosmos::gov::v1::Deposit* QueryDepositsResponse::mutable_deposits(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryDepositsResponse.deposits)
  return _internal_mutable_deposits()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>* QueryDepositsResponse::mutable_deposits()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.QueryDepositsResponse.deposits)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_deposits();
}
inline const ::cosmos::gov::v1::Deposit& QueryDepositsResponse::deposits(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryDepositsResponse.deposits)
  return _internal_deposits().Get(index);
}
inline ::cosmos::gov::v1::Deposit* QueryDepositsResponse::add_deposits() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::gov::v1::Deposit* _add = _internal_mutable_deposits()->Add();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.QueryDepositsResponse.deposits)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>& QueryDepositsResponse::deposits() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.QueryDepositsResponse.deposits)
  return _internal_deposits();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>&
QueryDepositsResponse::_internal_deposits() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deposits_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::Deposit>*
QueryDepositsResponse::_internal_mutable_deposits() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.deposits_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryDepositsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDepositsResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryDepositsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryDepositsResponse.pagination)
  return _internal_pagination();
}
inline void QueryDepositsResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryDepositsResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDepositsResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDepositsResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryDepositsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDepositsResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryDepositsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryDepositsResponse.pagination)
  return _msg;
}
inline void QueryDepositsResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryDepositsResponse.pagination)
}

// -------------------------------------------------------------------

// QueryTallyResultRequest

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void QueryTallyResultRequest::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryTallyResultRequest::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryTallyResultRequest.proposal_id)
  return _internal_proposal_id();
}
inline void QueryTallyResultRequest::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.QueryTallyResultRequest.proposal_id)
}
inline ::uint64_t QueryTallyResultRequest::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void QueryTallyResultRequest::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// -------------------------------------------------------------------

// QueryTallyResultResponse

// .cosmos.gov.v1.TallyResult tally = 1 [json_name = "tally"];
inline bool QueryTallyResultResponse::has_tally() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tally_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::TallyResult& QueryTallyResultResponse::_internal_tally() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::TallyResult* p = _impl_.tally_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::TallyResult&>(::cosmos::gov::v1::_TallyResult_default_instance_);
}
inline const ::cosmos::gov::v1::TallyResult& QueryTallyResultResponse::tally() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.QueryTallyResultResponse.tally)
  return _internal_tally();
}
inline void QueryTallyResultResponse::unsafe_arena_set_allocated_tally(::cosmos::gov::v1::TallyResult* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tally_);
  }
  _impl_.tally_ = reinterpret_cast<::cosmos::gov::v1::TallyResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.QueryTallyResultResponse.tally)
}
inline ::cosmos::gov::v1::TallyResult* QueryTallyResultResponse::release_tally() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::TallyResult* released = _impl_.tally_;
  _impl_.tally_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::TallyResult* QueryTallyResultResponse::unsafe_arena_release_tally() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.QueryTallyResultResponse.tally)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::TallyResult* temp = _impl_.tally_;
  _impl_.tally_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::TallyResult* QueryTallyResultResponse::_internal_mutable_tally() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tally_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::TallyResult>(GetArena());
    _impl_.tally_ = reinterpret_cast<::cosmos::gov::v1::TallyResult*>(p);
  }
  return _impl_.tally_;
}
inline ::cosmos::gov::v1::TallyResult* QueryTallyResultResponse::mutable_tally() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::gov::v1::TallyResult* _msg = _internal_mutable_tally();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.QueryTallyResultResponse.tally)
  return _msg;
}
inline void QueryTallyResultResponse::set_allocated_tally(::cosmos::gov::v1::TallyResult* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tally_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tally_ = reinterpret_cast<::cosmos::gov::v1::TallyResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.QueryTallyResultResponse.tally)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gov
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fgov_2fv1_2fquery_2eproto_2epb_2eh
