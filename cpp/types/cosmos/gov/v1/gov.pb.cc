// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/gov/v1/gov.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/gov/v1/gov.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace gov {
namespace v1 {

inline constexpr WeightedVoteOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : weight_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        option_{static_cast< ::cosmos::gov::v1::VoteOption >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WeightedVoteOption::WeightedVoteOption(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WeightedVoteOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightedVoteOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightedVoteOptionDefaultTypeInternal() {}
  union {
    WeightedVoteOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightedVoteOptionDefaultTypeInternal _WeightedVoteOption_default_instance_;

inline constexpr TallyResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : yes_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        abstain_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        no_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        no_with_veto_count_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TallyResult::TallyResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TallyResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TallyResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TallyResultDefaultTypeInternal() {}
  union {
    TallyResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TallyResultDefaultTypeInternal _TallyResult_default_instance_;

inline constexpr TallyParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : quorum_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        veto_threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TallyParams::TallyParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TallyParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TallyParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TallyParamsDefaultTypeInternal() {}
  union {
    TallyParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TallyParamsDefaultTypeInternal _TallyParams_default_instance_;

inline constexpr VotingParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        voting_period_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VotingParams::VotingParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VotingParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotingParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotingParamsDefaultTypeInternal() {}
  union {
    VotingParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotingParamsDefaultTypeInternal _VotingParams_default_instance_;

inline constexpr Vote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : options_{},
        voter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vote::Vote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoteDefaultTypeInternal() {}
  union {
    Vote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoteDefaultTypeInternal _Vote_default_instance_;

inline constexpr Proposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        messages_{},
        total_deposit_{},
        metadata_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        summary_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposer_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        failed_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        final_tally_result_{nullptr},
        submit_time_{nullptr},
        deposit_end_time_{nullptr},
        voting_start_time_{nullptr},
        voting_end_time_{nullptr},
        id_{::uint64_t{0u}},
        status_{static_cast< ::cosmos::gov::v1::ProposalStatus >(0)},
        expedited_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Proposal::Proposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProposalDefaultTypeInternal() {}
  union {
    Proposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProposalDefaultTypeInternal _Proposal_default_instance_;

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_deposit_{},
        expedited_min_deposit_{},
        quorum_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        veto_threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_initial_deposit_ratio_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_cancel_ratio_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_cancel_dest_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expedited_threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        min_deposit_ratio_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        max_deposit_period_{nullptr},
        voting_period_{nullptr},
        expedited_voting_period_{nullptr},
        burn_vote_quorum_{false},
        burn_proposal_deposit_prevote_{false},
        burn_vote_veto_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;

inline constexpr DepositParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_deposit_{},
        max_deposit_period_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DepositParams::DepositParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DepositParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DepositParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DepositParamsDefaultTypeInternal() {}
  union {
    DepositParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DepositParamsDefaultTypeInternal _DepositParams_default_instance_;

inline constexpr Deposit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : amount_{},
        depositor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Deposit::Deposit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DepositDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DepositDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DepositDefaultTypeInternal() {}
  union {
    Deposit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DepositDefaultTypeInternal _Deposit_default_instance_;
}  // namespace v1
}  // namespace gov
}  // namespace cosmos
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cosmos_2fgov_2fv1_2fgov_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgov_2fv1_2fgov_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fgov_2fv1_2fgov_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::WeightedVoteOption, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::WeightedVoteOption, _impl_.option_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::WeightedVoteOption, _impl_.weight_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Deposit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Deposit, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Deposit, _impl_.depositor_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Deposit, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.messages_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.final_tally_result_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.submit_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.deposit_end_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.total_deposit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.voting_start_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.voting_end_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.summary_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.proposer_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.expedited_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Proposal, _impl_.failed_reason_),
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
        ~0u,
        3,
        4,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyResult, _impl_.yes_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyResult, _impl_.abstain_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyResult, _impl_.no_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyResult, _impl_.no_with_veto_count_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Vote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Vote, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Vote, _impl_.voter_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Vote, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Vote, _impl_.metadata_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::DepositParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::DepositParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::DepositParams, _impl_.min_deposit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::DepositParams, _impl_.max_deposit_period_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::VotingParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::VotingParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::VotingParams, _impl_.voting_period_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyParams, _impl_.quorum_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyParams, _impl_.threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::TallyParams, _impl_.veto_threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.min_deposit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.max_deposit_period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.voting_period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.quorum_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.veto_threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.min_initial_deposit_ratio_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.proposal_cancel_ratio_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.proposal_cancel_dest_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.expedited_voting_period_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.expedited_threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.expedited_min_deposit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.burn_vote_quorum_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.burn_proposal_deposit_prevote_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.burn_vote_veto_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1::Params, _impl_.min_deposit_ratio_),
        ~0u,
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::gov::v1::WeightedVoteOption)},
        {10, -1, -1, sizeof(::cosmos::gov::v1::Deposit)},
        {21, 44, -1, sizeof(::cosmos::gov::v1::Proposal)},
        {59, -1, -1, sizeof(::cosmos::gov::v1::TallyResult)},
        {71, -1, -1, sizeof(::cosmos::gov::v1::Vote)},
        {83, 93, -1, sizeof(::cosmos::gov::v1::DepositParams)},
        {95, 104, -1, sizeof(::cosmos::gov::v1::VotingParams)},
        {105, -1, -1, sizeof(::cosmos::gov::v1::TallyParams)},
        {116, 140, -1, sizeof(::cosmos::gov::v1::Params)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::gov::v1::_WeightedVoteOption_default_instance_._instance,
    &::cosmos::gov::v1::_Deposit_default_instance_._instance,
    &::cosmos::gov::v1::_Proposal_default_instance_._instance,
    &::cosmos::gov::v1::_TallyResult_default_instance_._instance,
    &::cosmos::gov::v1::_Vote_default_instance_._instance,
    &::cosmos::gov::v1::_DepositParams_default_instance_._instance,
    &::cosmos::gov::v1::_VotingParams_default_instance_._instance,
    &::cosmos::gov::v1::_TallyParams_default_instance_._instance,
    &::cosmos::gov::v1::_Params_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgov_2fv1_2fgov_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027cosmos/gov/v1/gov.proto\022\rcosmos.gov.v1"
    "\032\036cosmos/base/v1beta1/coin.proto\032\024gogopr"
    "oto/gogo.proto\032\037google/protobuf/timestam"
    "p.proto\032\031google/protobuf/any.proto\032\036goog"
    "le/protobuf/duration.proto\032\031cosmos_proto"
    "/cosmos.proto\032\021amino/amino.proto\"o\n\022Weig"
    "htedVoteOption\0221\n\006option\030\001 \001(\0162\031.cosmos."
    "gov.v1.VoteOptionR\006option\022&\n\006weight\030\002 \001("
    "\tB\016\322\264-\ncosmos.DecR\006weight\"\240\001\n\007Deposit\022\037\n"
    "\013proposal_id\030\001 \001(\004R\nproposalId\0226\n\tdeposi"
    "tor\030\002 \001(\tB\030\322\264-\024cosmos.AddressStringR\tdep"
    "ositor\022<\n\006amount\030\003 \003(\0132\031.cosmos.base.v1b"
    "eta1.CoinB\t\310\336\037\000\250\347\260*\001R\006amount\"\353\006\n\010Proposa"
    "l\022\016\n\002id\030\001 \001(\004R\002id\0220\n\010messages\030\002 \003(\0132\024.go"
    "ogle.protobuf.AnyR\010messages\0225\n\006status\030\003 "
    "\001(\0162\035.cosmos.gov.v1.ProposalStatusR\006stat"
    "us\022H\n\022final_tally_result\030\004 \001(\0132\032.cosmos."
    "gov.v1.TallyResultR\020finalTallyResult\022A\n\013"
    "submit_time\030\005 \001(\0132\032.google.protobuf.Time"
    "stampB\004\220\337\037\001R\nsubmitTime\022J\n\020deposit_end_t"
    "ime\030\006 \001(\0132\032.google.protobuf.TimestampB\004\220"
    "\337\037\001R\016depositEndTime\022I\n\rtotal_deposit\030\007 \003"
    "(\0132\031.cosmos.base.v1beta1.CoinB\t\310\336\037\000\250\347\260*\001"
    "R\014totalDeposit\022L\n\021voting_start_time\030\010 \001("
    "\0132\032.google.protobuf.TimestampB\004\220\337\037\001R\017vot"
    "ingStartTime\022H\n\017voting_end_time\030\t \001(\0132\032."
    "google.protobuf.TimestampB\004\220\337\037\001R\rvotingE"
    "ndTime\022\032\n\010metadata\030\n \001(\tR\010metadata\022)\n\005ti"
    "tle\030\013 \001(\tB\023\332\264-\017cosmos-sdk 0.47R\005title\022-\n"
    "\007summary\030\014 \001(\tB\023\332\264-\017cosmos-sdk 0.47R\007sum"
    "mary\022G\n\010proposer\030\r \001(\tB+\322\264-\024cosmos.Addre"
    "ssString\332\264-\017cosmos-sdk 0.47R\010proposer\0221\n"
    "\texpedited\030\016 \001(\010B\023\332\264-\017cosmos-sdk 0.50R\te"
    "xpedited\0228\n\rfailed_reason\030\017 \001(\tB\023\332\264-\017cos"
    "mos-sdk 0.50R\014failedReason\"\327\001\n\013TallyResu"
    "lt\022+\n\tyes_count\030\001 \001(\tB\016\322\264-\ncosmos.IntR\010y"
    "esCount\0223\n\rabstain_count\030\002 \001(\tB\016\322\264-\ncosm"
    "os.IntR\014abstainCount\022)\n\010no_count\030\003 \001(\tB\016"
    "\322\264-\ncosmos.IntR\007noCount\022;\n\022no_with_veto_"
    "count\030\004 \001(\tB\016\322\264-\ncosmos.IntR\017noWithVetoC"
    "ount\"\266\001\n\004Vote\022\037\n\013proposal_id\030\001 \001(\004R\nprop"
    "osalId\022.\n\005voter\030\002 \001(\tB\030\322\264-\024cosmos.Addres"
    "sStringR\005voter\022;\n\007options\030\004 \003(\0132!.cosmos"
    ".gov.v1.WeightedVoteOptionR\007options\022\032\n\010m"
    "etadata\030\005 \001(\tR\010metadataJ\004\010\003\020\004\"\335\001\n\rDeposi"
    "tParams\022Y\n\013min_deposit\030\001 \003(\0132\031.cosmos.ba"
    "se.v1beta1.CoinB\035\310\336\037\000\352\336\037\025min_deposit,omi"
    "temptyR\nminDeposit\022m\n\022max_deposit_period"
    "\030\002 \001(\0132\031.google.protobuf.DurationB$\352\336\037\034m"
    "ax_deposit_period,omitempty\230\337\037\001R\020maxDepo"
    "sitPeriod:\002\030\001\"X\n\014VotingParams\022D\n\rvoting_"
    "period\030\001 \001(\0132\031.google.protobuf.DurationB"
    "\004\230\337\037\001R\014votingPeriod:\002\030\001\"\236\001\n\013TallyParams\022"
    "&\n\006quorum\030\001 \001(\tB\016\322\264-\ncosmos.DecR\006quorum\022"
    ",\n\tthreshold\030\002 \001(\tB\016\322\264-\ncosmos.DecR\tthre"
    "shold\0225\n\016veto_threshold\030\003 \001(\tB\016\322\264-\ncosmo"
    "s.DecR\rvetoThreshold:\002\030\001\"\203\t\n\006Params\022E\n\013m"
    "in_deposit\030\001 \003(\0132\031.cosmos.base.v1beta1.C"
    "oinB\t\310\336\037\000\250\347\260*\001R\nminDeposit\022M\n\022max_deposi"
    "t_period\030\002 \001(\0132\031.google.protobuf.Duratio"
    "nB\004\230\337\037\001R\020maxDepositPeriod\022D\n\rvoting_peri"
    "od\030\003 \001(\0132\031.google.protobuf.DurationB\004\230\337\037"
    "\001R\014votingPeriod\022&\n\006quorum\030\004 \001(\tB\016\322\264-\ncos"
    "mos.DecR\006quorum\022,\n\tthreshold\030\005 \001(\tB\016\322\264-\n"
    "cosmos.DecR\tthreshold\0225\n\016veto_threshold\030"
    "\006 \001(\tB\016\322\264-\ncosmos.DecR\rvetoThreshold\022I\n\031"
    "min_initial_deposit_ratio\030\007 \001(\tB\016\322\264-\ncos"
    "mos.DecR\026minInitialDepositRatio\022U\n\025propo"
    "sal_cancel_ratio\030\010 \001(\tB!\322\264-\ncosmos.Dec\332\264"
    "-\017cosmos-sdk 0.50R\023proposalCancelRatio\022]"
    "\n\024proposal_cancel_dest\030\t \001(\tB+\322\264-\024cosmos"
    ".AddressString\332\264-\017cosmos-sdk 0.50R\022propo"
    "salCancelDest\022j\n\027expedited_voting_period"
    "\030\n \001(\0132\031.google.protobuf.DurationB\027\230\337\037\001\332"
    "\264-\017cosmos-sdk 0.50R\025expeditedVotingPerio"
    "d\022R\n\023expedited_threshold\030\013 \001(\tB!\322\264-\ncosm"
    "os.Dec\332\264-\017cosmos-sdk 0.50R\022expeditedThre"
    "shold\022X\n\025expedited_min_deposit\030\014 \003(\0132\031.c"
    "osmos.base.v1beta1.CoinB\t\310\336\037\000\250\347\260*\001R\023expe"
    "ditedMinDeposit\022(\n\020burn_vote_quorum\030\r \001("
    "\010R\016burnVoteQuorum\022A\n\035burn_proposal_depos"
    "it_prevote\030\016 \001(\010R\032burnProposalDepositPre"
    "vote\022$\n\016burn_vote_veto\030\017 \001(\010R\014burnVoteVe"
    "to\022M\n\021min_deposit_ratio\030\020 \001(\tB!\322\264-\ncosmo"
    "s.Dec\332\264-\017cosmos-sdk 0.50R\017minDepositRati"
    "o:\023\322\264-\017cosmos-sdk 0.47*\211\001\n\nVoteOption\022\033\n"
    "\027VOTE_OPTION_UNSPECIFIED\020\000\022\023\n\017VOTE_OPTIO"
    "N_YES\020\001\022\027\n\023VOTE_OPTION_ABSTAIN\020\002\022\022\n\016VOTE"
    "_OPTION_NO\020\003\022\034\n\030VOTE_OPTION_NO_WITH_VETO"
    "\020\004*\316\001\n\016ProposalStatus\022\037\n\033PROPOSAL_STATUS"
    "_UNSPECIFIED\020\000\022\"\n\036PROPOSAL_STATUS_DEPOSI"
    "T_PERIOD\020\001\022!\n\035PROPOSAL_STATUS_VOTING_PER"
    "IOD\020\002\022\032\n\026PROPOSAL_STATUS_PASSED\020\003\022\034\n\030PRO"
    "POSAL_STATUS_REJECTED\020\004\022\032\n\026PROPOSAL_STAT"
    "US_FAILED\020\005B-Z+github.com/cosmos/cosmos-"
    "sdk/x/gov/types/v1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto_deps[7] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto = {
    false,
    false,
    3826,
    descriptor_table_protodef_cosmos_2fgov_2fv1_2fgov_2eproto,
    "cosmos/gov/v1/gov.proto",
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto_once,
    descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto_deps,
    7,
    9,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgov_2fv1_2fgov_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fgov_2fv1_2fgov_2eproto,
    file_level_service_descriptors_cosmos_2fgov_2fv1_2fgov_2eproto,
};
namespace cosmos {
namespace gov {
namespace v1 {
const ::google::protobuf::EnumDescriptor* VoteOption_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto);
  return file_level_enum_descriptors_cosmos_2fgov_2fv1_2fgov_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t VoteOption_internal_data_[] = {
    327680u, 0u, };
bool VoteOption_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ProposalStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto);
  return file_level_enum_descriptors_cosmos_2fgov_2fv1_2fgov_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ProposalStatus_internal_data_[] = {
    393216u, 0u, };
bool ProposalStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

class WeightedVoteOption::_Internal {
 public:
};

WeightedVoteOption::WeightedVoteOption(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.WeightedVoteOption)
}
inline PROTOBUF_NDEBUG_INLINE WeightedVoteOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::WeightedVoteOption& from_msg)
      : weight_(arena, from.weight_),
        _cached_size_{0} {}

WeightedVoteOption::WeightedVoteOption(
    ::google::protobuf::Arena* arena,
    const WeightedVoteOption& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WeightedVoteOption* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.option_ = from._impl_.option_;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.WeightedVoteOption)
}
inline PROTOBUF_NDEBUG_INLINE WeightedVoteOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : weight_(arena),
        _cached_size_{0} {}

inline void WeightedVoteOption::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.option_ = {};
}
WeightedVoteOption::~WeightedVoteOption() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.WeightedVoteOption)
  SharedDtor(*this);
}
inline void WeightedVoteOption::SharedDtor(MessageLite& self) {
  WeightedVoteOption& this_ = static_cast<WeightedVoteOption&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.weight_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WeightedVoteOption::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WeightedVoteOption(arena);
}
constexpr auto WeightedVoteOption::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WeightedVoteOption),
                                            alignof(WeightedVoteOption));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WeightedVoteOption::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WeightedVoteOption_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WeightedVoteOption::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WeightedVoteOption>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WeightedVoteOption::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WeightedVoteOption>(), &WeightedVoteOption::ByteSizeLong,
            &WeightedVoteOption::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_._cached_size_),
        false,
    },
    &WeightedVoteOption::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WeightedVoteOption::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> WeightedVoteOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::WeightedVoteOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string weight = 2 [json_name = "weight", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.weight_)}},
    // .cosmos.gov.v1.VoteOption option = 1 [json_name = "option"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WeightedVoteOption, _impl_.option_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.option_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.gov.v1.VoteOption option = 1 [json_name = "option"];
    {PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.option_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string weight = 2 [json_name = "weight", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\0\6\0\0\0\0\0"
    "cosmos.gov.v1.WeightedVoteOption"
    "weight"
  }},
};

PROTOBUF_NOINLINE void WeightedVoteOption::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.WeightedVoteOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.weight_.ClearToEmpty();
  _impl_.option_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WeightedVoteOption::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WeightedVoteOption& this_ = static_cast<const WeightedVoteOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WeightedVoteOption::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WeightedVoteOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.WeightedVoteOption)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .cosmos.gov.v1.VoteOption option = 1 [json_name = "option"];
          if (this_._internal_option() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_option(), target);
          }

          // string weight = 2 [json_name = "weight", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_weight().empty()) {
            const std::string& _s = this_._internal_weight();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.WeightedVoteOption.weight");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.WeightedVoteOption)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WeightedVoteOption::ByteSizeLong(const MessageLite& base) {
          const WeightedVoteOption& this_ = static_cast<const WeightedVoteOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WeightedVoteOption::ByteSizeLong() const {
          const WeightedVoteOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.WeightedVoteOption)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string weight = 2 [json_name = "weight", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_weight().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weight());
            }
            // .cosmos.gov.v1.VoteOption option = 1 [json_name = "option"];
            if (this_._internal_option() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_option());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WeightedVoteOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WeightedVoteOption*>(&to_msg);
  auto& from = static_cast<const WeightedVoteOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.WeightedVoteOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_weight().empty()) {
    _this->_internal_set_weight(from._internal_weight());
  }
  if (from._internal_option() != 0) {
    _this->_impl_.option_ = from._impl_.option_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WeightedVoteOption::CopyFrom(const WeightedVoteOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.WeightedVoteOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WeightedVoteOption::InternalSwap(WeightedVoteOption* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weight_, &other->_impl_.weight_, arena);
  swap(_impl_.option_, other->_impl_.option_);
}

::google::protobuf::Metadata WeightedVoteOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Deposit::_Internal {
 public:
};

void Deposit::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_.Clear();
}
Deposit::Deposit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.Deposit)
}
inline PROTOBUF_NDEBUG_INLINE Deposit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::Deposit& from_msg)
      : amount_{visibility, arena, from.amount_},
        depositor_(arena, from.depositor_),
        _cached_size_{0} {}

Deposit::Deposit(
    ::google::protobuf::Arena* arena,
    const Deposit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Deposit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.proposal_id_ = from._impl_.proposal_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.Deposit)
}
inline PROTOBUF_NDEBUG_INLINE Deposit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : amount_{visibility, arena},
        depositor_(arena),
        _cached_size_{0} {}

inline void Deposit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
Deposit::~Deposit() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.Deposit)
  SharedDtor(*this);
}
inline void Deposit::SharedDtor(MessageLite& self) {
  Deposit& this_ = static_cast<Deposit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.depositor_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Deposit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Deposit(arena);
}
constexpr auto Deposit::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Deposit, _impl_.amount_) +
          decltype(Deposit::_impl_.amount_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Deposit), alignof(Deposit), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Deposit::PlacementNew_,
                                 sizeof(Deposit),
                                 alignof(Deposit));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Deposit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Deposit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Deposit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Deposit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Deposit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Deposit>(), &Deposit::ByteSizeLong,
            &Deposit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Deposit, _impl_._cached_size_),
        false,
    },
    &Deposit::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Deposit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 39, 2> Deposit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::Deposit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Deposit, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Deposit, _impl_.proposal_id_)}},
    // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Deposit, _impl_.depositor_)}},
    // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Deposit, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(Deposit, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Deposit, _impl_.depositor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Deposit, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\25\0\11\0\0\0\0\0"
    "cosmos.gov.v1.Deposit"
    "depositor"
  }},
};

PROTOBUF_NOINLINE void Deposit::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.Deposit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.amount_.Clear();
  _impl_.depositor_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Deposit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Deposit& this_ = static_cast<const Deposit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Deposit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Deposit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.Deposit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_depositor().empty()) {
            const std::string& _s = this_._internal_depositor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Deposit.depositor");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_amount_size());
               i < n; i++) {
            const auto& repfield = this_._internal_amount().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.Deposit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Deposit::ByteSizeLong(const MessageLite& base) {
          const Deposit& this_ = static_cast<const Deposit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Deposit::ByteSizeLong() const {
          const Deposit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.Deposit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_amount_size();
              for (const auto& msg : this_._internal_amount()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_depositor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_depositor());
            }
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Deposit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Deposit*>(&to_msg);
  auto& from = static_cast<const Deposit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.Deposit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(
      from._internal_amount());
  if (!from._internal_depositor().empty()) {
    _this->_internal_set_depositor(from._internal_depositor());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Deposit::CopyFrom(const Deposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.Deposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Deposit::InternalSwap(Deposit* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.amount_.InternalSwap(&other->_impl_.amount_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.depositor_, &other->_impl_.depositor_, arena);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata Deposit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Proposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Proposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Proposal, _impl_._has_bits_);
};

void Proposal::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
void Proposal::clear_submit_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.submit_time_ != nullptr) _impl_.submit_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Proposal::clear_deposit_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deposit_end_time_ != nullptr) _impl_.deposit_end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Proposal::clear_total_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_deposit_.Clear();
}
void Proposal::clear_voting_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_start_time_ != nullptr) _impl_.voting_start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Proposal::clear_voting_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_end_time_ != nullptr) _impl_.voting_end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
Proposal::Proposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.Proposal)
}
inline PROTOBUF_NDEBUG_INLINE Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::Proposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        messages_{visibility, arena, from.messages_},
        total_deposit_{visibility, arena, from.total_deposit_},
        metadata_(arena, from.metadata_),
        title_(arena, from.title_),
        summary_(arena, from.summary_),
        proposer_(arena, from.proposer_),
        failed_reason_(arena, from.failed_reason_) {}

Proposal::Proposal(
    ::google::protobuf::Arena* arena,
    const Proposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Proposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.final_tally_result_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1::TallyResult>(
                              arena, *from._impl_.final_tally_result_)
                        : nullptr;
  _impl_.submit_time_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.submit_time_)
                        : nullptr;
  _impl_.deposit_end_time_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.deposit_end_time_)
                        : nullptr;
  _impl_.voting_start_time_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.voting_start_time_)
                        : nullptr;
  _impl_.voting_end_time_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.voting_end_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, expedited_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::expedited_));

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.Proposal)
}
inline PROTOBUF_NDEBUG_INLINE Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        messages_{visibility, arena},
        total_deposit_{visibility, arena},
        metadata_(arena),
        title_(arena),
        summary_(arena),
        proposer_(arena),
        failed_reason_(arena) {}

inline void Proposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, final_tally_result_),
           0,
           offsetof(Impl_, expedited_) -
               offsetof(Impl_, final_tally_result_) +
               sizeof(Impl_::expedited_));
}
Proposal::~Proposal() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.Proposal)
  SharedDtor(*this);
}
inline void Proposal::SharedDtor(MessageLite& self) {
  Proposal& this_ = static_cast<Proposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.metadata_.Destroy();
  this_._impl_.title_.Destroy();
  this_._impl_.summary_.Destroy();
  this_._impl_.proposer_.Destroy();
  this_._impl_.failed_reason_.Destroy();
  delete this_._impl_.final_tally_result_;
  delete this_._impl_.submit_time_;
  delete this_._impl_.deposit_end_time_;
  delete this_._impl_.voting_start_time_;
  delete this_._impl_.voting_end_time_;
  this_._impl_.~Impl_();
}

inline void* Proposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Proposal(arena);
}
constexpr auto Proposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.messages_) +
          decltype(Proposal::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.total_deposit_) +
          decltype(Proposal::_impl_.total_deposit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Proposal), alignof(Proposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Proposal::PlacementNew_,
                                 sizeof(Proposal),
                                 alignof(Proposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Proposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Proposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Proposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Proposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Proposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Proposal>(), &Proposal::ByteSizeLong,
            &Proposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Proposal, _impl_._cached_size_),
        false,
    },
    &Proposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Proposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 15, 7, 80, 2> Proposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Proposal, _impl_._has_bits_),
    0, // no _extensions_
    15, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294934528,  // skipmap
    offsetof(decltype(_table_), field_entries),
    15,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::Proposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 id = 1 [json_name = "id"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Proposal, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.id_)}},
    // repeated .google.protobuf.Any messages = 2 [json_name = "messages"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.messages_)}},
    // .cosmos.gov.v1.ProposalStatus status = 3 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Proposal, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.status_)}},
    // .cosmos.gov.v1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 1, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.final_tally_result_)}},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 2, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.submit_time_)}},
    // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 2, 3, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.deposit_end_time_)}},
    // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 4, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.total_deposit_)}},
    // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {66, 3, 5, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_start_time_)}},
    // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.stdtime) = true];
    {::_pbi::TcParser::FastMtS1,
     {74, 4, 6, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_end_time_)}},
    // string metadata = 10 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.metadata_)}},
    // string title = 11 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.title_)}},
    // string summary = 12 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.summary_)}},
    // string proposer = 13 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.proposer_)}},
    // bool expedited = 14 [json_name = "expedited", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Proposal, _impl_.expedited_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.expedited_)}},
    // string failed_reason = 15 [json_name = "failedReason", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.failed_reason_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .google.protobuf.Any messages = 2 [json_name = "messages"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.messages_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.gov.v1.ProposalStatus status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .cosmos.gov.v1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.final_tally_result_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.submit_time_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.deposit_end_time_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.total_deposit_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_start_time_), _Internal::kHasBitsOffset + 3, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.stdtime) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_end_time_), _Internal::kHasBitsOffset + 4, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string metadata = 10 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.metadata_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string title = 11 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.title_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string summary = 12 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.summary_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string proposer = 13 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.proposer_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool expedited = 14 [json_name = "expedited", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.expedited_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string failed_reason = 15 [json_name = "failedReason", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.failed_reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1::TallyResult>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\26\0\0\0\0\0\0\0\0\0\10\5\7\10\0\15"
    "cosmos.gov.v1.Proposal"
    "metadata"
    "title"
    "summary"
    "proposer"
    "failed_reason"
  }},
};

PROTOBUF_NOINLINE void Proposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.Proposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _impl_.total_deposit_.Clear();
  _impl_.metadata_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.summary_.ClearToEmpty();
  _impl_.proposer_.ClearToEmpty();
  _impl_.failed_reason_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.final_tally_result_ != nullptr);
      _impl_.final_tally_result_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.submit_time_ != nullptr);
      _impl_.submit_time_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.deposit_end_time_ != nullptr);
      _impl_.deposit_end_time_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.voting_start_time_ != nullptr);
      _impl_.voting_start_time_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.voting_end_time_ != nullptr);
      _impl_.voting_end_time_->Clear();
    }
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.expedited_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.expedited_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Proposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Proposal& this_ = static_cast<const Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Proposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.Proposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 id = 1 [json_name = "id"];
          if (this_._internal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_id(), target);
          }

          // repeated .google.protobuf.Any messages = 2 [json_name = "messages"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_messages_size());
               i < n; i++) {
            const auto& repfield = this_._internal_messages().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .cosmos.gov.v1.ProposalStatus status = 3 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.gov.v1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.final_tally_result_, this_._impl_.final_tally_result_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.submit_time_, this_._impl_.submit_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.deposit_end_time_, this_._impl_.deposit_end_time_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_total_deposit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_total_deposit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.voting_start_time_, this_._impl_.voting_start_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.stdtime) = true];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.voting_end_time_, this_._impl_.voting_end_time_->GetCachedSize(), target,
                stream);
          }

          // string metadata = 10 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Proposal.metadata");
            target = stream->WriteStringMaybeAliased(10, _s, target);
          }

          // string title = 11 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Proposal.title");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // string summary = 12 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
          if (!this_._internal_summary().empty()) {
            const std::string& _s = this_._internal_summary();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Proposal.summary");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // string proposer = 13 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
          if (!this_._internal_proposer().empty()) {
            const std::string& _s = this_._internal_proposer();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Proposal.proposer");
            target = stream->WriteStringMaybeAliased(13, _s, target);
          }

          // bool expedited = 14 [json_name = "expedited", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
          if (this_._internal_expedited() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                14, this_._internal_expedited(), target);
          }

          // string failed_reason = 15 [json_name = "failedReason", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
          if (!this_._internal_failed_reason().empty()) {
            const std::string& _s = this_._internal_failed_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Proposal.failed_reason");
            target = stream->WriteStringMaybeAliased(15, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.Proposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Proposal::ByteSizeLong(const MessageLite& base) {
          const Proposal& this_ = static_cast<const Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Proposal::ByteSizeLong() const {
          const Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.Proposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .google.protobuf.Any messages = 2 [json_name = "messages"];
            {
              total_size += 1UL * this_._internal_messages_size();
              for (const auto& msg : this_._internal_messages()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_total_deposit_size();
              for (const auto& msg : this_._internal_total_deposit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string metadata = 10 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
            // string title = 11 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string summary = 12 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
            if (!this_._internal_summary().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_summary());
            }
            // string proposer = 13 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
            if (!this_._internal_proposer().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposer());
            }
            // string failed_reason = 15 [json_name = "failedReason", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
            if (!this_._internal_failed_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_failed_reason());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // .cosmos.gov.v1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.final_tally_result_);
            }
            // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.submit_time_);
            }
            // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deposit_end_time_);
            }
            // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_start_time_);
            }
            // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.stdtime) = true];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_end_time_);
            }
          }
           {
            // uint64 id = 1 [json_name = "id"];
            if (this_._internal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_id());
            }
            // .cosmos.gov.v1.ProposalStatus status = 3 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
            // bool expedited = 14 [json_name = "expedited", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
            if (this_._internal_expedited() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Proposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Proposal*>(&to_msg);
  auto& from = static_cast<const Proposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.Proposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  _this->_internal_mutable_total_deposit()->MergeFrom(
      from._internal_total_deposit());
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_summary().empty()) {
    _this->_internal_set_summary(from._internal_summary());
  }
  if (!from._internal_proposer().empty()) {
    _this->_internal_set_proposer(from._internal_proposer());
  }
  if (!from._internal_failed_reason().empty()) {
    _this->_internal_set_failed_reason(from._internal_failed_reason());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.final_tally_result_ != nullptr);
      if (_this->_impl_.final_tally_result_ == nullptr) {
        _this->_impl_.final_tally_result_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1::TallyResult>(arena, *from._impl_.final_tally_result_);
      } else {
        _this->_impl_.final_tally_result_->MergeFrom(*from._impl_.final_tally_result_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.submit_time_ != nullptr);
      if (_this->_impl_.submit_time_ == nullptr) {
        _this->_impl_.submit_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.submit_time_);
      } else {
        _this->_impl_.submit_time_->MergeFrom(*from._impl_.submit_time_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.deposit_end_time_ != nullptr);
      if (_this->_impl_.deposit_end_time_ == nullptr) {
        _this->_impl_.deposit_end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.deposit_end_time_);
      } else {
        _this->_impl_.deposit_end_time_->MergeFrom(*from._impl_.deposit_end_time_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.voting_start_time_ != nullptr);
      if (_this->_impl_.voting_start_time_ == nullptr) {
        _this->_impl_.voting_start_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.voting_start_time_);
      } else {
        _this->_impl_.voting_start_time_->MergeFrom(*from._impl_.voting_start_time_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.voting_end_time_ != nullptr);
      if (_this->_impl_.voting_end_time_ == nullptr) {
        _this->_impl_.voting_end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.voting_end_time_);
      } else {
        _this->_impl_.voting_end_time_->MergeFrom(*from._impl_.voting_end_time_);
      }
    }
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  if (from._internal_expedited() != 0) {
    _this->_impl_.expedited_ = from._impl_.expedited_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Proposal::CopyFrom(const Proposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.Proposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Proposal::InternalSwap(Proposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  _impl_.total_deposit_.InternalSwap(&other->_impl_.total_deposit_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.summary_, &other->_impl_.summary_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposer_, &other->_impl_.proposer_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.failed_reason_, &other->_impl_.failed_reason_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.expedited_)
      + sizeof(Proposal::_impl_.expedited_)
      - PROTOBUF_FIELD_OFFSET(Proposal, _impl_.final_tally_result_)>(
          reinterpret_cast<char*>(&_impl_.final_tally_result_),
          reinterpret_cast<char*>(&other->_impl_.final_tally_result_));
}

::google::protobuf::Metadata Proposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TallyResult::_Internal {
 public:
};

TallyResult::TallyResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.TallyResult)
}
inline PROTOBUF_NDEBUG_INLINE TallyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::TallyResult& from_msg)
      : yes_count_(arena, from.yes_count_),
        abstain_count_(arena, from.abstain_count_),
        no_count_(arena, from.no_count_),
        no_with_veto_count_(arena, from.no_with_veto_count_),
        _cached_size_{0} {}

TallyResult::TallyResult(
    ::google::protobuf::Arena* arena,
    const TallyResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TallyResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.TallyResult)
}
inline PROTOBUF_NDEBUG_INLINE TallyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : yes_count_(arena),
        abstain_count_(arena),
        no_count_(arena),
        no_with_veto_count_(arena),
        _cached_size_{0} {}

inline void TallyResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TallyResult::~TallyResult() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.TallyResult)
  SharedDtor(*this);
}
inline void TallyResult::SharedDtor(MessageLite& self) {
  TallyResult& this_ = static_cast<TallyResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.yes_count_.Destroy();
  this_._impl_.abstain_count_.Destroy();
  this_._impl_.no_count_.Destroy();
  this_._impl_.no_with_veto_count_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TallyResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TallyResult(arena);
}
constexpr auto TallyResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TallyResult),
                                            alignof(TallyResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TallyResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TallyResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TallyResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TallyResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TallyResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TallyResult>(), &TallyResult::ByteSizeLong,
            &TallyResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TallyResult, _impl_._cached_size_),
        false,
    },
    &TallyResult::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TallyResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 82, 2> TallyResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::TallyResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string no_with_veto_count = 4 [json_name = "noWithVetoCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_with_veto_count_)}},
    // string yes_count = 1 [json_name = "yesCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.yes_count_)}},
    // string abstain_count = 2 [json_name = "abstainCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.abstain_count_)}},
    // string no_count = 3 [json_name = "noCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string yes_count = 1 [json_name = "yesCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.yes_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string abstain_count = 2 [json_name = "abstainCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.abstain_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string no_count = 3 [json_name = "noCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string no_with_veto_count = 4 [json_name = "noWithVetoCount", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_with_veto_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\11\15\10\22\0\0\0"
    "cosmos.gov.v1.TallyResult"
    "yes_count"
    "abstain_count"
    "no_count"
    "no_with_veto_count"
  }},
};

PROTOBUF_NOINLINE void TallyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.TallyResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.yes_count_.ClearToEmpty();
  _impl_.abstain_count_.ClearToEmpty();
  _impl_.no_count_.ClearToEmpty();
  _impl_.no_with_veto_count_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TallyResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TallyResult& this_ = static_cast<const TallyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TallyResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TallyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.TallyResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string yes_count = 1 [json_name = "yesCount", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_yes_count().empty()) {
            const std::string& _s = this_._internal_yes_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.TallyResult.yes_count");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string abstain_count = 2 [json_name = "abstainCount", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_abstain_count().empty()) {
            const std::string& _s = this_._internal_abstain_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.TallyResult.abstain_count");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string no_count = 3 [json_name = "noCount", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_no_count().empty()) {
            const std::string& _s = this_._internal_no_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.TallyResult.no_count");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string no_with_veto_count = 4 [json_name = "noWithVetoCount", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_no_with_veto_count().empty()) {
            const std::string& _s = this_._internal_no_with_veto_count();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.TallyResult.no_with_veto_count");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.TallyResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TallyResult::ByteSizeLong(const MessageLite& base) {
          const TallyResult& this_ = static_cast<const TallyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TallyResult::ByteSizeLong() const {
          const TallyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.TallyResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string yes_count = 1 [json_name = "yesCount", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_yes_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_yes_count());
            }
            // string abstain_count = 2 [json_name = "abstainCount", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_abstain_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_abstain_count());
            }
            // string no_count = 3 [json_name = "noCount", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_no_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_no_count());
            }
            // string no_with_veto_count = 4 [json_name = "noWithVetoCount", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_no_with_veto_count().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_no_with_veto_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TallyResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TallyResult*>(&to_msg);
  auto& from = static_cast<const TallyResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.TallyResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_yes_count().empty()) {
    _this->_internal_set_yes_count(from._internal_yes_count());
  }
  if (!from._internal_abstain_count().empty()) {
    _this->_internal_set_abstain_count(from._internal_abstain_count());
  }
  if (!from._internal_no_count().empty()) {
    _this->_internal_set_no_count(from._internal_no_count());
  }
  if (!from._internal_no_with_veto_count().empty()) {
    _this->_internal_set_no_with_veto_count(from._internal_no_with_veto_count());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TallyResult::CopyFrom(const TallyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.TallyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TallyResult::InternalSwap(TallyResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.yes_count_, &other->_impl_.yes_count_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.abstain_count_, &other->_impl_.abstain_count_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.no_count_, &other->_impl_.no_count_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.no_with_veto_count_, &other->_impl_.no_with_veto_count_, arena);
}

::google::protobuf::Metadata TallyResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vote::_Internal {
 public:
};

Vote::Vote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::Vote& from_msg)
      : options_{visibility, arena, from.options_},
        voter_(arena, from.voter_),
        metadata_(arena, from.metadata_),
        _cached_size_{0} {}

Vote::Vote(
    ::google::protobuf::Arena* arena,
    const Vote& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Vote* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.proposal_id_ = from._impl_.proposal_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : options_{visibility, arena},
        voter_(arena),
        metadata_(arena),
        _cached_size_{0} {}

inline void Vote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
Vote::~Vote() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.Vote)
  SharedDtor(*this);
}
inline void Vote::SharedDtor(MessageLite& self) {
  Vote& this_ = static_cast<Vote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.voter_.Destroy();
  this_._impl_.metadata_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Vote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vote(arena);
}
constexpr auto Vote::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Vote, _impl_.options_) +
          decltype(Vote::_impl_.options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Vote), alignof(Vote), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Vote::PlacementNew_,
                                 sizeof(Vote),
                                 alignof(Vote));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vote>(), &Vote::ByteSizeLong,
            &Vote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vote, _impl_._cached_size_),
        false,
    },
    &Vote::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 4, 1, 40, 2> Vote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967268,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::Vote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Vote, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.proposal_id_)}},
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .cosmos.gov.v1.WeightedVoteOption options = 4 [json_name = "options"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.options_)}},
    // string metadata = 5 [json_name = "metadata"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.gov.v1.WeightedVoteOption options = 4 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string metadata = 5 [json_name = "metadata"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.metadata_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1::WeightedVoteOption>()},
  }}, {{
    "\22\0\5\0\10\0\0\0"
    "cosmos.gov.v1.Vote"
    "voter"
    "metadata"
  }},
};

PROTOBUF_NOINLINE void Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.Vote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  _impl_.voter_.ClearToEmpty();
  _impl_.metadata_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.Vote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_voter().empty()) {
            const std::string& _s = this_._internal_voter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Vote.voter");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .cosmos.gov.v1.WeightedVoteOption options = 4 [json_name = "options"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_options_size());
               i < n; i++) {
            const auto& repfield = this_._internal_options().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string metadata = 5 [json_name = "metadata"];
          if (!this_._internal_metadata().empty()) {
            const std::string& _s = this_._internal_metadata();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Vote.metadata");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.Vote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vote::ByteSizeLong(const MessageLite& base) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vote::ByteSizeLong() const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.Vote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.gov.v1.WeightedVoteOption options = 4 [json_name = "options"];
            {
              total_size += 1UL * this_._internal_options_size();
              for (const auto& msg : this_._internal_options()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_voter().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_voter());
            }
            // string metadata = 5 [json_name = "metadata"];
            if (!this_._internal_metadata().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_metadata());
            }
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vote*>(&to_msg);
  auto& from = static_cast<const Vote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.Vote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  if (!from._internal_metadata().empty()) {
    _this->_internal_set_metadata(from._internal_metadata());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vote::CopyFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vote::InternalSwap(Vote* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, &other->_impl_.voter_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.metadata_, &other->_impl_.metadata_, arena);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata Vote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DepositParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DepositParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DepositParams, _impl_._has_bits_);
};

void DepositParams::clear_min_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_deposit_.Clear();
}
void DepositParams::clear_max_deposit_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_deposit_period_ != nullptr) _impl_.max_deposit_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DepositParams::DepositParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.DepositParams)
}
inline PROTOBUF_NDEBUG_INLINE DepositParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::DepositParams& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        min_deposit_{visibility, arena, from.min_deposit_} {}

DepositParams::DepositParams(
    ::google::protobuf::Arena* arena,
    const DepositParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DepositParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.max_deposit_period_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.max_deposit_period_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.DepositParams)
}
inline PROTOBUF_NDEBUG_INLINE DepositParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        min_deposit_{visibility, arena} {}

inline void DepositParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_deposit_period_ = {};
}
DepositParams::~DepositParams() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.DepositParams)
  SharedDtor(*this);
}
inline void DepositParams::SharedDtor(MessageLite& self) {
  DepositParams& this_ = static_cast<DepositParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.max_deposit_period_;
  this_._impl_.~Impl_();
}

inline void* DepositParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DepositParams(arena);
}
constexpr auto DepositParams::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.min_deposit_) +
          decltype(DepositParams::_impl_.min_deposit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DepositParams), alignof(DepositParams), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DepositParams::PlacementNew_,
                                 sizeof(DepositParams),
                                 alignof(DepositParams));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DepositParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DepositParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DepositParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DepositParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DepositParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DepositParams>(), &DepositParams::ByteSizeLong,
            &DepositParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DepositParams, _impl_._cached_size_),
        false,
    },
    &DepositParams::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DepositParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DepositParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DepositParams, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::DepositParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.max_deposit_period_)}},
    // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.min_deposit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty"];
    {PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.min_deposit_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
    {PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.max_deposit_period_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DepositParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.DepositParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.min_deposit_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.max_deposit_period_ != nullptr);
    _impl_.max_deposit_period_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DepositParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DepositParams& this_ = static_cast<const DepositParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DepositParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DepositParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.DepositParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_min_deposit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_min_deposit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.max_deposit_period_, this_._impl_.max_deposit_period_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.DepositParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DepositParams::ByteSizeLong(const MessageLite& base) {
          const DepositParams& this_ = static_cast<const DepositParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DepositParams::ByteSizeLong() const {
          const DepositParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.DepositParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty"];
            {
              total_size += 1UL * this_._internal_min_deposit_size();
              for (const auto& msg : this_._internal_min_deposit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_deposit_period_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DepositParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DepositParams*>(&to_msg);
  auto& from = static_cast<const DepositParams&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.DepositParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_min_deposit()->MergeFrom(
      from._internal_min_deposit());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.max_deposit_period_ != nullptr);
    if (_this->_impl_.max_deposit_period_ == nullptr) {
      _this->_impl_.max_deposit_period_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.max_deposit_period_);
    } else {
      _this->_impl_.max_deposit_period_->MergeFrom(*from._impl_.max_deposit_period_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DepositParams::CopyFrom(const DepositParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.DepositParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DepositParams::InternalSwap(DepositParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.min_deposit_.InternalSwap(&other->_impl_.min_deposit_);
  swap(_impl_.max_deposit_period_, other->_impl_.max_deposit_period_);
}

::google::protobuf::Metadata DepositParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VotingParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VotingParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VotingParams, _impl_._has_bits_);
};

void VotingParams::clear_voting_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_period_ != nullptr) _impl_.voting_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VotingParams::VotingParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.VotingParams)
}
inline PROTOBUF_NDEBUG_INLINE VotingParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::VotingParams& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VotingParams::VotingParams(
    ::google::protobuf::Arena* arena,
    const VotingParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VotingParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.voting_period_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.voting_period_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.VotingParams)
}
inline PROTOBUF_NDEBUG_INLINE VotingParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VotingParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.voting_period_ = {};
}
VotingParams::~VotingParams() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.VotingParams)
  SharedDtor(*this);
}
inline void VotingParams::SharedDtor(MessageLite& self) {
  VotingParams& this_ = static_cast<VotingParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.voting_period_;
  this_._impl_.~Impl_();
}

inline void* VotingParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VotingParams(arena);
}
constexpr auto VotingParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VotingParams),
                                            alignof(VotingParams));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VotingParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VotingParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VotingParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VotingParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VotingParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VotingParams>(), &VotingParams::ByteSizeLong,
            &VotingParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VotingParams, _impl_._cached_size_),
        false,
    },
    &VotingParams::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VotingParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VotingParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VotingParams, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::VotingParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VotingParams, _impl_.voting_period_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
    {PROTOBUF_FIELD_OFFSET(VotingParams, _impl_.voting_period_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void VotingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.VotingParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.voting_period_ != nullptr);
    _impl_.voting_period_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VotingParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VotingParams& this_ = static_cast<const VotingParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VotingParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VotingParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.VotingParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.voting_period_, this_._impl_.voting_period_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.VotingParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VotingParams::ByteSizeLong(const MessageLite& base) {
          const VotingParams& this_ = static_cast<const VotingParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VotingParams::ByteSizeLong() const {
          const VotingParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.VotingParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_period_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VotingParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VotingParams*>(&to_msg);
  auto& from = static_cast<const VotingParams&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.VotingParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.voting_period_ != nullptr);
    if (_this->_impl_.voting_period_ == nullptr) {
      _this->_impl_.voting_period_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.voting_period_);
    } else {
      _this->_impl_.voting_period_->MergeFrom(*from._impl_.voting_period_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VotingParams::CopyFrom(const VotingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.VotingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VotingParams::InternalSwap(VotingParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.voting_period_, other->_impl_.voting_period_);
}

::google::protobuf::Metadata VotingParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TallyParams::_Internal {
 public:
};

TallyParams::TallyParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.TallyParams)
}
inline PROTOBUF_NDEBUG_INLINE TallyParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::TallyParams& from_msg)
      : quorum_(arena, from.quorum_),
        threshold_(arena, from.threshold_),
        veto_threshold_(arena, from.veto_threshold_),
        _cached_size_{0} {}

TallyParams::TallyParams(
    ::google::protobuf::Arena* arena,
    const TallyParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TallyParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.TallyParams)
}
inline PROTOBUF_NDEBUG_INLINE TallyParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : quorum_(arena),
        threshold_(arena),
        veto_threshold_(arena),
        _cached_size_{0} {}

inline void TallyParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TallyParams::~TallyParams() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.TallyParams)
  SharedDtor(*this);
}
inline void TallyParams::SharedDtor(MessageLite& self) {
  TallyParams& this_ = static_cast<TallyParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.quorum_.Destroy();
  this_._impl_.threshold_.Destroy();
  this_._impl_.veto_threshold_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TallyParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TallyParams(arena);
}
constexpr auto TallyParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TallyParams),
                                            alignof(TallyParams));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TallyParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TallyParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TallyParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TallyParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TallyParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TallyParams>(), &TallyParams::ByteSizeLong,
            &TallyParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TallyParams, _impl_._cached_size_),
        false,
    },
    &TallyParams::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TallyParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 63, 2> TallyParams::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::TallyParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string quorum = 1 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.quorum_)}},
    // string threshold = 2 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.threshold_)}},
    // string veto_threshold = 3 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.veto_threshold_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string quorum = 1 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.quorum_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string threshold = 2 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string veto_threshold = 3 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.veto_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\6\11\16\0\0\0\0"
    "cosmos.gov.v1.TallyParams"
    "quorum"
    "threshold"
    "veto_threshold"
  }},
};

PROTOBUF_NOINLINE void TallyParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.TallyParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quorum_.ClearToEmpty();
  _impl_.threshold_.ClearToEmpty();
  _impl_.veto_threshold_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TallyParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TallyParams& this_ = static_cast<const TallyParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TallyParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TallyParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.TallyParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string quorum = 1 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_quorum().empty()) {
            const std::string& _s = this_._internal_quorum();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.TallyParams.quorum");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string threshold = 2 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_threshold().empty()) {
            const std::string& _s = this_._internal_threshold();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.TallyParams.threshold");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string veto_threshold = 3 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_veto_threshold().empty()) {
            const std::string& _s = this_._internal_veto_threshold();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.TallyParams.veto_threshold");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.TallyParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TallyParams::ByteSizeLong(const MessageLite& base) {
          const TallyParams& this_ = static_cast<const TallyParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TallyParams::ByteSizeLong() const {
          const TallyParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.TallyParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string quorum = 1 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_quorum().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_quorum());
            }
            // string threshold = 2 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_threshold());
            }
            // string veto_threshold = 3 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_veto_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_veto_threshold());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TallyParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TallyParams*>(&to_msg);
  auto& from = static_cast<const TallyParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.TallyParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_quorum().empty()) {
    _this->_internal_set_quorum(from._internal_quorum());
  }
  if (!from._internal_threshold().empty()) {
    _this->_internal_set_threshold(from._internal_threshold());
  }
  if (!from._internal_veto_threshold().empty()) {
    _this->_internal_set_veto_threshold(from._internal_veto_threshold());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TallyParams::CopyFrom(const TallyParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.TallyParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TallyParams::InternalSwap(TallyParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.quorum_, &other->_impl_.quorum_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.threshold_, &other->_impl_.threshold_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.veto_threshold_, &other->_impl_.veto_threshold_, arena);
}

::google::protobuf::Metadata TallyParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Params::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Params>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Params, _impl_._has_bits_);
};

void Params::clear_min_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_deposit_.Clear();
}
void Params::clear_max_deposit_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_deposit_period_ != nullptr) _impl_.max_deposit_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Params::clear_voting_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_period_ != nullptr) _impl_.voting_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Params::clear_expedited_voting_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expedited_voting_period_ != nullptr) _impl_.expedited_voting_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Params::clear_expedited_min_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expedited_min_deposit_.Clear();
}
Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1::Params& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        min_deposit_{visibility, arena, from.min_deposit_},
        expedited_min_deposit_{visibility, arena, from.expedited_min_deposit_},
        quorum_(arena, from.quorum_),
        threshold_(arena, from.threshold_),
        veto_threshold_(arena, from.veto_threshold_),
        min_initial_deposit_ratio_(arena, from.min_initial_deposit_ratio_),
        proposal_cancel_ratio_(arena, from.proposal_cancel_ratio_),
        proposal_cancel_dest_(arena, from.proposal_cancel_dest_),
        expedited_threshold_(arena, from.expedited_threshold_),
        min_deposit_ratio_(arena, from.min_deposit_ratio_) {}

Params::Params(
    ::google::protobuf::Arena* arena,
    const Params& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Params* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.max_deposit_period_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.max_deposit_period_)
                        : nullptr;
  _impl_.voting_period_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.voting_period_)
                        : nullptr;
  _impl_.expedited_voting_period_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.expedited_voting_period_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, burn_vote_quorum_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, burn_vote_quorum_),
           offsetof(Impl_, burn_vote_veto_) -
               offsetof(Impl_, burn_vote_quorum_) +
               sizeof(Impl_::burn_vote_veto_));

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        min_deposit_{visibility, arena},
        expedited_min_deposit_{visibility, arena},
        quorum_(arena),
        threshold_(arena),
        veto_threshold_(arena),
        min_initial_deposit_ratio_(arena),
        proposal_cancel_ratio_(arena),
        proposal_cancel_dest_(arena),
        expedited_threshold_(arena),
        min_deposit_ratio_(arena) {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, max_deposit_period_),
           0,
           offsetof(Impl_, burn_vote_veto_) -
               offsetof(Impl_, max_deposit_period_) +
               sizeof(Impl_::burn_vote_veto_));
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.quorum_.Destroy();
  this_._impl_.threshold_.Destroy();
  this_._impl_.veto_threshold_.Destroy();
  this_._impl_.min_initial_deposit_ratio_.Destroy();
  this_._impl_.proposal_cancel_ratio_.Destroy();
  this_._impl_.proposal_cancel_dest_.Destroy();
  this_._impl_.expedited_threshold_.Destroy();
  this_._impl_.min_deposit_ratio_.Destroy();
  delete this_._impl_.max_deposit_period_;
  delete this_._impl_.voting_period_;
  delete this_._impl_.expedited_voting_period_;
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Params, _impl_.min_deposit_) +
          decltype(Params::_impl_.min_deposit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Params, _impl_.expedited_min_deposit_) +
          decltype(Params::_impl_.expedited_min_deposit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Params), alignof(Params), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Params::PlacementNew_,
                                 sizeof(Params),
                                 alignof(Params));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 5, 176, 2> Params::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Params, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string min_deposit_ratio = 16 [json_name = "minDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.min_deposit_ratio_)}},
    // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.min_deposit_)}},
    // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.stdduration) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(Params, _impl_.max_deposit_period_)}},
    // .google.protobuf.Duration voting_period = 3 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(Params, _impl_.voting_period_)}},
    // string quorum = 4 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.quorum_)}},
    // string threshold = 5 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.threshold_)}},
    // string veto_threshold = 6 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.veto_threshold_)}},
    // string min_initial_deposit_ratio = 7 [json_name = "minInitialDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.min_initial_deposit_ratio_)}},
    // string proposal_cancel_ratio = 8 [json_name = "proposalCancelRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.proposal_cancel_ratio_)}},
    // string proposal_cancel_dest = 9 [json_name = "proposalCancelDest", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.proposal_cancel_dest_)}},
    // .google.protobuf.Duration expedited_voting_period = 10 [json_name = "expeditedVotingPeriod", (.gogoproto.stdduration) = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {::_pbi::TcParser::FastMtS1,
     {82, 2, 3, PROTOBUF_FIELD_OFFSET(Params, _impl_.expedited_voting_period_)}},
    // string expedited_threshold = 11 [json_name = "expeditedThreshold", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.expedited_threshold_)}},
    // repeated .cosmos.base.v1beta1.Coin expedited_min_deposit = 12 [json_name = "expeditedMinDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {98, 63, 4, PROTOBUF_FIELD_OFFSET(Params, _impl_.expedited_min_deposit_)}},
    // bool burn_vote_quorum = 13 [json_name = "burnVoteQuorum"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Params, _impl_.burn_vote_quorum_), 63>(),
     {104, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.burn_vote_quorum_)}},
    // bool burn_proposal_deposit_prevote = 14 [json_name = "burnProposalDepositPrevote"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Params, _impl_.burn_proposal_deposit_prevote_), 63>(),
     {112, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.burn_proposal_deposit_prevote_)}},
    // bool burn_vote_veto = 15 [json_name = "burnVoteVeto"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Params, _impl_.burn_vote_veto_), 63>(),
     {120, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.burn_vote_veto_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.min_deposit_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.stdduration) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.max_deposit_period_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration voting_period = 3 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.voting_period_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string quorum = 4 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.quorum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string threshold = 5 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.threshold_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string veto_threshold = 6 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.veto_threshold_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string min_initial_deposit_ratio = 7 [json_name = "minInitialDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.min_initial_deposit_ratio_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string proposal_cancel_ratio = 8 [json_name = "proposalCancelRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.proposal_cancel_ratio_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string proposal_cancel_dest = 9 [json_name = "proposalCancelDest", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.proposal_cancel_dest_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Duration expedited_voting_period = 10 [json_name = "expeditedVotingPeriod", (.gogoproto.stdduration) = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.expedited_voting_period_), _Internal::kHasBitsOffset + 2, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string expedited_threshold = 11 [json_name = "expeditedThreshold", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.expedited_threshold_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin expedited_min_deposit = 12 [json_name = "expeditedMinDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.expedited_min_deposit_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool burn_vote_quorum = 13 [json_name = "burnVoteQuorum"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.burn_vote_quorum_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool burn_proposal_deposit_prevote = 14 [json_name = "burnProposalDepositPrevote"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.burn_proposal_deposit_prevote_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool burn_vote_veto = 15 [json_name = "burnVoteVeto"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.burn_vote_veto_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string min_deposit_ratio = 16 [json_name = "minDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.min_deposit_ratio_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\24\0\0\0\6\11\16\31\25\24\0\23\0\0\0\0\21\0\0\0\0\0\0\0"
    "cosmos.gov.v1.Params"
    "quorum"
    "threshold"
    "veto_threshold"
    "min_initial_deposit_ratio"
    "proposal_cancel_ratio"
    "proposal_cancel_dest"
    "expedited_threshold"
    "min_deposit_ratio"
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.min_deposit_.Clear();
  _impl_.expedited_min_deposit_.Clear();
  _impl_.quorum_.ClearToEmpty();
  _impl_.threshold_.ClearToEmpty();
  _impl_.veto_threshold_.ClearToEmpty();
  _impl_.min_initial_deposit_ratio_.ClearToEmpty();
  _impl_.proposal_cancel_ratio_.ClearToEmpty();
  _impl_.proposal_cancel_dest_.ClearToEmpty();
  _impl_.expedited_threshold_.ClearToEmpty();
  _impl_.min_deposit_ratio_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.max_deposit_period_ != nullptr);
      _impl_.max_deposit_period_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.voting_period_ != nullptr);
      _impl_.voting_period_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.expedited_voting_period_ != nullptr);
      _impl_.expedited_voting_period_->Clear();
    }
  }
  ::memset(&_impl_.burn_vote_quorum_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.burn_vote_veto_) -
      reinterpret_cast<char*>(&_impl_.burn_vote_quorum_)) + sizeof(_impl_.burn_vote_veto_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_min_deposit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_min_deposit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.stdduration) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.max_deposit_period_, this_._impl_.max_deposit_period_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Duration voting_period = 3 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.voting_period_, this_._impl_.voting_period_->GetCachedSize(), target,
                stream);
          }

          // string quorum = 4 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_quorum().empty()) {
            const std::string& _s = this_._internal_quorum();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.quorum");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string threshold = 5 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_threshold().empty()) {
            const std::string& _s = this_._internal_threshold();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.threshold");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string veto_threshold = 6 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_veto_threshold().empty()) {
            const std::string& _s = this_._internal_veto_threshold();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.veto_threshold");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // string min_initial_deposit_ratio = 7 [json_name = "minInitialDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_min_initial_deposit_ratio().empty()) {
            const std::string& _s = this_._internal_min_initial_deposit_ratio();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.min_initial_deposit_ratio");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // string proposal_cancel_ratio = 8 [json_name = "proposalCancelRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
          if (!this_._internal_proposal_cancel_ratio().empty()) {
            const std::string& _s = this_._internal_proposal_cancel_ratio();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.proposal_cancel_ratio");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // string proposal_cancel_dest = 9 [json_name = "proposalCancelDest", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
          if (!this_._internal_proposal_cancel_dest().empty()) {
            const std::string& _s = this_._internal_proposal_cancel_dest();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.proposal_cancel_dest");
            target = stream->WriteStringMaybeAliased(9, _s, target);
          }

          // .google.protobuf.Duration expedited_voting_period = 10 [json_name = "expeditedVotingPeriod", (.gogoproto.stdduration) = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                10, *this_._impl_.expedited_voting_period_, this_._impl_.expedited_voting_period_->GetCachedSize(), target,
                stream);
          }

          // string expedited_threshold = 11 [json_name = "expeditedThreshold", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
          if (!this_._internal_expedited_threshold().empty()) {
            const std::string& _s = this_._internal_expedited_threshold();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.expedited_threshold");
            target = stream->WriteStringMaybeAliased(11, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin expedited_min_deposit = 12 [json_name = "expeditedMinDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_expedited_min_deposit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_expedited_min_deposit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    12, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // bool burn_vote_quorum = 13 [json_name = "burnVoteQuorum"];
          if (this_._internal_burn_vote_quorum() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                13, this_._internal_burn_vote_quorum(), target);
          }

          // bool burn_proposal_deposit_prevote = 14 [json_name = "burnProposalDepositPrevote"];
          if (this_._internal_burn_proposal_deposit_prevote() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                14, this_._internal_burn_proposal_deposit_prevote(), target);
          }

          // bool burn_vote_veto = 15 [json_name = "burnVoteVeto"];
          if (this_._internal_burn_vote_veto() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                15, this_._internal_burn_vote_veto(), target);
          }

          // string min_deposit_ratio = 16 [json_name = "minDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
          if (!this_._internal_min_deposit_ratio().empty()) {
            const std::string& _s = this_._internal_min_deposit_ratio();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1.Params.min_deposit_ratio");
            target = stream->WriteStringMaybeAliased(16, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_min_deposit_size();
              for (const auto& msg : this_._internal_min_deposit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.base.v1beta1.Coin expedited_min_deposit = 12 [json_name = "expeditedMinDeposit", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_expedited_min_deposit_size();
              for (const auto& msg : this_._internal_expedited_min_deposit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string quorum = 4 [json_name = "quorum", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_quorum().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_quorum());
            }
            // string threshold = 5 [json_name = "threshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_threshold());
            }
            // string veto_threshold = 6 [json_name = "vetoThreshold", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_veto_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_veto_threshold());
            }
            // string min_initial_deposit_ratio = 7 [json_name = "minInitialDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_min_initial_deposit_ratio().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_min_initial_deposit_ratio());
            }
            // string proposal_cancel_ratio = 8 [json_name = "proposalCancelRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
            if (!this_._internal_proposal_cancel_ratio().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_cancel_ratio());
            }
            // string proposal_cancel_dest = 9 [json_name = "proposalCancelDest", (.cosmos_proto.scalar) = "cosmos.AddressString", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
            if (!this_._internal_proposal_cancel_dest().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_proposal_cancel_dest());
            }
            // string expedited_threshold = 11 [json_name = "expeditedThreshold", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
            if (!this_._internal_expedited_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_expedited_threshold());
            }
            // string min_deposit_ratio = 16 [json_name = "minDepositRatio", (.cosmos_proto.scalar) = "cosmos.Dec", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
            if (!this_._internal_min_deposit_ratio().empty()) {
              total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_min_deposit_ratio());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.stdduration) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_deposit_period_);
            }
            // .google.protobuf.Duration voting_period = 3 [json_name = "votingPeriod", (.gogoproto.stdduration) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_period_);
            }
            // .google.protobuf.Duration expedited_voting_period = 10 [json_name = "expeditedVotingPeriod", (.gogoproto.stdduration) = true, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.expedited_voting_period_);
            }
          }
           {
            // bool burn_vote_quorum = 13 [json_name = "burnVoteQuorum"];
            if (this_._internal_burn_vote_quorum() != 0) {
              total_size += 2;
            }
            // bool burn_proposal_deposit_prevote = 14 [json_name = "burnProposalDepositPrevote"];
            if (this_._internal_burn_proposal_deposit_prevote() != 0) {
              total_size += 2;
            }
            // bool burn_vote_veto = 15 [json_name = "burnVoteVeto"];
            if (this_._internal_burn_vote_veto() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_min_deposit()->MergeFrom(
      from._internal_min_deposit());
  _this->_internal_mutable_expedited_min_deposit()->MergeFrom(
      from._internal_expedited_min_deposit());
  if (!from._internal_quorum().empty()) {
    _this->_internal_set_quorum(from._internal_quorum());
  }
  if (!from._internal_threshold().empty()) {
    _this->_internal_set_threshold(from._internal_threshold());
  }
  if (!from._internal_veto_threshold().empty()) {
    _this->_internal_set_veto_threshold(from._internal_veto_threshold());
  }
  if (!from._internal_min_initial_deposit_ratio().empty()) {
    _this->_internal_set_min_initial_deposit_ratio(from._internal_min_initial_deposit_ratio());
  }
  if (!from._internal_proposal_cancel_ratio().empty()) {
    _this->_internal_set_proposal_cancel_ratio(from._internal_proposal_cancel_ratio());
  }
  if (!from._internal_proposal_cancel_dest().empty()) {
    _this->_internal_set_proposal_cancel_dest(from._internal_proposal_cancel_dest());
  }
  if (!from._internal_expedited_threshold().empty()) {
    _this->_internal_set_expedited_threshold(from._internal_expedited_threshold());
  }
  if (!from._internal_min_deposit_ratio().empty()) {
    _this->_internal_set_min_deposit_ratio(from._internal_min_deposit_ratio());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.max_deposit_period_ != nullptr);
      if (_this->_impl_.max_deposit_period_ == nullptr) {
        _this->_impl_.max_deposit_period_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.max_deposit_period_);
      } else {
        _this->_impl_.max_deposit_period_->MergeFrom(*from._impl_.max_deposit_period_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.voting_period_ != nullptr);
      if (_this->_impl_.voting_period_ == nullptr) {
        _this->_impl_.voting_period_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.voting_period_);
      } else {
        _this->_impl_.voting_period_->MergeFrom(*from._impl_.voting_period_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.expedited_voting_period_ != nullptr);
      if (_this->_impl_.expedited_voting_period_ == nullptr) {
        _this->_impl_.expedited_voting_period_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.expedited_voting_period_);
      } else {
        _this->_impl_.expedited_voting_period_->MergeFrom(*from._impl_.expedited_voting_period_);
      }
    }
  }
  if (from._internal_burn_vote_quorum() != 0) {
    _this->_impl_.burn_vote_quorum_ = from._impl_.burn_vote_quorum_;
  }
  if (from._internal_burn_proposal_deposit_prevote() != 0) {
    _this->_impl_.burn_proposal_deposit_prevote_ = from._impl_.burn_proposal_deposit_prevote_;
  }
  if (from._internal_burn_vote_veto() != 0) {
    _this->_impl_.burn_vote_veto_ = from._impl_.burn_vote_veto_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.min_deposit_.InternalSwap(&other->_impl_.min_deposit_);
  _impl_.expedited_min_deposit_.InternalSwap(&other->_impl_.expedited_min_deposit_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.quorum_, &other->_impl_.quorum_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.threshold_, &other->_impl_.threshold_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.veto_threshold_, &other->_impl_.veto_threshold_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.min_initial_deposit_ratio_, &other->_impl_.min_initial_deposit_ratio_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_cancel_ratio_, &other->_impl_.proposal_cancel_ratio_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.proposal_cancel_dest_, &other->_impl_.proposal_cancel_dest_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.expedited_threshold_, &other->_impl_.expedited_threshold_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.min_deposit_ratio_, &other->_impl_.min_deposit_ratio_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Params, _impl_.burn_vote_veto_)
      + sizeof(Params::_impl_.burn_vote_veto_)
      - PROTOBUF_FIELD_OFFSET(Params, _impl_.max_deposit_period_)>(
          reinterpret_cast<char*>(&_impl_.max_deposit_period_),
          reinterpret_cast<char*>(&other->_impl_.max_deposit_period_));
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gov
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fgov_2fv1_2fgov_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
