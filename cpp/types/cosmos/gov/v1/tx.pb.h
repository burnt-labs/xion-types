// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/gov/v1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fgov_2fv1_2ftx_2eproto_2epb_2eh
#define cosmos_2fgov_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos/gov/v1/gov.pb.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "google/protobuf/any.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fgov_2fv1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fgov_2fv1_2ftx_2eproto;
namespace cosmos {
namespace gov {
namespace v1 {
class MsgCancelProposal;
struct MsgCancelProposalDefaultTypeInternal;
extern MsgCancelProposalDefaultTypeInternal _MsgCancelProposal_default_instance_;
class MsgCancelProposalResponse;
struct MsgCancelProposalResponseDefaultTypeInternal;
extern MsgCancelProposalResponseDefaultTypeInternal _MsgCancelProposalResponse_default_instance_;
class MsgDeposit;
struct MsgDepositDefaultTypeInternal;
extern MsgDepositDefaultTypeInternal _MsgDeposit_default_instance_;
class MsgDepositResponse;
struct MsgDepositResponseDefaultTypeInternal;
extern MsgDepositResponseDefaultTypeInternal _MsgDepositResponse_default_instance_;
class MsgExecLegacyContent;
struct MsgExecLegacyContentDefaultTypeInternal;
extern MsgExecLegacyContentDefaultTypeInternal _MsgExecLegacyContent_default_instance_;
class MsgExecLegacyContentResponse;
struct MsgExecLegacyContentResponseDefaultTypeInternal;
extern MsgExecLegacyContentResponseDefaultTypeInternal _MsgExecLegacyContentResponse_default_instance_;
class MsgSubmitProposal;
struct MsgSubmitProposalDefaultTypeInternal;
extern MsgSubmitProposalDefaultTypeInternal _MsgSubmitProposal_default_instance_;
class MsgSubmitProposalResponse;
struct MsgSubmitProposalResponseDefaultTypeInternal;
extern MsgSubmitProposalResponseDefaultTypeInternal _MsgSubmitProposalResponse_default_instance_;
class MsgUpdateParams;
struct MsgUpdateParamsDefaultTypeInternal;
extern MsgUpdateParamsDefaultTypeInternal _MsgUpdateParams_default_instance_;
class MsgUpdateParamsResponse;
struct MsgUpdateParamsResponseDefaultTypeInternal;
extern MsgUpdateParamsResponseDefaultTypeInternal _MsgUpdateParamsResponse_default_instance_;
class MsgVote;
struct MsgVoteDefaultTypeInternal;
extern MsgVoteDefaultTypeInternal _MsgVote_default_instance_;
class MsgVoteResponse;
struct MsgVoteResponseDefaultTypeInternal;
extern MsgVoteResponseDefaultTypeInternal _MsgVoteResponse_default_instance_;
class MsgVoteWeighted;
struct MsgVoteWeightedDefaultTypeInternal;
extern MsgVoteWeightedDefaultTypeInternal _MsgVoteWeighted_default_instance_;
class MsgVoteWeightedResponse;
struct MsgVoteWeightedResponseDefaultTypeInternal;
extern MsgVoteWeightedResponseDefaultTypeInternal _MsgVoteWeightedResponse_default_instance_;
}  // namespace v1
}  // namespace gov
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace gov {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgVoteWeightedResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVoteWeightedResponse) */ {
 public:
  inline MsgVoteWeightedResponse() : MsgVoteWeightedResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgVoteWeightedResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgVoteWeightedResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVoteWeightedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgVoteWeightedResponse(const MsgVoteWeightedResponse& from) : MsgVoteWeightedResponse(nullptr, from) {}
  inline MsgVoteWeightedResponse(MsgVoteWeightedResponse&& from) noexcept
      : MsgVoteWeightedResponse(nullptr, std::move(from)) {}
  inline MsgVoteWeightedResponse& operator=(const MsgVoteWeightedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVoteWeightedResponse& operator=(MsgVoteWeightedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVoteWeightedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVoteWeightedResponse* internal_default_instance() {
    return reinterpret_cast<const MsgVoteWeightedResponse*>(
        &_MsgVoteWeightedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(MsgVoteWeightedResponse& a, MsgVoteWeightedResponse& b) { a.Swap(&b); }
  inline void Swap(MsgVoteWeightedResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVoteWeightedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVoteWeightedResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgVoteWeightedResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgVoteWeightedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgVoteWeightedResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgVoteWeightedResponse"; }

 protected:
  explicit MsgVoteWeightedResponse(::google::protobuf::Arena* arena);
  MsgVoteWeightedResponse(::google::protobuf::Arena* arena, const MsgVoteWeightedResponse& from);
  MsgVoteWeightedResponse(::google::protobuf::Arena* arena, MsgVoteWeightedResponse&& from) noexcept
      : MsgVoteWeightedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVoteWeightedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgVoteWeightedResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgVoteResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVoteResponse) */ {
 public:
  inline MsgVoteResponse() : MsgVoteResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgVoteResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgVoteResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVoteResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgVoteResponse(const MsgVoteResponse& from) : MsgVoteResponse(nullptr, from) {}
  inline MsgVoteResponse(MsgVoteResponse&& from) noexcept
      : MsgVoteResponse(nullptr, std::move(from)) {}
  inline MsgVoteResponse& operator=(const MsgVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVoteResponse& operator=(MsgVoteResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVoteResponse* internal_default_instance() {
    return reinterpret_cast<const MsgVoteResponse*>(
        &_MsgVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgVoteResponse& a, MsgVoteResponse& b) { a.Swap(&b); }
  inline void Swap(MsgVoteResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVoteResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVoteResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgVoteResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgVoteResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgVoteResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgVoteResponse"; }

 protected:
  explicit MsgVoteResponse(::google::protobuf::Arena* arena);
  MsgVoteResponse(::google::protobuf::Arena* arena, const MsgVoteResponse& from);
  MsgVoteResponse(::google::protobuf::Arena* arena, MsgVoteResponse&& from) noexcept
      : MsgVoteResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVoteResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgVoteResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgVote final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVote) */ {
 public:
  inline MsgVote() : MsgVote(nullptr) {}
  ~MsgVote() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgVote* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgVote));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVote(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgVote(const MsgVote& from) : MsgVote(nullptr, from) {}
  inline MsgVote(MsgVote&& from) noexcept
      : MsgVote(nullptr, std::move(from)) {}
  inline MsgVote& operator=(const MsgVote& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVote& operator=(MsgVote&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVote& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVote* internal_default_instance() {
    return reinterpret_cast<const MsgVote*>(
        &_MsgVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgVote& a, MsgVote& b) { a.Swap(&b); }
  inline void Swap(MsgVote* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVote* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVote* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgVote>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgVote& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgVote& from) { MsgVote::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgVote* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgVote"; }

 protected:
  explicit MsgVote(::google::protobuf::Arena* arena);
  MsgVote(::google::protobuf::Arena* arena, const MsgVote& from);
  MsgVote(::google::protobuf::Arena* arena, MsgVote&& from) noexcept
      : MsgVote(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVoterFieldNumber = 2,
    kMetadataFieldNumber = 4,
    kProposalIdFieldNumber = 1,
    kOptionFieldNumber = 3,
  };
  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_voter() ;
  const std::string& voter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_voter(Arg_&& arg, Args_... args);
  std::string* mutable_voter();
  PROTOBUF_NODISCARD std::string* release_voter();
  void set_allocated_voter(std::string* value);

  private:
  const std::string& _internal_voter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voter(
      const std::string& value);
  std::string* _internal_mutable_voter();

  public:
  // string metadata = 4 [json_name = "metadata"];
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_metadata();
  PROTOBUF_NODISCARD std::string* release_metadata();
  void set_allocated_metadata(std::string* value);

  private:
  const std::string& _internal_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(
      const std::string& value);
  std::string* _internal_mutable_metadata();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // .cosmos.gov.v1.VoteOption option = 3 [json_name = "option"];
  void clear_option() ;
  ::cosmos::gov::v1::VoteOption option() const;
  void set_option(::cosmos::gov::v1::VoteOption value);

  private:
  ::cosmos::gov::v1::VoteOption _internal_option() const;
  void _internal_set_option(::cosmos::gov::v1::VoteOption value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVote)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      43, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgVote& from_msg);
    ::google::protobuf::internal::ArenaStringPtr voter_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    ::uint64_t proposal_id_;
    int option_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParamsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgUpdateParamsResponse) */ {
 public:
  inline MsgUpdateParamsResponse() : MsgUpdateParamsResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParamsResponse(const MsgUpdateParamsResponse& from) : MsgUpdateParamsResponse(nullptr, from) {}
  inline MsgUpdateParamsResponse(MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(nullptr, std::move(from)) {}
  inline MsgUpdateParamsResponse& operator=(const MsgUpdateParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParamsResponse& operator=(MsgUpdateParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParamsResponse* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParamsResponse*>(
        &_MsgUpdateParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(MsgUpdateParamsResponse& a, MsgUpdateParamsResponse& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgUpdateParamsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgUpdateParamsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgUpdateParamsResponse"; }

 protected:
  explicit MsgUpdateParamsResponse(::google::protobuf::Arena* arena);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, const MsgUpdateParamsResponse& from);
  MsgUpdateParamsResponse(::google::protobuf::Arena* arena, MsgUpdateParamsResponse&& from) noexcept
      : MsgUpdateParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgUpdateParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParamsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSubmitProposalResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgSubmitProposalResponse) */ {
 public:
  inline MsgSubmitProposalResponse() : MsgSubmitProposalResponse(nullptr) {}
  ~MsgSubmitProposalResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSubmitProposalResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSubmitProposalResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSubmitProposalResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSubmitProposalResponse(const MsgSubmitProposalResponse& from) : MsgSubmitProposalResponse(nullptr, from) {}
  inline MsgSubmitProposalResponse(MsgSubmitProposalResponse&& from) noexcept
      : MsgSubmitProposalResponse(nullptr, std::move(from)) {}
  inline MsgSubmitProposalResponse& operator=(const MsgSubmitProposalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSubmitProposalResponse& operator=(MsgSubmitProposalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSubmitProposalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSubmitProposalResponse* internal_default_instance() {
    return reinterpret_cast<const MsgSubmitProposalResponse*>(
        &_MsgSubmitProposalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgSubmitProposalResponse& a, MsgSubmitProposalResponse& b) { a.Swap(&b); }
  inline void Swap(MsgSubmitProposalResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSubmitProposalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSubmitProposalResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSubmitProposalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSubmitProposalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSubmitProposalResponse& from) { MsgSubmitProposalResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSubmitProposalResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgSubmitProposalResponse"; }

 protected:
  explicit MsgSubmitProposalResponse(::google::protobuf::Arena* arena);
  MsgSubmitProposalResponse(::google::protobuf::Arena* arena, const MsgSubmitProposalResponse& from);
  MsgSubmitProposalResponse(::google::protobuf::Arena* arena, MsgSubmitProposalResponse&& from) noexcept
      : MsgSubmitProposalResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProposalIdFieldNumber = 1,
  };
  // uint64 proposal_id = 1 [json_name = "proposalId"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgSubmitProposalResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSubmitProposalResponse& from_msg);
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgExecLegacyContentResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgExecLegacyContentResponse) */ {
 public:
  inline MsgExecLegacyContentResponse() : MsgExecLegacyContentResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgExecLegacyContentResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgExecLegacyContentResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecLegacyContentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgExecLegacyContentResponse(const MsgExecLegacyContentResponse& from) : MsgExecLegacyContentResponse(nullptr, from) {}
  inline MsgExecLegacyContentResponse(MsgExecLegacyContentResponse&& from) noexcept
      : MsgExecLegacyContentResponse(nullptr, std::move(from)) {}
  inline MsgExecLegacyContentResponse& operator=(const MsgExecLegacyContentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecLegacyContentResponse& operator=(MsgExecLegacyContentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecLegacyContentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecLegacyContentResponse* internal_default_instance() {
    return reinterpret_cast<const MsgExecLegacyContentResponse*>(
        &_MsgExecLegacyContentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgExecLegacyContentResponse& a, MsgExecLegacyContentResponse& b) { a.Swap(&b); }
  inline void Swap(MsgExecLegacyContentResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecLegacyContentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecLegacyContentResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgExecLegacyContentResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgExecLegacyContentResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgExecLegacyContentResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgExecLegacyContentResponse"; }

 protected:
  explicit MsgExecLegacyContentResponse(::google::protobuf::Arena* arena);
  MsgExecLegacyContentResponse(::google::protobuf::Arena* arena, const MsgExecLegacyContentResponse& from);
  MsgExecLegacyContentResponse(::google::protobuf::Arena* arena, MsgExecLegacyContentResponse&& from) noexcept
      : MsgExecLegacyContentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgExecLegacyContentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgExecLegacyContentResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDepositResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgDepositResponse) */ {
 public:
  inline MsgDepositResponse() : MsgDepositResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDepositResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDepositResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDepositResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDepositResponse(const MsgDepositResponse& from) : MsgDepositResponse(nullptr, from) {}
  inline MsgDepositResponse(MsgDepositResponse&& from) noexcept
      : MsgDepositResponse(nullptr, std::move(from)) {}
  inline MsgDepositResponse& operator=(const MsgDepositResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDepositResponse& operator=(MsgDepositResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDepositResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDepositResponse* internal_default_instance() {
    return reinterpret_cast<const MsgDepositResponse*>(
        &_MsgDepositResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(MsgDepositResponse& a, MsgDepositResponse& b) { a.Swap(&b); }
  inline void Swap(MsgDepositResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDepositResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDepositResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgDepositResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgDepositResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgDepositResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgDepositResponse"; }

 protected:
  explicit MsgDepositResponse(::google::protobuf::Arena* arena);
  MsgDepositResponse(::google::protobuf::Arena* arena, const MsgDepositResponse& from);
  MsgDepositResponse(::google::protobuf::Arena* arena, MsgDepositResponse&& from) noexcept
      : MsgDepositResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgDepositResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDepositResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCancelProposal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgCancelProposal) */ {
 public:
  inline MsgCancelProposal() : MsgCancelProposal(nullptr) {}
  ~MsgCancelProposal() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCancelProposal* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCancelProposal));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCancelProposal(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCancelProposal(const MsgCancelProposal& from) : MsgCancelProposal(nullptr, from) {}
  inline MsgCancelProposal(MsgCancelProposal&& from) noexcept
      : MsgCancelProposal(nullptr, std::move(from)) {}
  inline MsgCancelProposal& operator=(const MsgCancelProposal& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCancelProposal& operator=(MsgCancelProposal&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCancelProposal& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCancelProposal* internal_default_instance() {
    return reinterpret_cast<const MsgCancelProposal*>(
        &_MsgCancelProposal_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MsgCancelProposal& a, MsgCancelProposal& b) { a.Swap(&b); }
  inline void Swap(MsgCancelProposal* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCancelProposal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCancelProposal* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCancelProposal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCancelProposal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCancelProposal& from) { MsgCancelProposal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCancelProposal* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgCancelProposal"; }

 protected:
  explicit MsgCancelProposal(::google::protobuf::Arena* arena);
  MsgCancelProposal(::google::protobuf::Arena* arena, const MsgCancelProposal& from);
  MsgCancelProposal(::google::protobuf::Arena* arena, MsgCancelProposal&& from) noexcept
      : MsgCancelProposal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProposerFieldNumber = 2,
    kProposalIdFieldNumber = 1,
  };
  // string proposer = 2 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_proposer() ;
  const std::string& proposer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proposer(Arg_&& arg, Args_... args);
  std::string* mutable_proposer();
  PROTOBUF_NODISCARD std::string* release_proposer();
  void set_allocated_proposer(std::string* value);

  private:
  const std::string& _internal_proposer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proposer(
      const std::string& value);
  std::string* _internal_mutable_proposer();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgCancelProposal)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCancelProposal& from_msg);
    ::google::protobuf::internal::ArenaStringPtr proposer_;
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgVoteWeighted final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgVoteWeighted) */ {
 public:
  inline MsgVoteWeighted() : MsgVoteWeighted(nullptr) {}
  ~MsgVoteWeighted() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgVoteWeighted* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgVoteWeighted));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgVoteWeighted(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgVoteWeighted(const MsgVoteWeighted& from) : MsgVoteWeighted(nullptr, from) {}
  inline MsgVoteWeighted(MsgVoteWeighted&& from) noexcept
      : MsgVoteWeighted(nullptr, std::move(from)) {}
  inline MsgVoteWeighted& operator=(const MsgVoteWeighted& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgVoteWeighted& operator=(MsgVoteWeighted&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgVoteWeighted& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgVoteWeighted* internal_default_instance() {
    return reinterpret_cast<const MsgVoteWeighted*>(
        &_MsgVoteWeighted_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MsgVoteWeighted& a, MsgVoteWeighted& b) { a.Swap(&b); }
  inline void Swap(MsgVoteWeighted* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgVoteWeighted* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgVoteWeighted* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgVoteWeighted>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgVoteWeighted& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgVoteWeighted& from) { MsgVoteWeighted::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgVoteWeighted* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgVoteWeighted"; }

 protected:
  explicit MsgVoteWeighted(::google::protobuf::Arena* arena);
  MsgVoteWeighted(::google::protobuf::Arena* arena, const MsgVoteWeighted& from);
  MsgVoteWeighted(::google::protobuf::Arena* arena, MsgVoteWeighted&& from) noexcept
      : MsgVoteWeighted(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionsFieldNumber = 3,
    kVoterFieldNumber = 2,
    kMetadataFieldNumber = 4,
    kProposalIdFieldNumber = 1,
  };
  // repeated .cosmos.gov.v1.WeightedVoteOption options = 3 [json_name = "options"];
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  ::cosmos::gov::v1::WeightedVoteOption* mutable_options(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>* mutable_options();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>& _internal_options() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>* _internal_mutable_options();
  public:
  const ::cosmos::gov::v1::WeightedVoteOption& options(int index) const;
  ::cosmos::gov::v1::WeightedVoteOption* add_options();
  const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>& options() const;
  // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_voter() ;
  const std::string& voter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_voter(Arg_&& arg, Args_... args);
  std::string* mutable_voter();
  PROTOBUF_NODISCARD std::string* release_voter();
  void set_allocated_voter(std::string* value);

  private:
  const std::string& _internal_voter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_voter(
      const std::string& value);
  std::string* _internal_mutable_voter();

  public:
  // string metadata = 4 [json_name = "metadata"];
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_metadata();
  PROTOBUF_NODISCARD std::string* release_metadata();
  void set_allocated_metadata(std::string* value);

  private:
  const std::string& _internal_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(
      const std::string& value);
  std::string* _internal_mutable_metadata();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgVoteWeighted)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgVoteWeighted& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::gov::v1::WeightedVoteOption > options_;
    ::google::protobuf::internal::ArenaStringPtr voter_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgSubmitProposal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgSubmitProposal) */ {
 public:
  inline MsgSubmitProposal() : MsgSubmitProposal(nullptr) {}
  ~MsgSubmitProposal() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgSubmitProposal* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgSubmitProposal));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgSubmitProposal(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgSubmitProposal(const MsgSubmitProposal& from) : MsgSubmitProposal(nullptr, from) {}
  inline MsgSubmitProposal(MsgSubmitProposal&& from) noexcept
      : MsgSubmitProposal(nullptr, std::move(from)) {}
  inline MsgSubmitProposal& operator=(const MsgSubmitProposal& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgSubmitProposal& operator=(MsgSubmitProposal&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgSubmitProposal& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgSubmitProposal* internal_default_instance() {
    return reinterpret_cast<const MsgSubmitProposal*>(
        &_MsgSubmitProposal_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgSubmitProposal& a, MsgSubmitProposal& b) { a.Swap(&b); }
  inline void Swap(MsgSubmitProposal* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgSubmitProposal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgSubmitProposal* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgSubmitProposal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgSubmitProposal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgSubmitProposal& from) { MsgSubmitProposal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgSubmitProposal* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgSubmitProposal"; }

 protected:
  explicit MsgSubmitProposal(::google::protobuf::Arena* arena);
  MsgSubmitProposal(::google::protobuf::Arena* arena, const MsgSubmitProposal& from);
  MsgSubmitProposal(::google::protobuf::Arena* arena, MsgSubmitProposal&& from) noexcept
      : MsgSubmitProposal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 1,
    kInitialDepositFieldNumber = 2,
    kProposerFieldNumber = 3,
    kMetadataFieldNumber = 4,
    kTitleFieldNumber = 5,
    kSummaryFieldNumber = 6,
    kExpeditedFieldNumber = 7,
  };
  // repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::google::protobuf::Any* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* _internal_mutable_messages();
  public:
  const ::google::protobuf::Any& messages(int index) const;
  ::google::protobuf::Any* add_messages();
  const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& messages() const;
  // repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int initial_deposit_size() const;
  private:
  int _internal_initial_deposit_size() const;

  public:
  void clear_initial_deposit() ;
  ::cosmos::base::v1beta1::Coin* mutable_initial_deposit(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_initial_deposit();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_initial_deposit() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_initial_deposit();
  public:
  const ::cosmos::base::v1beta1::Coin& initial_deposit(int index) const;
  ::cosmos::base::v1beta1::Coin* add_initial_deposit();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& initial_deposit() const;
  // string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_proposer() ;
  const std::string& proposer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_proposer(Arg_&& arg, Args_... args);
  std::string* mutable_proposer();
  PROTOBUF_NODISCARD std::string* release_proposer();
  void set_allocated_proposer(std::string* value);

  private:
  const std::string& _internal_proposer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_proposer(
      const std::string& value);
  std::string* _internal_mutable_proposer();

  public:
  // string metadata = 4 [json_name = "metadata"];
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_metadata();
  PROTOBUF_NODISCARD std::string* release_metadata();
  void set_allocated_metadata(std::string* value);

  private:
  const std::string& _internal_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(
      const std::string& value);
  std::string* _internal_mutable_metadata();

  public:
  // string title = 5 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string summary = 6 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
  void clear_summary() ;
  const std::string& summary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_summary(Arg_&& arg, Args_... args);
  std::string* mutable_summary();
  PROTOBUF_NODISCARD std::string* release_summary();
  void set_allocated_summary(std::string* value);

  private:
  const std::string& _internal_summary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_summary(
      const std::string& value);
  std::string* _internal_mutable_summary();

  public:
  // bool expedited = 7 [json_name = "expedited", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
  void clear_expedited() ;
  bool expedited() const;
  void set_expedited(bool value);

  private:
  bool _internal_expedited() const;
  void _internal_set_expedited(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgSubmitProposal)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgSubmitProposal& from_msg);
    ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > messages_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > initial_deposit_;
    ::google::protobuf::internal::ArenaStringPtr proposer_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr summary_;
    bool expedited_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgExecLegacyContent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgExecLegacyContent) */ {
 public:
  inline MsgExecLegacyContent() : MsgExecLegacyContent(nullptr) {}
  ~MsgExecLegacyContent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgExecLegacyContent* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgExecLegacyContent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgExecLegacyContent(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgExecLegacyContent(const MsgExecLegacyContent& from) : MsgExecLegacyContent(nullptr, from) {}
  inline MsgExecLegacyContent(MsgExecLegacyContent&& from) noexcept
      : MsgExecLegacyContent(nullptr, std::move(from)) {}
  inline MsgExecLegacyContent& operator=(const MsgExecLegacyContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgExecLegacyContent& operator=(MsgExecLegacyContent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgExecLegacyContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgExecLegacyContent* internal_default_instance() {
    return reinterpret_cast<const MsgExecLegacyContent*>(
        &_MsgExecLegacyContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgExecLegacyContent& a, MsgExecLegacyContent& b) { a.Swap(&b); }
  inline void Swap(MsgExecLegacyContent* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgExecLegacyContent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgExecLegacyContent* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgExecLegacyContent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgExecLegacyContent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgExecLegacyContent& from) { MsgExecLegacyContent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgExecLegacyContent* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgExecLegacyContent"; }

 protected:
  explicit MsgExecLegacyContent(::google::protobuf::Arena* arena);
  MsgExecLegacyContent(::google::protobuf::Arena* arena, const MsgExecLegacyContent& from);
  MsgExecLegacyContent(::google::protobuf::Arena* arena, MsgExecLegacyContent&& from) noexcept
      : MsgExecLegacyContent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 2,
    kContentFieldNumber = 1,
  };
  // string authority = 2 [json_name = "authority"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
  bool has_content() const;
  void clear_content() ;
  const ::google::protobuf::Any& content() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_content();
  ::google::protobuf::Any* mutable_content();
  void set_allocated_content(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_content(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_content();

  private:
  const ::google::protobuf::Any& _internal_content() const;
  ::google::protobuf::Any* _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgExecLegacyContent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      52, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgExecLegacyContent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::google::protobuf::Any* content_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgDeposit final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgDeposit) */ {
 public:
  inline MsgDeposit() : MsgDeposit(nullptr) {}
  ~MsgDeposit() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDeposit* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDeposit));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDeposit(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDeposit(const MsgDeposit& from) : MsgDeposit(nullptr, from) {}
  inline MsgDeposit(MsgDeposit&& from) noexcept
      : MsgDeposit(nullptr, std::move(from)) {}
  inline MsgDeposit& operator=(const MsgDeposit& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDeposit& operator=(MsgDeposit&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDeposit& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDeposit* internal_default_instance() {
    return reinterpret_cast<const MsgDeposit*>(
        &_MsgDeposit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(MsgDeposit& a, MsgDeposit& b) { a.Swap(&b); }
  inline void Swap(MsgDeposit* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDeposit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDeposit* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgDeposit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgDeposit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgDeposit& from) { MsgDeposit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgDeposit* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgDeposit"; }

 protected:
  explicit MsgDeposit(::google::protobuf::Arena* arena);
  MsgDeposit(::google::protobuf::Arena* arena, const MsgDeposit& from);
  MsgDeposit(::google::protobuf::Arena* arena, MsgDeposit&& from) noexcept
      : MsgDeposit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAmountFieldNumber = 3,
    kDepositorFieldNumber = 2,
    kProposalIdFieldNumber = 1,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_amount();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& amount() const;
  // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_depositor() ;
  const std::string& depositor() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_depositor(Arg_&& arg, Args_... args);
  std::string* mutable_depositor();
  PROTOBUF_NODISCARD std::string* release_depositor();
  void set_allocated_depositor(std::string* value);

  private:
  const std::string& _internal_depositor() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_depositor(
      const std::string& value);
  std::string* _internal_mutable_depositor();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgDeposit)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDeposit& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::google::protobuf::internal::ArenaStringPtr depositor_;
    ::uint64_t proposal_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCancelProposalResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgCancelProposalResponse) */ {
 public:
  inline MsgCancelProposalResponse() : MsgCancelProposalResponse(nullptr) {}
  ~MsgCancelProposalResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCancelProposalResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCancelProposalResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCancelProposalResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCancelProposalResponse(const MsgCancelProposalResponse& from) : MsgCancelProposalResponse(nullptr, from) {}
  inline MsgCancelProposalResponse(MsgCancelProposalResponse&& from) noexcept
      : MsgCancelProposalResponse(nullptr, std::move(from)) {}
  inline MsgCancelProposalResponse& operator=(const MsgCancelProposalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCancelProposalResponse& operator=(MsgCancelProposalResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCancelProposalResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCancelProposalResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCancelProposalResponse*>(
        &_MsgCancelProposalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(MsgCancelProposalResponse& a, MsgCancelProposalResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCancelProposalResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCancelProposalResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCancelProposalResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCancelProposalResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCancelProposalResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCancelProposalResponse& from) { MsgCancelProposalResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCancelProposalResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgCancelProposalResponse"; }

 protected:
  explicit MsgCancelProposalResponse(::google::protobuf::Arena* arena);
  MsgCancelProposalResponse(::google::protobuf::Arena* arena, const MsgCancelProposalResponse& from);
  MsgCancelProposalResponse(::google::protobuf::Arena* arena, MsgCancelProposalResponse&& from) noexcept
      : MsgCancelProposalResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCanceledTimeFieldNumber = 2,
    kProposalIdFieldNumber = 1,
    kCanceledHeightFieldNumber = 3,
  };
  // .google.protobuf.Timestamp canceled_time = 2 [json_name = "canceledTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
  bool has_canceled_time() const;
  void clear_canceled_time() ;
  const ::google::protobuf::Timestamp& canceled_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_canceled_time();
  ::google::protobuf::Timestamp* mutable_canceled_time();
  void set_allocated_canceled_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_canceled_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_canceled_time();

  private:
  const ::google::protobuf::Timestamp& _internal_canceled_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_canceled_time();

  public:
  // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id"];
  void clear_proposal_id() ;
  ::uint64_t proposal_id() const;
  void set_proposal_id(::uint64_t value);

  private:
  ::uint64_t _internal_proposal_id() const;
  void _internal_set_proposal_id(::uint64_t value);

  public:
  // uint64 canceled_height = 3 [json_name = "canceledHeight"];
  void clear_canceled_height() ;
  ::uint64_t canceled_height() const;
  void set_canceled_height(::uint64_t value);

  private:
  ::uint64_t _internal_canceled_height() const;
  void _internal_set_canceled_height(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgCancelProposalResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCancelProposalResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* canceled_time_;
    ::uint64_t proposal_id_;
    ::uint64_t canceled_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgUpdateParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.gov.v1.MsgUpdateParams) */ {
 public:
  inline MsgUpdateParams() : MsgUpdateParams(nullptr) {}
  ~MsgUpdateParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgUpdateParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgUpdateParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgUpdateParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgUpdateParams(const MsgUpdateParams& from) : MsgUpdateParams(nullptr, from) {}
  inline MsgUpdateParams(MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(nullptr, std::move(from)) {}
  inline MsgUpdateParams& operator=(const MsgUpdateParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgUpdateParams& operator=(MsgUpdateParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgUpdateParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgUpdateParams* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateParams*>(
        &_MsgUpdateParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MsgUpdateParams& a, MsgUpdateParams& b) { a.Swap(&b); }
  inline void Swap(MsgUpdateParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgUpdateParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgUpdateParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgUpdateParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgUpdateParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgUpdateParams& from) { MsgUpdateParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgUpdateParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.gov.v1.MsgUpdateParams"; }

 protected:
  explicit MsgUpdateParams(::google::protobuf::Arena* arena);
  MsgUpdateParams(::google::protobuf::Arena* arena, const MsgUpdateParams& from);
  MsgUpdateParams(::google::protobuf::Arena* arena, MsgUpdateParams&& from) noexcept
      : MsgUpdateParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthorityFieldNumber = 1,
    kParamsFieldNumber = 2,
  };
  // string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_authority() ;
  const std::string& authority() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authority(Arg_&& arg, Args_... args);
  std::string* mutable_authority();
  PROTOBUF_NODISCARD std::string* release_authority();
  void set_allocated_authority(std::string* value);

  private:
  const std::string& _internal_authority() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authority(
      const std::string& value);
  std::string* _internal_mutable_authority();

  public:
  // .cosmos.gov.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::gov::v1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::gov::v1::Params* release_params();
  ::cosmos::gov::v1::Params* mutable_params();
  void set_allocated_params(::cosmos::gov::v1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::gov::v1::Params* value);
  ::cosmos::gov::v1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::gov::v1::Params& _internal_params() const;
  ::cosmos::gov::v1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.gov.v1.MsgUpdateParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      47, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgUpdateParams& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr authority_;
    ::cosmos::gov::v1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fgov_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgSubmitProposal

// repeated .google.protobuf.Any messages = 1 [json_name = "messages"];
inline int MsgSubmitProposal::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int MsgSubmitProposal::messages_size() const {
  return _internal_messages_size();
}
inline ::google::protobuf::Any* MsgSubmitProposal::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>* MsgSubmitProposal::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgSubmitProposal.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::google::protobuf::Any& MsgSubmitProposal::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _internal_messages().Get(index);
}
inline ::google::protobuf::Any* MsgSubmitProposal::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::Any* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>& MsgSubmitProposal::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgSubmitProposal.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>&
MsgSubmitProposal::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::google::protobuf::Any>*
MsgSubmitProposal::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// repeated .cosmos.base.v1beta1.Coin initial_deposit = 2 [json_name = "initialDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int MsgSubmitProposal::_internal_initial_deposit_size() const {
  return _internal_initial_deposit().size();
}
inline int MsgSubmitProposal::initial_deposit_size() const {
  return _internal_initial_deposit_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgSubmitProposal::mutable_initial_deposit(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _internal_mutable_initial_deposit()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgSubmitProposal::mutable_initial_deposit()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_initial_deposit();
}
inline const ::cosmos::base::v1beta1::Coin& MsgSubmitProposal::initial_deposit(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _internal_initial_deposit().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgSubmitProposal::add_initial_deposit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_initial_deposit()->Add();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgSubmitProposal::initial_deposit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgSubmitProposal.initial_deposit)
  return _internal_initial_deposit();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgSubmitProposal::_internal_initial_deposit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initial_deposit_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgSubmitProposal::_internal_mutable_initial_deposit() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.initial_deposit_;
}

// string proposer = 3 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgSubmitProposal::clear_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::proposer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.proposer)
  return _internal_proposer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_proposer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.proposer)
}
inline std::string* MsgSubmitProposal::mutable_proposer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proposer();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.proposer)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_proposer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposer_.Get();
}
inline void MsgSubmitProposal::_internal_set_proposer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.Set(value, GetArena());
}
inline std::string* MsgSubmitProposal::_internal_mutable_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proposer_.Mutable( GetArena());
}
inline std::string* MsgSubmitProposal::release_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.proposer)
  return _impl_.proposer_.Release();
}
inline void MsgSubmitProposal::set_allocated_proposer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proposer_.IsDefault()) {
    _impl_.proposer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.proposer)
}

// string metadata = 4 [json_name = "metadata"];
inline void MsgSubmitProposal::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_metadata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.metadata)
}
inline std::string* MsgSubmitProposal::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.metadata)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void MsgSubmitProposal::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* MsgSubmitProposal::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* MsgSubmitProposal::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.metadata)
  return _impl_.metadata_.Release();
}
inline void MsgSubmitProposal::set_allocated_metadata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metadata_.IsDefault()) {
    _impl_.metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.metadata)
}

// string title = 5 [json_name = "title", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
inline void MsgSubmitProposal::clear_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_title(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.title)
}
inline std::string* MsgSubmitProposal::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.title)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_title() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.title_.Get();
}
inline void MsgSubmitProposal::_internal_set_title(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.Set(value, GetArena());
}
inline std::string* MsgSubmitProposal::_internal_mutable_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* MsgSubmitProposal::release_title() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.title)
  return _impl_.title_.Release();
}
inline void MsgSubmitProposal::set_allocated_title(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.title_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.title)
}

// string summary = 6 [json_name = "summary", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
inline void MsgSubmitProposal::clear_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.ClearToEmpty();
}
inline const std::string& MsgSubmitProposal::summary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.summary)
  return _internal_summary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgSubmitProposal::set_summary(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.summary)
}
inline std::string* MsgSubmitProposal::mutable_summary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_summary();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgSubmitProposal.summary)
  return _s;
}
inline const std::string& MsgSubmitProposal::_internal_summary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.summary_.Get();
}
inline void MsgSubmitProposal::_internal_set_summary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.Set(value, GetArena());
}
inline std::string* MsgSubmitProposal::_internal_mutable_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.summary_.Mutable( GetArena());
}
inline std::string* MsgSubmitProposal::release_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgSubmitProposal.summary)
  return _impl_.summary_.Release();
}
inline void MsgSubmitProposal::set_allocated_summary(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.summary_.IsDefault()) {
    _impl_.summary_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgSubmitProposal.summary)
}

// bool expedited = 7 [json_name = "expedited", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.50"];
inline void MsgSubmitProposal::clear_expedited() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expedited_ = false;
}
inline bool MsgSubmitProposal::expedited() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposal.expedited)
  return _internal_expedited();
}
inline void MsgSubmitProposal::set_expedited(bool value) {
  _internal_set_expedited(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposal.expedited)
}
inline bool MsgSubmitProposal::_internal_expedited() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expedited_;
}
inline void MsgSubmitProposal::_internal_set_expedited(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expedited_ = value;
}

// -------------------------------------------------------------------

// MsgSubmitProposalResponse

// uint64 proposal_id = 1 [json_name = "proposalId"];
inline void MsgSubmitProposalResponse::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgSubmitProposalResponse::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgSubmitProposalResponse.proposal_id)
  return _internal_proposal_id();
}
inline void MsgSubmitProposalResponse::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgSubmitProposalResponse.proposal_id)
}
inline ::uint64_t MsgSubmitProposalResponse::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void MsgSubmitProposalResponse::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// -------------------------------------------------------------------

// MsgExecLegacyContent

// .google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
inline bool MsgExecLegacyContent::has_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.content_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& MsgExecLegacyContent::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.content_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& MsgExecLegacyContent::content() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgExecLegacyContent.content)
  return _internal_content();
}
inline void MsgExecLegacyContent::unsafe_arena_set_allocated_content(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.content_);
  }
  _impl_.content_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.MsgExecLegacyContent.content)
}
inline ::google::protobuf::Any* MsgExecLegacyContent::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.content_;
  _impl_.content_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* MsgExecLegacyContent::unsafe_arena_release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgExecLegacyContent.content)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.content_;
  _impl_.content_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* MsgExecLegacyContent::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.content_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.content_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.content_;
}
inline ::google::protobuf::Any* MsgExecLegacyContent::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgExecLegacyContent.content)
  return _msg;
}
inline void MsgExecLegacyContent::set_allocated_content(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.content_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgExecLegacyContent.content)
}

// string authority = 2 [json_name = "authority"];
inline void MsgExecLegacyContent::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgExecLegacyContent::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgExecLegacyContent.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgExecLegacyContent::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgExecLegacyContent.authority)
}
inline std::string* MsgExecLegacyContent::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgExecLegacyContent.authority)
  return _s;
}
inline const std::string& MsgExecLegacyContent::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgExecLegacyContent::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgExecLegacyContent::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgExecLegacyContent::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgExecLegacyContent.authority)
  return _impl_.authority_.Release();
}
inline void MsgExecLegacyContent::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgExecLegacyContent.authority)
}

// -------------------------------------------------------------------

// MsgExecLegacyContentResponse

// -------------------------------------------------------------------

// MsgVote

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
inline void MsgVote::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgVote::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.proposal_id)
  return _internal_proposal_id();
}
inline void MsgVote::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.proposal_id)
}
inline ::uint64_t MsgVote::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void MsgVote::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgVote::clear_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.ClearToEmpty();
}
inline const std::string& MsgVote::voter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.voter)
  return _internal_voter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVote::set_voter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.voter)
}
inline std::string* MsgVote::mutable_voter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_voter();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVote.voter)
  return _s;
}
inline const std::string& MsgVote::_internal_voter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voter_.Get();
}
inline void MsgVote::_internal_set_voter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(value, GetArena());
}
inline std::string* MsgVote::_internal_mutable_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.voter_.Mutable( GetArena());
}
inline std::string* MsgVote::release_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVote.voter)
  return _impl_.voter_.Release();
}
inline void MsgVote::set_allocated_voter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.voter_.IsDefault()) {
    _impl_.voter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVote.voter)
}

// .cosmos.gov.v1.VoteOption option = 3 [json_name = "option"];
inline void MsgVote::clear_option() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_ = 0;
}
inline ::cosmos::gov::v1::VoteOption MsgVote::option() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.option)
  return _internal_option();
}
inline void MsgVote::set_option(::cosmos::gov::v1::VoteOption value) {
  _internal_set_option(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.option)
}
inline ::cosmos::gov::v1::VoteOption MsgVote::_internal_option() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::cosmos::gov::v1::VoteOption>(_impl_.option_);
}
inline void MsgVote::_internal_set_option(::cosmos::gov::v1::VoteOption value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.option_ = value;
}

// string metadata = 4 [json_name = "metadata"];
inline void MsgVote::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
}
inline const std::string& MsgVote::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVote.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVote::set_metadata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVote.metadata)
}
inline std::string* MsgVote::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVote.metadata)
  return _s;
}
inline const std::string& MsgVote::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void MsgVote::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* MsgVote::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* MsgVote::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVote.metadata)
  return _impl_.metadata_.Release();
}
inline void MsgVote::set_allocated_metadata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metadata_.IsDefault()) {
    _impl_.metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVote.metadata)
}

// -------------------------------------------------------------------

// MsgVoteResponse

// -------------------------------------------------------------------

// MsgVoteWeighted

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
inline void MsgVoteWeighted::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgVoteWeighted::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.proposal_id)
  return _internal_proposal_id();
}
inline void MsgVoteWeighted::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVoteWeighted.proposal_id)
}
inline ::uint64_t MsgVoteWeighted::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void MsgVoteWeighted::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgVoteWeighted::clear_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.ClearToEmpty();
}
inline const std::string& MsgVoteWeighted::voter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.voter)
  return _internal_voter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVoteWeighted::set_voter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVoteWeighted.voter)
}
inline std::string* MsgVoteWeighted::mutable_voter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_voter();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVoteWeighted.voter)
  return _s;
}
inline const std::string& MsgVoteWeighted::_internal_voter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voter_.Get();
}
inline void MsgVoteWeighted::_internal_set_voter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.Set(value, GetArena());
}
inline std::string* MsgVoteWeighted::_internal_mutable_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.voter_.Mutable( GetArena());
}
inline std::string* MsgVoteWeighted::release_voter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVoteWeighted.voter)
  return _impl_.voter_.Release();
}
inline void MsgVoteWeighted::set_allocated_voter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.voter_.IsDefault()) {
    _impl_.voter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVoteWeighted.voter)
}

// repeated .cosmos.gov.v1.WeightedVoteOption options = 3 [json_name = "options"];
inline int MsgVoteWeighted::_internal_options_size() const {
  return _internal_options().size();
}
inline int MsgVoteWeighted::options_size() const {
  return _internal_options_size();
}
inline ::cosmos::gov::v1::WeightedVoteOption* MsgVoteWeighted::mutable_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVoteWeighted.options)
  return _internal_mutable_options()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>* MsgVoteWeighted::mutable_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgVoteWeighted.options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_options();
}
inline const ::cosmos::gov::v1::WeightedVoteOption& MsgVoteWeighted::options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.options)
  return _internal_options().Get(index);
}
inline ::cosmos::gov::v1::WeightedVoteOption* MsgVoteWeighted::add_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::gov::v1::WeightedVoteOption* _add = _internal_mutable_options()->Add();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgVoteWeighted.options)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>& MsgVoteWeighted::options() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgVoteWeighted.options)
  return _internal_options();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>&
MsgVoteWeighted::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.options_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::gov::v1::WeightedVoteOption>*
MsgVoteWeighted::_internal_mutable_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.options_;
}

// string metadata = 4 [json_name = "metadata"];
inline void MsgVoteWeighted::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
}
inline const std::string& MsgVoteWeighted::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgVoteWeighted.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgVoteWeighted::set_metadata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgVoteWeighted.metadata)
}
inline std::string* MsgVoteWeighted::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgVoteWeighted.metadata)
  return _s;
}
inline const std::string& MsgVoteWeighted::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void MsgVoteWeighted::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* MsgVoteWeighted::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* MsgVoteWeighted::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgVoteWeighted.metadata)
  return _impl_.metadata_.Release();
}
inline void MsgVoteWeighted::set_allocated_metadata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.metadata_.IsDefault()) {
    _impl_.metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgVoteWeighted.metadata)
}

// -------------------------------------------------------------------

// MsgVoteWeightedResponse

// -------------------------------------------------------------------

// MsgDeposit

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id", (.amino.dont_omitempty) = true];
inline void MsgDeposit::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgDeposit::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgDeposit.proposal_id)
  return _internal_proposal_id();
}
inline void MsgDeposit::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgDeposit.proposal_id)
}
inline ::uint64_t MsgDeposit::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void MsgDeposit::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgDeposit::clear_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.ClearToEmpty();
}
inline const std::string& MsgDeposit::depositor() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgDeposit.depositor)
  return _internal_depositor();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDeposit::set_depositor(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgDeposit.depositor)
}
inline std::string* MsgDeposit::mutable_depositor() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_depositor();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgDeposit.depositor)
  return _s;
}
inline const std::string& MsgDeposit::_internal_depositor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.depositor_.Get();
}
inline void MsgDeposit::_internal_set_depositor(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.Set(value, GetArena());
}
inline std::string* MsgDeposit::_internal_mutable_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.depositor_.Mutable( GetArena());
}
inline std::string* MsgDeposit::release_depositor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgDeposit.depositor)
  return _impl_.depositor_.Release();
}
inline void MsgDeposit::set_allocated_depositor(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.depositor_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.depositor_.IsDefault()) {
    _impl_.depositor_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgDeposit.depositor)
}

// repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int MsgDeposit::_internal_amount_size() const {
  return _internal_amount().size();
}
inline int MsgDeposit::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgDeposit::mutable_amount(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgDeposit.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgDeposit::mutable_amount()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.gov.v1.MsgDeposit.amount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgDeposit::amount(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgDeposit.amount)
  return _internal_amount().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgDeposit::add_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_amount()->Add();
  // @@protoc_insertion_point(field_add:cosmos.gov.v1.MsgDeposit.amount)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgDeposit::amount() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.gov.v1.MsgDeposit.amount)
  return _internal_amount();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgDeposit::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgDeposit::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgDepositResponse

// -------------------------------------------------------------------

// MsgUpdateParams

// string authority = 1 [json_name = "authority", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgUpdateParams::clear_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.ClearToEmpty();
}
inline const std::string& MsgUpdateParams::authority() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgUpdateParams.authority)
  return _internal_authority();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgUpdateParams::set_authority(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgUpdateParams.authority)
}
inline std::string* MsgUpdateParams::mutable_authority() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authority();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgUpdateParams.authority)
  return _s;
}
inline const std::string& MsgUpdateParams::_internal_authority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authority_.Get();
}
inline void MsgUpdateParams::_internal_set_authority(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.Set(value, GetArena());
}
inline std::string* MsgUpdateParams::_internal_mutable_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authority_.Mutable( GetArena());
}
inline std::string* MsgUpdateParams::release_authority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgUpdateParams.authority)
  return _impl_.authority_.Release();
}
inline void MsgUpdateParams::set_allocated_authority(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authority_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authority_.IsDefault()) {
    _impl_.authority_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgUpdateParams.authority)
}

// .cosmos.gov.v1.Params params = 2 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool MsgUpdateParams::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::gov::v1::Params& MsgUpdateParams::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::gov::v1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::gov::v1::Params&>(::cosmos::gov::v1::_Params_default_instance_);
}
inline const ::cosmos::gov::v1::Params& MsgUpdateParams::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgUpdateParams.params)
  return _internal_params();
}
inline void MsgUpdateParams::unsafe_arena_set_allocated_params(::cosmos::gov::v1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::gov::v1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.MsgUpdateParams.params)
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgUpdateParams.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::gov::v1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::gov::v1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::gov::v1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::gov::v1::Params* MsgUpdateParams::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::gov::v1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgUpdateParams.params)
  return _msg;
}
inline void MsgUpdateParams::set_allocated_params(::cosmos::gov::v1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::gov::v1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgUpdateParams.params)
}

// -------------------------------------------------------------------

// MsgUpdateParamsResponse

// -------------------------------------------------------------------

// MsgCancelProposal

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id"];
inline void MsgCancelProposal::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgCancelProposal::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgCancelProposal.proposal_id)
  return _internal_proposal_id();
}
inline void MsgCancelProposal::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgCancelProposal.proposal_id)
}
inline ::uint64_t MsgCancelProposal::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void MsgCancelProposal::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// string proposer = 2 [json_name = "proposer", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCancelProposal::clear_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.ClearToEmpty();
}
inline const std::string& MsgCancelProposal::proposer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgCancelProposal.proposer)
  return _internal_proposer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCancelProposal::set_proposer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgCancelProposal.proposer)
}
inline std::string* MsgCancelProposal::mutable_proposer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_proposer();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgCancelProposal.proposer)
  return _s;
}
inline const std::string& MsgCancelProposal::_internal_proposer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposer_.Get();
}
inline void MsgCancelProposal::_internal_set_proposer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.Set(value, GetArena());
}
inline std::string* MsgCancelProposal::_internal_mutable_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.proposer_.Mutable( GetArena());
}
inline std::string* MsgCancelProposal::release_proposer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgCancelProposal.proposer)
  return _impl_.proposer_.Release();
}
inline void MsgCancelProposal::set_allocated_proposer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.proposer_.IsDefault()) {
    _impl_.proposer_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgCancelProposal.proposer)
}

// -------------------------------------------------------------------

// MsgCancelProposalResponse

// uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "proposal_id"];
inline void MsgCancelProposalResponse::clear_proposal_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = ::uint64_t{0u};
}
inline ::uint64_t MsgCancelProposalResponse::proposal_id() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgCancelProposalResponse.proposal_id)
  return _internal_proposal_id();
}
inline void MsgCancelProposalResponse::set_proposal_id(::uint64_t value) {
  _internal_set_proposal_id(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgCancelProposalResponse.proposal_id)
}
inline ::uint64_t MsgCancelProposalResponse::_internal_proposal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposal_id_;
}
inline void MsgCancelProposalResponse::_internal_set_proposal_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposal_id_ = value;
}

// .google.protobuf.Timestamp canceled_time = 2 [json_name = "canceledTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
inline bool MsgCancelProposalResponse::has_canceled_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.canceled_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& MsgCancelProposalResponse::_internal_canceled_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.canceled_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& MsgCancelProposalResponse::canceled_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgCancelProposalResponse.canceled_time)
  return _internal_canceled_time();
}
inline void MsgCancelProposalResponse::unsafe_arena_set_allocated_canceled_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.canceled_time_);
  }
  _impl_.canceled_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.gov.v1.MsgCancelProposalResponse.canceled_time)
}
inline ::google::protobuf::Timestamp* MsgCancelProposalResponse::release_canceled_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.canceled_time_;
  _impl_.canceled_time_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* MsgCancelProposalResponse::unsafe_arena_release_canceled_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.gov.v1.MsgCancelProposalResponse.canceled_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.canceled_time_;
  _impl_.canceled_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* MsgCancelProposalResponse::_internal_mutable_canceled_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.canceled_time_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.canceled_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.canceled_time_;
}
inline ::google::protobuf::Timestamp* MsgCancelProposalResponse::mutable_canceled_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_canceled_time();
  // @@protoc_insertion_point(field_mutable:cosmos.gov.v1.MsgCancelProposalResponse.canceled_time)
  return _msg;
}
inline void MsgCancelProposalResponse::set_allocated_canceled_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.canceled_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.canceled_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.gov.v1.MsgCancelProposalResponse.canceled_time)
}

// uint64 canceled_height = 3 [json_name = "canceledHeight"];
inline void MsgCancelProposalResponse::clear_canceled_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.canceled_height_ = ::uint64_t{0u};
}
inline ::uint64_t MsgCancelProposalResponse::canceled_height() const {
  // @@protoc_insertion_point(field_get:cosmos.gov.v1.MsgCancelProposalResponse.canceled_height)
  return _internal_canceled_height();
}
inline void MsgCancelProposalResponse::set_canceled_height(::uint64_t value) {
  _internal_set_canceled_height(value);
  // @@protoc_insertion_point(field_set:cosmos.gov.v1.MsgCancelProposalResponse.canceled_height)
}
inline ::uint64_t MsgCancelProposalResponse::_internal_canceled_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.canceled_height_;
}
inline void MsgCancelProposalResponse::_internal_set_canceled_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.canceled_height_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace gov
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fgov_2fv1_2ftx_2eproto_2epb_2eh
