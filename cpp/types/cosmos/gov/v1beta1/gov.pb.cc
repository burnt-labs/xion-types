// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/gov/v1beta1/gov.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/gov/v1beta1/gov.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace gov {
namespace v1beta1 {

inline constexpr WeightedVoteOption::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : weight_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        option_{static_cast< ::cosmos::gov::v1beta1::VoteOption >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WeightedVoteOption::WeightedVoteOption(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WeightedVoteOptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WeightedVoteOptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WeightedVoteOptionDefaultTypeInternal() {}
  union {
    WeightedVoteOption _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WeightedVoteOptionDefaultTypeInternal _WeightedVoteOption_default_instance_;

inline constexpr TextProposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TextProposal::TextProposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TextProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextProposalDefaultTypeInternal() {}
  union {
    TextProposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextProposalDefaultTypeInternal _TextProposal_default_instance_;

inline constexpr TallyResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : yes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        abstain_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        no_with_veto_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TallyResult::TallyResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TallyResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TallyResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TallyResultDefaultTypeInternal() {}
  union {
    TallyResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TallyResultDefaultTypeInternal _TallyResult_default_instance_;

inline constexpr TallyParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : quorum_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        veto_threshold_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TallyParams::TallyParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TallyParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TallyParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TallyParamsDefaultTypeInternal() {}
  union {
    TallyParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TallyParamsDefaultTypeInternal _TallyParams_default_instance_;

inline constexpr VotingParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        voting_period_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR VotingParams::VotingParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VotingParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VotingParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VotingParamsDefaultTypeInternal() {}
  union {
    VotingParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VotingParamsDefaultTypeInternal _VotingParams_default_instance_;

inline constexpr Vote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : options_{},
        voter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_id_{::uint64_t{0u}},
        option_{static_cast< ::cosmos::gov::v1beta1::VoteOption >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Vote::Vote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoteDefaultTypeInternal() {}
  union {
    Vote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoteDefaultTypeInternal _Vote_default_instance_;

inline constexpr Proposal::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        total_deposit_{},
        content_{nullptr},
        final_tally_result_{nullptr},
        submit_time_{nullptr},
        deposit_end_time_{nullptr},
        voting_start_time_{nullptr},
        voting_end_time_{nullptr},
        proposal_id_{::uint64_t{0u}},
        status_{static_cast< ::cosmos::gov::v1beta1::ProposalStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Proposal::Proposal(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProposalDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProposalDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProposalDefaultTypeInternal() {}
  union {
    Proposal _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProposalDefaultTypeInternal _Proposal_default_instance_;

inline constexpr DepositParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_deposit_{},
        max_deposit_period_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DepositParams::DepositParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DepositParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DepositParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DepositParamsDefaultTypeInternal() {}
  union {
    DepositParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DepositParamsDefaultTypeInternal _DepositParams_default_instance_;

inline constexpr Deposit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : amount_{},
        depositor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        proposal_id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Deposit::Deposit(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DepositDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DepositDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DepositDefaultTypeInternal() {}
  union {
    Deposit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DepositDefaultTypeInternal _Deposit_default_instance_;
}  // namespace v1beta1
}  // namespace gov
}  // namespace cosmos
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_cosmos_2fgov_2fv1beta1_2fgov_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgov_2fv1beta1_2fgov_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fgov_2fv1beta1_2fgov_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::WeightedVoteOption, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::WeightedVoteOption, _impl_.option_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::WeightedVoteOption, _impl_.weight_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TextProposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TextProposal, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TextProposal, _impl_.description_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Deposit, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Deposit, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Deposit, _impl_.depositor_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Deposit, _impl_.amount_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.final_tally_result_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.submit_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.deposit_end_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.total_deposit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.voting_start_time_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Proposal, _impl_.voting_end_time_),
        ~0u,
        0,
        ~0u,
        1,
        2,
        3,
        ~0u,
        4,
        5,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyResult, _impl_.yes_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyResult, _impl_.abstain_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyResult, _impl_.no_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyResult, _impl_.no_with_veto_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Vote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Vote, _impl_.proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Vote, _impl_.voter_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Vote, _impl_.option_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::Vote, _impl_.options_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::DepositParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::DepositParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::DepositParams, _impl_.min_deposit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::DepositParams, _impl_.max_deposit_period_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::VotingParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::VotingParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::VotingParams, _impl_.voting_period_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyParams, _impl_.quorum_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyParams, _impl_.threshold_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::TallyParams, _impl_.veto_threshold_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::gov::v1beta1::WeightedVoteOption)},
        {10, -1, -1, sizeof(::cosmos::gov::v1beta1::TextProposal)},
        {20, -1, -1, sizeof(::cosmos::gov::v1beta1::Deposit)},
        {31, 48, -1, sizeof(::cosmos::gov::v1beta1::Proposal)},
        {57, -1, -1, sizeof(::cosmos::gov::v1beta1::TallyResult)},
        {69, -1, -1, sizeof(::cosmos::gov::v1beta1::Vote)},
        {81, 91, -1, sizeof(::cosmos::gov::v1beta1::DepositParams)},
        {93, 102, -1, sizeof(::cosmos::gov::v1beta1::VotingParams)},
        {103, -1, -1, sizeof(::cosmos::gov::v1beta1::TallyParams)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::gov::v1beta1::_WeightedVoteOption_default_instance_._instance,
    &::cosmos::gov::v1beta1::_TextProposal_default_instance_._instance,
    &::cosmos::gov::v1beta1::_Deposit_default_instance_._instance,
    &::cosmos::gov::v1beta1::_Proposal_default_instance_._instance,
    &::cosmos::gov::v1beta1::_TallyResult_default_instance_._instance,
    &::cosmos::gov::v1beta1::_Vote_default_instance_._instance,
    &::cosmos::gov::v1beta1::_DepositParams_default_instance_._instance,
    &::cosmos::gov::v1beta1::_VotingParams_default_instance_._instance,
    &::cosmos::gov::v1beta1::_TallyParams_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgov_2fv1beta1_2fgov_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034cosmos/gov/v1beta1/gov.proto\022\022cosmos.g"
    "ov.v1beta1\032\036cosmos/base/v1beta1/coin.pro"
    "to\032\024gogoproto/gogo.proto\032\037google/protobu"
    "f/timestamp.proto\032\031google/protobuf/any.p"
    "roto\032\036google/protobuf/duration.proto\032\031co"
    "smos_proto/cosmos.proto\032\021amino/amino.pro"
    "to\"\261\001\n\022WeightedVoteOption\0226\n\006option\030\001 \001("
    "\0162\036.cosmos.gov.v1beta1.VoteOptionR\006optio"
    "n\022N\n\006weight\030\002 \001(\tB6\310\336\037\000\332\336\037\033cosmossdk.io/"
    "math.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\006weigh"
    "t:\023\322\264-\017cosmos-sdk 0.43\"\206\001\n\014TextProposal\022"
    "\024\n\005title\030\001 \001(\tR\005title\022 \n\013description\030\002 \001"
    "(\tR\013description:>\350\240\037\001\312\264-\032cosmos.gov.v1be"
    "ta1.Content\212\347\260*\027cosmos-sdk/TextProposal\""
    "\326\001\n\007Deposit\022\037\n\013proposal_id\030\001 \001(\004R\npropos"
    "alId\0226\n\tdepositor\030\002 \001(\tB\030\322\264-\024cosmos.Addr"
    "essStringR\tdepositor\022h\n\006amount\030\003 \003(\0132\031.c"
    "osmos.base.v1beta1.CoinB5\310\336\037\000\252\337\037(github."
    "com/cosmos/cosmos-sdk/types.Coins\250\347\260*\001R\006"
    "amount:\010\210\240\037\000\350\240\037\000\"\331\005\n\010Proposal\022\037\n\013proposa"
    "l_id\030\001 \001(\004R\nproposalId\022N\n\007content\030\002 \001(\0132"
    "\024.google.protobuf.AnyB\036\312\264-\032cosmos.gov.v1"
    "beta1.ContentR\007content\022:\n\006status\030\003 \001(\0162\""
    ".cosmos.gov.v1beta1.ProposalStatusR\006stat"
    "us\022X\n\022final_tally_result\030\004 \001(\0132\037.cosmos."
    "gov.v1beta1.TallyResultB\t\310\336\037\000\250\347\260*\001R\020fina"
    "lTallyResult\022J\n\013submit_time\030\005 \001(\0132\032.goog"
    "le.protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\nsu"
    "bmitTime\022S\n\020deposit_end_time\030\006 \001(\0132\032.goo"
    "gle.protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\016d"
    "epositEndTime\022u\n\rtotal_deposit\030\007 \003(\0132\031.c"
    "osmos.base.v1beta1.CoinB5\310\336\037\000\252\337\037(github."
    "com/cosmos/cosmos-sdk/types.Coins\250\347\260*\001R\014"
    "totalDeposit\022U\n\021voting_start_time\030\010 \001(\0132"
    "\032.google.protobuf.TimestampB\r\310\336\037\000\220\337\037\001\250\347\260"
    "*\001R\017votingStartTime\022Q\n\017voting_end_time\030\t"
    " \001(\0132\032.google.protobuf.TimestampB\r\310\336\037\000\220\337"
    "\037\001\250\347\260*\001R\rvotingEndTime:\004\350\240\037\001\"\245\002\n\013TallyRe"
    "sult\022=\n\003yes\030\001 \001(\tB+\310\336\037\000\332\336\037\025cosmossdk.io/"
    "math.Int\322\264-\ncosmos.IntR\003yes\022E\n\007abstain\030\002"
    " \001(\tB+\310\336\037\000\332\336\037\025cosmossdk.io/math.Int\322\264-\nc"
    "osmos.IntR\007abstain\022;\n\002no\030\003 \001(\tB+\310\336\037\000\332\336\037\025"
    "cosmossdk.io/math.Int\322\264-\ncosmos.IntR\002no\022"
    "M\n\014no_with_veto\030\004 \001(\tB+\310\336\037\000\332\336\037\025cosmossdk"
    ".io/math.Int\322\264-\ncosmos.IntR\nnoWithVeto:\004"
    "\350\240\037\001\"\215\002\n\004Vote\0223\n\013proposal_id\030\001 \001(\004B\022\352\336\037\002"
    "id\242\347\260*\002id\250\347\260*\001R\nproposalId\022.\n\005voter\030\002 \001("
    "\tB\030\322\264-\024cosmos.AddressStringR\005voter\022:\n\006op"
    "tion\030\003 \001(\0162\036.cosmos.gov.v1beta1.VoteOpti"
    "onB\002\030\001R\006option\022^\n\007options\030\004 \003(\0132&.cosmos"
    ".gov.v1beta1.WeightedVoteOptionB\034\310\336\037\000\332\264-"
    "\017cosmos-sdk 0.43\250\347\260*\001R\007options:\004\350\240\037\000\"\212\002\n"
    "\rDepositParams\022\205\001\n\013min_deposit\030\001 \003(\0132\031.c"
    "osmos.base.v1beta1.CoinBI\310\336\037\000\352\336\037\025min_dep"
    "osit,omitempty\252\337\037(github.com/cosmos/cosm"
    "os-sdk/types.CoinsR\nminDeposit\022q\n\022max_de"
    "posit_period\030\002 \001(\0132\031.google.protobuf.Dur"
    "ationB(\310\336\037\000\352\336\037\034max_deposit_period,omitem"
    "pty\230\337\037\001R\020maxDepositPeriod\"s\n\014VotingParam"
    "s\022c\n\rvoting_period\030\001 \001(\0132\031.google.protob"
    "uf.DurationB#\310\336\037\000\352\336\037\027voting_period,omite"
    "mpty\230\337\037\001R\014votingPeriod\"\312\002\n\013TallyParams\022]"
    "\n\006quorum\030\001 \001(\014BE\310\336\037\000\332\336\037\033cosmossdk.io/mat"
    "h.LegacyDec\352\336\037\020quorum,omitempty\322\264-\ncosmo"
    "s.DecR\006quorum\022f\n\tthreshold\030\002 \001(\014BH\310\336\037\000\332\336"
    "\037\033cosmossdk.io/math.LegacyDec\352\336\037\023thresho"
    "ld,omitempty\322\264-\ncosmos.DecR\tthreshold\022t\n"
    "\016veto_threshold\030\003 \001(\014BM\310\336\037\000\332\336\037\033cosmossdk"
    ".io/math.LegacyDec\352\336\037\030veto_threshold,omi"
    "tempty\322\264-\ncosmos.DecR\rvetoThreshold*\346\001\n\n"
    "VoteOption\022,\n\027VOTE_OPTION_UNSPECIFIED\020\000\032"
    "\017\212\235 \013OptionEmpty\022\"\n\017VOTE_OPTION_YES\020\001\032\r\212"
    "\235 \tOptionYes\022*\n\023VOTE_OPTION_ABSTAIN\020\002\032\021\212"
    "\235 \rOptionAbstain\022 \n\016VOTE_OPTION_NO\020\003\032\014\212\235"
    " \010OptionNo\0222\n\030VOTE_OPTION_NO_WITH_VETO\020\004"
    "\032\024\212\235 \020OptionNoWithVeto\032\004\210\243\036\000*\314\002\n\016Proposa"
    "lStatus\022.\n\033PROPOSAL_STATUS_UNSPECIFIED\020\000"
    "\032\r\212\235 \tStatusNil\022;\n\036PROPOSAL_STATUS_DEPOS"
    "IT_PERIOD\020\001\032\027\212\235 \023StatusDepositPeriod\0229\n\035"
    "PROPOSAL_STATUS_VOTING_PERIOD\020\002\032\026\212\235 \022Sta"
    "tusVotingPeriod\022,\n\026PROPOSAL_STATUS_PASSE"
    "D\020\003\032\020\212\235 \014StatusPassed\0220\n\030PROPOSAL_STATUS"
    "_REJECTED\020\004\032\022\212\235 \016StatusRejected\022,\n\026PROPO"
    "SAL_STATUS_FAILED\020\005\032\020\212\235 \014StatusFailed\032\004\210"
    "\243\036\000B6Z0github.com/cosmos/cosmos-sdk/x/go"
    "v/types/v1beta1\310\341\036\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto_deps[7] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto = {
    false,
    false,
    3427,
    descriptor_table_protodef_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    "cosmos/gov/v1beta1/gov.proto",
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto_once,
    descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto_deps,
    7,
    9,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgov_2fv1beta1_2fgov_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    file_level_service_descriptors_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
};
namespace cosmos {
namespace gov {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* VoteOption_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto);
  return file_level_enum_descriptors_cosmos_2fgov_2fv1beta1_2fgov_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t VoteOption_internal_data_[] = {
    327680u, 0u, };
bool VoteOption_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ProposalStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto);
  return file_level_enum_descriptors_cosmos_2fgov_2fv1beta1_2fgov_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ProposalStatus_internal_data_[] = {
    393216u, 0u, };
bool ProposalStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

class WeightedVoteOption::_Internal {
 public:
};

WeightedVoteOption::WeightedVoteOption(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.WeightedVoteOption)
}
inline PROTOBUF_NDEBUG_INLINE WeightedVoteOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::WeightedVoteOption& from_msg)
      : weight_(arena, from.weight_),
        _cached_size_{0} {}

WeightedVoteOption::WeightedVoteOption(
    ::google::protobuf::Arena* arena,
    const WeightedVoteOption& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WeightedVoteOption* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.option_ = from._impl_.option_;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.WeightedVoteOption)
}
inline PROTOBUF_NDEBUG_INLINE WeightedVoteOption::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : weight_(arena),
        _cached_size_{0} {}

inline void WeightedVoteOption::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.option_ = {};
}
WeightedVoteOption::~WeightedVoteOption() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.WeightedVoteOption)
  SharedDtor(*this);
}
inline void WeightedVoteOption::SharedDtor(MessageLite& self) {
  WeightedVoteOption& this_ = static_cast<WeightedVoteOption&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.weight_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WeightedVoteOption::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WeightedVoteOption(arena);
}
constexpr auto WeightedVoteOption::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WeightedVoteOption),
                                            alignof(WeightedVoteOption));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WeightedVoteOption::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WeightedVoteOption_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WeightedVoteOption::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WeightedVoteOption>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WeightedVoteOption::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WeightedVoteOption>(), &WeightedVoteOption::ByteSizeLong,
            &WeightedVoteOption::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_._cached_size_),
        false,
    },
    &WeightedVoteOption::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WeightedVoteOption::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2> WeightedVoteOption::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::WeightedVoteOption>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.weight_)}},
    // .cosmos.gov.v1beta1.VoteOption option = 1 [json_name = "option"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WeightedVoteOption, _impl_.option_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.option_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.gov.v1beta1.VoteOption option = 1 [json_name = "option"];
    {PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.option_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(WeightedVoteOption, _impl_.weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\6\0\0\0\0\0"
    "cosmos.gov.v1beta1.WeightedVoteOption"
    "weight"
  }},
};

PROTOBUF_NOINLINE void WeightedVoteOption::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.WeightedVoteOption)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.weight_.ClearToEmpty();
  _impl_.option_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WeightedVoteOption::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WeightedVoteOption& this_ = static_cast<const WeightedVoteOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WeightedVoteOption::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WeightedVoteOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.WeightedVoteOption)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .cosmos.gov.v1beta1.VoteOption option = 1 [json_name = "option"];
          if (this_._internal_option() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_option(), target);
          }

          // string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_weight().empty()) {
            const std::string& _s = this_._internal_weight();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.WeightedVoteOption.weight");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.WeightedVoteOption)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WeightedVoteOption::ByteSizeLong(const MessageLite& base) {
          const WeightedVoteOption& this_ = static_cast<const WeightedVoteOption&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WeightedVoteOption::ByteSizeLong() const {
          const WeightedVoteOption& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.WeightedVoteOption)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string weight = 2 [json_name = "weight", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_weight().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_weight());
            }
            // .cosmos.gov.v1beta1.VoteOption option = 1 [json_name = "option"];
            if (this_._internal_option() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_option());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WeightedVoteOption::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WeightedVoteOption*>(&to_msg);
  auto& from = static_cast<const WeightedVoteOption&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.WeightedVoteOption)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_weight().empty()) {
    _this->_internal_set_weight(from._internal_weight());
  }
  if (from._internal_option() != 0) {
    _this->_impl_.option_ = from._impl_.option_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WeightedVoteOption::CopyFrom(const WeightedVoteOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.WeightedVoteOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WeightedVoteOption::InternalSwap(WeightedVoteOption* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.weight_, &other->_impl_.weight_, arena);
  swap(_impl_.option_, other->_impl_.option_);
}

::google::protobuf::Metadata WeightedVoteOption::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TextProposal::_Internal {
 public:
};

TextProposal::TextProposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.TextProposal)
}
inline PROTOBUF_NDEBUG_INLINE TextProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::TextProposal& from_msg)
      : title_(arena, from.title_),
        description_(arena, from.description_),
        _cached_size_{0} {}

TextProposal::TextProposal(
    ::google::protobuf::Arena* arena,
    const TextProposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TextProposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.TextProposal)
}
inline PROTOBUF_NDEBUG_INLINE TextProposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        description_(arena),
        _cached_size_{0} {}

inline void TextProposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TextProposal::~TextProposal() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.TextProposal)
  SharedDtor(*this);
}
inline void TextProposal::SharedDtor(MessageLite& self) {
  TextProposal& this_ = static_cast<TextProposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.title_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TextProposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TextProposal(arena);
}
constexpr auto TextProposal::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TextProposal),
                                            alignof(TextProposal));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TextProposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TextProposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TextProposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TextProposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TextProposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TextProposal>(), &TextProposal::ByteSizeLong,
            &TextProposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TextProposal, _impl_._cached_size_),
        false,
    },
    &TextProposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TextProposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 56, 2> TextProposal::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::TextProposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string description = 2 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TextProposal, _impl_.description_)}},
    // string title = 1 [json_name = "title"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TextProposal, _impl_.title_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string title = 1 [json_name = "title"];
    {PROTOBUF_FIELD_OFFSET(TextProposal, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 2 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(TextProposal, _impl_.description_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\5\13\0\0\0\0\0"
    "cosmos.gov.v1beta1.TextProposal"
    "title"
    "description"
  }},
};

PROTOBUF_NOINLINE void TextProposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.TextProposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TextProposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TextProposal& this_ = static_cast<const TextProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TextProposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TextProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.TextProposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string title = 1 [json_name = "title"];
          if (!this_._internal_title().empty()) {
            const std::string& _s = this_._internal_title();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.TextProposal.title");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string description = 2 [json_name = "description"];
          if (!this_._internal_description().empty()) {
            const std::string& _s = this_._internal_description();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.TextProposal.description");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.TextProposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TextProposal::ByteSizeLong(const MessageLite& base) {
          const TextProposal& this_ = static_cast<const TextProposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TextProposal::ByteSizeLong() const {
          const TextProposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.TextProposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string title = 1 [json_name = "title"];
            if (!this_._internal_title().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_title());
            }
            // string description = 2 [json_name = "description"];
            if (!this_._internal_description().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_description());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TextProposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TextProposal*>(&to_msg);
  auto& from = static_cast<const TextProposal&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.TextProposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TextProposal::CopyFrom(const TextProposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.TextProposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TextProposal::InternalSwap(TextProposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
}

::google::protobuf::Metadata TextProposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Deposit::_Internal {
 public:
};

void Deposit::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_.Clear();
}
Deposit::Deposit(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.Deposit)
}
inline PROTOBUF_NDEBUG_INLINE Deposit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::Deposit& from_msg)
      : amount_{visibility, arena, from.amount_},
        depositor_(arena, from.depositor_),
        _cached_size_{0} {}

Deposit::Deposit(
    ::google::protobuf::Arena* arena,
    const Deposit& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Deposit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.proposal_id_ = from._impl_.proposal_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.Deposit)
}
inline PROTOBUF_NDEBUG_INLINE Deposit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : amount_{visibility, arena},
        depositor_(arena),
        _cached_size_{0} {}

inline void Deposit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.proposal_id_ = {};
}
Deposit::~Deposit() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.Deposit)
  SharedDtor(*this);
}
inline void Deposit::SharedDtor(MessageLite& self) {
  Deposit& this_ = static_cast<Deposit&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.depositor_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Deposit::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Deposit(arena);
}
constexpr auto Deposit::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Deposit, _impl_.amount_) +
          decltype(Deposit::_impl_.amount_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Deposit), alignof(Deposit), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Deposit::PlacementNew_,
                                 sizeof(Deposit),
                                 alignof(Deposit));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Deposit::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Deposit_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Deposit::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Deposit>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Deposit::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Deposit>(), &Deposit::ByteSizeLong,
            &Deposit::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Deposit, _impl_._cached_size_),
        false,
    },
    &Deposit::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Deposit::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 44, 2> Deposit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::Deposit>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Deposit, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Deposit, _impl_.proposal_id_)}},
    // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Deposit, _impl_.depositor_)}},
    // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Deposit, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(Deposit, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Deposit, _impl_.depositor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Deposit, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
    "\32\0\11\0\0\0\0\0"
    "cosmos.gov.v1beta1.Deposit"
    "depositor"
  }},
};

PROTOBUF_NOINLINE void Deposit::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.Deposit)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.amount_.Clear();
  _impl_.depositor_.ClearToEmpty();
  _impl_.proposal_id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Deposit::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Deposit& this_ = static_cast<const Deposit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Deposit::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Deposit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.Deposit)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_depositor().empty()) {
            const std::string& _s = this_._internal_depositor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.Deposit.depositor");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_amount_size());
               i < n; i++) {
            const auto& repfield = this_._internal_amount().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.Deposit)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Deposit::ByteSizeLong(const MessageLite& base) {
          const Deposit& this_ = static_cast<const Deposit&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Deposit::ByteSizeLong() const {
          const Deposit& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.Deposit)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_amount_size();
              for (const auto& msg : this_._internal_amount()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string depositor = 2 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_depositor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_depositor());
            }
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Deposit::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Deposit*>(&to_msg);
  auto& from = static_cast<const Deposit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.Deposit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_amount()->MergeFrom(
      from._internal_amount());
  if (!from._internal_depositor().empty()) {
    _this->_internal_set_depositor(from._internal_depositor());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Deposit::CopyFrom(const Deposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.Deposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Deposit::InternalSwap(Deposit* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.amount_.InternalSwap(&other->_impl_.amount_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.depositor_, &other->_impl_.depositor_, arena);
        swap(_impl_.proposal_id_, other->_impl_.proposal_id_);
}

::google::protobuf::Metadata Deposit::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Proposal::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Proposal>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Proposal, _impl_._has_bits_);
};

void Proposal::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.content_ != nullptr) _impl_.content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Proposal::clear_submit_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.submit_time_ != nullptr) _impl_.submit_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
void Proposal::clear_deposit_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deposit_end_time_ != nullptr) _impl_.deposit_end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
void Proposal::clear_total_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_deposit_.Clear();
}
void Proposal::clear_voting_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_start_time_ != nullptr) _impl_.voting_start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
void Proposal::clear_voting_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_end_time_ != nullptr) _impl_.voting_end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
Proposal::Proposal(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.Proposal)
}
inline PROTOBUF_NDEBUG_INLINE Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::Proposal& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        total_deposit_{visibility, arena, from.total_deposit_} {}

Proposal::Proposal(
    ::google::protobuf::Arena* arena,
    const Proposal& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Proposal* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.content_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.content_)
                        : nullptr;
  _impl_.final_tally_result_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::TallyResult>(
                              arena, *from._impl_.final_tally_result_)
                        : nullptr;
  _impl_.submit_time_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.submit_time_)
                        : nullptr;
  _impl_.deposit_end_time_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.deposit_end_time_)
                        : nullptr;
  _impl_.voting_start_time_ = (cached_has_bits & 0x00000010u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.voting_start_time_)
                        : nullptr;
  _impl_.voting_end_time_ = (cached_has_bits & 0x00000020u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.voting_end_time_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposal_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, proposal_id_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, proposal_id_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.Proposal)
}
inline PROTOBUF_NDEBUG_INLINE Proposal::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        total_deposit_{visibility, arena} {}

inline void Proposal::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, content_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, content_) +
               sizeof(Impl_::status_));
}
Proposal::~Proposal() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.Proposal)
  SharedDtor(*this);
}
inline void Proposal::SharedDtor(MessageLite& self) {
  Proposal& this_ = static_cast<Proposal&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.content_;
  delete this_._impl_.final_tally_result_;
  delete this_._impl_.submit_time_;
  delete this_._impl_.deposit_end_time_;
  delete this_._impl_.voting_start_time_;
  delete this_._impl_.voting_end_time_;
  this_._impl_.~Impl_();
}

inline void* Proposal::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Proposal(arena);
}
constexpr auto Proposal::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.total_deposit_) +
          decltype(Proposal::_impl_.total_deposit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Proposal), alignof(Proposal), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Proposal::PlacementNew_,
                                 sizeof(Proposal),
                                 alignof(Proposal));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Proposal::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Proposal_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Proposal::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Proposal>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Proposal::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Proposal>(), &Proposal::ByteSizeLong,
            &Proposal::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Proposal, _impl_._cached_size_),
        false,
    },
    &Proposal::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Proposal::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 7, 0, 2> Proposal::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Proposal, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::Proposal>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Proposal, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.proposal_id_)}},
    // .google.protobuf.Any content = 2 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.content_)}},
    // .cosmos.gov.v1beta1.ProposalStatus status = 3 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Proposal, _impl_.status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.status_)}},
    // .cosmos.gov.v1beta1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.final_tally_result_)}},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 2, 2, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.submit_time_)}},
    // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 3, 3, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.deposit_end_time_)}},
    // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 4, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.total_deposit_)}},
    // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {66, 4, 5, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_start_time_)}},
    // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {74, 5, 6, PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_end_time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.proposal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .google.protobuf.Any content = 2 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.content_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.gov.v1beta1.ProposalStatus status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .cosmos.gov.v1beta1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.final_tally_result_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.submit_time_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.deposit_end_time_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.total_deposit_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_start_time_), _Internal::kHasBitsOffset + 4, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Proposal, _impl_.voting_end_time_), _Internal::kHasBitsOffset + 5, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::TallyResult>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Proposal::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.Proposal)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.total_deposit_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.content_ != nullptr);
      _impl_.content_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.final_tally_result_ != nullptr);
      _impl_.final_tally_result_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.submit_time_ != nullptr);
      _impl_.submit_time_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.deposit_end_time_ != nullptr);
      _impl_.deposit_end_time_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.voting_start_time_ != nullptr);
      _impl_.voting_start_time_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.voting_end_time_ != nullptr);
      _impl_.voting_end_time_->Clear();
    }
  }
  ::memset(&_impl_.proposal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Proposal::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Proposal& this_ = static_cast<const Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Proposal::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.Proposal)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId"];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any content = 2 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.content_, this_._impl_.content_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.gov.v1beta1.ProposalStatus status = 3 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_status(), target);
          }

          // .cosmos.gov.v1beta1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.final_tally_result_, this_._impl_.final_tally_result_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.submit_time_, this_._impl_.submit_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.deposit_end_time_, this_._impl_.deposit_end_time_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_total_deposit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_total_deposit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.voting_start_time_, this_._impl_.voting_start_time_->GetCachedSize(), target,
                stream);
          }

          // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.voting_end_time_, this_._impl_.voting_end_time_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.Proposal)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Proposal::ByteSizeLong(const MessageLite& base) {
          const Proposal& this_ = static_cast<const Proposal&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Proposal::ByteSizeLong() const {
          const Proposal& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.Proposal)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin total_deposit = 7 [json_name = "totalDeposit", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_total_deposit_size();
              for (const auto& msg : this_._internal_total_deposit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000003fu) {
            // .google.protobuf.Any content = 2 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.content_);
            }
            // .cosmos.gov.v1beta1.TallyResult final_tally_result = 4 [json_name = "finalTallyResult", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.final_tally_result_);
            }
            // .google.protobuf.Timestamp submit_time = 5 [json_name = "submitTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.submit_time_);
            }
            // .google.protobuf.Timestamp deposit_end_time = 6 [json_name = "depositEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deposit_end_time_);
            }
            // .google.protobuf.Timestamp voting_start_time = 8 [json_name = "votingStartTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_start_time_);
            }
            // .google.protobuf.Timestamp voting_end_time = 9 [json_name = "votingEndTime", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_end_time_);
            }
          }
           {
            // uint64 proposal_id = 1 [json_name = "proposalId"];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
            // .cosmos.gov.v1beta1.ProposalStatus status = 3 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Proposal::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Proposal*>(&to_msg);
  auto& from = static_cast<const Proposal&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.Proposal)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_total_deposit()->MergeFrom(
      from._internal_total_deposit());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.content_ != nullptr);
      if (_this->_impl_.content_ == nullptr) {
        _this->_impl_.content_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.content_);
      } else {
        _this->_impl_.content_->MergeFrom(*from._impl_.content_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.final_tally_result_ != nullptr);
      if (_this->_impl_.final_tally_result_ == nullptr) {
        _this->_impl_.final_tally_result_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::TallyResult>(arena, *from._impl_.final_tally_result_);
      } else {
        _this->_impl_.final_tally_result_->MergeFrom(*from._impl_.final_tally_result_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.submit_time_ != nullptr);
      if (_this->_impl_.submit_time_ == nullptr) {
        _this->_impl_.submit_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.submit_time_);
      } else {
        _this->_impl_.submit_time_->MergeFrom(*from._impl_.submit_time_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.deposit_end_time_ != nullptr);
      if (_this->_impl_.deposit_end_time_ == nullptr) {
        _this->_impl_.deposit_end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.deposit_end_time_);
      } else {
        _this->_impl_.deposit_end_time_->MergeFrom(*from._impl_.deposit_end_time_);
      }
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(from._impl_.voting_start_time_ != nullptr);
      if (_this->_impl_.voting_start_time_ == nullptr) {
        _this->_impl_.voting_start_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.voting_start_time_);
      } else {
        _this->_impl_.voting_start_time_->MergeFrom(*from._impl_.voting_start_time_);
      }
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(from._impl_.voting_end_time_ != nullptr);
      if (_this->_impl_.voting_end_time_ == nullptr) {
        _this->_impl_.voting_end_time_ =
            ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.voting_end_time_);
      } else {
        _this->_impl_.voting_end_time_->MergeFrom(*from._impl_.voting_end_time_);
      }
    }
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Proposal::CopyFrom(const Proposal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.Proposal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Proposal::InternalSwap(Proposal* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.total_deposit_.InternalSwap(&other->_impl_.total_deposit_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Proposal, _impl_.status_)
      + sizeof(Proposal::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(Proposal, _impl_.content_)>(
          reinterpret_cast<char*>(&_impl_.content_),
          reinterpret_cast<char*>(&other->_impl_.content_));
}

::google::protobuf::Metadata Proposal::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TallyResult::_Internal {
 public:
};

TallyResult::TallyResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.TallyResult)
}
inline PROTOBUF_NDEBUG_INLINE TallyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::TallyResult& from_msg)
      : yes_(arena, from.yes_),
        abstain_(arena, from.abstain_),
        no_(arena, from.no_),
        no_with_veto_(arena, from.no_with_veto_),
        _cached_size_{0} {}

TallyResult::TallyResult(
    ::google::protobuf::Arena* arena,
    const TallyResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TallyResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.TallyResult)
}
inline PROTOBUF_NDEBUG_INLINE TallyResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : yes_(arena),
        abstain_(arena),
        no_(arena),
        no_with_veto_(arena),
        _cached_size_{0} {}

inline void TallyResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TallyResult::~TallyResult() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.TallyResult)
  SharedDtor(*this);
}
inline void TallyResult::SharedDtor(MessageLite& self) {
  TallyResult& this_ = static_cast<TallyResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.yes_.Destroy();
  this_._impl_.abstain_.Destroy();
  this_._impl_.no_.Destroy();
  this_._impl_.no_with_veto_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TallyResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TallyResult(arena);
}
constexpr auto TallyResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TallyResult),
                                            alignof(TallyResult));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TallyResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TallyResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TallyResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TallyResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TallyResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TallyResult>(), &TallyResult::ByteSizeLong,
            &TallyResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TallyResult, _impl_._cached_size_),
        false,
    },
    &TallyResult::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TallyResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 63, 2> TallyResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::TallyResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string no_with_veto = 4 [json_name = "noWithVeto", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_with_veto_)}},
    // string yes = 1 [json_name = "yes", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.yes_)}},
    // string abstain = 2 [json_name = "abstain", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.abstain_)}},
    // string no = 3 [json_name = "no", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string yes = 1 [json_name = "yes", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.yes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string abstain = 2 [json_name = "abstain", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.abstain_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string no = 3 [json_name = "no", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string no_with_veto = 4 [json_name = "noWithVeto", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
    {PROTOBUF_FIELD_OFFSET(TallyResult, _impl_.no_with_veto_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\7\2\14\0\0\0"
    "cosmos.gov.v1beta1.TallyResult"
    "yes"
    "abstain"
    "no"
    "no_with_veto"
  }},
};

PROTOBUF_NOINLINE void TallyResult::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.TallyResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.yes_.ClearToEmpty();
  _impl_.abstain_.ClearToEmpty();
  _impl_.no_.ClearToEmpty();
  _impl_.no_with_veto_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TallyResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TallyResult& this_ = static_cast<const TallyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TallyResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TallyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.TallyResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string yes = 1 [json_name = "yes", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_yes().empty()) {
            const std::string& _s = this_._internal_yes();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.TallyResult.yes");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string abstain = 2 [json_name = "abstain", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_abstain().empty()) {
            const std::string& _s = this_._internal_abstain();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.TallyResult.abstain");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string no = 3 [json_name = "no", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_no().empty()) {
            const std::string& _s = this_._internal_no();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.TallyResult.no");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string no_with_veto = 4 [json_name = "noWithVeto", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
          if (!this_._internal_no_with_veto().empty()) {
            const std::string& _s = this_._internal_no_with_veto();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.TallyResult.no_with_veto");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.TallyResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TallyResult::ByteSizeLong(const MessageLite& base) {
          const TallyResult& this_ = static_cast<const TallyResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TallyResult::ByteSizeLong() const {
          const TallyResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.TallyResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string yes = 1 [json_name = "yes", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_yes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_yes());
            }
            // string abstain = 2 [json_name = "abstain", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_abstain().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_abstain());
            }
            // string no = 3 [json_name = "no", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_no().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_no());
            }
            // string no_with_veto = 4 [json_name = "noWithVeto", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.Int", (.cosmos_proto.scalar) = "cosmos.Int"];
            if (!this_._internal_no_with_veto().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_no_with_veto());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TallyResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TallyResult*>(&to_msg);
  auto& from = static_cast<const TallyResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.TallyResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_yes().empty()) {
    _this->_internal_set_yes(from._internal_yes());
  }
  if (!from._internal_abstain().empty()) {
    _this->_internal_set_abstain(from._internal_abstain());
  }
  if (!from._internal_no().empty()) {
    _this->_internal_set_no(from._internal_no());
  }
  if (!from._internal_no_with_veto().empty()) {
    _this->_internal_set_no_with_veto(from._internal_no_with_veto());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TallyResult::CopyFrom(const TallyResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.TallyResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TallyResult::InternalSwap(TallyResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.yes_, &other->_impl_.yes_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.abstain_, &other->_impl_.abstain_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.no_, &other->_impl_.no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.no_with_veto_, &other->_impl_.no_with_veto_, arena);
}

::google::protobuf::Metadata TallyResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Vote::_Internal {
 public:
};

Vote::Vote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::Vote& from_msg)
      : options_{visibility, arena, from.options_},
        voter_(arena, from.voter_),
        _cached_size_{0} {}

Vote::Vote(
    ::google::protobuf::Arena* arena,
    const Vote& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Vote* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposal_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, proposal_id_),
           offsetof(Impl_, option_) -
               offsetof(Impl_, proposal_id_) +
               sizeof(Impl_::option_));

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.Vote)
}
inline PROTOBUF_NDEBUG_INLINE Vote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : options_{visibility, arena},
        voter_(arena),
        _cached_size_{0} {}

inline void Vote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, proposal_id_),
           0,
           offsetof(Impl_, option_) -
               offsetof(Impl_, proposal_id_) +
               sizeof(Impl_::option_));
}
Vote::~Vote() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.Vote)
  SharedDtor(*this);
}
inline void Vote::SharedDtor(MessageLite& self) {
  Vote& this_ = static_cast<Vote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.voter_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Vote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Vote(arena);
}
constexpr auto Vote::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Vote, _impl_.options_) +
          decltype(Vote::_impl_.options_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Vote), alignof(Vote), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Vote::PlacementNew_,
                                 sizeof(Vote),
                                 alignof(Vote));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Vote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Vote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Vote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Vote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Vote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Vote>(), &Vote::ByteSizeLong,
            &Vote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Vote, _impl_._cached_size_),
        false,
    },
    &Vote::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Vote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 37, 2> Vote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::Vote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.gov.v1beta1.WeightedVoteOption options = 4 [json_name = "options", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.options_)}},
    // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "id", (.amino.field_name) = "id", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Vote, _impl_.proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.proposal_id_)}},
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_)}},
    // .cosmos.gov.v1beta1.VoteOption option = 3 [json_name = "option", deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Vote, _impl_.option_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Vote, _impl_.option_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "id", (.amino.field_name) = "id", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.proposal_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.voter_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.gov.v1beta1.VoteOption option = 3 [json_name = "option", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.option_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .cosmos.gov.v1beta1.WeightedVoteOption options = 4 [json_name = "options", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Vote, _impl_.options_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::WeightedVoteOption>()},
  }}, {{
    "\27\0\5\0\0\0\0\0"
    "cosmos.gov.v1beta1.Vote"
    "voter"
  }},
};

PROTOBUF_NOINLINE void Vote::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.Vote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.options_.Clear();
  _impl_.voter_.ClearToEmpty();
  ::memset(&_impl_.proposal_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.option_) -
      reinterpret_cast<char*>(&_impl_.proposal_id_)) + sizeof(_impl_.option_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Vote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Vote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.Vote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "id", (.amino.field_name) = "id", (.amino.dont_omitempty) = true];
          if (this_._internal_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_proposal_id(), target);
          }

          // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
          if (!this_._internal_voter().empty()) {
            const std::string& _s = this_._internal_voter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.gov.v1beta1.Vote.voter");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .cosmos.gov.v1beta1.VoteOption option = 3 [json_name = "option", deprecated = true];
          if (this_._internal_option() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_option(), target);
          }

          // repeated .cosmos.gov.v1beta1.WeightedVoteOption options = 4 [json_name = "options", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_options_size());
               i < n; i++) {
            const auto& repfield = this_._internal_options().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.Vote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Vote::ByteSizeLong(const MessageLite& base) {
          const Vote& this_ = static_cast<const Vote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Vote::ByteSizeLong() const {
          const Vote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.Vote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.gov.v1beta1.WeightedVoteOption options = 4 [json_name = "options", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_options_size();
              for (const auto& msg : this_._internal_options()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
            if (!this_._internal_voter().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_voter());
            }
            // uint64 proposal_id = 1 [json_name = "proposalId", (.gogoproto.jsontag) = "id", (.amino.field_name) = "id", (.amino.dont_omitempty) = true];
            if (this_._internal_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_proposal_id());
            }
            // .cosmos.gov.v1beta1.VoteOption option = 3 [json_name = "option", deprecated = true];
            if (this_._internal_option() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_option());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Vote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Vote*>(&to_msg);
  auto& from = static_cast<const Vote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.Vote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_options()->MergeFrom(
      from._internal_options());
  if (!from._internal_voter().empty()) {
    _this->_internal_set_voter(from._internal_voter());
  }
  if (from._internal_proposal_id() != 0) {
    _this->_impl_.proposal_id_ = from._impl_.proposal_id_;
  }
  if (from._internal_option() != 0) {
    _this->_impl_.option_ = from._impl_.option_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Vote::CopyFrom(const Vote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.Vote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Vote::InternalSwap(Vote* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.options_.InternalSwap(&other->_impl_.options_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.voter_, &other->_impl_.voter_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vote, _impl_.option_)
      + sizeof(Vote::_impl_.option_)
      - PROTOBUF_FIELD_OFFSET(Vote, _impl_.proposal_id_)>(
          reinterpret_cast<char*>(&_impl_.proposal_id_),
          reinterpret_cast<char*>(&other->_impl_.proposal_id_));
}

::google::protobuf::Metadata Vote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DepositParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<DepositParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DepositParams, _impl_._has_bits_);
};

void DepositParams::clear_min_deposit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_deposit_.Clear();
}
void DepositParams::clear_max_deposit_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_deposit_period_ != nullptr) _impl_.max_deposit_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DepositParams::DepositParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.DepositParams)
}
inline PROTOBUF_NDEBUG_INLINE DepositParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::DepositParams& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        min_deposit_{visibility, arena, from.min_deposit_} {}

DepositParams::DepositParams(
    ::google::protobuf::Arena* arena,
    const DepositParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DepositParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.max_deposit_period_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.max_deposit_period_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.DepositParams)
}
inline PROTOBUF_NDEBUG_INLINE DepositParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        min_deposit_{visibility, arena} {}

inline void DepositParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_deposit_period_ = {};
}
DepositParams::~DepositParams() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.DepositParams)
  SharedDtor(*this);
}
inline void DepositParams::SharedDtor(MessageLite& self) {
  DepositParams& this_ = static_cast<DepositParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.max_deposit_period_;
  this_._impl_.~Impl_();
}

inline void* DepositParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) DepositParams(arena);
}
constexpr auto DepositParams::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.min_deposit_) +
          decltype(DepositParams::_impl_.min_deposit_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(DepositParams), alignof(DepositParams), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&DepositParams::PlacementNew_,
                                 sizeof(DepositParams),
                                 alignof(DepositParams));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull DepositParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_DepositParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &DepositParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<DepositParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &DepositParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<DepositParams>(), &DepositParams::ByteSizeLong,
            &DepositParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(DepositParams, _impl_._cached_size_),
        false,
    },
    &DepositParams::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* DepositParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DepositParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DepositParams, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::DepositParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.max_deposit_period_)}},
    // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.min_deposit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
    {PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.min_deposit_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
    {PROTOBUF_FIELD_OFFSET(DepositParams, _impl_.max_deposit_period_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DepositParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.DepositParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.min_deposit_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.max_deposit_period_ != nullptr);
    _impl_.max_deposit_period_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DepositParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DepositParams& this_ = static_cast<const DepositParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DepositParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DepositParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.DepositParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_min_deposit_size());
               i < n; i++) {
            const auto& repfield = this_._internal_min_deposit().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.max_deposit_period_, this_._impl_.max_deposit_period_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.DepositParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DepositParams::ByteSizeLong(const MessageLite& base) {
          const DepositParams& this_ = static_cast<const DepositParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DepositParams::ByteSizeLong() const {
          const DepositParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.DepositParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.v1beta1.Coin min_deposit = 1 [json_name = "minDeposit", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "min_deposit,omitempty", (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
            {
              total_size += 1UL * this_._internal_min_deposit_size();
              for (const auto& msg : this_._internal_min_deposit()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .google.protobuf.Duration max_deposit_period = 2 [json_name = "maxDepositPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "max_deposit_period,omitempty", (.gogoproto.stdduration) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.max_deposit_period_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DepositParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DepositParams*>(&to_msg);
  auto& from = static_cast<const DepositParams&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.DepositParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_min_deposit()->MergeFrom(
      from._internal_min_deposit());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.max_deposit_period_ != nullptr);
    if (_this->_impl_.max_deposit_period_ == nullptr) {
      _this->_impl_.max_deposit_period_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.max_deposit_period_);
    } else {
      _this->_impl_.max_deposit_period_->MergeFrom(*from._impl_.max_deposit_period_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DepositParams::CopyFrom(const DepositParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.DepositParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DepositParams::InternalSwap(DepositParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.min_deposit_.InternalSwap(&other->_impl_.min_deposit_);
  swap(_impl_.max_deposit_period_, other->_impl_.max_deposit_period_);
}

::google::protobuf::Metadata DepositParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VotingParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<VotingParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(VotingParams, _impl_._has_bits_);
};

void VotingParams::clear_voting_period() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_period_ != nullptr) _impl_.voting_period_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
VotingParams::VotingParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.VotingParams)
}
inline PROTOBUF_NDEBUG_INLINE VotingParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::VotingParams& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

VotingParams::VotingParams(
    ::google::protobuf::Arena* arena,
    const VotingParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VotingParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.voting_period_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.voting_period_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.VotingParams)
}
inline PROTOBUF_NDEBUG_INLINE VotingParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VotingParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.voting_period_ = {};
}
VotingParams::~VotingParams() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.VotingParams)
  SharedDtor(*this);
}
inline void VotingParams::SharedDtor(MessageLite& self) {
  VotingParams& this_ = static_cast<VotingParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.voting_period_;
  this_._impl_.~Impl_();
}

inline void* VotingParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) VotingParams(arena);
}
constexpr auto VotingParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(VotingParams),
                                            alignof(VotingParams));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull VotingParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_VotingParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &VotingParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<VotingParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &VotingParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<VotingParams>(), &VotingParams::ByteSizeLong,
            &VotingParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(VotingParams, _impl_._cached_size_),
        false,
    },
    &VotingParams::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* VotingParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> VotingParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(VotingParams, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::VotingParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "voting_period,omitempty", (.gogoproto.stdduration) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(VotingParams, _impl_.voting_period_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "voting_period,omitempty", (.gogoproto.stdduration) = true];
    {PROTOBUF_FIELD_OFFSET(VotingParams, _impl_.voting_period_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void VotingParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.VotingParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.voting_period_ != nullptr);
    _impl_.voting_period_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VotingParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VotingParams& this_ = static_cast<const VotingParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VotingParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VotingParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.VotingParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "voting_period,omitempty", (.gogoproto.stdduration) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.voting_period_, this_._impl_.voting_period_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.VotingParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VotingParams::ByteSizeLong(const MessageLite& base) {
          const VotingParams& this_ = static_cast<const VotingParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VotingParams::ByteSizeLong() const {
          const VotingParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.VotingParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .google.protobuf.Duration voting_period = 1 [json_name = "votingPeriod", (.gogoproto.nullable) = false, (.gogoproto.jsontag) = "voting_period,omitempty", (.gogoproto.stdduration) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_period_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VotingParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VotingParams*>(&to_msg);
  auto& from = static_cast<const VotingParams&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.VotingParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.voting_period_ != nullptr);
    if (_this->_impl_.voting_period_ == nullptr) {
      _this->_impl_.voting_period_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.voting_period_);
    } else {
      _this->_impl_.voting_period_->MergeFrom(*from._impl_.voting_period_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VotingParams::CopyFrom(const VotingParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.VotingParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VotingParams::InternalSwap(VotingParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.voting_period_, other->_impl_.voting_period_);
}

::google::protobuf::Metadata VotingParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TallyParams::_Internal {
 public:
};

TallyParams::TallyParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.TallyParams)
}
inline PROTOBUF_NDEBUG_INLINE TallyParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::TallyParams& from_msg)
      : quorum_(arena, from.quorum_),
        threshold_(arena, from.threshold_),
        veto_threshold_(arena, from.veto_threshold_),
        _cached_size_{0} {}

TallyParams::TallyParams(
    ::google::protobuf::Arena* arena,
    const TallyParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TallyParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.TallyParams)
}
inline PROTOBUF_NDEBUG_INLINE TallyParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : quorum_(arena),
        threshold_(arena),
        veto_threshold_(arena),
        _cached_size_{0} {}

inline void TallyParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TallyParams::~TallyParams() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.TallyParams)
  SharedDtor(*this);
}
inline void TallyParams::SharedDtor(MessageLite& self) {
  TallyParams& this_ = static_cast<TallyParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.quorum_.Destroy();
  this_._impl_.threshold_.Destroy();
  this_._impl_.veto_threshold_.Destroy();
  this_._impl_.~Impl_();
}

inline void* TallyParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TallyParams(arena);
}
constexpr auto TallyParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TallyParams),
                                            alignof(TallyParams));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TallyParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TallyParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TallyParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TallyParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TallyParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TallyParams>(), &TallyParams::ByteSizeLong,
            &TallyParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TallyParams, _impl_._cached_size_),
        false,
    },
    &TallyParams::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TallyParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> TallyParams::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::TallyParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes quorum = 1 [json_name = "quorum", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "quorum,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.quorum_)}},
    // bytes threshold = 2 [json_name = "threshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.threshold_)}},
    // bytes veto_threshold = 3 [json_name = "vetoThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "veto_threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.veto_threshold_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes quorum = 1 [json_name = "quorum", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "quorum,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.quorum_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes threshold = 2 [json_name = "threshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes veto_threshold = 3 [json_name = "vetoThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "veto_threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(TallyParams, _impl_.veto_threshold_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TallyParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.TallyParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.quorum_.ClearToEmpty();
  _impl_.threshold_.ClearToEmpty();
  _impl_.veto_threshold_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TallyParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TallyParams& this_ = static_cast<const TallyParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TallyParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TallyParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.TallyParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes quorum = 1 [json_name = "quorum", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "quorum,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_quorum().empty()) {
            const std::string& _s = this_._internal_quorum();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes threshold = 2 [json_name = "threshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_threshold().empty()) {
            const std::string& _s = this_._internal_threshold();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bytes veto_threshold = 3 [json_name = "vetoThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "veto_threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_veto_threshold().empty()) {
            const std::string& _s = this_._internal_veto_threshold();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.TallyParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TallyParams::ByteSizeLong(const MessageLite& base) {
          const TallyParams& this_ = static_cast<const TallyParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TallyParams::ByteSizeLong() const {
          const TallyParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.TallyParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes quorum = 1 [json_name = "quorum", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "quorum,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_quorum().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_quorum());
            }
            // bytes threshold = 2 [json_name = "threshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_threshold());
            }
            // bytes veto_threshold = 3 [json_name = "vetoThreshold", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.gogoproto.jsontag) = "veto_threshold,omitempty", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_veto_threshold().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_veto_threshold());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TallyParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TallyParams*>(&to_msg);
  auto& from = static_cast<const TallyParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.TallyParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_quorum().empty()) {
    _this->_internal_set_quorum(from._internal_quorum());
  }
  if (!from._internal_threshold().empty()) {
    _this->_internal_set_threshold(from._internal_threshold());
  }
  if (!from._internal_veto_threshold().empty()) {
    _this->_internal_set_veto_threshold(from._internal_veto_threshold());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TallyParams::CopyFrom(const TallyParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.TallyParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TallyParams::InternalSwap(TallyParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.quorum_, &other->_impl_.quorum_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.threshold_, &other->_impl_.threshold_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.veto_threshold_, &other->_impl_.veto_threshold_, arena);
}

::google::protobuf::Metadata TallyParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace gov
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
