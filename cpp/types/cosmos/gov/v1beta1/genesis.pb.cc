// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/gov/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/gov/v1beta1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace gov {
namespace v1beta1 {

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        deposits_{},
        votes_{},
        proposals_{},
        deposit_params_{nullptr},
        voting_params_{nullptr},
        tally_params_{nullptr},
        starting_proposal_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1beta1
}  // namespace gov
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_.starting_proposal_id_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_.deposits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_.votes_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_.proposals_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_.deposit_params_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_.voting_params_),
        PROTOBUF_FIELD_OFFSET(::cosmos::gov::v1beta1::GenesisState, _impl_.tally_params_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        1,
        2,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::cosmos::gov::v1beta1::GenesisState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::gov::v1beta1::_GenesisState_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n cosmos/gov/v1beta1/genesis.proto\022\022cosm"
    "os.gov.v1beta1\032\024gogoproto/gogo.proto\032\034co"
    "smos/gov/v1beta1/gov.proto\032\021amino/amino."
    "proto\"\236\004\n\014GenesisState\0220\n\024starting_propo"
    "sal_id\030\001 \001(\004R\022startingProposalId\022N\n\010depo"
    "sits\030\002 \003(\0132\033.cosmos.gov.v1beta1.DepositB"
    "\025\310\336\037\000\252\337\037\010Deposits\250\347\260*\001R\010deposits\022B\n\005vote"
    "s\030\003 \003(\0132\030.cosmos.gov.v1beta1.VoteB\022\310\336\037\000\252"
    "\337\037\005Votes\250\347\260*\001R\005votes\022R\n\tproposals\030\004 \003(\0132"
    "\034.cosmos.gov.v1beta1.ProposalB\026\310\336\037\000\252\337\037\tP"
    "roposals\250\347\260*\001R\tproposals\022S\n\016deposit_para"
    "ms\030\005 \001(\0132!.cosmos.gov.v1beta1.DepositPar"
    "amsB\t\310\336\037\000\250\347\260*\001R\rdepositParams\022P\n\rvoting_"
    "params\030\006 \001(\0132 .cosmos.gov.v1beta1.Voting"
    "ParamsB\t\310\336\037\000\250\347\260*\001R\014votingParams\022M\n\014tally"
    "_params\030\007 \001(\0132\037.cosmos.gov.v1beta1.Tally"
    "ParamsB\t\310\336\037\000\250\347\260*\001R\013tallyParamsB2Z0github"
    ".com/cosmos/cosmos-sdk/x/gov/types/v1bet"
    "a1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto_deps[3] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fgov_2fv1beta1_2fgov_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto = {
    false,
    false,
    730,
    descriptor_table_protodef_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto,
    "cosmos/gov/v1beta1/genesis.proto",
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto_once,
    descriptor_table_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto,
    file_level_service_descriptors_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto,
};
namespace cosmos {
namespace gov {
namespace v1beta1 {
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
};

void GenesisState::clear_deposits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deposits_.Clear();
}
void GenesisState::clear_votes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.votes_.Clear();
}
void GenesisState::clear_proposals() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposals_.Clear();
}
void GenesisState::clear_deposit_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.deposit_params_ != nullptr) _impl_.deposit_params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void GenesisState::clear_voting_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.voting_params_ != nullptr) _impl_.voting_params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void GenesisState::clear_tally_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tally_params_ != nullptr) _impl_.tally_params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.gov.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::gov::v1beta1::GenesisState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        deposits_{visibility, arena, from.deposits_},
        votes_{visibility, arena, from.votes_},
        proposals_{visibility, arena, from.proposals_} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.deposit_params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::DepositParams>(
                              arena, *from._impl_.deposit_params_)
                        : nullptr;
  _impl_.voting_params_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::VotingParams>(
                              arena, *from._impl_.voting_params_)
                        : nullptr;
  _impl_.tally_params_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::TallyParams>(
                              arena, *from._impl_.tally_params_)
                        : nullptr;
  _impl_.starting_proposal_id_ = from._impl_.starting_proposal_id_;

  // @@protoc_insertion_point(copy_constructor:cosmos.gov.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        deposits_{visibility, arena},
        votes_{visibility, arena},
        proposals_{visibility, arena} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, deposit_params_),
           0,
           offsetof(Impl_, starting_proposal_id_) -
               offsetof(Impl_, deposit_params_) +
               sizeof(Impl_::starting_proposal_id_));
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:cosmos.gov.v1beta1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.deposit_params_;
  delete this_._impl_.voting_params_;
  delete this_._impl_.tally_params_;
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.deposits_) +
          decltype(GenesisState::_impl_.deposits_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.votes_) +
          decltype(GenesisState::_impl_.votes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposals_) +
          decltype(GenesisState::_impl_.proposals_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2> GenesisState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 starting_proposal_id = 1 [json_name = "startingProposalId"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GenesisState, _impl_.starting_proposal_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.starting_proposal_id_)}},
    // repeated .cosmos.gov.v1beta1.Deposit deposits = 2 [json_name = "deposits", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Deposits", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.deposits_)}},
    // repeated .cosmos.gov.v1beta1.Vote votes = 3 [json_name = "votes", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Votes", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.votes_)}},
    // repeated .cosmos.gov.v1beta1.Proposal proposals = 4 [json_name = "proposals", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Proposals", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposals_)}},
    // .cosmos.gov.v1beta1.DepositParams deposit_params = 5 [json_name = "depositParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 3, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.deposit_params_)}},
    // .cosmos.gov.v1beta1.VotingParams voting_params = 6 [json_name = "votingParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 4, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.voting_params_)}},
    // .cosmos.gov.v1beta1.TallyParams tally_params = 7 [json_name = "tallyParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 5, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.tally_params_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 starting_proposal_id = 1 [json_name = "startingProposalId"];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.starting_proposal_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .cosmos.gov.v1beta1.Deposit deposits = 2 [json_name = "deposits", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Deposits", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.deposits_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.gov.v1beta1.Vote votes = 3 [json_name = "votes", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Votes", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.votes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.gov.v1beta1.Proposal proposals = 4 [json_name = "proposals", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Proposals", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.proposals_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.gov.v1beta1.DepositParams deposit_params = 5 [json_name = "depositParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.deposit_params_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.gov.v1beta1.VotingParams voting_params = 6 [json_name = "votingParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.voting_params_), _Internal::kHasBitsOffset + 1, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.gov.v1beta1.TallyParams tally_params = 7 [json_name = "tallyParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.tally_params_), _Internal::kHasBitsOffset + 2, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::Deposit>()},
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::Vote>()},
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::Proposal>()},
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::DepositParams>()},
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::VotingParams>()},
    {::_pbi::TcParser::GetTable<::cosmos::gov::v1beta1::TallyParams>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.gov.v1beta1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.deposits_.Clear();
  _impl_.votes_.Clear();
  _impl_.proposals_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.deposit_params_ != nullptr);
      _impl_.deposit_params_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.voting_params_ != nullptr);
      _impl_.voting_params_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.tally_params_ != nullptr);
      _impl_.tally_params_->Clear();
    }
  }
  _impl_.starting_proposal_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.gov.v1beta1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 starting_proposal_id = 1 [json_name = "startingProposalId"];
          if (this_._internal_starting_proposal_id() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_starting_proposal_id(), target);
          }

          // repeated .cosmos.gov.v1beta1.Deposit deposits = 2 [json_name = "deposits", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Deposits", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_deposits_size());
               i < n; i++) {
            const auto& repfield = this_._internal_deposits().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.gov.v1beta1.Vote votes = 3 [json_name = "votes", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Votes", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_votes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_votes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.gov.v1beta1.Proposal proposals = 4 [json_name = "proposals", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Proposals", (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_proposals_size());
               i < n; i++) {
            const auto& repfield = this_._internal_proposals().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.gov.v1beta1.DepositParams deposit_params = 5 [json_name = "depositParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.deposit_params_, this_._impl_.deposit_params_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.gov.v1beta1.VotingParams voting_params = 6 [json_name = "votingParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                6, *this_._impl_.voting_params_, this_._impl_.voting_params_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.gov.v1beta1.TallyParams tally_params = 7 [json_name = "tallyParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                7, *this_._impl_.tally_params_, this_._impl_.tally_params_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.gov.v1beta1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.gov.v1beta1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.gov.v1beta1.Deposit deposits = 2 [json_name = "deposits", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Deposits", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_deposits_size();
              for (const auto& msg : this_._internal_deposits()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.gov.v1beta1.Vote votes = 3 [json_name = "votes", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Votes", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_votes_size();
              for (const auto& msg : this_._internal_votes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.gov.v1beta1.Proposal proposals = 4 [json_name = "proposals", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "Proposals", (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_proposals_size();
              for (const auto& msg : this_._internal_proposals()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .cosmos.gov.v1beta1.DepositParams deposit_params = 5 [json_name = "depositParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.deposit_params_);
            }
            // .cosmos.gov.v1beta1.VotingParams voting_params = 6 [json_name = "votingParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.voting_params_);
            }
            // .cosmos.gov.v1beta1.TallyParams tally_params = 7 [json_name = "tallyParams", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tally_params_);
            }
          }
           {
            // uint64 starting_proposal_id = 1 [json_name = "startingProposalId"];
            if (this_._internal_starting_proposal_id() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_starting_proposal_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.gov.v1beta1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_deposits()->MergeFrom(
      from._internal_deposits());
  _this->_internal_mutable_votes()->MergeFrom(
      from._internal_votes());
  _this->_internal_mutable_proposals()->MergeFrom(
      from._internal_proposals());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.deposit_params_ != nullptr);
      if (_this->_impl_.deposit_params_ == nullptr) {
        _this->_impl_.deposit_params_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::DepositParams>(arena, *from._impl_.deposit_params_);
      } else {
        _this->_impl_.deposit_params_->MergeFrom(*from._impl_.deposit_params_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.voting_params_ != nullptr);
      if (_this->_impl_.voting_params_ == nullptr) {
        _this->_impl_.voting_params_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::VotingParams>(arena, *from._impl_.voting_params_);
      } else {
        _this->_impl_.voting_params_->MergeFrom(*from._impl_.voting_params_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.tally_params_ != nullptr);
      if (_this->_impl_.tally_params_ == nullptr) {
        _this->_impl_.tally_params_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::gov::v1beta1::TallyParams>(arena, *from._impl_.tally_params_);
      } else {
        _this->_impl_.tally_params_->MergeFrom(*from._impl_.tally_params_);
      }
    }
  }
  if (from._internal_starting_proposal_id() != 0) {
    _this->_impl_.starting_proposal_id_ = from._impl_.starting_proposal_id_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.gov.v1beta1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.deposits_.InternalSwap(&other->_impl_.deposits_);
  _impl_.votes_.InternalSwap(&other->_impl_.votes_);
  _impl_.proposals_.InternalSwap(&other->_impl_.proposals_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.starting_proposal_id_)
      + sizeof(GenesisState::_impl_.starting_proposal_id_)
      - PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.deposit_params_)>(
          reinterpret_cast<char*>(&_impl_.deposit_params_),
          reinterpret_cast<char*>(&other->_impl_.deposit_params_));
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace gov
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fgov_2fv1beta1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
