// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/slashing/v1beta1/slashing.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fslashing_2fv1beta1_2fslashing_2eproto_2epb_2eh
#define cosmos_2fslashing_2fv1beta1_2fslashing_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto;
namespace cosmos {
namespace slashing {
namespace v1beta1 {
class Params;
struct ParamsDefaultTypeInternal;
extern ParamsDefaultTypeInternal _Params_default_instance_;
class ValidatorSigningInfo;
struct ValidatorSigningInfoDefaultTypeInternal;
extern ValidatorSigningInfoDefaultTypeInternal _ValidatorSigningInfo_default_instance_;
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace slashing {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class ValidatorSigningInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.slashing.v1beta1.ValidatorSigningInfo) */ {
 public:
  inline ValidatorSigningInfo() : ValidatorSigningInfo(nullptr) {}
  ~ValidatorSigningInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidatorSigningInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidatorSigningInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidatorSigningInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidatorSigningInfo(const ValidatorSigningInfo& from) : ValidatorSigningInfo(nullptr, from) {}
  inline ValidatorSigningInfo(ValidatorSigningInfo&& from) noexcept
      : ValidatorSigningInfo(nullptr, std::move(from)) {}
  inline ValidatorSigningInfo& operator=(const ValidatorSigningInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidatorSigningInfo& operator=(ValidatorSigningInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidatorSigningInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidatorSigningInfo* internal_default_instance() {
    return reinterpret_cast<const ValidatorSigningInfo*>(
        &_ValidatorSigningInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ValidatorSigningInfo& a, ValidatorSigningInfo& b) { a.Swap(&b); }
  inline void Swap(ValidatorSigningInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidatorSigningInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidatorSigningInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidatorSigningInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidatorSigningInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidatorSigningInfo& from) { ValidatorSigningInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidatorSigningInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.slashing.v1beta1.ValidatorSigningInfo"; }

 protected:
  explicit ValidatorSigningInfo(::google::protobuf::Arena* arena);
  ValidatorSigningInfo(::google::protobuf::Arena* arena, const ValidatorSigningInfo& from);
  ValidatorSigningInfo(::google::protobuf::Arena* arena, ValidatorSigningInfo&& from) noexcept
      : ValidatorSigningInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kJailedUntilFieldNumber = 4,
    kStartHeightFieldNumber = 2,
    kIndexOffsetFieldNumber = 3,
    kMissedBlocksCounterFieldNumber = 6,
    kTombstonedFieldNumber = 5,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // .google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
  bool has_jailed_until() const;
  void clear_jailed_until() ;
  const ::google::protobuf::Timestamp& jailed_until() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_jailed_until();
  ::google::protobuf::Timestamp* mutable_jailed_until();
  void set_allocated_jailed_until(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_jailed_until(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_jailed_until();

  private:
  const ::google::protobuf::Timestamp& _internal_jailed_until() const;
  ::google::protobuf::Timestamp* _internal_mutable_jailed_until();

  public:
  // int64 start_height = 2 [json_name = "startHeight"];
  void clear_start_height() ;
  ::int64_t start_height() const;
  void set_start_height(::int64_t value);

  private:
  ::int64_t _internal_start_height() const;
  void _internal_set_start_height(::int64_t value);

  public:
  // int64 index_offset = 3 [json_name = "indexOffset"];
  void clear_index_offset() ;
  ::int64_t index_offset() const;
  void set_index_offset(::int64_t value);

  private:
  ::int64_t _internal_index_offset() const;
  void _internal_set_index_offset(::int64_t value);

  public:
  // int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];
  void clear_missed_blocks_counter() ;
  ::int64_t missed_blocks_counter() const;
  void set_missed_blocks_counter(::int64_t value);

  private:
  ::int64_t _internal_missed_blocks_counter() const;
  void _internal_set_missed_blocks_counter(::int64_t value);

  public:
  // bool tombstoned = 5 [json_name = "tombstoned"];
  void clear_tombstoned() ;
  bool tombstoned() const;
  void set_tombstoned(bool value);

  private:
  bool _internal_tombstoned() const;
  void _internal_set_tombstoned(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.slashing.v1beta1.ValidatorSigningInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidatorSigningInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::Timestamp* jailed_until_;
    ::int64_t start_height_;
    ::int64_t index_offset_;
    ::int64_t missed_blocks_counter_;
    bool tombstoned_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto;
};
// -------------------------------------------------------------------

class Params final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.slashing.v1beta1.Params) */ {
 public:
  inline Params() : Params(nullptr) {}
  ~Params() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Params* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Params));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Params(
      ::google::protobuf::internal::ConstantInitialized);

  inline Params(const Params& from) : Params(nullptr, from) {}
  inline Params(Params&& from) noexcept
      : Params(nullptr, std::move(from)) {}
  inline Params& operator=(const Params& from) {
    CopyFrom(from);
    return *this;
  }
  inline Params& operator=(Params&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Params& default_instance() {
    return *internal_default_instance();
  }
  static inline const Params* internal_default_instance() {
    return reinterpret_cast<const Params*>(
        &_Params_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Params& a, Params& b) { a.Swap(&b); }
  inline void Swap(Params* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Params* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Params* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Params>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Params& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Params& from) { Params::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Params* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.slashing.v1beta1.Params"; }

 protected:
  explicit Params(::google::protobuf::Arena* arena);
  Params(::google::protobuf::Arena* arena, const Params& from);
  Params(::google::protobuf::Arena* arena, Params&& from) noexcept
      : Params(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinSignedPerWindowFieldNumber = 2,
    kSlashFractionDoubleSignFieldNumber = 4,
    kSlashFractionDowntimeFieldNumber = 5,
    kDowntimeJailDurationFieldNumber = 3,
    kSignedBlocksWindowFieldNumber = 1,
  };
  // bytes min_signed_per_window = 2 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
  void clear_min_signed_per_window() ;
  const std::string& min_signed_per_window() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_min_signed_per_window(Arg_&& arg, Args_... args);
  std::string* mutable_min_signed_per_window();
  PROTOBUF_NODISCARD std::string* release_min_signed_per_window();
  void set_allocated_min_signed_per_window(std::string* value);

  private:
  const std::string& _internal_min_signed_per_window() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_min_signed_per_window(
      const std::string& value);
  std::string* _internal_mutable_min_signed_per_window();

  public:
  // bytes slash_fraction_double_sign = 4 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
  void clear_slash_fraction_double_sign() ;
  const std::string& slash_fraction_double_sign() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_slash_fraction_double_sign(Arg_&& arg, Args_... args);
  std::string* mutable_slash_fraction_double_sign();
  PROTOBUF_NODISCARD std::string* release_slash_fraction_double_sign();
  void set_allocated_slash_fraction_double_sign(std::string* value);

  private:
  const std::string& _internal_slash_fraction_double_sign() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_slash_fraction_double_sign(
      const std::string& value);
  std::string* _internal_mutable_slash_fraction_double_sign();

  public:
  // bytes slash_fraction_downtime = 5 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
  void clear_slash_fraction_downtime() ;
  const std::string& slash_fraction_downtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_slash_fraction_downtime(Arg_&& arg, Args_... args);
  std::string* mutable_slash_fraction_downtime();
  PROTOBUF_NODISCARD std::string* release_slash_fraction_downtime();
  void set_allocated_slash_fraction_downtime(std::string* value);

  private:
  const std::string& _internal_slash_fraction_downtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_slash_fraction_downtime(
      const std::string& value);
  std::string* _internal_mutable_slash_fraction_downtime();

  public:
  // .google.protobuf.Duration downtime_jail_duration = 3 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
  bool has_downtime_jail_duration() const;
  void clear_downtime_jail_duration() ;
  const ::google::protobuf::Duration& downtime_jail_duration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_downtime_jail_duration();
  ::google::protobuf::Duration* mutable_downtime_jail_duration();
  void set_allocated_downtime_jail_duration(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_downtime_jail_duration(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_downtime_jail_duration();

  private:
  const ::google::protobuf::Duration& _internal_downtime_jail_duration() const;
  ::google::protobuf::Duration* _internal_mutable_downtime_jail_duration();

  public:
  // int64 signed_blocks_window = 1 [json_name = "signedBlocksWindow"];
  void clear_signed_blocks_window() ;
  ::int64_t signed_blocks_window() const;
  void set_signed_blocks_window(::int64_t value);

  private:
  ::int64_t _internal_signed_blocks_window() const;
  void _internal_set_signed_blocks_window(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.slashing.v1beta1.Params)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Params& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr min_signed_per_window_;
    ::google::protobuf::internal::ArenaStringPtr slash_fraction_double_sign_;
    ::google::protobuf::internal::ArenaStringPtr slash_fraction_downtime_;
    ::google::protobuf::Duration* downtime_jail_duration_;
    ::int64_t signed_blocks_window_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ValidatorSigningInfo

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
inline void ValidatorSigningInfo::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& ValidatorSigningInfo::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.ValidatorSigningInfo.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidatorSigningInfo::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.ValidatorSigningInfo.address)
}
inline std::string* ValidatorSigningInfo::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.slashing.v1beta1.ValidatorSigningInfo.address)
  return _s;
}
inline const std::string& ValidatorSigningInfo::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void ValidatorSigningInfo::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* ValidatorSigningInfo::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* ValidatorSigningInfo::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.slashing.v1beta1.ValidatorSigningInfo.address)
  return _impl_.address_.Release();
}
inline void ValidatorSigningInfo::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.slashing.v1beta1.ValidatorSigningInfo.address)
}

// int64 start_height = 2 [json_name = "startHeight"];
inline void ValidatorSigningInfo::clear_start_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_height_ = ::int64_t{0};
}
inline ::int64_t ValidatorSigningInfo::start_height() const {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.ValidatorSigningInfo.start_height)
  return _internal_start_height();
}
inline void ValidatorSigningInfo::set_start_height(::int64_t value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.ValidatorSigningInfo.start_height)
}
inline ::int64_t ValidatorSigningInfo::_internal_start_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_height_;
}
inline void ValidatorSigningInfo::_internal_set_start_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_height_ = value;
}

// int64 index_offset = 3 [json_name = "indexOffset"];
inline void ValidatorSigningInfo::clear_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = ::int64_t{0};
}
inline ::int64_t ValidatorSigningInfo::index_offset() const {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.ValidatorSigningInfo.index_offset)
  return _internal_index_offset();
}
inline void ValidatorSigningInfo::set_index_offset(::int64_t value) {
  _internal_set_index_offset(value);
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.ValidatorSigningInfo.index_offset)
}
inline ::int64_t ValidatorSigningInfo::_internal_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_offset_;
}
inline void ValidatorSigningInfo::_internal_set_index_offset(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = value;
}

// .google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
inline bool ValidatorSigningInfo::has_jailed_until() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.jailed_until_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& ValidatorSigningInfo::_internal_jailed_until() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.jailed_until_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& ValidatorSigningInfo::jailed_until() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.ValidatorSigningInfo.jailed_until)
  return _internal_jailed_until();
}
inline void ValidatorSigningInfo::unsafe_arena_set_allocated_jailed_until(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.jailed_until_);
  }
  _impl_.jailed_until_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.slashing.v1beta1.ValidatorSigningInfo.jailed_until)
}
inline ::google::protobuf::Timestamp* ValidatorSigningInfo::release_jailed_until() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.jailed_until_;
  _impl_.jailed_until_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* ValidatorSigningInfo::unsafe_arena_release_jailed_until() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.slashing.v1beta1.ValidatorSigningInfo.jailed_until)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.jailed_until_;
  _impl_.jailed_until_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* ValidatorSigningInfo::_internal_mutable_jailed_until() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jailed_until_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.jailed_until_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.jailed_until_;
}
inline ::google::protobuf::Timestamp* ValidatorSigningInfo::mutable_jailed_until() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_jailed_until();
  // @@protoc_insertion_point(field_mutable:cosmos.slashing.v1beta1.ValidatorSigningInfo.jailed_until)
  return _msg;
}
inline void ValidatorSigningInfo::set_allocated_jailed_until(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.jailed_until_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.jailed_until_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.slashing.v1beta1.ValidatorSigningInfo.jailed_until)
}

// bool tombstoned = 5 [json_name = "tombstoned"];
inline void ValidatorSigningInfo::clear_tombstoned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tombstoned_ = false;
}
inline bool ValidatorSigningInfo::tombstoned() const {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.ValidatorSigningInfo.tombstoned)
  return _internal_tombstoned();
}
inline void ValidatorSigningInfo::set_tombstoned(bool value) {
  _internal_set_tombstoned(value);
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.ValidatorSigningInfo.tombstoned)
}
inline bool ValidatorSigningInfo::_internal_tombstoned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tombstoned_;
}
inline void ValidatorSigningInfo::_internal_set_tombstoned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tombstoned_ = value;
}

// int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];
inline void ValidatorSigningInfo::clear_missed_blocks_counter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.missed_blocks_counter_ = ::int64_t{0};
}
inline ::int64_t ValidatorSigningInfo::missed_blocks_counter() const {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.ValidatorSigningInfo.missed_blocks_counter)
  return _internal_missed_blocks_counter();
}
inline void ValidatorSigningInfo::set_missed_blocks_counter(::int64_t value) {
  _internal_set_missed_blocks_counter(value);
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.ValidatorSigningInfo.missed_blocks_counter)
}
inline ::int64_t ValidatorSigningInfo::_internal_missed_blocks_counter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.missed_blocks_counter_;
}
inline void ValidatorSigningInfo::_internal_set_missed_blocks_counter(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.missed_blocks_counter_ = value;
}

// -------------------------------------------------------------------

// Params

// int64 signed_blocks_window = 1 [json_name = "signedBlocksWindow"];
inline void Params::clear_signed_blocks_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_blocks_window_ = ::int64_t{0};
}
inline ::int64_t Params::signed_blocks_window() const {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.Params.signed_blocks_window)
  return _internal_signed_blocks_window();
}
inline void Params::set_signed_blocks_window(::int64_t value) {
  _internal_set_signed_blocks_window(value);
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.Params.signed_blocks_window)
}
inline ::int64_t Params::_internal_signed_blocks_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signed_blocks_window_;
}
inline void Params::_internal_set_signed_blocks_window(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_blocks_window_ = value;
}

// bytes min_signed_per_window = 2 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
inline void Params::clear_min_signed_per_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_signed_per_window_.ClearToEmpty();
}
inline const std::string& Params::min_signed_per_window() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.Params.min_signed_per_window)
  return _internal_min_signed_per_window();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Params::set_min_signed_per_window(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_signed_per_window_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.Params.min_signed_per_window)
}
inline std::string* Params::mutable_min_signed_per_window() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_min_signed_per_window();
  // @@protoc_insertion_point(field_mutable:cosmos.slashing.v1beta1.Params.min_signed_per_window)
  return _s;
}
inline const std::string& Params::_internal_min_signed_per_window() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_signed_per_window_.Get();
}
inline void Params::_internal_set_min_signed_per_window(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_signed_per_window_.Set(value, GetArena());
}
inline std::string* Params::_internal_mutable_min_signed_per_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.min_signed_per_window_.Mutable( GetArena());
}
inline std::string* Params::release_min_signed_per_window() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.slashing.v1beta1.Params.min_signed_per_window)
  return _impl_.min_signed_per_window_.Release();
}
inline void Params::set_allocated_min_signed_per_window(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_signed_per_window_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.min_signed_per_window_.IsDefault()) {
    _impl_.min_signed_per_window_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.slashing.v1beta1.Params.min_signed_per_window)
}

// .google.protobuf.Duration downtime_jail_duration = 3 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
inline bool Params::has_downtime_jail_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.downtime_jail_duration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& Params::_internal_downtime_jail_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.downtime_jail_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& Params::downtime_jail_duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.Params.downtime_jail_duration)
  return _internal_downtime_jail_duration();
}
inline void Params::unsafe_arena_set_allocated_downtime_jail_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.downtime_jail_duration_);
  }
  _impl_.downtime_jail_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.slashing.v1beta1.Params.downtime_jail_duration)
}
inline ::google::protobuf::Duration* Params::release_downtime_jail_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.downtime_jail_duration_;
  _impl_.downtime_jail_duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Duration* Params::unsafe_arena_release_downtime_jail_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.slashing.v1beta1.Params.downtime_jail_duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.downtime_jail_duration_;
  _impl_.downtime_jail_duration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* Params::_internal_mutable_downtime_jail_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.downtime_jail_duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.downtime_jail_duration_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.downtime_jail_duration_;
}
inline ::google::protobuf::Duration* Params::mutable_downtime_jail_duration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Duration* _msg = _internal_mutable_downtime_jail_duration();
  // @@protoc_insertion_point(field_mutable:cosmos.slashing.v1beta1.Params.downtime_jail_duration)
  return _msg;
}
inline void Params::set_allocated_downtime_jail_duration(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.downtime_jail_duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.downtime_jail_duration_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.slashing.v1beta1.Params.downtime_jail_duration)
}

// bytes slash_fraction_double_sign = 4 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
inline void Params::clear_slash_fraction_double_sign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_double_sign_.ClearToEmpty();
}
inline const std::string& Params::slash_fraction_double_sign() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.Params.slash_fraction_double_sign)
  return _internal_slash_fraction_double_sign();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Params::set_slash_fraction_double_sign(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_double_sign_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.Params.slash_fraction_double_sign)
}
inline std::string* Params::mutable_slash_fraction_double_sign() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_slash_fraction_double_sign();
  // @@protoc_insertion_point(field_mutable:cosmos.slashing.v1beta1.Params.slash_fraction_double_sign)
  return _s;
}
inline const std::string& Params::_internal_slash_fraction_double_sign() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slash_fraction_double_sign_.Get();
}
inline void Params::_internal_set_slash_fraction_double_sign(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_double_sign_.Set(value, GetArena());
}
inline std::string* Params::_internal_mutable_slash_fraction_double_sign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.slash_fraction_double_sign_.Mutable( GetArena());
}
inline std::string* Params::release_slash_fraction_double_sign() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.slashing.v1beta1.Params.slash_fraction_double_sign)
  return _impl_.slash_fraction_double_sign_.Release();
}
inline void Params::set_allocated_slash_fraction_double_sign(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_double_sign_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.slash_fraction_double_sign_.IsDefault()) {
    _impl_.slash_fraction_double_sign_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.slashing.v1beta1.Params.slash_fraction_double_sign)
}

// bytes slash_fraction_downtime = 5 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
inline void Params::clear_slash_fraction_downtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_downtime_.ClearToEmpty();
}
inline const std::string& Params::slash_fraction_downtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.slashing.v1beta1.Params.slash_fraction_downtime)
  return _internal_slash_fraction_downtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Params::set_slash_fraction_downtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_downtime_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.slashing.v1beta1.Params.slash_fraction_downtime)
}
inline std::string* Params::mutable_slash_fraction_downtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_slash_fraction_downtime();
  // @@protoc_insertion_point(field_mutable:cosmos.slashing.v1beta1.Params.slash_fraction_downtime)
  return _s;
}
inline const std::string& Params::_internal_slash_fraction_downtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.slash_fraction_downtime_.Get();
}
inline void Params::_internal_set_slash_fraction_downtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_downtime_.Set(value, GetArena());
}
inline std::string* Params::_internal_mutable_slash_fraction_downtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.slash_fraction_downtime_.Mutable( GetArena());
}
inline std::string* Params::release_slash_fraction_downtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.slashing.v1beta1.Params.slash_fraction_downtime)
  return _impl_.slash_fraction_downtime_.Release();
}
inline void Params::set_allocated_slash_fraction_downtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.slash_fraction_downtime_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.slash_fraction_downtime_.IsDefault()) {
    _impl_.slash_fraction_downtime_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.slashing.v1beta1.Params.slash_fraction_downtime)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fslashing_2fv1beta1_2fslashing_2eproto_2epb_2eh
