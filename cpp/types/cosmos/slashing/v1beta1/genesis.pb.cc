// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/slashing/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/slashing/v1beta1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace slashing {
namespace v1beta1 {

inline constexpr MissedBlock::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{::int64_t{0}},
        missed_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MissedBlock::MissedBlock(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MissedBlockDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MissedBlockDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MissedBlockDefaultTypeInternal() {}
  union {
    MissedBlock _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MissedBlockDefaultTypeInternal _MissedBlock_default_instance_;

inline constexpr ValidatorMissedBlocks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : missed_blocks_{},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorMissedBlocks::ValidatorMissedBlocks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorMissedBlocksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorMissedBlocksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorMissedBlocksDefaultTypeInternal() {}
  union {
    ValidatorMissedBlocks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorMissedBlocksDefaultTypeInternal _ValidatorMissedBlocks_default_instance_;

inline constexpr SigningInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        validator_signing_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SigningInfo::SigningInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SigningInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SigningInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SigningInfoDefaultTypeInternal() {}
  union {
    SigningInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SigningInfoDefaultTypeInternal _SigningInfo_default_instance_;

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signing_infos_{},
        missed_blocks_{},
        params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::GenesisState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::GenesisState, _impl_.params_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::GenesisState, _impl_.signing_infos_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::GenesisState, _impl_.missed_blocks_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::SigningInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::SigningInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::SigningInfo, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::SigningInfo, _impl_.validator_signing_info_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorMissedBlocks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorMissedBlocks, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorMissedBlocks, _impl_.missed_blocks_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::MissedBlock, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::MissedBlock, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::MissedBlock, _impl_.missed_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::cosmos::slashing::v1beta1::GenesisState)},
        {14, 24, -1, sizeof(::cosmos::slashing::v1beta1::SigningInfo)},
        {26, -1, -1, sizeof(::cosmos::slashing::v1beta1::ValidatorMissedBlocks)},
        {36, -1, -1, sizeof(::cosmos::slashing::v1beta1::MissedBlock)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::slashing::v1beta1::_GenesisState_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_SigningInfo_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_ValidatorMissedBlocks_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_MissedBlock_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n%cosmos/slashing/v1beta1/genesis.proto\022"
    "\027cosmos.slashing.v1beta1\032\024gogoproto/gogo"
    ".proto\032&cosmos/slashing/v1beta1/slashing"
    ".proto\032\031cosmos_proto/cosmos.proto\032\021amino"
    "/amino.proto\"\210\002\n\014GenesisState\022B\n\006params\030"
    "\001 \001(\0132\037.cosmos.slashing.v1beta1.ParamsB\t"
    "\310\336\037\000\250\347\260*\001R\006params\022T\n\rsigning_infos\030\002 \003(\013"
    "2$.cosmos.slashing.v1beta1.SigningInfoB\t"
    "\310\336\037\000\250\347\260*\001R\014signingInfos\022^\n\rmissed_blocks"
    "\030\003 \003(\0132..cosmos.slashing.v1beta1.Validat"
    "orMissedBlocksB\t\310\336\037\000\250\347\260*\001R\014missedBlocks\""
    "\272\001\n\013SigningInfo\022;\n\007address\030\001 \001(\tB!\322\264-\035co"
    "smos.ConsensusAddressStringR\007address\022n\n\026"
    "validator_signing_info\030\002 \001(\0132-.cosmos.sl"
    "ashing.v1beta1.ValidatorSigningInfoB\t\310\336\037"
    "\000\250\347\260*\001R\024validatorSigningInfo\"\252\001\n\025Validat"
    "orMissedBlocks\022;\n\007address\030\001 \001(\tB!\322\264-\035cos"
    "mos.ConsensusAddressStringR\007address\022T\n\rm"
    "issed_blocks\030\002 \003(\0132$.cosmos.slashing.v1b"
    "eta1.MissedBlockB\t\310\336\037\000\250\347\260*\001R\014missedBlock"
    "s\";\n\013MissedBlock\022\024\n\005index\030\001 \001(\003R\005index\022\026"
    "\n\006missed\030\002 \001(\010R\006missedB/Z-github.com/cos"
    "mos/cosmos-sdk/x/slashing/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto_deps[4] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto = {
    false,
    false,
    919,
    descriptor_table_protodef_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto,
    "cosmos/slashing/v1beta1/genesis.proto",
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto_once,
    descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto_deps,
    4,
    4,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto,
    file_level_service_descriptors_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto,
};
namespace cosmos {
namespace slashing {
namespace v1beta1 {
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
};

void GenesisState::clear_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ != nullptr) _impl_.params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::slashing::v1beta1::GenesisState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        signing_infos_{visibility, arena, from.signing_infos_},
        missed_blocks_{visibility, arena, from.missed_blocks_} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::slashing::v1beta1::Params>(
                              arena, *from._impl_.params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        signing_infos_{visibility, arena},
        missed_blocks_{visibility, arena} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.params_ = {};
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.params_;
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.signing_infos_) +
          decltype(GenesisState::_impl_.signing_infos_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.missed_blocks_) +
          decltype(GenesisState::_impl_.missed_blocks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GenesisState), alignof(GenesisState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GenesisState::PlacementNew_,
                                 sizeof(GenesisState),
                                 alignof(GenesisState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> GenesisState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .cosmos.slashing.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_)}},
    // repeated .cosmos.slashing.v1beta1.SigningInfo signing_infos = 2 [json_name = "signingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.signing_infos_)}},
    // repeated .cosmos.slashing.v1beta1.ValidatorMissedBlocks missed_blocks = 3 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.missed_blocks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.slashing.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.slashing.v1beta1.SigningInfo signing_infos = 2 [json_name = "signingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.signing_infos_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.slashing.v1beta1.ValidatorMissedBlocks missed_blocks = 3 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.missed_blocks_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::Params>()},
    {::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::SigningInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::ValidatorMissedBlocks>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signing_infos_.Clear();
  _impl_.missed_blocks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.params_ != nullptr);
    _impl_.params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.slashing.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.params_, this_._impl_.params_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmos.slashing.v1beta1.SigningInfo signing_infos = 2 [json_name = "signingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_signing_infos_size());
               i < n; i++) {
            const auto& repfield = this_._internal_signing_infos().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .cosmos.slashing.v1beta1.ValidatorMissedBlocks missed_blocks = 3 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_missed_blocks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_missed_blocks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.slashing.v1beta1.SigningInfo signing_infos = 2 [json_name = "signingInfos", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_signing_infos_size();
              for (const auto& msg : this_._internal_signing_infos()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .cosmos.slashing.v1beta1.ValidatorMissedBlocks missed_blocks = 3 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_missed_blocks_size();
              for (const auto& msg : this_._internal_missed_blocks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .cosmos.slashing.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.params_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_signing_infos()->MergeFrom(
      from._internal_signing_infos());
  _this->_internal_mutable_missed_blocks()->MergeFrom(
      from._internal_missed_blocks());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.params_ != nullptr);
    if (_this->_impl_.params_ == nullptr) {
      _this->_impl_.params_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::slashing::v1beta1::Params>(arena, *from._impl_.params_);
    } else {
      _this->_impl_.params_->MergeFrom(*from._impl_.params_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.signing_infos_.InternalSwap(&other->_impl_.signing_infos_);
  _impl_.missed_blocks_.InternalSwap(&other->_impl_.missed_blocks_);
  swap(_impl_.params_, other->_impl_.params_);
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SigningInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SigningInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SigningInfo, _impl_._has_bits_);
};

void SigningInfo::clear_validator_signing_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.validator_signing_info_ != nullptr) _impl_.validator_signing_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SigningInfo::SigningInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.SigningInfo)
}
inline PROTOBUF_NDEBUG_INLINE SigningInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::slashing::v1beta1::SigningInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_) {}

SigningInfo::SigningInfo(
    ::google::protobuf::Arena* arena,
    const SigningInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SigningInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.validator_signing_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::slashing::v1beta1::ValidatorSigningInfo>(
                              arena, *from._impl_.validator_signing_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.SigningInfo)
}
inline PROTOBUF_NDEBUG_INLINE SigningInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena) {}

inline void SigningInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.validator_signing_info_ = {};
}
SigningInfo::~SigningInfo() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.SigningInfo)
  SharedDtor(*this);
}
inline void SigningInfo::SharedDtor(MessageLite& self) {
  SigningInfo& this_ = static_cast<SigningInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  delete this_._impl_.validator_signing_info_;
  this_._impl_.~Impl_();
}

inline void* SigningInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SigningInfo(arena);
}
constexpr auto SigningInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SigningInfo),
                                            alignof(SigningInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SigningInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SigningInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SigningInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SigningInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SigningInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SigningInfo>(), &SigningInfo::ByteSizeLong,
            &SigningInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SigningInfo, _impl_._cached_size_),
        false,
    },
    &SigningInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SigningInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> SigningInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SigningInfo, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::SigningInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.slashing.v1beta1.ValidatorSigningInfo validator_signing_info = 2 [json_name = "validatorSigningInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SigningInfo, _impl_.validator_signing_info_)}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SigningInfo, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
    {PROTOBUF_FIELD_OFFSET(SigningInfo, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .cosmos.slashing.v1beta1.ValidatorSigningInfo validator_signing_info = 2 [json_name = "validatorSigningInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(SigningInfo, _impl_.validator_signing_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::ValidatorSigningInfo>()},
  }}, {{
    "\43\7\0\0\0\0\0\0"
    "cosmos.slashing.v1beta1.SigningInfo"
    "address"
  }},
};

PROTOBUF_NOINLINE void SigningInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.SigningInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.validator_signing_info_ != nullptr);
    _impl_.validator_signing_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SigningInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SigningInfo& this_ = static_cast<const SigningInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SigningInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SigningInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.SigningInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.slashing.v1beta1.SigningInfo.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.slashing.v1beta1.ValidatorSigningInfo validator_signing_info = 2 [json_name = "validatorSigningInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.validator_signing_info_, this_._impl_.validator_signing_info_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.SigningInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SigningInfo::ByteSizeLong(const MessageLite& base) {
          const SigningInfo& this_ = static_cast<const SigningInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SigningInfo::ByteSizeLong() const {
          const SigningInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.SigningInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
           {
            // .cosmos.slashing.v1beta1.ValidatorSigningInfo validator_signing_info = 2 [json_name = "validatorSigningInfo", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.validator_signing_info_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SigningInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SigningInfo*>(&to_msg);
  auto& from = static_cast<const SigningInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.SigningInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.validator_signing_info_ != nullptr);
    if (_this->_impl_.validator_signing_info_ == nullptr) {
      _this->_impl_.validator_signing_info_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::slashing::v1beta1::ValidatorSigningInfo>(arena, *from._impl_.validator_signing_info_);
    } else {
      _this->_impl_.validator_signing_info_->MergeFrom(*from._impl_.validator_signing_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SigningInfo::CopyFrom(const SigningInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.SigningInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SigningInfo::InternalSwap(SigningInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  swap(_impl_.validator_signing_info_, other->_impl_.validator_signing_info_);
}

::google::protobuf::Metadata SigningInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidatorMissedBlocks::_Internal {
 public:
};

ValidatorMissedBlocks::ValidatorMissedBlocks(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorMissedBlocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::slashing::v1beta1::ValidatorMissedBlocks& from_msg)
      : missed_blocks_{visibility, arena, from.missed_blocks_},
        address_(arena, from.address_),
        _cached_size_{0} {}

ValidatorMissedBlocks::ValidatorMissedBlocks(
    ::google::protobuf::Arena* arena,
    const ValidatorMissedBlocks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorMissedBlocks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorMissedBlocks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : missed_blocks_{visibility, arena},
        address_(arena),
        _cached_size_{0} {}

inline void ValidatorMissedBlocks::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidatorMissedBlocks::~ValidatorMissedBlocks() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
  SharedDtor(*this);
}
inline void ValidatorMissedBlocks::SharedDtor(MessageLite& self) {
  ValidatorMissedBlocks& this_ = static_cast<ValidatorMissedBlocks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ValidatorMissedBlocks::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorMissedBlocks(arena);
}
constexpr auto ValidatorMissedBlocks::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidatorMissedBlocks, _impl_.missed_blocks_) +
          decltype(ValidatorMissedBlocks::_impl_.missed_blocks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ValidatorMissedBlocks), alignof(ValidatorMissedBlocks), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidatorMissedBlocks::PlacementNew_,
                                 sizeof(ValidatorMissedBlocks),
                                 alignof(ValidatorMissedBlocks));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorMissedBlocks::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorMissedBlocks_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorMissedBlocks::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorMissedBlocks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorMissedBlocks::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorMissedBlocks>(), &ValidatorMissedBlocks::ByteSizeLong,
            &ValidatorMissedBlocks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorMissedBlocks, _impl_._cached_size_),
        false,
    },
    &ValidatorMissedBlocks::kDescriptorMethods,
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorMissedBlocks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 61, 2> ValidatorMissedBlocks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::ValidatorMissedBlocks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.slashing.v1beta1.MissedBlock missed_blocks = 2 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorMissedBlocks, _impl_.missed_blocks_)}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorMissedBlocks, _impl_.address_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
    {PROTOBUF_FIELD_OFFSET(ValidatorMissedBlocks, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.slashing.v1beta1.MissedBlock missed_blocks = 2 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorMissedBlocks, _impl_.missed_blocks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::MissedBlock>()},
  }}, {{
    "\55\7\0\0\0\0\0\0"
    "cosmos.slashing.v1beta1.ValidatorMissedBlocks"
    "address"
  }},
};

PROTOBUF_NOINLINE void ValidatorMissedBlocks::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.missed_blocks_.Clear();
  _impl_.address_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorMissedBlocks::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorMissedBlocks& this_ = static_cast<const ValidatorMissedBlocks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorMissedBlocks::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorMissedBlocks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.slashing.v1beta1.ValidatorMissedBlocks.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .cosmos.slashing.v1beta1.MissedBlock missed_blocks = 2 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_missed_blocks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_missed_blocks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorMissedBlocks::ByteSizeLong(const MessageLite& base) {
          const ValidatorMissedBlocks& this_ = static_cast<const ValidatorMissedBlocks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorMissedBlocks::ByteSizeLong() const {
          const ValidatorMissedBlocks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.slashing.v1beta1.MissedBlock missed_blocks = 2 [json_name = "missedBlocks", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            {
              total_size += 1UL * this_._internal_missed_blocks_size();
              for (const auto& msg : this_._internal_missed_blocks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorMissedBlocks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorMissedBlocks*>(&to_msg);
  auto& from = static_cast<const ValidatorMissedBlocks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_missed_blocks()->MergeFrom(
      from._internal_missed_blocks());
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorMissedBlocks::CopyFrom(const ValidatorMissedBlocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.ValidatorMissedBlocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorMissedBlocks::InternalSwap(ValidatorMissedBlocks* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.missed_blocks_.InternalSwap(&other->_impl_.missed_blocks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
}

::google::protobuf::Metadata ValidatorMissedBlocks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MissedBlock::_Internal {
 public:
};

MissedBlock::MissedBlock(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.MissedBlock)
}
MissedBlock::MissedBlock(
    ::google::protobuf::Arena* arena, const MissedBlock& from)
    : MissedBlock(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MissedBlock::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MissedBlock::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           0,
           offsetof(Impl_, missed_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::missed_));
}
MissedBlock::~MissedBlock() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.MissedBlock)
  SharedDtor(*this);
}
inline void MissedBlock::SharedDtor(MessageLite& self) {
  MissedBlock& this_ = static_cast<MissedBlock&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MissedBlock::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MissedBlock(arena);
}
constexpr auto MissedBlock::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MissedBlock),
                                            alignof(MissedBlock));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MissedBlock::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MissedBlock_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MissedBlock::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MissedBlock>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MissedBlock::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MissedBlock>(), &MissedBlock::ByteSizeLong,
            &MissedBlock::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MissedBlock, _impl_._cached_size_),
        false,
    },
    &MissedBlock::kDescriptorMethods,
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MissedBlock::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MissedBlock::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::MissedBlock>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool missed = 2 [json_name = "missed"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MissedBlock, _impl_.missed_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MissedBlock, _impl_.missed_)}},
    // int64 index = 1 [json_name = "index"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MissedBlock, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MissedBlock, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 index = 1 [json_name = "index"];
    {PROTOBUF_FIELD_OFFSET(MissedBlock, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bool missed = 2 [json_name = "missed"];
    {PROTOBUF_FIELD_OFFSET(MissedBlock, _impl_.missed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MissedBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.MissedBlock)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.missed_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.missed_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MissedBlock::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MissedBlock& this_ = static_cast<const MissedBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MissedBlock::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MissedBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.MissedBlock)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 index = 1 [json_name = "index"];
          if (this_._internal_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_index(), target);
          }

          // bool missed = 2 [json_name = "missed"];
          if (this_._internal_missed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_missed(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.MissedBlock)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MissedBlock::ByteSizeLong(const MessageLite& base) {
          const MissedBlock& this_ = static_cast<const MissedBlock&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MissedBlock::ByteSizeLong() const {
          const MissedBlock& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.MissedBlock)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 index = 1 [json_name = "index"];
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_index());
            }
            // bool missed = 2 [json_name = "missed"];
            if (this_._internal_missed() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MissedBlock::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MissedBlock*>(&to_msg);
  auto& from = static_cast<const MissedBlock&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.MissedBlock)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  if (from._internal_missed() != 0) {
    _this->_impl_.missed_ = from._impl_.missed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MissedBlock::CopyFrom(const MissedBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.MissedBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MissedBlock::InternalSwap(MissedBlock* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MissedBlock, _impl_.missed_)
      + sizeof(MissedBlock::_impl_.missed_)
      - PROTOBUF_FIELD_OFFSET(MissedBlock, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata MissedBlock::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fslashing_2fv1beta1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
