// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/slashing/v1beta1/slashing.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/slashing/v1beta1/slashing.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace slashing {
namespace v1beta1 {

inline constexpr ValidatorSigningInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        jailed_until_{nullptr},
        start_height_{::int64_t{0}},
        index_offset_{::int64_t{0}},
        missed_blocks_counter_{::int64_t{0}},
        tombstoned_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ValidatorSigningInfo::ValidatorSigningInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidatorSigningInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidatorSigningInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidatorSigningInfoDefaultTypeInternal() {}
  union {
    ValidatorSigningInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidatorSigningInfoDefaultTypeInternal _ValidatorSigningInfo_default_instance_;

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        min_signed_per_window_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slash_fraction_double_sign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slash_fraction_downtime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        downtime_jail_duration_{nullptr},
        signed_blocks_window_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _impl_.start_height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _impl_.index_offset_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _impl_.jailed_until_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _impl_.tombstoned_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::ValidatorSigningInfo, _impl_.missed_blocks_counter_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::Params, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::Params, _impl_.signed_blocks_window_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::Params, _impl_.min_signed_per_window_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::Params, _impl_.downtime_jail_duration_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::Params, _impl_.slash_fraction_double_sign_),
        PROTOBUF_FIELD_OFFSET(::cosmos::slashing::v1beta1::Params, _impl_.slash_fraction_downtime_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::cosmos::slashing::v1beta1::ValidatorSigningInfo)},
        {20, 33, -1, sizeof(::cosmos::slashing::v1beta1::Params)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::slashing::v1beta1::_ValidatorSigningInfo_default_instance_._instance,
    &::cosmos::slashing::v1beta1::_Params_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&cosmos/slashing/v1beta1/slashing.proto"
    "\022\027cosmos.slashing.v1beta1\032\024gogoproto/gog"
    "o.proto\032\036google/protobuf/duration.proto\032"
    "\037google/protobuf/timestamp.proto\032\031cosmos"
    "_proto/cosmos.proto\032\021amino/amino.proto\"\301"
    "\002\n\024ValidatorSigningInfo\022;\n\007address\030\001 \001(\t"
    "B!\322\264-\035cosmos.ConsensusAddressStringR\007add"
    "ress\022!\n\014start_height\030\002 \001(\003R\013startHeight\022"
    "!\n\014index_offset\030\003 \001(\003R\013indexOffset\022L\n\014ja"
    "iled_until\030\004 \001(\0132\032.google.protobuf.Times"
    "tampB\r\310\336\037\000\220\337\037\001\250\347\260*\001R\013jailedUntil\022\036\n\ntomb"
    "stoned\030\005 \001(\010R\ntombstoned\0222\n\025missed_block"
    "s_counter\030\006 \001(\003R\023missedBlocksCounter:\004\350\240"
    "\037\001\"\215\004\n\006Params\0220\n\024signed_blocks_window\030\001 "
    "\001(\003R\022signedBlocksWindow\022i\n\025min_signed_pe"
    "r_window\030\002 \001(\014B6\310\336\037\000\332\336\037\033cosmossdk.io/mat"
    "h.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\022minSigne"
    "dPerWindow\022^\n\026downtime_jail_duration\030\003 \001"
    "(\0132\031.google.protobuf.DurationB\r\310\336\037\000\230\337\037\001\250"
    "\347\260*\001R\024downtimeJailDuration\022s\n\032slash_frac"
    "tion_double_sign\030\004 \001(\014B6\310\336\037\000\332\336\037\033cosmossd"
    "k.io/math.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\027"
    "slashFractionDoubleSign\022n\n\027slash_fractio"
    "n_downtime\030\005 \001(\014B6\310\336\037\000\332\336\037\033cosmossdk.io/m"
    "ath.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\025slashF"
    "ractionDowntime:!\212\347\260*\034cosmos-sdk/x/slash"
    "ing/ParamsB3Z-github.com/cosmos/cosmos-s"
    "dk/x/slashing/types\250\342\036\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto_deps[5] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto = {
    false,
    false,
    1111,
    descriptor_table_protodef_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto,
    "cosmos/slashing/v1beta1/slashing.proto",
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto_once,
    descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto_deps,
    5,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto,
    file_level_service_descriptors_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto,
};
namespace cosmos {
namespace slashing {
namespace v1beta1 {
// ===================================================================

class ValidatorSigningInfo::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ValidatorSigningInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_._has_bits_);
};

void ValidatorSigningInfo::clear_jailed_until() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.jailed_until_ != nullptr) _impl_.jailed_until_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ValidatorSigningInfo::ValidatorSigningInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.ValidatorSigningInfo)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSigningInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::slashing::v1beta1::ValidatorSigningInfo& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        address_(arena, from.address_) {}

ValidatorSigningInfo::ValidatorSigningInfo(
    ::google::protobuf::Arena* arena,
    const ValidatorSigningInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidatorSigningInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.jailed_until_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.jailed_until_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, start_height_),
           offsetof(Impl_, tombstoned_) -
               offsetof(Impl_, start_height_) +
               sizeof(Impl_::tombstoned_));

  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.ValidatorSigningInfo)
}
inline PROTOBUF_NDEBUG_INLINE ValidatorSigningInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        address_(arena) {}

inline void ValidatorSigningInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, jailed_until_),
           0,
           offsetof(Impl_, tombstoned_) -
               offsetof(Impl_, jailed_until_) +
               sizeof(Impl_::tombstoned_));
}
ValidatorSigningInfo::~ValidatorSigningInfo() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.ValidatorSigningInfo)
  SharedDtor(*this);
}
inline void ValidatorSigningInfo::SharedDtor(MessageLite& self) {
  ValidatorSigningInfo& this_ = static_cast<ValidatorSigningInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.address_.Destroy();
  delete this_._impl_.jailed_until_;
  this_._impl_.~Impl_();
}

inline void* ValidatorSigningInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ValidatorSigningInfo(arena);
}
constexpr auto ValidatorSigningInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidatorSigningInfo),
                                            alignof(ValidatorSigningInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ValidatorSigningInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ValidatorSigningInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ValidatorSigningInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ValidatorSigningInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ValidatorSigningInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ValidatorSigningInfo>(), &ValidatorSigningInfo::ByteSizeLong,
            &ValidatorSigningInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_._cached_size_),
        false,
    },
    &ValidatorSigningInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ValidatorSigningInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 60, 2> ValidatorSigningInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::ValidatorSigningInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.address_)}},
    // int64 start_height = 2 [json_name = "startHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorSigningInfo, _impl_.start_height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.start_height_)}},
    // int64 index_offset = 3 [json_name = "indexOffset"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorSigningInfo, _impl_.index_offset_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.index_offset_)}},
    // .google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.jailed_until_)}},
    // bool tombstoned = 5 [json_name = "tombstoned"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidatorSigningInfo, _impl_.tombstoned_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.tombstoned_)}},
    // int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ValidatorSigningInfo, _impl_.missed_blocks_counter_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.missed_blocks_counter_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.address_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 start_height = 2 [json_name = "startHeight"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.start_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 index_offset = 3 [json_name = "indexOffset"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.index_offset_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.jailed_until_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool tombstoned = 5 [json_name = "tombstoned"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.tombstoned_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];
    {PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.missed_blocks_counter_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\54\7\0\0\0\0\0\0"
    "cosmos.slashing.v1beta1.ValidatorSigningInfo"
    "address"
  }},
};

PROTOBUF_NOINLINE void ValidatorSigningInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.ValidatorSigningInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.jailed_until_ != nullptr);
    _impl_.jailed_until_->Clear();
  }
  ::memset(&_impl_.start_height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tombstoned_) -
      reinterpret_cast<char*>(&_impl_.start_height_)) + sizeof(_impl_.tombstoned_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ValidatorSigningInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ValidatorSigningInfo& this_ = static_cast<const ValidatorSigningInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ValidatorSigningInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ValidatorSigningInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.ValidatorSigningInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.slashing.v1beta1.ValidatorSigningInfo.address");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int64 start_height = 2 [json_name = "startHeight"];
          if (this_._internal_start_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_start_height(), target);
          }

          // int64 index_offset = 3 [json_name = "indexOffset"];
          if (this_._internal_index_offset() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_index_offset(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.jailed_until_, this_._impl_.jailed_until_->GetCachedSize(), target,
                stream);
          }

          // bool tombstoned = 5 [json_name = "tombstoned"];
          if (this_._internal_tombstoned() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_tombstoned(), target);
          }

          // int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];
          if (this_._internal_missed_blocks_counter() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_missed_blocks_counter(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.ValidatorSigningInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ValidatorSigningInfo::ByteSizeLong(const MessageLite& base) {
          const ValidatorSigningInfo& this_ = static_cast<const ValidatorSigningInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ValidatorSigningInfo::ByteSizeLong() const {
          const ValidatorSigningInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.ValidatorSigningInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.ConsensusAddressString"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
          }
           {
            // .google.protobuf.Timestamp jailed_until = 4 [json_name = "jailedUntil", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.jailed_until_);
            }
          }
           {
            // int64 start_height = 2 [json_name = "startHeight"];
            if (this_._internal_start_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_start_height());
            }
            // int64 index_offset = 3 [json_name = "indexOffset"];
            if (this_._internal_index_offset() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_index_offset());
            }
            // int64 missed_blocks_counter = 6 [json_name = "missedBlocksCounter"];
            if (this_._internal_missed_blocks_counter() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_missed_blocks_counter());
            }
            // bool tombstoned = 5 [json_name = "tombstoned"];
            if (this_._internal_tombstoned() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ValidatorSigningInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidatorSigningInfo*>(&to_msg);
  auto& from = static_cast<const ValidatorSigningInfo&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.ValidatorSigningInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.jailed_until_ != nullptr);
    if (_this->_impl_.jailed_until_ == nullptr) {
      _this->_impl_.jailed_until_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.jailed_until_);
    } else {
      _this->_impl_.jailed_until_->MergeFrom(*from._impl_.jailed_until_);
    }
  }
  if (from._internal_start_height() != 0) {
    _this->_impl_.start_height_ = from._impl_.start_height_;
  }
  if (from._internal_index_offset() != 0) {
    _this->_impl_.index_offset_ = from._impl_.index_offset_;
  }
  if (from._internal_missed_blocks_counter() != 0) {
    _this->_impl_.missed_blocks_counter_ = from._impl_.missed_blocks_counter_;
  }
  if (from._internal_tombstoned() != 0) {
    _this->_impl_.tombstoned_ = from._impl_.tombstoned_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidatorSigningInfo::CopyFrom(const ValidatorSigningInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.ValidatorSigningInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidatorSigningInfo::InternalSwap(ValidatorSigningInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.tombstoned_)
      + sizeof(ValidatorSigningInfo::_impl_.tombstoned_)
      - PROTOBUF_FIELD_OFFSET(ValidatorSigningInfo, _impl_.jailed_until_)>(
          reinterpret_cast<char*>(&_impl_.jailed_until_),
          reinterpret_cast<char*>(&other->_impl_.jailed_until_));
}

::google::protobuf::Metadata ValidatorSigningInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Params::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Params>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Params, _impl_._has_bits_);
};

void Params::clear_downtime_jail_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.downtime_jail_duration_ != nullptr) _impl_.downtime_jail_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.slashing.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::slashing::v1beta1::Params& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        min_signed_per_window_(arena, from.min_signed_per_window_),
        slash_fraction_double_sign_(arena, from.slash_fraction_double_sign_),
        slash_fraction_downtime_(arena, from.slash_fraction_downtime_) {}

Params::Params(
    ::google::protobuf::Arena* arena,
    const Params& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Params* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.downtime_jail_duration_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(
                              arena, *from._impl_.downtime_jail_duration_)
                        : nullptr;
  _impl_.signed_blocks_window_ = from._impl_.signed_blocks_window_;

  // @@protoc_insertion_point(copy_constructor:cosmos.slashing.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        min_signed_per_window_(arena),
        slash_fraction_double_sign_(arena),
        slash_fraction_downtime_(arena) {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, downtime_jail_duration_),
           0,
           offsetof(Impl_, signed_blocks_window_) -
               offsetof(Impl_, downtime_jail_duration_) +
               sizeof(Impl_::signed_blocks_window_));
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:cosmos.slashing.v1beta1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.min_signed_per_window_.Destroy();
  this_._impl_.slash_fraction_double_sign_.Destroy();
  this_._impl_.slash_fraction_downtime_.Destroy();
  delete this_._impl_.downtime_jail_duration_;
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Params),
                                            alignof(Params));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 0, 2> Params::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Params, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::slashing::v1beta1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 signed_blocks_window = 1 [json_name = "signedBlocksWindow"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.signed_blocks_window_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.signed_blocks_window_)}},
    // bytes min_signed_per_window = 2 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.min_signed_per_window_)}},
    // .google.protobuf.Duration downtime_jail_duration = 3 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.downtime_jail_duration_)}},
    // bytes slash_fraction_double_sign = 4 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.slash_fraction_double_sign_)}},
    // bytes slash_fraction_downtime = 5 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.slash_fraction_downtime_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 signed_blocks_window = 1 [json_name = "signedBlocksWindow"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.signed_blocks_window_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes min_signed_per_window = 2 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.min_signed_per_window_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Duration downtime_jail_duration = 3 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.downtime_jail_duration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes slash_fraction_double_sign = 4 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.slash_fraction_double_sign_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes slash_fraction_downtime = 5 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.slash_fraction_downtime_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Duration>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.slashing.v1beta1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.min_signed_per_window_.ClearToEmpty();
  _impl_.slash_fraction_double_sign_.ClearToEmpty();
  _impl_.slash_fraction_downtime_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.downtime_jail_duration_ != nullptr);
    _impl_.downtime_jail_duration_->Clear();
  }
  _impl_.signed_blocks_window_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.slashing.v1beta1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 signed_blocks_window = 1 [json_name = "signedBlocksWindow"];
          if (this_._internal_signed_blocks_window() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_signed_blocks_window(), target);
          }

          // bytes min_signed_per_window = 2 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_min_signed_per_window().empty()) {
            const std::string& _s = this_._internal_min_signed_per_window();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Duration downtime_jail_duration = 3 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.downtime_jail_duration_, this_._impl_.downtime_jail_duration_->GetCachedSize(), target,
                stream);
          }

          // bytes slash_fraction_double_sign = 4 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_slash_fraction_double_sign().empty()) {
            const std::string& _s = this_._internal_slash_fraction_double_sign();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bytes slash_fraction_downtime = 5 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_slash_fraction_downtime().empty()) {
            const std::string& _s = this_._internal_slash_fraction_downtime();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.slashing.v1beta1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.slashing.v1beta1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes min_signed_per_window = 2 [json_name = "minSignedPerWindow", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_min_signed_per_window().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_min_signed_per_window());
            }
            // bytes slash_fraction_double_sign = 4 [json_name = "slashFractionDoubleSign", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_slash_fraction_double_sign().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_slash_fraction_double_sign());
            }
            // bytes slash_fraction_downtime = 5 [json_name = "slashFractionDowntime", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_slash_fraction_downtime().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_slash_fraction_downtime());
            }
          }
           {
            // .google.protobuf.Duration downtime_jail_duration = 3 [json_name = "downtimeJailDuration", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.downtime_jail_duration_);
            }
          }
           {
            // int64 signed_blocks_window = 1 [json_name = "signedBlocksWindow"];
            if (this_._internal_signed_blocks_window() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_signed_blocks_window());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.slashing.v1beta1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_min_signed_per_window().empty()) {
    _this->_internal_set_min_signed_per_window(from._internal_min_signed_per_window());
  }
  if (!from._internal_slash_fraction_double_sign().empty()) {
    _this->_internal_set_slash_fraction_double_sign(from._internal_slash_fraction_double_sign());
  }
  if (!from._internal_slash_fraction_downtime().empty()) {
    _this->_internal_set_slash_fraction_downtime(from._internal_slash_fraction_downtime());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.downtime_jail_duration_ != nullptr);
    if (_this->_impl_.downtime_jail_duration_ == nullptr) {
      _this->_impl_.downtime_jail_duration_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Duration>(arena, *from._impl_.downtime_jail_duration_);
    } else {
      _this->_impl_.downtime_jail_duration_->MergeFrom(*from._impl_.downtime_jail_duration_);
    }
  }
  if (from._internal_signed_blocks_window() != 0) {
    _this->_impl_.signed_blocks_window_ = from._impl_.signed_blocks_window_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.slashing.v1beta1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.min_signed_per_window_, &other->_impl_.min_signed_per_window_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.slash_fraction_double_sign_, &other->_impl_.slash_fraction_double_sign_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.slash_fraction_downtime_, &other->_impl_.slash_fraction_downtime_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Params, _impl_.signed_blocks_window_)
      + sizeof(Params::_impl_.signed_blocks_window_)
      - PROTOBUF_FIELD_OFFSET(Params, _impl_.downtime_jail_duration_)>(
          reinterpret_cast<char*>(&_impl_.downtime_jail_duration_),
          reinterpret_cast<char*>(&other->_impl_.downtime_jail_duration_));
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace slashing
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fslashing_2fv1beta1_2fslashing_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
