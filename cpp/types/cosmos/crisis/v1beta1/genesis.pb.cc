// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/crisis/v1beta1/genesis.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/crisis/v1beta1/genesis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace crisis {
namespace v1beta1 {

inline constexpr GenesisState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        constant_fee_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GenesisState::GenesisState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenesisStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenesisStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenesisStateDefaultTypeInternal() {}
  union {
    GenesisState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenesisStateDefaultTypeInternal _GenesisState_default_instance_;
}  // namespace v1beta1
}  // namespace crisis
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::crisis::v1beta1::GenesisState, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::crisis::v1beta1::GenesisState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::crisis::v1beta1::GenesisState, _impl_.constant_fee_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::cosmos::crisis::v1beta1::GenesisState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::crisis::v1beta1::_GenesisState_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n#cosmos/crisis/v1beta1/genesis.proto\022\025c"
    "osmos.crisis.v1beta1\032\024gogoproto/gogo.pro"
    "to\032\036cosmos/base/v1beta1/coin.proto\032\021amin"
    "o/amino.proto\"W\n\014GenesisState\022G\n\014constan"
    "t_fee\030\003 \001(\0132\031.cosmos.base.v1beta1.CoinB\t"
    "\310\336\037\000\250\347\260*\001R\013constantFeeB-Z+github.com/cos"
    "mos/cosmos-sdk/x/crisis/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto_deps[3] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_2fbase_2fv1beta1_2fcoin_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto = {
    false,
    false,
    277,
    descriptor_table_protodef_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto,
    "cosmos/crisis/v1beta1/genesis.proto",
    &descriptor_table_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto_once,
    descriptor_table_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto,
    file_level_service_descriptors_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto,
};
namespace cosmos {
namespace crisis {
namespace v1beta1 {
// ===================================================================

class GenesisState::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GenesisState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_);
};

void GenesisState::clear_constant_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.constant_fee_ != nullptr) _impl_.constant_fee_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GenesisState::GenesisState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.crisis.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::crisis::v1beta1::GenesisState& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GenesisState::GenesisState(
    ::google::protobuf::Arena* arena,
    const GenesisState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenesisState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.constant_fee_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::v1beta1::Coin>(
                              arena, *from._impl_.constant_fee_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.crisis.v1beta1.GenesisState)
}
inline PROTOBUF_NDEBUG_INLINE GenesisState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GenesisState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.constant_fee_ = {};
}
GenesisState::~GenesisState() {
  // @@protoc_insertion_point(destructor:cosmos.crisis.v1beta1.GenesisState)
  SharedDtor(*this);
}
inline void GenesisState::SharedDtor(MessageLite& self) {
  GenesisState& this_ = static_cast<GenesisState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.constant_fee_;
  this_._impl_.~Impl_();
}

inline void* GenesisState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GenesisState(arena);
}
constexpr auto GenesisState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GenesisState),
                                            alignof(GenesisState));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GenesisState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GenesisState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GenesisState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GenesisState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GenesisState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GenesisState>(), &GenesisState::ByteSizeLong,
            &GenesisState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._cached_size_),
        false,
    },
    &GenesisState::kDescriptorMethods,
    &descriptor_table_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GenesisState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GenesisState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GenesisState, _impl_._has_bits_),
    0, // no _extensions_
    3, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967291,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::crisis::v1beta1::GenesisState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.v1beta1.Coin constant_fee = 3 [json_name = "constantFee", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.constant_fee_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.base.v1beta1.Coin constant_fee = 3 [json_name = "constantFee", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(GenesisState, _impl_.constant_fee_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::v1beta1::Coin>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GenesisState::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.crisis.v1beta1.GenesisState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.constant_fee_ != nullptr);
    _impl_.constant_fee_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenesisState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenesisState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.crisis.v1beta1.GenesisState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.v1beta1.Coin constant_fee = 3 [json_name = "constantFee", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.constant_fee_, this_._impl_.constant_fee_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.crisis.v1beta1.GenesisState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenesisState::ByteSizeLong(const MessageLite& base) {
          const GenesisState& this_ = static_cast<const GenesisState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenesisState::ByteSizeLong() const {
          const GenesisState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.crisis.v1beta1.GenesisState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.base.v1beta1.Coin constant_fee = 3 [json_name = "constantFee", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.constant_fee_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenesisState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenesisState*>(&to_msg);
  auto& from = static_cast<const GenesisState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.crisis.v1beta1.GenesisState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.constant_fee_ != nullptr);
    if (_this->_impl_.constant_fee_ == nullptr) {
      _this->_impl_.constant_fee_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::base::v1beta1::Coin>(arena, *from._impl_.constant_fee_);
    } else {
      _this->_impl_.constant_fee_->MergeFrom(*from._impl_.constant_fee_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenesisState::CopyFrom(const GenesisState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.crisis.v1beta1.GenesisState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenesisState::InternalSwap(GenesisState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.constant_fee_, other->_impl_.constant_fee_);
}

::google::protobuf::Metadata GenesisState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace crisis
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fcrisis_2fv1beta1_2fgenesis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
