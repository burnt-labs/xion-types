// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/benchmark/v1/benchmark.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/benchmark/v1/benchmark.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace benchmark {
namespace v1 {

inline constexpr Op::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : actor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        seed_{::uint64_t{0u}},
        key_length_{::uint64_t{0u}},
        value_length_{::uint64_t{0u}},
        iterations_{0u},
        delete__{false},
        exists_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Op::Op(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OpDefaultTypeInternal() {}
  union {
    Op _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OpDefaultTypeInternal _Op_default_instance_;
}  // namespace v1
}  // namespace benchmark
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _impl_.actor_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _impl_.key_length_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _impl_.value_length_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _impl_.iterations_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _impl_.delete__),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::v1::Op, _impl_.exists_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::benchmark::v1::Op)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::benchmark::v1::_Op_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n#cosmos/benchmark/v1/benchmark.proto\022\023c"
    "osmos.benchmark.v1\"\300\001\n\002Op\022\022\n\004seed\030\001 \001(\004R"
    "\004seed\022\024\n\005actor\030\002 \001(\tR\005actor\022\035\n\nkey_lengt"
    "h\030\003 \001(\004R\tkeyLength\022!\n\014value_length\030\004 \001(\004"
    "R\013valueLength\022\036\n\niterations\030\005 \001(\rR\nitera"
    "tions\022\026\n\006delete\030\006 \001(\010R\006delete\022\026\n\006exists\030"
    "\007 \001(\010R\006existsB\036Z\034cosmossdk.io/tools/benc"
    "hmarkb\006proto3"
};
static ::absl::once_flag descriptor_table_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto = {
    false,
    false,
    293,
    descriptor_table_protodef_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto,
    "cosmos/benchmark/v1/benchmark.proto",
    &descriptor_table_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto,
    file_level_service_descriptors_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto,
};
namespace cosmos {
namespace benchmark {
namespace v1 {
// ===================================================================

class Op::_Internal {
 public:
};

Op::Op(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.benchmark.v1.Op)
}
inline PROTOBUF_NDEBUG_INLINE Op::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::benchmark::v1::Op& from_msg)
      : actor_(arena, from.actor_),
        _cached_size_{0} {}

Op::Op(
    ::google::protobuf::Arena* arena,
    const Op& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Op* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seed_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, seed_),
           offsetof(Impl_, exists_) -
               offsetof(Impl_, seed_) +
               sizeof(Impl_::exists_));

  // @@protoc_insertion_point(copy_constructor:cosmos.benchmark.v1.Op)
}
inline PROTOBUF_NDEBUG_INLINE Op::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : actor_(arena),
        _cached_size_{0} {}

inline void Op::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seed_),
           0,
           offsetof(Impl_, exists_) -
               offsetof(Impl_, seed_) +
               sizeof(Impl_::exists_));
}
Op::~Op() {
  // @@protoc_insertion_point(destructor:cosmos.benchmark.v1.Op)
  SharedDtor(*this);
}
inline void Op::SharedDtor(MessageLite& self) {
  Op& this_ = static_cast<Op&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.actor_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Op::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Op(arena);
}
constexpr auto Op::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Op),
                                            alignof(Op));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Op::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Op_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Op::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Op>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Op::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Op>(), &Op::ByteSizeLong,
            &Op::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Op, _impl_._cached_size_),
        false,
    },
    &Op::kDescriptorMethods,
    &descriptor_table_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Op::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 36, 2> Op::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::benchmark::v1::Op>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 seed = 1 [json_name = "seed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Op, _impl_.seed_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Op, _impl_.seed_)}},
    // string actor = 2 [json_name = "actor"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Op, _impl_.actor_)}},
    // uint64 key_length = 3 [json_name = "keyLength"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Op, _impl_.key_length_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Op, _impl_.key_length_)}},
    // uint64 value_length = 4 [json_name = "valueLength"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Op, _impl_.value_length_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Op, _impl_.value_length_)}},
    // uint32 iterations = 5 [json_name = "iterations"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Op, _impl_.iterations_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Op, _impl_.iterations_)}},
    // bool delete = 6 [json_name = "delete"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Op, _impl_.delete__), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Op, _impl_.delete__)}},
    // bool exists = 7 [json_name = "exists"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Op, _impl_.exists_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Op, _impl_.exists_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 seed = 1 [json_name = "seed"];
    {PROTOBUF_FIELD_OFFSET(Op, _impl_.seed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string actor = 2 [json_name = "actor"];
    {PROTOBUF_FIELD_OFFSET(Op, _impl_.actor_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 key_length = 3 [json_name = "keyLength"];
    {PROTOBUF_FIELD_OFFSET(Op, _impl_.key_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 value_length = 4 [json_name = "valueLength"];
    {PROTOBUF_FIELD_OFFSET(Op, _impl_.value_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint32 iterations = 5 [json_name = "iterations"];
    {PROTOBUF_FIELD_OFFSET(Op, _impl_.iterations_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bool delete = 6 [json_name = "delete"];
    {PROTOBUF_FIELD_OFFSET(Op, _impl_.delete__), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool exists = 7 [json_name = "exists"];
    {PROTOBUF_FIELD_OFFSET(Op, _impl_.exists_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\26\0\5\0\0\0\0\0"
    "cosmos.benchmark.v1.Op"
    "actor"
  }},
};

PROTOBUF_NOINLINE void Op::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.benchmark.v1.Op)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actor_.ClearToEmpty();
  ::memset(&_impl_.seed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.exists_) -
      reinterpret_cast<char*>(&_impl_.seed_)) + sizeof(_impl_.exists_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Op::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Op& this_ = static_cast<const Op&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Op::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Op& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.benchmark.v1.Op)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 seed = 1 [json_name = "seed"];
          if (this_._internal_seed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_seed(), target);
          }

          // string actor = 2 [json_name = "actor"];
          if (!this_._internal_actor().empty()) {
            const std::string& _s = this_._internal_actor();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.benchmark.v1.Op.actor");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint64 key_length = 3 [json_name = "keyLength"];
          if (this_._internal_key_length() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_key_length(), target);
          }

          // uint64 value_length = 4 [json_name = "valueLength"];
          if (this_._internal_value_length() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_value_length(), target);
          }

          // uint32 iterations = 5 [json_name = "iterations"];
          if (this_._internal_iterations() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_iterations(), target);
          }

          // bool delete = 6 [json_name = "delete"];
          if (this_._internal_delete_() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_delete_(), target);
          }

          // bool exists = 7 [json_name = "exists"];
          if (this_._internal_exists() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_exists(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.benchmark.v1.Op)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Op::ByteSizeLong(const MessageLite& base) {
          const Op& this_ = static_cast<const Op&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Op::ByteSizeLong() const {
          const Op& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.benchmark.v1.Op)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string actor = 2 [json_name = "actor"];
            if (!this_._internal_actor().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_actor());
            }
            // uint64 seed = 1 [json_name = "seed"];
            if (this_._internal_seed() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_seed());
            }
            // uint64 key_length = 3 [json_name = "keyLength"];
            if (this_._internal_key_length() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_key_length());
            }
            // uint64 value_length = 4 [json_name = "valueLength"];
            if (this_._internal_value_length() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_value_length());
            }
            // uint32 iterations = 5 [json_name = "iterations"];
            if (this_._internal_iterations() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_iterations());
            }
            // bool delete = 6 [json_name = "delete"];
            if (this_._internal_delete_() != 0) {
              total_size += 2;
            }
            // bool exists = 7 [json_name = "exists"];
            if (this_._internal_exists() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Op::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Op*>(&to_msg);
  auto& from = static_cast<const Op&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.benchmark.v1.Op)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_actor().empty()) {
    _this->_internal_set_actor(from._internal_actor());
  }
  if (from._internal_seed() != 0) {
    _this->_impl_.seed_ = from._impl_.seed_;
  }
  if (from._internal_key_length() != 0) {
    _this->_impl_.key_length_ = from._impl_.key_length_;
  }
  if (from._internal_value_length() != 0) {
    _this->_impl_.value_length_ = from._impl_.value_length_;
  }
  if (from._internal_iterations() != 0) {
    _this->_impl_.iterations_ = from._impl_.iterations_;
  }
  if (from._internal_delete_() != 0) {
    _this->_impl_.delete__ = from._impl_.delete__;
  }
  if (from._internal_exists() != 0) {
    _this->_impl_.exists_ = from._impl_.exists_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Op::CopyFrom(const Op& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.benchmark.v1.Op)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Op::InternalSwap(Op* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.actor_, &other->_impl_.actor_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Op, _impl_.exists_)
      + sizeof(Op::_impl_.exists_)
      - PROTOBUF_FIELD_OFFSET(Op, _impl_.seed_)>(
          reinterpret_cast<char*>(&_impl_.seed_),
          reinterpret_cast<char*>(&other->_impl_.seed_));
}

::google::protobuf::Metadata Op::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace benchmark
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fbenchmark_2fv1_2fbenchmark_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
