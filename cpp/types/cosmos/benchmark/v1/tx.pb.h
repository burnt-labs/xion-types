// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/benchmark/v1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fbenchmark_2fv1_2ftx_2eproto_2epb_2eh
#define cosmos_2fbenchmark_2fv1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/benchmark/v1/benchmark.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbenchmark_2fv1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbenchmark_2fv1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fbenchmark_2fv1_2ftx_2eproto;
namespace cosmos {
namespace benchmark {
namespace v1 {
class MsgLoadTest;
struct MsgLoadTestDefaultTypeInternal;
extern MsgLoadTestDefaultTypeInternal _MsgLoadTest_default_instance_;
class MsgLoadTestResponse;
struct MsgLoadTestResponseDefaultTypeInternal;
extern MsgLoadTestResponseDefaultTypeInternal _MsgLoadTestResponse_default_instance_;
}  // namespace v1
}  // namespace benchmark
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace benchmark {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgLoadTestResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.benchmark.v1.MsgLoadTestResponse) */ {
 public:
  inline MsgLoadTestResponse() : MsgLoadTestResponse(nullptr) {}
  ~MsgLoadTestResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgLoadTestResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgLoadTestResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgLoadTestResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgLoadTestResponse(const MsgLoadTestResponse& from) : MsgLoadTestResponse(nullptr, from) {}
  inline MsgLoadTestResponse(MsgLoadTestResponse&& from) noexcept
      : MsgLoadTestResponse(nullptr, std::move(from)) {}
  inline MsgLoadTestResponse& operator=(const MsgLoadTestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgLoadTestResponse& operator=(MsgLoadTestResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgLoadTestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgLoadTestResponse* internal_default_instance() {
    return reinterpret_cast<const MsgLoadTestResponse*>(
        &_MsgLoadTestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgLoadTestResponse& a, MsgLoadTestResponse& b) { a.Swap(&b); }
  inline void Swap(MsgLoadTestResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgLoadTestResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgLoadTestResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgLoadTestResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgLoadTestResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgLoadTestResponse& from) { MsgLoadTestResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgLoadTestResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.benchmark.v1.MsgLoadTestResponse"; }

 protected:
  explicit MsgLoadTestResponse(::google::protobuf::Arena* arena);
  MsgLoadTestResponse(::google::protobuf::Arena* arena, const MsgLoadTestResponse& from);
  MsgLoadTestResponse(::google::protobuf::Arena* arena, MsgLoadTestResponse&& from) noexcept
      : MsgLoadTestResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTotalTimeFieldNumber = 1,
    kTotalErrorsFieldNumber = 2,
  };
  // uint64 total_time = 1 [json_name = "totalTime"];
  void clear_total_time() ;
  ::uint64_t total_time() const;
  void set_total_time(::uint64_t value);

  private:
  ::uint64_t _internal_total_time() const;
  void _internal_set_total_time(::uint64_t value);

  public:
  // uint64 total_errors = 2 [json_name = "totalErrors"];
  void clear_total_errors() ;
  ::uint64_t total_errors() const;
  void set_total_errors(::uint64_t value);

  private:
  ::uint64_t _internal_total_errors() const;
  void _internal_set_total_errors(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.benchmark.v1.MsgLoadTestResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgLoadTestResponse& from_msg);
    ::uint64_t total_time_;
    ::uint64_t total_errors_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbenchmark_2fv1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgLoadTest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.benchmark.v1.MsgLoadTest) */ {
 public:
  inline MsgLoadTest() : MsgLoadTest(nullptr) {}
  ~MsgLoadTest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgLoadTest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgLoadTest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgLoadTest(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgLoadTest(const MsgLoadTest& from) : MsgLoadTest(nullptr, from) {}
  inline MsgLoadTest(MsgLoadTest&& from) noexcept
      : MsgLoadTest(nullptr, std::move(from)) {}
  inline MsgLoadTest& operator=(const MsgLoadTest& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgLoadTest& operator=(MsgLoadTest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgLoadTest& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgLoadTest* internal_default_instance() {
    return reinterpret_cast<const MsgLoadTest*>(
        &_MsgLoadTest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgLoadTest& a, MsgLoadTest& b) { a.Swap(&b); }
  inline void Swap(MsgLoadTest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgLoadTest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgLoadTest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgLoadTest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgLoadTest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgLoadTest& from) { MsgLoadTest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgLoadTest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.benchmark.v1.MsgLoadTest"; }

 protected:
  explicit MsgLoadTest(::google::protobuf::Arena* arena);
  MsgLoadTest(::google::protobuf::Arena* arena, const MsgLoadTest& from);
  MsgLoadTest(::google::protobuf::Arena* arena, MsgLoadTest&& from) noexcept
      : MsgLoadTest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpsFieldNumber = 2,
    kCallerFieldNumber = 1,
  };
  // repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];
  int ops_size() const;
  private:
  int _internal_ops_size() const;

  public:
  void clear_ops() ;
  ::cosmos::benchmark::v1::Op* mutable_ops(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>* mutable_ops();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>& _internal_ops() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>* _internal_mutable_ops();
  public:
  const ::cosmos::benchmark::v1::Op& ops(int index) const;
  ::cosmos::benchmark::v1::Op* add_ops();
  const ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>& ops() const;
  // bytes caller = 1 [json_name = "caller"];
  void clear_caller() ;
  const std::string& caller() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_caller(Arg_&& arg, Args_... args);
  std::string* mutable_caller();
  PROTOBUF_NODISCARD std::string* release_caller();
  void set_allocated_caller(std::string* value);

  private:
  const std::string& _internal_caller() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_caller(
      const std::string& value);
  std::string* _internal_mutable_caller();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.benchmark.v1.MsgLoadTest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgLoadTest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::benchmark::v1::Op > ops_;
    ::google::protobuf::internal::ArenaStringPtr caller_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbenchmark_2fv1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgLoadTest

// bytes caller = 1 [json_name = "caller"];
inline void MsgLoadTest::clear_caller() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.caller_.ClearToEmpty();
}
inline const std::string& MsgLoadTest::caller() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.v1.MsgLoadTest.caller)
  return _internal_caller();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgLoadTest::set_caller(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.caller_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.benchmark.v1.MsgLoadTest.caller)
}
inline std::string* MsgLoadTest::mutable_caller() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_caller();
  // @@protoc_insertion_point(field_mutable:cosmos.benchmark.v1.MsgLoadTest.caller)
  return _s;
}
inline const std::string& MsgLoadTest::_internal_caller() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.caller_.Get();
}
inline void MsgLoadTest::_internal_set_caller(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.caller_.Set(value, GetArena());
}
inline std::string* MsgLoadTest::_internal_mutable_caller() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.caller_.Mutable( GetArena());
}
inline std::string* MsgLoadTest::release_caller() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.benchmark.v1.MsgLoadTest.caller)
  return _impl_.caller_.Release();
}
inline void MsgLoadTest::set_allocated_caller(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.caller_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.caller_.IsDefault()) {
    _impl_.caller_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.benchmark.v1.MsgLoadTest.caller)
}

// repeated .cosmos.benchmark.v1.Op ops = 2 [json_name = "ops"];
inline int MsgLoadTest::_internal_ops_size() const {
  return _internal_ops().size();
}
inline int MsgLoadTest::ops_size() const {
  return _internal_ops_size();
}
inline ::cosmos::benchmark::v1::Op* MsgLoadTest::mutable_ops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.benchmark.v1.MsgLoadTest.ops)
  return _internal_mutable_ops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>* MsgLoadTest::mutable_ops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.benchmark.v1.MsgLoadTest.ops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ops();
}
inline const ::cosmos::benchmark::v1::Op& MsgLoadTest::ops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.v1.MsgLoadTest.ops)
  return _internal_ops().Get(index);
}
inline ::cosmos::benchmark::v1::Op* MsgLoadTest::add_ops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::benchmark::v1::Op* _add = _internal_mutable_ops()->Add();
  // @@protoc_insertion_point(field_add:cosmos.benchmark.v1.MsgLoadTest.ops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>& MsgLoadTest::ops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.benchmark.v1.MsgLoadTest.ops)
  return _internal_ops();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>&
MsgLoadTest::_internal_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ops_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::benchmark::v1::Op>*
MsgLoadTest::_internal_mutable_ops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ops_;
}

// -------------------------------------------------------------------

// MsgLoadTestResponse

// uint64 total_time = 1 [json_name = "totalTime"];
inline void MsgLoadTestResponse::clear_total_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_time_ = ::uint64_t{0u};
}
inline ::uint64_t MsgLoadTestResponse::total_time() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.v1.MsgLoadTestResponse.total_time)
  return _internal_total_time();
}
inline void MsgLoadTestResponse::set_total_time(::uint64_t value) {
  _internal_set_total_time(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.v1.MsgLoadTestResponse.total_time)
}
inline ::uint64_t MsgLoadTestResponse::_internal_total_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_time_;
}
inline void MsgLoadTestResponse::_internal_set_total_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_time_ = value;
}

// uint64 total_errors = 2 [json_name = "totalErrors"];
inline void MsgLoadTestResponse::clear_total_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_errors_ = ::uint64_t{0u};
}
inline ::uint64_t MsgLoadTestResponse::total_errors() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.v1.MsgLoadTestResponse.total_errors)
  return _internal_total_errors();
}
inline void MsgLoadTestResponse::set_total_errors(::uint64_t value) {
  _internal_set_total_errors(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.v1.MsgLoadTestResponse.total_errors)
}
inline ::uint64_t MsgLoadTestResponse::_internal_total_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_errors_;
}
inline void MsgLoadTestResponse::_internal_set_total_errors(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_errors_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace benchmark
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fbenchmark_2fv1_2ftx_2eproto_2epb_2eh
