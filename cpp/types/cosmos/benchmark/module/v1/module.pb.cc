// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/benchmark/module/v1/module.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/benchmark/module/v1/module.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace benchmark {
namespace module {
namespace v1 {

inline constexpr GeneratorParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : seed_{::uint64_t{0u}},
        bucket_count_{::uint64_t{0u}},
        key_mean_{::uint64_t{0u}},
        key_std_dev_{::uint64_t{0u}},
        value_mean_{::uint64_t{0u}},
        value_std_dev_{::uint64_t{0u}},
        genesis_count_{::uint64_t{0u}},
        insert_weight_{0},
        update_weight_{0},
        delete_weight_{0},
        get_weight_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GeneratorParams::GeneratorParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GeneratorParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratorParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratorParamsDefaultTypeInternal() {}
  union {
    GeneratorParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratorParamsDefaultTypeInternal _GeneratorParams_default_instance_;

inline constexpr Module::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        genesis_params_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Module::Module(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleDefaultTypeInternal() {}
  union {
    Module _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleDefaultTypeInternal _Module_default_instance_;
}  // namespace v1
}  // namespace module
}  // namespace benchmark
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::Module, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::Module, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::Module, _impl_.genesis_params_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.seed_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.bucket_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.key_mean_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.key_std_dev_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.value_mean_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.value_std_dev_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.genesis_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.insert_weight_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.update_weight_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.get_weight_),
        PROTOBUF_FIELD_OFFSET(::cosmos::benchmark::module::v1::GeneratorParams, _impl_.delete_weight_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::cosmos::benchmark::module::v1::Module)},
        {10, -1, -1, sizeof(::cosmos::benchmark::module::v1::GeneratorParams)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::benchmark::module::v1::_Module_default_instance_._instance,
    &::cosmos::benchmark::module::v1::_GeneratorParams_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\'cosmos/benchmark/module/v1/module.prot"
    "o\022\032cosmos.benchmark.module.v1\032 cosmos/ap"
    "p/v1alpha1/module.proto\"\202\001\n\006Module\022R\n\016ge"
    "nesis_params\030\001 \001(\0132+.cosmos.benchmark.mo"
    "dule.v1.GeneratorParamsR\rgenesisParams:$"
    "\272\300\226\332\001\036\n\034cosmossdk.io/tools/benchmark\"\371\002\n"
    "\017GeneratorParams\022\022\n\004seed\030\001 \001(\004R\004seed\022!\n\014"
    "bucket_count\030\002 \001(\004R\013bucketCount\022\031\n\010key_m"
    "ean\030\003 \001(\004R\007keyMean\022\036\n\013key_std_dev\030\004 \001(\004R"
    "\tkeyStdDev\022\035\n\nvalue_mean\030\006 \001(\004R\tvalueMea"
    "n\022\"\n\rvalue_std_dev\030\007 \001(\004R\013valueStdDev\022#\n"
    "\rgenesis_count\030\010 \001(\004R\014genesisCount\022#\n\rin"
    "sert_weight\030\t \001(\002R\014insertWeight\022#\n\rupdat"
    "e_weight\030\n \001(\002R\014updateWeight\022\035\n\nget_weig"
    "ht\030\014 \001(\002R\tgetWeight\022#\n\rdelete_weight\030\013 \001"
    "(\002R\014deleteWeightb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto_deps[1] =
    {
        &::descriptor_table_cosmos_2fapp_2fv1alpha1_2fmodule_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto = {
    false,
    false,
    624,
    descriptor_table_protodef_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto,
    "cosmos/benchmark/module/v1/module.proto",
    &descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto_once,
    descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto,
    file_level_service_descriptors_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto,
};
namespace cosmos {
namespace benchmark {
namespace module {
namespace v1 {
// ===================================================================

class Module::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Module>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Module, _impl_._has_bits_);
};

Module::Module(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.benchmark.module.v1.Module)
}
inline PROTOBUF_NDEBUG_INLINE Module::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::benchmark::module::v1::Module& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Module::Module(
    ::google::protobuf::Arena* arena,
    const Module& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Module* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.genesis_params_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::benchmark::module::v1::GeneratorParams>(
                              arena, *from._impl_.genesis_params_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.benchmark.module.v1.Module)
}
inline PROTOBUF_NDEBUG_INLINE Module::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Module::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.genesis_params_ = {};
}
Module::~Module() {
  // @@protoc_insertion_point(destructor:cosmos.benchmark.module.v1.Module)
  SharedDtor(*this);
}
inline void Module::SharedDtor(MessageLite& self) {
  Module& this_ = static_cast<Module&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.genesis_params_;
  this_._impl_.~Impl_();
}

inline void* Module::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Module(arena);
}
constexpr auto Module::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Module),
                                            alignof(Module));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Module::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Module_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Module::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Module>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Module::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Module>(), &Module::ByteSizeLong,
            &Module::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Module, _impl_._cached_size_),
        false,
    },
    &Module::kDescriptorMethods,
    &descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Module::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Module::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Module, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::benchmark::module::v1::Module>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.benchmark.module.v1.GeneratorParams genesis_params = 1 [json_name = "genesisParams"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Module, _impl_.genesis_params_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.benchmark.module.v1.GeneratorParams genesis_params = 1 [json_name = "genesisParams"];
    {PROTOBUF_FIELD_OFFSET(Module, _impl_.genesis_params_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::benchmark::module::v1::GeneratorParams>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Module::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.benchmark.module.v1.Module)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.genesis_params_ != nullptr);
    _impl_.genesis_params_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Module::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Module& this_ = static_cast<const Module&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Module::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Module& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.benchmark.module.v1.Module)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.benchmark.module.v1.GeneratorParams genesis_params = 1 [json_name = "genesisParams"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.genesis_params_, this_._impl_.genesis_params_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.benchmark.module.v1.Module)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Module::ByteSizeLong(const MessageLite& base) {
          const Module& this_ = static_cast<const Module&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Module::ByteSizeLong() const {
          const Module& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.benchmark.module.v1.Module)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .cosmos.benchmark.module.v1.GeneratorParams genesis_params = 1 [json_name = "genesisParams"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.genesis_params_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Module::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Module*>(&to_msg);
  auto& from = static_cast<const Module&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.benchmark.module.v1.Module)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.genesis_params_ != nullptr);
    if (_this->_impl_.genesis_params_ == nullptr) {
      _this->_impl_.genesis_params_ =
          ::google::protobuf::Message::CopyConstruct<::cosmos::benchmark::module::v1::GeneratorParams>(arena, *from._impl_.genesis_params_);
    } else {
      _this->_impl_.genesis_params_->MergeFrom(*from._impl_.genesis_params_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Module::CopyFrom(const Module& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.benchmark.module.v1.Module)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Module::InternalSwap(Module* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.genesis_params_, other->_impl_.genesis_params_);
}

::google::protobuf::Metadata Module::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GeneratorParams::_Internal {
 public:
};

GeneratorParams::GeneratorParams(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.benchmark.module.v1.GeneratorParams)
}
GeneratorParams::GeneratorParams(
    ::google::protobuf::Arena* arena, const GeneratorParams& from)
    : GeneratorParams(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GeneratorParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GeneratorParams::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, seed_),
           0,
           offsetof(Impl_, get_weight_) -
               offsetof(Impl_, seed_) +
               sizeof(Impl_::get_weight_));
}
GeneratorParams::~GeneratorParams() {
  // @@protoc_insertion_point(destructor:cosmos.benchmark.module.v1.GeneratorParams)
  SharedDtor(*this);
}
inline void GeneratorParams::SharedDtor(MessageLite& self) {
  GeneratorParams& this_ = static_cast<GeneratorParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GeneratorParams::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GeneratorParams(arena);
}
constexpr auto GeneratorParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GeneratorParams),
                                            alignof(GeneratorParams));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GeneratorParams::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GeneratorParams_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GeneratorParams::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GeneratorParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GeneratorParams::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GeneratorParams>(), &GeneratorParams::ByteSizeLong,
            &GeneratorParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_._cached_size_),
        false,
    },
    &GeneratorParams::kDescriptorMethods,
    &descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GeneratorParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 0, 0, 2> GeneratorParams::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963216,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::benchmark::module::v1::GeneratorParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 seed = 1 [json_name = "seed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GeneratorParams, _impl_.seed_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.seed_)}},
    // uint64 bucket_count = 2 [json_name = "bucketCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GeneratorParams, _impl_.bucket_count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.bucket_count_)}},
    // uint64 key_mean = 3 [json_name = "keyMean"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GeneratorParams, _impl_.key_mean_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.key_mean_)}},
    // uint64 key_std_dev = 4 [json_name = "keyStdDev"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GeneratorParams, _impl_.key_std_dev_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.key_std_dev_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 value_mean = 6 [json_name = "valueMean"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GeneratorParams, _impl_.value_mean_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.value_mean_)}},
    // uint64 value_std_dev = 7 [json_name = "valueStdDev"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GeneratorParams, _impl_.value_std_dev_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.value_std_dev_)}},
    // uint64 genesis_count = 8 [json_name = "genesisCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GeneratorParams, _impl_.genesis_count_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.genesis_count_)}},
    // float insert_weight = 9 [json_name = "insertWeight"];
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.insert_weight_)}},
    // float update_weight = 10 [json_name = "updateWeight"];
    {::_pbi::TcParser::FastF32S1,
     {85, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.update_weight_)}},
    // float delete_weight = 11 [json_name = "deleteWeight"];
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.delete_weight_)}},
    // float get_weight = 12 [json_name = "getWeight"];
    {::_pbi::TcParser::FastF32S1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.get_weight_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 seed = 1 [json_name = "seed"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.seed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 bucket_count = 2 [json_name = "bucketCount"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.bucket_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 key_mean = 3 [json_name = "keyMean"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.key_mean_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 key_std_dev = 4 [json_name = "keyStdDev"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.key_std_dev_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 value_mean = 6 [json_name = "valueMean"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.value_mean_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 value_std_dev = 7 [json_name = "valueStdDev"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.value_std_dev_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 genesis_count = 8 [json_name = "genesisCount"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.genesis_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // float insert_weight = 9 [json_name = "insertWeight"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.insert_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float update_weight = 10 [json_name = "updateWeight"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.update_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float delete_weight = 11 [json_name = "deleteWeight"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.delete_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float get_weight = 12 [json_name = "getWeight"];
    {PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.get_weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GeneratorParams::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.benchmark.module.v1.GeneratorParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.seed_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.get_weight_) -
      reinterpret_cast<char*>(&_impl_.seed_)) + sizeof(_impl_.get_weight_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GeneratorParams::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GeneratorParams& this_ = static_cast<const GeneratorParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GeneratorParams::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GeneratorParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.benchmark.module.v1.GeneratorParams)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 seed = 1 [json_name = "seed"];
          if (this_._internal_seed() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_seed(), target);
          }

          // uint64 bucket_count = 2 [json_name = "bucketCount"];
          if (this_._internal_bucket_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_bucket_count(), target);
          }

          // uint64 key_mean = 3 [json_name = "keyMean"];
          if (this_._internal_key_mean() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_key_mean(), target);
          }

          // uint64 key_std_dev = 4 [json_name = "keyStdDev"];
          if (this_._internal_key_std_dev() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_key_std_dev(), target);
          }

          // uint64 value_mean = 6 [json_name = "valueMean"];
          if (this_._internal_value_mean() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_value_mean(), target);
          }

          // uint64 value_std_dev = 7 [json_name = "valueStdDev"];
          if (this_._internal_value_std_dev() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                7, this_._internal_value_std_dev(), target);
          }

          // uint64 genesis_count = 8 [json_name = "genesisCount"];
          if (this_._internal_genesis_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                8, this_._internal_genesis_count(), target);
          }

          // float insert_weight = 9 [json_name = "insertWeight"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_insert_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_insert_weight(), target);
          }

          // float update_weight = 10 [json_name = "updateWeight"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_update_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                10, this_._internal_update_weight(), target);
          }

          // float delete_weight = 11 [json_name = "deleteWeight"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_delete_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_delete_weight(), target);
          }

          // float get_weight = 12 [json_name = "getWeight"];
          if (::absl::bit_cast<::uint32_t>(this_._internal_get_weight()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                12, this_._internal_get_weight(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.benchmark.module.v1.GeneratorParams)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GeneratorParams::ByteSizeLong(const MessageLite& base) {
          const GeneratorParams& this_ = static_cast<const GeneratorParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GeneratorParams::ByteSizeLong() const {
          const GeneratorParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.benchmark.module.v1.GeneratorParams)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 seed = 1 [json_name = "seed"];
            if (this_._internal_seed() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_seed());
            }
            // uint64 bucket_count = 2 [json_name = "bucketCount"];
            if (this_._internal_bucket_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_bucket_count());
            }
            // uint64 key_mean = 3 [json_name = "keyMean"];
            if (this_._internal_key_mean() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_key_mean());
            }
            // uint64 key_std_dev = 4 [json_name = "keyStdDev"];
            if (this_._internal_key_std_dev() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_key_std_dev());
            }
            // uint64 value_mean = 6 [json_name = "valueMean"];
            if (this_._internal_value_mean() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_value_mean());
            }
            // uint64 value_std_dev = 7 [json_name = "valueStdDev"];
            if (this_._internal_value_std_dev() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_value_std_dev());
            }
            // uint64 genesis_count = 8 [json_name = "genesisCount"];
            if (this_._internal_genesis_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_genesis_count());
            }
            // float insert_weight = 9 [json_name = "insertWeight"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_insert_weight()) != 0) {
              total_size += 5;
            }
            // float update_weight = 10 [json_name = "updateWeight"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_update_weight()) != 0) {
              total_size += 5;
            }
            // float delete_weight = 11 [json_name = "deleteWeight"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_delete_weight()) != 0) {
              total_size += 5;
            }
            // float get_weight = 12 [json_name = "getWeight"];
            if (::absl::bit_cast<::uint32_t>(this_._internal_get_weight()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GeneratorParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GeneratorParams*>(&to_msg);
  auto& from = static_cast<const GeneratorParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.benchmark.module.v1.GeneratorParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seed() != 0) {
    _this->_impl_.seed_ = from._impl_.seed_;
  }
  if (from._internal_bucket_count() != 0) {
    _this->_impl_.bucket_count_ = from._impl_.bucket_count_;
  }
  if (from._internal_key_mean() != 0) {
    _this->_impl_.key_mean_ = from._impl_.key_mean_;
  }
  if (from._internal_key_std_dev() != 0) {
    _this->_impl_.key_std_dev_ = from._impl_.key_std_dev_;
  }
  if (from._internal_value_mean() != 0) {
    _this->_impl_.value_mean_ = from._impl_.value_mean_;
  }
  if (from._internal_value_std_dev() != 0) {
    _this->_impl_.value_std_dev_ = from._impl_.value_std_dev_;
  }
  if (from._internal_genesis_count() != 0) {
    _this->_impl_.genesis_count_ = from._impl_.genesis_count_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_insert_weight()) != 0) {
    _this->_impl_.insert_weight_ = from._impl_.insert_weight_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_update_weight()) != 0) {
    _this->_impl_.update_weight_ = from._impl_.update_weight_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_delete_weight()) != 0) {
    _this->_impl_.delete_weight_ = from._impl_.delete_weight_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_get_weight()) != 0) {
    _this->_impl_.get_weight_ = from._impl_.get_weight_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GeneratorParams::CopyFrom(const GeneratorParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.benchmark.module.v1.GeneratorParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GeneratorParams::InternalSwap(GeneratorParams* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.get_weight_)
      + sizeof(GeneratorParams::_impl_.get_weight_)
      - PROTOBUF_FIELD_OFFSET(GeneratorParams, _impl_.seed_)>(
          reinterpret_cast<char*>(&_impl_.seed_),
          reinterpret_cast<char*>(&other->_impl_.seed_));
}

::google::protobuf::Metadata GeneratorParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace module
}  // namespace benchmark
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
