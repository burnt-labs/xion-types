// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/benchmark/module/v1/module.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto_2epb_2eh
#define cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/app/v1alpha1/module.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto;
namespace cosmos {
namespace benchmark {
namespace module {
namespace v1 {
class GeneratorParams;
struct GeneratorParamsDefaultTypeInternal;
extern GeneratorParamsDefaultTypeInternal _GeneratorParams_default_instance_;
class Module;
struct ModuleDefaultTypeInternal;
extern ModuleDefaultTypeInternal _Module_default_instance_;
}  // namespace v1
}  // namespace module
}  // namespace benchmark
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace benchmark {
namespace module {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class GeneratorParams final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.benchmark.module.v1.GeneratorParams) */ {
 public:
  inline GeneratorParams() : GeneratorParams(nullptr) {}
  ~GeneratorParams() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GeneratorParams* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GeneratorParams));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GeneratorParams(
      ::google::protobuf::internal::ConstantInitialized);

  inline GeneratorParams(const GeneratorParams& from) : GeneratorParams(nullptr, from) {}
  inline GeneratorParams(GeneratorParams&& from) noexcept
      : GeneratorParams(nullptr, std::move(from)) {}
  inline GeneratorParams& operator=(const GeneratorParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline GeneratorParams& operator=(GeneratorParams&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GeneratorParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const GeneratorParams* internal_default_instance() {
    return reinterpret_cast<const GeneratorParams*>(
        &_GeneratorParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GeneratorParams& a, GeneratorParams& b) { a.Swap(&b); }
  inline void Swap(GeneratorParams* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GeneratorParams* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GeneratorParams* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GeneratorParams>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GeneratorParams& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GeneratorParams& from) { GeneratorParams::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GeneratorParams* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.benchmark.module.v1.GeneratorParams"; }

 protected:
  explicit GeneratorParams(::google::protobuf::Arena* arena);
  GeneratorParams(::google::protobuf::Arena* arena, const GeneratorParams& from);
  GeneratorParams(::google::protobuf::Arena* arena, GeneratorParams&& from) noexcept
      : GeneratorParams(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeedFieldNumber = 1,
    kBucketCountFieldNumber = 2,
    kKeyMeanFieldNumber = 3,
    kKeyStdDevFieldNumber = 4,
    kValueMeanFieldNumber = 6,
    kValueStdDevFieldNumber = 7,
    kGenesisCountFieldNumber = 8,
    kInsertWeightFieldNumber = 9,
    kUpdateWeightFieldNumber = 10,
    kDeleteWeightFieldNumber = 11,
    kGetWeightFieldNumber = 12,
  };
  // uint64 seed = 1 [json_name = "seed"];
  void clear_seed() ;
  ::uint64_t seed() const;
  void set_seed(::uint64_t value);

  private:
  ::uint64_t _internal_seed() const;
  void _internal_set_seed(::uint64_t value);

  public:
  // uint64 bucket_count = 2 [json_name = "bucketCount"];
  void clear_bucket_count() ;
  ::uint64_t bucket_count() const;
  void set_bucket_count(::uint64_t value);

  private:
  ::uint64_t _internal_bucket_count() const;
  void _internal_set_bucket_count(::uint64_t value);

  public:
  // uint64 key_mean = 3 [json_name = "keyMean"];
  void clear_key_mean() ;
  ::uint64_t key_mean() const;
  void set_key_mean(::uint64_t value);

  private:
  ::uint64_t _internal_key_mean() const;
  void _internal_set_key_mean(::uint64_t value);

  public:
  // uint64 key_std_dev = 4 [json_name = "keyStdDev"];
  void clear_key_std_dev() ;
  ::uint64_t key_std_dev() const;
  void set_key_std_dev(::uint64_t value);

  private:
  ::uint64_t _internal_key_std_dev() const;
  void _internal_set_key_std_dev(::uint64_t value);

  public:
  // uint64 value_mean = 6 [json_name = "valueMean"];
  void clear_value_mean() ;
  ::uint64_t value_mean() const;
  void set_value_mean(::uint64_t value);

  private:
  ::uint64_t _internal_value_mean() const;
  void _internal_set_value_mean(::uint64_t value);

  public:
  // uint64 value_std_dev = 7 [json_name = "valueStdDev"];
  void clear_value_std_dev() ;
  ::uint64_t value_std_dev() const;
  void set_value_std_dev(::uint64_t value);

  private:
  ::uint64_t _internal_value_std_dev() const;
  void _internal_set_value_std_dev(::uint64_t value);

  public:
  // uint64 genesis_count = 8 [json_name = "genesisCount"];
  void clear_genesis_count() ;
  ::uint64_t genesis_count() const;
  void set_genesis_count(::uint64_t value);

  private:
  ::uint64_t _internal_genesis_count() const;
  void _internal_set_genesis_count(::uint64_t value);

  public:
  // float insert_weight = 9 [json_name = "insertWeight"];
  void clear_insert_weight() ;
  float insert_weight() const;
  void set_insert_weight(float value);

  private:
  float _internal_insert_weight() const;
  void _internal_set_insert_weight(float value);

  public:
  // float update_weight = 10 [json_name = "updateWeight"];
  void clear_update_weight() ;
  float update_weight() const;
  void set_update_weight(float value);

  private:
  float _internal_update_weight() const;
  void _internal_set_update_weight(float value);

  public:
  // float delete_weight = 11 [json_name = "deleteWeight"];
  void clear_delete_weight() ;
  float delete_weight() const;
  void set_delete_weight(float value);

  private:
  float _internal_delete_weight() const;
  void _internal_set_delete_weight(float value);

  public:
  // float get_weight = 12 [json_name = "getWeight"];
  void clear_get_weight() ;
  float get_weight() const;
  void set_get_weight(float value);

  private:
  float _internal_get_weight() const;
  void _internal_set_get_weight(float value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.benchmark.module.v1.GeneratorParams)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GeneratorParams& from_msg);
    ::uint64_t seed_;
    ::uint64_t bucket_count_;
    ::uint64_t key_mean_;
    ::uint64_t key_std_dev_;
    ::uint64_t value_mean_;
    ::uint64_t value_std_dev_;
    ::uint64_t genesis_count_;
    float insert_weight_;
    float update_weight_;
    float delete_weight_;
    float get_weight_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto;
};
// -------------------------------------------------------------------

class Module final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.benchmark.module.v1.Module) */ {
 public:
  inline Module() : Module(nullptr) {}
  ~Module() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Module* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Module));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Module(
      ::google::protobuf::internal::ConstantInitialized);

  inline Module(const Module& from) : Module(nullptr, from) {}
  inline Module(Module&& from) noexcept
      : Module(nullptr, std::move(from)) {}
  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }
  inline Module& operator=(Module&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Module& default_instance() {
    return *internal_default_instance();
  }
  static inline const Module* internal_default_instance() {
    return reinterpret_cast<const Module*>(
        &_Module_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Module& a, Module& b) { a.Swap(&b); }
  inline void Swap(Module* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Module* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Module* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Module>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Module& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Module& from) { Module::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Module* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.benchmark.module.v1.Module"; }

 protected:
  explicit Module(::google::protobuf::Arena* arena);
  Module(::google::protobuf::Arena* arena, const Module& from);
  Module(::google::protobuf::Arena* arena, Module&& from) noexcept
      : Module(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGenesisParamsFieldNumber = 1,
  };
  // .cosmos.benchmark.module.v1.GeneratorParams genesis_params = 1 [json_name = "genesisParams"];
  bool has_genesis_params() const;
  void clear_genesis_params() ;
  const ::cosmos::benchmark::module::v1::GeneratorParams& genesis_params() const;
  PROTOBUF_NODISCARD ::cosmos::benchmark::module::v1::GeneratorParams* release_genesis_params();
  ::cosmos::benchmark::module::v1::GeneratorParams* mutable_genesis_params();
  void set_allocated_genesis_params(::cosmos::benchmark::module::v1::GeneratorParams* value);
  void unsafe_arena_set_allocated_genesis_params(::cosmos::benchmark::module::v1::GeneratorParams* value);
  ::cosmos::benchmark::module::v1::GeneratorParams* unsafe_arena_release_genesis_params();

  private:
  const ::cosmos::benchmark::module::v1::GeneratorParams& _internal_genesis_params() const;
  ::cosmos::benchmark::module::v1::GeneratorParams* _internal_mutable_genesis_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.benchmark.module.v1.Module)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Module& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::benchmark::module::v1::GeneratorParams* genesis_params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Module

// .cosmos.benchmark.module.v1.GeneratorParams genesis_params = 1 [json_name = "genesisParams"];
inline bool Module::has_genesis_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.genesis_params_ != nullptr);
  return value;
}
inline void Module::clear_genesis_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.genesis_params_ != nullptr) _impl_.genesis_params_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::benchmark::module::v1::GeneratorParams& Module::_internal_genesis_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::benchmark::module::v1::GeneratorParams* p = _impl_.genesis_params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::benchmark::module::v1::GeneratorParams&>(::cosmos::benchmark::module::v1::_GeneratorParams_default_instance_);
}
inline const ::cosmos::benchmark::module::v1::GeneratorParams& Module::genesis_params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.Module.genesis_params)
  return _internal_genesis_params();
}
inline void Module::unsafe_arena_set_allocated_genesis_params(::cosmos::benchmark::module::v1::GeneratorParams* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.genesis_params_);
  }
  _impl_.genesis_params_ = reinterpret_cast<::cosmos::benchmark::module::v1::GeneratorParams*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.benchmark.module.v1.Module.genesis_params)
}
inline ::cosmos::benchmark::module::v1::GeneratorParams* Module::release_genesis_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::benchmark::module::v1::GeneratorParams* released = _impl_.genesis_params_;
  _impl_.genesis_params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::benchmark::module::v1::GeneratorParams* Module::unsafe_arena_release_genesis_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.benchmark.module.v1.Module.genesis_params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::benchmark::module::v1::GeneratorParams* temp = _impl_.genesis_params_;
  _impl_.genesis_params_ = nullptr;
  return temp;
}
inline ::cosmos::benchmark::module::v1::GeneratorParams* Module::_internal_mutable_genesis_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.genesis_params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::benchmark::module::v1::GeneratorParams>(GetArena());
    _impl_.genesis_params_ = reinterpret_cast<::cosmos::benchmark::module::v1::GeneratorParams*>(p);
  }
  return _impl_.genesis_params_;
}
inline ::cosmos::benchmark::module::v1::GeneratorParams* Module::mutable_genesis_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::benchmark::module::v1::GeneratorParams* _msg = _internal_mutable_genesis_params();
  // @@protoc_insertion_point(field_mutable:cosmos.benchmark.module.v1.Module.genesis_params)
  return _msg;
}
inline void Module::set_allocated_genesis_params(::cosmos::benchmark::module::v1::GeneratorParams* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.genesis_params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.genesis_params_ = reinterpret_cast<::cosmos::benchmark::module::v1::GeneratorParams*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.benchmark.module.v1.Module.genesis_params)
}

// -------------------------------------------------------------------

// GeneratorParams

// uint64 seed = 1 [json_name = "seed"];
inline void GeneratorParams::clear_seed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = ::uint64_t{0u};
}
inline ::uint64_t GeneratorParams::seed() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.seed)
  return _internal_seed();
}
inline void GeneratorParams::set_seed(::uint64_t value) {
  _internal_set_seed(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.seed)
}
inline ::uint64_t GeneratorParams::_internal_seed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seed_;
}
inline void GeneratorParams::_internal_set_seed(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seed_ = value;
}

// uint64 bucket_count = 2 [json_name = "bucketCount"];
inline void GeneratorParams::clear_bucket_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_count_ = ::uint64_t{0u};
}
inline ::uint64_t GeneratorParams::bucket_count() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.bucket_count)
  return _internal_bucket_count();
}
inline void GeneratorParams::set_bucket_count(::uint64_t value) {
  _internal_set_bucket_count(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.bucket_count)
}
inline ::uint64_t GeneratorParams::_internal_bucket_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bucket_count_;
}
inline void GeneratorParams::_internal_set_bucket_count(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_count_ = value;
}

// uint64 key_mean = 3 [json_name = "keyMean"];
inline void GeneratorParams::clear_key_mean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_mean_ = ::uint64_t{0u};
}
inline ::uint64_t GeneratorParams::key_mean() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.key_mean)
  return _internal_key_mean();
}
inline void GeneratorParams::set_key_mean(::uint64_t value) {
  _internal_set_key_mean(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.key_mean)
}
inline ::uint64_t GeneratorParams::_internal_key_mean() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_mean_;
}
inline void GeneratorParams::_internal_set_key_mean(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_mean_ = value;
}

// uint64 key_std_dev = 4 [json_name = "keyStdDev"];
inline void GeneratorParams::clear_key_std_dev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_std_dev_ = ::uint64_t{0u};
}
inline ::uint64_t GeneratorParams::key_std_dev() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.key_std_dev)
  return _internal_key_std_dev();
}
inline void GeneratorParams::set_key_std_dev(::uint64_t value) {
  _internal_set_key_std_dev(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.key_std_dev)
}
inline ::uint64_t GeneratorParams::_internal_key_std_dev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_std_dev_;
}
inline void GeneratorParams::_internal_set_key_std_dev(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_std_dev_ = value;
}

// uint64 value_mean = 6 [json_name = "valueMean"];
inline void GeneratorParams::clear_value_mean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_mean_ = ::uint64_t{0u};
}
inline ::uint64_t GeneratorParams::value_mean() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.value_mean)
  return _internal_value_mean();
}
inline void GeneratorParams::set_value_mean(::uint64_t value) {
  _internal_set_value_mean(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.value_mean)
}
inline ::uint64_t GeneratorParams::_internal_value_mean() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_mean_;
}
inline void GeneratorParams::_internal_set_value_mean(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_mean_ = value;
}

// uint64 value_std_dev = 7 [json_name = "valueStdDev"];
inline void GeneratorParams::clear_value_std_dev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_std_dev_ = ::uint64_t{0u};
}
inline ::uint64_t GeneratorParams::value_std_dev() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.value_std_dev)
  return _internal_value_std_dev();
}
inline void GeneratorParams::set_value_std_dev(::uint64_t value) {
  _internal_set_value_std_dev(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.value_std_dev)
}
inline ::uint64_t GeneratorParams::_internal_value_std_dev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_std_dev_;
}
inline void GeneratorParams::_internal_set_value_std_dev(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_std_dev_ = value;
}

// uint64 genesis_count = 8 [json_name = "genesisCount"];
inline void GeneratorParams::clear_genesis_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.genesis_count_ = ::uint64_t{0u};
}
inline ::uint64_t GeneratorParams::genesis_count() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.genesis_count)
  return _internal_genesis_count();
}
inline void GeneratorParams::set_genesis_count(::uint64_t value) {
  _internal_set_genesis_count(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.genesis_count)
}
inline ::uint64_t GeneratorParams::_internal_genesis_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.genesis_count_;
}
inline void GeneratorParams::_internal_set_genesis_count(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.genesis_count_ = value;
}

// float insert_weight = 9 [json_name = "insertWeight"];
inline void GeneratorParams::clear_insert_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.insert_weight_ = 0;
}
inline float GeneratorParams::insert_weight() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.insert_weight)
  return _internal_insert_weight();
}
inline void GeneratorParams::set_insert_weight(float value) {
  _internal_set_insert_weight(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.insert_weight)
}
inline float GeneratorParams::_internal_insert_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.insert_weight_;
}
inline void GeneratorParams::_internal_set_insert_weight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.insert_weight_ = value;
}

// float update_weight = 10 [json_name = "updateWeight"];
inline void GeneratorParams::clear_update_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_weight_ = 0;
}
inline float GeneratorParams::update_weight() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.update_weight)
  return _internal_update_weight();
}
inline void GeneratorParams::set_update_weight(float value) {
  _internal_set_update_weight(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.update_weight)
}
inline float GeneratorParams::_internal_update_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.update_weight_;
}
inline void GeneratorParams::_internal_set_update_weight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_weight_ = value;
}

// float get_weight = 12 [json_name = "getWeight"];
inline void GeneratorParams::clear_get_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.get_weight_ = 0;
}
inline float GeneratorParams::get_weight() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.get_weight)
  return _internal_get_weight();
}
inline void GeneratorParams::set_get_weight(float value) {
  _internal_set_get_weight(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.get_weight)
}
inline float GeneratorParams::_internal_get_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.get_weight_;
}
inline void GeneratorParams::_internal_set_get_weight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.get_weight_ = value;
}

// float delete_weight = 11 [json_name = "deleteWeight"];
inline void GeneratorParams::clear_delete_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete_weight_ = 0;
}
inline float GeneratorParams::delete_weight() const {
  // @@protoc_insertion_point(field_get:cosmos.benchmark.module.v1.GeneratorParams.delete_weight)
  return _internal_delete_weight();
}
inline void GeneratorParams::set_delete_weight(float value) {
  _internal_set_delete_weight(value);
  // @@protoc_insertion_point(field_set:cosmos.benchmark.module.v1.GeneratorParams.delete_weight)
}
inline float GeneratorParams::_internal_delete_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delete_weight_;
}
inline void GeneratorParams::_internal_set_delete_weight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delete_weight_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace module
}  // namespace benchmark
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fbenchmark_2fmodule_2fv1_2fmodule_2eproto_2epb_2eh
