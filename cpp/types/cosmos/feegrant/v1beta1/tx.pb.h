// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/feegrant/v1beta1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto_2epb_2eh
#define cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/any.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace feegrant {
namespace v1beta1 {
class MsgGrantAllowance;
struct MsgGrantAllowanceDefaultTypeInternal;
extern MsgGrantAllowanceDefaultTypeInternal _MsgGrantAllowance_default_instance_;
class MsgGrantAllowanceResponse;
struct MsgGrantAllowanceResponseDefaultTypeInternal;
extern MsgGrantAllowanceResponseDefaultTypeInternal _MsgGrantAllowanceResponse_default_instance_;
class MsgPruneAllowances;
struct MsgPruneAllowancesDefaultTypeInternal;
extern MsgPruneAllowancesDefaultTypeInternal _MsgPruneAllowances_default_instance_;
class MsgPruneAllowancesResponse;
struct MsgPruneAllowancesResponseDefaultTypeInternal;
extern MsgPruneAllowancesResponseDefaultTypeInternal _MsgPruneAllowancesResponse_default_instance_;
class MsgRevokeAllowance;
struct MsgRevokeAllowanceDefaultTypeInternal;
extern MsgRevokeAllowanceDefaultTypeInternal _MsgRevokeAllowance_default_instance_;
class MsgRevokeAllowanceResponse;
struct MsgRevokeAllowanceResponseDefaultTypeInternal;
extern MsgRevokeAllowanceResponseDefaultTypeInternal _MsgRevokeAllowanceResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace feegrant {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgRevokeAllowanceResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse) */ {
 public:
  inline MsgRevokeAllowanceResponse() : MsgRevokeAllowanceResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRevokeAllowanceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRevokeAllowanceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevokeAllowanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRevokeAllowanceResponse(const MsgRevokeAllowanceResponse& from) : MsgRevokeAllowanceResponse(nullptr, from) {}
  inline MsgRevokeAllowanceResponse(MsgRevokeAllowanceResponse&& from) noexcept
      : MsgRevokeAllowanceResponse(nullptr, std::move(from)) {}
  inline MsgRevokeAllowanceResponse& operator=(const MsgRevokeAllowanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevokeAllowanceResponse& operator=(MsgRevokeAllowanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevokeAllowanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevokeAllowanceResponse* internal_default_instance() {
    return reinterpret_cast<const MsgRevokeAllowanceResponse*>(
        &_MsgRevokeAllowanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgRevokeAllowanceResponse& a, MsgRevokeAllowanceResponse& b) { a.Swap(&b); }
  inline void Swap(MsgRevokeAllowanceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevokeAllowanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevokeAllowanceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgRevokeAllowanceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgRevokeAllowanceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgRevokeAllowanceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse"; }

 protected:
  explicit MsgRevokeAllowanceResponse(::google::protobuf::Arena* arena);
  MsgRevokeAllowanceResponse(::google::protobuf::Arena* arena, const MsgRevokeAllowanceResponse& from);
  MsgRevokeAllowanceResponse(::google::protobuf::Arena* arena, MsgRevokeAllowanceResponse&& from) noexcept
      : MsgRevokeAllowanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgRevokeAllowanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRevokeAllowanceResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgRevokeAllowance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgRevokeAllowance) */ {
 public:
  inline MsgRevokeAllowance() : MsgRevokeAllowance(nullptr) {}
  ~MsgRevokeAllowance() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgRevokeAllowance* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgRevokeAllowance));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgRevokeAllowance(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgRevokeAllowance(const MsgRevokeAllowance& from) : MsgRevokeAllowance(nullptr, from) {}
  inline MsgRevokeAllowance(MsgRevokeAllowance&& from) noexcept
      : MsgRevokeAllowance(nullptr, std::move(from)) {}
  inline MsgRevokeAllowance& operator=(const MsgRevokeAllowance& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgRevokeAllowance& operator=(MsgRevokeAllowance&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgRevokeAllowance& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgRevokeAllowance* internal_default_instance() {
    return reinterpret_cast<const MsgRevokeAllowance*>(
        &_MsgRevokeAllowance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgRevokeAllowance& a, MsgRevokeAllowance& b) { a.Swap(&b); }
  inline void Swap(MsgRevokeAllowance* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgRevokeAllowance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgRevokeAllowance* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgRevokeAllowance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgRevokeAllowance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgRevokeAllowance& from) { MsgRevokeAllowance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgRevokeAllowance* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.MsgRevokeAllowance"; }

 protected:
  explicit MsgRevokeAllowance(::google::protobuf::Arena* arena);
  MsgRevokeAllowance(::google::protobuf::Arena* arena, const MsgRevokeAllowance& from);
  MsgRevokeAllowance(::google::protobuf::Arena* arena, MsgRevokeAllowance&& from) noexcept
      : MsgRevokeAllowance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgRevokeAllowance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgRevokeAllowance& from_msg);
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgPruneAllowancesResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse) */ {
 public:
  inline MsgPruneAllowancesResponse() : MsgPruneAllowancesResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgPruneAllowancesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgPruneAllowancesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgPruneAllowancesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgPruneAllowancesResponse(const MsgPruneAllowancesResponse& from) : MsgPruneAllowancesResponse(nullptr, from) {}
  inline MsgPruneAllowancesResponse(MsgPruneAllowancesResponse&& from) noexcept
      : MsgPruneAllowancesResponse(nullptr, std::move(from)) {}
  inline MsgPruneAllowancesResponse& operator=(const MsgPruneAllowancesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPruneAllowancesResponse& operator=(MsgPruneAllowancesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgPruneAllowancesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgPruneAllowancesResponse* internal_default_instance() {
    return reinterpret_cast<const MsgPruneAllowancesResponse*>(
        &_MsgPruneAllowancesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgPruneAllowancesResponse& a, MsgPruneAllowancesResponse& b) { a.Swap(&b); }
  inline void Swap(MsgPruneAllowancesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPruneAllowancesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgPruneAllowancesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgPruneAllowancesResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgPruneAllowancesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgPruneAllowancesResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse"; }

 protected:
  explicit MsgPruneAllowancesResponse(::google::protobuf::Arena* arena);
  MsgPruneAllowancesResponse(::google::protobuf::Arena* arena, const MsgPruneAllowancesResponse& from);
  MsgPruneAllowancesResponse(::google::protobuf::Arena* arena, MsgPruneAllowancesResponse&& from) noexcept
      : MsgPruneAllowancesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgPruneAllowancesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgPruneAllowancesResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgPruneAllowances final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgPruneAllowances) */ {
 public:
  inline MsgPruneAllowances() : MsgPruneAllowances(nullptr) {}
  ~MsgPruneAllowances() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgPruneAllowances* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgPruneAllowances));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgPruneAllowances(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgPruneAllowances(const MsgPruneAllowances& from) : MsgPruneAllowances(nullptr, from) {}
  inline MsgPruneAllowances(MsgPruneAllowances&& from) noexcept
      : MsgPruneAllowances(nullptr, std::move(from)) {}
  inline MsgPruneAllowances& operator=(const MsgPruneAllowances& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgPruneAllowances& operator=(MsgPruneAllowances&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgPruneAllowances& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgPruneAllowances* internal_default_instance() {
    return reinterpret_cast<const MsgPruneAllowances*>(
        &_MsgPruneAllowances_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgPruneAllowances& a, MsgPruneAllowances& b) { a.Swap(&b); }
  inline void Swap(MsgPruneAllowances* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgPruneAllowances* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgPruneAllowances* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgPruneAllowances>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgPruneAllowances& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgPruneAllowances& from) { MsgPruneAllowances::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgPruneAllowances* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.MsgPruneAllowances"; }

 protected:
  explicit MsgPruneAllowances(::google::protobuf::Arena* arena);
  MsgPruneAllowances(::google::protobuf::Arena* arena, const MsgPruneAllowances& from);
  MsgPruneAllowances(::google::protobuf::Arena* arena, MsgPruneAllowances&& from) noexcept
      : MsgPruneAllowances(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPrunerFieldNumber = 1,
  };
  // string pruner = 1 [json_name = "pruner", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_pruner() ;
  const std::string& pruner() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pruner(Arg_&& arg, Args_... args);
  std::string* mutable_pruner();
  PROTOBUF_NODISCARD std::string* release_pruner();
  void set_allocated_pruner(std::string* value);

  private:
  const std::string& _internal_pruner() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pruner(
      const std::string& value);
  std::string* _internal_mutable_pruner();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgPruneAllowances)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      57, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgPruneAllowances& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pruner_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgGrantAllowanceResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse) */ {
 public:
  inline MsgGrantAllowanceResponse() : MsgGrantAllowanceResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgGrantAllowanceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgGrantAllowanceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrantAllowanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgGrantAllowanceResponse(const MsgGrantAllowanceResponse& from) : MsgGrantAllowanceResponse(nullptr, from) {}
  inline MsgGrantAllowanceResponse(MsgGrantAllowanceResponse&& from) noexcept
      : MsgGrantAllowanceResponse(nullptr, std::move(from)) {}
  inline MsgGrantAllowanceResponse& operator=(const MsgGrantAllowanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrantAllowanceResponse& operator=(MsgGrantAllowanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrantAllowanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrantAllowanceResponse* internal_default_instance() {
    return reinterpret_cast<const MsgGrantAllowanceResponse*>(
        &_MsgGrantAllowanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgGrantAllowanceResponse& a, MsgGrantAllowanceResponse& b) { a.Swap(&b); }
  inline void Swap(MsgGrantAllowanceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrantAllowanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrantAllowanceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgGrantAllowanceResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgGrantAllowanceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgGrantAllowanceResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse"; }

 protected:
  explicit MsgGrantAllowanceResponse(::google::protobuf::Arena* arena);
  MsgGrantAllowanceResponse(::google::protobuf::Arena* arena, const MsgGrantAllowanceResponse& from);
  MsgGrantAllowanceResponse(::google::protobuf::Arena* arena, MsgGrantAllowanceResponse&& from) noexcept
      : MsgGrantAllowanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgGrantAllowanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgGrantAllowanceResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgGrantAllowance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.MsgGrantAllowance) */ {
 public:
  inline MsgGrantAllowance() : MsgGrantAllowance(nullptr) {}
  ~MsgGrantAllowance() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgGrantAllowance* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgGrantAllowance));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgGrantAllowance(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgGrantAllowance(const MsgGrantAllowance& from) : MsgGrantAllowance(nullptr, from) {}
  inline MsgGrantAllowance(MsgGrantAllowance&& from) noexcept
      : MsgGrantAllowance(nullptr, std::move(from)) {}
  inline MsgGrantAllowance& operator=(const MsgGrantAllowance& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgGrantAllowance& operator=(MsgGrantAllowance&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgGrantAllowance& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgGrantAllowance* internal_default_instance() {
    return reinterpret_cast<const MsgGrantAllowance*>(
        &_MsgGrantAllowance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgGrantAllowance& a, MsgGrantAllowance& b) { a.Swap(&b); }
  inline void Swap(MsgGrantAllowance* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgGrantAllowance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgGrantAllowance* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgGrantAllowance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgGrantAllowance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgGrantAllowance& from) { MsgGrantAllowance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgGrantAllowance* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.MsgGrantAllowance"; }

 protected:
  explicit MsgGrantAllowance(::google::protobuf::Arena* arena);
  MsgGrantAllowance(::google::protobuf::Arena* arena, const MsgGrantAllowance& from);
  MsgGrantAllowance(::google::protobuf::Arena* arena, MsgGrantAllowance&& from) noexcept
      : MsgGrantAllowance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
    kAllowanceFieldNumber = 3,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // .google.protobuf.Any allowance = 3 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
  bool has_allowance() const;
  void clear_allowance() ;
  const ::google::protobuf::Any& allowance() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_allowance();
  ::google::protobuf::Any* mutable_allowance();
  void set_allocated_allowance(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_allowance(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_allowance();

  private:
  const ::google::protobuf::Any& _internal_allowance() const;
  ::google::protobuf::Any* _internal_mutable_allowance();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.MsgGrantAllowance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      64, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgGrantAllowance& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::Any* allowance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgGrantAllowance

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrantAllowance::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgGrantAllowance::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrantAllowance::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
}
inline std::string* MsgGrantAllowance::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
  return _s;
}
inline const std::string& MsgGrantAllowance::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void MsgGrantAllowance::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* MsgGrantAllowance::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* MsgGrantAllowance::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
  return _impl_.granter_.Release();
}
inline void MsgGrantAllowance::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgGrantAllowance::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgGrantAllowance::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgGrantAllowance::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
}
inline std::string* MsgGrantAllowance::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
  return _s;
}
inline const std::string& MsgGrantAllowance::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void MsgGrantAllowance::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* MsgGrantAllowance::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* MsgGrantAllowance::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgGrantAllowance::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.grantee)
}

// .google.protobuf.Any allowance = 3 [json_name = "allowance", (.cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
inline bool MsgGrantAllowance::has_allowance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.allowance_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& MsgGrantAllowance::_internal_allowance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.allowance_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& MsgGrantAllowance::allowance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
  return _internal_allowance();
}
inline void MsgGrantAllowance::unsafe_arena_set_allocated_allowance(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allowance_);
  }
  _impl_.allowance_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
}
inline ::google::protobuf::Any* MsgGrantAllowance::release_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.allowance_;
  _impl_.allowance_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* MsgGrantAllowance::unsafe_arena_release_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.allowance_;
  _impl_.allowance_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* MsgGrantAllowance::_internal_mutable_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allowance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.allowance_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.allowance_;
}
inline ::google::protobuf::Any* MsgGrantAllowance::mutable_allowance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_allowance();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
  return _msg;
}
inline void MsgGrantAllowance::set_allocated_allowance(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allowance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.allowance_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgGrantAllowance.allowance)
}

// -------------------------------------------------------------------

// MsgGrantAllowanceResponse

// -------------------------------------------------------------------

// MsgRevokeAllowance

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevokeAllowance::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& MsgRevokeAllowance::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevokeAllowance::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
}
inline std::string* MsgRevokeAllowance::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
  return _s;
}
inline const std::string& MsgRevokeAllowance::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void MsgRevokeAllowance::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* MsgRevokeAllowance::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* MsgRevokeAllowance::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
  return _impl_.granter_.Release();
}
inline void MsgRevokeAllowance::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgRevokeAllowance.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgRevokeAllowance::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& MsgRevokeAllowance::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgRevokeAllowance::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
}
inline std::string* MsgRevokeAllowance::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
  return _s;
}
inline const std::string& MsgRevokeAllowance::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void MsgRevokeAllowance::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* MsgRevokeAllowance::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* MsgRevokeAllowance::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
  return _impl_.grantee_.Release();
}
inline void MsgRevokeAllowance::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgRevokeAllowance.grantee)
}

// -------------------------------------------------------------------

// MsgRevokeAllowanceResponse

// -------------------------------------------------------------------

// MsgPruneAllowances

// string pruner = 1 [json_name = "pruner", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgPruneAllowances::clear_pruner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruner_.ClearToEmpty();
}
inline const std::string& MsgPruneAllowances::pruner() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.MsgPruneAllowances.pruner)
  return _internal_pruner();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgPruneAllowances::set_pruner(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruner_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.MsgPruneAllowances.pruner)
}
inline std::string* MsgPruneAllowances::mutable_pruner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pruner();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.MsgPruneAllowances.pruner)
  return _s;
}
inline const std::string& MsgPruneAllowances::_internal_pruner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pruner_.Get();
}
inline void MsgPruneAllowances::_internal_set_pruner(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruner_.Set(value, GetArena());
}
inline std::string* MsgPruneAllowances::_internal_mutable_pruner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pruner_.Mutable( GetArena());
}
inline std::string* MsgPruneAllowances::release_pruner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.MsgPruneAllowances.pruner)
  return _impl_.pruner_.Release();
}
inline void MsgPruneAllowances::set_allocated_pruner(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruner_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pruner_.IsDefault()) {
    _impl_.pruner_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.MsgPruneAllowances.pruner)
}

// -------------------------------------------------------------------

// MsgPruneAllowancesResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2ffeegrant_2fv1beta1_2ftx_2eproto_2epb_2eh
