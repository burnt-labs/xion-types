// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/feegrant/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "cosmos/feegrant/v1beta1/feegrant.pb.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace feegrant {
namespace v1beta1 {
class QueryAllowanceRequest;
struct QueryAllowanceRequestDefaultTypeInternal;
extern QueryAllowanceRequestDefaultTypeInternal _QueryAllowanceRequest_default_instance_;
class QueryAllowanceResponse;
struct QueryAllowanceResponseDefaultTypeInternal;
extern QueryAllowanceResponseDefaultTypeInternal _QueryAllowanceResponse_default_instance_;
class QueryAllowancesByGranterRequest;
struct QueryAllowancesByGranterRequestDefaultTypeInternal;
extern QueryAllowancesByGranterRequestDefaultTypeInternal _QueryAllowancesByGranterRequest_default_instance_;
class QueryAllowancesByGranterResponse;
struct QueryAllowancesByGranterResponseDefaultTypeInternal;
extern QueryAllowancesByGranterResponseDefaultTypeInternal _QueryAllowancesByGranterResponse_default_instance_;
class QueryAllowancesRequest;
struct QueryAllowancesRequestDefaultTypeInternal;
extern QueryAllowancesRequestDefaultTypeInternal _QueryAllowancesRequest_default_instance_;
class QueryAllowancesResponse;
struct QueryAllowancesResponseDefaultTypeInternal;
extern QueryAllowancesResponseDefaultTypeInternal _QueryAllowancesResponse_default_instance_;
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace feegrant {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryAllowanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.QueryAllowanceRequest) */ {
 public:
  inline QueryAllowanceRequest() : QueryAllowanceRequest(nullptr) {}
  ~QueryAllowanceRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllowanceRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllowanceRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllowanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllowanceRequest(const QueryAllowanceRequest& from) : QueryAllowanceRequest(nullptr, from) {}
  inline QueryAllowanceRequest(QueryAllowanceRequest&& from) noexcept
      : QueryAllowanceRequest(nullptr, std::move(from)) {}
  inline QueryAllowanceRequest& operator=(const QueryAllowanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllowanceRequest& operator=(QueryAllowanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllowanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllowanceRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAllowanceRequest*>(
        &_QueryAllowanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryAllowanceRequest& a, QueryAllowanceRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAllowanceRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllowanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllowanceRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllowanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllowanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllowanceRequest& from) { QueryAllowanceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllowanceRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.QueryAllowanceRequest"; }

 protected:
  explicit QueryAllowanceRequest(::google::protobuf::Arena* arena);
  QueryAllowanceRequest(::google::protobuf::Arena* arena, const QueryAllowanceRequest& from);
  QueryAllowanceRequest(::google::protobuf::Arena* arena, QueryAllowanceRequest&& from) noexcept
      : QueryAllowanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranterFieldNumber = 1,
    kGranteeFieldNumber = 2,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.QueryAllowanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllowanceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllowancesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.QueryAllowancesRequest) */ {
 public:
  inline QueryAllowancesRequest() : QueryAllowancesRequest(nullptr) {}
  ~QueryAllowancesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllowancesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllowancesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllowancesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllowancesRequest(const QueryAllowancesRequest& from) : QueryAllowancesRequest(nullptr, from) {}
  inline QueryAllowancesRequest(QueryAllowancesRequest&& from) noexcept
      : QueryAllowancesRequest(nullptr, std::move(from)) {}
  inline QueryAllowancesRequest& operator=(const QueryAllowancesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllowancesRequest& operator=(QueryAllowancesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllowancesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllowancesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAllowancesRequest*>(
        &_QueryAllowancesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryAllowancesRequest& a, QueryAllowancesRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAllowancesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllowancesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllowancesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllowancesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllowancesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllowancesRequest& from) { QueryAllowancesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllowancesRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.QueryAllowancesRequest"; }

 protected:
  explicit QueryAllowancesRequest(::google::protobuf::Arena* arena);
  QueryAllowancesRequest(::google::protobuf::Arena* arena, const QueryAllowancesRequest& from);
  QueryAllowancesRequest(::google::protobuf::Arena* arena, QueryAllowancesRequest&& from) noexcept
      : QueryAllowancesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranteeFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_grantee() ;
  const std::string& grantee() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_grantee(Arg_&& arg, Args_... args);
  std::string* mutable_grantee();
  PROTOBUF_NODISCARD std::string* release_grantee();
  void set_allocated_grantee(std::string* value);

  private:
  const std::string& _internal_grantee() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_grantee(
      const std::string& value);
  std::string* _internal_mutable_grantee();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.QueryAllowancesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      62, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllowancesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr grantee_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllowancesByGranterRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest) */ {
 public:
  inline QueryAllowancesByGranterRequest() : QueryAllowancesByGranterRequest(nullptr) {}
  ~QueryAllowancesByGranterRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllowancesByGranterRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllowancesByGranterRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllowancesByGranterRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllowancesByGranterRequest(const QueryAllowancesByGranterRequest& from) : QueryAllowancesByGranterRequest(nullptr, from) {}
  inline QueryAllowancesByGranterRequest(QueryAllowancesByGranterRequest&& from) noexcept
      : QueryAllowancesByGranterRequest(nullptr, std::move(from)) {}
  inline QueryAllowancesByGranterRequest& operator=(const QueryAllowancesByGranterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllowancesByGranterRequest& operator=(QueryAllowancesByGranterRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllowancesByGranterRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllowancesByGranterRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAllowancesByGranterRequest*>(
        &_QueryAllowancesByGranterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryAllowancesByGranterRequest& a, QueryAllowancesByGranterRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAllowancesByGranterRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllowancesByGranterRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllowancesByGranterRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllowancesByGranterRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllowancesByGranterRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllowancesByGranterRequest& from) { QueryAllowancesByGranterRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllowancesByGranterRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest"; }

 protected:
  explicit QueryAllowancesByGranterRequest(::google::protobuf::Arena* arena);
  QueryAllowancesByGranterRequest(::google::protobuf::Arena* arena, const QueryAllowancesByGranterRequest& from);
  QueryAllowancesByGranterRequest(::google::protobuf::Arena* arena, QueryAllowancesByGranterRequest&& from) noexcept
      : QueryAllowancesByGranterRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGranterFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_granter() ;
  const std::string& granter() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_granter(Arg_&& arg, Args_... args);
  std::string* mutable_granter();
  PROTOBUF_NODISCARD std::string* release_granter();
  void set_allocated_granter(std::string* value);

  private:
  const std::string& _internal_granter() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_granter(
      const std::string& value);
  std::string* _internal_mutable_granter();

  public:
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllowancesByGranterRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr granter_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllowancesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.QueryAllowancesResponse) */ {
 public:
  inline QueryAllowancesResponse() : QueryAllowancesResponse(nullptr) {}
  ~QueryAllowancesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllowancesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllowancesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllowancesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllowancesResponse(const QueryAllowancesResponse& from) : QueryAllowancesResponse(nullptr, from) {}
  inline QueryAllowancesResponse(QueryAllowancesResponse&& from) noexcept
      : QueryAllowancesResponse(nullptr, std::move(from)) {}
  inline QueryAllowancesResponse& operator=(const QueryAllowancesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllowancesResponse& operator=(QueryAllowancesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllowancesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllowancesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAllowancesResponse*>(
        &_QueryAllowancesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryAllowancesResponse& a, QueryAllowancesResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAllowancesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllowancesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllowancesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllowancesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllowancesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllowancesResponse& from) { QueryAllowancesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllowancesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.QueryAllowancesResponse"; }

 protected:
  explicit QueryAllowancesResponse(::google::protobuf::Arena* arena);
  QueryAllowancesResponse(::google::protobuf::Arena* arena, const QueryAllowancesResponse& from);
  QueryAllowancesResponse(::google::protobuf::Arena* arena, QueryAllowancesResponse&& from) noexcept
      : QueryAllowancesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllowancesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
  int allowances_size() const;
  private:
  int _internal_allowances_size() const;

  public:
  void clear_allowances() ;
  ::cosmos::feegrant::v1beta1::Grant* mutable_allowances(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>* mutable_allowances();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>& _internal_allowances() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>* _internal_mutable_allowances();
  public:
  const ::cosmos::feegrant::v1beta1::Grant& allowances(int index) const;
  ::cosmos::feegrant::v1beta1::Grant* add_allowances();
  const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>& allowances() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.QueryAllowancesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllowancesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::feegrant::v1beta1::Grant > allowances_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllowancesByGranterResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse) */ {
 public:
  inline QueryAllowancesByGranterResponse() : QueryAllowancesByGranterResponse(nullptr) {}
  ~QueryAllowancesByGranterResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllowancesByGranterResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllowancesByGranterResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllowancesByGranterResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllowancesByGranterResponse(const QueryAllowancesByGranterResponse& from) : QueryAllowancesByGranterResponse(nullptr, from) {}
  inline QueryAllowancesByGranterResponse(QueryAllowancesByGranterResponse&& from) noexcept
      : QueryAllowancesByGranterResponse(nullptr, std::move(from)) {}
  inline QueryAllowancesByGranterResponse& operator=(const QueryAllowancesByGranterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllowancesByGranterResponse& operator=(QueryAllowancesByGranterResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllowancesByGranterResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllowancesByGranterResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAllowancesByGranterResponse*>(
        &_QueryAllowancesByGranterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryAllowancesByGranterResponse& a, QueryAllowancesByGranterResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAllowancesByGranterResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllowancesByGranterResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllowancesByGranterResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllowancesByGranterResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllowancesByGranterResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllowancesByGranterResponse& from) { QueryAllowancesByGranterResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllowancesByGranterResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse"; }

 protected:
  explicit QueryAllowancesByGranterResponse(::google::protobuf::Arena* arena);
  QueryAllowancesByGranterResponse(::google::protobuf::Arena* arena, const QueryAllowancesByGranterResponse& from);
  QueryAllowancesByGranterResponse(::google::protobuf::Arena* arena, QueryAllowancesByGranterResponse&& from) noexcept
      : QueryAllowancesByGranterResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllowancesFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
  int allowances_size() const;
  private:
  int _internal_allowances_size() const;

  public:
  void clear_allowances() ;
  ::cosmos::feegrant::v1beta1::Grant* mutable_allowances(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>* mutable_allowances();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>& _internal_allowances() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>* _internal_mutable_allowances();
  public:
  const ::cosmos::feegrant::v1beta1::Grant& allowances(int index) const;
  ::cosmos::feegrant::v1beta1::Grant* add_allowances();
  const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>& allowances() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllowancesByGranterResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::feegrant::v1beta1::Grant > allowances_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAllowanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.feegrant.v1beta1.QueryAllowanceResponse) */ {
 public:
  inline QueryAllowanceResponse() : QueryAllowanceResponse(nullptr) {}
  ~QueryAllowanceResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAllowanceResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAllowanceResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAllowanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAllowanceResponse(const QueryAllowanceResponse& from) : QueryAllowanceResponse(nullptr, from) {}
  inline QueryAllowanceResponse(QueryAllowanceResponse&& from) noexcept
      : QueryAllowanceResponse(nullptr, std::move(from)) {}
  inline QueryAllowanceResponse& operator=(const QueryAllowanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAllowanceResponse& operator=(QueryAllowanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAllowanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAllowanceResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAllowanceResponse*>(
        &_QueryAllowanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryAllowanceResponse& a, QueryAllowanceResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAllowanceResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAllowanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAllowanceResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAllowanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAllowanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAllowanceResponse& from) { QueryAllowanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAllowanceResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.feegrant.v1beta1.QueryAllowanceResponse"; }

 protected:
  explicit QueryAllowanceResponse(::google::protobuf::Arena* arena);
  QueryAllowanceResponse(::google::protobuf::Arena* arena, const QueryAllowanceResponse& from);
  QueryAllowanceResponse(::google::protobuf::Arena* arena, QueryAllowanceResponse&& from) noexcept
      : QueryAllowanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllowanceFieldNumber = 1,
  };
  // .cosmos.feegrant.v1beta1.Grant allowance = 1 [json_name = "allowance"];
  bool has_allowance() const;
  void clear_allowance() ;
  const ::cosmos::feegrant::v1beta1::Grant& allowance() const;
  PROTOBUF_NODISCARD ::cosmos::feegrant::v1beta1::Grant* release_allowance();
  ::cosmos::feegrant::v1beta1::Grant* mutable_allowance();
  void set_allocated_allowance(::cosmos::feegrant::v1beta1::Grant* value);
  void unsafe_arena_set_allocated_allowance(::cosmos::feegrant::v1beta1::Grant* value);
  ::cosmos::feegrant::v1beta1::Grant* unsafe_arena_release_allowance();

  private:
  const ::cosmos::feegrant::v1beta1::Grant& _internal_allowance() const;
  ::cosmos::feegrant::v1beta1::Grant* _internal_mutable_allowance();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.feegrant.v1beta1.QueryAllowanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAllowanceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::feegrant::v1beta1::Grant* allowance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryAllowanceRequest

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAllowanceRequest::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& QueryAllowanceRequest::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowanceRequest.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAllowanceRequest::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.QueryAllowanceRequest.granter)
}
inline std::string* QueryAllowanceRequest::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowanceRequest.granter)
  return _s;
}
inline const std::string& QueryAllowanceRequest::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void QueryAllowanceRequest::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* QueryAllowanceRequest::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* QueryAllowanceRequest::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowanceRequest.granter)
  return _impl_.granter_.Release();
}
inline void QueryAllowanceRequest::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowanceRequest.granter)
}

// string grantee = 2 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAllowanceRequest::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& QueryAllowanceRequest::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowanceRequest.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAllowanceRequest::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.QueryAllowanceRequest.grantee)
}
inline std::string* QueryAllowanceRequest::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowanceRequest.grantee)
  return _s;
}
inline const std::string& QueryAllowanceRequest::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void QueryAllowanceRequest::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* QueryAllowanceRequest::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* QueryAllowanceRequest::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowanceRequest.grantee)
  return _impl_.grantee_.Release();
}
inline void QueryAllowanceRequest::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowanceRequest.grantee)
}

// -------------------------------------------------------------------

// QueryAllowanceResponse

// .cosmos.feegrant.v1beta1.Grant allowance = 1 [json_name = "allowance"];
inline bool QueryAllowanceResponse::has_allowance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.allowance_ != nullptr);
  return value;
}
inline const ::cosmos::feegrant::v1beta1::Grant& QueryAllowanceResponse::_internal_allowance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::feegrant::v1beta1::Grant* p = _impl_.allowance_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::feegrant::v1beta1::Grant&>(::cosmos::feegrant::v1beta1::_Grant_default_instance_);
}
inline const ::cosmos::feegrant::v1beta1::Grant& QueryAllowanceResponse::allowance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowanceResponse.allowance)
  return _internal_allowance();
}
inline void QueryAllowanceResponse::unsafe_arena_set_allocated_allowance(::cosmos::feegrant::v1beta1::Grant* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allowance_);
  }
  _impl_.allowance_ = reinterpret_cast<::cosmos::feegrant::v1beta1::Grant*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.feegrant.v1beta1.QueryAllowanceResponse.allowance)
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowanceResponse::release_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::feegrant::v1beta1::Grant* released = _impl_.allowance_;
  _impl_.allowance_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowanceResponse::unsafe_arena_release_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowanceResponse.allowance)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::feegrant::v1beta1::Grant* temp = _impl_.allowance_;
  _impl_.allowance_ = nullptr;
  return temp;
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowanceResponse::_internal_mutable_allowance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.allowance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::feegrant::v1beta1::Grant>(GetArena());
    _impl_.allowance_ = reinterpret_cast<::cosmos::feegrant::v1beta1::Grant*>(p);
  }
  return _impl_.allowance_;
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowanceResponse::mutable_allowance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::feegrant::v1beta1::Grant* _msg = _internal_mutable_allowance();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowanceResponse.allowance)
  return _msg;
}
inline void QueryAllowanceResponse::set_allocated_allowance(::cosmos::feegrant::v1beta1::Grant* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.allowance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.allowance_ = reinterpret_cast<::cosmos::feegrant::v1beta1::Grant*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowanceResponse.allowance)
}

// -------------------------------------------------------------------

// QueryAllowancesRequest

// string grantee = 1 [json_name = "grantee", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAllowancesRequest::clear_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.ClearToEmpty();
}
inline const std::string& QueryAllowancesRequest::grantee() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesRequest.grantee)
  return _internal_grantee();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAllowancesRequest::set_grantee(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.QueryAllowancesRequest.grantee)
}
inline std::string* QueryAllowancesRequest::mutable_grantee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_grantee();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesRequest.grantee)
  return _s;
}
inline const std::string& QueryAllowancesRequest::_internal_grantee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.grantee_.Get();
}
inline void QueryAllowancesRequest::_internal_set_grantee(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.Set(value, GetArena());
}
inline std::string* QueryAllowancesRequest::_internal_mutable_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.grantee_.Mutable( GetArena());
}
inline std::string* QueryAllowancesRequest::release_grantee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowancesRequest.grantee)
  return _impl_.grantee_.Release();
}
inline void QueryAllowancesRequest::set_allocated_grantee(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.grantee_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.grantee_.IsDefault()) {
    _impl_.grantee_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesRequest.grantee)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryAllowancesRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllowancesRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllowancesRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesRequest.pagination)
  return _internal_pagination();
}
inline void QueryAllowancesRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowancesRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesRequest.pagination)
  return _msg;
}
inline void QueryAllowancesRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesRequest.pagination)
}

// -------------------------------------------------------------------

// QueryAllowancesResponse

// repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
inline int QueryAllowancesResponse::_internal_allowances_size() const {
  return _internal_allowances().size();
}
inline int QueryAllowancesResponse::allowances_size() const {
  return _internal_allowances_size();
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowancesResponse::mutable_allowances(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesResponse.allowances)
  return _internal_mutable_allowances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>* QueryAllowancesResponse::mutable_allowances()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.feegrant.v1beta1.QueryAllowancesResponse.allowances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_allowances();
}
inline const ::cosmos::feegrant::v1beta1::Grant& QueryAllowancesResponse::allowances(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesResponse.allowances)
  return _internal_allowances().Get(index);
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowancesResponse::add_allowances() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::feegrant::v1beta1::Grant* _add = _internal_mutable_allowances()->Add();
  // @@protoc_insertion_point(field_add:cosmos.feegrant.v1beta1.QueryAllowancesResponse.allowances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>& QueryAllowancesResponse::allowances() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.feegrant.v1beta1.QueryAllowancesResponse.allowances)
  return _internal_allowances();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>&
QueryAllowancesResponse::_internal_allowances() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allowances_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>*
QueryAllowancesResponse::_internal_mutable_allowances() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.allowances_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryAllowancesResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllowancesResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllowancesResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesResponse.pagination)
  return _internal_pagination();
}
inline void QueryAllowancesResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowancesResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesResponse.pagination)
  return _msg;
}
inline void QueryAllowancesResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesResponse.pagination)
}

// -------------------------------------------------------------------

// QueryAllowancesByGranterRequest

// string granter = 1 [json_name = "granter", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void QueryAllowancesByGranterRequest::clear_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.ClearToEmpty();
}
inline const std::string& QueryAllowancesByGranterRequest::granter() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.granter)
  return _internal_granter();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAllowancesByGranterRequest::set_granter(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.granter)
}
inline std::string* QueryAllowancesByGranterRequest::mutable_granter() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_granter();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.granter)
  return _s;
}
inline const std::string& QueryAllowancesByGranterRequest::_internal_granter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.granter_.Get();
}
inline void QueryAllowancesByGranterRequest::_internal_set_granter(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.Set(value, GetArena());
}
inline std::string* QueryAllowancesByGranterRequest::_internal_mutable_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.granter_.Mutable( GetArena());
}
inline std::string* QueryAllowancesByGranterRequest::release_granter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.granter)
  return _impl_.granter_.Release();
}
inline void QueryAllowancesByGranterRequest::set_allocated_granter(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.granter_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.granter_.IsDefault()) {
    _impl_.granter_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.granter)
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool QueryAllowancesByGranterRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllowancesByGranterRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& QueryAllowancesByGranterRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.pagination)
  return _internal_pagination();
}
inline void QueryAllowancesByGranterRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesByGranterRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesByGranterRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesByGranterRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* QueryAllowancesByGranterRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.pagination)
  return _msg;
}
inline void QueryAllowancesByGranterRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesByGranterRequest.pagination)
}

// -------------------------------------------------------------------

// QueryAllowancesByGranterResponse

// repeated .cosmos.feegrant.v1beta1.Grant allowances = 1 [json_name = "allowances"];
inline int QueryAllowancesByGranterResponse::_internal_allowances_size() const {
  return _internal_allowances().size();
}
inline int QueryAllowancesByGranterResponse::allowances_size() const {
  return _internal_allowances_size();
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowancesByGranterResponse::mutable_allowances(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.allowances)
  return _internal_mutable_allowances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>* QueryAllowancesByGranterResponse::mutable_allowances()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.allowances)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_allowances();
}
inline const ::cosmos::feegrant::v1beta1::Grant& QueryAllowancesByGranterResponse::allowances(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.allowances)
  return _internal_allowances().Get(index);
}
inline ::cosmos::feegrant::v1beta1::Grant* QueryAllowancesByGranterResponse::add_allowances() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::feegrant::v1beta1::Grant* _add = _internal_mutable_allowances()->Add();
  // @@protoc_insertion_point(field_add:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.allowances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>& QueryAllowancesByGranterResponse::allowances() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.allowances)
  return _internal_allowances();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>&
QueryAllowancesByGranterResponse::_internal_allowances() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allowances_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::feegrant::v1beta1::Grant>*
QueryAllowancesByGranterResponse::_internal_mutable_allowances() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.allowances_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 2 [json_name = "pagination"];
inline bool QueryAllowancesByGranterResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllowancesByGranterResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& QueryAllowancesByGranterResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.pagination)
  return _internal_pagination();
}
inline void QueryAllowancesByGranterResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesByGranterResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesByGranterResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesByGranterResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* QueryAllowancesByGranterResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.pagination)
  return _msg;
}
inline void QueryAllowancesByGranterResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse.pagination)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace feegrant
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2ffeegrant_2fv1beta1_2fquery_2eproto_2epb_2eh
