// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/mint/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fmint_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2fmint_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/mint/v1beta1/mint.pb.h"
#include "amino/amino.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fmint_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fmint_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fmint_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace mint {
namespace v1beta1 {
class QueryAnnualProvisionsRequest;
struct QueryAnnualProvisionsRequestDefaultTypeInternal;
extern QueryAnnualProvisionsRequestDefaultTypeInternal _QueryAnnualProvisionsRequest_default_instance_;
class QueryAnnualProvisionsResponse;
struct QueryAnnualProvisionsResponseDefaultTypeInternal;
extern QueryAnnualProvisionsResponseDefaultTypeInternal _QueryAnnualProvisionsResponse_default_instance_;
class QueryInflationRequest;
struct QueryInflationRequestDefaultTypeInternal;
extern QueryInflationRequestDefaultTypeInternal _QueryInflationRequest_default_instance_;
class QueryInflationResponse;
struct QueryInflationResponseDefaultTypeInternal;
extern QueryInflationResponseDefaultTypeInternal _QueryInflationResponse_default_instance_;
class QueryParamsRequest;
struct QueryParamsRequestDefaultTypeInternal;
extern QueryParamsRequestDefaultTypeInternal _QueryParamsRequest_default_instance_;
class QueryParamsResponse;
struct QueryParamsResponseDefaultTypeInternal;
extern QueryParamsResponseDefaultTypeInternal _QueryParamsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace mint
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace mint {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryParamsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.mint.v1beta1.QueryParamsRequest) */ {
 public:
  inline QueryParamsRequest() : QueryParamsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsRequest(const QueryParamsRequest& from) : QueryParamsRequest(nullptr, from) {}
  inline QueryParamsRequest(QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(nullptr, std::move(from)) {}
  inline QueryParamsRequest& operator=(const QueryParamsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsRequest& operator=(QueryParamsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryParamsRequest*>(
        &_QueryParamsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryParamsRequest& a, QueryParamsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryParamsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryParamsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryParamsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.mint.v1beta1.QueryParamsRequest"; }

 protected:
  explicit QueryParamsRequest(::google::protobuf::Arena* arena);
  QueryParamsRequest(::google::protobuf::Arena* arena, const QueryParamsRequest& from);
  QueryParamsRequest(::google::protobuf::Arena* arena, QueryParamsRequest&& from) noexcept
      : QueryParamsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.mint.v1beta1.QueryParamsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fmint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryInflationResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.mint.v1beta1.QueryInflationResponse) */ {
 public:
  inline QueryInflationResponse() : QueryInflationResponse(nullptr) {}
  ~QueryInflationResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryInflationResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryInflationResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryInflationResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryInflationResponse(const QueryInflationResponse& from) : QueryInflationResponse(nullptr, from) {}
  inline QueryInflationResponse(QueryInflationResponse&& from) noexcept
      : QueryInflationResponse(nullptr, std::move(from)) {}
  inline QueryInflationResponse& operator=(const QueryInflationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryInflationResponse& operator=(QueryInflationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryInflationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryInflationResponse* internal_default_instance() {
    return reinterpret_cast<const QueryInflationResponse*>(
        &_QueryInflationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryInflationResponse& a, QueryInflationResponse& b) { a.Swap(&b); }
  inline void Swap(QueryInflationResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryInflationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryInflationResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryInflationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryInflationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryInflationResponse& from) { QueryInflationResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryInflationResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.mint.v1beta1.QueryInflationResponse"; }

 protected:
  explicit QueryInflationResponse(::google::protobuf::Arena* arena);
  QueryInflationResponse(::google::protobuf::Arena* arena, const QueryInflationResponse& from);
  QueryInflationResponse(::google::protobuf::Arena* arena, QueryInflationResponse&& from) noexcept
      : QueryInflationResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInflationFieldNumber = 1,
  };
  // bytes inflation = 1 [json_name = "inflation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
  void clear_inflation() ;
  const std::string& inflation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_inflation(Arg_&& arg, Args_... args);
  std::string* mutable_inflation();
  PROTOBUF_NODISCARD std::string* release_inflation();
  void set_allocated_inflation(std::string* value);

  private:
  const std::string& _internal_inflation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_inflation(
      const std::string& value);
  std::string* _internal_mutable_inflation();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.mint.v1beta1.QueryInflationResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryInflationResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr inflation_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fmint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryInflationRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.mint.v1beta1.QueryInflationRequest) */ {
 public:
  inline QueryInflationRequest() : QueryInflationRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryInflationRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryInflationRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryInflationRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryInflationRequest(const QueryInflationRequest& from) : QueryInflationRequest(nullptr, from) {}
  inline QueryInflationRequest(QueryInflationRequest&& from) noexcept
      : QueryInflationRequest(nullptr, std::move(from)) {}
  inline QueryInflationRequest& operator=(const QueryInflationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryInflationRequest& operator=(QueryInflationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryInflationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryInflationRequest* internal_default_instance() {
    return reinterpret_cast<const QueryInflationRequest*>(
        &_QueryInflationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryInflationRequest& a, QueryInflationRequest& b) { a.Swap(&b); }
  inline void Swap(QueryInflationRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryInflationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryInflationRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryInflationRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryInflationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryInflationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.mint.v1beta1.QueryInflationRequest"; }

 protected:
  explicit QueryInflationRequest(::google::protobuf::Arena* arena);
  QueryInflationRequest(::google::protobuf::Arena* arena, const QueryInflationRequest& from);
  QueryInflationRequest(::google::protobuf::Arena* arena, QueryInflationRequest&& from) noexcept
      : QueryInflationRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.mint.v1beta1.QueryInflationRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryInflationRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fmint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnualProvisionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.mint.v1beta1.QueryAnnualProvisionsResponse) */ {
 public:
  inline QueryAnnualProvisionsResponse() : QueryAnnualProvisionsResponse(nullptr) {}
  ~QueryAnnualProvisionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAnnualProvisionsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAnnualProvisionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnualProvisionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnualProvisionsResponse(const QueryAnnualProvisionsResponse& from) : QueryAnnualProvisionsResponse(nullptr, from) {}
  inline QueryAnnualProvisionsResponse(QueryAnnualProvisionsResponse&& from) noexcept
      : QueryAnnualProvisionsResponse(nullptr, std::move(from)) {}
  inline QueryAnnualProvisionsResponse& operator=(const QueryAnnualProvisionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnualProvisionsResponse& operator=(QueryAnnualProvisionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnualProvisionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAnnualProvisionsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryAnnualProvisionsResponse*>(
        &_QueryAnnualProvisionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(QueryAnnualProvisionsResponse& a, QueryAnnualProvisionsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryAnnualProvisionsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnualProvisionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnualProvisionsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryAnnualProvisionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryAnnualProvisionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryAnnualProvisionsResponse& from) { QueryAnnualProvisionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryAnnualProvisionsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.mint.v1beta1.QueryAnnualProvisionsResponse"; }

 protected:
  explicit QueryAnnualProvisionsResponse(::google::protobuf::Arena* arena);
  QueryAnnualProvisionsResponse(::google::protobuf::Arena* arena, const QueryAnnualProvisionsResponse& from);
  QueryAnnualProvisionsResponse(::google::protobuf::Arena* arena, QueryAnnualProvisionsResponse&& from) noexcept
      : QueryAnnualProvisionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnnualProvisionsFieldNumber = 1,
  };
  // bytes annual_provisions = 1 [json_name = "annualProvisions", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
  void clear_annual_provisions() ;
  const std::string& annual_provisions() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_annual_provisions(Arg_&& arg, Args_... args);
  std::string* mutable_annual_provisions();
  PROTOBUF_NODISCARD std::string* release_annual_provisions();
  void set_allocated_annual_provisions(std::string* value);

  private:
  const std::string& _internal_annual_provisions() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_annual_provisions(
      const std::string& value);
  std::string* _internal_mutable_annual_provisions();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.mint.v1beta1.QueryAnnualProvisionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnualProvisionsResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr annual_provisions_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fmint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryAnnualProvisionsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.mint.v1beta1.QueryAnnualProvisionsRequest) */ {
 public:
  inline QueryAnnualProvisionsRequest() : QueryAnnualProvisionsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryAnnualProvisionsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryAnnualProvisionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryAnnualProvisionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryAnnualProvisionsRequest(const QueryAnnualProvisionsRequest& from) : QueryAnnualProvisionsRequest(nullptr, from) {}
  inline QueryAnnualProvisionsRequest(QueryAnnualProvisionsRequest&& from) noexcept
      : QueryAnnualProvisionsRequest(nullptr, std::move(from)) {}
  inline QueryAnnualProvisionsRequest& operator=(const QueryAnnualProvisionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryAnnualProvisionsRequest& operator=(QueryAnnualProvisionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryAnnualProvisionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryAnnualProvisionsRequest* internal_default_instance() {
    return reinterpret_cast<const QueryAnnualProvisionsRequest*>(
        &_QueryAnnualProvisionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(QueryAnnualProvisionsRequest& a, QueryAnnualProvisionsRequest& b) { a.Swap(&b); }
  inline void Swap(QueryAnnualProvisionsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryAnnualProvisionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryAnnualProvisionsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryAnnualProvisionsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryAnnualProvisionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryAnnualProvisionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.mint.v1beta1.QueryAnnualProvisionsRequest"; }

 protected:
  explicit QueryAnnualProvisionsRequest(::google::protobuf::Arena* arena);
  QueryAnnualProvisionsRequest(::google::protobuf::Arena* arena, const QueryAnnualProvisionsRequest& from);
  QueryAnnualProvisionsRequest(::google::protobuf::Arena* arena, QueryAnnualProvisionsRequest&& from) noexcept
      : QueryAnnualProvisionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.mint.v1beta1.QueryAnnualProvisionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryAnnualProvisionsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fmint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryParamsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.mint.v1beta1.QueryParamsResponse) */ {
 public:
  inline QueryParamsResponse() : QueryParamsResponse(nullptr) {}
  ~QueryParamsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryParamsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryParamsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryParamsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryParamsResponse(const QueryParamsResponse& from) : QueryParamsResponse(nullptr, from) {}
  inline QueryParamsResponse(QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(nullptr, std::move(from)) {}
  inline QueryParamsResponse& operator=(const QueryParamsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryParamsResponse& operator=(QueryParamsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryParamsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryParamsResponse* internal_default_instance() {
    return reinterpret_cast<const QueryParamsResponse*>(
        &_QueryParamsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryParamsResponse& a, QueryParamsResponse& b) { a.Swap(&b); }
  inline void Swap(QueryParamsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryParamsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryParamsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryParamsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryParamsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryParamsResponse& from) { QueryParamsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryParamsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.mint.v1beta1.QueryParamsResponse"; }

 protected:
  explicit QueryParamsResponse(::google::protobuf::Arena* arena);
  QueryParamsResponse(::google::protobuf::Arena* arena, const QueryParamsResponse& from);
  QueryParamsResponse(::google::protobuf::Arena* arena, QueryParamsResponse&& from) noexcept
      : QueryParamsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 1,
  };
  // .cosmos.mint.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  bool has_params() const;
  void clear_params() ;
  const ::cosmos::mint::v1beta1::Params& params() const;
  PROTOBUF_NODISCARD ::cosmos::mint::v1beta1::Params* release_params();
  ::cosmos::mint::v1beta1::Params* mutable_params();
  void set_allocated_params(::cosmos::mint::v1beta1::Params* value);
  void unsafe_arena_set_allocated_params(::cosmos::mint::v1beta1::Params* value);
  ::cosmos::mint::v1beta1::Params* unsafe_arena_release_params();

  private:
  const ::cosmos::mint::v1beta1::Params& _internal_params() const;
  ::cosmos::mint::v1beta1::Params* _internal_mutable_params();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.mint.v1beta1.QueryParamsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryParamsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::mint::v1beta1::Params* params_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fmint_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryParamsRequest

// -------------------------------------------------------------------

// QueryParamsResponse

// .cosmos.mint.v1beta1.Params params = 1 [json_name = "params", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline bool QueryParamsResponse::has_params() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.params_ != nullptr);
  return value;
}
inline const ::cosmos::mint::v1beta1::Params& QueryParamsResponse::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::mint::v1beta1::Params* p = _impl_.params_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::mint::v1beta1::Params&>(::cosmos::mint::v1beta1::_Params_default_instance_);
}
inline const ::cosmos::mint::v1beta1::Params& QueryParamsResponse::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.mint.v1beta1.QueryParamsResponse.params)
  return _internal_params();
}
inline void QueryParamsResponse::unsafe_arena_set_allocated_params(::cosmos::mint::v1beta1::Params* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }
  _impl_.params_ = reinterpret_cast<::cosmos::mint::v1beta1::Params*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.mint.v1beta1.QueryParamsResponse.params)
}
inline ::cosmos::mint::v1beta1::Params* QueryParamsResponse::release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::mint::v1beta1::Params* released = _impl_.params_;
  _impl_.params_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::mint::v1beta1::Params* QueryParamsResponse::unsafe_arena_release_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.mint.v1beta1.QueryParamsResponse.params)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::mint::v1beta1::Params* temp = _impl_.params_;
  _impl_.params_ = nullptr;
  return temp;
}
inline ::cosmos::mint::v1beta1::Params* QueryParamsResponse::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.params_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::mint::v1beta1::Params>(GetArena());
    _impl_.params_ = reinterpret_cast<::cosmos::mint::v1beta1::Params*>(p);
  }
  return _impl_.params_;
}
inline ::cosmos::mint::v1beta1::Params* QueryParamsResponse::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::mint::v1beta1::Params* _msg = _internal_mutable_params();
  // @@protoc_insertion_point(field_mutable:cosmos.mint.v1beta1.QueryParamsResponse.params)
  return _msg;
}
inline void QueryParamsResponse::set_allocated_params(::cosmos::mint::v1beta1::Params* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.params_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.params_ = reinterpret_cast<::cosmos::mint::v1beta1::Params*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.mint.v1beta1.QueryParamsResponse.params)
}

// -------------------------------------------------------------------

// QueryInflationRequest

// -------------------------------------------------------------------

// QueryInflationResponse

// bytes inflation = 1 [json_name = "inflation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
inline void QueryInflationResponse::clear_inflation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inflation_.ClearToEmpty();
}
inline const std::string& QueryInflationResponse::inflation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.mint.v1beta1.QueryInflationResponse.inflation)
  return _internal_inflation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryInflationResponse::set_inflation(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inflation_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.mint.v1beta1.QueryInflationResponse.inflation)
}
inline std::string* QueryInflationResponse::mutable_inflation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_inflation();
  // @@protoc_insertion_point(field_mutable:cosmos.mint.v1beta1.QueryInflationResponse.inflation)
  return _s;
}
inline const std::string& QueryInflationResponse::_internal_inflation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inflation_.Get();
}
inline void QueryInflationResponse::_internal_set_inflation(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inflation_.Set(value, GetArena());
}
inline std::string* QueryInflationResponse::_internal_mutable_inflation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.inflation_.Mutable( GetArena());
}
inline std::string* QueryInflationResponse::release_inflation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.mint.v1beta1.QueryInflationResponse.inflation)
  return _impl_.inflation_.Release();
}
inline void QueryInflationResponse::set_allocated_inflation(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inflation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.inflation_.IsDefault()) {
    _impl_.inflation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.mint.v1beta1.QueryInflationResponse.inflation)
}

// -------------------------------------------------------------------

// QueryAnnualProvisionsRequest

// -------------------------------------------------------------------

// QueryAnnualProvisionsResponse

// bytes annual_provisions = 1 [json_name = "annualProvisions", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
inline void QueryAnnualProvisionsResponse::clear_annual_provisions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annual_provisions_.ClearToEmpty();
}
inline const std::string& QueryAnnualProvisionsResponse::annual_provisions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.annual_provisions)
  return _internal_annual_provisions();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryAnnualProvisionsResponse::set_annual_provisions(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annual_provisions_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.annual_provisions)
}
inline std::string* QueryAnnualProvisionsResponse::mutable_annual_provisions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_annual_provisions();
  // @@protoc_insertion_point(field_mutable:cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.annual_provisions)
  return _s;
}
inline const std::string& QueryAnnualProvisionsResponse::_internal_annual_provisions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.annual_provisions_.Get();
}
inline void QueryAnnualProvisionsResponse::_internal_set_annual_provisions(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annual_provisions_.Set(value, GetArena());
}
inline std::string* QueryAnnualProvisionsResponse::_internal_mutable_annual_provisions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.annual_provisions_.Mutable( GetArena());
}
inline std::string* QueryAnnualProvisionsResponse::release_annual_provisions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.annual_provisions)
  return _impl_.annual_provisions_.Release();
}
inline void QueryAnnualProvisionsResponse::set_allocated_annual_provisions(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.annual_provisions_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.annual_provisions_.IsDefault()) {
    _impl_.annual_provisions_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.mint.v1beta1.QueryAnnualProvisionsResponse.annual_provisions)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace mint
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fmint_2fv1beta1_2fquery_2eproto_2epb_2eh
