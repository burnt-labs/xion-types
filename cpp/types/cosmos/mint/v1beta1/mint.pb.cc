// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/mint/v1beta1/mint.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/mint/v1beta1/mint.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace mint {
namespace v1beta1 {

inline constexpr Params::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : mint_denom_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inflation_rate_change_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inflation_max_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        inflation_min_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        goal_bonded_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        blocks_per_year_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Params::Params(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ParamsDefaultTypeInternal() {}
  union {
    Params _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ParamsDefaultTypeInternal _Params_default_instance_;

inline constexpr Minter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : inflation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        annual_provisions_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Minter::Minter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MinterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MinterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MinterDefaultTypeInternal() {}
  union {
    Minter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MinterDefaultTypeInternal _Minter_default_instance_;
}  // namespace v1beta1
}  // namespace mint
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fmint_2fv1beta1_2fmint_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fmint_2fv1beta1_2fmint_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fmint_2fv1beta1_2fmint_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Minter, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Minter, _impl_.inflation_),
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Minter, _impl_.annual_provisions_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Params, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Params, _impl_.mint_denom_),
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Params, _impl_.inflation_rate_change_),
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Params, _impl_.inflation_max_),
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Params, _impl_.inflation_min_),
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Params, _impl_.goal_bonded_),
        PROTOBUF_FIELD_OFFSET(::cosmos::mint::v1beta1::Params, _impl_.blocks_per_year_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::mint::v1beta1::Minter)},
        {10, -1, -1, sizeof(::cosmos::mint::v1beta1::Params)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::mint::v1beta1::_Minter_default_instance_._instance,
    &::cosmos::mint::v1beta1::_Params_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fmint_2fv1beta1_2fmint_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036cosmos/mint/v1beta1/mint.proto\022\023cosmos"
    ".mint.v1beta1\032\024gogoproto/gogo.proto\032\031cos"
    "mos_proto/cosmos.proto\032\021amino/amino.prot"
    "o\"\271\001\n\006Minter\022O\n\tinflation\030\001 \001(\tB1\310\336\037\000\332\336\037"
    "\033cosmossdk.io/math.LegacyDec\322\264-\ncosmos.D"
    "ecR\tinflation\022^\n\021annual_provisions\030\002 \001(\t"
    "B1\310\336\037\000\332\336\037\033cosmossdk.io/math.LegacyDec\322\264-"
    "\ncosmos.DecR\020annualProvisions\"\355\003\n\006Params"
    "\022\035\n\nmint_denom\030\001 \001(\tR\tmintDenom\022j\n\025infla"
    "tion_rate_change\030\002 \001(\tB6\310\336\037\000\332\336\037\033cosmossd"
    "k.io/math.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\023"
    "inflationRateChange\022[\n\rinflation_max\030\003 \001"
    "(\tB6\310\336\037\000\332\336\037\033cosmossdk.io/math.LegacyDec\322"
    "\264-\ncosmos.Dec\250\347\260*\001R\014inflationMax\022[\n\rinfl"
    "ation_min\030\004 \001(\tB6\310\336\037\000\332\336\037\033cosmossdk.io/ma"
    "th.LegacyDec\322\264-\ncosmos.Dec\250\347\260*\001R\014inflati"
    "onMin\022W\n\013goal_bonded\030\005 \001(\tB6\310\336\037\000\332\336\037\033cosm"
    "ossdk.io/math.LegacyDec\322\264-\ncosmos.Dec\250\347\260"
    "*\001R\ngoalBonded\022&\n\017blocks_per_year\030\006 \001(\004R"
    "\rblocksPerYear:\035\212\347\260*\030cosmos-sdk/x/mint/P"
    "aramsB+Z)github.com/cosmos/cosmos-sdk/x/"
    "mint/typesb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto_deps[3] =
    {
        &::descriptor_table_amino_2famino_2eproto,
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto = {
    false,
    false,
    858,
    descriptor_table_protodef_cosmos_2fmint_2fv1beta1_2fmint_2eproto,
    "cosmos/mint/v1beta1/mint.proto",
    &descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto_once,
    descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto_deps,
    3,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fmint_2fv1beta1_2fmint_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fmint_2fv1beta1_2fmint_2eproto,
    file_level_service_descriptors_cosmos_2fmint_2fv1beta1_2fmint_2eproto,
};
namespace cosmos {
namespace mint {
namespace v1beta1 {
// ===================================================================

class Minter::_Internal {
 public:
};

Minter::Minter(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.mint.v1beta1.Minter)
}
inline PROTOBUF_NDEBUG_INLINE Minter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::mint::v1beta1::Minter& from_msg)
      : inflation_(arena, from.inflation_),
        annual_provisions_(arena, from.annual_provisions_),
        _cached_size_{0} {}

Minter::Minter(
    ::google::protobuf::Arena* arena,
    const Minter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Minter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.mint.v1beta1.Minter)
}
inline PROTOBUF_NDEBUG_INLINE Minter::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : inflation_(arena),
        annual_provisions_(arena),
        _cached_size_{0} {}

inline void Minter::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Minter::~Minter() {
  // @@protoc_insertion_point(destructor:cosmos.mint.v1beta1.Minter)
  SharedDtor(*this);
}
inline void Minter::SharedDtor(MessageLite& self) {
  Minter& this_ = static_cast<Minter&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.inflation_.Destroy();
  this_._impl_.annual_provisions_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Minter::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Minter(arena);
}
constexpr auto Minter::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Minter),
                                            alignof(Minter));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Minter::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Minter_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Minter::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Minter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Minter::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Minter>(), &Minter::ByteSizeLong,
            &Minter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Minter, _impl_._cached_size_),
        false,
    },
    &Minter::kDescriptorMethods,
    &descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Minter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> Minter::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::mint::v1beta1::Minter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string annual_provisions = 2 [json_name = "annualProvisions", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Minter, _impl_.annual_provisions_)}},
    // string inflation = 1 [json_name = "inflation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Minter, _impl_.inflation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string inflation = 1 [json_name = "inflation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Minter, _impl_.inflation_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string annual_provisions = 2 [json_name = "annualProvisions", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
    {PROTOBUF_FIELD_OFFSET(Minter, _impl_.annual_provisions_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\11\21\0\0\0\0\0"
    "cosmos.mint.v1beta1.Minter"
    "inflation"
    "annual_provisions"
  }},
};

PROTOBUF_NOINLINE void Minter::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.mint.v1beta1.Minter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.inflation_.ClearToEmpty();
  _impl_.annual_provisions_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Minter::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Minter& this_ = static_cast<const Minter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Minter::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Minter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.mint.v1beta1.Minter)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string inflation = 1 [json_name = "inflation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_inflation().empty()) {
            const std::string& _s = this_._internal_inflation();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.mint.v1beta1.Minter.inflation");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string annual_provisions = 2 [json_name = "annualProvisions", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
          if (!this_._internal_annual_provisions().empty()) {
            const std::string& _s = this_._internal_annual_provisions();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.mint.v1beta1.Minter.annual_provisions");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.mint.v1beta1.Minter)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Minter::ByteSizeLong(const MessageLite& base) {
          const Minter& this_ = static_cast<const Minter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Minter::ByteSizeLong() const {
          const Minter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.mint.v1beta1.Minter)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string inflation = 1 [json_name = "inflation", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_inflation().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_inflation());
            }
            // string annual_provisions = 2 [json_name = "annualProvisions", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec"];
            if (!this_._internal_annual_provisions().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_annual_provisions());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Minter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Minter*>(&to_msg);
  auto& from = static_cast<const Minter&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.mint.v1beta1.Minter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_inflation().empty()) {
    _this->_internal_set_inflation(from._internal_inflation());
  }
  if (!from._internal_annual_provisions().empty()) {
    _this->_internal_set_annual_provisions(from._internal_annual_provisions());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Minter::CopyFrom(const Minter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.mint.v1beta1.Minter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Minter::InternalSwap(Minter* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.inflation_, &other->_impl_.inflation_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.annual_provisions_, &other->_impl_.annual_provisions_, arena);
}

::google::protobuf::Metadata Minter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Params::_Internal {
 public:
};

Params::Params(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.mint.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::mint::v1beta1::Params& from_msg)
      : mint_denom_(arena, from.mint_denom_),
        inflation_rate_change_(arena, from.inflation_rate_change_),
        inflation_max_(arena, from.inflation_max_),
        inflation_min_(arena, from.inflation_min_),
        goal_bonded_(arena, from.goal_bonded_),
        _cached_size_{0} {}

Params::Params(
    ::google::protobuf::Arena* arena,
    const Params& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Params* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.blocks_per_year_ = from._impl_.blocks_per_year_;

  // @@protoc_insertion_point(copy_constructor:cosmos.mint.v1beta1.Params)
}
inline PROTOBUF_NDEBUG_INLINE Params::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : mint_denom_(arena),
        inflation_rate_change_(arena),
        inflation_max_(arena),
        inflation_min_(arena),
        goal_bonded_(arena),
        _cached_size_{0} {}

inline void Params::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.blocks_per_year_ = {};
}
Params::~Params() {
  // @@protoc_insertion_point(destructor:cosmos.mint.v1beta1.Params)
  SharedDtor(*this);
}
inline void Params::SharedDtor(MessageLite& self) {
  Params& this_ = static_cast<Params&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.mint_denom_.Destroy();
  this_._impl_.inflation_rate_change_.Destroy();
  this_._impl_.inflation_max_.Destroy();
  this_._impl_.inflation_min_.Destroy();
  this_._impl_.goal_bonded_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Params::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Params(arena);
}
constexpr auto Params::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Params),
                                            alignof(Params));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Params::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Params_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Params::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Params>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Params::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Params>(), &Params::ByteSizeLong,
            &Params::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Params, _impl_._cached_size_),
        false,
    },
    &Params::kDescriptorMethods,
    &descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Params::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 103, 2> Params::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::mint::v1beta1::Params>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string mint_denom = 1 [json_name = "mintDenom"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.mint_denom_)}},
    // string inflation_rate_change = 2 [json_name = "inflationRateChange", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.inflation_rate_change_)}},
    // string inflation_max = 3 [json_name = "inflationMax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.inflation_max_)}},
    // string inflation_min = 4 [json_name = "inflationMin", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.inflation_min_)}},
    // string goal_bonded = 5 [json_name = "goalBonded", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.goal_bonded_)}},
    // uint64 blocks_per_year = 6 [json_name = "blocksPerYear"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Params, _impl_.blocks_per_year_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Params, _impl_.blocks_per_year_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string mint_denom = 1 [json_name = "mintDenom"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.mint_denom_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string inflation_rate_change = 2 [json_name = "inflationRateChange", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.inflation_rate_change_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string inflation_max = 3 [json_name = "inflationMax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.inflation_max_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string inflation_min = 4 [json_name = "inflationMin", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.inflation_min_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string goal_bonded = 5 [json_name = "goalBonded", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.goal_bonded_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 blocks_per_year = 6 [json_name = "blocksPerYear"];
    {PROTOBUF_FIELD_OFFSET(Params, _impl_.blocks_per_year_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\32\12\25\15\15\13\0\0"
    "cosmos.mint.v1beta1.Params"
    "mint_denom"
    "inflation_rate_change"
    "inflation_max"
    "inflation_min"
    "goal_bonded"
  }},
};

PROTOBUF_NOINLINE void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.mint.v1beta1.Params)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.mint_denom_.ClearToEmpty();
  _impl_.inflation_rate_change_.ClearToEmpty();
  _impl_.inflation_max_.ClearToEmpty();
  _impl_.inflation_min_.ClearToEmpty();
  _impl_.goal_bonded_.ClearToEmpty();
  _impl_.blocks_per_year_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Params::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Params::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.mint.v1beta1.Params)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string mint_denom = 1 [json_name = "mintDenom"];
          if (!this_._internal_mint_denom().empty()) {
            const std::string& _s = this_._internal_mint_denom();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.mint.v1beta1.Params.mint_denom");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string inflation_rate_change = 2 [json_name = "inflationRateChange", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_inflation_rate_change().empty()) {
            const std::string& _s = this_._internal_inflation_rate_change();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.mint.v1beta1.Params.inflation_rate_change");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string inflation_max = 3 [json_name = "inflationMax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_inflation_max().empty()) {
            const std::string& _s = this_._internal_inflation_max();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.mint.v1beta1.Params.inflation_max");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string inflation_min = 4 [json_name = "inflationMin", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_inflation_min().empty()) {
            const std::string& _s = this_._internal_inflation_min();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.mint.v1beta1.Params.inflation_min");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string goal_bonded = 5 [json_name = "goalBonded", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
          if (!this_._internal_goal_bonded().empty()) {
            const std::string& _s = this_._internal_goal_bonded();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.mint.v1beta1.Params.goal_bonded");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // uint64 blocks_per_year = 6 [json_name = "blocksPerYear"];
          if (this_._internal_blocks_per_year() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_blocks_per_year(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.mint.v1beta1.Params)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Params::ByteSizeLong(const MessageLite& base) {
          const Params& this_ = static_cast<const Params&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Params::ByteSizeLong() const {
          const Params& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.mint.v1beta1.Params)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string mint_denom = 1 [json_name = "mintDenom"];
            if (!this_._internal_mint_denom().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_mint_denom());
            }
            // string inflation_rate_change = 2 [json_name = "inflationRateChange", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_inflation_rate_change().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_inflation_rate_change());
            }
            // string inflation_max = 3 [json_name = "inflationMax", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_inflation_max().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_inflation_max());
            }
            // string inflation_min = 4 [json_name = "inflationMin", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_inflation_min().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_inflation_min());
            }
            // string goal_bonded = 5 [json_name = "goalBonded", (.gogoproto.nullable) = false, (.gogoproto.customtype) = "cosmossdk.io/math.LegacyDec", (.cosmos_proto.scalar) = "cosmos.Dec", (.amino.dont_omitempty) = true];
            if (!this_._internal_goal_bonded().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_goal_bonded());
            }
            // uint64 blocks_per_year = 6 [json_name = "blocksPerYear"];
            if (this_._internal_blocks_per_year() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_blocks_per_year());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Params::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Params*>(&to_msg);
  auto& from = static_cast<const Params&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.mint.v1beta1.Params)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_mint_denom().empty()) {
    _this->_internal_set_mint_denom(from._internal_mint_denom());
  }
  if (!from._internal_inflation_rate_change().empty()) {
    _this->_internal_set_inflation_rate_change(from._internal_inflation_rate_change());
  }
  if (!from._internal_inflation_max().empty()) {
    _this->_internal_set_inflation_max(from._internal_inflation_max());
  }
  if (!from._internal_inflation_min().empty()) {
    _this->_internal_set_inflation_min(from._internal_inflation_min());
  }
  if (!from._internal_goal_bonded().empty()) {
    _this->_internal_set_goal_bonded(from._internal_goal_bonded());
  }
  if (from._internal_blocks_per_year() != 0) {
    _this->_impl_.blocks_per_year_ = from._impl_.blocks_per_year_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.mint.v1beta1.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Params::InternalSwap(Params* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mint_denom_, &other->_impl_.mint_denom_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.inflation_rate_change_, &other->_impl_.inflation_rate_change_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.inflation_max_, &other->_impl_.inflation_max_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.inflation_min_, &other->_impl_.inflation_min_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.goal_bonded_, &other->_impl_.goal_bonded_, arena);
        swap(_impl_.blocks_per_year_, other->_impl_.blocks_per_year_);
}

::google::protobuf::Metadata Params::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace mint
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fmint_2fv1beta1_2fmint_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
