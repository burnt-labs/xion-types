// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/abci/v1beta1/abci.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/base/abci/v1beta1/abci.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace base {
namespace abci {
namespace v1beta1 {

inline constexpr MsgData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MsgData::MsgData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MsgDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MsgDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MsgDataDefaultTypeInternal() {}
  union {
    MsgData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MsgDataDefaultTypeInternal _MsgData_default_instance_;

inline constexpr GasInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : gas_wanted_{::uint64_t{0u}},
        gas_used_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GasInfo::GasInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GasInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GasInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GasInfoDefaultTypeInternal() {}
  union {
    GasInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GasInfoDefaultTypeInternal _GasInfo_default_instance_;

inline constexpr Attribute::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Attribute::Attribute(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AttributeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AttributeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AttributeDefaultTypeInternal() {}
  union {
    Attribute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AttributeDefaultTypeInternal _Attribute_default_instance_;

inline constexpr TxMsgData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        msg_responses_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TxMsgData::TxMsgData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TxMsgDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxMsgDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxMsgDataDefaultTypeInternal() {}
  union {
    TxMsgData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxMsgDataDefaultTypeInternal _TxMsgData_default_instance_;

inline constexpr StringEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : attributes_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StringEvent::StringEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StringEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringEventDefaultTypeInternal() {}
  union {
    StringEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringEventDefaultTypeInternal _StringEvent_default_instance_;

inline constexpr Result::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : events_{},
        msg_responses_{},
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        log_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Result::Result(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultDefaultTypeInternal() {}
  union {
    Result _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultDefaultTypeInternal _Result_default_instance_;

inline constexpr ABCIMessageLog::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : events_{},
        log_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        msg_index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ABCIMessageLog::ABCIMessageLog(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ABCIMessageLogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ABCIMessageLogDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ABCIMessageLogDefaultTypeInternal() {}
  union {
    ABCIMessageLog _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ABCIMessageLogDefaultTypeInternal _ABCIMessageLog_default_instance_;

inline constexpr TxResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        logs_{},
        events_{},
        txhash_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        codespace_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        raw_log_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tx_{nullptr},
        height_{::int64_t{0}},
        gas_wanted_{::int64_t{0}},
        gas_used_{::int64_t{0}},
        code_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR TxResponse::TxResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TxResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxResponseDefaultTypeInternal() {}
  union {
    TxResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxResponseDefaultTypeInternal _TxResponse_default_instance_;

inline constexpr SimulationResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gas_info_{nullptr},
        result_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SimulationResponse::SimulationResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SimulationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SimulationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SimulationResponseDefaultTypeInternal() {}
  union {
    SimulationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SimulationResponseDefaultTypeInternal _SimulationResponse_default_instance_;

inline constexpr SearchTxsResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : txs_{},
        total_count_{::uint64_t{0u}},
        count_{::uint64_t{0u}},
        page_number_{::uint64_t{0u}},
        page_total_{::uint64_t{0u}},
        limit_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchTxsResult::SearchTxsResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchTxsResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchTxsResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchTxsResultDefaultTypeInternal() {}
  union {
    SearchTxsResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchTxsResultDefaultTypeInternal _SearchTxsResult_default_instance_;

inline constexpr SearchBlocksResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : blocks_{},
        total_count_{::int64_t{0}},
        count_{::int64_t{0}},
        page_number_{::int64_t{0}},
        page_total_{::int64_t{0}},
        limit_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SearchBlocksResult::SearchBlocksResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SearchBlocksResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchBlocksResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchBlocksResultDefaultTypeInternal() {}
  union {
    SearchBlocksResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchBlocksResultDefaultTypeInternal _SearchBlocksResult_default_instance_;
}  // namespace v1beta1
}  // namespace abci
}  // namespace base
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.txhash_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.codespace_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.raw_log_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.logs_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.gas_wanted_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.gas_used_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.tx_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxResponse, _impl_.events_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::ABCIMessageLog, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::ABCIMessageLog, _impl_.msg_index_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::ABCIMessageLog, _impl_.log_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::ABCIMessageLog, _impl_.events_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::StringEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::StringEvent, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::StringEvent, _impl_.attributes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Attribute, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Attribute, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Attribute, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::GasInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::GasInfo, _impl_.gas_wanted_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::GasInfo, _impl_.gas_used_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Result, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Result, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Result, _impl_.log_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Result, _impl_.events_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::Result, _impl_.msg_responses_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SimulationResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SimulationResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SimulationResponse, _impl_.gas_info_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SimulationResponse, _impl_.result_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::MsgData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::MsgData, _impl_.msg_type_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::MsgData, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxMsgData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxMsgData, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::TxMsgData, _impl_.msg_responses_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchTxsResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchTxsResult, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchTxsResult, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchTxsResult, _impl_.page_number_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchTxsResult, _impl_.page_total_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchTxsResult, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchTxsResult, _impl_.txs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchBlocksResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchBlocksResult, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchBlocksResult, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchBlocksResult, _impl_.page_number_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchBlocksResult, _impl_.page_total_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchBlocksResult, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::cosmos::base::abci::v1beta1::SearchBlocksResult, _impl_.blocks_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 21, -1, sizeof(::cosmos::base::abci::v1beta1::TxResponse)},
        {34, -1, -1, sizeof(::cosmos::base::abci::v1beta1::ABCIMessageLog)},
        {45, -1, -1, sizeof(::cosmos::base::abci::v1beta1::StringEvent)},
        {55, -1, -1, sizeof(::cosmos::base::abci::v1beta1::Attribute)},
        {65, -1, -1, sizeof(::cosmos::base::abci::v1beta1::GasInfo)},
        {75, -1, -1, sizeof(::cosmos::base::abci::v1beta1::Result)},
        {87, 97, -1, sizeof(::cosmos::base::abci::v1beta1::SimulationResponse)},
        {99, -1, -1, sizeof(::cosmos::base::abci::v1beta1::MsgData)},
        {109, -1, -1, sizeof(::cosmos::base::abci::v1beta1::TxMsgData)},
        {119, -1, -1, sizeof(::cosmos::base::abci::v1beta1::SearchTxsResult)},
        {133, -1, -1, sizeof(::cosmos::base::abci::v1beta1::SearchBlocksResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::base::abci::v1beta1::_TxResponse_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_ABCIMessageLog_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_StringEvent_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_Attribute_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_GasInfo_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_Result_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_SimulationResponse_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_MsgData_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_TxMsgData_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_SearchTxsResult_default_instance_._instance,
    &::cosmos::base::abci::v1beta1::_SearchBlocksResult_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n#cosmos/base/abci/v1beta1/abci.proto\022\030c"
    "osmos.base.abci.v1beta1\032\024gogoproto/gogo."
    "proto\032\033tendermint/abci/types.proto\032\034tend"
    "ermint/types/block.proto\032\031google/protobu"
    "f/any.proto\032\031cosmos_proto/cosmos.proto\"\337"
    "\003\n\nTxResponse\022\026\n\006height\030\001 \001(\003R\006height\022\"\n"
    "\006txhash\030\002 \001(\tB\n\342\336\037\006TxHashR\006txhash\022\034\n\tcod"
    "espace\030\003 \001(\tR\tcodespace\022\022\n\004code\030\004 \001(\rR\004c"
    "ode\022\022\n\004data\030\005 \001(\tR\004data\022\027\n\007raw_log\030\006 \001(\t"
    "R\006rawLog\022U\n\004logs\030\007 \003(\0132(.cosmos.base.abc"
    "i.v1beta1.ABCIMessageLogB\027\310\336\037\000\252\337\037\017ABCIMe"
    "ssageLogsR\004logs\022\022\n\004info\030\010 \001(\tR\004info\022\035\n\ng"
    "as_wanted\030\t \001(\003R\tgasWanted\022\031\n\010gas_used\030\n"
    " \001(\003R\007gasUsed\022$\n\002tx\030\013 \001(\0132\024.google.proto"
    "buf.AnyR\002tx\022\034\n\ttimestamp\030\014 \001(\tR\ttimestam"
    "p\022G\n\006events\030\r \003(\0132\026.tendermint.abci.Even"
    "tB\027\310\336\037\000\332\264-\017cosmos-sdk 0.45R\006events:\004\210\240\037\000"
    "\"\251\001\n\016ABCIMessageLog\022*\n\tmsg_index\030\001 \001(\rB\r"
    "\352\336\037\tmsg_indexR\010msgIndex\022\020\n\003log\030\002 \001(\tR\003lo"
    "g\022S\n\006events\030\003 \003(\0132%.cosmos.base.abci.v1b"
    "eta1.StringEventB\024\310\336\037\000\252\337\037\014StringEventsR\006"
    "events:\004\200\334 \001\"r\n\013StringEvent\022\022\n\004type\030\001 \001("
    "\tR\004type\022I\n\nattributes\030\002 \003(\0132#.cosmos.bas"
    "e.abci.v1beta1.AttributeB\004\310\336\037\000R\nattribut"
    "es:\004\200\334 \001\"3\n\tAttribute\022\020\n\003key\030\001 \001(\tR\003key\022"
    "\024\n\005value\030\002 \001(\tR\005value\"C\n\007GasInfo\022\035\n\ngas_"
    "wanted\030\001 \001(\004R\tgasWanted\022\031\n\010gas_used\030\002 \001("
    "\004R\007gasUsed\"\276\001\n\006Result\022\026\n\004data\030\001 \001(\014B\002\030\001R"
    "\004data\022\020\n\003log\030\002 \001(\tR\003log\0224\n\006events\030\003 \003(\0132"
    "\026.tendermint.abci.EventB\004\310\336\037\000R\006events\022N\n"
    "\rmsg_responses\030\004 \003(\0132\024.google.protobuf.A"
    "nyB\023\332\264-\017cosmos-sdk 0.46R\014msgResponses:\004\210"
    "\240\037\000\"\226\001\n\022SimulationResponse\022F\n\010gas_info\030\001"
    " \001(\0132!.cosmos.base.abci.v1beta1.GasInfoB"
    "\010\310\336\037\000\320\336\037\001R\007gasInfo\0228\n\006result\030\002 \001(\0132 .cos"
    "mos.base.abci.v1beta1.ResultR\006result\"@\n\007"
    "MsgData\022\031\n\010msg_type\030\001 \001(\tR\007msgType\022\022\n\004da"
    "ta\030\002 \001(\014R\004data:\006\030\001\200\334 \001\"\234\001\n\tTxMsgData\0229\n\004"
    "data\030\001 \003(\0132!.cosmos.base.abci.v1beta1.Ms"
    "gDataB\002\030\001R\004data\022N\n\rmsg_responses\030\002 \003(\0132\024"
    ".google.protobuf.AnyB\023\332\264-\017cosmos-sdk 0.4"
    "6R\014msgResponses:\004\200\334 \001\"\334\001\n\017SearchTxsResul"
    "t\022\037\n\013total_count\030\001 \001(\004R\ntotalCount\022\024\n\005co"
    "unt\030\002 \001(\004R\005count\022\037\n\013page_number\030\003 \001(\004R\np"
    "ageNumber\022\035\n\npage_total\030\004 \001(\004R\tpageTotal"
    "\022\024\n\005limit\030\005 \001(\004R\005limit\0226\n\003txs\030\006 \003(\0132$.co"
    "smos.base.abci.v1beta1.TxResponseR\003txs:\004"
    "\200\334 \001\"\330\001\n\022SearchBlocksResult\022\037\n\013total_cou"
    "nt\030\001 \001(\003R\ntotalCount\022\024\n\005count\030\002 \001(\003R\005cou"
    "nt\022\037\n\013page_number\030\003 \001(\003R\npageNumber\022\035\n\np"
    "age_total\030\004 \001(\003R\tpageTotal\022\024\n\005limit\030\005 \001("
    "\003R\005limit\022/\n\006blocks\030\006 \003(\0132\027.tendermint.ty"
    "pes.BlockR\006blocks:\004\200\334 \001B(Z\"github.com/co"
    "smos/cosmos-sdk/types\330\341\036\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto_deps[5] =
    {
        &::descriptor_table_cosmos_5fproto_2fcosmos_2eproto,
        &::descriptor_table_gogoproto_2fgogo_2eproto,
        &::descriptor_table_google_2fprotobuf_2fany_2eproto,
        &::descriptor_table_tendermint_2fabci_2ftypes_2eproto,
        &::descriptor_table_tendermint_2ftypes_2fblock_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto = {
    false,
    false,
    2153,
    descriptor_table_protodef_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    "cosmos/base/abci/v1beta1/abci.proto",
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto_once,
    descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto_deps,
    5,
    11,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    file_level_service_descriptors_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
};
namespace cosmos {
namespace base {
namespace abci {
namespace v1beta1 {
// ===================================================================

class TxResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TxResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TxResponse, _impl_._has_bits_);
};

void TxResponse::clear_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ != nullptr) _impl_.tx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TxResponse::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
TxResponse::TxResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.TxResponse)
}
inline PROTOBUF_NDEBUG_INLINE TxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::TxResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        logs_{visibility, arena, from.logs_},
        events_{visibility, arena, from.events_},
        txhash_(arena, from.txhash_),
        codespace_(arena, from.codespace_),
        data_(arena, from.data_),
        raw_log_(arena, from.raw_log_),
        info_(arena, from.info_),
        timestamp_(arena, from.timestamp_) {}

TxResponse::TxResponse(
    ::google::protobuf::Arena* arena,
    const TxResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TxResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.tx_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(
                              arena, *from._impl_.tx_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, height_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, height_),
           offsetof(Impl_, code_) -
               offsetof(Impl_, height_) +
               sizeof(Impl_::code_));

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.TxResponse)
}
inline PROTOBUF_NDEBUG_INLINE TxResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        logs_{visibility, arena},
        events_{visibility, arena},
        txhash_(arena),
        codespace_(arena),
        data_(arena),
        raw_log_(arena),
        info_(arena),
        timestamp_(arena) {}

inline void TxResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tx_),
           0,
           offsetof(Impl_, code_) -
               offsetof(Impl_, tx_) +
               sizeof(Impl_::code_));
}
TxResponse::~TxResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.TxResponse)
  SharedDtor(*this);
}
inline void TxResponse::SharedDtor(MessageLite& self) {
  TxResponse& this_ = static_cast<TxResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.txhash_.Destroy();
  this_._impl_.codespace_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.raw_log_.Destroy();
  this_._impl_.info_.Destroy();
  this_._impl_.timestamp_.Destroy();
  delete this_._impl_.tx_;
  this_._impl_.~Impl_();
}

inline void* TxResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TxResponse(arena);
}
constexpr auto TxResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.logs_) +
          decltype(TxResponse::_impl_.logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.events_) +
          decltype(TxResponse::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TxResponse), alignof(TxResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TxResponse::PlacementNew_,
                                 sizeof(TxResponse),
                                 alignof(TxResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TxResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TxResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TxResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TxResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TxResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TxResponse>(), &TxResponse::ByteSizeLong,
            &TxResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TxResponse, _impl_._cached_size_),
        false,
    },
    &TxResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TxResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 3, 91, 2> TxResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TxResponse, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::TxResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 height = 1 [json_name = "height"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TxResponse, _impl_.height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.height_)}},
    // string txhash = 2 [json_name = "txhash", (.gogoproto.customname) = "TxHash"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.txhash_)}},
    // string codespace = 3 [json_name = "codespace"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.codespace_)}},
    // uint32 code = 4 [json_name = "code"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TxResponse, _impl_.code_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.code_)}},
    // string data = 5 [json_name = "data"];
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.data_)}},
    // string raw_log = 6 [json_name = "rawLog"];
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.raw_log_)}},
    // repeated .cosmos.base.abci.v1beta1.ABCIMessageLog logs = 7 [json_name = "logs", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "ABCIMessageLogs"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.logs_)}},
    // string info = 8 [json_name = "info"];
    {::_pbi::TcParser::FastUS1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.info_)}},
    // int64 gas_wanted = 9 [json_name = "gasWanted"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TxResponse, _impl_.gas_wanted_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.gas_wanted_)}},
    // int64 gas_used = 10 [json_name = "gasUsed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TxResponse, _impl_.gas_used_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.gas_used_)}},
    // .google.protobuf.Any tx = 11 [json_name = "tx"];
    {::_pbi::TcParser::FastMtS1,
     {90, 0, 1, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.tx_)}},
    // string timestamp = 12 [json_name = "timestamp"];
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.timestamp_)}},
    // repeated .tendermint.abci.Event events = 13 [json_name = "events", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.45"];
    {::_pbi::TcParser::FastMtR1,
     {106, 63, 2, PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.events_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 height = 1 [json_name = "height"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string txhash = 2 [json_name = "txhash", (.gogoproto.customname) = "TxHash"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.txhash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string codespace = 3 [json_name = "codespace"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.codespace_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 code = 4 [json_name = "code"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string data = 5 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string raw_log = 6 [json_name = "rawLog"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.raw_log_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.abci.v1beta1.ABCIMessageLog logs = 7 [json_name = "logs", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "ABCIMessageLogs"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.logs_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string info = 8 [json_name = "info"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.info_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 gas_wanted = 9 [json_name = "gasWanted"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.gas_wanted_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 gas_used = 10 [json_name = "gasUsed"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.gas_used_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Any tx = 11 [json_name = "tx"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.tx_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string timestamp = 12 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tendermint.abci.Event events = 13 [json_name = "events", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.45"];
    {PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.events_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::ABCIMessageLog>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::Event>()},
  }}, {{
    "\43\0\6\11\0\4\7\0\4\0\0\0\11\0\0\0"
    "cosmos.base.abci.v1beta1.TxResponse"
    "txhash"
    "codespace"
    "data"
    "raw_log"
    "info"
    "timestamp"
  }},
};

PROTOBUF_NOINLINE void TxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.TxResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.logs_.Clear();
  _impl_.events_.Clear();
  _impl_.txhash_.ClearToEmpty();
  _impl_.codespace_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _impl_.raw_log_.ClearToEmpty();
  _impl_.info_.ClearToEmpty();
  _impl_.timestamp_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.tx_ != nullptr);
    _impl_.tx_->Clear();
  }
  ::memset(&_impl_.height_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.code_) -
      reinterpret_cast<char*>(&_impl_.height_)) + sizeof(_impl_.code_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TxResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TxResponse& this_ = static_cast<const TxResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TxResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TxResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.TxResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 height = 1 [json_name = "height"];
          if (this_._internal_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_height(), target);
          }

          // string txhash = 2 [json_name = "txhash", (.gogoproto.customname) = "TxHash"];
          if (!this_._internal_txhash().empty()) {
            const std::string& _s = this_._internal_txhash();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.TxResponse.txhash");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string codespace = 3 [json_name = "codespace"];
          if (!this_._internal_codespace().empty()) {
            const std::string& _s = this_._internal_codespace();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.TxResponse.codespace");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 code = 4 [json_name = "code"];
          if (this_._internal_code() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_code(), target);
          }

          // string data = 5 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.TxResponse.data");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string raw_log = 6 [json_name = "rawLog"];
          if (!this_._internal_raw_log().empty()) {
            const std::string& _s = this_._internal_raw_log();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.TxResponse.raw_log");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // repeated .cosmos.base.abci.v1beta1.ABCIMessageLog logs = 7 [json_name = "logs", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "ABCIMessageLogs"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    7, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string info = 8 [json_name = "info"];
          if (!this_._internal_info().empty()) {
            const std::string& _s = this_._internal_info();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.TxResponse.info");
            target = stream->WriteStringMaybeAliased(8, _s, target);
          }

          // int64 gas_wanted = 9 [json_name = "gasWanted"];
          if (this_._internal_gas_wanted() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<9>(
                    stream, this_._internal_gas_wanted(), target);
          }

          // int64 gas_used = 10 [json_name = "gasUsed"];
          if (this_._internal_gas_used() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<10>(
                    stream, this_._internal_gas_used(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Any tx = 11 [json_name = "tx"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                11, *this_._impl_.tx_, this_._impl_.tx_->GetCachedSize(), target,
                stream);
          }

          // string timestamp = 12 [json_name = "timestamp"];
          if (!this_._internal_timestamp().empty()) {
            const std::string& _s = this_._internal_timestamp();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.TxResponse.timestamp");
            target = stream->WriteStringMaybeAliased(12, _s, target);
          }

          // repeated .tendermint.abci.Event events = 13 [json_name = "events", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.45"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    13, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.TxResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TxResponse::ByteSizeLong(const MessageLite& base) {
          const TxResponse& this_ = static_cast<const TxResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TxResponse::ByteSizeLong() const {
          const TxResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.TxResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.abci.v1beta1.ABCIMessageLog logs = 7 [json_name = "logs", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "ABCIMessageLogs"];
            {
              total_size += 1UL * this_._internal_logs_size();
              for (const auto& msg : this_._internal_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .tendermint.abci.Event events = 13 [json_name = "events", (.gogoproto.nullable) = false, (.cosmos_proto.field_added_in) = "cosmos-sdk 0.45"];
            {
              total_size += 1UL * this_._internal_events_size();
              for (const auto& msg : this_._internal_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string txhash = 2 [json_name = "txhash", (.gogoproto.customname) = "TxHash"];
            if (!this_._internal_txhash().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_txhash());
            }
            // string codespace = 3 [json_name = "codespace"];
            if (!this_._internal_codespace().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_codespace());
            }
            // string data = 5 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_data());
            }
            // string raw_log = 6 [json_name = "rawLog"];
            if (!this_._internal_raw_log().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_raw_log());
            }
            // string info = 8 [json_name = "info"];
            if (!this_._internal_info().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_info());
            }
            // string timestamp = 12 [json_name = "timestamp"];
            if (!this_._internal_timestamp().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_timestamp());
            }
          }
           {
            // .google.protobuf.Any tx = 11 [json_name = "tx"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.tx_);
            }
          }
           {
            // int64 height = 1 [json_name = "height"];
            if (this_._internal_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_height());
            }
            // int64 gas_wanted = 9 [json_name = "gasWanted"];
            if (this_._internal_gas_wanted() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_gas_wanted());
            }
            // int64 gas_used = 10 [json_name = "gasUsed"];
            if (this_._internal_gas_used() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_gas_used());
            }
            // uint32 code = 4 [json_name = "code"];
            if (this_._internal_code() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_code());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TxResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TxResponse*>(&to_msg);
  auto& from = static_cast<const TxResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.TxResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_logs()->MergeFrom(
      from._internal_logs());
  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  if (!from._internal_txhash().empty()) {
    _this->_internal_set_txhash(from._internal_txhash());
  }
  if (!from._internal_codespace().empty()) {
    _this->_internal_set_codespace(from._internal_codespace());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_raw_log().empty()) {
    _this->_internal_set_raw_log(from._internal_raw_log());
  }
  if (!from._internal_info().empty()) {
    _this->_internal_set_info(from._internal_info());
  }
  if (!from._internal_timestamp().empty()) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.tx_ != nullptr);
    if (_this->_impl_.tx_ == nullptr) {
      _this->_impl_.tx_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Any>(arena, *from._impl_.tx_);
    } else {
      _this->_impl_.tx_->MergeFrom(*from._impl_.tx_);
    }
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_gas_wanted() != 0) {
    _this->_impl_.gas_wanted_ = from._impl_.gas_wanted_;
  }
  if (from._internal_gas_used() != 0) {
    _this->_impl_.gas_used_ = from._impl_.gas_used_;
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxResponse::CopyFrom(const TxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.TxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TxResponse::InternalSwap(TxResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.logs_.InternalSwap(&other->_impl_.logs_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.txhash_, &other->_impl_.txhash_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.codespace_, &other->_impl_.codespace_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.raw_log_, &other->_impl_.raw_log_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.info_, &other->_impl_.info_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.timestamp_, &other->_impl_.timestamp_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.code_)
      + sizeof(TxResponse::_impl_.code_)
      - PROTOBUF_FIELD_OFFSET(TxResponse, _impl_.tx_)>(
          reinterpret_cast<char*>(&_impl_.tx_),
          reinterpret_cast<char*>(&other->_impl_.tx_));
}

::google::protobuf::Metadata TxResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ABCIMessageLog::_Internal {
 public:
};

ABCIMessageLog::ABCIMessageLog(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.ABCIMessageLog)
}
inline PROTOBUF_NDEBUG_INLINE ABCIMessageLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::ABCIMessageLog& from_msg)
      : events_{visibility, arena, from.events_},
        log_(arena, from.log_),
        _cached_size_{0} {}

ABCIMessageLog::ABCIMessageLog(
    ::google::protobuf::Arena* arena,
    const ABCIMessageLog& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ABCIMessageLog* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.msg_index_ = from._impl_.msg_index_;

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.ABCIMessageLog)
}
inline PROTOBUF_NDEBUG_INLINE ABCIMessageLog::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : events_{visibility, arena},
        log_(arena),
        _cached_size_{0} {}

inline void ABCIMessageLog::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.msg_index_ = {};
}
ABCIMessageLog::~ABCIMessageLog() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.ABCIMessageLog)
  SharedDtor(*this);
}
inline void ABCIMessageLog::SharedDtor(MessageLite& self) {
  ABCIMessageLog& this_ = static_cast<ABCIMessageLog&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.log_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ABCIMessageLog::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ABCIMessageLog(arena);
}
constexpr auto ABCIMessageLog::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_.events_) +
          decltype(ABCIMessageLog::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ABCIMessageLog), alignof(ABCIMessageLog), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ABCIMessageLog::PlacementNew_,
                                 sizeof(ABCIMessageLog),
                                 alignof(ABCIMessageLog));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ABCIMessageLog::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ABCIMessageLog_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ABCIMessageLog::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ABCIMessageLog>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ABCIMessageLog::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ABCIMessageLog>(), &ABCIMessageLog::ByteSizeLong,
            &ABCIMessageLog::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_._cached_size_),
        false,
    },
    &ABCIMessageLog::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ABCIMessageLog::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 51, 2> ABCIMessageLog::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::ABCIMessageLog>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 msg_index = 1 [json_name = "msgIndex", (.gogoproto.jsontag) = "msg_index"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ABCIMessageLog, _impl_.msg_index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_.msg_index_)}},
    // string log = 2 [json_name = "log"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_.log_)}},
    // repeated .cosmos.base.abci.v1beta1.StringEvent events = 3 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "StringEvents"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_.events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 msg_index = 1 [json_name = "msgIndex", (.gogoproto.jsontag) = "msg_index"];
    {PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_.msg_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string log = 2 [json_name = "log"];
    {PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_.log_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.abci.v1beta1.StringEvent events = 3 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "StringEvents"];
    {PROTOBUF_FIELD_OFFSET(ABCIMessageLog, _impl_.events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::StringEvent>()},
  }}, {{
    "\47\0\3\0\0\0\0\0"
    "cosmos.base.abci.v1beta1.ABCIMessageLog"
    "log"
  }},
};

PROTOBUF_NOINLINE void ABCIMessageLog::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.ABCIMessageLog)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _impl_.log_.ClearToEmpty();
  _impl_.msg_index_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ABCIMessageLog::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ABCIMessageLog& this_ = static_cast<const ABCIMessageLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ABCIMessageLog::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ABCIMessageLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.ABCIMessageLog)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 msg_index = 1 [json_name = "msgIndex", (.gogoproto.jsontag) = "msg_index"];
          if (this_._internal_msg_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_msg_index(), target);
          }

          // string log = 2 [json_name = "log"];
          if (!this_._internal_log().empty()) {
            const std::string& _s = this_._internal_log();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.ABCIMessageLog.log");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .cosmos.base.abci.v1beta1.StringEvent events = 3 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "StringEvents"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.ABCIMessageLog)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ABCIMessageLog::ByteSizeLong(const MessageLite& base) {
          const ABCIMessageLog& this_ = static_cast<const ABCIMessageLog&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ABCIMessageLog::ByteSizeLong() const {
          const ABCIMessageLog& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.ABCIMessageLog)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.abci.v1beta1.StringEvent events = 3 [json_name = "events", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "StringEvents"];
            {
              total_size += 1UL * this_._internal_events_size();
              for (const auto& msg : this_._internal_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string log = 2 [json_name = "log"];
            if (!this_._internal_log().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log());
            }
            // uint32 msg_index = 1 [json_name = "msgIndex", (.gogoproto.jsontag) = "msg_index"];
            if (this_._internal_msg_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_msg_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ABCIMessageLog::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ABCIMessageLog*>(&to_msg);
  auto& from = static_cast<const ABCIMessageLog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.ABCIMessageLog)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  if (!from._internal_log().empty()) {
    _this->_internal_set_log(from._internal_log());
  }
  if (from._internal_msg_index() != 0) {
    _this->_impl_.msg_index_ = from._impl_.msg_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ABCIMessageLog::CopyFrom(const ABCIMessageLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.ABCIMessageLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ABCIMessageLog::InternalSwap(ABCIMessageLog* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_, &other->_impl_.log_, arena);
        swap(_impl_.msg_index_, other->_impl_.msg_index_);
}

::google::protobuf::Metadata ABCIMessageLog::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StringEvent::_Internal {
 public:
};

StringEvent::StringEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.StringEvent)
}
inline PROTOBUF_NDEBUG_INLINE StringEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::StringEvent& from_msg)
      : attributes_{visibility, arena, from.attributes_},
        type_(arena, from.type_),
        _cached_size_{0} {}

StringEvent::StringEvent(
    ::google::protobuf::Arena* arena,
    const StringEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StringEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.StringEvent)
}
inline PROTOBUF_NDEBUG_INLINE StringEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : attributes_{visibility, arena},
        type_(arena),
        _cached_size_{0} {}

inline void StringEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StringEvent::~StringEvent() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.StringEvent)
  SharedDtor(*this);
}
inline void StringEvent::SharedDtor(MessageLite& self) {
  StringEvent& this_ = static_cast<StringEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* StringEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) StringEvent(arena);
}
constexpr auto StringEvent::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(StringEvent, _impl_.attributes_) +
          decltype(StringEvent::_impl_.attributes_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(StringEvent), alignof(StringEvent), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&StringEvent::PlacementNew_,
                                 sizeof(StringEvent),
                                 alignof(StringEvent));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull StringEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_StringEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &StringEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<StringEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &StringEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<StringEvent>(), &StringEvent::ByteSizeLong,
            &StringEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(StringEvent, _impl_._cached_size_),
        false,
    },
    &StringEvent::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* StringEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 49, 2> StringEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::StringEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .cosmos.base.abci.v1beta1.Attribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StringEvent, _impl_.attributes_)}},
    // string type = 1 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StringEvent, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(StringEvent, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .cosmos.base.abci.v1beta1.Attribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(StringEvent, _impl_.attributes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::Attribute>()},
  }}, {{
    "\44\4\0\0\0\0\0\0"
    "cosmos.base.abci.v1beta1.StringEvent"
    "type"
  }},
};

PROTOBUF_NOINLINE void StringEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.StringEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.Clear();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StringEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StringEvent& this_ = static_cast<const StringEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StringEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StringEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.StringEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string type = 1 [json_name = "type"];
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.StringEvent.type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated .cosmos.base.abci.v1beta1.Attribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_attributes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_attributes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.StringEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StringEvent::ByteSizeLong(const MessageLite& base) {
          const StringEvent& this_ = static_cast<const StringEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StringEvent::ByteSizeLong() const {
          const StringEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.StringEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.abci.v1beta1.Attribute attributes = 2 [json_name = "attributes", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_attributes_size();
              for (const auto& msg : this_._internal_attributes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string type = 1 [json_name = "type"];
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StringEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StringEvent*>(&to_msg);
  auto& from = static_cast<const StringEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.StringEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_attributes()->MergeFrom(
      from._internal_attributes());
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StringEvent::CopyFrom(const StringEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.StringEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StringEvent::InternalSwap(StringEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.attributes_.InternalSwap(&other->_impl_.attributes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
}

::google::protobuf::Metadata StringEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Attribute::_Internal {
 public:
};

Attribute::Attribute(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.Attribute)
}
inline PROTOBUF_NDEBUG_INLINE Attribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::Attribute& from_msg)
      : key_(arena, from.key_),
        value_(arena, from.value_),
        _cached_size_{0} {}

Attribute::Attribute(
    ::google::protobuf::Arena* arena,
    const Attribute& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Attribute* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.Attribute)
}
inline PROTOBUF_NDEBUG_INLINE Attribute::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : key_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void Attribute::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Attribute::~Attribute() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.Attribute)
  SharedDtor(*this);
}
inline void Attribute::SharedDtor(MessageLite& self) {
  Attribute& this_ = static_cast<Attribute&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Attribute::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Attribute(arena);
}
constexpr auto Attribute::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Attribute),
                                            alignof(Attribute));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Attribute::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Attribute_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Attribute::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Attribute>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Attribute::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Attribute>(), &Attribute::ByteSizeLong,
            &Attribute::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Attribute, _impl_._cached_size_),
        false,
    },
    &Attribute::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Attribute::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> Attribute::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::Attribute>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Attribute, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Attribute, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Attribute, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Attribute, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\3\5\0\0\0\0\0"
    "cosmos.base.abci.v1beta1.Attribute"
    "key"
    "value"
  }},
};

PROTOBUF_NOINLINE void Attribute::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.Attribute)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Attribute::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Attribute& this_ = static_cast<const Attribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Attribute::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Attribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.Attribute)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string key = 1 [json_name = "key"];
          if (!this_._internal_key().empty()) {
            const std::string& _s = this_._internal_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.Attribute.key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string value = 2 [json_name = "value"];
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.Attribute.value");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.Attribute)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Attribute::ByteSizeLong(const MessageLite& base) {
          const Attribute& this_ = static_cast<const Attribute&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Attribute::ByteSizeLong() const {
          const Attribute& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.Attribute)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string key = 1 [json_name = "key"];
            if (!this_._internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_key());
            }
            // string value = 2 [json_name = "value"];
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Attribute::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Attribute*>(&to_msg);
  auto& from = static_cast<const Attribute&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.Attribute)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Attribute::CopyFrom(const Attribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.Attribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Attribute::InternalSwap(Attribute* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata Attribute::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GasInfo::_Internal {
 public:
};

GasInfo::GasInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.GasInfo)
}
GasInfo::GasInfo(
    ::google::protobuf::Arena* arena, const GasInfo& from)
    : GasInfo(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE GasInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void GasInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gas_wanted_),
           0,
           offsetof(Impl_, gas_used_) -
               offsetof(Impl_, gas_wanted_) +
               sizeof(Impl_::gas_used_));
}
GasInfo::~GasInfo() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.GasInfo)
  SharedDtor(*this);
}
inline void GasInfo::SharedDtor(MessageLite& self) {
  GasInfo& this_ = static_cast<GasInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* GasInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GasInfo(arena);
}
constexpr auto GasInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GasInfo),
                                            alignof(GasInfo));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GasInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GasInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GasInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GasInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GasInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GasInfo>(), &GasInfo::ByteSizeLong,
            &GasInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GasInfo, _impl_._cached_size_),
        false,
    },
    &GasInfo::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GasInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GasInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::GasInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 gas_used = 2 [json_name = "gasUsed"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GasInfo, _impl_.gas_used_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GasInfo, _impl_.gas_used_)}},
    // uint64 gas_wanted = 1 [json_name = "gasWanted"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GasInfo, _impl_.gas_wanted_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GasInfo, _impl_.gas_wanted_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 gas_wanted = 1 [json_name = "gasWanted"];
    {PROTOBUF_FIELD_OFFSET(GasInfo, _impl_.gas_wanted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 gas_used = 2 [json_name = "gasUsed"];
    {PROTOBUF_FIELD_OFFSET(GasInfo, _impl_.gas_used_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GasInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.GasInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.gas_wanted_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.gas_used_) -
      reinterpret_cast<char*>(&_impl_.gas_wanted_)) + sizeof(_impl_.gas_used_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GasInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GasInfo& this_ = static_cast<const GasInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GasInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GasInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.GasInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 gas_wanted = 1 [json_name = "gasWanted"];
          if (this_._internal_gas_wanted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_gas_wanted(), target);
          }

          // uint64 gas_used = 2 [json_name = "gasUsed"];
          if (this_._internal_gas_used() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_gas_used(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.GasInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GasInfo::ByteSizeLong(const MessageLite& base) {
          const GasInfo& this_ = static_cast<const GasInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GasInfo::ByteSizeLong() const {
          const GasInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.GasInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // uint64 gas_wanted = 1 [json_name = "gasWanted"];
            if (this_._internal_gas_wanted() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gas_wanted());
            }
            // uint64 gas_used = 2 [json_name = "gasUsed"];
            if (this_._internal_gas_used() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_gas_used());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GasInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GasInfo*>(&to_msg);
  auto& from = static_cast<const GasInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.GasInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_gas_wanted() != 0) {
    _this->_impl_.gas_wanted_ = from._impl_.gas_wanted_;
  }
  if (from._internal_gas_used() != 0) {
    _this->_impl_.gas_used_ = from._impl_.gas_used_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GasInfo::CopyFrom(const GasInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.GasInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GasInfo::InternalSwap(GasInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GasInfo, _impl_.gas_used_)
      + sizeof(GasInfo::_impl_.gas_used_)
      - PROTOBUF_FIELD_OFFSET(GasInfo, _impl_.gas_wanted_)>(
          reinterpret_cast<char*>(&_impl_.gas_wanted_),
          reinterpret_cast<char*>(&other->_impl_.gas_wanted_));
}

::google::protobuf::Metadata GasInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Result::_Internal {
 public:
};

void Result::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
void Result::clear_msg_responses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_responses_.Clear();
}
Result::Result(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.Result)
}
inline PROTOBUF_NDEBUG_INLINE Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::Result& from_msg)
      : events_{visibility, arena, from.events_},
        msg_responses_{visibility, arena, from.msg_responses_},
        data_(arena, from.data_),
        log_(arena, from.log_),
        _cached_size_{0} {}

Result::Result(
    ::google::protobuf::Arena* arena,
    const Result& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Result* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.Result)
}
inline PROTOBUF_NDEBUG_INLINE Result::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : events_{visibility, arena},
        msg_responses_{visibility, arena},
        data_(arena),
        log_(arena),
        _cached_size_{0} {}

inline void Result::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Result::~Result() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.Result)
  SharedDtor(*this);
}
inline void Result::SharedDtor(MessageLite& self) {
  Result& this_ = static_cast<Result&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.log_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Result::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Result(arena);
}
constexpr auto Result::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Result, _impl_.events_) +
          decltype(Result::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Result, _impl_.msg_responses_) +
          decltype(Result::_impl_.msg_responses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Result), alignof(Result), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Result::PlacementNew_,
                                 sizeof(Result),
                                 alignof(Result));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Result::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Result_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Result::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Result>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Result::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Result>(), &Result::ByteSizeLong,
            &Result::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Result, _impl_._cached_size_),
        false,
    },
    &Result::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Result::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 43, 2> Result::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::Result>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .google.protobuf.Any msg_responses = 4 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(Result, _impl_.msg_responses_)}},
    // bytes data = 1 [json_name = "data", deprecated = true];
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Result, _impl_.data_)}},
    // string log = 2 [json_name = "log"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Result, _impl_.log_)}},
    // repeated .tendermint.abci.Event events = 3 [json_name = "events", (.gogoproto.nullable) = false];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Result, _impl_.events_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1 [json_name = "data", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // string log = 2 [json_name = "log"];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.log_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .tendermint.abci.Event events = 3 [json_name = "events", (.gogoproto.nullable) = false];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any msg_responses = 4 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
    {PROTOBUF_FIELD_OFFSET(Result, _impl_.msg_responses_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::Event>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
    "\37\0\3\0\0\0\0\0"
    "cosmos.base.abci.v1beta1.Result"
    "log"
  }},
};

PROTOBUF_NOINLINE void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.Result)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  _impl_.msg_responses_.Clear();
  _impl_.data_.ClearToEmpty();
  _impl_.log_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Result::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Result& this_ = static_cast<const Result&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Result::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Result& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.Result)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1 [json_name = "data", deprecated = true];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // string log = 2 [json_name = "log"];
          if (!this_._internal_log().empty()) {
            const std::string& _s = this_._internal_log();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.Result.log");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated .tendermint.abci.Event events = 3 [json_name = "events", (.gogoproto.nullable) = false];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .google.protobuf.Any msg_responses = 4 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_msg_responses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_msg_responses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.Result)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Result::ByteSizeLong(const MessageLite& base) {
          const Result& this_ = static_cast<const Result&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Result::ByteSizeLong() const {
          const Result& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.Result)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.abci.Event events = 3 [json_name = "events", (.gogoproto.nullable) = false];
            {
              total_size += 1UL * this_._internal_events_size();
              for (const auto& msg : this_._internal_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .google.protobuf.Any msg_responses = 4 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
            {
              total_size += 1UL * this_._internal_msg_responses_size();
              for (const auto& msg : this_._internal_msg_responses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes data = 1 [json_name = "data", deprecated = true];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
            // string log = 2 [json_name = "log"];
            if (!this_._internal_log().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_log());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Result::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Result*>(&to_msg);
  auto& from = static_cast<const Result&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.Result)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  _this->_internal_mutable_msg_responses()->MergeFrom(
      from._internal_msg_responses());
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (!from._internal_log().empty()) {
    _this->_internal_set_log(from._internal_log());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Result::InternalSwap(Result* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  _impl_.msg_responses_.InternalSwap(&other->_impl_.msg_responses_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.log_, &other->_impl_.log_, arena);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SimulationResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SimulationResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_._has_bits_);
};

SimulationResponse::SimulationResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.SimulationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SimulationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::SimulationResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SimulationResponse::SimulationResponse(
    ::google::protobuf::Arena* arena,
    const SimulationResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SimulationResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.gas_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::abci::v1beta1::GasInfo>(
                              arena, *from._impl_.gas_info_)
                        : nullptr;
  _impl_.result_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::cosmos::base::abci::v1beta1::Result>(
                              arena, *from._impl_.result_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.SimulationResponse)
}
inline PROTOBUF_NDEBUG_INLINE SimulationResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SimulationResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gas_info_),
           0,
           offsetof(Impl_, result_) -
               offsetof(Impl_, gas_info_) +
               sizeof(Impl_::result_));
}
SimulationResponse::~SimulationResponse() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.SimulationResponse)
  SharedDtor(*this);
}
inline void SimulationResponse::SharedDtor(MessageLite& self) {
  SimulationResponse& this_ = static_cast<SimulationResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.gas_info_;
  delete this_._impl_.result_;
  this_._impl_.~Impl_();
}

inline void* SimulationResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SimulationResponse(arena);
}
constexpr auto SimulationResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SimulationResponse),
                                            alignof(SimulationResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SimulationResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SimulationResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SimulationResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SimulationResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SimulationResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SimulationResponse>(), &SimulationResponse::ByteSizeLong,
            &SimulationResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_._cached_size_),
        false,
    },
    &SimulationResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SimulationResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> SimulationResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::SimulationResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_.result_)}},
    // .cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_.gas_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true];
    {PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_.gas_info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_.result_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::GasInfo>()},
    {::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::Result>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SimulationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.SimulationResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.gas_info_ != nullptr);
      _impl_.gas_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SimulationResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SimulationResponse& this_ = static_cast<const SimulationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SimulationResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SimulationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.SimulationResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.gas_info_, this_._impl_.gas_info_->GetCachedSize(), target,
                stream);
          }

          // .cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.SimulationResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SimulationResponse::ByteSizeLong(const MessageLite& base) {
          const SimulationResponse& this_ = static_cast<const SimulationResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SimulationResponse::ByteSizeLong() const {
          const SimulationResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.SimulationResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .cosmos.base.abci.v1beta1.GasInfo gas_info = 1 [json_name = "gasInfo", (.gogoproto.nullable) = false, (.gogoproto.embed) = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.gas_info_);
            }
            // .cosmos.base.abci.v1beta1.Result result = 2 [json_name = "result"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SimulationResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SimulationResponse*>(&to_msg);
  auto& from = static_cast<const SimulationResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.SimulationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.gas_info_ != nullptr);
      if (_this->_impl_.gas_info_ == nullptr) {
        _this->_impl_.gas_info_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::base::abci::v1beta1::GasInfo>(arena, *from._impl_.gas_info_);
      } else {
        _this->_impl_.gas_info_->MergeFrom(*from._impl_.gas_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ =
            ::google::protobuf::Message::CopyConstruct<::cosmos::base::abci::v1beta1::Result>(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SimulationResponse::CopyFrom(const SimulationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.SimulationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SimulationResponse::InternalSwap(SimulationResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_.result_)
      + sizeof(SimulationResponse::_impl_.result_)
      - PROTOBUF_FIELD_OFFSET(SimulationResponse, _impl_.gas_info_)>(
          reinterpret_cast<char*>(&_impl_.gas_info_),
          reinterpret_cast<char*>(&other->_impl_.gas_info_));
}

::google::protobuf::Metadata SimulationResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MsgData::_Internal {
 public:
};

MsgData::MsgData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.MsgData)
}
inline PROTOBUF_NDEBUG_INLINE MsgData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::MsgData& from_msg)
      : msg_type_(arena, from.msg_type_),
        data_(arena, from.data_),
        _cached_size_{0} {}

MsgData::MsgData(
    ::google::protobuf::Arena* arena,
    const MsgData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MsgData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.MsgData)
}
inline PROTOBUF_NDEBUG_INLINE MsgData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_type_(arena),
        data_(arena),
        _cached_size_{0} {}

inline void MsgData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MsgData::~MsgData() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.MsgData)
  SharedDtor(*this);
}
inline void MsgData::SharedDtor(MessageLite& self) {
  MsgData& this_ = static_cast<MsgData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.msg_type_.Destroy();
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MsgData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MsgData(arena);
}
constexpr auto MsgData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MsgData),
                                            alignof(MsgData));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MsgData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MsgData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MsgData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MsgData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MsgData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MsgData>(), &MsgData::ByteSizeLong,
            &MsgData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MsgData, _impl_._cached_size_),
        false,
    },
    &MsgData::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MsgData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> MsgData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::MsgData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 2 [json_name = "data"];
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MsgData, _impl_.data_)}},
    // string msg_type = 1 [json_name = "msgType"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MsgData, _impl_.msg_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string msg_type = 1 [json_name = "msgType"];
    {PROTOBUF_FIELD_OFFSET(MsgData, _impl_.msg_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes data = 2 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(MsgData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\10\0\0\0\0\0\0"
    "cosmos.base.abci.v1beta1.MsgData"
    "msg_type"
  }},
};

PROTOBUF_NOINLINE void MsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.MsgData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_type_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MsgData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MsgData& this_ = static_cast<const MsgData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MsgData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MsgData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.MsgData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string msg_type = 1 [json_name = "msgType"];
          if (!this_._internal_msg_type().empty()) {
            const std::string& _s = this_._internal_msg_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "cosmos.base.abci.v1beta1.MsgData.msg_type");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // bytes data = 2 [json_name = "data"];
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.MsgData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MsgData::ByteSizeLong(const MessageLite& base) {
          const MsgData& this_ = static_cast<const MsgData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MsgData::ByteSizeLong() const {
          const MsgData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.MsgData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string msg_type = 1 [json_name = "msgType"];
            if (!this_._internal_msg_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_msg_type());
            }
            // bytes data = 2 [json_name = "data"];
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MsgData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MsgData*>(&to_msg);
  auto& from = static_cast<const MsgData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.MsgData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg_type().empty()) {
    _this->_internal_set_msg_type(from._internal_msg_type());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MsgData::CopyFrom(const MsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.MsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MsgData::InternalSwap(MsgData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_type_, &other->_impl_.msg_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata MsgData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TxMsgData::_Internal {
 public:
};

void TxMsgData::clear_msg_responses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_responses_.Clear();
}
TxMsgData::TxMsgData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.TxMsgData)
}
inline PROTOBUF_NDEBUG_INLINE TxMsgData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::TxMsgData& from_msg)
      : data_{visibility, arena, from.data_},
        msg_responses_{visibility, arena, from.msg_responses_},
        _cached_size_{0} {}

TxMsgData::TxMsgData(
    ::google::protobuf::Arena* arena,
    const TxMsgData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TxMsgData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.TxMsgData)
}
inline PROTOBUF_NDEBUG_INLINE TxMsgData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        msg_responses_{visibility, arena},
        _cached_size_{0} {}

inline void TxMsgData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TxMsgData::~TxMsgData() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.TxMsgData)
  SharedDtor(*this);
}
inline void TxMsgData::SharedDtor(MessageLite& self) {
  TxMsgData& this_ = static_cast<TxMsgData&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* TxMsgData::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TxMsgData(arena);
}
constexpr auto TxMsgData::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TxMsgData, _impl_.data_) +
          decltype(TxMsgData::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TxMsgData, _impl_.msg_responses_) +
          decltype(TxMsgData::_impl_.msg_responses_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TxMsgData), alignof(TxMsgData), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TxMsgData::PlacementNew_,
                                 sizeof(TxMsgData),
                                 alignof(TxMsgData));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TxMsgData::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TxMsgData_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TxMsgData::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TxMsgData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TxMsgData::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TxMsgData>(), &TxMsgData::ByteSizeLong,
            &TxMsgData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TxMsgData, _impl_._cached_size_),
        false,
    },
    &TxMsgData::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TxMsgData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> TxMsgData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::TxMsgData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .google.protobuf.Any msg_responses = 2 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(TxMsgData, _impl_.msg_responses_)}},
    // repeated .cosmos.base.abci.v1beta1.MsgData data = 1 [json_name = "data", deprecated = true];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TxMsgData, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .cosmos.base.abci.v1beta1.MsgData data = 1 [json_name = "data", deprecated = true];
    {PROTOBUF_FIELD_OFFSET(TxMsgData, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .google.protobuf.Any msg_responses = 2 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
    {PROTOBUF_FIELD_OFFSET(TxMsgData, _impl_.msg_responses_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::MsgData>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Any>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TxMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.TxMsgData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.msg_responses_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TxMsgData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TxMsgData& this_ = static_cast<const TxMsgData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TxMsgData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TxMsgData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.TxMsgData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .cosmos.base.abci.v1beta1.MsgData data = 1 [json_name = "data", deprecated = true];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_data_size());
               i < n; i++) {
            const auto& repfield = this_._internal_data().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .google.protobuf.Any msg_responses = 2 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_msg_responses_size());
               i < n; i++) {
            const auto& repfield = this_._internal_msg_responses().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.TxMsgData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TxMsgData::ByteSizeLong(const MessageLite& base) {
          const TxMsgData& this_ = static_cast<const TxMsgData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TxMsgData::ByteSizeLong() const {
          const TxMsgData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.TxMsgData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.abci.v1beta1.MsgData data = 1 [json_name = "data", deprecated = true];
            {
              total_size += 1UL * this_._internal_data_size();
              for (const auto& msg : this_._internal_data()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .google.protobuf.Any msg_responses = 2 [json_name = "msgResponses", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.46"];
            {
              total_size += 1UL * this_._internal_msg_responses_size();
              for (const auto& msg : this_._internal_msg_responses()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TxMsgData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TxMsgData*>(&to_msg);
  auto& from = static_cast<const TxMsgData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.TxMsgData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  _this->_internal_mutable_msg_responses()->MergeFrom(
      from._internal_msg_responses());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxMsgData::CopyFrom(const TxMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.TxMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TxMsgData::InternalSwap(TxMsgData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.msg_responses_.InternalSwap(&other->_impl_.msg_responses_);
}

::google::protobuf::Metadata TxMsgData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchTxsResult::_Internal {
 public:
};

SearchTxsResult::SearchTxsResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.SearchTxsResult)
}
inline PROTOBUF_NDEBUG_INLINE SearchTxsResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::SearchTxsResult& from_msg)
      : txs_{visibility, arena, from.txs_},
        _cached_size_{0} {}

SearchTxsResult::SearchTxsResult(
    ::google::protobuf::Arena* arena,
    const SearchTxsResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchTxsResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_count_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.SearchTxsResult)
}
inline PROTOBUF_NDEBUG_INLINE SearchTxsResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : txs_{visibility, arena},
        _cached_size_{0} {}

inline void SearchTxsResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::limit_));
}
SearchTxsResult::~SearchTxsResult() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.SearchTxsResult)
  SharedDtor(*this);
}
inline void SearchTxsResult::SharedDtor(MessageLite& self) {
  SearchTxsResult& this_ = static_cast<SearchTxsResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SearchTxsResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SearchTxsResult(arena);
}
constexpr auto SearchTxsResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.txs_) +
          decltype(SearchTxsResult::_impl_.txs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SearchTxsResult), alignof(SearchTxsResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SearchTxsResult::PlacementNew_,
                                 sizeof(SearchTxsResult),
                                 alignof(SearchTxsResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SearchTxsResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SearchTxsResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SearchTxsResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SearchTxsResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SearchTxsResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SearchTxsResult>(), &SearchTxsResult::ByteSizeLong,
            &SearchTxsResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_._cached_size_),
        false,
    },
    &SearchTxsResult::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SearchTxsResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> SearchTxsResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::SearchTxsResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 total_count = 1 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchTxsResult, _impl_.total_count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.total_count_)}},
    // uint64 count = 2 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchTxsResult, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.count_)}},
    // uint64 page_number = 3 [json_name = "pageNumber"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchTxsResult, _impl_.page_number_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.page_number_)}},
    // uint64 page_total = 4 [json_name = "pageTotal"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchTxsResult, _impl_.page_total_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.page_total_)}},
    // uint64 limit = 5 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchTxsResult, _impl_.limit_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.limit_)}},
    // repeated .cosmos.base.abci.v1beta1.TxResponse txs = 6 [json_name = "txs"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.txs_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 total_count = 1 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.total_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 count = 2 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 page_number = 3 [json_name = "pageNumber"];
    {PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.page_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 page_total = 4 [json_name = "pageTotal"];
    {PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.page_total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 limit = 5 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated .cosmos.base.abci.v1beta1.TxResponse txs = 6 [json_name = "txs"];
    {PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.txs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::TxResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SearchTxsResult::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.SearchTxsResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.txs_.Clear();
  ::memset(&_impl_.total_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.limit_) -
      reinterpret_cast<char*>(&_impl_.total_count_)) + sizeof(_impl_.limit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SearchTxsResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SearchTxsResult& this_ = static_cast<const SearchTxsResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SearchTxsResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SearchTxsResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.SearchTxsResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 total_count = 1 [json_name = "totalCount"];
          if (this_._internal_total_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_total_count(), target);
          }

          // uint64 count = 2 [json_name = "count"];
          if (this_._internal_count() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                2, this_._internal_count(), target);
          }

          // uint64 page_number = 3 [json_name = "pageNumber"];
          if (this_._internal_page_number() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                3, this_._internal_page_number(), target);
          }

          // uint64 page_total = 4 [json_name = "pageTotal"];
          if (this_._internal_page_total() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                4, this_._internal_page_total(), target);
          }

          // uint64 limit = 5 [json_name = "limit"];
          if (this_._internal_limit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_limit(), target);
          }

          // repeated .cosmos.base.abci.v1beta1.TxResponse txs = 6 [json_name = "txs"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_txs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_txs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.SearchTxsResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SearchTxsResult::ByteSizeLong(const MessageLite& base) {
          const SearchTxsResult& this_ = static_cast<const SearchTxsResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SearchTxsResult::ByteSizeLong() const {
          const SearchTxsResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.SearchTxsResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.base.abci.v1beta1.TxResponse txs = 6 [json_name = "txs"];
            {
              total_size += 1UL * this_._internal_txs_size();
              for (const auto& msg : this_._internal_txs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // uint64 total_count = 1 [json_name = "totalCount"];
            if (this_._internal_total_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_total_count());
            }
            // uint64 count = 2 [json_name = "count"];
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_count());
            }
            // uint64 page_number = 3 [json_name = "pageNumber"];
            if (this_._internal_page_number() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_page_number());
            }
            // uint64 page_total = 4 [json_name = "pageTotal"];
            if (this_._internal_page_total() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_page_total());
            }
            // uint64 limit = 5 [json_name = "limit"];
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SearchTxsResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchTxsResult*>(&to_msg);
  auto& from = static_cast<const SearchTxsResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.SearchTxsResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_txs()->MergeFrom(
      from._internal_txs());
  if (from._internal_total_count() != 0) {
    _this->_impl_.total_count_ = from._impl_.total_count_;
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_page_number() != 0) {
    _this->_impl_.page_number_ = from._impl_.page_number_;
  }
  if (from._internal_page_total() != 0) {
    _this->_impl_.page_total_ = from._impl_.page_total_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchTxsResult::CopyFrom(const SearchTxsResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.SearchTxsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchTxsResult::InternalSwap(SearchTxsResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.txs_.InternalSwap(&other->_impl_.txs_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.limit_)
      + sizeof(SearchTxsResult::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(SearchTxsResult, _impl_.total_count_)>(
          reinterpret_cast<char*>(&_impl_.total_count_),
          reinterpret_cast<char*>(&other->_impl_.total_count_));
}

::google::protobuf::Metadata SearchTxsResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SearchBlocksResult::_Internal {
 public:
};

void SearchBlocksResult::clear_blocks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocks_.Clear();
}
SearchBlocksResult::SearchBlocksResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.base.abci.v1beta1.SearchBlocksResult)
}
inline PROTOBUF_NDEBUG_INLINE SearchBlocksResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::base::abci::v1beta1::SearchBlocksResult& from_msg)
      : blocks_{visibility, arena, from.blocks_},
        _cached_size_{0} {}

SearchBlocksResult::SearchBlocksResult(
    ::google::protobuf::Arena* arena,
    const SearchBlocksResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SearchBlocksResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_count_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:cosmos.base.abci.v1beta1.SearchBlocksResult)
}
inline PROTOBUF_NDEBUG_INLINE SearchBlocksResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : blocks_{visibility, arena},
        _cached_size_{0} {}

inline void SearchBlocksResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_count_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, total_count_) +
               sizeof(Impl_::limit_));
}
SearchBlocksResult::~SearchBlocksResult() {
  // @@protoc_insertion_point(destructor:cosmos.base.abci.v1beta1.SearchBlocksResult)
  SharedDtor(*this);
}
inline void SearchBlocksResult::SharedDtor(MessageLite& self) {
  SearchBlocksResult& this_ = static_cast<SearchBlocksResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* SearchBlocksResult::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SearchBlocksResult(arena);
}
constexpr auto SearchBlocksResult::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.blocks_) +
          decltype(SearchBlocksResult::_impl_.blocks_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SearchBlocksResult), alignof(SearchBlocksResult), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SearchBlocksResult::PlacementNew_,
                                 sizeof(SearchBlocksResult),
                                 alignof(SearchBlocksResult));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SearchBlocksResult::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SearchBlocksResult_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SearchBlocksResult::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SearchBlocksResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SearchBlocksResult::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SearchBlocksResult>(), &SearchBlocksResult::ByteSizeLong,
            &SearchBlocksResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_._cached_size_),
        false,
    },
    &SearchBlocksResult::kDescriptorMethods,
    &descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SearchBlocksResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> SearchBlocksResult::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::base::abci::v1beta1::SearchBlocksResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 total_count = 1 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchBlocksResult, _impl_.total_count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.total_count_)}},
    // int64 count = 2 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchBlocksResult, _impl_.count_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.count_)}},
    // int64 page_number = 3 [json_name = "pageNumber"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchBlocksResult, _impl_.page_number_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.page_number_)}},
    // int64 page_total = 4 [json_name = "pageTotal"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchBlocksResult, _impl_.page_total_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.page_total_)}},
    // int64 limit = 5 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SearchBlocksResult, _impl_.limit_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.limit_)}},
    // repeated .tendermint.types.Block blocks = 6 [json_name = "blocks"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.blocks_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 total_count = 1 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.total_count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 count = 2 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 page_number = 3 [json_name = "pageNumber"];
    {PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.page_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 page_total = 4 [json_name = "pageTotal"];
    {PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.page_total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 limit = 5 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // repeated .tendermint.types.Block blocks = 6 [json_name = "blocks"];
    {PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.blocks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::types::Block>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SearchBlocksResult::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.base.abci.v1beta1.SearchBlocksResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.blocks_.Clear();
  ::memset(&_impl_.total_count_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.limit_) -
      reinterpret_cast<char*>(&_impl_.total_count_)) + sizeof(_impl_.limit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SearchBlocksResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SearchBlocksResult& this_ = static_cast<const SearchBlocksResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SearchBlocksResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SearchBlocksResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.base.abci.v1beta1.SearchBlocksResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 total_count = 1 [json_name = "totalCount"];
          if (this_._internal_total_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_total_count(), target);
          }

          // int64 count = 2 [json_name = "count"];
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_count(), target);
          }

          // int64 page_number = 3 [json_name = "pageNumber"];
          if (this_._internal_page_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_page_number(), target);
          }

          // int64 page_total = 4 [json_name = "pageTotal"];
          if (this_._internal_page_total() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_page_total(), target);
          }

          // int64 limit = 5 [json_name = "limit"];
          if (this_._internal_limit() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<5>(
                    stream, this_._internal_limit(), target);
          }

          // repeated .tendermint.types.Block blocks = 6 [json_name = "blocks"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_blocks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_blocks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    6, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.base.abci.v1beta1.SearchBlocksResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SearchBlocksResult::ByteSizeLong(const MessageLite& base) {
          const SearchBlocksResult& this_ = static_cast<const SearchBlocksResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SearchBlocksResult::ByteSizeLong() const {
          const SearchBlocksResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.base.abci.v1beta1.SearchBlocksResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .tendermint.types.Block blocks = 6 [json_name = "blocks"];
            {
              total_size += 1UL * this_._internal_blocks_size();
              for (const auto& msg : this_._internal_blocks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int64 total_count = 1 [json_name = "totalCount"];
            if (this_._internal_total_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_total_count());
            }
            // int64 count = 2 [json_name = "count"];
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_count());
            }
            // int64 page_number = 3 [json_name = "pageNumber"];
            if (this_._internal_page_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_page_number());
            }
            // int64 page_total = 4 [json_name = "pageTotal"];
            if (this_._internal_page_total() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_page_total());
            }
            // int64 limit = 5 [json_name = "limit"];
            if (this_._internal_limit() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_limit());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SearchBlocksResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SearchBlocksResult*>(&to_msg);
  auto& from = static_cast<const SearchBlocksResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.base.abci.v1beta1.SearchBlocksResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_blocks()->MergeFrom(
      from._internal_blocks());
  if (from._internal_total_count() != 0) {
    _this->_impl_.total_count_ = from._impl_.total_count_;
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  if (from._internal_page_number() != 0) {
    _this->_impl_.page_number_ = from._impl_.page_number_;
  }
  if (from._internal_page_total() != 0) {
    _this->_impl_.page_total_ = from._impl_.page_total_;
  }
  if (from._internal_limit() != 0) {
    _this->_impl_.limit_ = from._impl_.limit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SearchBlocksResult::CopyFrom(const SearchBlocksResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.base.abci.v1beta1.SearchBlocksResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SearchBlocksResult::InternalSwap(SearchBlocksResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.blocks_.InternalSwap(&other->_impl_.blocks_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.limit_)
      + sizeof(SearchBlocksResult::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(SearchBlocksResult, _impl_.total_count_)>(
          reinterpret_cast<char*>(&_impl_.total_count_),
          reinterpret_cast<char*>(&other->_impl_.total_count_));
}

::google::protobuf::Metadata SearchBlocksResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace abci
}  // namespace base
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fbase_2fabci_2fv1beta1_2fabci_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
