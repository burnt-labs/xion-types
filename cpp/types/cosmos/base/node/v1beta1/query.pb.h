// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/node/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
#include "google/protobuf/timestamp.pb.h"
#include "gogoproto/gogo.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace base {
namespace node {
namespace v1beta1 {
class ConfigRequest;
struct ConfigRequestDefaultTypeInternal;
extern ConfigRequestDefaultTypeInternal _ConfigRequest_default_instance_;
class ConfigResponse;
struct ConfigResponseDefaultTypeInternal;
extern ConfigResponseDefaultTypeInternal _ConfigResponse_default_instance_;
class StatusRequest;
struct StatusRequestDefaultTypeInternal;
extern StatusRequestDefaultTypeInternal _StatusRequest_default_instance_;
class StatusResponse;
struct StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
}  // namespace v1beta1
}  // namespace node
}  // namespace base
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace base {
namespace node {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class StatusRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.node.v1beta1.StatusRequest) */ {
 public:
  inline StatusRequest() : StatusRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StatusRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StatusRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StatusRequest(const StatusRequest& from) : StatusRequest(nullptr, from) {}
  inline StatusRequest(StatusRequest&& from) noexcept
      : StatusRequest(nullptr, std::move(from)) {}
  inline StatusRequest& operator=(const StatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusRequest& operator=(StatusRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusRequest* internal_default_instance() {
    return reinterpret_cast<const StatusRequest*>(
        &_StatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(StatusRequest& a, StatusRequest& b) { a.Swap(&b); }
  inline void Swap(StatusRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StatusRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StatusRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.node.v1beta1.StatusRequest"; }

 protected:
  explicit StatusRequest(::google::protobuf::Arena* arena);
  StatusRequest(::google::protobuf::Arena* arena, const StatusRequest& from);
  StatusRequest(::google::protobuf::Arena* arena, StatusRequest&& from) noexcept
      : StatusRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.node.v1beta1.StatusRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StatusRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class ConfigResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.node.v1beta1.ConfigResponse) */ {
 public:
  inline ConfigResponse() : ConfigResponse(nullptr) {}
  ~ConfigResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConfigResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConfigResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConfigResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConfigResponse(const ConfigResponse& from) : ConfigResponse(nullptr, from) {}
  inline ConfigResponse(ConfigResponse&& from) noexcept
      : ConfigResponse(nullptr, std::move(from)) {}
  inline ConfigResponse& operator=(const ConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigResponse& operator=(ConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConfigResponse* internal_default_instance() {
    return reinterpret_cast<const ConfigResponse*>(
        &_ConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ConfigResponse& a, ConfigResponse& b) { a.Swap(&b); }
  inline void Swap(ConfigResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConfigResponse& from) { ConfigResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConfigResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.node.v1beta1.ConfigResponse"; }

 protected:
  explicit ConfigResponse(::google::protobuf::Arena* arena);
  ConfigResponse(::google::protobuf::Arena* arena, const ConfigResponse& from);
  ConfigResponse(::google::protobuf::Arena* arena, ConfigResponse&& from) noexcept
      : ConfigResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinimumGasPriceFieldNumber = 1,
    kPruningKeepRecentFieldNumber = 2,
    kPruningIntervalFieldNumber = 3,
    kHaltHeightFieldNumber = 4,
  };
  // string minimum_gas_price = 1 [json_name = "minimumGasPrice"];
  void clear_minimum_gas_price() ;
  const std::string& minimum_gas_price() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_minimum_gas_price(Arg_&& arg, Args_... args);
  std::string* mutable_minimum_gas_price();
  PROTOBUF_NODISCARD std::string* release_minimum_gas_price();
  void set_allocated_minimum_gas_price(std::string* value);

  private:
  const std::string& _internal_minimum_gas_price() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_minimum_gas_price(
      const std::string& value);
  std::string* _internal_mutable_minimum_gas_price();

  public:
  // string pruning_keep_recent = 2 [json_name = "pruningKeepRecent"];
  void clear_pruning_keep_recent() ;
  const std::string& pruning_keep_recent() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pruning_keep_recent(Arg_&& arg, Args_... args);
  std::string* mutable_pruning_keep_recent();
  PROTOBUF_NODISCARD std::string* release_pruning_keep_recent();
  void set_allocated_pruning_keep_recent(std::string* value);

  private:
  const std::string& _internal_pruning_keep_recent() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pruning_keep_recent(
      const std::string& value);
  std::string* _internal_mutable_pruning_keep_recent();

  public:
  // string pruning_interval = 3 [json_name = "pruningInterval"];
  void clear_pruning_interval() ;
  const std::string& pruning_interval() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pruning_interval(Arg_&& arg, Args_... args);
  std::string* mutable_pruning_interval();
  PROTOBUF_NODISCARD std::string* release_pruning_interval();
  void set_allocated_pruning_interval(std::string* value);

  private:
  const std::string& _internal_pruning_interval() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pruning_interval(
      const std::string& value);
  std::string* _internal_mutable_pruning_interval();

  public:
  // uint64 halt_height = 4 [json_name = "haltHeight"];
  void clear_halt_height() ;
  ::uint64_t halt_height() const;
  void set_halt_height(::uint64_t value);

  private:
  ::uint64_t _internal_halt_height() const;
  void _internal_set_halt_height(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.node.v1beta1.ConfigResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      100, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConfigResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr minimum_gas_price_;
    ::google::protobuf::internal::ArenaStringPtr pruning_keep_recent_;
    ::google::protobuf::internal::ArenaStringPtr pruning_interval_;
    ::uint64_t halt_height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class ConfigRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.node.v1beta1.ConfigRequest) */ {
 public:
  inline ConfigRequest() : ConfigRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConfigRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConfigRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConfigRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConfigRequest(const ConfigRequest& from) : ConfigRequest(nullptr, from) {}
  inline ConfigRequest(ConfigRequest&& from) noexcept
      : ConfigRequest(nullptr, std::move(from)) {}
  inline ConfigRequest& operator=(const ConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigRequest& operator=(ConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConfigRequest* internal_default_instance() {
    return reinterpret_cast<const ConfigRequest*>(
        &_ConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ConfigRequest& a, ConfigRequest& b) { a.Swap(&b); }
  inline void Swap(ConfigRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ConfigRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.node.v1beta1.ConfigRequest"; }

 protected:
  explicit ConfigRequest(::google::protobuf::Arena* arena);
  ConfigRequest(::google::protobuf::Arena* arena, const ConfigRequest& from);
  ConfigRequest(::google::protobuf::Arena* arena, ConfigRequest&& from) noexcept
      : ConfigRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.node.v1beta1.ConfigRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConfigRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class StatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.node.v1beta1.StatusResponse) */ {
 public:
  inline StatusResponse() : StatusResponse(nullptr) {}
  ~StatusResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StatusResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StatusResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StatusResponse(const StatusResponse& from) : StatusResponse(nullptr, from) {}
  inline StatusResponse(StatusResponse&& from) noexcept
      : StatusResponse(nullptr, std::move(from)) {}
  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
        &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(StatusResponse& a, StatusResponse& b) { a.Swap(&b); }
  inline void Swap(StatusResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StatusResponse& from) { StatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StatusResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.node.v1beta1.StatusResponse"; }

 protected:
  explicit StatusResponse(::google::protobuf::Arena* arena);
  StatusResponse(::google::protobuf::Arena* arena, const StatusResponse& from);
  StatusResponse(::google::protobuf::Arena* arena, StatusResponse&& from) noexcept
      : StatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAppHashFieldNumber = 4,
    kValidatorHashFieldNumber = 5,
    kTimestampFieldNumber = 3,
    kEarliestStoreHeightFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // bytes app_hash = 4 [json_name = "appHash"];
  void clear_app_hash() ;
  const std::string& app_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_hash(Arg_&& arg, Args_... args);
  std::string* mutable_app_hash();
  PROTOBUF_NODISCARD std::string* release_app_hash();
  void set_allocated_app_hash(std::string* value);

  private:
  const std::string& _internal_app_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_hash(
      const std::string& value);
  std::string* _internal_mutable_app_hash();

  public:
  // bytes validator_hash = 5 [json_name = "validatorHash"];
  void clear_validator_hash() ;
  const std::string& validator_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_validator_hash(Arg_&& arg, Args_... args);
  std::string* mutable_validator_hash();
  PROTOBUF_NODISCARD std::string* release_validator_hash();
  void set_allocated_validator_hash(std::string* value);

  private:
  const std::string& _internal_validator_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_validator_hash(
      const std::string& value);
  std::string* _internal_mutable_validator_hash();

  public:
  // .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp", (.gogoproto.stdtime) = true];
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // uint64 earliest_store_height = 1 [json_name = "earliestStoreHeight"];
  void clear_earliest_store_height() ;
  ::uint64_t earliest_store_height() const;
  void set_earliest_store_height(::uint64_t value);

  private:
  ::uint64_t _internal_earliest_store_height() const;
  void _internal_set_earliest_store_height(::uint64_t value);

  public:
  // uint64 height = 2 [json_name = "height"];
  void clear_height() ;
  ::uint64_t height() const;
  void set_height(::uint64_t value);

  private:
  ::uint64_t _internal_height() const;
  void _internal_set_height(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.node.v1beta1.StatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StatusResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr app_hash_;
    ::google::protobuf::internal::ArenaStringPtr validator_hash_;
    ::google::protobuf::Timestamp* timestamp_;
    ::uint64_t earliest_store_height_;
    ::uint64_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConfigRequest

// -------------------------------------------------------------------

// ConfigResponse

// string minimum_gas_price = 1 [json_name = "minimumGasPrice"];
inline void ConfigResponse::clear_minimum_gas_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_gas_price_.ClearToEmpty();
}
inline const std::string& ConfigResponse::minimum_gas_price() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.ConfigResponse.minimum_gas_price)
  return _internal_minimum_gas_price();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfigResponse::set_minimum_gas_price(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_gas_price_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.ConfigResponse.minimum_gas_price)
}
inline std::string* ConfigResponse::mutable_minimum_gas_price() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_minimum_gas_price();
  // @@protoc_insertion_point(field_mutable:cosmos.base.node.v1beta1.ConfigResponse.minimum_gas_price)
  return _s;
}
inline const std::string& ConfigResponse::_internal_minimum_gas_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.minimum_gas_price_.Get();
}
inline void ConfigResponse::_internal_set_minimum_gas_price(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_gas_price_.Set(value, GetArena());
}
inline std::string* ConfigResponse::_internal_mutable_minimum_gas_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.minimum_gas_price_.Mutable( GetArena());
}
inline std::string* ConfigResponse::release_minimum_gas_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.node.v1beta1.ConfigResponse.minimum_gas_price)
  return _impl_.minimum_gas_price_.Release();
}
inline void ConfigResponse::set_allocated_minimum_gas_price(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.minimum_gas_price_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.minimum_gas_price_.IsDefault()) {
    _impl_.minimum_gas_price_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.node.v1beta1.ConfigResponse.minimum_gas_price)
}

// string pruning_keep_recent = 2 [json_name = "pruningKeepRecent"];
inline void ConfigResponse::clear_pruning_keep_recent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_keep_recent_.ClearToEmpty();
}
inline const std::string& ConfigResponse::pruning_keep_recent() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.ConfigResponse.pruning_keep_recent)
  return _internal_pruning_keep_recent();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfigResponse::set_pruning_keep_recent(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_keep_recent_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.ConfigResponse.pruning_keep_recent)
}
inline std::string* ConfigResponse::mutable_pruning_keep_recent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pruning_keep_recent();
  // @@protoc_insertion_point(field_mutable:cosmos.base.node.v1beta1.ConfigResponse.pruning_keep_recent)
  return _s;
}
inline const std::string& ConfigResponse::_internal_pruning_keep_recent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pruning_keep_recent_.Get();
}
inline void ConfigResponse::_internal_set_pruning_keep_recent(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_keep_recent_.Set(value, GetArena());
}
inline std::string* ConfigResponse::_internal_mutable_pruning_keep_recent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pruning_keep_recent_.Mutable( GetArena());
}
inline std::string* ConfigResponse::release_pruning_keep_recent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.node.v1beta1.ConfigResponse.pruning_keep_recent)
  return _impl_.pruning_keep_recent_.Release();
}
inline void ConfigResponse::set_allocated_pruning_keep_recent(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_keep_recent_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pruning_keep_recent_.IsDefault()) {
    _impl_.pruning_keep_recent_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.node.v1beta1.ConfigResponse.pruning_keep_recent)
}

// string pruning_interval = 3 [json_name = "pruningInterval"];
inline void ConfigResponse::clear_pruning_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_interval_.ClearToEmpty();
}
inline const std::string& ConfigResponse::pruning_interval() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.ConfigResponse.pruning_interval)
  return _internal_pruning_interval();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfigResponse::set_pruning_interval(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_interval_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.ConfigResponse.pruning_interval)
}
inline std::string* ConfigResponse::mutable_pruning_interval() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pruning_interval();
  // @@protoc_insertion_point(field_mutable:cosmos.base.node.v1beta1.ConfigResponse.pruning_interval)
  return _s;
}
inline const std::string& ConfigResponse::_internal_pruning_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pruning_interval_.Get();
}
inline void ConfigResponse::_internal_set_pruning_interval(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_interval_.Set(value, GetArena());
}
inline std::string* ConfigResponse::_internal_mutable_pruning_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pruning_interval_.Mutable( GetArena());
}
inline std::string* ConfigResponse::release_pruning_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.node.v1beta1.ConfigResponse.pruning_interval)
  return _impl_.pruning_interval_.Release();
}
inline void ConfigResponse::set_allocated_pruning_interval(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pruning_interval_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pruning_interval_.IsDefault()) {
    _impl_.pruning_interval_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.node.v1beta1.ConfigResponse.pruning_interval)
}

// uint64 halt_height = 4 [json_name = "haltHeight"];
inline void ConfigResponse::clear_halt_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.halt_height_ = ::uint64_t{0u};
}
inline ::uint64_t ConfigResponse::halt_height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.ConfigResponse.halt_height)
  return _internal_halt_height();
}
inline void ConfigResponse::set_halt_height(::uint64_t value) {
  _internal_set_halt_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.ConfigResponse.halt_height)
}
inline ::uint64_t ConfigResponse::_internal_halt_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.halt_height_;
}
inline void ConfigResponse::_internal_set_halt_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.halt_height_ = value;
}

// -------------------------------------------------------------------

// StatusRequest

// -------------------------------------------------------------------

// StatusResponse

// uint64 earliest_store_height = 1 [json_name = "earliestStoreHeight"];
inline void StatusResponse::clear_earliest_store_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.earliest_store_height_ = ::uint64_t{0u};
}
inline ::uint64_t StatusResponse::earliest_store_height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.StatusResponse.earliest_store_height)
  return _internal_earliest_store_height();
}
inline void StatusResponse::set_earliest_store_height(::uint64_t value) {
  _internal_set_earliest_store_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.StatusResponse.earliest_store_height)
}
inline ::uint64_t StatusResponse::_internal_earliest_store_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.earliest_store_height_;
}
inline void StatusResponse::_internal_set_earliest_store_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.earliest_store_height_ = value;
}

// uint64 height = 2 [json_name = "height"];
inline void StatusResponse::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::uint64_t{0u};
}
inline ::uint64_t StatusResponse::height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.StatusResponse.height)
  return _internal_height();
}
inline void StatusResponse::set_height(::uint64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.StatusResponse.height)
}
inline ::uint64_t StatusResponse::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void StatusResponse::_internal_set_height(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .google.protobuf.Timestamp timestamp = 3 [json_name = "timestamp", (.gogoproto.stdtime) = true];
inline bool StatusResponse::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& StatusResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& StatusResponse::timestamp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.StatusResponse.timestamp)
  return _internal_timestamp();
}
inline void StatusResponse::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.node.v1beta1.StatusResponse.timestamp)
}
inline ::google::protobuf::Timestamp* StatusResponse::release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* StatusResponse::unsafe_arena_release_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.node.v1beta1.StatusResponse.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* StatusResponse::_internal_mutable_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* StatusResponse::mutable_timestamp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:cosmos.base.node.v1beta1.StatusResponse.timestamp)
  return _msg;
}
inline void StatusResponse::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.node.v1beta1.StatusResponse.timestamp)
}

// bytes app_hash = 4 [json_name = "appHash"];
inline void StatusResponse::clear_app_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_hash_.ClearToEmpty();
}
inline const std::string& StatusResponse::app_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.StatusResponse.app_hash)
  return _internal_app_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusResponse::set_app_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.StatusResponse.app_hash)
}
inline std::string* StatusResponse::mutable_app_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_hash();
  // @@protoc_insertion_point(field_mutable:cosmos.base.node.v1beta1.StatusResponse.app_hash)
  return _s;
}
inline const std::string& StatusResponse::_internal_app_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.app_hash_.Get();
}
inline void StatusResponse::_internal_set_app_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_hash_.Set(value, GetArena());
}
inline std::string* StatusResponse::_internal_mutable_app_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.app_hash_.Mutable( GetArena());
}
inline std::string* StatusResponse::release_app_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.node.v1beta1.StatusResponse.app_hash)
  return _impl_.app_hash_.Release();
}
inline void StatusResponse::set_allocated_app_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.app_hash_.IsDefault()) {
    _impl_.app_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.node.v1beta1.StatusResponse.app_hash)
}

// bytes validator_hash = 5 [json_name = "validatorHash"];
inline void StatusResponse::clear_validator_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_hash_.ClearToEmpty();
}
inline const std::string& StatusResponse::validator_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.node.v1beta1.StatusResponse.validator_hash)
  return _internal_validator_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusResponse::set_validator_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.node.v1beta1.StatusResponse.validator_hash)
}
inline std::string* StatusResponse::mutable_validator_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_validator_hash();
  // @@protoc_insertion_point(field_mutable:cosmos.base.node.v1beta1.StatusResponse.validator_hash)
  return _s;
}
inline const std::string& StatusResponse::_internal_validator_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validator_hash_.Get();
}
inline void StatusResponse::_internal_set_validator_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_hash_.Set(value, GetArena());
}
inline std::string* StatusResponse::_internal_mutable_validator_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.validator_hash_.Mutable( GetArena());
}
inline std::string* StatusResponse::release_validator_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.node.v1beta1.StatusResponse.validator_hash)
  return _impl_.validator_hash_.Release();
}
inline void StatusResponse::set_allocated_validator_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validator_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.validator_hash_.IsDefault()) {
    _impl_.validator_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.node.v1beta1.StatusResponse.validator_hash)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace node
}  // namespace base
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fbase_2fnode_2fv1beta1_2fquery_2eproto_2epb_2eh
