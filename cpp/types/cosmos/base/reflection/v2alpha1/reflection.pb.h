// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v2alpha1/reflection.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_2epb_2eh
#define cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
namespace cosmos {
namespace base {
namespace reflection {
namespace v2alpha1 {
class AppDescriptor;
struct AppDescriptorDefaultTypeInternal;
extern AppDescriptorDefaultTypeInternal _AppDescriptor_default_instance_;
class AuthnDescriptor;
struct AuthnDescriptorDefaultTypeInternal;
extern AuthnDescriptorDefaultTypeInternal _AuthnDescriptor_default_instance_;
class ChainDescriptor;
struct ChainDescriptorDefaultTypeInternal;
extern ChainDescriptorDefaultTypeInternal _ChainDescriptor_default_instance_;
class CodecDescriptor;
struct CodecDescriptorDefaultTypeInternal;
extern CodecDescriptorDefaultTypeInternal _CodecDescriptor_default_instance_;
class ConfigurationDescriptor;
struct ConfigurationDescriptorDefaultTypeInternal;
extern ConfigurationDescriptorDefaultTypeInternal _ConfigurationDescriptor_default_instance_;
class GetAuthnDescriptorRequest;
struct GetAuthnDescriptorRequestDefaultTypeInternal;
extern GetAuthnDescriptorRequestDefaultTypeInternal _GetAuthnDescriptorRequest_default_instance_;
class GetAuthnDescriptorResponse;
struct GetAuthnDescriptorResponseDefaultTypeInternal;
extern GetAuthnDescriptorResponseDefaultTypeInternal _GetAuthnDescriptorResponse_default_instance_;
class GetChainDescriptorRequest;
struct GetChainDescriptorRequestDefaultTypeInternal;
extern GetChainDescriptorRequestDefaultTypeInternal _GetChainDescriptorRequest_default_instance_;
class GetChainDescriptorResponse;
struct GetChainDescriptorResponseDefaultTypeInternal;
extern GetChainDescriptorResponseDefaultTypeInternal _GetChainDescriptorResponse_default_instance_;
class GetCodecDescriptorRequest;
struct GetCodecDescriptorRequestDefaultTypeInternal;
extern GetCodecDescriptorRequestDefaultTypeInternal _GetCodecDescriptorRequest_default_instance_;
class GetCodecDescriptorResponse;
struct GetCodecDescriptorResponseDefaultTypeInternal;
extern GetCodecDescriptorResponseDefaultTypeInternal _GetCodecDescriptorResponse_default_instance_;
class GetConfigurationDescriptorRequest;
struct GetConfigurationDescriptorRequestDefaultTypeInternal;
extern GetConfigurationDescriptorRequestDefaultTypeInternal _GetConfigurationDescriptorRequest_default_instance_;
class GetConfigurationDescriptorResponse;
struct GetConfigurationDescriptorResponseDefaultTypeInternal;
extern GetConfigurationDescriptorResponseDefaultTypeInternal _GetConfigurationDescriptorResponse_default_instance_;
class GetQueryServicesDescriptorRequest;
struct GetQueryServicesDescriptorRequestDefaultTypeInternal;
extern GetQueryServicesDescriptorRequestDefaultTypeInternal _GetQueryServicesDescriptorRequest_default_instance_;
class GetQueryServicesDescriptorResponse;
struct GetQueryServicesDescriptorResponseDefaultTypeInternal;
extern GetQueryServicesDescriptorResponseDefaultTypeInternal _GetQueryServicesDescriptorResponse_default_instance_;
class GetTxDescriptorRequest;
struct GetTxDescriptorRequestDefaultTypeInternal;
extern GetTxDescriptorRequestDefaultTypeInternal _GetTxDescriptorRequest_default_instance_;
class GetTxDescriptorResponse;
struct GetTxDescriptorResponseDefaultTypeInternal;
extern GetTxDescriptorResponseDefaultTypeInternal _GetTxDescriptorResponse_default_instance_;
class InterfaceAcceptingMessageDescriptor;
struct InterfaceAcceptingMessageDescriptorDefaultTypeInternal;
extern InterfaceAcceptingMessageDescriptorDefaultTypeInternal _InterfaceAcceptingMessageDescriptor_default_instance_;
class InterfaceDescriptor;
struct InterfaceDescriptorDefaultTypeInternal;
extern InterfaceDescriptorDefaultTypeInternal _InterfaceDescriptor_default_instance_;
class InterfaceImplementerDescriptor;
struct InterfaceImplementerDescriptorDefaultTypeInternal;
extern InterfaceImplementerDescriptorDefaultTypeInternal _InterfaceImplementerDescriptor_default_instance_;
class MsgDescriptor;
struct MsgDescriptorDefaultTypeInternal;
extern MsgDescriptorDefaultTypeInternal _MsgDescriptor_default_instance_;
class QueryMethodDescriptor;
struct QueryMethodDescriptorDefaultTypeInternal;
extern QueryMethodDescriptorDefaultTypeInternal _QueryMethodDescriptor_default_instance_;
class QueryServiceDescriptor;
struct QueryServiceDescriptorDefaultTypeInternal;
extern QueryServiceDescriptorDefaultTypeInternal _QueryServiceDescriptor_default_instance_;
class QueryServicesDescriptor;
struct QueryServicesDescriptorDefaultTypeInternal;
extern QueryServicesDescriptorDefaultTypeInternal _QueryServicesDescriptor_default_instance_;
class SigningModeDescriptor;
struct SigningModeDescriptorDefaultTypeInternal;
extern SigningModeDescriptorDefaultTypeInternal _SigningModeDescriptor_default_instance_;
class TxDescriptor;
struct TxDescriptorDefaultTypeInternal;
extern TxDescriptorDefaultTypeInternal _TxDescriptor_default_instance_;
}  // namespace v2alpha1
}  // namespace reflection
}  // namespace base
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace base {
namespace reflection {
namespace v2alpha1 {

// ===================================================================


// -------------------------------------------------------------------

class SigningModeDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.SigningModeDescriptor) */ {
 public:
  inline SigningModeDescriptor() : SigningModeDescriptor(nullptr) {}
  ~SigningModeDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SigningModeDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SigningModeDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SigningModeDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline SigningModeDescriptor(const SigningModeDescriptor& from) : SigningModeDescriptor(nullptr, from) {}
  inline SigningModeDescriptor(SigningModeDescriptor&& from) noexcept
      : SigningModeDescriptor(nullptr, std::move(from)) {}
  inline SigningModeDescriptor& operator=(const SigningModeDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline SigningModeDescriptor& operator=(SigningModeDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SigningModeDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const SigningModeDescriptor* internal_default_instance() {
    return reinterpret_cast<const SigningModeDescriptor*>(
        &_SigningModeDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SigningModeDescriptor& a, SigningModeDescriptor& b) { a.Swap(&b); }
  inline void Swap(SigningModeDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SigningModeDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SigningModeDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SigningModeDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SigningModeDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SigningModeDescriptor& from) { SigningModeDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SigningModeDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.SigningModeDescriptor"; }

 protected:
  explicit SigningModeDescriptor(::google::protobuf::Arena* arena);
  SigningModeDescriptor(::google::protobuf::Arena* arena, const SigningModeDescriptor& from);
  SigningModeDescriptor(::google::protobuf::Arena* arena, SigningModeDescriptor&& from) noexcept
      : SigningModeDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kAuthnInfoProviderMethodFullnameFieldNumber = 3,
    kNumberFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string authn_info_provider_method_fullname = 3 [json_name = "authnInfoProviderMethodFullname"];
  void clear_authn_info_provider_method_fullname() ;
  const std::string& authn_info_provider_method_fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_authn_info_provider_method_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_authn_info_provider_method_fullname();
  PROTOBUF_NODISCARD std::string* release_authn_info_provider_method_fullname();
  void set_allocated_authn_info_provider_method_fullname(std::string* value);

  private:
  const std::string& _internal_authn_info_provider_method_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_authn_info_provider_method_fullname(
      const std::string& value);
  std::string* _internal_mutable_authn_info_provider_method_fullname();

  public:
  // int32 number = 2 [json_name = "number"];
  void clear_number() ;
  ::int32_t number() const;
  void set_number(::int32_t value);

  private:
  ::int32_t _internal_number() const;
  void _internal_set_number(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.SigningModeDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      101, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SigningModeDescriptor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr authn_info_provider_method_fullname_;
    ::int32_t number_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class QueryMethodDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor) */ {
 public:
  inline QueryMethodDescriptor() : QueryMethodDescriptor(nullptr) {}
  ~QueryMethodDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryMethodDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryMethodDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryMethodDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryMethodDescriptor(const QueryMethodDescriptor& from) : QueryMethodDescriptor(nullptr, from) {}
  inline QueryMethodDescriptor(QueryMethodDescriptor&& from) noexcept
      : QueryMethodDescriptor(nullptr, std::move(from)) {}
  inline QueryMethodDescriptor& operator=(const QueryMethodDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryMethodDescriptor& operator=(QueryMethodDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryMethodDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryMethodDescriptor* internal_default_instance() {
    return reinterpret_cast<const QueryMethodDescriptor*>(
        &_QueryMethodDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(QueryMethodDescriptor& a, QueryMethodDescriptor& b) { a.Swap(&b); }
  inline void Swap(QueryMethodDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryMethodDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryMethodDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryMethodDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryMethodDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryMethodDescriptor& from) { QueryMethodDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryMethodDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.QueryMethodDescriptor"; }

 protected:
  explicit QueryMethodDescriptor(::google::protobuf::Arena* arena);
  QueryMethodDescriptor(::google::protobuf::Arena* arena, const QueryMethodDescriptor& from);
  QueryMethodDescriptor(::google::protobuf::Arena* arena, QueryMethodDescriptor&& from) noexcept
      : QueryMethodDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kFullQueryPathFieldNumber = 2,
  };
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string full_query_path = 2 [json_name = "fullQueryPath"];
  void clear_full_query_path() ;
  const std::string& full_query_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_full_query_path(Arg_&& arg, Args_... args);
  std::string* mutable_full_query_path();
  PROTOBUF_NODISCARD std::string* release_full_query_path();
  void set_allocated_full_query_path(std::string* value);

  private:
  const std::string& _internal_full_query_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_full_query_path(
      const std::string& value);
  std::string* _internal_mutable_full_query_path();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryMethodDescriptor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr full_query_path_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class MsgDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.MsgDescriptor) */ {
 public:
  inline MsgDescriptor() : MsgDescriptor(nullptr) {}
  ~MsgDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgDescriptor(const MsgDescriptor& from) : MsgDescriptor(nullptr, from) {}
  inline MsgDescriptor(MsgDescriptor&& from) noexcept
      : MsgDescriptor(nullptr, std::move(from)) {}
  inline MsgDescriptor& operator=(const MsgDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgDescriptor& operator=(MsgDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgDescriptor* internal_default_instance() {
    return reinterpret_cast<const MsgDescriptor*>(
        &_MsgDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(MsgDescriptor& a, MsgDescriptor& b) { a.Swap(&b); }
  inline void Swap(MsgDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgDescriptor& from) { MsgDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.MsgDescriptor"; }

 protected:
  explicit MsgDescriptor(::google::protobuf::Arena* arena);
  MsgDescriptor(::google::protobuf::Arena* arena, const MsgDescriptor& from);
  MsgDescriptor(::google::protobuf::Arena* arena, MsgDescriptor&& from) noexcept
      : MsgDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgTypeUrlFieldNumber = 1,
  };
  // string msg_type_url = 1 [json_name = "msgTypeUrl"];
  void clear_msg_type_url() ;
  const std::string& msg_type_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg_type_url(Arg_&& arg, Args_... args);
  std::string* mutable_msg_type_url();
  PROTOBUF_NODISCARD std::string* release_msg_type_url();
  void set_allocated_msg_type_url(std::string* value);

  private:
  const std::string& _internal_msg_type_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg_type_url(
      const std::string& value);
  std::string* _internal_mutable_msg_type_url();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.MsgDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      66, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgDescriptor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_type_url_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class InterfaceImplementerDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor) */ {
 public:
  inline InterfaceImplementerDescriptor() : InterfaceImplementerDescriptor(nullptr) {}
  ~InterfaceImplementerDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceImplementerDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceImplementerDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceImplementerDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceImplementerDescriptor(const InterfaceImplementerDescriptor& from) : InterfaceImplementerDescriptor(nullptr, from) {}
  inline InterfaceImplementerDescriptor(InterfaceImplementerDescriptor&& from) noexcept
      : InterfaceImplementerDescriptor(nullptr, std::move(from)) {}
  inline InterfaceImplementerDescriptor& operator=(const InterfaceImplementerDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceImplementerDescriptor& operator=(InterfaceImplementerDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceImplementerDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceImplementerDescriptor* internal_default_instance() {
    return reinterpret_cast<const InterfaceImplementerDescriptor*>(
        &_InterfaceImplementerDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(InterfaceImplementerDescriptor& a, InterfaceImplementerDescriptor& b) { a.Swap(&b); }
  inline void Swap(InterfaceImplementerDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceImplementerDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceImplementerDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceImplementerDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceImplementerDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceImplementerDescriptor& from) { InterfaceImplementerDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceImplementerDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor"; }

 protected:
  explicit InterfaceImplementerDescriptor(::google::protobuf::Arena* arena);
  InterfaceImplementerDescriptor(::google::protobuf::Arena* arena, const InterfaceImplementerDescriptor& from);
  InterfaceImplementerDescriptor(::google::protobuf::Arena* arena, InterfaceImplementerDescriptor&& from) noexcept
      : InterfaceImplementerDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFullnameFieldNumber = 1,
    kTypeUrlFieldNumber = 2,
  };
  // string fullname = 1 [json_name = "fullname"];
  void clear_fullname() ;
  const std::string& fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_fullname();
  PROTOBUF_NODISCARD std::string* release_fullname();
  void set_allocated_fullname(std::string* value);

  private:
  const std::string& _internal_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullname(
      const std::string& value);
  std::string* _internal_mutable_fullname();

  public:
  // string type_url = 2 [json_name = "typeUrl"];
  void clear_type_url() ;
  const std::string& type_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type_url(Arg_&& arg, Args_... args);
  std::string* mutable_type_url();
  PROTOBUF_NODISCARD std::string* release_type_url();
  void set_allocated_type_url(std::string* value);

  private:
  const std::string& _internal_type_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_url(
      const std::string& value);
  std::string* _internal_mutable_type_url();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      87, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceImplementerDescriptor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr fullname_;
    ::google::protobuf::internal::ArenaStringPtr type_url_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class InterfaceAcceptingMessageDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor) */ {
 public:
  inline InterfaceAcceptingMessageDescriptor() : InterfaceAcceptingMessageDescriptor(nullptr) {}
  ~InterfaceAcceptingMessageDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceAcceptingMessageDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceAcceptingMessageDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceAcceptingMessageDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceAcceptingMessageDescriptor(const InterfaceAcceptingMessageDescriptor& from) : InterfaceAcceptingMessageDescriptor(nullptr, from) {}
  inline InterfaceAcceptingMessageDescriptor(InterfaceAcceptingMessageDescriptor&& from) noexcept
      : InterfaceAcceptingMessageDescriptor(nullptr, std::move(from)) {}
  inline InterfaceAcceptingMessageDescriptor& operator=(const InterfaceAcceptingMessageDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceAcceptingMessageDescriptor& operator=(InterfaceAcceptingMessageDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceAcceptingMessageDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceAcceptingMessageDescriptor* internal_default_instance() {
    return reinterpret_cast<const InterfaceAcceptingMessageDescriptor*>(
        &_InterfaceAcceptingMessageDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(InterfaceAcceptingMessageDescriptor& a, InterfaceAcceptingMessageDescriptor& b) { a.Swap(&b); }
  inline void Swap(InterfaceAcceptingMessageDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceAcceptingMessageDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceAcceptingMessageDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceAcceptingMessageDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceAcceptingMessageDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceAcceptingMessageDescriptor& from) { InterfaceAcceptingMessageDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceAcceptingMessageDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor"; }

 protected:
  explicit InterfaceAcceptingMessageDescriptor(::google::protobuf::Arena* arena);
  InterfaceAcceptingMessageDescriptor(::google::protobuf::Arena* arena, const InterfaceAcceptingMessageDescriptor& from);
  InterfaceAcceptingMessageDescriptor(::google::protobuf::Arena* arena, InterfaceAcceptingMessageDescriptor&& from) noexcept
      : InterfaceAcceptingMessageDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFieldDescriptorNamesFieldNumber = 2,
    kFullnameFieldNumber = 1,
  };
  // repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];
  int field_descriptor_names_size() const;
  private:
  int _internal_field_descriptor_names_size() const;

  public:
  void clear_field_descriptor_names() ;
  const std::string& field_descriptor_names(int index) const;
  std::string* mutable_field_descriptor_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field_descriptor_names(int index, Arg_&& value, Args_... args);
  std::string* add_field_descriptor_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_field_descriptor_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& field_descriptor_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_field_descriptor_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_field_descriptor_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_field_descriptor_names();

  public:
  // string fullname = 1 [json_name = "fullname"];
  void clear_fullname() ;
  const std::string& fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_fullname();
  PROTOBUF_NODISCARD std::string* release_fullname();
  void set_allocated_fullname(std::string* value);

  private:
  const std::string& _internal_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullname(
      const std::string& value);
  std::string* _internal_mutable_fullname();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      106, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceAcceptingMessageDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> field_descriptor_names_;
    ::google::protobuf::internal::ArenaStringPtr fullname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetTxDescriptorRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest) */ {
 public:
  inline GetTxDescriptorRequest() : GetTxDescriptorRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTxDescriptorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTxDescriptorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTxDescriptorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTxDescriptorRequest(const GetTxDescriptorRequest& from) : GetTxDescriptorRequest(nullptr, from) {}
  inline GetTxDescriptorRequest(GetTxDescriptorRequest&& from) noexcept
      : GetTxDescriptorRequest(nullptr, std::move(from)) {}
  inline GetTxDescriptorRequest& operator=(const GetTxDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTxDescriptorRequest& operator=(GetTxDescriptorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTxDescriptorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTxDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetTxDescriptorRequest*>(
        &_GetTxDescriptorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(GetTxDescriptorRequest& a, GetTxDescriptorRequest& b) { a.Swap(&b); }
  inline void Swap(GetTxDescriptorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTxDescriptorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTxDescriptorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetTxDescriptorRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetTxDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetTxDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest"; }

 protected:
  explicit GetTxDescriptorRequest(::google::protobuf::Arena* arena);
  GetTxDescriptorRequest(::google::protobuf::Arena* arena, const GetTxDescriptorRequest& from);
  GetTxDescriptorRequest(::google::protobuf::Arena* arena, GetTxDescriptorRequest&& from) noexcept
      : GetTxDescriptorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTxDescriptorRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetQueryServicesDescriptorRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest) */ {
 public:
  inline GetQueryServicesDescriptorRequest() : GetQueryServicesDescriptorRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetQueryServicesDescriptorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetQueryServicesDescriptorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetQueryServicesDescriptorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetQueryServicesDescriptorRequest(const GetQueryServicesDescriptorRequest& from) : GetQueryServicesDescriptorRequest(nullptr, from) {}
  inline GetQueryServicesDescriptorRequest(GetQueryServicesDescriptorRequest&& from) noexcept
      : GetQueryServicesDescriptorRequest(nullptr, std::move(from)) {}
  inline GetQueryServicesDescriptorRequest& operator=(const GetQueryServicesDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetQueryServicesDescriptorRequest& operator=(GetQueryServicesDescriptorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetQueryServicesDescriptorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetQueryServicesDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetQueryServicesDescriptorRequest*>(
        &_GetQueryServicesDescriptorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetQueryServicesDescriptorRequest& a, GetQueryServicesDescriptorRequest& b) { a.Swap(&b); }
  inline void Swap(GetQueryServicesDescriptorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetQueryServicesDescriptorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetQueryServicesDescriptorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetQueryServicesDescriptorRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetQueryServicesDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetQueryServicesDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest"; }

 protected:
  explicit GetQueryServicesDescriptorRequest(::google::protobuf::Arena* arena);
  GetQueryServicesDescriptorRequest(::google::protobuf::Arena* arena, const GetQueryServicesDescriptorRequest& from);
  GetQueryServicesDescriptorRequest(::google::protobuf::Arena* arena, GetQueryServicesDescriptorRequest&& from) noexcept
      : GetQueryServicesDescriptorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetQueryServicesDescriptorRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetConfigurationDescriptorRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest) */ {
 public:
  inline GetConfigurationDescriptorRequest() : GetConfigurationDescriptorRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConfigurationDescriptorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConfigurationDescriptorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigurationDescriptorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetConfigurationDescriptorRequest(const GetConfigurationDescriptorRequest& from) : GetConfigurationDescriptorRequest(nullptr, from) {}
  inline GetConfigurationDescriptorRequest(GetConfigurationDescriptorRequest&& from) noexcept
      : GetConfigurationDescriptorRequest(nullptr, std::move(from)) {}
  inline GetConfigurationDescriptorRequest& operator=(const GetConfigurationDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigurationDescriptorRequest& operator=(GetConfigurationDescriptorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigurationDescriptorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigurationDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfigurationDescriptorRequest*>(
        &_GetConfigurationDescriptorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetConfigurationDescriptorRequest& a, GetConfigurationDescriptorRequest& b) { a.Swap(&b); }
  inline void Swap(GetConfigurationDescriptorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigurationDescriptorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigurationDescriptorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetConfigurationDescriptorRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetConfigurationDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetConfigurationDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest"; }

 protected:
  explicit GetConfigurationDescriptorRequest(::google::protobuf::Arena* arena);
  GetConfigurationDescriptorRequest(::google::protobuf::Arena* arena, const GetConfigurationDescriptorRequest& from);
  GetConfigurationDescriptorRequest(::google::protobuf::Arena* arena, GetConfigurationDescriptorRequest&& from) noexcept
      : GetConfigurationDescriptorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetConfigurationDescriptorRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetCodecDescriptorRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest) */ {
 public:
  inline GetCodecDescriptorRequest() : GetCodecDescriptorRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCodecDescriptorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCodecDescriptorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCodecDescriptorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCodecDescriptorRequest(const GetCodecDescriptorRequest& from) : GetCodecDescriptorRequest(nullptr, from) {}
  inline GetCodecDescriptorRequest(GetCodecDescriptorRequest&& from) noexcept
      : GetCodecDescriptorRequest(nullptr, std::move(from)) {}
  inline GetCodecDescriptorRequest& operator=(const GetCodecDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCodecDescriptorRequest& operator=(GetCodecDescriptorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCodecDescriptorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCodecDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetCodecDescriptorRequest*>(
        &_GetCodecDescriptorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(GetCodecDescriptorRequest& a, GetCodecDescriptorRequest& b) { a.Swap(&b); }
  inline void Swap(GetCodecDescriptorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCodecDescriptorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCodecDescriptorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetCodecDescriptorRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetCodecDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetCodecDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest"; }

 protected:
  explicit GetCodecDescriptorRequest(::google::protobuf::Arena* arena);
  GetCodecDescriptorRequest(::google::protobuf::Arena* arena, const GetCodecDescriptorRequest& from);
  GetCodecDescriptorRequest(::google::protobuf::Arena* arena, GetCodecDescriptorRequest&& from) noexcept
      : GetCodecDescriptorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCodecDescriptorRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetChainDescriptorRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest) */ {
 public:
  inline GetChainDescriptorRequest() : GetChainDescriptorRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChainDescriptorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChainDescriptorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChainDescriptorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChainDescriptorRequest(const GetChainDescriptorRequest& from) : GetChainDescriptorRequest(nullptr, from) {}
  inline GetChainDescriptorRequest(GetChainDescriptorRequest&& from) noexcept
      : GetChainDescriptorRequest(nullptr, std::move(from)) {}
  inline GetChainDescriptorRequest& operator=(const GetChainDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChainDescriptorRequest& operator=(GetChainDescriptorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChainDescriptorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChainDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetChainDescriptorRequest*>(
        &_GetChainDescriptorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(GetChainDescriptorRequest& a, GetChainDescriptorRequest& b) { a.Swap(&b); }
  inline void Swap(GetChainDescriptorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChainDescriptorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChainDescriptorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetChainDescriptorRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetChainDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetChainDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest"; }

 protected:
  explicit GetChainDescriptorRequest(::google::protobuf::Arena* arena);
  GetChainDescriptorRequest(::google::protobuf::Arena* arena, const GetChainDescriptorRequest& from);
  GetChainDescriptorRequest(::google::protobuf::Arena* arena, GetChainDescriptorRequest&& from) noexcept
      : GetChainDescriptorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChainDescriptorRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetAuthnDescriptorRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest) */ {
 public:
  inline GetAuthnDescriptorRequest() : GetAuthnDescriptorRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAuthnDescriptorRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAuthnDescriptorRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAuthnDescriptorRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAuthnDescriptorRequest(const GetAuthnDescriptorRequest& from) : GetAuthnDescriptorRequest(nullptr, from) {}
  inline GetAuthnDescriptorRequest(GetAuthnDescriptorRequest&& from) noexcept
      : GetAuthnDescriptorRequest(nullptr, std::move(from)) {}
  inline GetAuthnDescriptorRequest& operator=(const GetAuthnDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAuthnDescriptorRequest& operator=(GetAuthnDescriptorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAuthnDescriptorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAuthnDescriptorRequest* internal_default_instance() {
    return reinterpret_cast<const GetAuthnDescriptorRequest*>(
        &_GetAuthnDescriptorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetAuthnDescriptorRequest& a, GetAuthnDescriptorRequest& b) { a.Swap(&b); }
  inline void Swap(GetAuthnDescriptorRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAuthnDescriptorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAuthnDescriptorRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetAuthnDescriptorRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetAuthnDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetAuthnDescriptorRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest"; }

 protected:
  explicit GetAuthnDescriptorRequest(::google::protobuf::Arena* arena);
  GetAuthnDescriptorRequest(::google::protobuf::Arena* arena, const GetAuthnDescriptorRequest& from);
  GetAuthnDescriptorRequest(::google::protobuf::Arena* arena, GetAuthnDescriptorRequest&& from) noexcept
      : GetAuthnDescriptorRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAuthnDescriptorRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class ConfigurationDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor) */ {
 public:
  inline ConfigurationDescriptor() : ConfigurationDescriptor(nullptr) {}
  ~ConfigurationDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConfigurationDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConfigurationDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConfigurationDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConfigurationDescriptor(const ConfigurationDescriptor& from) : ConfigurationDescriptor(nullptr, from) {}
  inline ConfigurationDescriptor(ConfigurationDescriptor&& from) noexcept
      : ConfigurationDescriptor(nullptr, std::move(from)) {}
  inline ConfigurationDescriptor& operator=(const ConfigurationDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfigurationDescriptor& operator=(ConfigurationDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfigurationDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConfigurationDescriptor* internal_default_instance() {
    return reinterpret_cast<const ConfigurationDescriptor*>(
        &_ConfigurationDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ConfigurationDescriptor& a, ConfigurationDescriptor& b) { a.Swap(&b); }
  inline void Swap(ConfigurationDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfigurationDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfigurationDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConfigurationDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConfigurationDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConfigurationDescriptor& from) { ConfigurationDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConfigurationDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.ConfigurationDescriptor"; }

 protected:
  explicit ConfigurationDescriptor(::google::protobuf::Arena* arena);
  ConfigurationDescriptor(::google::protobuf::Arena* arena, const ConfigurationDescriptor& from);
  ConfigurationDescriptor(::google::protobuf::Arena* arena, ConfigurationDescriptor&& from) noexcept
      : ConfigurationDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBech32AccountAddressPrefixFieldNumber = 1,
  };
  // string bech32_account_address_prefix = 1 [json_name = "bech32AccountAddressPrefix"];
  void clear_bech32_account_address_prefix() ;
  const std::string& bech32_account_address_prefix() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bech32_account_address_prefix(Arg_&& arg, Args_... args);
  std::string* mutable_bech32_account_address_prefix();
  PROTOBUF_NODISCARD std::string* release_bech32_account_address_prefix();
  void set_allocated_bech32_account_address_prefix(std::string* value);

  private:
  const std::string& _internal_bech32_account_address_prefix() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bech32_account_address_prefix(
      const std::string& value);
  std::string* _internal_mutable_bech32_account_address_prefix();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      93, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConfigurationDescriptor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bech32_account_address_prefix_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class ChainDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.ChainDescriptor) */ {
 public:
  inline ChainDescriptor() : ChainDescriptor(nullptr) {}
  ~ChainDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ChainDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ChainDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChainDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChainDescriptor(const ChainDescriptor& from) : ChainDescriptor(nullptr, from) {}
  inline ChainDescriptor(ChainDescriptor&& from) noexcept
      : ChainDescriptor(nullptr, std::move(from)) {}
  inline ChainDescriptor& operator=(const ChainDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChainDescriptor& operator=(ChainDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChainDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChainDescriptor* internal_default_instance() {
    return reinterpret_cast<const ChainDescriptor*>(
        &_ChainDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ChainDescriptor& a, ChainDescriptor& b) { a.Swap(&b); }
  inline void Swap(ChainDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChainDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChainDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ChainDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChainDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChainDescriptor& from) { ChainDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ChainDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.ChainDescriptor"; }

 protected:
  explicit ChainDescriptor(::google::protobuf::Arena* arena);
  ChainDescriptor(::google::protobuf::Arena* arena, const ChainDescriptor& from);
  ChainDescriptor(::google::protobuf::Arena* arena, ChainDescriptor&& from) noexcept
      : ChainDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.ChainDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChainDescriptor& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class TxDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.TxDescriptor) */ {
 public:
  inline TxDescriptor() : TxDescriptor(nullptr) {}
  ~TxDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TxDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TxDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxDescriptor(const TxDescriptor& from) : TxDescriptor(nullptr, from) {}
  inline TxDescriptor(TxDescriptor&& from) noexcept
      : TxDescriptor(nullptr, std::move(from)) {}
  inline TxDescriptor& operator=(const TxDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxDescriptor& operator=(TxDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxDescriptor* internal_default_instance() {
    return reinterpret_cast<const TxDescriptor*>(
        &_TxDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TxDescriptor& a, TxDescriptor& b) { a.Swap(&b); }
  inline void Swap(TxDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TxDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxDescriptor& from) { TxDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TxDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.TxDescriptor"; }

 protected:
  explicit TxDescriptor(::google::protobuf::Arena* arena);
  TxDescriptor(::google::protobuf::Arena* arena, const TxDescriptor& from);
  TxDescriptor(::google::protobuf::Arena* arena, TxDescriptor&& from) noexcept
      : TxDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgsFieldNumber = 2,
    kFullnameFieldNumber = 1,
  };
  // repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];
  int msgs_size() const;
  private:
  int _internal_msgs_size() const;

  public:
  void clear_msgs() ;
  ::cosmos::base::reflection::v2alpha1::MsgDescriptor* mutable_msgs(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>* mutable_msgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>& _internal_msgs() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>* _internal_mutable_msgs();
  public:
  const ::cosmos::base::reflection::v2alpha1::MsgDescriptor& msgs(int index) const;
  ::cosmos::base::reflection::v2alpha1::MsgDescriptor* add_msgs();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>& msgs() const;
  // string fullname = 1 [json_name = "fullname"];
  void clear_fullname() ;
  const std::string& fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_fullname();
  PROTOBUF_NODISCARD std::string* release_fullname();
  void set_allocated_fullname(std::string* value);

  private:
  const std::string& _internal_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullname(
      const std::string& value);
  std::string* _internal_mutable_fullname();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.TxDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      61, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::reflection::v2alpha1::MsgDescriptor > msgs_;
    ::google::protobuf::internal::ArenaStringPtr fullname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class QueryServiceDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor) */ {
 public:
  inline QueryServiceDescriptor() : QueryServiceDescriptor(nullptr) {}
  ~QueryServiceDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryServiceDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryServiceDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryServiceDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryServiceDescriptor(const QueryServiceDescriptor& from) : QueryServiceDescriptor(nullptr, from) {}
  inline QueryServiceDescriptor(QueryServiceDescriptor&& from) noexcept
      : QueryServiceDescriptor(nullptr, std::move(from)) {}
  inline QueryServiceDescriptor& operator=(const QueryServiceDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryServiceDescriptor& operator=(QueryServiceDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryServiceDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryServiceDescriptor* internal_default_instance() {
    return reinterpret_cast<const QueryServiceDescriptor*>(
        &_QueryServiceDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(QueryServiceDescriptor& a, QueryServiceDescriptor& b) { a.Swap(&b); }
  inline void Swap(QueryServiceDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryServiceDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryServiceDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryServiceDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryServiceDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryServiceDescriptor& from) { QueryServiceDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryServiceDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.QueryServiceDescriptor"; }

 protected:
  explicit QueryServiceDescriptor(::google::protobuf::Arena* arena);
  QueryServiceDescriptor(::google::protobuf::Arena* arena, const QueryServiceDescriptor& from);
  QueryServiceDescriptor(::google::protobuf::Arena* arena, QueryServiceDescriptor&& from) noexcept
      : QueryServiceDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMethodsFieldNumber = 3,
    kFullnameFieldNumber = 1,
    kIsModuleFieldNumber = 2,
  };
  // repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];
  int methods_size() const;
  private:
  int _internal_methods_size() const;

  public:
  void clear_methods() ;
  ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor* mutable_methods(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>* mutable_methods();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>& _internal_methods() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>* _internal_mutable_methods();
  public:
  const ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor& methods(int index) const;
  ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor* add_methods();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>& methods() const;
  // string fullname = 1 [json_name = "fullname"];
  void clear_fullname() ;
  const std::string& fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_fullname();
  PROTOBUF_NODISCARD std::string* release_fullname();
  void set_allocated_fullname(std::string* value);

  private:
  const std::string& _internal_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullname(
      const std::string& value);
  std::string* _internal_mutable_fullname();

  public:
  // bool is_module = 2 [json_name = "isModule"];
  void clear_is_module() ;
  bool is_module() const;
  void set_is_module(bool value);

  private:
  bool _internal_is_module() const;
  void _internal_set_is_module(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      71, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryServiceDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor > methods_;
    ::google::protobuf::internal::ArenaStringPtr fullname_;
    bool is_module_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class InterfaceDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.InterfaceDescriptor) */ {
 public:
  inline InterfaceDescriptor() : InterfaceDescriptor(nullptr) {}
  ~InterfaceDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InterfaceDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InterfaceDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterfaceDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterfaceDescriptor(const InterfaceDescriptor& from) : InterfaceDescriptor(nullptr, from) {}
  inline InterfaceDescriptor(InterfaceDescriptor&& from) noexcept
      : InterfaceDescriptor(nullptr, std::move(from)) {}
  inline InterfaceDescriptor& operator=(const InterfaceDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterfaceDescriptor& operator=(InterfaceDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterfaceDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterfaceDescriptor* internal_default_instance() {
    return reinterpret_cast<const InterfaceDescriptor*>(
        &_InterfaceDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(InterfaceDescriptor& a, InterfaceDescriptor& b) { a.Swap(&b); }
  inline void Swap(InterfaceDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterfaceDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterfaceDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InterfaceDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterfaceDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterfaceDescriptor& from) { InterfaceDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InterfaceDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.InterfaceDescriptor"; }

 protected:
  explicit InterfaceDescriptor(::google::protobuf::Arena* arena);
  InterfaceDescriptor(::google::protobuf::Arena* arena, const InterfaceDescriptor& from);
  InterfaceDescriptor(::google::protobuf::Arena* arena, InterfaceDescriptor&& from) noexcept
      : InterfaceDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceAcceptingMessagesFieldNumber = 2,
    kInterfaceImplementersFieldNumber = 3,
    kFullnameFieldNumber = 1,
  };
  // repeated .cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor interface_accepting_messages = 2 [json_name = "interfaceAcceptingMessages"];
  int interface_accepting_messages_size() const;
  private:
  int _internal_interface_accepting_messages_size() const;

  public:
  void clear_interface_accepting_messages() ;
  ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor* mutable_interface_accepting_messages(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>* mutable_interface_accepting_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>& _internal_interface_accepting_messages() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>* _internal_mutable_interface_accepting_messages();
  public:
  const ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor& interface_accepting_messages(int index) const;
  ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor* add_interface_accepting_messages();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>& interface_accepting_messages() const;
  // repeated .cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor interface_implementers = 3 [json_name = "interfaceImplementers"];
  int interface_implementers_size() const;
  private:
  int _internal_interface_implementers_size() const;

  public:
  void clear_interface_implementers() ;
  ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor* mutable_interface_implementers(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>* mutable_interface_implementers();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>& _internal_interface_implementers() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>* _internal_mutable_interface_implementers();
  public:
  const ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor& interface_implementers(int index) const;
  ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor* add_interface_implementers();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>& interface_implementers() const;
  // string fullname = 1 [json_name = "fullname"];
  void clear_fullname() ;
  const std::string& fullname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullname(Arg_&& arg, Args_... args);
  std::string* mutable_fullname();
  PROTOBUF_NODISCARD std::string* release_fullname();
  void set_allocated_fullname(std::string* value);

  private:
  const std::string& _internal_fullname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullname(
      const std::string& value);
  std::string* _internal_mutable_fullname();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.InterfaceDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      68, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterfaceDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor > interface_accepting_messages_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor > interface_implementers_;
    ::google::protobuf::internal::ArenaStringPtr fullname_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetConfigurationDescriptorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse) */ {
 public:
  inline GetConfigurationDescriptorResponse() : GetConfigurationDescriptorResponse(nullptr) {}
  ~GetConfigurationDescriptorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConfigurationDescriptorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConfigurationDescriptorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigurationDescriptorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetConfigurationDescriptorResponse(const GetConfigurationDescriptorResponse& from) : GetConfigurationDescriptorResponse(nullptr, from) {}
  inline GetConfigurationDescriptorResponse(GetConfigurationDescriptorResponse&& from) noexcept
      : GetConfigurationDescriptorResponse(nullptr, std::move(from)) {}
  inline GetConfigurationDescriptorResponse& operator=(const GetConfigurationDescriptorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigurationDescriptorResponse& operator=(GetConfigurationDescriptorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigurationDescriptorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigurationDescriptorResponse* internal_default_instance() {
    return reinterpret_cast<const GetConfigurationDescriptorResponse*>(
        &_GetConfigurationDescriptorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetConfigurationDescriptorResponse& a, GetConfigurationDescriptorResponse& b) { a.Swap(&b); }
  inline void Swap(GetConfigurationDescriptorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigurationDescriptorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigurationDescriptorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConfigurationDescriptorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConfigurationDescriptorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConfigurationDescriptorResponse& from) { GetConfigurationDescriptorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConfigurationDescriptorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse"; }

 protected:
  explicit GetConfigurationDescriptorResponse(::google::protobuf::Arena* arena);
  GetConfigurationDescriptorResponse(::google::protobuf::Arena* arena, const GetConfigurationDescriptorResponse& from);
  GetConfigurationDescriptorResponse(::google::protobuf::Arena* arena, GetConfigurationDescriptorResponse&& from) noexcept
      : GetConfigurationDescriptorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfigFieldNumber = 1,
  };
  // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor config = 1 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& config() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* release_config();
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* mutable_config();
  void set_allocated_config(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value);
  void unsafe_arena_set_allocated_config(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* unsafe_arena_release_config();

  private:
  const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& _internal_config() const;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* _internal_mutable_config();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetConfigurationDescriptorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* config_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetChainDescriptorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse) */ {
 public:
  inline GetChainDescriptorResponse() : GetChainDescriptorResponse(nullptr) {}
  ~GetChainDescriptorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetChainDescriptorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetChainDescriptorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetChainDescriptorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetChainDescriptorResponse(const GetChainDescriptorResponse& from) : GetChainDescriptorResponse(nullptr, from) {}
  inline GetChainDescriptorResponse(GetChainDescriptorResponse&& from) noexcept
      : GetChainDescriptorResponse(nullptr, std::move(from)) {}
  inline GetChainDescriptorResponse& operator=(const GetChainDescriptorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetChainDescriptorResponse& operator=(GetChainDescriptorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetChainDescriptorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetChainDescriptorResponse* internal_default_instance() {
    return reinterpret_cast<const GetChainDescriptorResponse*>(
        &_GetChainDescriptorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(GetChainDescriptorResponse& a, GetChainDescriptorResponse& b) { a.Swap(&b); }
  inline void Swap(GetChainDescriptorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetChainDescriptorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetChainDescriptorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetChainDescriptorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetChainDescriptorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetChainDescriptorResponse& from) { GetChainDescriptorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetChainDescriptorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse"; }

 protected:
  explicit GetChainDescriptorResponse(::google::protobuf::Arena* arena);
  GetChainDescriptorResponse(::google::protobuf::Arena* arena, const GetChainDescriptorResponse& from);
  GetChainDescriptorResponse(::google::protobuf::Arena* arena, GetChainDescriptorResponse&& from) noexcept
      : GetChainDescriptorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChainFieldNumber = 1,
  };
  // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 1 [json_name = "chain"];
  bool has_chain() const;
  void clear_chain() ;
  const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& chain() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::ChainDescriptor* release_chain();
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* mutable_chain();
  void set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value);
  void unsafe_arena_set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* unsafe_arena_release_chain();

  private:
  const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& _internal_chain() const;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* _internal_mutable_chain();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetChainDescriptorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::reflection::v2alpha1::ChainDescriptor* chain_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class AuthnDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.AuthnDescriptor) */ {
 public:
  inline AuthnDescriptor() : AuthnDescriptor(nullptr) {}
  ~AuthnDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AuthnDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AuthnDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AuthnDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline AuthnDescriptor(const AuthnDescriptor& from) : AuthnDescriptor(nullptr, from) {}
  inline AuthnDescriptor(AuthnDescriptor&& from) noexcept
      : AuthnDescriptor(nullptr, std::move(from)) {}
  inline AuthnDescriptor& operator=(const AuthnDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline AuthnDescriptor& operator=(AuthnDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AuthnDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const AuthnDescriptor* internal_default_instance() {
    return reinterpret_cast<const AuthnDescriptor*>(
        &_AuthnDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(AuthnDescriptor& a, AuthnDescriptor& b) { a.Swap(&b); }
  inline void Swap(AuthnDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AuthnDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AuthnDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AuthnDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AuthnDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AuthnDescriptor& from) { AuthnDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AuthnDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.AuthnDescriptor"; }

 protected:
  explicit AuthnDescriptor(::google::protobuf::Arena* arena);
  AuthnDescriptor(::google::protobuf::Arena* arena, const AuthnDescriptor& from);
  AuthnDescriptor(::google::protobuf::Arena* arena, AuthnDescriptor&& from) noexcept
      : AuthnDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignModesFieldNumber = 1,
  };
  // repeated .cosmos.base.reflection.v2alpha1.SigningModeDescriptor sign_modes = 1 [json_name = "signModes"];
  int sign_modes_size() const;
  private:
  int _internal_sign_modes_size() const;

  public:
  void clear_sign_modes() ;
  ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor* mutable_sign_modes(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>* mutable_sign_modes();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>& _internal_sign_modes() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>* _internal_mutable_sign_modes();
  public:
  const ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor& sign_modes(int index) const;
  ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor* add_sign_modes();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>& sign_modes() const;
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.AuthnDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AuthnDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor > sign_modes_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class QueryServicesDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor) */ {
 public:
  inline QueryServicesDescriptor() : QueryServicesDescriptor(nullptr) {}
  ~QueryServicesDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryServicesDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryServicesDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryServicesDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryServicesDescriptor(const QueryServicesDescriptor& from) : QueryServicesDescriptor(nullptr, from) {}
  inline QueryServicesDescriptor(QueryServicesDescriptor&& from) noexcept
      : QueryServicesDescriptor(nullptr, std::move(from)) {}
  inline QueryServicesDescriptor& operator=(const QueryServicesDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryServicesDescriptor& operator=(QueryServicesDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryServicesDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryServicesDescriptor* internal_default_instance() {
    return reinterpret_cast<const QueryServicesDescriptor*>(
        &_QueryServicesDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(QueryServicesDescriptor& a, QueryServicesDescriptor& b) { a.Swap(&b); }
  inline void Swap(QueryServicesDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryServicesDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryServicesDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryServicesDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryServicesDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryServicesDescriptor& from) { QueryServicesDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryServicesDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.QueryServicesDescriptor"; }

 protected:
  explicit QueryServicesDescriptor(::google::protobuf::Arena* arena);
  QueryServicesDescriptor(::google::protobuf::Arena* arena, const QueryServicesDescriptor& from);
  QueryServicesDescriptor(::google::protobuf::Arena* arena, QueryServicesDescriptor&& from) noexcept
      : QueryServicesDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueryServicesFieldNumber = 1,
  };
  // repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];
  int query_services_size() const;
  private:
  int _internal_query_services_size() const;

  public:
  void clear_query_services() ;
  ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor* mutable_query_services(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>* mutable_query_services();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>& _internal_query_services() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>* _internal_mutable_query_services();
  public:
  const ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor& query_services(int index) const;
  ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor* add_query_services();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>& query_services() const;
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryServicesDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor > query_services_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetTxDescriptorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse) */ {
 public:
  inline GetTxDescriptorResponse() : GetTxDescriptorResponse(nullptr) {}
  ~GetTxDescriptorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetTxDescriptorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetTxDescriptorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTxDescriptorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTxDescriptorResponse(const GetTxDescriptorResponse& from) : GetTxDescriptorResponse(nullptr, from) {}
  inline GetTxDescriptorResponse(GetTxDescriptorResponse&& from) noexcept
      : GetTxDescriptorResponse(nullptr, std::move(from)) {}
  inline GetTxDescriptorResponse& operator=(const GetTxDescriptorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTxDescriptorResponse& operator=(GetTxDescriptorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTxDescriptorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTxDescriptorResponse* internal_default_instance() {
    return reinterpret_cast<const GetTxDescriptorResponse*>(
        &_GetTxDescriptorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(GetTxDescriptorResponse& a, GetTxDescriptorResponse& b) { a.Swap(&b); }
  inline void Swap(GetTxDescriptorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTxDescriptorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTxDescriptorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetTxDescriptorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTxDescriptorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTxDescriptorResponse& from) { GetTxDescriptorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetTxDescriptorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse"; }

 protected:
  explicit GetTxDescriptorResponse(::google::protobuf::Arena* arena);
  GetTxDescriptorResponse(::google::protobuf::Arena* arena, const GetTxDescriptorResponse& from);
  GetTxDescriptorResponse(::google::protobuf::Arena* arena, GetTxDescriptorResponse&& from) noexcept
      : GetTxDescriptorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxFieldNumber = 1,
  };
  // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];
  bool has_tx() const;
  void clear_tx() ;
  const ::cosmos::base::reflection::v2alpha1::TxDescriptor& tx() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::TxDescriptor* release_tx();
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* mutable_tx();
  void set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value);
  void unsafe_arena_set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* unsafe_arena_release_tx();

  private:
  const ::cosmos::base::reflection::v2alpha1::TxDescriptor& _internal_tx() const;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* _internal_mutable_tx();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTxDescriptorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::reflection::v2alpha1::TxDescriptor* tx_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetAuthnDescriptorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse) */ {
 public:
  inline GetAuthnDescriptorResponse() : GetAuthnDescriptorResponse(nullptr) {}
  ~GetAuthnDescriptorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAuthnDescriptorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAuthnDescriptorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAuthnDescriptorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAuthnDescriptorResponse(const GetAuthnDescriptorResponse& from) : GetAuthnDescriptorResponse(nullptr, from) {}
  inline GetAuthnDescriptorResponse(GetAuthnDescriptorResponse&& from) noexcept
      : GetAuthnDescriptorResponse(nullptr, std::move(from)) {}
  inline GetAuthnDescriptorResponse& operator=(const GetAuthnDescriptorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAuthnDescriptorResponse& operator=(GetAuthnDescriptorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAuthnDescriptorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAuthnDescriptorResponse* internal_default_instance() {
    return reinterpret_cast<const GetAuthnDescriptorResponse*>(
        &_GetAuthnDescriptorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetAuthnDescriptorResponse& a, GetAuthnDescriptorResponse& b) { a.Swap(&b); }
  inline void Swap(GetAuthnDescriptorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAuthnDescriptorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAuthnDescriptorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetAuthnDescriptorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetAuthnDescriptorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetAuthnDescriptorResponse& from) { GetAuthnDescriptorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetAuthnDescriptorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse"; }

 protected:
  explicit GetAuthnDescriptorResponse(::google::protobuf::Arena* arena);
  GetAuthnDescriptorResponse(::google::protobuf::Arena* arena, const GetAuthnDescriptorResponse& from);
  GetAuthnDescriptorResponse(::google::protobuf::Arena* arena, GetAuthnDescriptorResponse&& from) noexcept
      : GetAuthnDescriptorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthnFieldNumber = 1,
  };
  // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
  bool has_authn() const;
  void clear_authn() ;
  const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& authn() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* release_authn();
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* mutable_authn();
  void set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value);
  void unsafe_arena_set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* unsafe_arena_release_authn();

  private:
  const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& _internal_authn() const;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* _internal_mutable_authn();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAuthnDescriptorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* authn_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class CodecDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.CodecDescriptor) */ {
 public:
  inline CodecDescriptor() : CodecDescriptor(nullptr) {}
  ~CodecDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CodecDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CodecDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CodecDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline CodecDescriptor(const CodecDescriptor& from) : CodecDescriptor(nullptr, from) {}
  inline CodecDescriptor(CodecDescriptor&& from) noexcept
      : CodecDescriptor(nullptr, std::move(from)) {}
  inline CodecDescriptor& operator=(const CodecDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline CodecDescriptor& operator=(CodecDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CodecDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const CodecDescriptor* internal_default_instance() {
    return reinterpret_cast<const CodecDescriptor*>(
        &_CodecDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CodecDescriptor& a, CodecDescriptor& b) { a.Swap(&b); }
  inline void Swap(CodecDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CodecDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CodecDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CodecDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CodecDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CodecDescriptor& from) { CodecDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CodecDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.CodecDescriptor"; }

 protected:
  explicit CodecDescriptor(::google::protobuf::Arena* arena);
  CodecDescriptor(::google::protobuf::Arena* arena, const CodecDescriptor& from);
  CodecDescriptor(::google::protobuf::Arena* arena, CodecDescriptor&& from) noexcept
      : CodecDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfacesFieldNumber = 1,
  };
  // repeated .cosmos.base.reflection.v2alpha1.InterfaceDescriptor interfaces = 1 [json_name = "interfaces"];
  int interfaces_size() const;
  private:
  int _internal_interfaces_size() const;

  public:
  void clear_interfaces() ;
  ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor* mutable_interfaces(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>* mutable_interfaces();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>& _internal_interfaces() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>* _internal_mutable_interfaces();
  public:
  const ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor& interfaces(int index) const;
  ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor* add_interfaces();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>& interfaces() const;
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.CodecDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CodecDescriptor& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor > interfaces_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetQueryServicesDescriptorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse) */ {
 public:
  inline GetQueryServicesDescriptorResponse() : GetQueryServicesDescriptorResponse(nullptr) {}
  ~GetQueryServicesDescriptorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetQueryServicesDescriptorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetQueryServicesDescriptorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetQueryServicesDescriptorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetQueryServicesDescriptorResponse(const GetQueryServicesDescriptorResponse& from) : GetQueryServicesDescriptorResponse(nullptr, from) {}
  inline GetQueryServicesDescriptorResponse(GetQueryServicesDescriptorResponse&& from) noexcept
      : GetQueryServicesDescriptorResponse(nullptr, std::move(from)) {}
  inline GetQueryServicesDescriptorResponse& operator=(const GetQueryServicesDescriptorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetQueryServicesDescriptorResponse& operator=(GetQueryServicesDescriptorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetQueryServicesDescriptorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetQueryServicesDescriptorResponse* internal_default_instance() {
    return reinterpret_cast<const GetQueryServicesDescriptorResponse*>(
        &_GetQueryServicesDescriptorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(GetQueryServicesDescriptorResponse& a, GetQueryServicesDescriptorResponse& b) { a.Swap(&b); }
  inline void Swap(GetQueryServicesDescriptorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetQueryServicesDescriptorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetQueryServicesDescriptorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetQueryServicesDescriptorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetQueryServicesDescriptorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetQueryServicesDescriptorResponse& from) { GetQueryServicesDescriptorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetQueryServicesDescriptorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse"; }

 protected:
  explicit GetQueryServicesDescriptorResponse(::google::protobuf::Arena* arena);
  GetQueryServicesDescriptorResponse(::google::protobuf::Arena* arena, const GetQueryServicesDescriptorResponse& from);
  GetQueryServicesDescriptorResponse(::google::protobuf::Arena* arena, GetQueryServicesDescriptorResponse&& from) noexcept
      : GetQueryServicesDescriptorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kQueriesFieldNumber = 1,
  };
  // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor queries = 1 [json_name = "queries"];
  bool has_queries() const;
  void clear_queries() ;
  const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& queries() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* release_queries();
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* mutable_queries();
  void set_allocated_queries(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value);
  void unsafe_arena_set_allocated_queries(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* unsafe_arena_release_queries();

  private:
  const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& _internal_queries() const;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* _internal_mutable_queries();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetQueryServicesDescriptorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* queries_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class GetCodecDescriptorResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse) */ {
 public:
  inline GetCodecDescriptorResponse() : GetCodecDescriptorResponse(nullptr) {}
  ~GetCodecDescriptorResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetCodecDescriptorResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetCodecDescriptorResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetCodecDescriptorResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetCodecDescriptorResponse(const GetCodecDescriptorResponse& from) : GetCodecDescriptorResponse(nullptr, from) {}
  inline GetCodecDescriptorResponse(GetCodecDescriptorResponse&& from) noexcept
      : GetCodecDescriptorResponse(nullptr, std::move(from)) {}
  inline GetCodecDescriptorResponse& operator=(const GetCodecDescriptorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetCodecDescriptorResponse& operator=(GetCodecDescriptorResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetCodecDescriptorResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetCodecDescriptorResponse* internal_default_instance() {
    return reinterpret_cast<const GetCodecDescriptorResponse*>(
        &_GetCodecDescriptorResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(GetCodecDescriptorResponse& a, GetCodecDescriptorResponse& b) { a.Swap(&b); }
  inline void Swap(GetCodecDescriptorResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetCodecDescriptorResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetCodecDescriptorResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetCodecDescriptorResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetCodecDescriptorResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetCodecDescriptorResponse& from) { GetCodecDescriptorResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetCodecDescriptorResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse"; }

 protected:
  explicit GetCodecDescriptorResponse(::google::protobuf::Arena* arena);
  GetCodecDescriptorResponse(::google::protobuf::Arena* arena, const GetCodecDescriptorResponse& from);
  GetCodecDescriptorResponse(::google::protobuf::Arena* arena, GetCodecDescriptorResponse&& from) noexcept
      : GetCodecDescriptorResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodecFieldNumber = 1,
  };
  // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 1 [json_name = "codec"];
  bool has_codec() const;
  void clear_codec() ;
  const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& codec() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::CodecDescriptor* release_codec();
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* mutable_codec();
  void set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value);
  void unsafe_arena_set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* unsafe_arena_release_codec();

  private:
  const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& _internal_codec() const;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* _internal_mutable_codec();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetCodecDescriptorResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::reflection::v2alpha1::CodecDescriptor* codec_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class AppDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v2alpha1.AppDescriptor) */ {
 public:
  inline AppDescriptor() : AppDescriptor(nullptr) {}
  ~AppDescriptor() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AppDescriptor* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AppDescriptor));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AppDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline AppDescriptor(const AppDescriptor& from) : AppDescriptor(nullptr, from) {}
  inline AppDescriptor(AppDescriptor&& from) noexcept
      : AppDescriptor(nullptr, std::move(from)) {}
  inline AppDescriptor& operator=(const AppDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline AppDescriptor& operator=(AppDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AppDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const AppDescriptor* internal_default_instance() {
    return reinterpret_cast<const AppDescriptor*>(
        &_AppDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AppDescriptor& a, AppDescriptor& b) { a.Swap(&b); }
  inline void Swap(AppDescriptor* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AppDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AppDescriptor* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AppDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AppDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AppDescriptor& from) { AppDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AppDescriptor* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v2alpha1.AppDescriptor"; }

 protected:
  explicit AppDescriptor(::google::protobuf::Arena* arena);
  AppDescriptor(::google::protobuf::Arena* arena, const AppDescriptor& from);
  AppDescriptor(::google::protobuf::Arena* arena, AppDescriptor&& from) noexcept
      : AppDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAuthnFieldNumber = 1,
    kChainFieldNumber = 2,
    kCodecFieldNumber = 3,
    kConfigurationFieldNumber = 4,
    kQueryServicesFieldNumber = 5,
    kTxFieldNumber = 6,
  };
  // .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
  bool has_authn() const;
  void clear_authn() ;
  const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& authn() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* release_authn();
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* mutable_authn();
  void set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value);
  void unsafe_arena_set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* unsafe_arena_release_authn();

  private:
  const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& _internal_authn() const;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* _internal_mutable_authn();

  public:
  // .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];
  bool has_chain() const;
  void clear_chain() ;
  const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& chain() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::ChainDescriptor* release_chain();
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* mutable_chain();
  void set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value);
  void unsafe_arena_set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* unsafe_arena_release_chain();

  private:
  const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& _internal_chain() const;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* _internal_mutable_chain();

  public:
  // .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];
  bool has_codec() const;
  void clear_codec() ;
  const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& codec() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::CodecDescriptor* release_codec();
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* mutable_codec();
  void set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value);
  void unsafe_arena_set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* unsafe_arena_release_codec();

  private:
  const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& _internal_codec() const;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* _internal_mutable_codec();

  public:
  // .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];
  bool has_configuration() const;
  void clear_configuration() ;
  const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& configuration() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* release_configuration();
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* mutable_configuration();
  void set_allocated_configuration(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value);
  void unsafe_arena_set_allocated_configuration(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* unsafe_arena_release_configuration();

  private:
  const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& _internal_configuration() const;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* _internal_mutable_configuration();

  public:
  // .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];
  bool has_query_services() const;
  void clear_query_services() ;
  const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& query_services() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* release_query_services();
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* mutable_query_services();
  void set_allocated_query_services(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value);
  void unsafe_arena_set_allocated_query_services(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* unsafe_arena_release_query_services();

  private:
  const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& _internal_query_services() const;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* _internal_mutable_query_services();

  public:
  // .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];
  bool has_tx() const;
  void clear_tx() ;
  const ::cosmos::base::reflection::v2alpha1::TxDescriptor& tx() const;
  PROTOBUF_NODISCARD ::cosmos::base::reflection::v2alpha1::TxDescriptor* release_tx();
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* mutable_tx();
  void set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value);
  void unsafe_arena_set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value);
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* unsafe_arena_release_tx();

  private:
  const ::cosmos::base::reflection::v2alpha1::TxDescriptor& _internal_tx() const;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* _internal_mutable_tx();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v2alpha1.AppDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 6,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AppDescriptor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* authn_;
    ::cosmos::base::reflection::v2alpha1::ChainDescriptor* chain_;
    ::cosmos::base::reflection::v2alpha1::CodecDescriptor* codec_;
    ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* configuration_;
    ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* query_services_;
    ::cosmos::base::reflection::v2alpha1::TxDescriptor* tx_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AppDescriptor

// .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
inline bool AppDescriptor::has_authn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.authn_ != nullptr);
  return value;
}
inline void AppDescriptor::clear_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authn_ != nullptr) _impl_.authn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& AppDescriptor::_internal_authn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* p = _impl_.authn_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor&>(::cosmos::base::reflection::v2alpha1::_AuthnDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& AppDescriptor::authn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.AppDescriptor.authn)
  return _internal_authn();
}
inline void AppDescriptor::unsafe_arena_set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.authn_);
  }
  _impl_.authn_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::AuthnDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.authn)
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* AppDescriptor::release_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* released = _impl_.authn_;
  _impl_.authn_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* AppDescriptor::unsafe_arena_release_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.AppDescriptor.authn)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* temp = _impl_.authn_;
  _impl_.authn_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* AppDescriptor::_internal_mutable_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authn_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::AuthnDescriptor>(GetArena());
    _impl_.authn_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::AuthnDescriptor*>(p);
  }
  return _impl_.authn_;
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* AppDescriptor::mutable_authn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* _msg = _internal_mutable_authn();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.AppDescriptor.authn)
  return _msg;
}
inline void AppDescriptor::set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.authn_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.authn_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::AuthnDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.authn)
}

// .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 2 [json_name = "chain"];
inline bool AppDescriptor::has_chain() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chain_ != nullptr);
  return value;
}
inline void AppDescriptor::clear_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chain_ != nullptr) _impl_.chain_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& AppDescriptor::_internal_chain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::ChainDescriptor* p = _impl_.chain_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::ChainDescriptor&>(::cosmos::base::reflection::v2alpha1::_ChainDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& AppDescriptor::chain() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.AppDescriptor.chain)
  return _internal_chain();
}
inline void AppDescriptor::unsafe_arena_set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chain_);
  }
  _impl_.chain_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ChainDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.chain)
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* AppDescriptor::release_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* released = _impl_.chain_;
  _impl_.chain_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* AppDescriptor::unsafe_arena_release_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.AppDescriptor.chain)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* temp = _impl_.chain_;
  _impl_.chain_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* AppDescriptor::_internal_mutable_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chain_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::ChainDescriptor>(GetArena());
    _impl_.chain_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ChainDescriptor*>(p);
  }
  return _impl_.chain_;
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* AppDescriptor::mutable_chain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* _msg = _internal_mutable_chain();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.AppDescriptor.chain)
  return _msg;
}
inline void AppDescriptor::set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chain_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.chain_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ChainDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.chain)
}

// .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 3 [json_name = "codec"];
inline bool AppDescriptor::has_codec() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.codec_ != nullptr);
  return value;
}
inline void AppDescriptor::clear_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.codec_ != nullptr) _impl_.codec_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& AppDescriptor::_internal_codec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::CodecDescriptor* p = _impl_.codec_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::CodecDescriptor&>(::cosmos::base::reflection::v2alpha1::_CodecDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& AppDescriptor::codec() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.AppDescriptor.codec)
  return _internal_codec();
}
inline void AppDescriptor::unsafe_arena_set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.codec_);
  }
  _impl_.codec_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::CodecDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.codec)
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* AppDescriptor::release_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* released = _impl_.codec_;
  _impl_.codec_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* AppDescriptor::unsafe_arena_release_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.AppDescriptor.codec)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* temp = _impl_.codec_;
  _impl_.codec_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* AppDescriptor::_internal_mutable_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.codec_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::CodecDescriptor>(GetArena());
    _impl_.codec_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::CodecDescriptor*>(p);
  }
  return _impl_.codec_;
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* AppDescriptor::mutable_codec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* _msg = _internal_mutable_codec();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.AppDescriptor.codec)
  return _msg;
}
inline void AppDescriptor::set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.codec_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.codec_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::CodecDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.codec)
}

// .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor configuration = 4 [json_name = "configuration"];
inline bool AppDescriptor::has_configuration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.configuration_ != nullptr);
  return value;
}
inline void AppDescriptor::clear_configuration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.configuration_ != nullptr) _impl_.configuration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& AppDescriptor::_internal_configuration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* p = _impl_.configuration_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor&>(::cosmos::base::reflection::v2alpha1::_ConfigurationDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& AppDescriptor::configuration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.AppDescriptor.configuration)
  return _internal_configuration();
}
inline void AppDescriptor::unsafe_arena_set_allocated_configuration(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.configuration_);
  }
  _impl_.configuration_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.configuration)
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* AppDescriptor::release_configuration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* released = _impl_.configuration_;
  _impl_.configuration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* AppDescriptor::unsafe_arena_release_configuration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.AppDescriptor.configuration)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* temp = _impl_.configuration_;
  _impl_.configuration_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* AppDescriptor::_internal_mutable_configuration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.configuration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor>(GetArena());
    _impl_.configuration_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor*>(p);
  }
  return _impl_.configuration_;
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* AppDescriptor::mutable_configuration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* _msg = _internal_mutable_configuration();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.AppDescriptor.configuration)
  return _msg;
}
inline void AppDescriptor::set_allocated_configuration(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.configuration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.configuration_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.configuration)
}

// .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor query_services = 5 [json_name = "queryServices"];
inline bool AppDescriptor::has_query_services() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.query_services_ != nullptr);
  return value;
}
inline void AppDescriptor::clear_query_services() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.query_services_ != nullptr) _impl_.query_services_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& AppDescriptor::_internal_query_services() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* p = _impl_.query_services_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor&>(::cosmos::base::reflection::v2alpha1::_QueryServicesDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& AppDescriptor::query_services() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.AppDescriptor.query_services)
  return _internal_query_services();
}
inline void AppDescriptor::unsafe_arena_set_allocated_query_services(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.query_services_);
  }
  _impl_.query_services_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.query_services)
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* AppDescriptor::release_query_services() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* released = _impl_.query_services_;
  _impl_.query_services_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* AppDescriptor::unsafe_arena_release_query_services() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.AppDescriptor.query_services)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* temp = _impl_.query_services_;
  _impl_.query_services_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* AppDescriptor::_internal_mutable_query_services() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.query_services_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor>(GetArena());
    _impl_.query_services_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor*>(p);
  }
  return _impl_.query_services_;
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* AppDescriptor::mutable_query_services() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* _msg = _internal_mutable_query_services();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.AppDescriptor.query_services)
  return _msg;
}
inline void AppDescriptor::set_allocated_query_services(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.query_services_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.query_services_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.query_services)
}

// .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 6 [json_name = "tx"];
inline bool AppDescriptor::has_tx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_ != nullptr);
  return value;
}
inline void AppDescriptor::clear_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ != nullptr) _impl_.tx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::cosmos::base::reflection::v2alpha1::TxDescriptor& AppDescriptor::_internal_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::TxDescriptor* p = _impl_.tx_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::TxDescriptor&>(::cosmos::base::reflection::v2alpha1::_TxDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::TxDescriptor& AppDescriptor::tx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.AppDescriptor.tx)
  return _internal_tx();
}
inline void AppDescriptor::unsafe_arena_set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }
  _impl_.tx_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::TxDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.tx)
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* AppDescriptor::release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* released = _impl_.tx_;
  _impl_.tx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* AppDescriptor::unsafe_arena_release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.AppDescriptor.tx)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* temp = _impl_.tx_;
  _impl_.tx_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* AppDescriptor::_internal_mutable_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::TxDescriptor>(GetArena());
    _impl_.tx_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::TxDescriptor*>(p);
  }
  return _impl_.tx_;
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* AppDescriptor::mutable_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* _msg = _internal_mutable_tx();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.AppDescriptor.tx)
  return _msg;
}
inline void AppDescriptor::set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.tx_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::TxDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.AppDescriptor.tx)
}

// -------------------------------------------------------------------

// TxDescriptor

// string fullname = 1 [json_name = "fullname"];
inline void TxDescriptor::clear_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.ClearToEmpty();
}
inline const std::string& TxDescriptor::fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.TxDescriptor.fullname)
  return _internal_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TxDescriptor::set_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.TxDescriptor.fullname)
}
inline std::string* TxDescriptor::mutable_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullname();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.TxDescriptor.fullname)
  return _s;
}
inline const std::string& TxDescriptor::_internal_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullname_.Get();
}
inline void TxDescriptor::_internal_set_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(value, GetArena());
}
inline std::string* TxDescriptor::_internal_mutable_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullname_.Mutable( GetArena());
}
inline std::string* TxDescriptor::release_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.TxDescriptor.fullname)
  return _impl_.fullname_.Release();
}
inline void TxDescriptor::set_allocated_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fullname_.IsDefault()) {
    _impl_.fullname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.TxDescriptor.fullname)
}

// repeated .cosmos.base.reflection.v2alpha1.MsgDescriptor msgs = 2 [json_name = "msgs"];
inline int TxDescriptor::_internal_msgs_size() const {
  return _internal_msgs().size();
}
inline int TxDescriptor::msgs_size() const {
  return _internal_msgs_size();
}
inline void TxDescriptor::clear_msgs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msgs_.Clear();
}
inline ::cosmos::base::reflection::v2alpha1::MsgDescriptor* TxDescriptor::mutable_msgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.TxDescriptor.msgs)
  return _internal_mutable_msgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>* TxDescriptor::mutable_msgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.TxDescriptor.msgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_msgs();
}
inline const ::cosmos::base::reflection::v2alpha1::MsgDescriptor& TxDescriptor::msgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.TxDescriptor.msgs)
  return _internal_msgs().Get(index);
}
inline ::cosmos::base::reflection::v2alpha1::MsgDescriptor* TxDescriptor::add_msgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::reflection::v2alpha1::MsgDescriptor* _add = _internal_mutable_msgs()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.TxDescriptor.msgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>& TxDescriptor::msgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.TxDescriptor.msgs)
  return _internal_msgs();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>&
TxDescriptor::_internal_msgs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msgs_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::MsgDescriptor>*
TxDescriptor::_internal_mutable_msgs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.msgs_;
}

// -------------------------------------------------------------------

// AuthnDescriptor

// repeated .cosmos.base.reflection.v2alpha1.SigningModeDescriptor sign_modes = 1 [json_name = "signModes"];
inline int AuthnDescriptor::_internal_sign_modes_size() const {
  return _internal_sign_modes().size();
}
inline int AuthnDescriptor::sign_modes_size() const {
  return _internal_sign_modes_size();
}
inline void AuthnDescriptor::clear_sign_modes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sign_modes_.Clear();
}
inline ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor* AuthnDescriptor::mutable_sign_modes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.AuthnDescriptor.sign_modes)
  return _internal_mutable_sign_modes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>* AuthnDescriptor::mutable_sign_modes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.AuthnDescriptor.sign_modes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sign_modes();
}
inline const ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor& AuthnDescriptor::sign_modes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.AuthnDescriptor.sign_modes)
  return _internal_sign_modes().Get(index);
}
inline ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor* AuthnDescriptor::add_sign_modes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::reflection::v2alpha1::SigningModeDescriptor* _add = _internal_mutable_sign_modes()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.AuthnDescriptor.sign_modes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>& AuthnDescriptor::sign_modes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.AuthnDescriptor.sign_modes)
  return _internal_sign_modes();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>&
AuthnDescriptor::_internal_sign_modes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sign_modes_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::SigningModeDescriptor>*
AuthnDescriptor::_internal_mutable_sign_modes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sign_modes_;
}

// -------------------------------------------------------------------

// SigningModeDescriptor

// string name = 1 [json_name = "name"];
inline void SigningModeDescriptor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SigningModeDescriptor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SigningModeDescriptor::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.name)
}
inline std::string* SigningModeDescriptor::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.name)
  return _s;
}
inline const std::string& SigningModeDescriptor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SigningModeDescriptor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SigningModeDescriptor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SigningModeDescriptor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.name)
  return _impl_.name_.Release();
}
inline void SigningModeDescriptor::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.name)
}

// int32 number = 2 [json_name = "number"];
inline void SigningModeDescriptor::clear_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_ = 0;
}
inline ::int32_t SigningModeDescriptor::number() const {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.number)
  return _internal_number();
}
inline void SigningModeDescriptor::set_number(::int32_t value) {
  _internal_set_number(value);
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.number)
}
inline ::int32_t SigningModeDescriptor::_internal_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.number_;
}
inline void SigningModeDescriptor::_internal_set_number(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.number_ = value;
}

// string authn_info_provider_method_fullname = 3 [json_name = "authnInfoProviderMethodFullname"];
inline void SigningModeDescriptor::clear_authn_info_provider_method_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authn_info_provider_method_fullname_.ClearToEmpty();
}
inline const std::string& SigningModeDescriptor::authn_info_provider_method_fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.authn_info_provider_method_fullname)
  return _internal_authn_info_provider_method_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SigningModeDescriptor::set_authn_info_provider_method_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authn_info_provider_method_fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.authn_info_provider_method_fullname)
}
inline std::string* SigningModeDescriptor::mutable_authn_info_provider_method_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_authn_info_provider_method_fullname();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.authn_info_provider_method_fullname)
  return _s;
}
inline const std::string& SigningModeDescriptor::_internal_authn_info_provider_method_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.authn_info_provider_method_fullname_.Get();
}
inline void SigningModeDescriptor::_internal_set_authn_info_provider_method_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authn_info_provider_method_fullname_.Set(value, GetArena());
}
inline std::string* SigningModeDescriptor::_internal_mutable_authn_info_provider_method_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.authn_info_provider_method_fullname_.Mutable( GetArena());
}
inline std::string* SigningModeDescriptor::release_authn_info_provider_method_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.authn_info_provider_method_fullname)
  return _impl_.authn_info_provider_method_fullname_.Release();
}
inline void SigningModeDescriptor::set_allocated_authn_info_provider_method_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.authn_info_provider_method_fullname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.authn_info_provider_method_fullname_.IsDefault()) {
    _impl_.authn_info_provider_method_fullname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.SigningModeDescriptor.authn_info_provider_method_fullname)
}

// -------------------------------------------------------------------

// ChainDescriptor

// string id = 1 [json_name = "id"];
inline void ChainDescriptor::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ChainDescriptor::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.ChainDescriptor.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChainDescriptor::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.ChainDescriptor.id)
}
inline std::string* ChainDescriptor::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.ChainDescriptor.id)
  return _s;
}
inline const std::string& ChainDescriptor::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ChainDescriptor::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ChainDescriptor::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ChainDescriptor::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.ChainDescriptor.id)
  return _impl_.id_.Release();
}
inline void ChainDescriptor::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.ChainDescriptor.id)
}

// -------------------------------------------------------------------

// CodecDescriptor

// repeated .cosmos.base.reflection.v2alpha1.InterfaceDescriptor interfaces = 1 [json_name = "interfaces"];
inline int CodecDescriptor::_internal_interfaces_size() const {
  return _internal_interfaces().size();
}
inline int CodecDescriptor::interfaces_size() const {
  return _internal_interfaces_size();
}
inline void CodecDescriptor::clear_interfaces() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interfaces_.Clear();
}
inline ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor* CodecDescriptor::mutable_interfaces(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.CodecDescriptor.interfaces)
  return _internal_mutable_interfaces()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>* CodecDescriptor::mutable_interfaces()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.CodecDescriptor.interfaces)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interfaces();
}
inline const ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor& CodecDescriptor::interfaces(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.CodecDescriptor.interfaces)
  return _internal_interfaces().Get(index);
}
inline ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor* CodecDescriptor::add_interfaces() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::reflection::v2alpha1::InterfaceDescriptor* _add = _internal_mutable_interfaces()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.CodecDescriptor.interfaces)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>& CodecDescriptor::interfaces() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.CodecDescriptor.interfaces)
  return _internal_interfaces();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>&
CodecDescriptor::_internal_interfaces() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interfaces_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceDescriptor>*
CodecDescriptor::_internal_mutable_interfaces() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interfaces_;
}

// -------------------------------------------------------------------

// InterfaceDescriptor

// string fullname = 1 [json_name = "fullname"];
inline void InterfaceDescriptor::clear_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.ClearToEmpty();
}
inline const std::string& InterfaceDescriptor::fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.fullname)
  return _internal_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceDescriptor::set_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.fullname)
}
inline std::string* InterfaceDescriptor::mutable_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullname();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.fullname)
  return _s;
}
inline const std::string& InterfaceDescriptor::_internal_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullname_.Get();
}
inline void InterfaceDescriptor::_internal_set_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(value, GetArena());
}
inline std::string* InterfaceDescriptor::_internal_mutable_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullname_.Mutable( GetArena());
}
inline std::string* InterfaceDescriptor::release_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.fullname)
  return _impl_.fullname_.Release();
}
inline void InterfaceDescriptor::set_allocated_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fullname_.IsDefault()) {
    _impl_.fullname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.fullname)
}

// repeated .cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor interface_accepting_messages = 2 [json_name = "interfaceAcceptingMessages"];
inline int InterfaceDescriptor::_internal_interface_accepting_messages_size() const {
  return _internal_interface_accepting_messages().size();
}
inline int InterfaceDescriptor::interface_accepting_messages_size() const {
  return _internal_interface_accepting_messages_size();
}
inline void InterfaceDescriptor::clear_interface_accepting_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_accepting_messages_.Clear();
}
inline ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor* InterfaceDescriptor::mutable_interface_accepting_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_accepting_messages)
  return _internal_mutable_interface_accepting_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>* InterfaceDescriptor::mutable_interface_accepting_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_accepting_messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interface_accepting_messages();
}
inline const ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor& InterfaceDescriptor::interface_accepting_messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_accepting_messages)
  return _internal_interface_accepting_messages().Get(index);
}
inline ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor* InterfaceDescriptor::add_interface_accepting_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor* _add = _internal_mutable_interface_accepting_messages()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_accepting_messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>& InterfaceDescriptor::interface_accepting_messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_accepting_messages)
  return _internal_interface_accepting_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>&
InterfaceDescriptor::_internal_interface_accepting_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_accepting_messages_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceAcceptingMessageDescriptor>*
InterfaceDescriptor::_internal_mutable_interface_accepting_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interface_accepting_messages_;
}

// repeated .cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor interface_implementers = 3 [json_name = "interfaceImplementers"];
inline int InterfaceDescriptor::_internal_interface_implementers_size() const {
  return _internal_interface_implementers().size();
}
inline int InterfaceDescriptor::interface_implementers_size() const {
  return _internal_interface_implementers_size();
}
inline void InterfaceDescriptor::clear_interface_implementers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_implementers_.Clear();
}
inline ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor* InterfaceDescriptor::mutable_interface_implementers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_implementers)
  return _internal_mutable_interface_implementers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>* InterfaceDescriptor::mutable_interface_implementers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_implementers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interface_implementers();
}
inline const ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor& InterfaceDescriptor::interface_implementers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_implementers)
  return _internal_interface_implementers().Get(index);
}
inline ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor* InterfaceDescriptor::add_interface_implementers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor* _add = _internal_mutable_interface_implementers()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_implementers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>& InterfaceDescriptor::interface_implementers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.InterfaceDescriptor.interface_implementers)
  return _internal_interface_implementers();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>&
InterfaceDescriptor::_internal_interface_implementers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_implementers_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::InterfaceImplementerDescriptor>*
InterfaceDescriptor::_internal_mutable_interface_implementers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interface_implementers_;
}

// -------------------------------------------------------------------

// InterfaceImplementerDescriptor

// string fullname = 1 [json_name = "fullname"];
inline void InterfaceImplementerDescriptor::clear_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.ClearToEmpty();
}
inline const std::string& InterfaceImplementerDescriptor::fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.fullname)
  return _internal_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceImplementerDescriptor::set_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.fullname)
}
inline std::string* InterfaceImplementerDescriptor::mutable_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullname();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.fullname)
  return _s;
}
inline const std::string& InterfaceImplementerDescriptor::_internal_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullname_.Get();
}
inline void InterfaceImplementerDescriptor::_internal_set_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(value, GetArena());
}
inline std::string* InterfaceImplementerDescriptor::_internal_mutable_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullname_.Mutable( GetArena());
}
inline std::string* InterfaceImplementerDescriptor::release_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.fullname)
  return _impl_.fullname_.Release();
}
inline void InterfaceImplementerDescriptor::set_allocated_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fullname_.IsDefault()) {
    _impl_.fullname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.fullname)
}

// string type_url = 2 [json_name = "typeUrl"];
inline void InterfaceImplementerDescriptor::clear_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_url_.ClearToEmpty();
}
inline const std::string& InterfaceImplementerDescriptor::type_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type_url)
  return _internal_type_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceImplementerDescriptor::set_type_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type_url)
}
inline std::string* InterfaceImplementerDescriptor::mutable_type_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type_url();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type_url)
  return _s;
}
inline const std::string& InterfaceImplementerDescriptor::_internal_type_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_url_.Get();
}
inline void InterfaceImplementerDescriptor::_internal_set_type_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_url_.Set(value, GetArena());
}
inline std::string* InterfaceImplementerDescriptor::_internal_mutable_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_url_.Mutable( GetArena());
}
inline std::string* InterfaceImplementerDescriptor::release_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type_url)
  return _impl_.type_url_.Release();
}
inline void InterfaceImplementerDescriptor::set_allocated_type_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_url_.IsDefault()) {
    _impl_.type_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.InterfaceImplementerDescriptor.type_url)
}

// -------------------------------------------------------------------

// InterfaceAcceptingMessageDescriptor

// string fullname = 1 [json_name = "fullname"];
inline void InterfaceAcceptingMessageDescriptor::clear_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.ClearToEmpty();
}
inline const std::string& InterfaceAcceptingMessageDescriptor::fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.fullname)
  return _internal_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterfaceAcceptingMessageDescriptor::set_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.fullname)
}
inline std::string* InterfaceAcceptingMessageDescriptor::mutable_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullname();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.fullname)
  return _s;
}
inline const std::string& InterfaceAcceptingMessageDescriptor::_internal_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullname_.Get();
}
inline void InterfaceAcceptingMessageDescriptor::_internal_set_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(value, GetArena());
}
inline std::string* InterfaceAcceptingMessageDescriptor::_internal_mutable_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullname_.Mutable( GetArena());
}
inline std::string* InterfaceAcceptingMessageDescriptor::release_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.fullname)
  return _impl_.fullname_.Release();
}
inline void InterfaceAcceptingMessageDescriptor::set_allocated_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fullname_.IsDefault()) {
    _impl_.fullname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.fullname)
}

// repeated string field_descriptor_names = 2 [json_name = "fieldDescriptorNames"];
inline int InterfaceAcceptingMessageDescriptor::_internal_field_descriptor_names_size() const {
  return _internal_field_descriptor_names().size();
}
inline int InterfaceAcceptingMessageDescriptor::field_descriptor_names_size() const {
  return _internal_field_descriptor_names_size();
}
inline void InterfaceAcceptingMessageDescriptor::clear_field_descriptor_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.field_descriptor_names_.Clear();
}
inline std::string* InterfaceAcceptingMessageDescriptor::add_field_descriptor_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_field_descriptor_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names)
  return _s;
}
inline const std::string& InterfaceAcceptingMessageDescriptor::field_descriptor_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names)
  return _internal_field_descriptor_names().Get(index);
}
inline std::string* InterfaceAcceptingMessageDescriptor::mutable_field_descriptor_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names)
  return _internal_mutable_field_descriptor_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void InterfaceAcceptingMessageDescriptor::set_field_descriptor_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_field_descriptor_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names)
}
template <typename Arg_, typename... Args_>
inline void InterfaceAcceptingMessageDescriptor::add_field_descriptor_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_field_descriptor_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceAcceptingMessageDescriptor::field_descriptor_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names)
  return _internal_field_descriptor_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceAcceptingMessageDescriptor::mutable_field_descriptor_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.InterfaceAcceptingMessageDescriptor.field_descriptor_names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_field_descriptor_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
InterfaceAcceptingMessageDescriptor::_internal_field_descriptor_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.field_descriptor_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
InterfaceAcceptingMessageDescriptor::_internal_mutable_field_descriptor_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.field_descriptor_names_;
}

// -------------------------------------------------------------------

// ConfigurationDescriptor

// string bech32_account_address_prefix = 1 [json_name = "bech32AccountAddressPrefix"];
inline void ConfigurationDescriptor::clear_bech32_account_address_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_account_address_prefix_.ClearToEmpty();
}
inline const std::string& ConfigurationDescriptor::bech32_account_address_prefix() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.bech32_account_address_prefix)
  return _internal_bech32_account_address_prefix();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfigurationDescriptor::set_bech32_account_address_prefix(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_account_address_prefix_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.bech32_account_address_prefix)
}
inline std::string* ConfigurationDescriptor::mutable_bech32_account_address_prefix() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bech32_account_address_prefix();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.bech32_account_address_prefix)
  return _s;
}
inline const std::string& ConfigurationDescriptor::_internal_bech32_account_address_prefix() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bech32_account_address_prefix_.Get();
}
inline void ConfigurationDescriptor::_internal_set_bech32_account_address_prefix(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_account_address_prefix_.Set(value, GetArena());
}
inline std::string* ConfigurationDescriptor::_internal_mutable_bech32_account_address_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bech32_account_address_prefix_.Mutable( GetArena());
}
inline std::string* ConfigurationDescriptor::release_bech32_account_address_prefix() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.bech32_account_address_prefix)
  return _impl_.bech32_account_address_prefix_.Release();
}
inline void ConfigurationDescriptor::set_allocated_bech32_account_address_prefix(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bech32_account_address_prefix_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bech32_account_address_prefix_.IsDefault()) {
    _impl_.bech32_account_address_prefix_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.ConfigurationDescriptor.bech32_account_address_prefix)
}

// -------------------------------------------------------------------

// MsgDescriptor

// string msg_type_url = 1 [json_name = "msgTypeUrl"];
inline void MsgDescriptor::clear_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.ClearToEmpty();
}
inline const std::string& MsgDescriptor::msg_type_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.MsgDescriptor.msg_type_url)
  return _internal_msg_type_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgDescriptor::set_msg_type_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.MsgDescriptor.msg_type_url)
}
inline std::string* MsgDescriptor::mutable_msg_type_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg_type_url();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.MsgDescriptor.msg_type_url)
  return _s;
}
inline const std::string& MsgDescriptor::_internal_msg_type_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_type_url_.Get();
}
inline void MsgDescriptor::_internal_set_msg_type_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.Set(value, GetArena());
}
inline std::string* MsgDescriptor::_internal_mutable_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_type_url_.Mutable( GetArena());
}
inline std::string* MsgDescriptor::release_msg_type_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.MsgDescriptor.msg_type_url)
  return _impl_.msg_type_url_.Release();
}
inline void MsgDescriptor::set_allocated_msg_type_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.msg_type_url_.IsDefault()) {
    _impl_.msg_type_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.MsgDescriptor.msg_type_url)
}

// -------------------------------------------------------------------

// GetAuthnDescriptorRequest

// -------------------------------------------------------------------

// GetAuthnDescriptorResponse

// .cosmos.base.reflection.v2alpha1.AuthnDescriptor authn = 1 [json_name = "authn"];
inline bool GetAuthnDescriptorResponse::has_authn() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.authn_ != nullptr);
  return value;
}
inline void GetAuthnDescriptorResponse::clear_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authn_ != nullptr) _impl_.authn_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& GetAuthnDescriptorResponse::_internal_authn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* p = _impl_.authn_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor&>(::cosmos::base::reflection::v2alpha1::_AuthnDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::AuthnDescriptor& GetAuthnDescriptorResponse::authn() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse.authn)
  return _internal_authn();
}
inline void GetAuthnDescriptorResponse::unsafe_arena_set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.authn_);
  }
  _impl_.authn_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::AuthnDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse.authn)
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* GetAuthnDescriptorResponse::release_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* released = _impl_.authn_;
  _impl_.authn_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* GetAuthnDescriptorResponse::unsafe_arena_release_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse.authn)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* temp = _impl_.authn_;
  _impl_.authn_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* GetAuthnDescriptorResponse::_internal_mutable_authn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.authn_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::AuthnDescriptor>(GetArena());
    _impl_.authn_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::AuthnDescriptor*>(p);
  }
  return _impl_.authn_;
}
inline ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* GetAuthnDescriptorResponse::mutable_authn() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::reflection::v2alpha1::AuthnDescriptor* _msg = _internal_mutable_authn();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse.authn)
  return _msg;
}
inline void GetAuthnDescriptorResponse::set_allocated_authn(::cosmos::base::reflection::v2alpha1::AuthnDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.authn_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.authn_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::AuthnDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse.authn)
}

// -------------------------------------------------------------------

// GetChainDescriptorRequest

// -------------------------------------------------------------------

// GetChainDescriptorResponse

// .cosmos.base.reflection.v2alpha1.ChainDescriptor chain = 1 [json_name = "chain"];
inline bool GetChainDescriptorResponse::has_chain() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chain_ != nullptr);
  return value;
}
inline void GetChainDescriptorResponse::clear_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chain_ != nullptr) _impl_.chain_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& GetChainDescriptorResponse::_internal_chain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::ChainDescriptor* p = _impl_.chain_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::ChainDescriptor&>(::cosmos::base::reflection::v2alpha1::_ChainDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::ChainDescriptor& GetChainDescriptorResponse::chain() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse.chain)
  return _internal_chain();
}
inline void GetChainDescriptorResponse::unsafe_arena_set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chain_);
  }
  _impl_.chain_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ChainDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse.chain)
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* GetChainDescriptorResponse::release_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* released = _impl_.chain_;
  _impl_.chain_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* GetChainDescriptorResponse::unsafe_arena_release_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse.chain)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* temp = _impl_.chain_;
  _impl_.chain_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* GetChainDescriptorResponse::_internal_mutable_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chain_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::ChainDescriptor>(GetArena());
    _impl_.chain_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ChainDescriptor*>(p);
  }
  return _impl_.chain_;
}
inline ::cosmos::base::reflection::v2alpha1::ChainDescriptor* GetChainDescriptorResponse::mutable_chain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::reflection::v2alpha1::ChainDescriptor* _msg = _internal_mutable_chain();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse.chain)
  return _msg;
}
inline void GetChainDescriptorResponse::set_allocated_chain(::cosmos::base::reflection::v2alpha1::ChainDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chain_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chain_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ChainDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse.chain)
}

// -------------------------------------------------------------------

// GetCodecDescriptorRequest

// -------------------------------------------------------------------

// GetCodecDescriptorResponse

// .cosmos.base.reflection.v2alpha1.CodecDescriptor codec = 1 [json_name = "codec"];
inline bool GetCodecDescriptorResponse::has_codec() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.codec_ != nullptr);
  return value;
}
inline void GetCodecDescriptorResponse::clear_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.codec_ != nullptr) _impl_.codec_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& GetCodecDescriptorResponse::_internal_codec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::CodecDescriptor* p = _impl_.codec_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::CodecDescriptor&>(::cosmos::base::reflection::v2alpha1::_CodecDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::CodecDescriptor& GetCodecDescriptorResponse::codec() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse.codec)
  return _internal_codec();
}
inline void GetCodecDescriptorResponse::unsafe_arena_set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.codec_);
  }
  _impl_.codec_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::CodecDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse.codec)
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* GetCodecDescriptorResponse::release_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* released = _impl_.codec_;
  _impl_.codec_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* GetCodecDescriptorResponse::unsafe_arena_release_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse.codec)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* temp = _impl_.codec_;
  _impl_.codec_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* GetCodecDescriptorResponse::_internal_mutable_codec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.codec_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::CodecDescriptor>(GetArena());
    _impl_.codec_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::CodecDescriptor*>(p);
  }
  return _impl_.codec_;
}
inline ::cosmos::base::reflection::v2alpha1::CodecDescriptor* GetCodecDescriptorResponse::mutable_codec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::reflection::v2alpha1::CodecDescriptor* _msg = _internal_mutable_codec();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse.codec)
  return _msg;
}
inline void GetCodecDescriptorResponse::set_allocated_codec(::cosmos::base::reflection::v2alpha1::CodecDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.codec_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.codec_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::CodecDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse.codec)
}

// -------------------------------------------------------------------

// GetConfigurationDescriptorRequest

// -------------------------------------------------------------------

// GetConfigurationDescriptorResponse

// .cosmos.base.reflection.v2alpha1.ConfigurationDescriptor config = 1 [json_name = "config"];
inline bool GetConfigurationDescriptorResponse::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline void GetConfigurationDescriptorResponse::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& GetConfigurationDescriptorResponse::_internal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor&>(::cosmos::base::reflection::v2alpha1::_ConfigurationDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor& GetConfigurationDescriptorResponse::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse.config)
  return _internal_config();
}
inline void GetConfigurationDescriptorResponse::unsafe_arena_set_allocated_config(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse.config)
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* GetConfigurationDescriptorResponse::release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* released = _impl_.config_;
  _impl_.config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* GetConfigurationDescriptorResponse::unsafe_arena_release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse.config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* GetConfigurationDescriptorResponse::_internal_mutable_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor>(GetArena());
    _impl_.config_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor*>(p);
  }
  return _impl_.config_;
}
inline ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* GetConfigurationDescriptorResponse::mutable_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse.config)
  return _msg;
}
inline void GetConfigurationDescriptorResponse::set_allocated_config(::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.config_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::ConfigurationDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse.config)
}

// -------------------------------------------------------------------

// GetQueryServicesDescriptorRequest

// -------------------------------------------------------------------

// GetQueryServicesDescriptorResponse

// .cosmos.base.reflection.v2alpha1.QueryServicesDescriptor queries = 1 [json_name = "queries"];
inline bool GetQueryServicesDescriptorResponse::has_queries() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.queries_ != nullptr);
  return value;
}
inline void GetQueryServicesDescriptorResponse::clear_queries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.queries_ != nullptr) _impl_.queries_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& GetQueryServicesDescriptorResponse::_internal_queries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* p = _impl_.queries_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor&>(::cosmos::base::reflection::v2alpha1::_QueryServicesDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor& GetQueryServicesDescriptorResponse::queries() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse.queries)
  return _internal_queries();
}
inline void GetQueryServicesDescriptorResponse::unsafe_arena_set_allocated_queries(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.queries_);
  }
  _impl_.queries_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse.queries)
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* GetQueryServicesDescriptorResponse::release_queries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* released = _impl_.queries_;
  _impl_.queries_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* GetQueryServicesDescriptorResponse::unsafe_arena_release_queries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse.queries)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* temp = _impl_.queries_;
  _impl_.queries_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* GetQueryServicesDescriptorResponse::_internal_mutable_queries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.queries_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor>(GetArena());
    _impl_.queries_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor*>(p);
  }
  return _impl_.queries_;
}
inline ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* GetQueryServicesDescriptorResponse::mutable_queries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* _msg = _internal_mutable_queries();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse.queries)
  return _msg;
}
inline void GetQueryServicesDescriptorResponse::set_allocated_queries(::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.queries_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.queries_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::QueryServicesDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse.queries)
}

// -------------------------------------------------------------------

// GetTxDescriptorRequest

// -------------------------------------------------------------------

// GetTxDescriptorResponse

// .cosmos.base.reflection.v2alpha1.TxDescriptor tx = 1 [json_name = "tx"];
inline bool GetTxDescriptorResponse::has_tx() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.tx_ != nullptr);
  return value;
}
inline void GetTxDescriptorResponse::clear_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ != nullptr) _impl_.tx_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::reflection::v2alpha1::TxDescriptor& GetTxDescriptorResponse::_internal_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::reflection::v2alpha1::TxDescriptor* p = _impl_.tx_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::reflection::v2alpha1::TxDescriptor&>(::cosmos::base::reflection::v2alpha1::_TxDescriptor_default_instance_);
}
inline const ::cosmos::base::reflection::v2alpha1::TxDescriptor& GetTxDescriptorResponse::tx() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse.tx)
  return _internal_tx();
}
inline void GetTxDescriptorResponse::unsafe_arena_set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.tx_);
  }
  _impl_.tx_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::TxDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse.tx)
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* GetTxDescriptorResponse::release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* released = _impl_.tx_;
  _impl_.tx_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* GetTxDescriptorResponse::unsafe_arena_release_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse.tx)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* temp = _impl_.tx_;
  _impl_.tx_ = nullptr;
  return temp;
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* GetTxDescriptorResponse::_internal_mutable_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.tx_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::reflection::v2alpha1::TxDescriptor>(GetArena());
    _impl_.tx_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::TxDescriptor*>(p);
  }
  return _impl_.tx_;
}
inline ::cosmos::base::reflection::v2alpha1::TxDescriptor* GetTxDescriptorResponse::mutable_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::reflection::v2alpha1::TxDescriptor* _msg = _internal_mutable_tx();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse.tx)
  return _msg;
}
inline void GetTxDescriptorResponse::set_allocated_tx(::cosmos::base::reflection::v2alpha1::TxDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.tx_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.tx_ = reinterpret_cast<::cosmos::base::reflection::v2alpha1::TxDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse.tx)
}

// -------------------------------------------------------------------

// QueryServicesDescriptor

// repeated .cosmos.base.reflection.v2alpha1.QueryServiceDescriptor query_services = 1 [json_name = "queryServices"];
inline int QueryServicesDescriptor::_internal_query_services_size() const {
  return _internal_query_services().size();
}
inline int QueryServicesDescriptor::query_services_size() const {
  return _internal_query_services_size();
}
inline void QueryServicesDescriptor::clear_query_services() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.query_services_.Clear();
}
inline ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor* QueryServicesDescriptor::mutable_query_services(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor.query_services)
  return _internal_mutable_query_services()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>* QueryServicesDescriptor::mutable_query_services()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor.query_services)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_query_services();
}
inline const ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor& QueryServicesDescriptor::query_services(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor.query_services)
  return _internal_query_services().Get(index);
}
inline ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor* QueryServicesDescriptor::add_query_services() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor* _add = _internal_mutable_query_services()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor.query_services)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>& QueryServicesDescriptor::query_services() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.QueryServicesDescriptor.query_services)
  return _internal_query_services();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>&
QueryServicesDescriptor::_internal_query_services() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.query_services_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryServiceDescriptor>*
QueryServicesDescriptor::_internal_mutable_query_services() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.query_services_;
}

// -------------------------------------------------------------------

// QueryServiceDescriptor

// string fullname = 1 [json_name = "fullname"];
inline void QueryServiceDescriptor::clear_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.ClearToEmpty();
}
inline const std::string& QueryServiceDescriptor::fullname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.fullname)
  return _internal_fullname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryServiceDescriptor::set_fullname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.fullname)
}
inline std::string* QueryServiceDescriptor::mutable_fullname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullname();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.fullname)
  return _s;
}
inline const std::string& QueryServiceDescriptor::_internal_fullname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullname_.Get();
}
inline void QueryServiceDescriptor::_internal_set_fullname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.Set(value, GetArena());
}
inline std::string* QueryServiceDescriptor::_internal_mutable_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullname_.Mutable( GetArena());
}
inline std::string* QueryServiceDescriptor::release_fullname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.fullname)
  return _impl_.fullname_.Release();
}
inline void QueryServiceDescriptor::set_allocated_fullname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.fullname_.IsDefault()) {
    _impl_.fullname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.fullname)
}

// bool is_module = 2 [json_name = "isModule"];
inline void QueryServiceDescriptor::clear_is_module() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_module_ = false;
}
inline bool QueryServiceDescriptor::is_module() const {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.is_module)
  return _internal_is_module();
}
inline void QueryServiceDescriptor::set_is_module(bool value) {
  _internal_set_is_module(value);
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.is_module)
}
inline bool QueryServiceDescriptor::_internal_is_module() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_module_;
}
inline void QueryServiceDescriptor::_internal_set_is_module(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_module_ = value;
}

// repeated .cosmos.base.reflection.v2alpha1.QueryMethodDescriptor methods = 3 [json_name = "methods"];
inline int QueryServiceDescriptor::_internal_methods_size() const {
  return _internal_methods().size();
}
inline int QueryServiceDescriptor::methods_size() const {
  return _internal_methods_size();
}
inline void QueryServiceDescriptor::clear_methods() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.methods_.Clear();
}
inline ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor* QueryServiceDescriptor::mutable_methods(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.methods)
  return _internal_mutable_methods()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>* QueryServiceDescriptor::mutable_methods()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.methods)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_methods();
}
inline const ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor& QueryServiceDescriptor::methods(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.methods)
  return _internal_methods().Get(index);
}
inline ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor* QueryServiceDescriptor::add_methods() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor* _add = _internal_mutable_methods()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.methods)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>& QueryServiceDescriptor::methods() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v2alpha1.QueryServiceDescriptor.methods)
  return _internal_methods();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>&
QueryServiceDescriptor::_internal_methods() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.methods_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::reflection::v2alpha1::QueryMethodDescriptor>*
QueryServiceDescriptor::_internal_mutable_methods() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.methods_;
}

// -------------------------------------------------------------------

// QueryMethodDescriptor

// string name = 1 [json_name = "name"];
inline void QueryMethodDescriptor::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& QueryMethodDescriptor::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryMethodDescriptor::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.name)
}
inline std::string* QueryMethodDescriptor::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.name)
  return _s;
}
inline const std::string& QueryMethodDescriptor::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void QueryMethodDescriptor::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* QueryMethodDescriptor::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* QueryMethodDescriptor::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.name)
  return _impl_.name_.Release();
}
inline void QueryMethodDescriptor::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.name)
}

// string full_query_path = 2 [json_name = "fullQueryPath"];
inline void QueryMethodDescriptor::clear_full_query_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_query_path_.ClearToEmpty();
}
inline const std::string& QueryMethodDescriptor::full_query_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.full_query_path)
  return _internal_full_query_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryMethodDescriptor::set_full_query_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_query_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.full_query_path)
}
inline std::string* QueryMethodDescriptor::mutable_full_query_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_full_query_path();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.full_query_path)
  return _s;
}
inline const std::string& QueryMethodDescriptor::_internal_full_query_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_query_path_.Get();
}
inline void QueryMethodDescriptor::_internal_set_full_query_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_query_path_.Set(value, GetArena());
}
inline std::string* QueryMethodDescriptor::_internal_mutable_full_query_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.full_query_path_.Mutable( GetArena());
}
inline std::string* QueryMethodDescriptor::release_full_query_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.full_query_path)
  return _impl_.full_query_path_.Release();
}
inline void QueryMethodDescriptor::set_allocated_full_query_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_query_path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.full_query_path_.IsDefault()) {
    _impl_.full_query_path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v2alpha1.QueryMethodDescriptor.full_query_path)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2alpha1
}  // namespace reflection
}  // namespace base
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fbase_2freflection_2fv2alpha1_2freflection_2eproto_2epb_2eh
