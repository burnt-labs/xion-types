// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/reflection/v1beta1/reflection.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto_2epb_2eh
#define cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/api/annotations.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto;
namespace cosmos {
namespace base {
namespace reflection {
namespace v1beta1 {
class ListAllInterfacesRequest;
struct ListAllInterfacesRequestDefaultTypeInternal;
extern ListAllInterfacesRequestDefaultTypeInternal _ListAllInterfacesRequest_default_instance_;
class ListAllInterfacesResponse;
struct ListAllInterfacesResponseDefaultTypeInternal;
extern ListAllInterfacesResponseDefaultTypeInternal _ListAllInterfacesResponse_default_instance_;
class ListImplementationsRequest;
struct ListImplementationsRequestDefaultTypeInternal;
extern ListImplementationsRequestDefaultTypeInternal _ListImplementationsRequest_default_instance_;
class ListImplementationsResponse;
struct ListImplementationsResponseDefaultTypeInternal;
extern ListImplementationsResponseDefaultTypeInternal _ListImplementationsResponse_default_instance_;
}  // namespace v1beta1
}  // namespace reflection
}  // namespace base
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace base {
namespace reflection {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class ListImplementationsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v1beta1.ListImplementationsResponse) */ {
 public:
  inline ListImplementationsResponse() : ListImplementationsResponse(nullptr) {}
  ~ListImplementationsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListImplementationsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListImplementationsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListImplementationsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListImplementationsResponse(const ListImplementationsResponse& from) : ListImplementationsResponse(nullptr, from) {}
  inline ListImplementationsResponse(ListImplementationsResponse&& from) noexcept
      : ListImplementationsResponse(nullptr, std::move(from)) {}
  inline ListImplementationsResponse& operator=(const ListImplementationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListImplementationsResponse& operator=(ListImplementationsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListImplementationsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListImplementationsResponse* internal_default_instance() {
    return reinterpret_cast<const ListImplementationsResponse*>(
        &_ListImplementationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListImplementationsResponse& a, ListImplementationsResponse& b) { a.Swap(&b); }
  inline void Swap(ListImplementationsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListImplementationsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListImplementationsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListImplementationsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListImplementationsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListImplementationsResponse& from) { ListImplementationsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListImplementationsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v1beta1.ListImplementationsResponse"; }

 protected:
  explicit ListImplementationsResponse(::google::protobuf::Arena* arena);
  ListImplementationsResponse(::google::protobuf::Arena* arena, const ListImplementationsResponse& from);
  ListImplementationsResponse(::google::protobuf::Arena* arena, ListImplementationsResponse&& from) noexcept
      : ListImplementationsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kImplementationMessageNamesFieldNumber = 1,
  };
  // repeated string implementation_message_names = 1 [json_name = "implementationMessageNames"];
  int implementation_message_names_size() const;
  private:
  int _internal_implementation_message_names_size() const;

  public:
  void clear_implementation_message_names() ;
  const std::string& implementation_message_names(int index) const;
  std::string* mutable_implementation_message_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_implementation_message_names(int index, Arg_&& value, Args_... args);
  std::string* add_implementation_message_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_implementation_message_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& implementation_message_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_implementation_message_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_implementation_message_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_implementation_message_names();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v1beta1.ListImplementationsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      95, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListImplementationsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> implementation_message_names_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class ListImplementationsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v1beta1.ListImplementationsRequest) */ {
 public:
  inline ListImplementationsRequest() : ListImplementationsRequest(nullptr) {}
  ~ListImplementationsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListImplementationsRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListImplementationsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListImplementationsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListImplementationsRequest(const ListImplementationsRequest& from) : ListImplementationsRequest(nullptr, from) {}
  inline ListImplementationsRequest(ListImplementationsRequest&& from) noexcept
      : ListImplementationsRequest(nullptr, std::move(from)) {}
  inline ListImplementationsRequest& operator=(const ListImplementationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListImplementationsRequest& operator=(ListImplementationsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListImplementationsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListImplementationsRequest* internal_default_instance() {
    return reinterpret_cast<const ListImplementationsRequest*>(
        &_ListImplementationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListImplementationsRequest& a, ListImplementationsRequest& b) { a.Swap(&b); }
  inline void Swap(ListImplementationsRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListImplementationsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListImplementationsRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListImplementationsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListImplementationsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListImplementationsRequest& from) { ListImplementationsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListImplementationsRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v1beta1.ListImplementationsRequest"; }

 protected:
  explicit ListImplementationsRequest(::google::protobuf::Arena* arena);
  ListImplementationsRequest(::google::protobuf::Arena* arena, const ListImplementationsRequest& from);
  ListImplementationsRequest(::google::protobuf::Arena* arena, ListImplementationsRequest&& from) noexcept
      : ListImplementationsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceNameFieldNumber = 1,
  };
  // string interface_name = 1 [json_name = "interfaceName"];
  void clear_interface_name() ;
  const std::string& interface_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_name(Arg_&& arg, Args_... args);
  std::string* mutable_interface_name();
  PROTOBUF_NODISCARD std::string* release_interface_name();
  void set_allocated_interface_name(std::string* value);

  private:
  const std::string& _internal_interface_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interface_name(
      const std::string& value);
  std::string* _internal_mutable_interface_name();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v1beta1.ListImplementationsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListImplementationsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr interface_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class ListAllInterfacesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse) */ {
 public:
  inline ListAllInterfacesResponse() : ListAllInterfacesResponse(nullptr) {}
  ~ListAllInterfacesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAllInterfacesResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAllInterfacesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAllInterfacesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAllInterfacesResponse(const ListAllInterfacesResponse& from) : ListAllInterfacesResponse(nullptr, from) {}
  inline ListAllInterfacesResponse(ListAllInterfacesResponse&& from) noexcept
      : ListAllInterfacesResponse(nullptr, std::move(from)) {}
  inline ListAllInterfacesResponse& operator=(const ListAllInterfacesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAllInterfacesResponse& operator=(ListAllInterfacesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAllInterfacesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAllInterfacesResponse* internal_default_instance() {
    return reinterpret_cast<const ListAllInterfacesResponse*>(
        &_ListAllInterfacesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ListAllInterfacesResponse& a, ListAllInterfacesResponse& b) { a.Swap(&b); }
  inline void Swap(ListAllInterfacesResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAllInterfacesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAllInterfacesResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListAllInterfacesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAllInterfacesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAllInterfacesResponse& from) { ListAllInterfacesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListAllInterfacesResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v1beta1.ListAllInterfacesResponse"; }

 protected:
  explicit ListAllInterfacesResponse(::google::protobuf::Arena* arena);
  ListAllInterfacesResponse(::google::protobuf::Arena* arena, const ListAllInterfacesResponse& from);
  ListAllInterfacesResponse(::google::protobuf::Arena* arena, ListAllInterfacesResponse&& from) noexcept
      : ListAllInterfacesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInterfaceNamesFieldNumber = 1,
  };
  // repeated string interface_names = 1 [json_name = "interfaceNames"];
  int interface_names_size() const;
  private:
  int _internal_interface_names_size() const;

  public:
  void clear_interface_names() ;
  const std::string& interface_names(int index) const;
  std::string* mutable_interface_names(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interface_names(int index, Arg_&& value, Args_... args);
  std::string* add_interface_names();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_interface_names(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& interface_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_interface_names();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_interface_names() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_interface_names();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      80, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAllInterfacesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> interface_names_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto;
};
// -------------------------------------------------------------------

class ListAllInterfacesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.reflection.v1beta1.ListAllInterfacesRequest) */ {
 public:
  inline ListAllInterfacesRequest() : ListAllInterfacesRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListAllInterfacesRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListAllInterfacesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAllInterfacesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAllInterfacesRequest(const ListAllInterfacesRequest& from) : ListAllInterfacesRequest(nullptr, from) {}
  inline ListAllInterfacesRequest(ListAllInterfacesRequest&& from) noexcept
      : ListAllInterfacesRequest(nullptr, std::move(from)) {}
  inline ListAllInterfacesRequest& operator=(const ListAllInterfacesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAllInterfacesRequest& operator=(ListAllInterfacesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAllInterfacesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAllInterfacesRequest* internal_default_instance() {
    return reinterpret_cast<const ListAllInterfacesRequest*>(
        &_ListAllInterfacesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ListAllInterfacesRequest& a, ListAllInterfacesRequest& b) { a.Swap(&b); }
  inline void Swap(ListAllInterfacesRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAllInterfacesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAllInterfacesRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListAllInterfacesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListAllInterfacesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListAllInterfacesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.reflection.v1beta1.ListAllInterfacesRequest"; }

 protected:
  explicit ListAllInterfacesRequest(::google::protobuf::Arena* arena);
  ListAllInterfacesRequest(::google::protobuf::Arena* arena, const ListAllInterfacesRequest& from);
  ListAllInterfacesRequest(::google::protobuf::Arena* arena, ListAllInterfacesRequest&& from) noexcept
      : ListAllInterfacesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.reflection.v1beta1.ListAllInterfacesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAllInterfacesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ListAllInterfacesRequest

// -------------------------------------------------------------------

// ListAllInterfacesResponse

// repeated string interface_names = 1 [json_name = "interfaceNames"];
inline int ListAllInterfacesResponse::_internal_interface_names_size() const {
  return _internal_interface_names().size();
}
inline int ListAllInterfacesResponse::interface_names_size() const {
  return _internal_interface_names_size();
}
inline void ListAllInterfacesResponse::clear_interface_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_names_.Clear();
}
inline std::string* ListAllInterfacesResponse::add_interface_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_interface_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.interface_names)
  return _s;
}
inline const std::string& ListAllInterfacesResponse::interface_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.interface_names)
  return _internal_interface_names().Get(index);
}
inline std::string* ListAllInterfacesResponse::mutable_interface_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.interface_names)
  return _internal_mutable_interface_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListAllInterfacesResponse::set_interface_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_interface_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.interface_names)
}
template <typename Arg_, typename... Args_>
inline void ListAllInterfacesResponse::add_interface_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_interface_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.interface_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListAllInterfacesResponse::interface_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.interface_names)
  return _internal_interface_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListAllInterfacesResponse::mutable_interface_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v1beta1.ListAllInterfacesResponse.interface_names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_interface_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListAllInterfacesResponse::_internal_interface_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListAllInterfacesResponse::_internal_mutable_interface_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.interface_names_;
}

// -------------------------------------------------------------------

// ListImplementationsRequest

// string interface_name = 1 [json_name = "interfaceName"];
inline void ListImplementationsRequest::clear_interface_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_name_.ClearToEmpty();
}
inline const std::string& ListImplementationsRequest::interface_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v1beta1.ListImplementationsRequest.interface_name)
  return _internal_interface_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListImplementationsRequest::set_interface_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v1beta1.ListImplementationsRequest.interface_name)
}
inline std::string* ListImplementationsRequest::mutable_interface_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interface_name();
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v1beta1.ListImplementationsRequest.interface_name)
  return _s;
}
inline const std::string& ListImplementationsRequest::_internal_interface_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interface_name_.Get();
}
inline void ListImplementationsRequest::_internal_set_interface_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_name_.Set(value, GetArena());
}
inline std::string* ListImplementationsRequest::_internal_mutable_interface_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interface_name_.Mutable( GetArena());
}
inline std::string* ListImplementationsRequest::release_interface_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.reflection.v1beta1.ListImplementationsRequest.interface_name)
  return _impl_.interface_name_.Release();
}
inline void ListImplementationsRequest::set_allocated_interface_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interface_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interface_name_.IsDefault()) {
    _impl_.interface_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.reflection.v1beta1.ListImplementationsRequest.interface_name)
}

// -------------------------------------------------------------------

// ListImplementationsResponse

// repeated string implementation_message_names = 1 [json_name = "implementationMessageNames"];
inline int ListImplementationsResponse::_internal_implementation_message_names_size() const {
  return _internal_implementation_message_names().size();
}
inline int ListImplementationsResponse::implementation_message_names_size() const {
  return _internal_implementation_message_names_size();
}
inline void ListImplementationsResponse::clear_implementation_message_names() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.implementation_message_names_.Clear();
}
inline std::string* ListImplementationsResponse::add_implementation_message_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_implementation_message_names()->Add();
  // @@protoc_insertion_point(field_add_mutable:cosmos.base.reflection.v1beta1.ListImplementationsResponse.implementation_message_names)
  return _s;
}
inline const std::string& ListImplementationsResponse::implementation_message_names(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.reflection.v1beta1.ListImplementationsResponse.implementation_message_names)
  return _internal_implementation_message_names().Get(index);
}
inline std::string* ListImplementationsResponse::mutable_implementation_message_names(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.reflection.v1beta1.ListImplementationsResponse.implementation_message_names)
  return _internal_mutable_implementation_message_names()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListImplementationsResponse::set_implementation_message_names(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_implementation_message_names()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:cosmos.base.reflection.v1beta1.ListImplementationsResponse.implementation_message_names)
}
template <typename Arg_, typename... Args_>
inline void ListImplementationsResponse::add_implementation_message_names(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_implementation_message_names(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:cosmos.base.reflection.v1beta1.ListImplementationsResponse.implementation_message_names)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListImplementationsResponse::implementation_message_names() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.reflection.v1beta1.ListImplementationsResponse.implementation_message_names)
  return _internal_implementation_message_names();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListImplementationsResponse::mutable_implementation_message_names() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.reflection.v1beta1.ListImplementationsResponse.implementation_message_names)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_implementation_message_names();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListImplementationsResponse::_internal_implementation_message_names() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.implementation_message_names_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListImplementationsResponse::_internal_mutable_implementation_message_names() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.implementation_message_names_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace reflection
}  // namespace base
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fbase_2freflection_2fv1beta1_2freflection_2eproto_2epb_2eh
