// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/base/tendermint/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/protobuf/any.pb.h"
#include "google/api/annotations.pb.h"
#include "tendermint/p2p/types.pb.h"
#include "tendermint/types/types.pb.h"
#include "cosmos/base/query/v1beta1/pagination.pb.h"
#include "cosmos/base/tendermint/v1beta1/types.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "tendermint/types/block.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace base {
namespace tendermint {
namespace v1beta1 {
class ABCIQueryRequest;
struct ABCIQueryRequestDefaultTypeInternal;
extern ABCIQueryRequestDefaultTypeInternal _ABCIQueryRequest_default_instance_;
class ABCIQueryResponse;
struct ABCIQueryResponseDefaultTypeInternal;
extern ABCIQueryResponseDefaultTypeInternal _ABCIQueryResponse_default_instance_;
class GetBlockByHeightRequest;
struct GetBlockByHeightRequestDefaultTypeInternal;
extern GetBlockByHeightRequestDefaultTypeInternal _GetBlockByHeightRequest_default_instance_;
class GetBlockByHeightResponse;
struct GetBlockByHeightResponseDefaultTypeInternal;
extern GetBlockByHeightResponseDefaultTypeInternal _GetBlockByHeightResponse_default_instance_;
class GetLatestBlockRequest;
struct GetLatestBlockRequestDefaultTypeInternal;
extern GetLatestBlockRequestDefaultTypeInternal _GetLatestBlockRequest_default_instance_;
class GetLatestBlockResponse;
struct GetLatestBlockResponseDefaultTypeInternal;
extern GetLatestBlockResponseDefaultTypeInternal _GetLatestBlockResponse_default_instance_;
class GetLatestValidatorSetRequest;
struct GetLatestValidatorSetRequestDefaultTypeInternal;
extern GetLatestValidatorSetRequestDefaultTypeInternal _GetLatestValidatorSetRequest_default_instance_;
class GetLatestValidatorSetResponse;
struct GetLatestValidatorSetResponseDefaultTypeInternal;
extern GetLatestValidatorSetResponseDefaultTypeInternal _GetLatestValidatorSetResponse_default_instance_;
class GetNodeInfoRequest;
struct GetNodeInfoRequestDefaultTypeInternal;
extern GetNodeInfoRequestDefaultTypeInternal _GetNodeInfoRequest_default_instance_;
class GetNodeInfoResponse;
struct GetNodeInfoResponseDefaultTypeInternal;
extern GetNodeInfoResponseDefaultTypeInternal _GetNodeInfoResponse_default_instance_;
class GetSyncingRequest;
struct GetSyncingRequestDefaultTypeInternal;
extern GetSyncingRequestDefaultTypeInternal _GetSyncingRequest_default_instance_;
class GetSyncingResponse;
struct GetSyncingResponseDefaultTypeInternal;
extern GetSyncingResponseDefaultTypeInternal _GetSyncingResponse_default_instance_;
class GetValidatorSetByHeightRequest;
struct GetValidatorSetByHeightRequestDefaultTypeInternal;
extern GetValidatorSetByHeightRequestDefaultTypeInternal _GetValidatorSetByHeightRequest_default_instance_;
class GetValidatorSetByHeightResponse;
struct GetValidatorSetByHeightResponseDefaultTypeInternal;
extern GetValidatorSetByHeightResponseDefaultTypeInternal _GetValidatorSetByHeightResponse_default_instance_;
class Module;
struct ModuleDefaultTypeInternal;
extern ModuleDefaultTypeInternal _Module_default_instance_;
class ProofOp;
struct ProofOpDefaultTypeInternal;
extern ProofOpDefaultTypeInternal _ProofOp_default_instance_;
class ProofOps;
struct ProofOpsDefaultTypeInternal;
extern ProofOpsDefaultTypeInternal _ProofOps_default_instance_;
class Validator;
struct ValidatorDefaultTypeInternal;
extern ValidatorDefaultTypeInternal _Validator_default_instance_;
class VersionInfo;
struct VersionInfoDefaultTypeInternal;
extern VersionInfoDefaultTypeInternal _VersionInfo_default_instance_;
}  // namespace v1beta1
}  // namespace tendermint
}  // namespace base
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace base {
namespace tendermint {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class ProofOp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.ProofOp) */ {
 public:
  inline ProofOp() : ProofOp(nullptr) {}
  ~ProofOp() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProofOp* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProofOp));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProofOp(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProofOp(const ProofOp& from) : ProofOp(nullptr, from) {}
  inline ProofOp(ProofOp&& from) noexcept
      : ProofOp(nullptr, std::move(from)) {}
  inline ProofOp& operator=(const ProofOp& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProofOp& operator=(ProofOp&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProofOp& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProofOp* internal_default_instance() {
    return reinterpret_cast<const ProofOp*>(
        &_ProofOp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(ProofOp& a, ProofOp& b) { a.Swap(&b); }
  inline void Swap(ProofOp* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProofOp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProofOp* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProofOp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProofOp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProofOp& from) { ProofOp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProofOp* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.ProofOp"; }

 protected:
  explicit ProofOp(::google::protobuf::Arena* arena);
  ProofOp(::google::protobuf::Arena* arena, const ProofOp& from);
  ProofOp(::google::protobuf::Arena* arena, ProofOp&& from) noexcept
      : ProofOp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
    kKeyFieldNumber = 2,
    kDataFieldNumber = 3,
  };
  // string type = 1 [json_name = "type"];
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // bytes key = 2 [json_name = "key"];
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes data = 3 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.ProofOp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      51, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProofOp& from_msg);
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class Module final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.Module) */ {
 public:
  inline Module() : Module(nullptr) {}
  ~Module() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Module* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Module));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Module(
      ::google::protobuf::internal::ConstantInitialized);

  inline Module(const Module& from) : Module(nullptr, from) {}
  inline Module(Module&& from) noexcept
      : Module(nullptr, std::move(from)) {}
  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }
  inline Module& operator=(Module&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Module& default_instance() {
    return *internal_default_instance();
  }
  static inline const Module* internal_default_instance() {
    return reinterpret_cast<const Module*>(
        &_Module_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Module& a, Module& b) { a.Swap(&b); }
  inline void Swap(Module* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Module* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Module* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Module>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Module& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Module& from) { Module::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Module* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.Module"; }

 protected:
  explicit Module(::google::protobuf::Arena* arena);
  Module(::google::protobuf::Arena* arena, const Module& from);
  Module(::google::protobuf::Arena* arena, Module&& from) noexcept
      : Module(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
    kVersionFieldNumber = 2,
    kSumFieldNumber = 3,
  };
  // string path = 1 [json_name = "path"];
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // string version = 2 [json_name = "version"];
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string sum = 3 [json_name = "sum"];
  void clear_sum() ;
  const std::string& sum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sum(Arg_&& arg, Args_... args);
  std::string* mutable_sum();
  PROTOBUF_NODISCARD std::string* release_sum();
  void set_allocated_sum(std::string* value);

  private:
  const std::string& _internal_sum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sum(
      const std::string& value);
  std::string* _internal_mutable_sum();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.Module)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Module& from_msg);
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr sum_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetSyncingResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetSyncingResponse) */ {
 public:
  inline GetSyncingResponse() : GetSyncingResponse(nullptr) {}
  ~GetSyncingResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSyncingResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSyncingResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSyncingResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSyncingResponse(const GetSyncingResponse& from) : GetSyncingResponse(nullptr, from) {}
  inline GetSyncingResponse(GetSyncingResponse&& from) noexcept
      : GetSyncingResponse(nullptr, std::move(from)) {}
  inline GetSyncingResponse& operator=(const GetSyncingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSyncingResponse& operator=(GetSyncingResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSyncingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSyncingResponse* internal_default_instance() {
    return reinterpret_cast<const GetSyncingResponse*>(
        &_GetSyncingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(GetSyncingResponse& a, GetSyncingResponse& b) { a.Swap(&b); }
  inline void Swap(GetSyncingResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSyncingResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSyncingResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSyncingResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSyncingResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSyncingResponse& from) { GetSyncingResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSyncingResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetSyncingResponse"; }

 protected:
  explicit GetSyncingResponse(::google::protobuf::Arena* arena);
  GetSyncingResponse(::google::protobuf::Arena* arena, const GetSyncingResponse& from);
  GetSyncingResponse(::google::protobuf::Arena* arena, GetSyncingResponse&& from) noexcept
      : GetSyncingResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSyncingFieldNumber = 1,
  };
  // bool syncing = 1 [json_name = "syncing"];
  void clear_syncing() ;
  bool syncing() const;
  void set_syncing(bool value);

  private:
  bool _internal_syncing() const;
  void _internal_set_syncing(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetSyncingResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSyncingResponse& from_msg);
    bool syncing_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetSyncingRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetSyncingRequest) */ {
 public:
  inline GetSyncingRequest() : GetSyncingRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSyncingRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSyncingRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSyncingRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSyncingRequest(const GetSyncingRequest& from) : GetSyncingRequest(nullptr, from) {}
  inline GetSyncingRequest(GetSyncingRequest&& from) noexcept
      : GetSyncingRequest(nullptr, std::move(from)) {}
  inline GetSyncingRequest& operator=(const GetSyncingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSyncingRequest& operator=(GetSyncingRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSyncingRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSyncingRequest* internal_default_instance() {
    return reinterpret_cast<const GetSyncingRequest*>(
        &_GetSyncingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(GetSyncingRequest& a, GetSyncingRequest& b) { a.Swap(&b); }
  inline void Swap(GetSyncingRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSyncingRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSyncingRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetSyncingRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetSyncingRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetSyncingRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetSyncingRequest"; }

 protected:
  explicit GetSyncingRequest(::google::protobuf::Arena* arena);
  GetSyncingRequest(::google::protobuf::Arena* arena, const GetSyncingRequest& from);
  GetSyncingRequest(::google::protobuf::Arena* arena, GetSyncingRequest&& from) noexcept
      : GetSyncingRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetSyncingRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSyncingRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetNodeInfoRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetNodeInfoRequest) */ {
 public:
  inline GetNodeInfoRequest() : GetNodeInfoRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetNodeInfoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetNodeInfoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNodeInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNodeInfoRequest(const GetNodeInfoRequest& from) : GetNodeInfoRequest(nullptr, from) {}
  inline GetNodeInfoRequest(GetNodeInfoRequest&& from) noexcept
      : GetNodeInfoRequest(nullptr, std::move(from)) {}
  inline GetNodeInfoRequest& operator=(const GetNodeInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNodeInfoRequest& operator=(GetNodeInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNodeInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNodeInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetNodeInfoRequest*>(
        &_GetNodeInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetNodeInfoRequest& a, GetNodeInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetNodeInfoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNodeInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNodeInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetNodeInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetNodeInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetNodeInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetNodeInfoRequest"; }

 protected:
  explicit GetNodeInfoRequest(::google::protobuf::Arena* arena);
  GetNodeInfoRequest(::google::protobuf::Arena* arena, const GetNodeInfoRequest& from);
  GetNodeInfoRequest(::google::protobuf::Arena* arena, GetNodeInfoRequest&& from) noexcept
      : GetNodeInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetNodeInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNodeInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetLatestBlockRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetLatestBlockRequest) */ {
 public:
  inline GetLatestBlockRequest() : GetLatestBlockRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetLatestBlockRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetLatestBlockRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLatestBlockRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLatestBlockRequest(const GetLatestBlockRequest& from) : GetLatestBlockRequest(nullptr, from) {}
  inline GetLatestBlockRequest(GetLatestBlockRequest&& from) noexcept
      : GetLatestBlockRequest(nullptr, std::move(from)) {}
  inline GetLatestBlockRequest& operator=(const GetLatestBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLatestBlockRequest& operator=(GetLatestBlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLatestBlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLatestBlockRequest* internal_default_instance() {
    return reinterpret_cast<const GetLatestBlockRequest*>(
        &_GetLatestBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetLatestBlockRequest& a, GetLatestBlockRequest& b) { a.Swap(&b); }
  inline void Swap(GetLatestBlockRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLatestBlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLatestBlockRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetLatestBlockRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetLatestBlockRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetLatestBlockRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetLatestBlockRequest"; }

 protected:
  explicit GetLatestBlockRequest(::google::protobuf::Arena* arena);
  GetLatestBlockRequest(::google::protobuf::Arena* arena, const GetLatestBlockRequest& from);
  GetLatestBlockRequest(::google::protobuf::Arena* arena, GetLatestBlockRequest&& from) noexcept
      : GetLatestBlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetLatestBlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLatestBlockRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetBlockByHeightRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest) */ {
 public:
  inline GetBlockByHeightRequest() : GetBlockByHeightRequest(nullptr) {}
  ~GetBlockByHeightRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBlockByHeightRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBlockByHeightRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockByHeightRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockByHeightRequest(const GetBlockByHeightRequest& from) : GetBlockByHeightRequest(nullptr, from) {}
  inline GetBlockByHeightRequest(GetBlockByHeightRequest&& from) noexcept
      : GetBlockByHeightRequest(nullptr, std::move(from)) {}
  inline GetBlockByHeightRequest& operator=(const GetBlockByHeightRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockByHeightRequest& operator=(GetBlockByHeightRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockByHeightRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockByHeightRequest* internal_default_instance() {
    return reinterpret_cast<const GetBlockByHeightRequest*>(
        &_GetBlockByHeightRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetBlockByHeightRequest& a, GetBlockByHeightRequest& b) { a.Swap(&b); }
  inline void Swap(GetBlockByHeightRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockByHeightRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockByHeightRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockByHeightRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockByHeightRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockByHeightRequest& from) { GetBlockByHeightRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBlockByHeightRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest"; }

 protected:
  explicit GetBlockByHeightRequest(::google::protobuf::Arena* arena);
  GetBlockByHeightRequest(::google::protobuf::Arena* arena, const GetBlockByHeightRequest& from);
  GetBlockByHeightRequest(::google::protobuf::Arena* arena, GetBlockByHeightRequest&& from) noexcept
      : GetBlockByHeightRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeightFieldNumber = 1,
  };
  // int64 height = 1 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockByHeightRequest& from_msg);
    ::int64_t height_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class ABCIQueryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.ABCIQueryRequest) */ {
 public:
  inline ABCIQueryRequest() : ABCIQueryRequest(nullptr) {}
  ~ABCIQueryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ABCIQueryRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ABCIQueryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ABCIQueryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ABCIQueryRequest(const ABCIQueryRequest& from) : ABCIQueryRequest(nullptr, from) {}
  inline ABCIQueryRequest(ABCIQueryRequest&& from) noexcept
      : ABCIQueryRequest(nullptr, std::move(from)) {}
  inline ABCIQueryRequest& operator=(const ABCIQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ABCIQueryRequest& operator=(ABCIQueryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ABCIQueryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ABCIQueryRequest* internal_default_instance() {
    return reinterpret_cast<const ABCIQueryRequest*>(
        &_ABCIQueryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(ABCIQueryRequest& a, ABCIQueryRequest& b) { a.Swap(&b); }
  inline void Swap(ABCIQueryRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ABCIQueryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ABCIQueryRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ABCIQueryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ABCIQueryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ABCIQueryRequest& from) { ABCIQueryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ABCIQueryRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.ABCIQueryRequest"; }

 protected:
  explicit ABCIQueryRequest(::google::protobuf::Arena* arena);
  ABCIQueryRequest(::google::protobuf::Arena* arena, const ABCIQueryRequest& from);
  ABCIQueryRequest(::google::protobuf::Arena* arena, ABCIQueryRequest&& from) noexcept
      : ABCIQueryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 1,
    kPathFieldNumber = 2,
    kHeightFieldNumber = 3,
    kProveFieldNumber = 4,
  };
  // bytes data = 1 [json_name = "data"];
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string path = 2 [json_name = "path"];
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // int64 height = 3 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // bool prove = 4 [json_name = "prove"];
  void clear_prove() ;
  bool prove() const;
  void set_prove(bool value);

  private:
  bool _internal_prove() const;
  void _internal_set_prove(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.ABCIQueryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      60, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ABCIQueryRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::int64_t height_;
    bool prove_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class VersionInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.VersionInfo) */ {
 public:
  inline VersionInfo() : VersionInfo(nullptr) {}
  ~VersionInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VersionInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VersionInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VersionInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline VersionInfo(const VersionInfo& from) : VersionInfo(nullptr, from) {}
  inline VersionInfo(VersionInfo&& from) noexcept
      : VersionInfo(nullptr, std::move(from)) {}
  inline VersionInfo& operator=(const VersionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline VersionInfo& operator=(VersionInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VersionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const VersionInfo* internal_default_instance() {
    return reinterpret_cast<const VersionInfo*>(
        &_VersionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(VersionInfo& a, VersionInfo& b) { a.Swap(&b); }
  inline void Swap(VersionInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VersionInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VersionInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VersionInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VersionInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VersionInfo& from) { VersionInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VersionInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.VersionInfo"; }

 protected:
  explicit VersionInfo(::google::protobuf::Arena* arena);
  VersionInfo(::google::protobuf::Arena* arena, const VersionInfo& from);
  VersionInfo(::google::protobuf::Arena* arena, VersionInfo&& from) noexcept
      : VersionInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBuildDepsFieldNumber = 7,
    kNameFieldNumber = 1,
    kAppNameFieldNumber = 2,
    kVersionFieldNumber = 3,
    kGitCommitFieldNumber = 4,
    kBuildTagsFieldNumber = 5,
    kGoVersionFieldNumber = 6,
    kCosmosSdkVersionFieldNumber = 8,
  };
  // repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];
  int build_deps_size() const;
  private:
  int _internal_build_deps_size() const;

  public:
  void clear_build_deps() ;
  ::cosmos::base::tendermint::v1beta1::Module* mutable_build_deps(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>* mutable_build_deps();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>& _internal_build_deps() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>* _internal_mutable_build_deps();
  public:
  const ::cosmos::base::tendermint::v1beta1::Module& build_deps(int index) const;
  ::cosmos::base::tendermint::v1beta1::Module* add_build_deps();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>& build_deps() const;
  // string name = 1 [json_name = "name"];
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string app_name = 2 [json_name = "appName"];
  void clear_app_name() ;
  const std::string& app_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_name(Arg_&& arg, Args_... args);
  std::string* mutable_app_name();
  PROTOBUF_NODISCARD std::string* release_app_name();
  void set_allocated_app_name(std::string* value);

  private:
  const std::string& _internal_app_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_name(
      const std::string& value);
  std::string* _internal_mutable_app_name();

  public:
  // string version = 3 [json_name = "version"];
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string git_commit = 4 [json_name = "gitCommit"];
  void clear_git_commit() ;
  const std::string& git_commit() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_git_commit(Arg_&& arg, Args_... args);
  std::string* mutable_git_commit();
  PROTOBUF_NODISCARD std::string* release_git_commit();
  void set_allocated_git_commit(std::string* value);

  private:
  const std::string& _internal_git_commit() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_git_commit(
      const std::string& value);
  std::string* _internal_mutable_git_commit();

  public:
  // string build_tags = 5 [json_name = "buildTags"];
  void clear_build_tags() ;
  const std::string& build_tags() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_build_tags(Arg_&& arg, Args_... args);
  std::string* mutable_build_tags();
  PROTOBUF_NODISCARD std::string* release_build_tags();
  void set_allocated_build_tags(std::string* value);

  private:
  const std::string& _internal_build_tags() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_build_tags(
      const std::string& value);
  std::string* _internal_mutable_build_tags();

  public:
  // string go_version = 6 [json_name = "goVersion"];
  void clear_go_version() ;
  const std::string& go_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_go_version(Arg_&& arg, Args_... args);
  std::string* mutable_go_version();
  PROTOBUF_NODISCARD std::string* release_go_version();
  void set_allocated_go_version(std::string* value);

  private:
  const std::string& _internal_go_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_go_version(
      const std::string& value);
  std::string* _internal_mutable_go_version();

  public:
  // string cosmos_sdk_version = 8 [json_name = "cosmosSdkVersion", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];
  void clear_cosmos_sdk_version() ;
  const std::string& cosmos_sdk_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cosmos_sdk_version(Arg_&& arg, Args_... args);
  std::string* mutable_cosmos_sdk_version();
  PROTOBUF_NODISCARD std::string* release_cosmos_sdk_version();
  void set_allocated_cosmos_sdk_version(std::string* value);

  private:
  const std::string& _internal_cosmos_sdk_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cosmos_sdk_version(
      const std::string& value);
  std::string* _internal_mutable_cosmos_sdk_version();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.VersionInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      126, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VersionInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::tendermint::v1beta1::Module > build_deps_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr app_name_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr git_commit_;
    ::google::protobuf::internal::ArenaStringPtr build_tags_;
    ::google::protobuf::internal::ArenaStringPtr go_version_;
    ::google::protobuf::internal::ArenaStringPtr cosmos_sdk_version_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class Validator final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.Validator) */ {
 public:
  inline Validator() : Validator(nullptr) {}
  ~Validator() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Validator* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Validator));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Validator(
      ::google::protobuf::internal::ConstantInitialized);

  inline Validator(const Validator& from) : Validator(nullptr, from) {}
  inline Validator(Validator&& from) noexcept
      : Validator(nullptr, std::move(from)) {}
  inline Validator& operator=(const Validator& from) {
    CopyFrom(from);
    return *this;
  }
  inline Validator& operator=(Validator&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Validator& default_instance() {
    return *internal_default_instance();
  }
  static inline const Validator* internal_default_instance() {
    return reinterpret_cast<const Validator*>(
        &_Validator_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Validator& a, Validator& b) { a.Swap(&b); }
  inline void Swap(Validator* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Validator* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Validator* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Validator>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Validator& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Validator& from) { Validator::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Validator* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.Validator"; }

 protected:
  explicit Validator(::google::protobuf::Arena* arena);
  Validator(::google::protobuf::Arena* arena, const Validator& from);
  Validator(::google::protobuf::Arena* arena, Validator&& from) noexcept
      : Validator(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kPubKeyFieldNumber = 2,
    kVotingPowerFieldNumber = 3,
    kProposerPriorityFieldNumber = 4,
  };
  // string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
  bool has_pub_key() const;
  void clear_pub_key() ;
  const ::google::protobuf::Any& pub_key() const;
  PROTOBUF_NODISCARD ::google::protobuf::Any* release_pub_key();
  ::google::protobuf::Any* mutable_pub_key();
  void set_allocated_pub_key(::google::protobuf::Any* value);
  void unsafe_arena_set_allocated_pub_key(::google::protobuf::Any* value);
  ::google::protobuf::Any* unsafe_arena_release_pub_key();

  private:
  const ::google::protobuf::Any& _internal_pub_key() const;
  ::google::protobuf::Any* _internal_mutable_pub_key();

  public:
  // int64 voting_power = 3 [json_name = "votingPower"];
  void clear_voting_power() ;
  ::int64_t voting_power() const;
  void set_voting_power(::int64_t value);

  private:
  ::int64_t _internal_voting_power() const;
  void _internal_set_voting_power(::int64_t value);

  public:
  // int64 proposer_priority = 4 [json_name = "proposerPriority"];
  void clear_proposer_priority() ;
  ::int64_t proposer_priority() const;
  void set_proposer_priority(::int64_t value);

  private:
  ::int64_t _internal_proposer_priority() const;
  void _internal_set_proposer_priority(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.Validator)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      56, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Validator& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::Any* pub_key_;
    ::int64_t voting_power_;
    ::int64_t proposer_priority_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class ProofOps final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.ProofOps) */ {
 public:
  inline ProofOps() : ProofOps(nullptr) {}
  ~ProofOps() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProofOps* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProofOps));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProofOps(
      ::google::protobuf::internal::ConstantInitialized);

  inline ProofOps(const ProofOps& from) : ProofOps(nullptr, from) {}
  inline ProofOps(ProofOps&& from) noexcept
      : ProofOps(nullptr, std::move(from)) {}
  inline ProofOps& operator=(const ProofOps& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProofOps& operator=(ProofOps&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProofOps& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProofOps* internal_default_instance() {
    return reinterpret_cast<const ProofOps*>(
        &_ProofOps_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(ProofOps& a, ProofOps& b) { a.Swap(&b); }
  inline void Swap(ProofOps* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProofOps* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProofOps* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProofOps>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProofOps& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProofOps& from) { ProofOps::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProofOps* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.ProofOps"; }

 protected:
  explicit ProofOps(::google::protobuf::Arena* arena);
  ProofOps(::google::protobuf::Arena* arena, const ProofOps& from);
  ProofOps(::google::protobuf::Arena* arena, ProofOps&& from) noexcept
      : ProofOps(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpsFieldNumber = 1,
  };
  // repeated .cosmos.base.tendermint.v1beta1.ProofOp ops = 1 [json_name = "ops", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int ops_size() const;
  private:
  int _internal_ops_size() const;

  public:
  void clear_ops() ;
  ::cosmos::base::tendermint::v1beta1::ProofOp* mutable_ops(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>* mutable_ops();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>& _internal_ops() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>* _internal_mutable_ops();
  public:
  const ::cosmos::base::tendermint::v1beta1::ProofOp& ops(int index) const;
  ::cosmos::base::tendermint::v1beta1::ProofOp* add_ops();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>& ops() const;
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.ProofOps)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ProofOps& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::tendermint::v1beta1::ProofOp > ops_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetValidatorSetByHeightRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest) */ {
 public:
  inline GetValidatorSetByHeightRequest() : GetValidatorSetByHeightRequest(nullptr) {}
  ~GetValidatorSetByHeightRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetValidatorSetByHeightRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetValidatorSetByHeightRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetValidatorSetByHeightRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetValidatorSetByHeightRequest(const GetValidatorSetByHeightRequest& from) : GetValidatorSetByHeightRequest(nullptr, from) {}
  inline GetValidatorSetByHeightRequest(GetValidatorSetByHeightRequest&& from) noexcept
      : GetValidatorSetByHeightRequest(nullptr, std::move(from)) {}
  inline GetValidatorSetByHeightRequest& operator=(const GetValidatorSetByHeightRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetValidatorSetByHeightRequest& operator=(GetValidatorSetByHeightRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetValidatorSetByHeightRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetValidatorSetByHeightRequest* internal_default_instance() {
    return reinterpret_cast<const GetValidatorSetByHeightRequest*>(
        &_GetValidatorSetByHeightRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetValidatorSetByHeightRequest& a, GetValidatorSetByHeightRequest& b) { a.Swap(&b); }
  inline void Swap(GetValidatorSetByHeightRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetValidatorSetByHeightRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetValidatorSetByHeightRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetValidatorSetByHeightRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetValidatorSetByHeightRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetValidatorSetByHeightRequest& from) { GetValidatorSetByHeightRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetValidatorSetByHeightRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest"; }

 protected:
  explicit GetValidatorSetByHeightRequest(::google::protobuf::Arena* arena);
  GetValidatorSetByHeightRequest(::google::protobuf::Arena* arena, const GetValidatorSetByHeightRequest& from);
  GetValidatorSetByHeightRequest(::google::protobuf::Arena* arena, GetValidatorSetByHeightRequest&& from) noexcept
      : GetValidatorSetByHeightRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 2,
    kHeightFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // int64 height = 1 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetValidatorSetByHeightRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    ::int64_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetLatestValidatorSetRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest) */ {
 public:
  inline GetLatestValidatorSetRequest() : GetLatestValidatorSetRequest(nullptr) {}
  ~GetLatestValidatorSetRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetLatestValidatorSetRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetLatestValidatorSetRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLatestValidatorSetRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLatestValidatorSetRequest(const GetLatestValidatorSetRequest& from) : GetLatestValidatorSetRequest(nullptr, from) {}
  inline GetLatestValidatorSetRequest(GetLatestValidatorSetRequest&& from) noexcept
      : GetLatestValidatorSetRequest(nullptr, std::move(from)) {}
  inline GetLatestValidatorSetRequest& operator=(const GetLatestValidatorSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLatestValidatorSetRequest& operator=(GetLatestValidatorSetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLatestValidatorSetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLatestValidatorSetRequest* internal_default_instance() {
    return reinterpret_cast<const GetLatestValidatorSetRequest*>(
        &_GetLatestValidatorSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetLatestValidatorSetRequest& a, GetLatestValidatorSetRequest& b) { a.Swap(&b); }
  inline void Swap(GetLatestValidatorSetRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLatestValidatorSetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLatestValidatorSetRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetLatestValidatorSetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLatestValidatorSetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLatestValidatorSetRequest& from) { GetLatestValidatorSetRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetLatestValidatorSetRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest"; }

 protected:
  explicit GetLatestValidatorSetRequest(::google::protobuf::Arena* arena);
  GetLatestValidatorSetRequest(::google::protobuf::Arena* arena, const GetLatestValidatorSetRequest& from);
  GetLatestValidatorSetRequest(::google::protobuf::Arena* arena, GetLatestValidatorSetRequest&& from) noexcept
      : GetLatestValidatorSetRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaginationFieldNumber = 1,
  };
  // .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageRequest& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageRequest* release_pagination();
  ::cosmos::base::query::v1beta1::PageRequest* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value);
  ::cosmos::base::query::v1beta1::PageRequest* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageRequest& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageRequest* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLatestValidatorSetRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cosmos::base::query::v1beta1::PageRequest* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetValidatorSetByHeightResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse) */ {
 public:
  inline GetValidatorSetByHeightResponse() : GetValidatorSetByHeightResponse(nullptr) {}
  ~GetValidatorSetByHeightResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetValidatorSetByHeightResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetValidatorSetByHeightResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetValidatorSetByHeightResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetValidatorSetByHeightResponse(const GetValidatorSetByHeightResponse& from) : GetValidatorSetByHeightResponse(nullptr, from) {}
  inline GetValidatorSetByHeightResponse(GetValidatorSetByHeightResponse&& from) noexcept
      : GetValidatorSetByHeightResponse(nullptr, std::move(from)) {}
  inline GetValidatorSetByHeightResponse& operator=(const GetValidatorSetByHeightResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetValidatorSetByHeightResponse& operator=(GetValidatorSetByHeightResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetValidatorSetByHeightResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetValidatorSetByHeightResponse* internal_default_instance() {
    return reinterpret_cast<const GetValidatorSetByHeightResponse*>(
        &_GetValidatorSetByHeightResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetValidatorSetByHeightResponse& a, GetValidatorSetByHeightResponse& b) { a.Swap(&b); }
  inline void Swap(GetValidatorSetByHeightResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetValidatorSetByHeightResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetValidatorSetByHeightResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetValidatorSetByHeightResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetValidatorSetByHeightResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetValidatorSetByHeightResponse& from) { GetValidatorSetByHeightResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetValidatorSetByHeightResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse"; }

 protected:
  explicit GetValidatorSetByHeightResponse(::google::protobuf::Arena* arena);
  GetValidatorSetByHeightResponse(::google::protobuf::Arena* arena, const GetValidatorSetByHeightResponse& from);
  GetValidatorSetByHeightResponse(::google::protobuf::Arena* arena, GetValidatorSetByHeightResponse&& from) noexcept
      : GetValidatorSetByHeightResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorsFieldNumber = 2,
    kPaginationFieldNumber = 3,
    kBlockHeightFieldNumber = 1,
  };
  // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
  int validators_size() const;
  private:
  int _internal_validators_size() const;

  public:
  void clear_validators() ;
  ::cosmos::base::tendermint::v1beta1::Validator* mutable_validators(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>* mutable_validators();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>& _internal_validators() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>* _internal_mutable_validators();
  public:
  const ::cosmos::base::tendermint::v1beta1::Validator& validators(int index) const;
  ::cosmos::base::tendermint::v1beta1::Validator* add_validators();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>& validators() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // int64 block_height = 1 [json_name = "blockHeight"];
  void clear_block_height() ;
  ::int64_t block_height() const;
  void set_block_height(::int64_t value);

  private:
  ::int64_t _internal_block_height() const;
  void _internal_set_block_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetValidatorSetByHeightResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::tendermint::v1beta1::Validator > validators_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    ::int64_t block_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetNodeInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse) */ {
 public:
  inline GetNodeInfoResponse() : GetNodeInfoResponse(nullptr) {}
  ~GetNodeInfoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetNodeInfoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetNodeInfoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetNodeInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetNodeInfoResponse(const GetNodeInfoResponse& from) : GetNodeInfoResponse(nullptr, from) {}
  inline GetNodeInfoResponse(GetNodeInfoResponse&& from) noexcept
      : GetNodeInfoResponse(nullptr, std::move(from)) {}
  inline GetNodeInfoResponse& operator=(const GetNodeInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetNodeInfoResponse& operator=(GetNodeInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetNodeInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetNodeInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetNodeInfoResponse*>(
        &_GetNodeInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetNodeInfoResponse& a, GetNodeInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetNodeInfoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetNodeInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetNodeInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetNodeInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetNodeInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetNodeInfoResponse& from) { GetNodeInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetNodeInfoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetNodeInfoResponse"; }

 protected:
  explicit GetNodeInfoResponse(::google::protobuf::Arena* arena);
  GetNodeInfoResponse(::google::protobuf::Arena* arena, const GetNodeInfoResponse& from);
  GetNodeInfoResponse(::google::protobuf::Arena* arena, GetNodeInfoResponse&& from) noexcept
      : GetNodeInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefaultNodeInfoFieldNumber = 1,
    kApplicationVersionFieldNumber = 2,
  };
  // .tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];
  bool has_default_node_info() const;
  void clear_default_node_info() ;
  const ::tendermint::p2p::DefaultNodeInfo& default_node_info() const;
  PROTOBUF_NODISCARD ::tendermint::p2p::DefaultNodeInfo* release_default_node_info();
  ::tendermint::p2p::DefaultNodeInfo* mutable_default_node_info();
  void set_allocated_default_node_info(::tendermint::p2p::DefaultNodeInfo* value);
  void unsafe_arena_set_allocated_default_node_info(::tendermint::p2p::DefaultNodeInfo* value);
  ::tendermint::p2p::DefaultNodeInfo* unsafe_arena_release_default_node_info();

  private:
  const ::tendermint::p2p::DefaultNodeInfo& _internal_default_node_info() const;
  ::tendermint::p2p::DefaultNodeInfo* _internal_mutable_default_node_info();

  public:
  // .cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];
  bool has_application_version() const;
  void clear_application_version() ;
  const ::cosmos::base::tendermint::v1beta1::VersionInfo& application_version() const;
  PROTOBUF_NODISCARD ::cosmos::base::tendermint::v1beta1::VersionInfo* release_application_version();
  ::cosmos::base::tendermint::v1beta1::VersionInfo* mutable_application_version();
  void set_allocated_application_version(::cosmos::base::tendermint::v1beta1::VersionInfo* value);
  void unsafe_arena_set_allocated_application_version(::cosmos::base::tendermint::v1beta1::VersionInfo* value);
  ::cosmos::base::tendermint::v1beta1::VersionInfo* unsafe_arena_release_application_version();

  private:
  const ::cosmos::base::tendermint::v1beta1::VersionInfo& _internal_application_version() const;
  ::cosmos::base::tendermint::v1beta1::VersionInfo* _internal_mutable_application_version();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetNodeInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tendermint::p2p::DefaultNodeInfo* default_node_info_;
    ::cosmos::base::tendermint::v1beta1::VersionInfo* application_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetLatestValidatorSetResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse) */ {
 public:
  inline GetLatestValidatorSetResponse() : GetLatestValidatorSetResponse(nullptr) {}
  ~GetLatestValidatorSetResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetLatestValidatorSetResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetLatestValidatorSetResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLatestValidatorSetResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLatestValidatorSetResponse(const GetLatestValidatorSetResponse& from) : GetLatestValidatorSetResponse(nullptr, from) {}
  inline GetLatestValidatorSetResponse(GetLatestValidatorSetResponse&& from) noexcept
      : GetLatestValidatorSetResponse(nullptr, std::move(from)) {}
  inline GetLatestValidatorSetResponse& operator=(const GetLatestValidatorSetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLatestValidatorSetResponse& operator=(GetLatestValidatorSetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLatestValidatorSetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLatestValidatorSetResponse* internal_default_instance() {
    return reinterpret_cast<const GetLatestValidatorSetResponse*>(
        &_GetLatestValidatorSetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetLatestValidatorSetResponse& a, GetLatestValidatorSetResponse& b) { a.Swap(&b); }
  inline void Swap(GetLatestValidatorSetResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLatestValidatorSetResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLatestValidatorSetResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetLatestValidatorSetResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLatestValidatorSetResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLatestValidatorSetResponse& from) { GetLatestValidatorSetResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetLatestValidatorSetResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse"; }

 protected:
  explicit GetLatestValidatorSetResponse(::google::protobuf::Arena* arena);
  GetLatestValidatorSetResponse(::google::protobuf::Arena* arena, const GetLatestValidatorSetResponse& from);
  GetLatestValidatorSetResponse(::google::protobuf::Arena* arena, GetLatestValidatorSetResponse&& from) noexcept
      : GetLatestValidatorSetResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidatorsFieldNumber = 2,
    kPaginationFieldNumber = 3,
    kBlockHeightFieldNumber = 1,
  };
  // repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
  int validators_size() const;
  private:
  int _internal_validators_size() const;

  public:
  void clear_validators() ;
  ::cosmos::base::tendermint::v1beta1::Validator* mutable_validators(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>* mutable_validators();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>& _internal_validators() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>* _internal_mutable_validators();
  public:
  const ::cosmos::base::tendermint::v1beta1::Validator& validators(int index) const;
  ::cosmos::base::tendermint::v1beta1::Validator* add_validators();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>& validators() const;
  // .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
  bool has_pagination() const;
  void clear_pagination() ;
  const ::cosmos::base::query::v1beta1::PageResponse& pagination() const;
  PROTOBUF_NODISCARD ::cosmos::base::query::v1beta1::PageResponse* release_pagination();
  ::cosmos::base::query::v1beta1::PageResponse* mutable_pagination();
  void set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  void unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value);
  ::cosmos::base::query::v1beta1::PageResponse* unsafe_arena_release_pagination();

  private:
  const ::cosmos::base::query::v1beta1::PageResponse& _internal_pagination() const;
  ::cosmos::base::query::v1beta1::PageResponse* _internal_mutable_pagination();

  public:
  // int64 block_height = 1 [json_name = "blockHeight"];
  void clear_block_height() ;
  ::int64_t block_height() const;
  void set_block_height(::int64_t value);

  private:
  ::int64_t _internal_block_height() const;
  void _internal_set_block_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLatestValidatorSetResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::tendermint::v1beta1::Validator > validators_;
    ::cosmos::base::query::v1beta1::PageResponse* pagination_;
    ::int64_t block_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class ABCIQueryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.ABCIQueryResponse) */ {
 public:
  inline ABCIQueryResponse() : ABCIQueryResponse(nullptr) {}
  ~ABCIQueryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ABCIQueryResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ABCIQueryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ABCIQueryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ABCIQueryResponse(const ABCIQueryResponse& from) : ABCIQueryResponse(nullptr, from) {}
  inline ABCIQueryResponse(ABCIQueryResponse&& from) noexcept
      : ABCIQueryResponse(nullptr, std::move(from)) {}
  inline ABCIQueryResponse& operator=(const ABCIQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ABCIQueryResponse& operator=(ABCIQueryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ABCIQueryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ABCIQueryResponse* internal_default_instance() {
    return reinterpret_cast<const ABCIQueryResponse*>(
        &_ABCIQueryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(ABCIQueryResponse& a, ABCIQueryResponse& b) { a.Swap(&b); }
  inline void Swap(ABCIQueryResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ABCIQueryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ABCIQueryResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ABCIQueryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ABCIQueryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ABCIQueryResponse& from) { ABCIQueryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ABCIQueryResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.ABCIQueryResponse"; }

 protected:
  explicit ABCIQueryResponse(::google::protobuf::Arena* arena);
  ABCIQueryResponse(::google::protobuf::Arena* arena, const ABCIQueryResponse& from);
  ABCIQueryResponse(::google::protobuf::Arena* arena, ABCIQueryResponse&& from) noexcept
      : ABCIQueryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogFieldNumber = 3,
    kInfoFieldNumber = 4,
    kKeyFieldNumber = 6,
    kValueFieldNumber = 7,
    kCodespaceFieldNumber = 10,
    kProofOpsFieldNumber = 8,
    kIndexFieldNumber = 5,
    kHeightFieldNumber = 9,
    kCodeFieldNumber = 1,
  };
  // string log = 3 [json_name = "log"];
  void clear_log() ;
  const std::string& log() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log(Arg_&& arg, Args_... args);
  std::string* mutable_log();
  PROTOBUF_NODISCARD std::string* release_log();
  void set_allocated_log(std::string* value);

  private:
  const std::string& _internal_log() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log(
      const std::string& value);
  std::string* _internal_mutable_log();

  public:
  // string info = 4 [json_name = "info"];
  void clear_info() ;
  const std::string& info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_info(Arg_&& arg, Args_... args);
  std::string* mutable_info();
  PROTOBUF_NODISCARD std::string* release_info();
  void set_allocated_info(std::string* value);

  private:
  const std::string& _internal_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_info(
      const std::string& value);
  std::string* _internal_mutable_info();

  public:
  // bytes key = 6 [json_name = "key"];
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes value = 7 [json_name = "value"];
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // string codespace = 10 [json_name = "codespace"];
  void clear_codespace() ;
  const std::string& codespace() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_codespace(Arg_&& arg, Args_... args);
  std::string* mutable_codespace();
  PROTOBUF_NODISCARD std::string* release_codespace();
  void set_allocated_codespace(std::string* value);

  private:
  const std::string& _internal_codespace() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_codespace(
      const std::string& value);
  std::string* _internal_mutable_codespace();

  public:
  // .cosmos.base.tendermint.v1beta1.ProofOps proof_ops = 8 [json_name = "proofOps"];
  bool has_proof_ops() const;
  void clear_proof_ops() ;
  const ::cosmos::base::tendermint::v1beta1::ProofOps& proof_ops() const;
  PROTOBUF_NODISCARD ::cosmos::base::tendermint::v1beta1::ProofOps* release_proof_ops();
  ::cosmos::base::tendermint::v1beta1::ProofOps* mutable_proof_ops();
  void set_allocated_proof_ops(::cosmos::base::tendermint::v1beta1::ProofOps* value);
  void unsafe_arena_set_allocated_proof_ops(::cosmos::base::tendermint::v1beta1::ProofOps* value);
  ::cosmos::base::tendermint::v1beta1::ProofOps* unsafe_arena_release_proof_ops();

  private:
  const ::cosmos::base::tendermint::v1beta1::ProofOps& _internal_proof_ops() const;
  ::cosmos::base::tendermint::v1beta1::ProofOps* _internal_mutable_proof_ops();

  public:
  // int64 index = 5 [json_name = "index"];
  void clear_index() ;
  ::int64_t index() const;
  void set_index(::int64_t value);

  private:
  ::int64_t _internal_index() const;
  void _internal_set_index(::int64_t value);

  public:
  // int64 height = 9 [json_name = "height"];
  void clear_height() ;
  ::int64_t height() const;
  void set_height(::int64_t value);

  private:
  ::int64_t _internal_height() const;
  void _internal_set_height(::int64_t value);

  public:
  // uint32 code = 1 [json_name = "code"];
  void clear_code() ;
  ::uint32_t code() const;
  void set_code(::uint32_t value);

  private:
  ::uint32_t _internal_code() const;
  void _internal_set_code(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.ABCIQueryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 1,
      81, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ABCIQueryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr log_;
    ::google::protobuf::internal::ArenaStringPtr info_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::ArenaStringPtr codespace_;
    ::cosmos::base::tendermint::v1beta1::ProofOps* proof_ops_;
    ::int64_t index_;
    ::int64_t height_;
    ::uint32_t code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetLatestBlockResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse) */ {
 public:
  inline GetLatestBlockResponse() : GetLatestBlockResponse(nullptr) {}
  ~GetLatestBlockResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetLatestBlockResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetLatestBlockResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetLatestBlockResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetLatestBlockResponse(const GetLatestBlockResponse& from) : GetLatestBlockResponse(nullptr, from) {}
  inline GetLatestBlockResponse(GetLatestBlockResponse&& from) noexcept
      : GetLatestBlockResponse(nullptr, std::move(from)) {}
  inline GetLatestBlockResponse& operator=(const GetLatestBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetLatestBlockResponse& operator=(GetLatestBlockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetLatestBlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetLatestBlockResponse* internal_default_instance() {
    return reinterpret_cast<const GetLatestBlockResponse*>(
        &_GetLatestBlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(GetLatestBlockResponse& a, GetLatestBlockResponse& b) { a.Swap(&b); }
  inline void Swap(GetLatestBlockResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetLatestBlockResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetLatestBlockResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetLatestBlockResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetLatestBlockResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetLatestBlockResponse& from) { GetLatestBlockResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetLatestBlockResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetLatestBlockResponse"; }

 protected:
  explicit GetLatestBlockResponse(::google::protobuf::Arena* arena);
  GetLatestBlockResponse(::google::protobuf::Arena* arena, const GetLatestBlockResponse& from);
  GetLatestBlockResponse(::google::protobuf::Arena* arena, GetLatestBlockResponse&& from) noexcept
      : GetLatestBlockResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockIdFieldNumber = 1,
    kBlockFieldNumber = 2,
    kSdkBlockFieldNumber = 3,
  };
  // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
  bool has_block_id() const;
  void clear_block_id() ;
  const ::tendermint::types::BlockID& block_id() const;
  PROTOBUF_NODISCARD ::tendermint::types::BlockID* release_block_id();
  ::tendermint::types::BlockID* mutable_block_id();
  void set_allocated_block_id(::tendermint::types::BlockID* value);
  void unsafe_arena_set_allocated_block_id(::tendermint::types::BlockID* value);
  ::tendermint::types::BlockID* unsafe_arena_release_block_id();

  private:
  const ::tendermint::types::BlockID& _internal_block_id() const;
  ::tendermint::types::BlockID* _internal_mutable_block_id();

  public:
  // .tendermint.types.Block block = 2 [json_name = "block"];
  bool has_block() const;
  void clear_block() ;
  const ::tendermint::types::Block& block() const;
  PROTOBUF_NODISCARD ::tendermint::types::Block* release_block();
  ::tendermint::types::Block* mutable_block();
  void set_allocated_block(::tendermint::types::Block* value);
  void unsafe_arena_set_allocated_block(::tendermint::types::Block* value);
  ::tendermint::types::Block* unsafe_arena_release_block();

  private:
  const ::tendermint::types::Block& _internal_block() const;
  ::tendermint::types::Block* _internal_mutable_block();

  public:
  // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
  bool has_sdk_block() const;
  void clear_sdk_block() ;
  const ::cosmos::base::tendermint::v1beta1::Block& sdk_block() const;
  PROTOBUF_NODISCARD ::cosmos::base::tendermint::v1beta1::Block* release_sdk_block();
  ::cosmos::base::tendermint::v1beta1::Block* mutable_sdk_block();
  void set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value);
  void unsafe_arena_set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value);
  ::cosmos::base::tendermint::v1beta1::Block* unsafe_arena_release_sdk_block();

  private:
  const ::cosmos::base::tendermint::v1beta1::Block& _internal_sdk_block() const;
  ::cosmos::base::tendermint::v1beta1::Block* _internal_mutable_sdk_block();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetLatestBlockResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tendermint::types::BlockID* block_id_;
    ::tendermint::types::Block* block_;
    ::cosmos::base::tendermint::v1beta1::Block* sdk_block_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class GetBlockByHeightResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse) */ {
 public:
  inline GetBlockByHeightResponse() : GetBlockByHeightResponse(nullptr) {}
  ~GetBlockByHeightResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBlockByHeightResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBlockByHeightResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockByHeightResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockByHeightResponse(const GetBlockByHeightResponse& from) : GetBlockByHeightResponse(nullptr, from) {}
  inline GetBlockByHeightResponse(GetBlockByHeightResponse&& from) noexcept
      : GetBlockByHeightResponse(nullptr, std::move(from)) {}
  inline GetBlockByHeightResponse& operator=(const GetBlockByHeightResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockByHeightResponse& operator=(GetBlockByHeightResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockByHeightResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockByHeightResponse* internal_default_instance() {
    return reinterpret_cast<const GetBlockByHeightResponse*>(
        &_GetBlockByHeightResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetBlockByHeightResponse& a, GetBlockByHeightResponse& b) { a.Swap(&b); }
  inline void Swap(GetBlockByHeightResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockByHeightResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockByHeightResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockByHeightResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockByHeightResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockByHeightResponse& from) { GetBlockByHeightResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBlockByHeightResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse"; }

 protected:
  explicit GetBlockByHeightResponse(::google::protobuf::Arena* arena);
  GetBlockByHeightResponse(::google::protobuf::Arena* arena, const GetBlockByHeightResponse& from);
  GetBlockByHeightResponse(::google::protobuf::Arena* arena, GetBlockByHeightResponse&& from) noexcept
      : GetBlockByHeightResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockIdFieldNumber = 1,
    kBlockFieldNumber = 2,
    kSdkBlockFieldNumber = 3,
  };
  // .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
  bool has_block_id() const;
  void clear_block_id() ;
  const ::tendermint::types::BlockID& block_id() const;
  PROTOBUF_NODISCARD ::tendermint::types::BlockID* release_block_id();
  ::tendermint::types::BlockID* mutable_block_id();
  void set_allocated_block_id(::tendermint::types::BlockID* value);
  void unsafe_arena_set_allocated_block_id(::tendermint::types::BlockID* value);
  ::tendermint::types::BlockID* unsafe_arena_release_block_id();

  private:
  const ::tendermint::types::BlockID& _internal_block_id() const;
  ::tendermint::types::BlockID* _internal_mutable_block_id();

  public:
  // .tendermint.types.Block block = 2 [json_name = "block"];
  bool has_block() const;
  void clear_block() ;
  const ::tendermint::types::Block& block() const;
  PROTOBUF_NODISCARD ::tendermint::types::Block* release_block();
  ::tendermint::types::Block* mutable_block();
  void set_allocated_block(::tendermint::types::Block* value);
  void unsafe_arena_set_allocated_block(::tendermint::types::Block* value);
  ::tendermint::types::Block* unsafe_arena_release_block();

  private:
  const ::tendermint::types::Block& _internal_block() const;
  ::tendermint::types::Block* _internal_mutable_block();

  public:
  // .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
  bool has_sdk_block() const;
  void clear_sdk_block() ;
  const ::cosmos::base::tendermint::v1beta1::Block& sdk_block() const;
  PROTOBUF_NODISCARD ::cosmos::base::tendermint::v1beta1::Block* release_sdk_block();
  ::cosmos::base::tendermint::v1beta1::Block* mutable_sdk_block();
  void set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value);
  void unsafe_arena_set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value);
  ::cosmos::base::tendermint::v1beta1::Block* unsafe_arena_release_sdk_block();

  private:
  const ::cosmos::base::tendermint::v1beta1::Block& _internal_sdk_block() const;
  ::cosmos::base::tendermint::v1beta1::Block* _internal_mutable_sdk_block();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockByHeightResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tendermint::types::BlockID* block_id_;
    ::tendermint::types::Block* block_;
    ::cosmos::base::tendermint::v1beta1::Block* sdk_block_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetValidatorSetByHeightRequest

// int64 height = 1 [json_name = "height"];
inline void GetValidatorSetByHeightRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t GetValidatorSetByHeightRequest::height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.height)
  return _internal_height();
}
inline void GetValidatorSetByHeightRequest::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.height)
}
inline ::int64_t GetValidatorSetByHeightRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void GetValidatorSetByHeightRequest::_internal_set_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// .cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];
inline bool GetValidatorSetByHeightRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetValidatorSetByHeightRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetValidatorSetByHeightRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.pagination)
  return _internal_pagination();
}
inline void GetValidatorSetByHeightRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetValidatorSetByHeightRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetValidatorSetByHeightRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetValidatorSetByHeightRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetValidatorSetByHeightRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.pagination)
  return _msg;
}
inline void GetValidatorSetByHeightRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightRequest.pagination)
}

// -------------------------------------------------------------------

// GetValidatorSetByHeightResponse

// int64 block_height = 1 [json_name = "blockHeight"];
inline void GetValidatorSetByHeightResponse::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = ::int64_t{0};
}
inline ::int64_t GetValidatorSetByHeightResponse::block_height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.block_height)
  return _internal_block_height();
}
inline void GetValidatorSetByHeightResponse::set_block_height(::int64_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.block_height)
}
inline ::int64_t GetValidatorSetByHeightResponse::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void GetValidatorSetByHeightResponse::_internal_set_block_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
inline int GetValidatorSetByHeightResponse::_internal_validators_size() const {
  return _internal_validators().size();
}
inline int GetValidatorSetByHeightResponse::validators_size() const {
  return _internal_validators_size();
}
inline void GetValidatorSetByHeightResponse::clear_validators() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validators_.Clear();
}
inline ::cosmos::base::tendermint::v1beta1::Validator* GetValidatorSetByHeightResponse::mutable_validators(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.validators)
  return _internal_mutable_validators()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>* GetValidatorSetByHeightResponse::mutable_validators()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.validators)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validators();
}
inline const ::cosmos::base::tendermint::v1beta1::Validator& GetValidatorSetByHeightResponse::validators(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.validators)
  return _internal_validators().Get(index);
}
inline ::cosmos::base::tendermint::v1beta1::Validator* GetValidatorSetByHeightResponse::add_validators() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::tendermint::v1beta1::Validator* _add = _internal_mutable_validators()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.validators)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>& GetValidatorSetByHeightResponse::validators() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.validators)
  return _internal_validators();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>&
GetValidatorSetByHeightResponse::_internal_validators() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validators_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>*
GetValidatorSetByHeightResponse::_internal_mutable_validators() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validators_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
inline bool GetValidatorSetByHeightResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetValidatorSetByHeightResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetValidatorSetByHeightResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.pagination)
  return _internal_pagination();
}
inline void GetValidatorSetByHeightResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetValidatorSetByHeightResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetValidatorSetByHeightResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetValidatorSetByHeightResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetValidatorSetByHeightResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.pagination)
  return _msg;
}
inline void GetValidatorSetByHeightResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse.pagination)
}

// -------------------------------------------------------------------

// GetLatestValidatorSetRequest

// .cosmos.base.query.v1beta1.PageRequest pagination = 1 [json_name = "pagination"];
inline bool GetLatestValidatorSetRequest::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetLatestValidatorSetRequest::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageRequest* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageRequest&>(::cosmos::base::query::v1beta1::_PageRequest_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageRequest& GetLatestValidatorSetRequest::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.pagination)
  return _internal_pagination();
}
inline void GetLatestValidatorSetRequest::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.pagination)
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetLatestValidatorSetRequest::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetLatestValidatorSetRequest::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetLatestValidatorSetRequest::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageRequest>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageRequest* GetLatestValidatorSetRequest::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageRequest* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.pagination)
  return _msg;
}
inline void GetLatestValidatorSetRequest::set_allocated_pagination(::cosmos::base::query::v1beta1::PageRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetRequest.pagination)
}

// -------------------------------------------------------------------

// GetLatestValidatorSetResponse

// int64 block_height = 1 [json_name = "blockHeight"];
inline void GetLatestValidatorSetResponse::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = ::int64_t{0};
}
inline ::int64_t GetLatestValidatorSetResponse::block_height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.block_height)
  return _internal_block_height();
}
inline void GetLatestValidatorSetResponse::set_block_height(::int64_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.block_height)
}
inline ::int64_t GetLatestValidatorSetResponse::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void GetLatestValidatorSetResponse::_internal_set_block_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// repeated .cosmos.base.tendermint.v1beta1.Validator validators = 2 [json_name = "validators"];
inline int GetLatestValidatorSetResponse::_internal_validators_size() const {
  return _internal_validators().size();
}
inline int GetLatestValidatorSetResponse::validators_size() const {
  return _internal_validators_size();
}
inline void GetLatestValidatorSetResponse::clear_validators() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.validators_.Clear();
}
inline ::cosmos::base::tendermint::v1beta1::Validator* GetLatestValidatorSetResponse::mutable_validators(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.validators)
  return _internal_mutable_validators()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>* GetLatestValidatorSetResponse::mutable_validators()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.validators)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_validators();
}
inline const ::cosmos::base::tendermint::v1beta1::Validator& GetLatestValidatorSetResponse::validators(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.validators)
  return _internal_validators().Get(index);
}
inline ::cosmos::base::tendermint::v1beta1::Validator* GetLatestValidatorSetResponse::add_validators() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::tendermint::v1beta1::Validator* _add = _internal_mutable_validators()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.validators)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>& GetLatestValidatorSetResponse::validators() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.validators)
  return _internal_validators();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>&
GetLatestValidatorSetResponse::_internal_validators() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.validators_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Validator>*
GetLatestValidatorSetResponse::_internal_mutable_validators() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.validators_;
}

// .cosmos.base.query.v1beta1.PageResponse pagination = 3 [json_name = "pagination"];
inline bool GetLatestValidatorSetResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetLatestValidatorSetResponse::_internal_pagination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::query::v1beta1::PageResponse* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::query::v1beta1::PageResponse&>(::cosmos::base::query::v1beta1::_PageResponse_default_instance_);
}
inline const ::cosmos::base::query::v1beta1::PageResponse& GetLatestValidatorSetResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.pagination)
  return _internal_pagination();
}
inline void GetLatestValidatorSetResponse::unsafe_arena_set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.pagination)
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetLatestValidatorSetResponse::release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetLatestValidatorSetResponse::unsafe_arena_release_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetLatestValidatorSetResponse::_internal_mutable_pagination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pagination_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::query::v1beta1::PageResponse>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(p);
  }
  return _impl_.pagination_;
}
inline ::cosmos::base::query::v1beta1::PageResponse* GetLatestValidatorSetResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::query::v1beta1::PageResponse* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.pagination)
  return _msg;
}
inline void GetLatestValidatorSetResponse::set_allocated_pagination(::cosmos::base::query::v1beta1::PageResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::cosmos::base::query::v1beta1::PageResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse.pagination)
}

// -------------------------------------------------------------------

// Validator

// string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void Validator::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& Validator::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.Validator.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Validator::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.Validator.address)
}
inline std::string* Validator::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.Validator.address)
  return _s;
}
inline const std::string& Validator::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void Validator::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* Validator::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* Validator::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.Validator.address)
  return _impl_.address_.Release();
}
inline void Validator::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.address_.IsDefault()) {
    _impl_.address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.Validator.address)
}

// .google.protobuf.Any pub_key = 2 [json_name = "pubKey"];
inline bool Validator::has_pub_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pub_key_ != nullptr);
  return value;
}
inline const ::google::protobuf::Any& Validator::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Any* p = _impl_.pub_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Any&>(::google::protobuf::_Any_default_instance_);
}
inline const ::google::protobuf::Any& Validator::pub_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.Validator.pub_key)
  return _internal_pub_key();
}
inline void Validator::unsafe_arena_set_allocated_pub_key(::google::protobuf::Any* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pub_key_);
  }
  _impl_.pub_key_ = reinterpret_cast<::google::protobuf::Any*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.Validator.pub_key)
}
inline ::google::protobuf::Any* Validator::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* released = _impl_.pub_key_;
  _impl_.pub_key_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Any* Validator::unsafe_arena_release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.Validator.pub_key)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Any* temp = _impl_.pub_key_;
  _impl_.pub_key_ = nullptr;
  return temp;
}
inline ::google::protobuf::Any* Validator::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pub_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Any>(GetArena());
    _impl_.pub_key_ = reinterpret_cast<::google::protobuf::Any*>(p);
  }
  return _impl_.pub_key_;
}
inline ::google::protobuf::Any* Validator::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Any* _msg = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.Validator.pub_key)
  return _msg;
}
inline void Validator::set_allocated_pub_key(::google::protobuf::Any* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pub_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pub_key_ = reinterpret_cast<::google::protobuf::Any*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.Validator.pub_key)
}

// int64 voting_power = 3 [json_name = "votingPower"];
inline void Validator::clear_voting_power() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voting_power_ = ::int64_t{0};
}
inline ::int64_t Validator::voting_power() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.Validator.voting_power)
  return _internal_voting_power();
}
inline void Validator::set_voting_power(::int64_t value) {
  _internal_set_voting_power(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.Validator.voting_power)
}
inline ::int64_t Validator::_internal_voting_power() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.voting_power_;
}
inline void Validator::_internal_set_voting_power(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.voting_power_ = value;
}

// int64 proposer_priority = 4 [json_name = "proposerPriority"];
inline void Validator::clear_proposer_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_priority_ = ::int64_t{0};
}
inline ::int64_t Validator::proposer_priority() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.Validator.proposer_priority)
  return _internal_proposer_priority();
}
inline void Validator::set_proposer_priority(::int64_t value) {
  _internal_set_proposer_priority(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.Validator.proposer_priority)
}
inline ::int64_t Validator::_internal_proposer_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proposer_priority_;
}
inline void Validator::_internal_set_proposer_priority(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proposer_priority_ = value;
}

// -------------------------------------------------------------------

// GetBlockByHeightRequest

// int64 height = 1 [json_name = "height"];
inline void GetBlockByHeightRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t GetBlockByHeightRequest::height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest.height)
  return _internal_height();
}
inline void GetBlockByHeightRequest::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.GetBlockByHeightRequest.height)
}
inline ::int64_t GetBlockByHeightRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void GetBlockByHeightRequest::_internal_set_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// GetBlockByHeightResponse

// .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
inline bool GetBlockByHeightResponse::has_block_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_id_ != nullptr);
  return value;
}
inline const ::tendermint::types::BlockID& GetBlockByHeightResponse::_internal_block_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::BlockID* p = _impl_.block_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::BlockID&>(::tendermint::types::_BlockID_default_instance_);
}
inline const ::tendermint::types::BlockID& GetBlockByHeightResponse::block_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block_id)
  return _internal_block_id();
}
inline void GetBlockByHeightResponse::unsafe_arena_set_allocated_block_id(::tendermint::types::BlockID* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_id_);
  }
  _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block_id)
}
inline ::tendermint::types::BlockID* GetBlockByHeightResponse::release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockID* released = _impl_.block_id_;
  _impl_.block_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::BlockID* GetBlockByHeightResponse::unsafe_arena_release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockID* temp = _impl_.block_id_;
  _impl_.block_id_ = nullptr;
  return temp;
}
inline ::tendermint::types::BlockID* GetBlockByHeightResponse::_internal_mutable_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::BlockID>(GetArena());
    _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(p);
  }
  return _impl_.block_id_;
}
inline ::tendermint::types::BlockID* GetBlockByHeightResponse::mutable_block_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::types::BlockID* _msg = _internal_mutable_block_id();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block_id)
  return _msg;
}
inline void GetBlockByHeightResponse::set_allocated_block_id(::tendermint::types::BlockID* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block_id)
}

// .tendermint.types.Block block = 2 [json_name = "block"];
inline bool GetBlockByHeightResponse::has_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_ != nullptr);
  return value;
}
inline const ::tendermint::types::Block& GetBlockByHeightResponse::_internal_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::Block* p = _impl_.block_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::Block&>(::tendermint::types::_Block_default_instance_);
}
inline const ::tendermint::types::Block& GetBlockByHeightResponse::block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block)
  return _internal_block();
}
inline void GetBlockByHeightResponse::unsafe_arena_set_allocated_block(::tendermint::types::Block* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_);
  }
  _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block)
}
inline ::tendermint::types::Block* GetBlockByHeightResponse::release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::Block* released = _impl_.block_;
  _impl_.block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::Block* GetBlockByHeightResponse::unsafe_arena_release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::Block* temp = _impl_.block_;
  _impl_.block_ = nullptr;
  return temp;
}
inline ::tendermint::types::Block* GetBlockByHeightResponse::_internal_mutable_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::Block>(GetArena());
    _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(p);
  }
  return _impl_.block_;
}
inline ::tendermint::types::Block* GetBlockByHeightResponse::mutable_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tendermint::types::Block* _msg = _internal_mutable_block();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block)
  return _msg;
}
inline void GetBlockByHeightResponse::set_allocated_block(::tendermint::types::Block* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.block)
}

// .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
inline bool GetBlockByHeightResponse::has_sdk_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sdk_block_ != nullptr);
  return value;
}
inline const ::cosmos::base::tendermint::v1beta1::Block& GetBlockByHeightResponse::_internal_sdk_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::tendermint::v1beta1::Block* p = _impl_.sdk_block_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::tendermint::v1beta1::Block&>(::cosmos::base::tendermint::v1beta1::_Block_default_instance_);
}
inline const ::cosmos::base::tendermint::v1beta1::Block& GetBlockByHeightResponse::sdk_block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.sdk_block)
  return _internal_sdk_block();
}
inline void GetBlockByHeightResponse::unsafe_arena_set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sdk_block_);
  }
  _impl_.sdk_block_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::Block*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.sdk_block)
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetBlockByHeightResponse::release_sdk_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::tendermint::v1beta1::Block* released = _impl_.sdk_block_;
  _impl_.sdk_block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetBlockByHeightResponse::unsafe_arena_release_sdk_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.sdk_block)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::tendermint::v1beta1::Block* temp = _impl_.sdk_block_;
  _impl_.sdk_block_ = nullptr;
  return temp;
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetBlockByHeightResponse::_internal_mutable_sdk_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sdk_block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::tendermint::v1beta1::Block>(GetArena());
    _impl_.sdk_block_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::Block*>(p);
  }
  return _impl_.sdk_block_;
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetBlockByHeightResponse::mutable_sdk_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::cosmos::base::tendermint::v1beta1::Block* _msg = _internal_mutable_sdk_block();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.sdk_block)
  return _msg;
}
inline void GetBlockByHeightResponse::set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sdk_block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.sdk_block_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::Block*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse.sdk_block)
}

// -------------------------------------------------------------------

// GetLatestBlockRequest

// -------------------------------------------------------------------

// GetLatestBlockResponse

// .tendermint.types.BlockID block_id = 1 [json_name = "blockId"];
inline bool GetLatestBlockResponse::has_block_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_id_ != nullptr);
  return value;
}
inline const ::tendermint::types::BlockID& GetLatestBlockResponse::_internal_block_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::BlockID* p = _impl_.block_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::BlockID&>(::tendermint::types::_BlockID_default_instance_);
}
inline const ::tendermint::types::BlockID& GetLatestBlockResponse::block_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block_id)
  return _internal_block_id();
}
inline void GetLatestBlockResponse::unsafe_arena_set_allocated_block_id(::tendermint::types::BlockID* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_id_);
  }
  _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block_id)
}
inline ::tendermint::types::BlockID* GetLatestBlockResponse::release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockID* released = _impl_.block_id_;
  _impl_.block_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::BlockID* GetLatestBlockResponse::unsafe_arena_release_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::types::BlockID* temp = _impl_.block_id_;
  _impl_.block_id_ = nullptr;
  return temp;
}
inline ::tendermint::types::BlockID* GetLatestBlockResponse::_internal_mutable_block_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::BlockID>(GetArena());
    _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(p);
  }
  return _impl_.block_id_;
}
inline ::tendermint::types::BlockID* GetLatestBlockResponse::mutable_block_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::types::BlockID* _msg = _internal_mutable_block_id();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block_id)
  return _msg;
}
inline void GetLatestBlockResponse::set_allocated_block_id(::tendermint::types::BlockID* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.block_id_ = reinterpret_cast<::tendermint::types::BlockID*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block_id)
}

// .tendermint.types.Block block = 2 [json_name = "block"];
inline bool GetLatestBlockResponse::has_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_ != nullptr);
  return value;
}
inline const ::tendermint::types::Block& GetLatestBlockResponse::_internal_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::types::Block* p = _impl_.block_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::types::Block&>(::tendermint::types::_Block_default_instance_);
}
inline const ::tendermint::types::Block& GetLatestBlockResponse::block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block)
  return _internal_block();
}
inline void GetLatestBlockResponse::unsafe_arena_set_allocated_block(::tendermint::types::Block* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_);
  }
  _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block)
}
inline ::tendermint::types::Block* GetLatestBlockResponse::release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::Block* released = _impl_.block_;
  _impl_.block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::types::Block* GetLatestBlockResponse::unsafe_arena_release_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::types::Block* temp = _impl_.block_;
  _impl_.block_ = nullptr;
  return temp;
}
inline ::tendermint::types::Block* GetLatestBlockResponse::_internal_mutable_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::types::Block>(GetArena());
    _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(p);
  }
  return _impl_.block_;
}
inline ::tendermint::types::Block* GetLatestBlockResponse::mutable_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tendermint::types::Block* _msg = _internal_mutable_block();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block)
  return _msg;
}
inline void GetLatestBlockResponse::set_allocated_block(::tendermint::types::Block* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.block_ = reinterpret_cast<::tendermint::types::Block*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.block)
}

// .cosmos.base.tendermint.v1beta1.Block sdk_block = 3 [json_name = "sdkBlock", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.47"];
inline bool GetLatestBlockResponse::has_sdk_block() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sdk_block_ != nullptr);
  return value;
}
inline const ::cosmos::base::tendermint::v1beta1::Block& GetLatestBlockResponse::_internal_sdk_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::tendermint::v1beta1::Block* p = _impl_.sdk_block_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::tendermint::v1beta1::Block&>(::cosmos::base::tendermint::v1beta1::_Block_default_instance_);
}
inline const ::cosmos::base::tendermint::v1beta1::Block& GetLatestBlockResponse::sdk_block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.sdk_block)
  return _internal_sdk_block();
}
inline void GetLatestBlockResponse::unsafe_arena_set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sdk_block_);
  }
  _impl_.sdk_block_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::Block*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.sdk_block)
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetLatestBlockResponse::release_sdk_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::tendermint::v1beta1::Block* released = _impl_.sdk_block_;
  _impl_.sdk_block_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetLatestBlockResponse::unsafe_arena_release_sdk_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.sdk_block)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::cosmos::base::tendermint::v1beta1::Block* temp = _impl_.sdk_block_;
  _impl_.sdk_block_ = nullptr;
  return temp;
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetLatestBlockResponse::_internal_mutable_sdk_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sdk_block_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::tendermint::v1beta1::Block>(GetArena());
    _impl_.sdk_block_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::Block*>(p);
  }
  return _impl_.sdk_block_;
}
inline ::cosmos::base::tendermint::v1beta1::Block* GetLatestBlockResponse::mutable_sdk_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::cosmos::base::tendermint::v1beta1::Block* _msg = _internal_mutable_sdk_block();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.sdk_block)
  return _msg;
}
inline void GetLatestBlockResponse::set_allocated_sdk_block(::cosmos::base::tendermint::v1beta1::Block* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sdk_block_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.sdk_block_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::Block*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetLatestBlockResponse.sdk_block)
}

// -------------------------------------------------------------------

// GetSyncingRequest

// -------------------------------------------------------------------

// GetSyncingResponse

// bool syncing = 1 [json_name = "syncing"];
inline void GetSyncingResponse::clear_syncing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.syncing_ = false;
}
inline bool GetSyncingResponse::syncing() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetSyncingResponse.syncing)
  return _internal_syncing();
}
inline void GetSyncingResponse::set_syncing(bool value) {
  _internal_set_syncing(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.GetSyncingResponse.syncing)
}
inline bool GetSyncingResponse::_internal_syncing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.syncing_;
}
inline void GetSyncingResponse::_internal_set_syncing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.syncing_ = value;
}

// -------------------------------------------------------------------

// GetNodeInfoRequest

// -------------------------------------------------------------------

// GetNodeInfoResponse

// .tendermint.p2p.DefaultNodeInfo default_node_info = 1 [json_name = "defaultNodeInfo"];
inline bool GetNodeInfoResponse::has_default_node_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.default_node_info_ != nullptr);
  return value;
}
inline const ::tendermint::p2p::DefaultNodeInfo& GetNodeInfoResponse::_internal_default_node_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::p2p::DefaultNodeInfo* p = _impl_.default_node_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::p2p::DefaultNodeInfo&>(::tendermint::p2p::_DefaultNodeInfo_default_instance_);
}
inline const ::tendermint::p2p::DefaultNodeInfo& GetNodeInfoResponse::default_node_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.default_node_info)
  return _internal_default_node_info();
}
inline void GetNodeInfoResponse::unsafe_arena_set_allocated_default_node_info(::tendermint::p2p::DefaultNodeInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.default_node_info_);
  }
  _impl_.default_node_info_ = reinterpret_cast<::tendermint::p2p::DefaultNodeInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.default_node_info)
}
inline ::tendermint::p2p::DefaultNodeInfo* GetNodeInfoResponse::release_default_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::p2p::DefaultNodeInfo* released = _impl_.default_node_info_;
  _impl_.default_node_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::p2p::DefaultNodeInfo* GetNodeInfoResponse::unsafe_arena_release_default_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.default_node_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::p2p::DefaultNodeInfo* temp = _impl_.default_node_info_;
  _impl_.default_node_info_ = nullptr;
  return temp;
}
inline ::tendermint::p2p::DefaultNodeInfo* GetNodeInfoResponse::_internal_mutable_default_node_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.default_node_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::p2p::DefaultNodeInfo>(GetArena());
    _impl_.default_node_info_ = reinterpret_cast<::tendermint::p2p::DefaultNodeInfo*>(p);
  }
  return _impl_.default_node_info_;
}
inline ::tendermint::p2p::DefaultNodeInfo* GetNodeInfoResponse::mutable_default_node_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::p2p::DefaultNodeInfo* _msg = _internal_mutable_default_node_info();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.default_node_info)
  return _msg;
}
inline void GetNodeInfoResponse::set_allocated_default_node_info(::tendermint::p2p::DefaultNodeInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.default_node_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.default_node_info_ = reinterpret_cast<::tendermint::p2p::DefaultNodeInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.default_node_info)
}

// .cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];
inline bool GetNodeInfoResponse::has_application_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.application_version_ != nullptr);
  return value;
}
inline void GetNodeInfoResponse::clear_application_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.application_version_ != nullptr) _impl_.application_version_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::cosmos::base::tendermint::v1beta1::VersionInfo& GetNodeInfoResponse::_internal_application_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::tendermint::v1beta1::VersionInfo* p = _impl_.application_version_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::tendermint::v1beta1::VersionInfo&>(::cosmos::base::tendermint::v1beta1::_VersionInfo_default_instance_);
}
inline const ::cosmos::base::tendermint::v1beta1::VersionInfo& GetNodeInfoResponse::application_version() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.application_version)
  return _internal_application_version();
}
inline void GetNodeInfoResponse::unsafe_arena_set_allocated_application_version(::cosmos::base::tendermint::v1beta1::VersionInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.application_version_);
  }
  _impl_.application_version_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::VersionInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.application_version)
}
inline ::cosmos::base::tendermint::v1beta1::VersionInfo* GetNodeInfoResponse::release_application_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::tendermint::v1beta1::VersionInfo* released = _impl_.application_version_;
  _impl_.application_version_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::tendermint::v1beta1::VersionInfo* GetNodeInfoResponse::unsafe_arena_release_application_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.application_version)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cosmos::base::tendermint::v1beta1::VersionInfo* temp = _impl_.application_version_;
  _impl_.application_version_ = nullptr;
  return temp;
}
inline ::cosmos::base::tendermint::v1beta1::VersionInfo* GetNodeInfoResponse::_internal_mutable_application_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.application_version_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::tendermint::v1beta1::VersionInfo>(GetArena());
    _impl_.application_version_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::VersionInfo*>(p);
  }
  return _impl_.application_version_;
}
inline ::cosmos::base::tendermint::v1beta1::VersionInfo* GetNodeInfoResponse::mutable_application_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cosmos::base::tendermint::v1beta1::VersionInfo* _msg = _internal_mutable_application_version();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.application_version)
  return _msg;
}
inline void GetNodeInfoResponse::set_allocated_application_version(::cosmos::base::tendermint::v1beta1::VersionInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.application_version_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.application_version_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::VersionInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.GetNodeInfoResponse.application_version)
}

// -------------------------------------------------------------------

// VersionInfo

// string name = 1 [json_name = "name"];
inline void VersionInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& VersionInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VersionInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.VersionInfo.name)
}
inline std::string* VersionInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.name)
  return _s;
}
inline const std::string& VersionInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void VersionInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* VersionInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* VersionInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.VersionInfo.name)
  return _impl_.name_.Release();
}
inline void VersionInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.VersionInfo.name)
}

// string app_name = 2 [json_name = "appName"];
inline void VersionInfo::clear_app_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.ClearToEmpty();
}
inline const std::string& VersionInfo::app_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.app_name)
  return _internal_app_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VersionInfo::set_app_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.VersionInfo.app_name)
}
inline std::string* VersionInfo::mutable_app_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_name();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.app_name)
  return _s;
}
inline const std::string& VersionInfo::_internal_app_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.app_name_.Get();
}
inline void VersionInfo::_internal_set_app_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.Set(value, GetArena());
}
inline std::string* VersionInfo::_internal_mutable_app_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.app_name_.Mutable( GetArena());
}
inline std::string* VersionInfo::release_app_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.VersionInfo.app_name)
  return _impl_.app_name_.Release();
}
inline void VersionInfo::set_allocated_app_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.app_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.app_name_.IsDefault()) {
    _impl_.app_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.VersionInfo.app_name)
}

// string version = 3 [json_name = "version"];
inline void VersionInfo::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& VersionInfo::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VersionInfo::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.VersionInfo.version)
}
inline std::string* VersionInfo::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.version)
  return _s;
}
inline const std::string& VersionInfo::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void VersionInfo::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* VersionInfo::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* VersionInfo::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.VersionInfo.version)
  return _impl_.version_.Release();
}
inline void VersionInfo::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.VersionInfo.version)
}

// string git_commit = 4 [json_name = "gitCommit"];
inline void VersionInfo::clear_git_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_commit_.ClearToEmpty();
}
inline const std::string& VersionInfo::git_commit() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.git_commit)
  return _internal_git_commit();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VersionInfo::set_git_commit(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_commit_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.VersionInfo.git_commit)
}
inline std::string* VersionInfo::mutable_git_commit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_git_commit();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.git_commit)
  return _s;
}
inline const std::string& VersionInfo::_internal_git_commit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.git_commit_.Get();
}
inline void VersionInfo::_internal_set_git_commit(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_commit_.Set(value, GetArena());
}
inline std::string* VersionInfo::_internal_mutable_git_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.git_commit_.Mutable( GetArena());
}
inline std::string* VersionInfo::release_git_commit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.VersionInfo.git_commit)
  return _impl_.git_commit_.Release();
}
inline void VersionInfo::set_allocated_git_commit(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_commit_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.git_commit_.IsDefault()) {
    _impl_.git_commit_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.VersionInfo.git_commit)
}

// string build_tags = 5 [json_name = "buildTags"];
inline void VersionInfo::clear_build_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_tags_.ClearToEmpty();
}
inline const std::string& VersionInfo::build_tags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.build_tags)
  return _internal_build_tags();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VersionInfo::set_build_tags(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_tags_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.VersionInfo.build_tags)
}
inline std::string* VersionInfo::mutable_build_tags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_build_tags();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.build_tags)
  return _s;
}
inline const std::string& VersionInfo::_internal_build_tags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.build_tags_.Get();
}
inline void VersionInfo::_internal_set_build_tags(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_tags_.Set(value, GetArena());
}
inline std::string* VersionInfo::_internal_mutable_build_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.build_tags_.Mutable( GetArena());
}
inline std::string* VersionInfo::release_build_tags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.VersionInfo.build_tags)
  return _impl_.build_tags_.Release();
}
inline void VersionInfo::set_allocated_build_tags(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_tags_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.build_tags_.IsDefault()) {
    _impl_.build_tags_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.VersionInfo.build_tags)
}

// string go_version = 6 [json_name = "goVersion"];
inline void VersionInfo::clear_go_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_version_.ClearToEmpty();
}
inline const std::string& VersionInfo::go_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.go_version)
  return _internal_go_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VersionInfo::set_go_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.VersionInfo.go_version)
}
inline std::string* VersionInfo::mutable_go_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_go_version();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.go_version)
  return _s;
}
inline const std::string& VersionInfo::_internal_go_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.go_version_.Get();
}
inline void VersionInfo::_internal_set_go_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_version_.Set(value, GetArena());
}
inline std::string* VersionInfo::_internal_mutable_go_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.go_version_.Mutable( GetArena());
}
inline std::string* VersionInfo::release_go_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.VersionInfo.go_version)
  return _impl_.go_version_.Release();
}
inline void VersionInfo::set_allocated_go_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.go_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.go_version_.IsDefault()) {
    _impl_.go_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.VersionInfo.go_version)
}

// repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];
inline int VersionInfo::_internal_build_deps_size() const {
  return _internal_build_deps().size();
}
inline int VersionInfo::build_deps_size() const {
  return _internal_build_deps_size();
}
inline void VersionInfo::clear_build_deps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.build_deps_.Clear();
}
inline ::cosmos::base::tendermint::v1beta1::Module* VersionInfo::mutable_build_deps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.build_deps)
  return _internal_mutable_build_deps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>* VersionInfo::mutable_build_deps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.tendermint.v1beta1.VersionInfo.build_deps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_build_deps();
}
inline const ::cosmos::base::tendermint::v1beta1::Module& VersionInfo::build_deps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.build_deps)
  return _internal_build_deps().Get(index);
}
inline ::cosmos::base::tendermint::v1beta1::Module* VersionInfo::add_build_deps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::tendermint::v1beta1::Module* _add = _internal_mutable_build_deps()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.tendermint.v1beta1.VersionInfo.build_deps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>& VersionInfo::build_deps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.tendermint.v1beta1.VersionInfo.build_deps)
  return _internal_build_deps();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>&
VersionInfo::_internal_build_deps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.build_deps_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::Module>*
VersionInfo::_internal_mutable_build_deps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.build_deps_;
}

// string cosmos_sdk_version = 8 [json_name = "cosmosSdkVersion", (.cosmos_proto.field_added_in) = "cosmos-sdk 0.43"];
inline void VersionInfo::clear_cosmos_sdk_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cosmos_sdk_version_.ClearToEmpty();
}
inline const std::string& VersionInfo::cosmos_sdk_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.VersionInfo.cosmos_sdk_version)
  return _internal_cosmos_sdk_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VersionInfo::set_cosmos_sdk_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cosmos_sdk_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.VersionInfo.cosmos_sdk_version)
}
inline std::string* VersionInfo::mutable_cosmos_sdk_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cosmos_sdk_version();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.VersionInfo.cosmos_sdk_version)
  return _s;
}
inline const std::string& VersionInfo::_internal_cosmos_sdk_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cosmos_sdk_version_.Get();
}
inline void VersionInfo::_internal_set_cosmos_sdk_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cosmos_sdk_version_.Set(value, GetArena());
}
inline std::string* VersionInfo::_internal_mutable_cosmos_sdk_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.cosmos_sdk_version_.Mutable( GetArena());
}
inline std::string* VersionInfo::release_cosmos_sdk_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.VersionInfo.cosmos_sdk_version)
  return _impl_.cosmos_sdk_version_.Release();
}
inline void VersionInfo::set_allocated_cosmos_sdk_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cosmos_sdk_version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.cosmos_sdk_version_.IsDefault()) {
    _impl_.cosmos_sdk_version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.VersionInfo.cosmos_sdk_version)
}

// -------------------------------------------------------------------

// Module

// string path = 1 [json_name = "path"];
inline void Module::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& Module::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.Module.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Module::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.Module.path)
}
inline std::string* Module::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.Module.path)
  return _s;
}
inline const std::string& Module::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void Module::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* Module::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* Module::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.Module.path)
  return _impl_.path_.Release();
}
inline void Module::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.Module.path)
}

// string version = 2 [json_name = "version"];
inline void Module::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& Module::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.Module.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Module::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.Module.version)
}
inline std::string* Module::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.Module.version)
  return _s;
}
inline const std::string& Module::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void Module::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* Module::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* Module::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.Module.version)
  return _impl_.version_.Release();
}
inline void Module::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.version_.IsDefault()) {
    _impl_.version_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.Module.version)
}

// string sum = 3 [json_name = "sum"];
inline void Module::clear_sum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sum_.ClearToEmpty();
}
inline const std::string& Module::sum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.Module.sum)
  return _internal_sum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Module::set_sum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sum_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.Module.sum)
}
inline std::string* Module::mutable_sum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sum();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.Module.sum)
  return _s;
}
inline const std::string& Module::_internal_sum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sum_.Get();
}
inline void Module::_internal_set_sum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sum_.Set(value, GetArena());
}
inline std::string* Module::_internal_mutable_sum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sum_.Mutable( GetArena());
}
inline std::string* Module::release_sum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.Module.sum)
  return _impl_.sum_.Release();
}
inline void Module::set_allocated_sum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sum_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sum_.IsDefault()) {
    _impl_.sum_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.Module.sum)
}

// -------------------------------------------------------------------

// ABCIQueryRequest

// bytes data = 1 [json_name = "data"];
inline void ABCIQueryRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ABCIQueryRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ABCIQueryRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.data)
}
inline std::string* ABCIQueryRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.data)
  return _s;
}
inline const std::string& ABCIQueryRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ABCIQueryRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ABCIQueryRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ABCIQueryRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.data)
  return _impl_.data_.Release();
}
inline void ABCIQueryRequest::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.data)
}

// string path = 2 [json_name = "path"];
inline void ABCIQueryRequest::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& ABCIQueryRequest::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ABCIQueryRequest::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.path)
}
inline std::string* ABCIQueryRequest::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.path)
  return _s;
}
inline const std::string& ABCIQueryRequest::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void ABCIQueryRequest::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* ABCIQueryRequest::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* ABCIQueryRequest::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.path)
  return _impl_.path_.Release();
}
inline void ABCIQueryRequest::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.path_.IsDefault()) {
    _impl_.path_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.path)
}

// int64 height = 3 [json_name = "height"];
inline void ABCIQueryRequest::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t ABCIQueryRequest::height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.height)
  return _internal_height();
}
inline void ABCIQueryRequest::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.height)
}
inline ::int64_t ABCIQueryRequest::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void ABCIQueryRequest::_internal_set_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// bool prove = 4 [json_name = "prove"];
inline void ABCIQueryRequest::clear_prove() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prove_ = false;
}
inline bool ABCIQueryRequest::prove() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.prove)
  return _internal_prove();
}
inline void ABCIQueryRequest::set_prove(bool value) {
  _internal_set_prove(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryRequest.prove)
}
inline bool ABCIQueryRequest::_internal_prove() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prove_;
}
inline void ABCIQueryRequest::_internal_set_prove(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prove_ = value;
}

// -------------------------------------------------------------------

// ABCIQueryResponse

// uint32 code = 1 [json_name = "code"];
inline void ABCIQueryResponse::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0u;
}
inline ::uint32_t ABCIQueryResponse::code() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.code)
  return _internal_code();
}
inline void ABCIQueryResponse::set_code(::uint32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.code)
}
inline ::uint32_t ABCIQueryResponse::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void ABCIQueryResponse::_internal_set_code(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string log = 3 [json_name = "log"];
inline void ABCIQueryResponse::clear_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.ClearToEmpty();
}
inline const std::string& ABCIQueryResponse::log() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.log)
  return _internal_log();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ABCIQueryResponse::set_log(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.log)
}
inline std::string* ABCIQueryResponse::mutable_log() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.log)
  return _s;
}
inline const std::string& ABCIQueryResponse::_internal_log() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_.Get();
}
inline void ABCIQueryResponse::_internal_set_log(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.Set(value, GetArena());
}
inline std::string* ABCIQueryResponse::_internal_mutable_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.log_.Mutable( GetArena());
}
inline std::string* ABCIQueryResponse::release_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.log)
  return _impl_.log_.Release();
}
inline void ABCIQueryResponse::set_allocated_log(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.log_.IsDefault()) {
    _impl_.log_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.log)
}

// string info = 4 [json_name = "info"];
inline void ABCIQueryResponse::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.ClearToEmpty();
}
inline const std::string& ABCIQueryResponse::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.info)
  return _internal_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ABCIQueryResponse::set_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.info)
}
inline std::string* ABCIQueryResponse::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.info)
  return _s;
}
inline const std::string& ABCIQueryResponse::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_.Get();
}
inline void ABCIQueryResponse::_internal_set_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Set(value, GetArena());
}
inline std::string* ABCIQueryResponse::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.info_.Mutable( GetArena());
}
inline std::string* ABCIQueryResponse::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.info)
  return _impl_.info_.Release();
}
inline void ABCIQueryResponse::set_allocated_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.info_.IsDefault()) {
    _impl_.info_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.info)
}

// int64 index = 5 [json_name = "index"];
inline void ABCIQueryResponse::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = ::int64_t{0};
}
inline ::int64_t ABCIQueryResponse::index() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.index)
  return _internal_index();
}
inline void ABCIQueryResponse::set_index(::int64_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.index)
}
inline ::int64_t ABCIQueryResponse::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void ABCIQueryResponse::_internal_set_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// bytes key = 6 [json_name = "key"];
inline void ABCIQueryResponse::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& ABCIQueryResponse::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ABCIQueryResponse::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.key)
}
inline std::string* ABCIQueryResponse::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.key)
  return _s;
}
inline const std::string& ABCIQueryResponse::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void ABCIQueryResponse::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* ABCIQueryResponse::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* ABCIQueryResponse::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.key)
  return _impl_.key_.Release();
}
inline void ABCIQueryResponse::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.key)
}

// bytes value = 7 [json_name = "value"];
inline void ABCIQueryResponse::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& ABCIQueryResponse::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ABCIQueryResponse::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.value)
}
inline std::string* ABCIQueryResponse::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.value)
  return _s;
}
inline const std::string& ABCIQueryResponse::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void ABCIQueryResponse::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* ABCIQueryResponse::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* ABCIQueryResponse::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.value)
  return _impl_.value_.Release();
}
inline void ABCIQueryResponse::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.value_.IsDefault()) {
    _impl_.value_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.value)
}

// .cosmos.base.tendermint.v1beta1.ProofOps proof_ops = 8 [json_name = "proofOps"];
inline bool ABCIQueryResponse::has_proof_ops() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.proof_ops_ != nullptr);
  return value;
}
inline void ABCIQueryResponse::clear_proof_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proof_ops_ != nullptr) _impl_.proof_ops_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cosmos::base::tendermint::v1beta1::ProofOps& ABCIQueryResponse::_internal_proof_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cosmos::base::tendermint::v1beta1::ProofOps* p = _impl_.proof_ops_;
  return p != nullptr ? *p : reinterpret_cast<const ::cosmos::base::tendermint::v1beta1::ProofOps&>(::cosmos::base::tendermint::v1beta1::_ProofOps_default_instance_);
}
inline const ::cosmos::base::tendermint::v1beta1::ProofOps& ABCIQueryResponse::proof_ops() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.proof_ops)
  return _internal_proof_ops();
}
inline void ABCIQueryResponse::unsafe_arena_set_allocated_proof_ops(::cosmos::base::tendermint::v1beta1::ProofOps* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.proof_ops_);
  }
  _impl_.proof_ops_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::ProofOps*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.proof_ops)
}
inline ::cosmos::base::tendermint::v1beta1::ProofOps* ABCIQueryResponse::release_proof_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::tendermint::v1beta1::ProofOps* released = _impl_.proof_ops_;
  _impl_.proof_ops_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cosmos::base::tendermint::v1beta1::ProofOps* ABCIQueryResponse::unsafe_arena_release_proof_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.proof_ops)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cosmos::base::tendermint::v1beta1::ProofOps* temp = _impl_.proof_ops_;
  _impl_.proof_ops_ = nullptr;
  return temp;
}
inline ::cosmos::base::tendermint::v1beta1::ProofOps* ABCIQueryResponse::_internal_mutable_proof_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.proof_ops_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cosmos::base::tendermint::v1beta1::ProofOps>(GetArena());
    _impl_.proof_ops_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::ProofOps*>(p);
  }
  return _impl_.proof_ops_;
}
inline ::cosmos::base::tendermint::v1beta1::ProofOps* ABCIQueryResponse::mutable_proof_ops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cosmos::base::tendermint::v1beta1::ProofOps* _msg = _internal_mutable_proof_ops();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.proof_ops)
  return _msg;
}
inline void ABCIQueryResponse::set_allocated_proof_ops(::cosmos::base::tendermint::v1beta1::ProofOps* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.proof_ops_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.proof_ops_ = reinterpret_cast<::cosmos::base::tendermint::v1beta1::ProofOps*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.proof_ops)
}

// int64 height = 9 [json_name = "height"];
inline void ABCIQueryResponse::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = ::int64_t{0};
}
inline ::int64_t ABCIQueryResponse::height() const {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.height)
  return _internal_height();
}
inline void ABCIQueryResponse::set_height(::int64_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.height)
}
inline ::int64_t ABCIQueryResponse::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void ABCIQueryResponse::_internal_set_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// string codespace = 10 [json_name = "codespace"];
inline void ABCIQueryResponse::clear_codespace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codespace_.ClearToEmpty();
}
inline const std::string& ABCIQueryResponse::codespace() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.codespace)
  return _internal_codespace();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ABCIQueryResponse::set_codespace(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codespace_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.codespace)
}
inline std::string* ABCIQueryResponse::mutable_codespace() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_codespace();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.codespace)
  return _s;
}
inline const std::string& ABCIQueryResponse::_internal_codespace() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.codespace_.Get();
}
inline void ABCIQueryResponse::_internal_set_codespace(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codespace_.Set(value, GetArena());
}
inline std::string* ABCIQueryResponse::_internal_mutable_codespace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.codespace_.Mutable( GetArena());
}
inline std::string* ABCIQueryResponse::release_codespace() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.codespace)
  return _impl_.codespace_.Release();
}
inline void ABCIQueryResponse::set_allocated_codespace(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.codespace_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.codespace_.IsDefault()) {
    _impl_.codespace_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ABCIQueryResponse.codespace)
}

// -------------------------------------------------------------------

// ProofOp

// string type = 1 [json_name = "type"];
inline void ProofOp::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& ProofOp::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ProofOp.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProofOp::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ProofOp.type)
}
inline std::string* ProofOp::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ProofOp.type)
  return _s;
}
inline const std::string& ProofOp::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void ProofOp::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* ProofOp::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* ProofOp::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ProofOp.type)
  return _impl_.type_.Release();
}
inline void ProofOp::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ProofOp.type)
}

// bytes key = 2 [json_name = "key"];
inline void ProofOp::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& ProofOp::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ProofOp.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProofOp::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ProofOp.key)
}
inline std::string* ProofOp::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ProofOp.key)
  return _s;
}
inline const std::string& ProofOp::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void ProofOp::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* ProofOp::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* ProofOp::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ProofOp.key)
  return _impl_.key_.Release();
}
inline void ProofOp::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.key_.IsDefault()) {
    _impl_.key_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ProofOp.key)
}

// bytes data = 3 [json_name = "data"];
inline void ProofOp::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ProofOp::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ProofOp.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProofOp::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.base.tendermint.v1beta1.ProofOp.data)
}
inline std::string* ProofOp::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ProofOp.data)
  return _s;
}
inline const std::string& ProofOp::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ProofOp::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ProofOp::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ProofOp::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.base.tendermint.v1beta1.ProofOp.data)
  return _impl_.data_.Release();
}
inline void ProofOp::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.base.tendermint.v1beta1.ProofOp.data)
}

// -------------------------------------------------------------------

// ProofOps

// repeated .cosmos.base.tendermint.v1beta1.ProofOp ops = 1 [json_name = "ops", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int ProofOps::_internal_ops_size() const {
  return _internal_ops().size();
}
inline int ProofOps::ops_size() const {
  return _internal_ops_size();
}
inline void ProofOps::clear_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ops_.Clear();
}
inline ::cosmos::base::tendermint::v1beta1::ProofOp* ProofOps::mutable_ops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.base.tendermint.v1beta1.ProofOps.ops)
  return _internal_mutable_ops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>* ProofOps::mutable_ops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.base.tendermint.v1beta1.ProofOps.ops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ops();
}
inline const ::cosmos::base::tendermint::v1beta1::ProofOp& ProofOps::ops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.base.tendermint.v1beta1.ProofOps.ops)
  return _internal_ops().Get(index);
}
inline ::cosmos::base::tendermint::v1beta1::ProofOp* ProofOps::add_ops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::tendermint::v1beta1::ProofOp* _add = _internal_mutable_ops()->Add();
  // @@protoc_insertion_point(field_add:cosmos.base.tendermint.v1beta1.ProofOps.ops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>& ProofOps::ops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.base.tendermint.v1beta1.ProofOps.ops)
  return _internal_ops();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>&
ProofOps::_internal_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ops_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::tendermint::v1beta1::ProofOp>*
ProofOps::_internal_mutable_ops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ops_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace tendermint
}  // namespace base
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fbase_2ftendermint_2fv1beta1_2fquery_2eproto_2epb_2eh
