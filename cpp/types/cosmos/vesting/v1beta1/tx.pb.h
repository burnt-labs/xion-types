// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/vesting/v1beta1/tx.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fvesting_2fv1beta1_2ftx_2eproto_2epb_2eh
#define cosmos_2fvesting_2fv1beta1_2ftx_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "cosmos/base/v1beta1/coin.pb.h"
#include "cosmos_proto/cosmos.pb.h"
#include "cosmos/vesting/v1beta1/vesting.pb.h"
#include "cosmos/msg/v1/msg.pb.h"
#include "amino/amino.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fvesting_2fv1beta1_2ftx_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
namespace cosmos {
namespace vesting {
namespace v1beta1 {
class MsgCreatePeriodicVestingAccount;
struct MsgCreatePeriodicVestingAccountDefaultTypeInternal;
extern MsgCreatePeriodicVestingAccountDefaultTypeInternal _MsgCreatePeriodicVestingAccount_default_instance_;
class MsgCreatePeriodicVestingAccountResponse;
struct MsgCreatePeriodicVestingAccountResponseDefaultTypeInternal;
extern MsgCreatePeriodicVestingAccountResponseDefaultTypeInternal _MsgCreatePeriodicVestingAccountResponse_default_instance_;
class MsgCreatePermanentLockedAccount;
struct MsgCreatePermanentLockedAccountDefaultTypeInternal;
extern MsgCreatePermanentLockedAccountDefaultTypeInternal _MsgCreatePermanentLockedAccount_default_instance_;
class MsgCreatePermanentLockedAccountResponse;
struct MsgCreatePermanentLockedAccountResponseDefaultTypeInternal;
extern MsgCreatePermanentLockedAccountResponseDefaultTypeInternal _MsgCreatePermanentLockedAccountResponse_default_instance_;
class MsgCreateVestingAccount;
struct MsgCreateVestingAccountDefaultTypeInternal;
extern MsgCreateVestingAccountDefaultTypeInternal _MsgCreateVestingAccount_default_instance_;
class MsgCreateVestingAccountResponse;
struct MsgCreateVestingAccountResponseDefaultTypeInternal;
extern MsgCreateVestingAccountResponseDefaultTypeInternal _MsgCreateVestingAccountResponse_default_instance_;
}  // namespace v1beta1
}  // namespace vesting
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace vesting {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class MsgCreateVestingAccountResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse) */ {
 public:
  inline MsgCreateVestingAccountResponse() : MsgCreateVestingAccountResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateVestingAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateVestingAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateVestingAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateVestingAccountResponse(const MsgCreateVestingAccountResponse& from) : MsgCreateVestingAccountResponse(nullptr, from) {}
  inline MsgCreateVestingAccountResponse(MsgCreateVestingAccountResponse&& from) noexcept
      : MsgCreateVestingAccountResponse(nullptr, std::move(from)) {}
  inline MsgCreateVestingAccountResponse& operator=(const MsgCreateVestingAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateVestingAccountResponse& operator=(MsgCreateVestingAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateVestingAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateVestingAccountResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreateVestingAccountResponse*>(
        &_MsgCreateVestingAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MsgCreateVestingAccountResponse& a, MsgCreateVestingAccountResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCreateVestingAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateVestingAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateVestingAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgCreateVestingAccountResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreateVestingAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreateVestingAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse"; }

 protected:
  explicit MsgCreateVestingAccountResponse(::google::protobuf::Arena* arena);
  MsgCreateVestingAccountResponse(::google::protobuf::Arena* arena, const MsgCreateVestingAccountResponse& from);
  MsgCreateVestingAccountResponse(::google::protobuf::Arena* arena, MsgCreateVestingAccountResponse&& from) noexcept
      : MsgCreateVestingAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.vesting.v1beta1.MsgCreateVestingAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateVestingAccountResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreatePermanentLockedAccountResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse) */ {
 public:
  inline MsgCreatePermanentLockedAccountResponse() : MsgCreatePermanentLockedAccountResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreatePermanentLockedAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreatePermanentLockedAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreatePermanentLockedAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreatePermanentLockedAccountResponse(const MsgCreatePermanentLockedAccountResponse& from) : MsgCreatePermanentLockedAccountResponse(nullptr, from) {}
  inline MsgCreatePermanentLockedAccountResponse(MsgCreatePermanentLockedAccountResponse&& from) noexcept
      : MsgCreatePermanentLockedAccountResponse(nullptr, std::move(from)) {}
  inline MsgCreatePermanentLockedAccountResponse& operator=(const MsgCreatePermanentLockedAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreatePermanentLockedAccountResponse& operator=(MsgCreatePermanentLockedAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreatePermanentLockedAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreatePermanentLockedAccountResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreatePermanentLockedAccountResponse*>(
        &_MsgCreatePermanentLockedAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgCreatePermanentLockedAccountResponse& a, MsgCreatePermanentLockedAccountResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCreatePermanentLockedAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreatePermanentLockedAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreatePermanentLockedAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgCreatePermanentLockedAccountResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreatePermanentLockedAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreatePermanentLockedAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse"; }

 protected:
  explicit MsgCreatePermanentLockedAccountResponse(::google::protobuf::Arena* arena);
  MsgCreatePermanentLockedAccountResponse(::google::protobuf::Arena* arena, const MsgCreatePermanentLockedAccountResponse& from);
  MsgCreatePermanentLockedAccountResponse(::google::protobuf::Arena* arena, MsgCreatePermanentLockedAccountResponse&& from) noexcept
      : MsgCreatePermanentLockedAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreatePermanentLockedAccountResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreatePeriodicVestingAccountResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse) */ {
 public:
  inline MsgCreatePeriodicVestingAccountResponse() : MsgCreatePeriodicVestingAccountResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreatePeriodicVestingAccountResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreatePeriodicVestingAccountResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreatePeriodicVestingAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreatePeriodicVestingAccountResponse(const MsgCreatePeriodicVestingAccountResponse& from) : MsgCreatePeriodicVestingAccountResponse(nullptr, from) {}
  inline MsgCreatePeriodicVestingAccountResponse(MsgCreatePeriodicVestingAccountResponse&& from) noexcept
      : MsgCreatePeriodicVestingAccountResponse(nullptr, std::move(from)) {}
  inline MsgCreatePeriodicVestingAccountResponse& operator=(const MsgCreatePeriodicVestingAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreatePeriodicVestingAccountResponse& operator=(MsgCreatePeriodicVestingAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreatePeriodicVestingAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreatePeriodicVestingAccountResponse* internal_default_instance() {
    return reinterpret_cast<const MsgCreatePeriodicVestingAccountResponse*>(
        &_MsgCreatePeriodicVestingAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(MsgCreatePeriodicVestingAccountResponse& a, MsgCreatePeriodicVestingAccountResponse& b) { a.Swap(&b); }
  inline void Swap(MsgCreatePeriodicVestingAccountResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreatePeriodicVestingAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreatePeriodicVestingAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<MsgCreatePeriodicVestingAccountResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const MsgCreatePeriodicVestingAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const MsgCreatePeriodicVestingAccountResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse"; }

 protected:
  explicit MsgCreatePeriodicVestingAccountResponse(::google::protobuf::Arena* arena);
  MsgCreatePeriodicVestingAccountResponse(::google::protobuf::Arena* arena, const MsgCreatePeriodicVestingAccountResponse& from);
  MsgCreatePeriodicVestingAccountResponse(::google::protobuf::Arena* arena, MsgCreatePeriodicVestingAccountResponse&& from) noexcept
      : MsgCreatePeriodicVestingAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreatePeriodicVestingAccountResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreateVestingAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.vesting.v1beta1.MsgCreateVestingAccount) */ {
 public:
  inline MsgCreateVestingAccount() : MsgCreateVestingAccount(nullptr) {}
  ~MsgCreateVestingAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreateVestingAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreateVestingAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreateVestingAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreateVestingAccount(const MsgCreateVestingAccount& from) : MsgCreateVestingAccount(nullptr, from) {}
  inline MsgCreateVestingAccount(MsgCreateVestingAccount&& from) noexcept
      : MsgCreateVestingAccount(nullptr, std::move(from)) {}
  inline MsgCreateVestingAccount& operator=(const MsgCreateVestingAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreateVestingAccount& operator=(MsgCreateVestingAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreateVestingAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreateVestingAccount* internal_default_instance() {
    return reinterpret_cast<const MsgCreateVestingAccount*>(
        &_MsgCreateVestingAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(MsgCreateVestingAccount& a, MsgCreateVestingAccount& b) { a.Swap(&b); }
  inline void Swap(MsgCreateVestingAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreateVestingAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreateVestingAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreateVestingAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreateVestingAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreateVestingAccount& from) { MsgCreateVestingAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreateVestingAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.vesting.v1beta1.MsgCreateVestingAccount"; }

 protected:
  explicit MsgCreateVestingAccount(::google::protobuf::Arena* arena);
  MsgCreateVestingAccount(::google::protobuf::Arena* arena, const MsgCreateVestingAccount& from);
  MsgCreateVestingAccount(::google::protobuf::Arena* arena, MsgCreateVestingAccount&& from) noexcept
      : MsgCreateVestingAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAmountFieldNumber = 3,
    kFromAddressFieldNumber = 1,
    kToAddressFieldNumber = 2,
    kEndTimeFieldNumber = 4,
    kDelayedFieldNumber = 5,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_amount();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& amount() const;
  // string from_address = 1 [json_name = "fromAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_from_address() ;
  const std::string& from_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_address(Arg_&& arg, Args_... args);
  std::string* mutable_from_address();
  PROTOBUF_NODISCARD std::string* release_from_address();
  void set_allocated_from_address(std::string* value);

  private:
  const std::string& _internal_from_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_address(
      const std::string& value);
  std::string* _internal_mutable_from_address();

  public:
  // string to_address = 2 [json_name = "toAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
  void clear_to_address() ;
  const std::string& to_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_address(Arg_&& arg, Args_... args);
  std::string* mutable_to_address();
  PROTOBUF_NODISCARD std::string* release_to_address();
  void set_allocated_to_address(std::string* value);

  private:
  const std::string& _internal_to_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_address(
      const std::string& value);
  std::string* _internal_mutable_to_address();

  public:
  // int64 end_time = 4 [json_name = "endTime"];
  void clear_end_time() ;
  ::int64_t end_time() const;
  void set_end_time(::int64_t value);

  private:
  ::int64_t _internal_end_time() const;
  void _internal_set_end_time(::int64_t value);

  public:
  // bool delayed = 5 [json_name = "delayed"];
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.vesting.v1beta1.MsgCreateVestingAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      77, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreateVestingAccount& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::google::protobuf::internal::ArenaStringPtr from_address_;
    ::google::protobuf::internal::ArenaStringPtr to_address_;
    ::int64_t end_time_;
    bool delayed_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreatePermanentLockedAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount) */ {
 public:
  inline MsgCreatePermanentLockedAccount() : MsgCreatePermanentLockedAccount(nullptr) {}
  ~MsgCreatePermanentLockedAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreatePermanentLockedAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreatePermanentLockedAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreatePermanentLockedAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreatePermanentLockedAccount(const MsgCreatePermanentLockedAccount& from) : MsgCreatePermanentLockedAccount(nullptr, from) {}
  inline MsgCreatePermanentLockedAccount(MsgCreatePermanentLockedAccount&& from) noexcept
      : MsgCreatePermanentLockedAccount(nullptr, std::move(from)) {}
  inline MsgCreatePermanentLockedAccount& operator=(const MsgCreatePermanentLockedAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreatePermanentLockedAccount& operator=(MsgCreatePermanentLockedAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreatePermanentLockedAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreatePermanentLockedAccount* internal_default_instance() {
    return reinterpret_cast<const MsgCreatePermanentLockedAccount*>(
        &_MsgCreatePermanentLockedAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgCreatePermanentLockedAccount& a, MsgCreatePermanentLockedAccount& b) { a.Swap(&b); }
  inline void Swap(MsgCreatePermanentLockedAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreatePermanentLockedAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreatePermanentLockedAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreatePermanentLockedAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreatePermanentLockedAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreatePermanentLockedAccount& from) { MsgCreatePermanentLockedAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreatePermanentLockedAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount"; }

 protected:
  explicit MsgCreatePermanentLockedAccount(::google::protobuf::Arena* arena);
  MsgCreatePermanentLockedAccount(::google::protobuf::Arena* arena, const MsgCreatePermanentLockedAccount& from);
  MsgCreatePermanentLockedAccount(::google::protobuf::Arena* arena, MsgCreatePermanentLockedAccount&& from) noexcept
      : MsgCreatePermanentLockedAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAmountFieldNumber = 3,
    kFromAddressFieldNumber = 1,
    kToAddressFieldNumber = 2,
  };
  // repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::cosmos::base::v1beta1::Coin* mutable_amount(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* mutable_amount();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& _internal_amount() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* _internal_mutable_amount();
  public:
  const ::cosmos::base::v1beta1::Coin& amount(int index) const;
  ::cosmos::base::v1beta1::Coin* add_amount();
  const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& amount() const;
  // string from_address = 1 [json_name = "fromAddress", (.gogoproto.moretags) = "yaml:\"from_address\""];
  void clear_from_address() ;
  const std::string& from_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_address(Arg_&& arg, Args_... args);
  std::string* mutable_from_address();
  PROTOBUF_NODISCARD std::string* release_from_address();
  void set_allocated_from_address(std::string* value);

  private:
  const std::string& _internal_from_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_address(
      const std::string& value);
  std::string* _internal_mutable_from_address();

  public:
  // string to_address = 2 [json_name = "toAddress", (.gogoproto.moretags) = "yaml:\"to_address\""];
  void clear_to_address() ;
  const std::string& to_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_address(Arg_&& arg, Args_... args);
  std::string* mutable_to_address();
  PROTOBUF_NODISCARD std::string* release_to_address();
  void set_allocated_to_address(std::string* value);

  private:
  const std::string& _internal_to_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_address(
      const std::string& value);
  std::string* _internal_mutable_to_address();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      85, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreatePermanentLockedAccount& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::base::v1beta1::Coin > amount_;
    ::google::protobuf::internal::ArenaStringPtr from_address_;
    ::google::protobuf::internal::ArenaStringPtr to_address_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
};
// -------------------------------------------------------------------

class MsgCreatePeriodicVestingAccount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount) */ {
 public:
  inline MsgCreatePeriodicVestingAccount() : MsgCreatePeriodicVestingAccount(nullptr) {}
  ~MsgCreatePeriodicVestingAccount() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgCreatePeriodicVestingAccount* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgCreatePeriodicVestingAccount));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgCreatePeriodicVestingAccount(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgCreatePeriodicVestingAccount(const MsgCreatePeriodicVestingAccount& from) : MsgCreatePeriodicVestingAccount(nullptr, from) {}
  inline MsgCreatePeriodicVestingAccount(MsgCreatePeriodicVestingAccount&& from) noexcept
      : MsgCreatePeriodicVestingAccount(nullptr, std::move(from)) {}
  inline MsgCreatePeriodicVestingAccount& operator=(const MsgCreatePeriodicVestingAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgCreatePeriodicVestingAccount& operator=(MsgCreatePeriodicVestingAccount&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgCreatePeriodicVestingAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgCreatePeriodicVestingAccount* internal_default_instance() {
    return reinterpret_cast<const MsgCreatePeriodicVestingAccount*>(
        &_MsgCreatePeriodicVestingAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(MsgCreatePeriodicVestingAccount& a, MsgCreatePeriodicVestingAccount& b) { a.Swap(&b); }
  inline void Swap(MsgCreatePeriodicVestingAccount* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgCreatePeriodicVestingAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgCreatePeriodicVestingAccount* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgCreatePeriodicVestingAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgCreatePeriodicVestingAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgCreatePeriodicVestingAccount& from) { MsgCreatePeriodicVestingAccount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgCreatePeriodicVestingAccount* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount"; }

 protected:
  explicit MsgCreatePeriodicVestingAccount(::google::protobuf::Arena* arena);
  MsgCreatePeriodicVestingAccount(::google::protobuf::Arena* arena, const MsgCreatePeriodicVestingAccount& from);
  MsgCreatePeriodicVestingAccount(::google::protobuf::Arena* arena, MsgCreatePeriodicVestingAccount&& from) noexcept
      : MsgCreatePeriodicVestingAccount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVestingPeriodsFieldNumber = 4,
    kFromAddressFieldNumber = 1,
    kToAddressFieldNumber = 2,
    kStartTimeFieldNumber = 3,
  };
  // repeated .cosmos.vesting.v1beta1.Period vesting_periods = 4 [json_name = "vestingPeriods", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
  int vesting_periods_size() const;
  private:
  int _internal_vesting_periods_size() const;

  public:
  void clear_vesting_periods() ;
  ::cosmos::vesting::v1beta1::Period* mutable_vesting_periods(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>* mutable_vesting_periods();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>& _internal_vesting_periods() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>* _internal_mutable_vesting_periods();
  public:
  const ::cosmos::vesting::v1beta1::Period& vesting_periods(int index) const;
  ::cosmos::vesting::v1beta1::Period* add_vesting_periods();
  const ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>& vesting_periods() const;
  // string from_address = 1 [json_name = "fromAddress"];
  void clear_from_address() ;
  const std::string& from_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from_address(Arg_&& arg, Args_... args);
  std::string* mutable_from_address();
  PROTOBUF_NODISCARD std::string* release_from_address();
  void set_allocated_from_address(std::string* value);

  private:
  const std::string& _internal_from_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from_address(
      const std::string& value);
  std::string* _internal_mutable_from_address();

  public:
  // string to_address = 2 [json_name = "toAddress"];
  void clear_to_address() ;
  const std::string& to_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to_address(Arg_&& arg, Args_... args);
  std::string* mutable_to_address();
  PROTOBUF_NODISCARD std::string* release_to_address();
  void set_allocated_to_address(std::string* value);

  private:
  const std::string& _internal_to_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to_address(
      const std::string& value);
  std::string* _internal_mutable_to_address();

  public:
  // int64 start_time = 3 [json_name = "startTime"];
  void clear_start_time() ;
  ::int64_t start_time() const;
  void set_start_time(::int64_t value);

  private:
  ::int64_t _internal_start_time() const;
  void _internal_set_start_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      85, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgCreatePeriodicVestingAccount& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::vesting::v1beta1::Period > vesting_periods_;
    ::google::protobuf::internal::ArenaStringPtr from_address_;
    ::google::protobuf::internal::ArenaStringPtr to_address_;
    ::int64_t start_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fvesting_2fv1beta1_2ftx_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// MsgCreateVestingAccount

// string from_address = 1 [json_name = "fromAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCreateVestingAccount::clear_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.ClearToEmpty();
}
inline const std::string& MsgCreateVestingAccount::from_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreateVestingAccount.from_address)
  return _internal_from_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateVestingAccount::set_from_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreateVestingAccount.from_address)
}
inline std::string* MsgCreateVestingAccount::mutable_from_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_address();
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreateVestingAccount.from_address)
  return _s;
}
inline const std::string& MsgCreateVestingAccount::_internal_from_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_address_.Get();
}
inline void MsgCreateVestingAccount::_internal_set_from_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.Set(value, GetArena());
}
inline std::string* MsgCreateVestingAccount::_internal_mutable_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_address_.Mutable( GetArena());
}
inline std::string* MsgCreateVestingAccount::release_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.vesting.v1beta1.MsgCreateVestingAccount.from_address)
  return _impl_.from_address_.Release();
}
inline void MsgCreateVestingAccount::set_allocated_from_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_address_.IsDefault()) {
    _impl_.from_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.vesting.v1beta1.MsgCreateVestingAccount.from_address)
}

// string to_address = 2 [json_name = "toAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];
inline void MsgCreateVestingAccount::clear_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.ClearToEmpty();
}
inline const std::string& MsgCreateVestingAccount::to_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreateVestingAccount.to_address)
  return _internal_to_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreateVestingAccount::set_to_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreateVestingAccount.to_address)
}
inline std::string* MsgCreateVestingAccount::mutable_to_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_address();
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreateVestingAccount.to_address)
  return _s;
}
inline const std::string& MsgCreateVestingAccount::_internal_to_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_address_.Get();
}
inline void MsgCreateVestingAccount::_internal_set_to_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.Set(value, GetArena());
}
inline std::string* MsgCreateVestingAccount::_internal_mutable_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_address_.Mutable( GetArena());
}
inline std::string* MsgCreateVestingAccount::release_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.vesting.v1beta1.MsgCreateVestingAccount.to_address)
  return _impl_.to_address_.Release();
}
inline void MsgCreateVestingAccount::set_allocated_to_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_address_.IsDefault()) {
    _impl_.to_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.vesting.v1beta1.MsgCreateVestingAccount.to_address)
}

// repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int MsgCreateVestingAccount::_internal_amount_size() const {
  return _internal_amount().size();
}
inline int MsgCreateVestingAccount::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgCreateVestingAccount::mutable_amount(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreateVestingAccount.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgCreateVestingAccount::mutable_amount()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.vesting.v1beta1.MsgCreateVestingAccount.amount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgCreateVestingAccount::amount(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreateVestingAccount.amount)
  return _internal_amount().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgCreateVestingAccount::add_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_amount()->Add();
  // @@protoc_insertion_point(field_add:cosmos.vesting.v1beta1.MsgCreateVestingAccount.amount)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgCreateVestingAccount::amount() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.vesting.v1beta1.MsgCreateVestingAccount.amount)
  return _internal_amount();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgCreateVestingAccount::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgCreateVestingAccount::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.amount_;
}

// int64 end_time = 4 [json_name = "endTime"];
inline void MsgCreateVestingAccount::clear_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_ = ::int64_t{0};
}
inline ::int64_t MsgCreateVestingAccount::end_time() const {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreateVestingAccount.end_time)
  return _internal_end_time();
}
inline void MsgCreateVestingAccount::set_end_time(::int64_t value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreateVestingAccount.end_time)
}
inline ::int64_t MsgCreateVestingAccount::_internal_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_time_;
}
inline void MsgCreateVestingAccount::_internal_set_end_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_ = value;
}

// bool delayed = 5 [json_name = "delayed"];
inline void MsgCreateVestingAccount::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
}
inline bool MsgCreateVestingAccount::delayed() const {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreateVestingAccount.delayed)
  return _internal_delayed();
}
inline void MsgCreateVestingAccount::set_delayed(bool value) {
  _internal_set_delayed(value);
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreateVestingAccount.delayed)
}
inline bool MsgCreateVestingAccount::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void MsgCreateVestingAccount::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// -------------------------------------------------------------------

// MsgCreateVestingAccountResponse

// -------------------------------------------------------------------

// MsgCreatePermanentLockedAccount

// string from_address = 1 [json_name = "fromAddress", (.gogoproto.moretags) = "yaml:\"from_address\""];
inline void MsgCreatePermanentLockedAccount::clear_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.ClearToEmpty();
}
inline const std::string& MsgCreatePermanentLockedAccount::from_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.from_address)
  return _internal_from_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreatePermanentLockedAccount::set_from_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.from_address)
}
inline std::string* MsgCreatePermanentLockedAccount::mutable_from_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_address();
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.from_address)
  return _s;
}
inline const std::string& MsgCreatePermanentLockedAccount::_internal_from_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_address_.Get();
}
inline void MsgCreatePermanentLockedAccount::_internal_set_from_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.Set(value, GetArena());
}
inline std::string* MsgCreatePermanentLockedAccount::_internal_mutable_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_address_.Mutable( GetArena());
}
inline std::string* MsgCreatePermanentLockedAccount::release_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.from_address)
  return _impl_.from_address_.Release();
}
inline void MsgCreatePermanentLockedAccount::set_allocated_from_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_address_.IsDefault()) {
    _impl_.from_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.from_address)
}

// string to_address = 2 [json_name = "toAddress", (.gogoproto.moretags) = "yaml:\"to_address\""];
inline void MsgCreatePermanentLockedAccount::clear_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.ClearToEmpty();
}
inline const std::string& MsgCreatePermanentLockedAccount::to_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.to_address)
  return _internal_to_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreatePermanentLockedAccount::set_to_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.to_address)
}
inline std::string* MsgCreatePermanentLockedAccount::mutable_to_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_address();
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.to_address)
  return _s;
}
inline const std::string& MsgCreatePermanentLockedAccount::_internal_to_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_address_.Get();
}
inline void MsgCreatePermanentLockedAccount::_internal_set_to_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.Set(value, GetArena());
}
inline std::string* MsgCreatePermanentLockedAccount::_internal_mutable_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_address_.Mutable( GetArena());
}
inline std::string* MsgCreatePermanentLockedAccount::release_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.to_address)
  return _impl_.to_address_.Release();
}
inline void MsgCreatePermanentLockedAccount::set_allocated_to_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_address_.IsDefault()) {
    _impl_.to_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.to_address)
}

// repeated .cosmos.base.v1beta1.Coin amount = 3 [json_name = "amount", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];
inline int MsgCreatePermanentLockedAccount::_internal_amount_size() const {
  return _internal_amount().size();
}
inline int MsgCreatePermanentLockedAccount::amount_size() const {
  return _internal_amount_size();
}
inline ::cosmos::base::v1beta1::Coin* MsgCreatePermanentLockedAccount::mutable_amount(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.amount)
  return _internal_mutable_amount()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>* MsgCreatePermanentLockedAccount::mutable_amount()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.amount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_amount();
}
inline const ::cosmos::base::v1beta1::Coin& MsgCreatePermanentLockedAccount::amount(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.amount)
  return _internal_amount().Get(index);
}
inline ::cosmos::base::v1beta1::Coin* MsgCreatePermanentLockedAccount::add_amount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::base::v1beta1::Coin* _add = _internal_mutable_amount()->Add();
  // @@protoc_insertion_point(field_add:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.amount)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>& MsgCreatePermanentLockedAccount::amount() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount.amount)
  return _internal_amount();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>&
MsgCreatePermanentLockedAccount::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::base::v1beta1::Coin>*
MsgCreatePermanentLockedAccount::_internal_mutable_amount() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.amount_;
}

// -------------------------------------------------------------------

// MsgCreatePermanentLockedAccountResponse

// -------------------------------------------------------------------

// MsgCreatePeriodicVestingAccount

// string from_address = 1 [json_name = "fromAddress"];
inline void MsgCreatePeriodicVestingAccount::clear_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.ClearToEmpty();
}
inline const std::string& MsgCreatePeriodicVestingAccount::from_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.from_address)
  return _internal_from_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreatePeriodicVestingAccount::set_from_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.from_address)
}
inline std::string* MsgCreatePeriodicVestingAccount::mutable_from_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from_address();
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.from_address)
  return _s;
}
inline const std::string& MsgCreatePeriodicVestingAccount::_internal_from_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_address_.Get();
}
inline void MsgCreatePeriodicVestingAccount::_internal_set_from_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.Set(value, GetArena());
}
inline std::string* MsgCreatePeriodicVestingAccount::_internal_mutable_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_address_.Mutable( GetArena());
}
inline std::string* MsgCreatePeriodicVestingAccount::release_from_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.from_address)
  return _impl_.from_address_.Release();
}
inline void MsgCreatePeriodicVestingAccount::set_allocated_from_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.from_address_.IsDefault()) {
    _impl_.from_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.from_address)
}

// string to_address = 2 [json_name = "toAddress"];
inline void MsgCreatePeriodicVestingAccount::clear_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.ClearToEmpty();
}
inline const std::string& MsgCreatePeriodicVestingAccount::to_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.to_address)
  return _internal_to_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MsgCreatePeriodicVestingAccount::set_to_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.to_address)
}
inline std::string* MsgCreatePeriodicVestingAccount::mutable_to_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to_address();
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.to_address)
  return _s;
}
inline const std::string& MsgCreatePeriodicVestingAccount::_internal_to_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_address_.Get();
}
inline void MsgCreatePeriodicVestingAccount::_internal_set_to_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.Set(value, GetArena());
}
inline std::string* MsgCreatePeriodicVestingAccount::_internal_mutable_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_address_.Mutable( GetArena());
}
inline std::string* MsgCreatePeriodicVestingAccount::release_to_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.to_address)
  return _impl_.to_address_.Release();
}
inline void MsgCreatePeriodicVestingAccount::set_allocated_to_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_address_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.to_address_.IsDefault()) {
    _impl_.to_address_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.to_address)
}

// int64 start_time = 3 [json_name = "startTime"];
inline void MsgCreatePeriodicVestingAccount::clear_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_ = ::int64_t{0};
}
inline ::int64_t MsgCreatePeriodicVestingAccount::start_time() const {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.start_time)
  return _internal_start_time();
}
inline void MsgCreatePeriodicVestingAccount::set_start_time(::int64_t value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.start_time)
}
inline ::int64_t MsgCreatePeriodicVestingAccount::_internal_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_time_;
}
inline void MsgCreatePeriodicVestingAccount::_internal_set_start_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_ = value;
}

// repeated .cosmos.vesting.v1beta1.Period vesting_periods = 4 [json_name = "vestingPeriods", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];
inline int MsgCreatePeriodicVestingAccount::_internal_vesting_periods_size() const {
  return _internal_vesting_periods().size();
}
inline int MsgCreatePeriodicVestingAccount::vesting_periods_size() const {
  return _internal_vesting_periods_size();
}
inline ::cosmos::vesting::v1beta1::Period* MsgCreatePeriodicVestingAccount::mutable_vesting_periods(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.vesting_periods)
  return _internal_mutable_vesting_periods()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>* MsgCreatePeriodicVestingAccount::mutable_vesting_periods()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.vesting_periods)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_vesting_periods();
}
inline const ::cosmos::vesting::v1beta1::Period& MsgCreatePeriodicVestingAccount::vesting_periods(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.vesting_periods)
  return _internal_vesting_periods().Get(index);
}
inline ::cosmos::vesting::v1beta1::Period* MsgCreatePeriodicVestingAccount::add_vesting_periods() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::vesting::v1beta1::Period* _add = _internal_mutable_vesting_periods()->Add();
  // @@protoc_insertion_point(field_add:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.vesting_periods)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>& MsgCreatePeriodicVestingAccount::vesting_periods() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount.vesting_periods)
  return _internal_vesting_periods();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>&
MsgCreatePeriodicVestingAccount::_internal_vesting_periods() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vesting_periods_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::vesting::v1beta1::Period>*
MsgCreatePeriodicVestingAccount::_internal_mutable_vesting_periods() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.vesting_periods_;
}

// -------------------------------------------------------------------

// MsgCreatePeriodicVestingAccountResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace vesting
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fvesting_2fv1beta1_2ftx_2eproto_2epb_2eh
