// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/epochs/v1beta1/query.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fepochs_2fv1beta1_2fquery_2eproto_2epb_2eh
#define cosmos_2fepochs_2fv1beta1_2fquery_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "gogoproto/gogo.pb.h"
#include "google/api/annotations.pb.h"
#include "cosmos/epochs/v1beta1/genesis.pb.h"
#include "cosmos_proto/cosmos.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fepochs_2fv1beta1_2fquery_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fepochs_2fv1beta1_2fquery_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fepochs_2fv1beta1_2fquery_2eproto;
namespace cosmos {
namespace epochs {
namespace v1beta1 {
class QueryCurrentEpochRequest;
struct QueryCurrentEpochRequestDefaultTypeInternal;
extern QueryCurrentEpochRequestDefaultTypeInternal _QueryCurrentEpochRequest_default_instance_;
class QueryCurrentEpochResponse;
struct QueryCurrentEpochResponseDefaultTypeInternal;
extern QueryCurrentEpochResponseDefaultTypeInternal _QueryCurrentEpochResponse_default_instance_;
class QueryEpochInfosRequest;
struct QueryEpochInfosRequestDefaultTypeInternal;
extern QueryEpochInfosRequestDefaultTypeInternal _QueryEpochInfosRequest_default_instance_;
class QueryEpochInfosResponse;
struct QueryEpochInfosResponseDefaultTypeInternal;
extern QueryEpochInfosResponseDefaultTypeInternal _QueryEpochInfosResponse_default_instance_;
}  // namespace v1beta1
}  // namespace epochs
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace epochs {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class QueryEpochInfosRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.epochs.v1beta1.QueryEpochInfosRequest) */ {
 public:
  inline QueryEpochInfosRequest() : QueryEpochInfosRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryEpochInfosRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryEpochInfosRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryEpochInfosRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryEpochInfosRequest(const QueryEpochInfosRequest& from) : QueryEpochInfosRequest(nullptr, from) {}
  inline QueryEpochInfosRequest(QueryEpochInfosRequest&& from) noexcept
      : QueryEpochInfosRequest(nullptr, std::move(from)) {}
  inline QueryEpochInfosRequest& operator=(const QueryEpochInfosRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryEpochInfosRequest& operator=(QueryEpochInfosRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryEpochInfosRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryEpochInfosRequest* internal_default_instance() {
    return reinterpret_cast<const QueryEpochInfosRequest*>(
        &_QueryEpochInfosRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(QueryEpochInfosRequest& a, QueryEpochInfosRequest& b) { a.Swap(&b); }
  inline void Swap(QueryEpochInfosRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryEpochInfosRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryEpochInfosRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<QueryEpochInfosRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const QueryEpochInfosRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const QueryEpochInfosRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.epochs.v1beta1.QueryEpochInfosRequest"; }

 protected:
  explicit QueryEpochInfosRequest(::google::protobuf::Arena* arena);
  QueryEpochInfosRequest(::google::protobuf::Arena* arena, const QueryEpochInfosRequest& from);
  QueryEpochInfosRequest(::google::protobuf::Arena* arena, QueryEpochInfosRequest&& from) noexcept
      : QueryEpochInfosRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.epochs.v1beta1.QueryEpochInfosRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryEpochInfosRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fepochs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCurrentEpochResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.epochs.v1beta1.QueryCurrentEpochResponse) */ {
 public:
  inline QueryCurrentEpochResponse() : QueryCurrentEpochResponse(nullptr) {}
  ~QueryCurrentEpochResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCurrentEpochResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCurrentEpochResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCurrentEpochResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCurrentEpochResponse(const QueryCurrentEpochResponse& from) : QueryCurrentEpochResponse(nullptr, from) {}
  inline QueryCurrentEpochResponse(QueryCurrentEpochResponse&& from) noexcept
      : QueryCurrentEpochResponse(nullptr, std::move(from)) {}
  inline QueryCurrentEpochResponse& operator=(const QueryCurrentEpochResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCurrentEpochResponse& operator=(QueryCurrentEpochResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCurrentEpochResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCurrentEpochResponse* internal_default_instance() {
    return reinterpret_cast<const QueryCurrentEpochResponse*>(
        &_QueryCurrentEpochResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(QueryCurrentEpochResponse& a, QueryCurrentEpochResponse& b) { a.Swap(&b); }
  inline void Swap(QueryCurrentEpochResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCurrentEpochResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCurrentEpochResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCurrentEpochResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCurrentEpochResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCurrentEpochResponse& from) { QueryCurrentEpochResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCurrentEpochResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.epochs.v1beta1.QueryCurrentEpochResponse"; }

 protected:
  explicit QueryCurrentEpochResponse(::google::protobuf::Arena* arena);
  QueryCurrentEpochResponse(::google::protobuf::Arena* arena, const QueryCurrentEpochResponse& from);
  QueryCurrentEpochResponse(::google::protobuf::Arena* arena, QueryCurrentEpochResponse&& from) noexcept
      : QueryCurrentEpochResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrentEpochFieldNumber = 1,
  };
  // int64 current_epoch = 1 [json_name = "currentEpoch"];
  void clear_current_epoch() ;
  ::int64_t current_epoch() const;
  void set_current_epoch(::int64_t value);

  private:
  ::int64_t _internal_current_epoch() const;
  void _internal_set_current_epoch(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.epochs.v1beta1.QueryCurrentEpochResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCurrentEpochResponse& from_msg);
    ::int64_t current_epoch_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fepochs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryCurrentEpochRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.epochs.v1beta1.QueryCurrentEpochRequest) */ {
 public:
  inline QueryCurrentEpochRequest() : QueryCurrentEpochRequest(nullptr) {}
  ~QueryCurrentEpochRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryCurrentEpochRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryCurrentEpochRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryCurrentEpochRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryCurrentEpochRequest(const QueryCurrentEpochRequest& from) : QueryCurrentEpochRequest(nullptr, from) {}
  inline QueryCurrentEpochRequest(QueryCurrentEpochRequest&& from) noexcept
      : QueryCurrentEpochRequest(nullptr, std::move(from)) {}
  inline QueryCurrentEpochRequest& operator=(const QueryCurrentEpochRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryCurrentEpochRequest& operator=(QueryCurrentEpochRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryCurrentEpochRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryCurrentEpochRequest* internal_default_instance() {
    return reinterpret_cast<const QueryCurrentEpochRequest*>(
        &_QueryCurrentEpochRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(QueryCurrentEpochRequest& a, QueryCurrentEpochRequest& b) { a.Swap(&b); }
  inline void Swap(QueryCurrentEpochRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryCurrentEpochRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryCurrentEpochRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryCurrentEpochRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryCurrentEpochRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryCurrentEpochRequest& from) { QueryCurrentEpochRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryCurrentEpochRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.epochs.v1beta1.QueryCurrentEpochRequest"; }

 protected:
  explicit QueryCurrentEpochRequest(::google::protobuf::Arena* arena);
  QueryCurrentEpochRequest(::google::protobuf::Arena* arena, const QueryCurrentEpochRequest& from);
  QueryCurrentEpochRequest(::google::protobuf::Arena* arena, QueryCurrentEpochRequest&& from) noexcept
      : QueryCurrentEpochRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdentifierFieldNumber = 1,
  };
  // string identifier = 1 [json_name = "identifier"];
  void clear_identifier() ;
  const std::string& identifier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identifier(Arg_&& arg, Args_... args);
  std::string* mutable_identifier();
  PROTOBUF_NODISCARD std::string* release_identifier();
  void set_allocated_identifier(std::string* value);

  private:
  const std::string& _internal_identifier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identifier(
      const std::string& value);
  std::string* _internal_mutable_identifier();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.epochs.v1beta1.QueryCurrentEpochRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryCurrentEpochRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr identifier_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fepochs_2fv1beta1_2fquery_2eproto;
};
// -------------------------------------------------------------------

class QueryEpochInfosResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.epochs.v1beta1.QueryEpochInfosResponse) */ {
 public:
  inline QueryEpochInfosResponse() : QueryEpochInfosResponse(nullptr) {}
  ~QueryEpochInfosResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(QueryEpochInfosResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(QueryEpochInfosResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryEpochInfosResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryEpochInfosResponse(const QueryEpochInfosResponse& from) : QueryEpochInfosResponse(nullptr, from) {}
  inline QueryEpochInfosResponse(QueryEpochInfosResponse&& from) noexcept
      : QueryEpochInfosResponse(nullptr, std::move(from)) {}
  inline QueryEpochInfosResponse& operator=(const QueryEpochInfosResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryEpochInfosResponse& operator=(QueryEpochInfosResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryEpochInfosResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryEpochInfosResponse* internal_default_instance() {
    return reinterpret_cast<const QueryEpochInfosResponse*>(
        &_QueryEpochInfosResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(QueryEpochInfosResponse& a, QueryEpochInfosResponse& b) { a.Swap(&b); }
  inline void Swap(QueryEpochInfosResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryEpochInfosResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryEpochInfosResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<QueryEpochInfosResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryEpochInfosResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryEpochInfosResponse& from) { QueryEpochInfosResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(QueryEpochInfosResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.epochs.v1beta1.QueryEpochInfosResponse"; }

 protected:
  explicit QueryEpochInfosResponse(::google::protobuf::Arena* arena);
  QueryEpochInfosResponse(::google::protobuf::Arena* arena, const QueryEpochInfosResponse& from);
  QueryEpochInfosResponse(::google::protobuf::Arena* arena, QueryEpochInfosResponse&& from) noexcept
      : QueryEpochInfosResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEpochsFieldNumber = 1,
  };
  // repeated .cosmos.epochs.v1beta1.EpochInfo epochs = 1 [json_name = "epochs", (.gogoproto.nullable) = false];
  int epochs_size() const;
  private:
  int _internal_epochs_size() const;

  public:
  void clear_epochs() ;
  ::cosmos::epochs::v1beta1::EpochInfo* mutable_epochs(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>* mutable_epochs();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>& _internal_epochs() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>* _internal_mutable_epochs();
  public:
  const ::cosmos::epochs::v1beta1::EpochInfo& epochs(int index) const;
  ::cosmos::epochs::v1beta1::EpochInfo* add_epochs();
  const ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>& epochs() const;
  // @@protoc_insertion_point(class_scope:cosmos.epochs.v1beta1.QueryEpochInfosResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryEpochInfosResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cosmos::epochs::v1beta1::EpochInfo > epochs_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fepochs_2fv1beta1_2fquery_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// QueryEpochInfosRequest

// -------------------------------------------------------------------

// QueryEpochInfosResponse

// repeated .cosmos.epochs.v1beta1.EpochInfo epochs = 1 [json_name = "epochs", (.gogoproto.nullable) = false];
inline int QueryEpochInfosResponse::_internal_epochs_size() const {
  return _internal_epochs().size();
}
inline int QueryEpochInfosResponse::epochs_size() const {
  return _internal_epochs_size();
}
inline ::cosmos::epochs::v1beta1::EpochInfo* QueryEpochInfosResponse::mutable_epochs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.epochs.v1beta1.QueryEpochInfosResponse.epochs)
  return _internal_mutable_epochs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>* QueryEpochInfosResponse::mutable_epochs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.epochs.v1beta1.QueryEpochInfosResponse.epochs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_epochs();
}
inline const ::cosmos::epochs::v1beta1::EpochInfo& QueryEpochInfosResponse::epochs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.epochs.v1beta1.QueryEpochInfosResponse.epochs)
  return _internal_epochs().Get(index);
}
inline ::cosmos::epochs::v1beta1::EpochInfo* QueryEpochInfosResponse::add_epochs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::epochs::v1beta1::EpochInfo* _add = _internal_mutable_epochs()->Add();
  // @@protoc_insertion_point(field_add:cosmos.epochs.v1beta1.QueryEpochInfosResponse.epochs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>& QueryEpochInfosResponse::epochs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.epochs.v1beta1.QueryEpochInfosResponse.epochs)
  return _internal_epochs();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>&
QueryEpochInfosResponse::_internal_epochs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epochs_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::epochs::v1beta1::EpochInfo>*
QueryEpochInfosResponse::_internal_mutable_epochs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.epochs_;
}

// -------------------------------------------------------------------

// QueryCurrentEpochRequest

// string identifier = 1 [json_name = "identifier"];
inline void QueryCurrentEpochRequest::clear_identifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.ClearToEmpty();
}
inline const std::string& QueryCurrentEpochRequest::identifier() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.epochs.v1beta1.QueryCurrentEpochRequest.identifier)
  return _internal_identifier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryCurrentEpochRequest::set_identifier(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cosmos.epochs.v1beta1.QueryCurrentEpochRequest.identifier)
}
inline std::string* QueryCurrentEpochRequest::mutable_identifier() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identifier();
  // @@protoc_insertion_point(field_mutable:cosmos.epochs.v1beta1.QueryCurrentEpochRequest.identifier)
  return _s;
}
inline const std::string& QueryCurrentEpochRequest::_internal_identifier() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identifier_.Get();
}
inline void QueryCurrentEpochRequest::_internal_set_identifier(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.Set(value, GetArena());
}
inline std::string* QueryCurrentEpochRequest::_internal_mutable_identifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.identifier_.Mutable( GetArena());
}
inline std::string* QueryCurrentEpochRequest::release_identifier() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.epochs.v1beta1.QueryCurrentEpochRequest.identifier)
  return _impl_.identifier_.Release();
}
inline void QueryCurrentEpochRequest::set_allocated_identifier(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identifier_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.identifier_.IsDefault()) {
    _impl_.identifier_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cosmos.epochs.v1beta1.QueryCurrentEpochRequest.identifier)
}

// -------------------------------------------------------------------

// QueryCurrentEpochResponse

// int64 current_epoch = 1 [json_name = "currentEpoch"];
inline void QueryCurrentEpochResponse::clear_current_epoch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_epoch_ = ::int64_t{0};
}
inline ::int64_t QueryCurrentEpochResponse::current_epoch() const {
  // @@protoc_insertion_point(field_get:cosmos.epochs.v1beta1.QueryCurrentEpochResponse.current_epoch)
  return _internal_current_epoch();
}
inline void QueryCurrentEpochResponse::set_current_epoch(::int64_t value) {
  _internal_set_current_epoch(value);
  // @@protoc_insertion_point(field_set:cosmos.epochs.v1beta1.QueryCurrentEpochResponse.current_epoch)
}
inline ::int64_t QueryCurrentEpochResponse::_internal_current_epoch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_epoch_;
}
inline void QueryCurrentEpochResponse::_internal_set_current_epoch(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_epoch_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace epochs
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fepochs_2fv1beta1_2fquery_2eproto_2epb_2eh
