// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/epochs/v1beta1/events.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fepochs_2fv1beta1_2fevents_2eproto_2epb_2eh
#define cosmos_2fepochs_2fv1beta1_2fevents_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fepochs_2fv1beta1_2fevents_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fepochs_2fv1beta1_2fevents_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fepochs_2fv1beta1_2fevents_2eproto;
namespace cosmos {
namespace epochs {
namespace v1beta1 {
class EventEpochEnd;
struct EventEpochEndDefaultTypeInternal;
extern EventEpochEndDefaultTypeInternal _EventEpochEnd_default_instance_;
class EventEpochStart;
struct EventEpochStartDefaultTypeInternal;
extern EventEpochStartDefaultTypeInternal _EventEpochStart_default_instance_;
}  // namespace v1beta1
}  // namespace epochs
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace epochs {
namespace v1beta1 {

// ===================================================================


// -------------------------------------------------------------------

class EventEpochStart final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.epochs.v1beta1.EventEpochStart) */ {
 public:
  inline EventEpochStart() : EventEpochStart(nullptr) {}
  ~EventEpochStart() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventEpochStart* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventEpochStart));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventEpochStart(
      ::google::protobuf::internal::ConstantInitialized);

  inline EventEpochStart(const EventEpochStart& from) : EventEpochStart(nullptr, from) {}
  inline EventEpochStart(EventEpochStart&& from) noexcept
      : EventEpochStart(nullptr, std::move(from)) {}
  inline EventEpochStart& operator=(const EventEpochStart& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventEpochStart& operator=(EventEpochStart&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventEpochStart& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventEpochStart* internal_default_instance() {
    return reinterpret_cast<const EventEpochStart*>(
        &_EventEpochStart_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(EventEpochStart& a, EventEpochStart& b) { a.Swap(&b); }
  inline void Swap(EventEpochStart* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventEpochStart* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventEpochStart* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventEpochStart>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventEpochStart& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventEpochStart& from) { EventEpochStart::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventEpochStart* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.epochs.v1beta1.EventEpochStart"; }

 protected:
  explicit EventEpochStart(::google::protobuf::Arena* arena);
  EventEpochStart(::google::protobuf::Arena* arena, const EventEpochStart& from);
  EventEpochStart(::google::protobuf::Arena* arena, EventEpochStart&& from) noexcept
      : EventEpochStart(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEpochNumberFieldNumber = 1,
    kEpochStartTimeFieldNumber = 2,
  };
  // int64 epoch_number = 1 [json_name = "epochNumber"];
  void clear_epoch_number() ;
  ::int64_t epoch_number() const;
  void set_epoch_number(::int64_t value);

  private:
  ::int64_t _internal_epoch_number() const;
  void _internal_set_epoch_number(::int64_t value);

  public:
  // int64 epoch_start_time = 2 [json_name = "epochStartTime"];
  void clear_epoch_start_time() ;
  ::int64_t epoch_start_time() const;
  void set_epoch_start_time(::int64_t value);

  private:
  ::int64_t _internal_epoch_start_time() const;
  void _internal_set_epoch_start_time(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.epochs.v1beta1.EventEpochStart)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EventEpochStart& from_msg);
    ::int64_t epoch_number_;
    ::int64_t epoch_start_time_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fepochs_2fv1beta1_2fevents_2eproto;
};
// -------------------------------------------------------------------

class EventEpochEnd final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.epochs.v1beta1.EventEpochEnd) */ {
 public:
  inline EventEpochEnd() : EventEpochEnd(nullptr) {}
  ~EventEpochEnd() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventEpochEnd* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventEpochEnd));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventEpochEnd(
      ::google::protobuf::internal::ConstantInitialized);

  inline EventEpochEnd(const EventEpochEnd& from) : EventEpochEnd(nullptr, from) {}
  inline EventEpochEnd(EventEpochEnd&& from) noexcept
      : EventEpochEnd(nullptr, std::move(from)) {}
  inline EventEpochEnd& operator=(const EventEpochEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventEpochEnd& operator=(EventEpochEnd&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventEpochEnd& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventEpochEnd* internal_default_instance() {
    return reinterpret_cast<const EventEpochEnd*>(
        &_EventEpochEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(EventEpochEnd& a, EventEpochEnd& b) { a.Swap(&b); }
  inline void Swap(EventEpochEnd* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventEpochEnd* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventEpochEnd* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventEpochEnd>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventEpochEnd& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventEpochEnd& from) { EventEpochEnd::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventEpochEnd* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.epochs.v1beta1.EventEpochEnd"; }

 protected:
  explicit EventEpochEnd(::google::protobuf::Arena* arena);
  EventEpochEnd(::google::protobuf::Arena* arena, const EventEpochEnd& from);
  EventEpochEnd(::google::protobuf::Arena* arena, EventEpochEnd&& from) noexcept
      : EventEpochEnd(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEpochNumberFieldNumber = 1,
  };
  // int64 epoch_number = 1 [json_name = "epochNumber"];
  void clear_epoch_number() ;
  ::int64_t epoch_number() const;
  void set_epoch_number(::int64_t value);

  private:
  ::int64_t _internal_epoch_number() const;
  void _internal_set_epoch_number(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.epochs.v1beta1.EventEpochEnd)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EventEpochEnd& from_msg);
    ::int64_t epoch_number_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fepochs_2fv1beta1_2fevents_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EventEpochEnd

// int64 epoch_number = 1 [json_name = "epochNumber"];
inline void EventEpochEnd::clear_epoch_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_number_ = ::int64_t{0};
}
inline ::int64_t EventEpochEnd::epoch_number() const {
  // @@protoc_insertion_point(field_get:cosmos.epochs.v1beta1.EventEpochEnd.epoch_number)
  return _internal_epoch_number();
}
inline void EventEpochEnd::set_epoch_number(::int64_t value) {
  _internal_set_epoch_number(value);
  // @@protoc_insertion_point(field_set:cosmos.epochs.v1beta1.EventEpochEnd.epoch_number)
}
inline ::int64_t EventEpochEnd::_internal_epoch_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoch_number_;
}
inline void EventEpochEnd::_internal_set_epoch_number(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_number_ = value;
}

// -------------------------------------------------------------------

// EventEpochStart

// int64 epoch_number = 1 [json_name = "epochNumber"];
inline void EventEpochStart::clear_epoch_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_number_ = ::int64_t{0};
}
inline ::int64_t EventEpochStart::epoch_number() const {
  // @@protoc_insertion_point(field_get:cosmos.epochs.v1beta1.EventEpochStart.epoch_number)
  return _internal_epoch_number();
}
inline void EventEpochStart::set_epoch_number(::int64_t value) {
  _internal_set_epoch_number(value);
  // @@protoc_insertion_point(field_set:cosmos.epochs.v1beta1.EventEpochStart.epoch_number)
}
inline ::int64_t EventEpochStart::_internal_epoch_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoch_number_;
}
inline void EventEpochStart::_internal_set_epoch_number(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_number_ = value;
}

// int64 epoch_start_time = 2 [json_name = "epochStartTime"];
inline void EventEpochStart::clear_epoch_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_start_time_ = ::int64_t{0};
}
inline ::int64_t EventEpochStart::epoch_start_time() const {
  // @@protoc_insertion_point(field_get:cosmos.epochs.v1beta1.EventEpochStart.epoch_start_time)
  return _internal_epoch_start_time();
}
inline void EventEpochStart::set_epoch_start_time(::int64_t value) {
  _internal_set_epoch_start_time(value);
  // @@protoc_insertion_point(field_set:cosmos.epochs.v1beta1.EventEpochStart.epoch_start_time)
}
inline ::int64_t EventEpochStart::_internal_epoch_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.epoch_start_time_;
}
inline void EventEpochStart::_internal_set_epoch_start_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.epoch_start_time_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace epochs
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fepochs_2fv1beta1_2fevents_2eproto_2epb_2eh
