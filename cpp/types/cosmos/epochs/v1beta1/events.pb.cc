// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/epochs/v1beta1/events.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/epochs/v1beta1/events.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace epochs {
namespace v1beta1 {

inline constexpr EventEpochStart::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : epoch_number_{::int64_t{0}},
        epoch_start_time_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventEpochStart::EventEpochStart(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventEpochStartDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventEpochStartDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventEpochStartDefaultTypeInternal() {}
  union {
    EventEpochStart _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventEpochStartDefaultTypeInternal _EventEpochStart_default_instance_;

inline constexpr EventEpochEnd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : epoch_number_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventEpochEnd::EventEpochEnd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventEpochEndDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventEpochEndDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventEpochEndDefaultTypeInternal() {}
  union {
    EventEpochEnd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventEpochEndDefaultTypeInternal _EventEpochEnd_default_instance_;
}  // namespace v1beta1
}  // namespace epochs
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fepochs_2fv1beta1_2fevents_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fepochs_2fv1beta1_2fevents_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fepochs_2fv1beta1_2fevents_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::epochs::v1beta1::EventEpochEnd, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::epochs::v1beta1::EventEpochEnd, _impl_.epoch_number_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::epochs::v1beta1::EventEpochStart, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::epochs::v1beta1::EventEpochStart, _impl_.epoch_number_),
        PROTOBUF_FIELD_OFFSET(::cosmos::epochs::v1beta1::EventEpochStart, _impl_.epoch_start_time_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::cosmos::epochs::v1beta1::EventEpochEnd)},
        {9, -1, -1, sizeof(::cosmos::epochs::v1beta1::EventEpochStart)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::epochs::v1beta1::_EventEpochEnd_default_instance_._instance,
    &::cosmos::epochs::v1beta1::_EventEpochStart_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fepochs_2fv1beta1_2fevents_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\"cosmos/epochs/v1beta1/events.proto\022\025co"
    "smos.epochs.v1beta1\"2\n\rEventEpochEnd\022!\n\014"
    "epoch_number\030\001 \001(\003R\013epochNumber\"^\n\017Event"
    "EpochStart\022!\n\014epoch_number\030\001 \001(\003R\013epochN"
    "umber\022(\n\020epoch_start_time\030\002 \001(\003R\016epochSt"
    "artTimeB-Z+github.com/cosmos/cosmos-sdk/"
    "x/epochs/typesb\006proto3"
};
static ::absl::once_flag descriptor_table_cosmos_2fepochs_2fv1beta1_2fevents_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fepochs_2fv1beta1_2fevents_2eproto = {
    false,
    false,
    262,
    descriptor_table_protodef_cosmos_2fepochs_2fv1beta1_2fevents_2eproto,
    "cosmos/epochs/v1beta1/events.proto",
    &descriptor_table_cosmos_2fepochs_2fv1beta1_2fevents_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fepochs_2fv1beta1_2fevents_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fepochs_2fv1beta1_2fevents_2eproto,
    file_level_service_descriptors_cosmos_2fepochs_2fv1beta1_2fevents_2eproto,
};
namespace cosmos {
namespace epochs {
namespace v1beta1 {
// ===================================================================

class EventEpochEnd::_Internal {
 public:
};

EventEpochEnd::EventEpochEnd(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.epochs.v1beta1.EventEpochEnd)
}
EventEpochEnd::EventEpochEnd(
    ::google::protobuf::Arena* arena, const EventEpochEnd& from)
    : EventEpochEnd(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventEpochEnd::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventEpochEnd::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.epoch_number_ = {};
}
EventEpochEnd::~EventEpochEnd() {
  // @@protoc_insertion_point(destructor:cosmos.epochs.v1beta1.EventEpochEnd)
  SharedDtor(*this);
}
inline void EventEpochEnd::SharedDtor(MessageLite& self) {
  EventEpochEnd& this_ = static_cast<EventEpochEnd&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventEpochEnd::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventEpochEnd(arena);
}
constexpr auto EventEpochEnd::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventEpochEnd),
                                            alignof(EventEpochEnd));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventEpochEnd::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventEpochEnd_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventEpochEnd::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventEpochEnd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventEpochEnd::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventEpochEnd>(), &EventEpochEnd::ByteSizeLong,
            &EventEpochEnd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventEpochEnd, _impl_._cached_size_),
        false,
    },
    &EventEpochEnd::kDescriptorMethods,
    &descriptor_table_cosmos_2fepochs_2fv1beta1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventEpochEnd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> EventEpochEnd::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::epochs::v1beta1::EventEpochEnd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 epoch_number = 1 [json_name = "epochNumber"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventEpochEnd, _impl_.epoch_number_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventEpochEnd, _impl_.epoch_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 epoch_number = 1 [json_name = "epochNumber"];
    {PROTOBUF_FIELD_OFFSET(EventEpochEnd, _impl_.epoch_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventEpochEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.epochs.v1beta1.EventEpochEnd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.epoch_number_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventEpochEnd::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventEpochEnd& this_ = static_cast<const EventEpochEnd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventEpochEnd::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventEpochEnd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.epochs.v1beta1.EventEpochEnd)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 epoch_number = 1 [json_name = "epochNumber"];
          if (this_._internal_epoch_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_epoch_number(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.epochs.v1beta1.EventEpochEnd)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventEpochEnd::ByteSizeLong(const MessageLite& base) {
          const EventEpochEnd& this_ = static_cast<const EventEpochEnd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventEpochEnd::ByteSizeLong() const {
          const EventEpochEnd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.epochs.v1beta1.EventEpochEnd)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 epoch_number = 1 [json_name = "epochNumber"];
            if (this_._internal_epoch_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_epoch_number());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventEpochEnd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventEpochEnd*>(&to_msg);
  auto& from = static_cast<const EventEpochEnd&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.epochs.v1beta1.EventEpochEnd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_epoch_number() != 0) {
    _this->_impl_.epoch_number_ = from._impl_.epoch_number_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventEpochEnd::CopyFrom(const EventEpochEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.epochs.v1beta1.EventEpochEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventEpochEnd::InternalSwap(EventEpochEnd* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.epoch_number_, other->_impl_.epoch_number_);
}

::google::protobuf::Metadata EventEpochEnd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventEpochStart::_Internal {
 public:
};

EventEpochStart::EventEpochStart(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.epochs.v1beta1.EventEpochStart)
}
EventEpochStart::EventEpochStart(
    ::google::protobuf::Arena* arena, const EventEpochStart& from)
    : EventEpochStart(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE EventEpochStart::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void EventEpochStart::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, epoch_number_),
           0,
           offsetof(Impl_, epoch_start_time_) -
               offsetof(Impl_, epoch_number_) +
               sizeof(Impl_::epoch_start_time_));
}
EventEpochStart::~EventEpochStart() {
  // @@protoc_insertion_point(destructor:cosmos.epochs.v1beta1.EventEpochStart)
  SharedDtor(*this);
}
inline void EventEpochStart::SharedDtor(MessageLite& self) {
  EventEpochStart& this_ = static_cast<EventEpochStart&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* EventEpochStart::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EventEpochStart(arena);
}
constexpr auto EventEpochStart::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(EventEpochStart),
                                            alignof(EventEpochStart));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EventEpochStart::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EventEpochStart_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EventEpochStart::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EventEpochStart>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EventEpochStart::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EventEpochStart>(), &EventEpochStart::ByteSizeLong,
            &EventEpochStart::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EventEpochStart, _impl_._cached_size_),
        false,
    },
    &EventEpochStart::kDescriptorMethods,
    &descriptor_table_cosmos_2fepochs_2fv1beta1_2fevents_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EventEpochStart::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> EventEpochStart::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::epochs::v1beta1::EventEpochStart>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 epoch_start_time = 2 [json_name = "epochStartTime"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventEpochStart, _impl_.epoch_start_time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EventEpochStart, _impl_.epoch_start_time_)}},
    // int64 epoch_number = 1 [json_name = "epochNumber"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventEpochStart, _impl_.epoch_number_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(EventEpochStart, _impl_.epoch_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 epoch_number = 1 [json_name = "epochNumber"];
    {PROTOBUF_FIELD_OFFSET(EventEpochStart, _impl_.epoch_number_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 epoch_start_time = 2 [json_name = "epochStartTime"];
    {PROTOBUF_FIELD_OFFSET(EventEpochStart, _impl_.epoch_start_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void EventEpochStart::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.epochs.v1beta1.EventEpochStart)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.epoch_number_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.epoch_start_time_) -
      reinterpret_cast<char*>(&_impl_.epoch_number_)) + sizeof(_impl_.epoch_start_time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EventEpochStart::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EventEpochStart& this_ = static_cast<const EventEpochStart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EventEpochStart::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EventEpochStart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.epochs.v1beta1.EventEpochStart)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 epoch_number = 1 [json_name = "epochNumber"];
          if (this_._internal_epoch_number() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_epoch_number(), target);
          }

          // int64 epoch_start_time = 2 [json_name = "epochStartTime"];
          if (this_._internal_epoch_start_time() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_epoch_start_time(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.epochs.v1beta1.EventEpochStart)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EventEpochStart::ByteSizeLong(const MessageLite& base) {
          const EventEpochStart& this_ = static_cast<const EventEpochStart&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EventEpochStart::ByteSizeLong() const {
          const EventEpochStart& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.epochs.v1beta1.EventEpochStart)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 epoch_number = 1 [json_name = "epochNumber"];
            if (this_._internal_epoch_number() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_epoch_number());
            }
            // int64 epoch_start_time = 2 [json_name = "epochStartTime"];
            if (this_._internal_epoch_start_time() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_epoch_start_time());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EventEpochStart::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventEpochStart*>(&to_msg);
  auto& from = static_cast<const EventEpochStart&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.epochs.v1beta1.EventEpochStart)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_epoch_number() != 0) {
    _this->_impl_.epoch_number_ = from._impl_.epoch_number_;
  }
  if (from._internal_epoch_start_time() != 0) {
    _this->_impl_.epoch_start_time_ = from._impl_.epoch_start_time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventEpochStart::CopyFrom(const EventEpochStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.epochs.v1beta1.EventEpochStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventEpochStart::InternalSwap(EventEpochStart* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventEpochStart, _impl_.epoch_start_time_)
      + sizeof(EventEpochStart::_impl_.epoch_start_time_)
      - PROTOBUF_FIELD_OFFSET(EventEpochStart, _impl_.epoch_number_)>(
          reinterpret_cast<char*>(&_impl_.epoch_number_),
          reinterpret_cast<char*>(&other->_impl_.epoch_number_));
}

::google::protobuf::Metadata EventEpochStart::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace epochs
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fepochs_2fv1beta1_2fevents_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
