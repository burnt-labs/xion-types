// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/store/streaming/abci/grpc.proto
// Protobuf C++ Version: 5.29.4

#ifndef cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto_2epb_2eh
#define cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029004
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "tendermint/abci/types.pb.h"
#include "cosmos/store/v1beta1/listening.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto;
namespace cosmos {
namespace store {
namespace streaming {
namespace abci {
class ListenCommitRequest;
struct ListenCommitRequestDefaultTypeInternal;
extern ListenCommitRequestDefaultTypeInternal _ListenCommitRequest_default_instance_;
class ListenCommitResponse;
struct ListenCommitResponseDefaultTypeInternal;
extern ListenCommitResponseDefaultTypeInternal _ListenCommitResponse_default_instance_;
class ListenFinalizeBlockRequest;
struct ListenFinalizeBlockRequestDefaultTypeInternal;
extern ListenFinalizeBlockRequestDefaultTypeInternal _ListenFinalizeBlockRequest_default_instance_;
class ListenFinalizeBlockResponse;
struct ListenFinalizeBlockResponseDefaultTypeInternal;
extern ListenFinalizeBlockResponseDefaultTypeInternal _ListenFinalizeBlockResponse_default_instance_;
}  // namespace abci
}  // namespace streaming
}  // namespace store
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cosmos {
namespace store {
namespace streaming {
namespace abci {

// ===================================================================


// -------------------------------------------------------------------

class ListenFinalizeBlockResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.store.streaming.abci.ListenFinalizeBlockResponse) */ {
 public:
  inline ListenFinalizeBlockResponse() : ListenFinalizeBlockResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListenFinalizeBlockResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListenFinalizeBlockResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListenFinalizeBlockResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListenFinalizeBlockResponse(const ListenFinalizeBlockResponse& from) : ListenFinalizeBlockResponse(nullptr, from) {}
  inline ListenFinalizeBlockResponse(ListenFinalizeBlockResponse&& from) noexcept
      : ListenFinalizeBlockResponse(nullptr, std::move(from)) {}
  inline ListenFinalizeBlockResponse& operator=(const ListenFinalizeBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListenFinalizeBlockResponse& operator=(ListenFinalizeBlockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListenFinalizeBlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListenFinalizeBlockResponse* internal_default_instance() {
    return reinterpret_cast<const ListenFinalizeBlockResponse*>(
        &_ListenFinalizeBlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ListenFinalizeBlockResponse& a, ListenFinalizeBlockResponse& b) { a.Swap(&b); }
  inline void Swap(ListenFinalizeBlockResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListenFinalizeBlockResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListenFinalizeBlockResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListenFinalizeBlockResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListenFinalizeBlockResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListenFinalizeBlockResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.store.streaming.abci.ListenFinalizeBlockResponse"; }

 protected:
  explicit ListenFinalizeBlockResponse(::google::protobuf::Arena* arena);
  ListenFinalizeBlockResponse(::google::protobuf::Arena* arena, const ListenFinalizeBlockResponse& from);
  ListenFinalizeBlockResponse(::google::protobuf::Arena* arena, ListenFinalizeBlockResponse&& from) noexcept
      : ListenFinalizeBlockResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.store.streaming.abci.ListenFinalizeBlockResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListenFinalizeBlockResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto;
};
// -------------------------------------------------------------------

class ListenCommitResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cosmos.store.streaming.abci.ListenCommitResponse) */ {
 public:
  inline ListenCommitResponse() : ListenCommitResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListenCommitResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListenCommitResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListenCommitResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListenCommitResponse(const ListenCommitResponse& from) : ListenCommitResponse(nullptr, from) {}
  inline ListenCommitResponse(ListenCommitResponse&& from) noexcept
      : ListenCommitResponse(nullptr, std::move(from)) {}
  inline ListenCommitResponse& operator=(const ListenCommitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListenCommitResponse& operator=(ListenCommitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListenCommitResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListenCommitResponse* internal_default_instance() {
    return reinterpret_cast<const ListenCommitResponse*>(
        &_ListenCommitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ListenCommitResponse& a, ListenCommitResponse& b) { a.Swap(&b); }
  inline void Swap(ListenCommitResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListenCommitResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListenCommitResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListenCommitResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListenCommitResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListenCommitResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.store.streaming.abci.ListenCommitResponse"; }

 protected:
  explicit ListenCommitResponse(::google::protobuf::Arena* arena);
  ListenCommitResponse(::google::protobuf::Arena* arena, const ListenCommitResponse& from);
  ListenCommitResponse(::google::protobuf::Arena* arena, ListenCommitResponse&& from) noexcept
      : ListenCommitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cosmos.store.streaming.abci.ListenCommitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListenCommitResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto;
};
// -------------------------------------------------------------------

class ListenCommitRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.store.streaming.abci.ListenCommitRequest) */ {
 public:
  inline ListenCommitRequest() : ListenCommitRequest(nullptr) {}
  ~ListenCommitRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListenCommitRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListenCommitRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListenCommitRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListenCommitRequest(const ListenCommitRequest& from) : ListenCommitRequest(nullptr, from) {}
  inline ListenCommitRequest(ListenCommitRequest&& from) noexcept
      : ListenCommitRequest(nullptr, std::move(from)) {}
  inline ListenCommitRequest& operator=(const ListenCommitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListenCommitRequest& operator=(ListenCommitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListenCommitRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListenCommitRequest* internal_default_instance() {
    return reinterpret_cast<const ListenCommitRequest*>(
        &_ListenCommitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ListenCommitRequest& a, ListenCommitRequest& b) { a.Swap(&b); }
  inline void Swap(ListenCommitRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListenCommitRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListenCommitRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListenCommitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListenCommitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListenCommitRequest& from) { ListenCommitRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListenCommitRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.store.streaming.abci.ListenCommitRequest"; }

 protected:
  explicit ListenCommitRequest(::google::protobuf::Arena* arena);
  ListenCommitRequest(::google::protobuf::Arena* arena, const ListenCommitRequest& from);
  ListenCommitRequest(::google::protobuf::Arena* arena, ListenCommitRequest&& from) noexcept
      : ListenCommitRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChangeSetFieldNumber = 3,
    kResFieldNumber = 2,
    kBlockHeightFieldNumber = 1,
  };
  // repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];
  int change_set_size() const;
  private:
  int _internal_change_set_size() const;

  public:
  void clear_change_set() ;
  ::cosmos::store::v1beta1::StoreKVPair* mutable_change_set(int index);
  ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>* mutable_change_set();

  private:
  const ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>& _internal_change_set() const;
  ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>* _internal_mutable_change_set();
  public:
  const ::cosmos::store::v1beta1::StoreKVPair& change_set(int index) const;
  ::cosmos::store::v1beta1::StoreKVPair* add_change_set();
  const ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>& change_set() const;
  // .tendermint.abci.ResponseCommit res = 2 [json_name = "res"];
  bool has_res() const;
  void clear_res() ;
  const ::tendermint::abci::ResponseCommit& res() const;
  PROTOBUF_NODISCARD ::tendermint::abci::ResponseCommit* release_res();
  ::tendermint::abci::ResponseCommit* mutable_res();
  void set_allocated_res(::tendermint::abci::ResponseCommit* value);
  void unsafe_arena_set_allocated_res(::tendermint::abci::ResponseCommit* value);
  ::tendermint::abci::ResponseCommit* unsafe_arena_release_res();

  private:
  const ::tendermint::abci::ResponseCommit& _internal_res() const;
  ::tendermint::abci::ResponseCommit* _internal_mutable_res();

  public:
  // int64 block_height = 1 [json_name = "blockHeight"];
  void clear_block_height() ;
  ::int64_t block_height() const;
  void set_block_height(::int64_t value);

  private:
  ::int64_t _internal_block_height() const;
  void _internal_set_block_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cosmos.store.streaming.abci.ListenCommitRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListenCommitRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::cosmos::store::v1beta1::StoreKVPair > change_set_;
    ::tendermint::abci::ResponseCommit* res_;
    ::int64_t block_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto;
};
// -------------------------------------------------------------------

class ListenFinalizeBlockRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cosmos.store.streaming.abci.ListenFinalizeBlockRequest) */ {
 public:
  inline ListenFinalizeBlockRequest() : ListenFinalizeBlockRequest(nullptr) {}
  ~ListenFinalizeBlockRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListenFinalizeBlockRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListenFinalizeBlockRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListenFinalizeBlockRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListenFinalizeBlockRequest(const ListenFinalizeBlockRequest& from) : ListenFinalizeBlockRequest(nullptr, from) {}
  inline ListenFinalizeBlockRequest(ListenFinalizeBlockRequest&& from) noexcept
      : ListenFinalizeBlockRequest(nullptr, std::move(from)) {}
  inline ListenFinalizeBlockRequest& operator=(const ListenFinalizeBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListenFinalizeBlockRequest& operator=(ListenFinalizeBlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListenFinalizeBlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListenFinalizeBlockRequest* internal_default_instance() {
    return reinterpret_cast<const ListenFinalizeBlockRequest*>(
        &_ListenFinalizeBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ListenFinalizeBlockRequest& a, ListenFinalizeBlockRequest& b) { a.Swap(&b); }
  inline void Swap(ListenFinalizeBlockRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListenFinalizeBlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListenFinalizeBlockRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListenFinalizeBlockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListenFinalizeBlockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListenFinalizeBlockRequest& from) { ListenFinalizeBlockRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListenFinalizeBlockRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cosmos.store.streaming.abci.ListenFinalizeBlockRequest"; }

 protected:
  explicit ListenFinalizeBlockRequest(::google::protobuf::Arena* arena);
  ListenFinalizeBlockRequest(::google::protobuf::Arena* arena, const ListenFinalizeBlockRequest& from);
  ListenFinalizeBlockRequest(::google::protobuf::Arena* arena, ListenFinalizeBlockRequest&& from) noexcept
      : ListenFinalizeBlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReqFieldNumber = 1,
    kResFieldNumber = 2,
  };
  // .tendermint.abci.RequestFinalizeBlock req = 1 [json_name = "req"];
  bool has_req() const;
  void clear_req() ;
  const ::tendermint::abci::RequestFinalizeBlock& req() const;
  PROTOBUF_NODISCARD ::tendermint::abci::RequestFinalizeBlock* release_req();
  ::tendermint::abci::RequestFinalizeBlock* mutable_req();
  void set_allocated_req(::tendermint::abci::RequestFinalizeBlock* value);
  void unsafe_arena_set_allocated_req(::tendermint::abci::RequestFinalizeBlock* value);
  ::tendermint::abci::RequestFinalizeBlock* unsafe_arena_release_req();

  private:
  const ::tendermint::abci::RequestFinalizeBlock& _internal_req() const;
  ::tendermint::abci::RequestFinalizeBlock* _internal_mutable_req();

  public:
  // .tendermint.abci.ResponseFinalizeBlock res = 2 [json_name = "res"];
  bool has_res() const;
  void clear_res() ;
  const ::tendermint::abci::ResponseFinalizeBlock& res() const;
  PROTOBUF_NODISCARD ::tendermint::abci::ResponseFinalizeBlock* release_res();
  ::tendermint::abci::ResponseFinalizeBlock* mutable_res();
  void set_allocated_res(::tendermint::abci::ResponseFinalizeBlock* value);
  void unsafe_arena_set_allocated_res(::tendermint::abci::ResponseFinalizeBlock* value);
  ::tendermint::abci::ResponseFinalizeBlock* unsafe_arena_release_res();

  private:
  const ::tendermint::abci::ResponseFinalizeBlock& _internal_res() const;
  ::tendermint::abci::ResponseFinalizeBlock* _internal_mutable_res();

  public:
  // @@protoc_insertion_point(class_scope:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListenFinalizeBlockRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::tendermint::abci::RequestFinalizeBlock* req_;
    ::tendermint::abci::ResponseFinalizeBlock* res_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ListenFinalizeBlockRequest

// .tendermint.abci.RequestFinalizeBlock req = 1 [json_name = "req"];
inline bool ListenFinalizeBlockRequest::has_req() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.req_ != nullptr);
  return value;
}
inline const ::tendermint::abci::RequestFinalizeBlock& ListenFinalizeBlockRequest::_internal_req() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::abci::RequestFinalizeBlock* p = _impl_.req_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::abci::RequestFinalizeBlock&>(::tendermint::abci::_RequestFinalizeBlock_default_instance_);
}
inline const ::tendermint::abci::RequestFinalizeBlock& ListenFinalizeBlockRequest::req() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.req)
  return _internal_req();
}
inline void ListenFinalizeBlockRequest::unsafe_arena_set_allocated_req(::tendermint::abci::RequestFinalizeBlock* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.req_);
  }
  _impl_.req_ = reinterpret_cast<::tendermint::abci::RequestFinalizeBlock*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.req)
}
inline ::tendermint::abci::RequestFinalizeBlock* ListenFinalizeBlockRequest::release_req() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::abci::RequestFinalizeBlock* released = _impl_.req_;
  _impl_.req_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::abci::RequestFinalizeBlock* ListenFinalizeBlockRequest::unsafe_arena_release_req() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.req)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::abci::RequestFinalizeBlock* temp = _impl_.req_;
  _impl_.req_ = nullptr;
  return temp;
}
inline ::tendermint::abci::RequestFinalizeBlock* ListenFinalizeBlockRequest::_internal_mutable_req() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.req_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::abci::RequestFinalizeBlock>(GetArena());
    _impl_.req_ = reinterpret_cast<::tendermint::abci::RequestFinalizeBlock*>(p);
  }
  return _impl_.req_;
}
inline ::tendermint::abci::RequestFinalizeBlock* ListenFinalizeBlockRequest::mutable_req() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::abci::RequestFinalizeBlock* _msg = _internal_mutable_req();
  // @@protoc_insertion_point(field_mutable:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.req)
  return _msg;
}
inline void ListenFinalizeBlockRequest::set_allocated_req(::tendermint::abci::RequestFinalizeBlock* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.req_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.req_ = reinterpret_cast<::tendermint::abci::RequestFinalizeBlock*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.req)
}

// .tendermint.abci.ResponseFinalizeBlock res = 2 [json_name = "res"];
inline bool ListenFinalizeBlockRequest::has_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.res_ != nullptr);
  return value;
}
inline const ::tendermint::abci::ResponseFinalizeBlock& ListenFinalizeBlockRequest::_internal_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::abci::ResponseFinalizeBlock* p = _impl_.res_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::abci::ResponseFinalizeBlock&>(::tendermint::abci::_ResponseFinalizeBlock_default_instance_);
}
inline const ::tendermint::abci::ResponseFinalizeBlock& ListenFinalizeBlockRequest::res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.res)
  return _internal_res();
}
inline void ListenFinalizeBlockRequest::unsafe_arena_set_allocated_res(::tendermint::abci::ResponseFinalizeBlock* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.res_);
  }
  _impl_.res_ = reinterpret_cast<::tendermint::abci::ResponseFinalizeBlock*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.res)
}
inline ::tendermint::abci::ResponseFinalizeBlock* ListenFinalizeBlockRequest::release_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::abci::ResponseFinalizeBlock* released = _impl_.res_;
  _impl_.res_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::abci::ResponseFinalizeBlock* ListenFinalizeBlockRequest::unsafe_arena_release_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.res)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::tendermint::abci::ResponseFinalizeBlock* temp = _impl_.res_;
  _impl_.res_ = nullptr;
  return temp;
}
inline ::tendermint::abci::ResponseFinalizeBlock* ListenFinalizeBlockRequest::_internal_mutable_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::abci::ResponseFinalizeBlock>(GetArena());
    _impl_.res_ = reinterpret_cast<::tendermint::abci::ResponseFinalizeBlock*>(p);
  }
  return _impl_.res_;
}
inline ::tendermint::abci::ResponseFinalizeBlock* ListenFinalizeBlockRequest::mutable_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::tendermint::abci::ResponseFinalizeBlock* _msg = _internal_mutable_res();
  // @@protoc_insertion_point(field_mutable:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.res)
  return _msg;
}
inline void ListenFinalizeBlockRequest::set_allocated_res(::tendermint::abci::ResponseFinalizeBlock* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.res_ = reinterpret_cast<::tendermint::abci::ResponseFinalizeBlock*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.streaming.abci.ListenFinalizeBlockRequest.res)
}

// -------------------------------------------------------------------

// ListenFinalizeBlockResponse

// -------------------------------------------------------------------

// ListenCommitRequest

// int64 block_height = 1 [json_name = "blockHeight"];
inline void ListenCommitRequest::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = ::int64_t{0};
}
inline ::int64_t ListenCommitRequest::block_height() const {
  // @@protoc_insertion_point(field_get:cosmos.store.streaming.abci.ListenCommitRequest.block_height)
  return _internal_block_height();
}
inline void ListenCommitRequest::set_block_height(::int64_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:cosmos.store.streaming.abci.ListenCommitRequest.block_height)
}
inline ::int64_t ListenCommitRequest::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void ListenCommitRequest::_internal_set_block_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// .tendermint.abci.ResponseCommit res = 2 [json_name = "res"];
inline bool ListenCommitRequest::has_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.res_ != nullptr);
  return value;
}
inline const ::tendermint::abci::ResponseCommit& ListenCommitRequest::_internal_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::tendermint::abci::ResponseCommit* p = _impl_.res_;
  return p != nullptr ? *p : reinterpret_cast<const ::tendermint::abci::ResponseCommit&>(::tendermint::abci::_ResponseCommit_default_instance_);
}
inline const ::tendermint::abci::ResponseCommit& ListenCommitRequest::res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.streaming.abci.ListenCommitRequest.res)
  return _internal_res();
}
inline void ListenCommitRequest::unsafe_arena_set_allocated_res(::tendermint::abci::ResponseCommit* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.res_);
  }
  _impl_.res_ = reinterpret_cast<::tendermint::abci::ResponseCommit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cosmos.store.streaming.abci.ListenCommitRequest.res)
}
inline ::tendermint::abci::ResponseCommit* ListenCommitRequest::release_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::abci::ResponseCommit* released = _impl_.res_;
  _impl_.res_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::tendermint::abci::ResponseCommit* ListenCommitRequest::unsafe_arena_release_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cosmos.store.streaming.abci.ListenCommitRequest.res)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::tendermint::abci::ResponseCommit* temp = _impl_.res_;
  _impl_.res_ = nullptr;
  return temp;
}
inline ::tendermint::abci::ResponseCommit* ListenCommitRequest::_internal_mutable_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::tendermint::abci::ResponseCommit>(GetArena());
    _impl_.res_ = reinterpret_cast<::tendermint::abci::ResponseCommit*>(p);
  }
  return _impl_.res_;
}
inline ::tendermint::abci::ResponseCommit* ListenCommitRequest::mutable_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::tendermint::abci::ResponseCommit* _msg = _internal_mutable_res();
  // @@protoc_insertion_point(field_mutable:cosmos.store.streaming.abci.ListenCommitRequest.res)
  return _msg;
}
inline void ListenCommitRequest::set_allocated_res(::tendermint::abci::ResponseCommit* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.res_ = reinterpret_cast<::tendermint::abci::ResponseCommit*>(value);
  // @@protoc_insertion_point(field_set_allocated:cosmos.store.streaming.abci.ListenCommitRequest.res)
}

// repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];
inline int ListenCommitRequest::_internal_change_set_size() const {
  return _internal_change_set().size();
}
inline int ListenCommitRequest::change_set_size() const {
  return _internal_change_set_size();
}
inline ::cosmos::store::v1beta1::StoreKVPair* ListenCommitRequest::mutable_change_set(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cosmos.store.streaming.abci.ListenCommitRequest.change_set)
  return _internal_mutable_change_set()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>* ListenCommitRequest::mutable_change_set()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cosmos.store.streaming.abci.ListenCommitRequest.change_set)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_change_set();
}
inline const ::cosmos::store::v1beta1::StoreKVPair& ListenCommitRequest::change_set(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cosmos.store.streaming.abci.ListenCommitRequest.change_set)
  return _internal_change_set().Get(index);
}
inline ::cosmos::store::v1beta1::StoreKVPair* ListenCommitRequest::add_change_set() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cosmos::store::v1beta1::StoreKVPair* _add = _internal_mutable_change_set()->Add();
  // @@protoc_insertion_point(field_add:cosmos.store.streaming.abci.ListenCommitRequest.change_set)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>& ListenCommitRequest::change_set() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cosmos.store.streaming.abci.ListenCommitRequest.change_set)
  return _internal_change_set();
}
inline const ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>&
ListenCommitRequest::_internal_change_set() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_set_;
}
inline ::google::protobuf::RepeatedPtrField<::cosmos::store::v1beta1::StoreKVPair>*
ListenCommitRequest::_internal_mutable_change_set() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.change_set_;
}

// -------------------------------------------------------------------

// ListenCommitResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace abci
}  // namespace streaming
}  // namespace store
}  // namespace cosmos


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto_2epb_2eh
