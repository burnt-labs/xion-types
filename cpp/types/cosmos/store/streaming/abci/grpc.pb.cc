// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cosmos/store/streaming/abci/grpc.proto
// Protobuf C++ Version: 5.29.4

#include "cosmos/store/streaming/abci/grpc.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cosmos {
namespace store {
namespace streaming {
namespace abci {
              template <typename>
PROTOBUF_CONSTEXPR ListenFinalizeBlockResponse::ListenFinalizeBlockResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListenFinalizeBlockResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListenFinalizeBlockResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListenFinalizeBlockResponseDefaultTypeInternal() {}
  union {
    ListenFinalizeBlockResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListenFinalizeBlockResponseDefaultTypeInternal _ListenFinalizeBlockResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ListenCommitResponse::ListenCommitResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ListenCommitResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListenCommitResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListenCommitResponseDefaultTypeInternal() {}
  union {
    ListenCommitResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListenCommitResponseDefaultTypeInternal _ListenCommitResponse_default_instance_;

inline constexpr ListenCommitRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        change_set_{},
        res_{nullptr},
        block_height_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ListenCommitRequest::ListenCommitRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListenCommitRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListenCommitRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListenCommitRequestDefaultTypeInternal() {}
  union {
    ListenCommitRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListenCommitRequestDefaultTypeInternal _ListenCommitRequest_default_instance_;

inline constexpr ListenFinalizeBlockRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        req_{nullptr},
        res_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ListenFinalizeBlockRequest::ListenFinalizeBlockRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListenFinalizeBlockRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListenFinalizeBlockRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListenFinalizeBlockRequestDefaultTypeInternal() {}
  union {
    ListenFinalizeBlockRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListenFinalizeBlockRequestDefaultTypeInternal _ListenFinalizeBlockRequest_default_instance_;
}  // namespace abci
}  // namespace streaming
}  // namespace store
}  // namespace cosmos
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto = nullptr;
const ::uint32_t
    TableStruct_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenFinalizeBlockRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenFinalizeBlockRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenFinalizeBlockRequest, _impl_.req_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenFinalizeBlockRequest, _impl_.res_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenFinalizeBlockResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenCommitRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenCommitRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenCommitRequest, _impl_.block_height_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenCommitRequest, _impl_.res_),
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenCommitRequest, _impl_.change_set_),
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::cosmos::store::streaming::abci::ListenCommitResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::cosmos::store::streaming::abci::ListenFinalizeBlockRequest)},
        {12, -1, -1, sizeof(::cosmos::store::streaming::abci::ListenFinalizeBlockResponse)},
        {20, 31, -1, sizeof(::cosmos::store::streaming::abci::ListenCommitRequest)},
        {34, -1, -1, sizeof(::cosmos::store::streaming::abci::ListenCommitResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::cosmos::store::streaming::abci::_ListenFinalizeBlockRequest_default_instance_._instance,
    &::cosmos::store::streaming::abci::_ListenFinalizeBlockResponse_default_instance_._instance,
    &::cosmos::store::streaming::abci::_ListenCommitRequest_default_instance_._instance,
    &::cosmos::store::streaming::abci::_ListenCommitResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n&cosmos/store/streaming/abci/grpc.proto"
    "\022\033cosmos.store.streaming.abci\032\033tendermin"
    "t/abci/types.proto\032$cosmos/store/v1beta1"
    "/listening.proto\"\217\001\n\032ListenFinalizeBlock"
    "Request\0227\n\003req\030\001 \001(\0132%.tendermint.abci.R"
    "equestFinalizeBlockR\003req\0228\n\003res\030\002 \001(\0132&."
    "tendermint.abci.ResponseFinalizeBlockR\003r"
    "es\"\035\n\033ListenFinalizeBlockResponse\"\255\001\n\023Li"
    "stenCommitRequest\022!\n\014block_height\030\001 \001(\003R"
    "\013blockHeight\0221\n\003res\030\002 \001(\0132\037.tendermint.a"
    "bci.ResponseCommitR\003res\022@\n\nchange_set\030\003 "
    "\003(\0132!.cosmos.store.v1beta1.StoreKVPairR\t"
    "changeSet\"\026\n\024ListenCommitResponse2\225\002\n\023AB"
    "CIListenerService\022\210\001\n\023ListenFinalizeBloc"
    "k\0227.cosmos.store.streaming.abci.ListenFi"
    "nalizeBlockRequest\0328.cosmos.store.stream"
    "ing.abci.ListenFinalizeBlockResponse\022s\n\014"
    "ListenCommit\0220.cosmos.store.streaming.ab"
    "ci.ListenCommitRequest\0321.cosmos.store.st"
    "reaming.abci.ListenCommitResponseB#Z!cos"
    "mossdk.io/store/streaming/abcib\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto_deps[2] =
    {
        &::descriptor_table_cosmos_2fstore_2fv1beta1_2flistening_2eproto,
        &::descriptor_table_tendermint_2fabci_2ftypes_2eproto,
};
static ::absl::once_flag descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto = {
    false,
    false,
    838,
    descriptor_table_protodef_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto,
    "cosmos/store/streaming/abci/grpc.proto",
    &descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto_once,
    descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto_deps,
    2,
    4,
    schemas,
    file_default_instances,
    TableStruct_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto::offsets,
    file_level_enum_descriptors_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto,
    file_level_service_descriptors_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto,
};
namespace cosmos {
namespace store {
namespace streaming {
namespace abci {
// ===================================================================

class ListenFinalizeBlockRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ListenFinalizeBlockRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_._has_bits_);
};

void ListenFinalizeBlockRequest::clear_req() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.req_ != nullptr) _impl_.req_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ListenFinalizeBlockRequest::clear_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.res_ != nullptr) _impl_.res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ListenFinalizeBlockRequest::ListenFinalizeBlockRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListenFinalizeBlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::store::streaming::abci::ListenFinalizeBlockRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ListenFinalizeBlockRequest::ListenFinalizeBlockRequest(
    ::google::protobuf::Arena* arena,
    const ListenFinalizeBlockRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListenFinalizeBlockRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.req_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFinalizeBlock>(
                              arena, *from._impl_.req_)
                        : nullptr;
  _impl_.res_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFinalizeBlock>(
                              arena, *from._impl_.res_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListenFinalizeBlockRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ListenFinalizeBlockRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, req_),
           0,
           offsetof(Impl_, res_) -
               offsetof(Impl_, req_) +
               sizeof(Impl_::res_));
}
ListenFinalizeBlockRequest::~ListenFinalizeBlockRequest() {
  // @@protoc_insertion_point(destructor:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
  SharedDtor(*this);
}
inline void ListenFinalizeBlockRequest::SharedDtor(MessageLite& self) {
  ListenFinalizeBlockRequest& this_ = static_cast<ListenFinalizeBlockRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.req_;
  delete this_._impl_.res_;
  this_._impl_.~Impl_();
}

inline void* ListenFinalizeBlockRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListenFinalizeBlockRequest(arena);
}
constexpr auto ListenFinalizeBlockRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListenFinalizeBlockRequest),
                                            alignof(ListenFinalizeBlockRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListenFinalizeBlockRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListenFinalizeBlockRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListenFinalizeBlockRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListenFinalizeBlockRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListenFinalizeBlockRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListenFinalizeBlockRequest>(), &ListenFinalizeBlockRequest::ByteSizeLong,
            &ListenFinalizeBlockRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_._cached_size_),
        false,
    },
    &ListenFinalizeBlockRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListenFinalizeBlockRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> ListenFinalizeBlockRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::store::streaming::abci::ListenFinalizeBlockRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .tendermint.abci.ResponseFinalizeBlock res = 2 [json_name = "res"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_.res_)}},
    // .tendermint.abci.RequestFinalizeBlock req = 1 [json_name = "req"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_.req_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .tendermint.abci.RequestFinalizeBlock req = 1 [json_name = "req"];
    {PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_.req_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .tendermint.abci.ResponseFinalizeBlock res = 2 [json_name = "res"];
    {PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_.res_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::RequestFinalizeBlock>()},
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseFinalizeBlock>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListenFinalizeBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.req_ != nullptr);
      _impl_.req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.res_ != nullptr);
      _impl_.res_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListenFinalizeBlockRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListenFinalizeBlockRequest& this_ = static_cast<const ListenFinalizeBlockRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListenFinalizeBlockRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListenFinalizeBlockRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.RequestFinalizeBlock req = 1 [json_name = "req"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.req_, this_._impl_.req_->GetCachedSize(), target,
                stream);
          }

          // .tendermint.abci.ResponseFinalizeBlock res = 2 [json_name = "res"];
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.res_, this_._impl_.res_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListenFinalizeBlockRequest::ByteSizeLong(const MessageLite& base) {
          const ListenFinalizeBlockRequest& this_ = static_cast<const ListenFinalizeBlockRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListenFinalizeBlockRequest::ByteSizeLong() const {
          const ListenFinalizeBlockRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .tendermint.abci.RequestFinalizeBlock req = 1 [json_name = "req"];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.req_);
            }
            // .tendermint.abci.ResponseFinalizeBlock res = 2 [json_name = "res"];
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.res_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListenFinalizeBlockRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListenFinalizeBlockRequest*>(&to_msg);
  auto& from = static_cast<const ListenFinalizeBlockRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.req_ != nullptr);
      if (_this->_impl_.req_ == nullptr) {
        _this->_impl_.req_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::RequestFinalizeBlock>(arena, *from._impl_.req_);
      } else {
        _this->_impl_.req_->MergeFrom(*from._impl_.req_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.res_ != nullptr);
      if (_this->_impl_.res_ == nullptr) {
        _this->_impl_.res_ =
            ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseFinalizeBlock>(arena, *from._impl_.res_);
      } else {
        _this->_impl_.res_->MergeFrom(*from._impl_.res_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListenFinalizeBlockRequest::CopyFrom(const ListenFinalizeBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.store.streaming.abci.ListenFinalizeBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListenFinalizeBlockRequest::InternalSwap(ListenFinalizeBlockRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_.res_)
      + sizeof(ListenFinalizeBlockRequest::_impl_.res_)
      - PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockRequest, _impl_.req_)>(
          reinterpret_cast<char*>(&_impl_.req_),
          reinterpret_cast<char*>(&other->_impl_.req_));
}

::google::protobuf::Metadata ListenFinalizeBlockRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListenFinalizeBlockResponse::_Internal {
 public:
};

ListenFinalizeBlockResponse::ListenFinalizeBlockResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:cosmos.store.streaming.abci.ListenFinalizeBlockResponse)
}
ListenFinalizeBlockResponse::ListenFinalizeBlockResponse(
    ::google::protobuf::Arena* arena,
    const ListenFinalizeBlockResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListenFinalizeBlockResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cosmos.store.streaming.abci.ListenFinalizeBlockResponse)
}

inline void* ListenFinalizeBlockResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListenFinalizeBlockResponse(arena);
}
constexpr auto ListenFinalizeBlockResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListenFinalizeBlockResponse),
                                            alignof(ListenFinalizeBlockResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListenFinalizeBlockResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListenFinalizeBlockResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListenFinalizeBlockResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListenFinalizeBlockResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListenFinalizeBlockResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListenFinalizeBlockResponse>(), &ListenFinalizeBlockResponse::ByteSizeLong,
            &ListenFinalizeBlockResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListenFinalizeBlockResponse, _impl_._cached_size_),
        false,
    },
    &ListenFinalizeBlockResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListenFinalizeBlockResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListenFinalizeBlockResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::store::streaming::abci::ListenFinalizeBlockResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListenFinalizeBlockResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListenCommitRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ListenCommitRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_._has_bits_);
};

void ListenCommitRequest::clear_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.res_ != nullptr) _impl_.res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void ListenCommitRequest::clear_change_set() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_set_.Clear();
}
ListenCommitRequest::ListenCommitRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.store.streaming.abci.ListenCommitRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListenCommitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::cosmos::store::streaming::abci::ListenCommitRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        change_set_{visibility, arena, from.change_set_} {}

ListenCommitRequest::ListenCommitRequest(
    ::google::protobuf::Arena* arena,
    const ListenCommitRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListenCommitRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.res_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCommit>(
                              arena, *from._impl_.res_)
                        : nullptr;
  _impl_.block_height_ = from._impl_.block_height_;

  // @@protoc_insertion_point(copy_constructor:cosmos.store.streaming.abci.ListenCommitRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListenCommitRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        change_set_{visibility, arena} {}

inline void ListenCommitRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, res_),
           0,
           offsetof(Impl_, block_height_) -
               offsetof(Impl_, res_) +
               sizeof(Impl_::block_height_));
}
ListenCommitRequest::~ListenCommitRequest() {
  // @@protoc_insertion_point(destructor:cosmos.store.streaming.abci.ListenCommitRequest)
  SharedDtor(*this);
}
inline void ListenCommitRequest::SharedDtor(MessageLite& self) {
  ListenCommitRequest& this_ = static_cast<ListenCommitRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.res_;
  this_._impl_.~Impl_();
}

inline void* ListenCommitRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListenCommitRequest(arena);
}
constexpr auto ListenCommitRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.change_set_) +
          decltype(ListenCommitRequest::_impl_.change_set_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ListenCommitRequest), alignof(ListenCommitRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListenCommitRequest::PlacementNew_,
                                 sizeof(ListenCommitRequest),
                                 alignof(ListenCommitRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListenCommitRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListenCommitRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListenCommitRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ListenCommitRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListenCommitRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ListenCommitRequest>(), &ListenCommitRequest::ByteSizeLong,
            &ListenCommitRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_._cached_size_),
        false,
    },
    &ListenCommitRequest::kDescriptorMethods,
    &descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListenCommitRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> ListenCommitRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::store::streaming::abci::ListenCommitRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 block_height = 1 [json_name = "blockHeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ListenCommitRequest, _impl_.block_height_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.block_height_)}},
    // .tendermint.abci.ResponseCommit res = 2 [json_name = "res"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.res_)}},
    // repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.change_set_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 block_height = 1 [json_name = "blockHeight"];
    {PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.block_height_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .tendermint.abci.ResponseCommit res = 2 [json_name = "res"];
    {PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.res_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];
    {PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.change_set_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::tendermint::abci::ResponseCommit>()},
    {::_pbi::TcParser::GetTable<::cosmos::store::v1beta1::StoreKVPair>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ListenCommitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.store.streaming.abci.ListenCommitRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.change_set_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.res_ != nullptr);
    _impl_.res_->Clear();
  }
  _impl_.block_height_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ListenCommitRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ListenCommitRequest& this_ = static_cast<const ListenCommitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ListenCommitRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ListenCommitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:cosmos.store.streaming.abci.ListenCommitRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 block_height = 1 [json_name = "blockHeight"];
          if (this_._internal_block_height() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_block_height(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .tendermint.abci.ResponseCommit res = 2 [json_name = "res"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.res_, this_._impl_.res_->GetCachedSize(), target,
                stream);
          }

          // repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_change_set_size());
               i < n; i++) {
            const auto& repfield = this_._internal_change_set().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:cosmos.store.streaming.abci.ListenCommitRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ListenCommitRequest::ByteSizeLong(const MessageLite& base) {
          const ListenCommitRequest& this_ = static_cast<const ListenCommitRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ListenCommitRequest::ByteSizeLong() const {
          const ListenCommitRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:cosmos.store.streaming.abci.ListenCommitRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .cosmos.store.v1beta1.StoreKVPair change_set = 3 [json_name = "changeSet"];
            {
              total_size += 1UL * this_._internal_change_set_size();
              for (const auto& msg : this_._internal_change_set()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .tendermint.abci.ResponseCommit res = 2 [json_name = "res"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.res_);
            }
          }
           {
            // int64 block_height = 1 [json_name = "blockHeight"];
            if (this_._internal_block_height() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_block_height());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ListenCommitRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListenCommitRequest*>(&to_msg);
  auto& from = static_cast<const ListenCommitRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cosmos.store.streaming.abci.ListenCommitRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_change_set()->MergeFrom(
      from._internal_change_set());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.res_ != nullptr);
    if (_this->_impl_.res_ == nullptr) {
      _this->_impl_.res_ =
          ::google::protobuf::Message::CopyConstruct<::tendermint::abci::ResponseCommit>(arena, *from._impl_.res_);
    } else {
      _this->_impl_.res_->MergeFrom(*from._impl_.res_);
    }
  }
  if (from._internal_block_height() != 0) {
    _this->_impl_.block_height_ = from._impl_.block_height_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListenCommitRequest::CopyFrom(const ListenCommitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.store.streaming.abci.ListenCommitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListenCommitRequest::InternalSwap(ListenCommitRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.change_set_.InternalSwap(&other->_impl_.change_set_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.block_height_)
      + sizeof(ListenCommitRequest::_impl_.block_height_)
      - PROTOBUF_FIELD_OFFSET(ListenCommitRequest, _impl_.res_)>(
          reinterpret_cast<char*>(&_impl_.res_),
          reinterpret_cast<char*>(&other->_impl_.res_));
}

::google::protobuf::Metadata ListenCommitRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListenCommitResponse::_Internal {
 public:
};

ListenCommitResponse::ListenCommitResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:cosmos.store.streaming.abci.ListenCommitResponse)
}
ListenCommitResponse::ListenCommitResponse(
    ::google::protobuf::Arena* arena,
    const ListenCommitResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListenCommitResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:cosmos.store.streaming.abci.ListenCommitResponse)
}

inline void* ListenCommitResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ListenCommitResponse(arena);
}
constexpr auto ListenCommitResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ListenCommitResponse),
                                            alignof(ListenCommitResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ListenCommitResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ListenCommitResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ListenCommitResponse::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ListenCommitResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ListenCommitResponse::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ListenCommitResponse>(), &ListenCommitResponse::ByteSizeLong,
            &ListenCommitResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ListenCommitResponse, _impl_._cached_size_),
        false,
    },
    &ListenCommitResponse::kDescriptorMethods,
    &descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ListenCommitResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ListenCommitResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cosmos::store::streaming::abci::ListenCommitResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ListenCommitResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace abci
}  // namespace streaming
}  // namespace store
}  // namespace cosmos
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_cosmos_2fstore_2fstreaming_2fabci_2fgrpc_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
